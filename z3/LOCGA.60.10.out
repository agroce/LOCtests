Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, postCover=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.36546.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  [D = 0, T = False]
self.p_model[0] =  []
self.p_model[1] =  [D = 0, T = False]
self.p_model[1] =  [D = 0, T = False]
self.p_model[1] =  [D = 0, T = False]
self.p_model[1] =  [D = 0, T = False]
self.p_model[0] =  []
self.p_model[1] =  [D = 0, T = False]
self.p_model[0] =  []
self.p_model[1] =  [D = 0, T = False]
self.p_model[1] =  [S = False]
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  [P = True]
self.p_model[1] =  [P = True]
self.p_model[1] =  [P = True]
self.p_model[1] =  [P = True]
self.p_model[0] =  [P = True]
self.p_model[0] =  [P = True]
self.p_model[0] =  [P = True]
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
TEST #23 STEP #36 (0:00:30.009029) Tue Jul 25 12:34:43 2017 [ 1927 stmts 2193 branches ] 2236 TOTAL ACTIONS (74.5109082532/s)
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  [Q = False]
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[2] =  [T = False]
self.p_model[2] =  [T = False]
self.p_model[2] =  [T = False]
self.p_model[1] =  [T = False]
self.p_model[2] =  [T = False]
self.p_model[0] =  [A = 2]
self.p_model[1] =  []
self.p_model[2] =  [T = False]
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  [A = 2, A!34 = 1, T = False]
self.p_model[2] =  [A = 2, A!34 = 1, T = False]
self.p_model[2] =  [A = 2, A!34 = 1, T = False]
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  [T = False]
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  [A = 0, P = True]
self.p_model[2] =  [A = 0, P = True]
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  [A = 0, P = True]
self.p_model[2] =  [A = 0, P = True]
self.p_model[1] =  [Q = True]
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
self.p_model[2] =  [A = 0]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 97
STOPPING TESTING DUE TO TIMEOUT
16.9451450189 PERCENT COVERED
61.4037060738 TOTAL RUNTIME
44 EXECUTED
4387 TOTAL TEST OPERATIONS
9.33272838593 TIME SPENT EXECUTING TEST OPERATIONS
49.2150845528 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00546264648438 TIME SPENT CHECKING PROPERTIES
9.33819103241 TOTAL TIME SPENT RUNNING SUT
0.177301168442 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
0 FAILED
0 REPEATS OF FAILURES
0 ACTUAL DISTINCT FAILURES

2195 BRANCHES COVERED
1928 STATEMENTS COVERED
