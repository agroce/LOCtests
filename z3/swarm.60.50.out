Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, postCover=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.39699.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[1] =  []
TEST #68 STEP #51 (0:00:30.002531) Tue Jul 25 16:40:26 2017 [ 1758 stmts 1945 branches ] 6751 TOTAL ACTIONS (225.014351024/s)
self.p_model[0] =  []
WARNING: DEADLOCK (NO ENABLED ACTIONS)
TERMINATING TEST DUE TO NO ENABLED ACTIONS, AT LENGTH 97
WARNING: DEADLOCK (NO ENABLED ACTIONS)
TERMINATING TEST DUE TO NO ENABLED ACTIONS, AT LENGTH 59
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[0] =  []
WARNING: DEADLOCK (NO ENABLED ACTIONS)
TERMINATING TEST DUE TO NO ENABLED ACTIONS, AT LENGTH 60
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[2] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[1] =  []
self.p_model[0] =  []
self.p_model[1] =  []
self.p_model[2] =  []
self.p_model[1] =  [R = True]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 78
STOPPING TESTING DUE TO TIMEOUT
16.7559899117 PERCENT COVERED
62.0402078629 TOTAL RUNTIME
131 EXECUTED
12994 TOTAL TEST OPERATIONS
31.4993593693 TIME SPENT EXECUTING TEST OPERATIONS
27.0360205173 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0199880599976 TIME SPENT CHECKING PROPERTIES
31.5193474293 TOTAL TIME SPENT RUNNING SUT
0.346870422363 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
0 FAILED
0 REPEATS OF FAILURES
0 ACTUAL DISTINCT FAILURES

2163 BRANCHES COVERED
1908 STATEMENTS COVERED
