Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.15236.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #56 STEP #80 (0:00:30.007038) Tue Nov 21 20:38:42 2017 [ 228 stmts 295 branches ] (no cov+ for 10 tests) 5580 TOTAL ACTIONS (185.956373913/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a20e878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 31387, in act869
    self.p_time[5] = self.p_time[2].to(self.p_zone[4])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 37 steps

SAVING TEST AS failure.15236.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone4 = 'Turkey'                                                         # STEP 0
ACTION: zone4 = 'Turkey'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Turkey' : <type 'str'>
==================================================
time1 = arrow.now(zone4)                                                 # STEP 1
ACTION: time1 = arrow.now(zone4) 
zone4 = 'Turkey' : <type 'str'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time1.to(zone4)                                                  # STEP 2
ACTION: time3 = time1.to(zone4) 
zone4 = 'Turkey' : <type 'str'>
time1 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Eastern'                                                     # STEP 3
ACTION: zone4 = 'US/Eastern'  
zone4 = 'Turkey' : <type 'str'>
=> zone4 = 'US/Eastern' : <type 'str'>
==================================================
time5 = arrow.now(zone4)                                                 # STEP 4
ACTION: time5 = arrow.now(zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T23:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 = 0                                                                 # STEP 5
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
time1 = time3.replace(tzinfo=zone4)                                      # STEP 6
ACTION: time1 = time3.replace(tzinfo=zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(hours=val9)                                                  # STEP 7
ACTION: time3.shift(hours=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(hours=val9)                                                  # STEP 8
ACTION: time3.shift(hours=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(months=val9)                                                 # STEP 9
ACTION: time1.shift(months=val9) 
val9 = 0 : <type 'int'>
time1 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val9)                                                # STEP 10
ACTION: time3.shift(months=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(seconds=val9)                                     # STEP 11
ACTION: time1 = time3.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time1.replace(seconds=val9)                                     # STEP 12
ACTION: time6 = time1.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time1 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val9)                                               # STEP 13
ACTION: time3.shift(seconds=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.get(val9)                                                 # STEP 14
ACTION: time3 = arrow.get(val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(hours=val9)                                       # STEP 15
ACTION: time4 = time5.replace(hours=val9) 
val9 = 0 : <type 'int'>
time5 = <Arrow [2017-11-21T23:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [2017-11-21T23:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time6.replace(tzinfo=zone4)                                     # STEP 16
ACTION: time1 = time6.replace(tzinfo=zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time6 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time1.replace(hours=val9)                                       # STEP 17
ACTION: time0 = time1.replace(hours=val9) 
val9 = 0 : <type 'int'>
time1 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val9)                                               # STEP 18
ACTION: time3.shift(seconds=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 += 1                                                               # STEP 19
ACTION: val9 += 1 
val9 = 0 : <type 'int'>
=> val9 = 1 : <type 'int'>
==================================================
time8 = time4.replace(hours=val9)                                       # STEP 20
ACTION: time8 = time4.replace(hours=val9) 
val9 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T23:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-22T00:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = arrow.now()                                                     # STEP 21
ACTION: time1 = arrow.now() 
time1 = <Arrow [2017-11-22T07:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-21T20:39:02.078815-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'pt'                                                        # STEP 22
ACTION: locale0 =  u'pt' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'pt' : <type 'unicode'>
==================================================
time7 = arrow.now(zone4)                                                # STEP 23
ACTION: time7 = arrow.now(zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T23:39:02.080622-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Eastern'                                                    # STEP 24
ACTION: zone3 = 'US/Eastern'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Eastern' : <type 'str'>
==================================================
time9 = time6.to(zone3)                                                 # STEP 25
ACTION: time9 = time6.to(zone3) 
zone3 = 'US/Eastern' : <type 'str'>
time6 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T23:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.humanize(locale=locale0)                                          # STEP 26
ACTION: time1.humanize(locale=locale0) 
locale0 = u'pt' : <type 'unicode'>
time1 = <Arrow [2017-11-21T20:39:02.078815-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Pacific'                                                    # STEP 27
ACTION: zone1 = 'US/Pacific'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Pacific' : <type 'str'>
==================================================
time4 = time3.replace(tzinfo=zone4)                                     # STEP 28
ACTION: time4 = time3.replace(tzinfo=zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-11-21T23:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1970-01-01T00:00:00-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Poland'                                                        # STEP 29
ACTION: zone3 = 'Poland'  
zone3 = 'US/Eastern' : <type 'str'>
=> zone3 = 'Poland' : <type 'str'>
==================================================
time5 = time3.replace(year=val9)                                        # STEP 30
ACTION: time5 = time3.replace(year=val9) 
val9 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-21T23:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(hours=val9)                                                 # STEP 31
ACTION: time9.shift(hours=val9) 
val9 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T23:39:02.061869-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(seconds=val9)                                               # STEP 32
ACTION: time6.shift(seconds=val9) 
val9 = 1 : <type 'int'>
time6 = <Arrow [2017-11-22T07:39:02.061869+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(weeks=val9)                                                 # STEP 33
ACTION: time8.shift(weeks=val9) 
val9 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T00:39:02.064649-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.replace(month=val9)                                       # STEP 34
ACTION: time2 = time5.replace(month=val9) 
val9 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(minutes=val9)                                               # STEP 35
ACTION: time3.shift(minutes=val9) 
val9 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.to(zone4)                                                 # STEP 36
ACTION: time5 = time2.to(zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2288c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 31387, in act869
    self.p_time[5] = self.p_time[2].to(self.p_zone[4])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 9
STOPPING TESTING DUE TO TIMEOUT
20.6161137441 PERCENT COVERED
60.1820709705 TOTAL RUNTIME
113 EXECUTED
11146 TOTAL TEST OPERATIONS
7.8865814209 TIME SPENT EXECUTING TEST OPERATIONS
51.8097810745 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00797057151794 TIME SPENT CHECKING PROPERTIES
7.89455199242 TOTAL TIME SPENT RUNNING SUT
0.139762639999 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
zone4 = 'Turkey'                                                         # STEP 0
time1 = arrow.now(zone4)                                                 # STEP 1
time3 = time1.to(zone4)                                                  # STEP 2
zone4 = 'US/Eastern'                                                     # STEP 3
time5 = arrow.now(zone4)                                                 # STEP 4
val9 = 0                                                                 # STEP 5
time1 = time3.replace(tzinfo=zone4)                                      # STEP 6
time3.shift(hours=val9)                                                  # STEP 7
time3.shift(hours=val9)                                                  # STEP 8
time1.shift(months=val9)                                                 # STEP 9
time3.shift(months=val9)                                                # STEP 10
time1 = time3.replace(seconds=val9)                                     # STEP 11
time6 = time1.replace(seconds=val9)                                     # STEP 12
time3.shift(seconds=val9)                                               # STEP 13
time3 = arrow.get(val9)                                                 # STEP 14
time4 = time5.replace(hours=val9)                                       # STEP 15
time1 = time6.replace(tzinfo=zone4)                                     # STEP 16
time0 = time1.replace(hours=val9)                                       # STEP 17
time3.shift(seconds=val9)                                               # STEP 18
val9 += 1                                                               # STEP 19
time8 = time4.replace(hours=val9)                                       # STEP 20
time1 = arrow.now()                                                     # STEP 21
locale0 =  u'pt'                                                        # STEP 22
time7 = arrow.now(zone4)                                                # STEP 23
zone3 = 'US/Eastern'                                                    # STEP 24
time9 = time6.to(zone3)                                                 # STEP 25
time1.humanize(locale=locale0)                                          # STEP 26
zone1 = 'US/Pacific'                                                    # STEP 27
time4 = time3.replace(tzinfo=zone4)                                     # STEP 28
zone3 = 'Poland'                                                        # STEP 29
time5 = time3.replace(year=val9)                                        # STEP 30
time9.shift(hours=val9)                                                 # STEP 31
time6.shift(seconds=val9)                                               # STEP 32
time8.shift(weeks=val9)                                                 # STEP 33
time2 = time5.replace(month=val9)                                       # STEP 34
time3.shift(minutes=val9)                                               # STEP 35
time5 = time2.to(zone4)                                                 # STEP 36
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2288c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 31387, in act869
    self.p_time[5] = self.p_time[2].to(self.p_zone[4])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
316 BRANCHES COVERED
241 STATEMENTS COVERED
