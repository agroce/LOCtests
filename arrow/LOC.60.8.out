Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13627.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1087c30e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304070, in act6766
    self.p_time[1].shift(years=self.p_val[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 84 steps

SAVING TEST AS failure.13627.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
time2 = arrow.now()                                                      # STEP 0
ACTION: time2 = arrow.now() 
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.format()                                                           # STEP 1
ACTION: time2.format() 
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.format()                                                           # STEP 2
ACTION: time2.format() 
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.format()                                                           # STEP 3
ACTION: time2.format() 
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.format()                                                           # STEP 4
ACTION: time2.format() 
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.timestamp                                                          # STEP 5
ACTION: time2.timestamp 
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 = 0                                                                 # STEP 6
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
time2.shift(months=val7)                                                 # STEP 7
ACTION: time2.shift(months=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Mountain'                                                    # STEP 8
ACTION: zone4 = 'US/Mountain'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Mountain' : <type 'str'>
==================================================
time4 = time2.to(zone4)                                                  # STEP 9
ACTION: time4 = time2.to(zone4) 
zone4 = 'US/Mountain' : <type 'str'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [2017-11-21T14:26:53.400536-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Etc/Greenwich'                                                 # STEP 10
ACTION: zone1 = 'Etc/Greenwich'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone4 = 'US/Alaska'                                                     # STEP 11
ACTION: zone4 = 'US/Alaska'  
zone4 = 'US/Mountain' : <type 'str'>
=> zone4 = 'US/Alaska' : <type 'str'>
==================================================
time2.shift(seconds=val7)                                               # STEP 12
ACTION: time2.shift(seconds=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Mountain'                                                   # STEP 13
ACTION: zone2 = 'US/Mountain'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Mountain' : <type 'str'>
==================================================
zone0 = 'US/Mountain'                                                   # STEP 14
ACTION: zone0 = 'US/Mountain'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Mountain' : <type 'str'>
==================================================
time2.shift(months=val7)                                                # STEP 15
ACTION: time2.shift(months=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Poland'                                                        # STEP 16
ACTION: zone3 = 'Poland'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Poland' : <type 'str'>
==================================================
time2.shift(years=val7)                                                 # STEP 17
ACTION: time2.shift(years=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(minutes=val7)                                               # STEP 18
ACTION: time4.shift(minutes=val7) 
val7 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:26:53.400536-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(hours=val7)                                                 # STEP 19
ACTION: time4.shift(hours=val7) 
val7 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:26:53.400536-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(years=val7)                                                 # STEP 20
ACTION: time2.shift(years=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(weeks=val7)                                                 # STEP 21
ACTION: time2.shift(weeks=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time2.replace(hours=val7)                                       # STEP 22
ACTION: time8 = time2.replace(hours=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(weeks=val7)                                                 # STEP 23
ACTION: time4.shift(weeks=val7) 
val7 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:26:53.400536-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(seconds=val7)                                     # STEP 24
ACTION: time7 = time8.replace(seconds=val7) 
val7 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = arrow.now(zone1)                                                # STEP 25
ACTION: time1 = arrow.now(zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time2.replace(tzinfo=zone1)                                     # STEP 26
ACTION: time0 = time2.replace(tzinfo=zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T13:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time2.to(zone1)                                                 # STEP 27
ACTION: time6 = time2.to(zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Mountain'                                                   # STEP 28
ACTION: zone1 = 'US/Mountain'  
zone1 = 'Etc/Greenwich' : <type 'str'>
=> zone1 = 'US/Mountain' : <type 'str'>
==================================================
time4.shift(months=val7)                                                # STEP 29
ACTION: time4.shift(months=val7) 
val7 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:26:53.400536-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(weeks=val7)                                                 # STEP 30
ACTION: time0.shift(weeks=val7) 
val7 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T13:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(months=val7)                                                # STEP 31
ACTION: time8.shift(months=val7) 
val7 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val7)                                                 # STEP 32
ACTION: time7.shift(hours=val7) 
val7 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(hours=val7)                                                 # STEP 33
ACTION: time6.shift(hours=val7) 
val7 = 0 : <type 'int'>
time6 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val7)                                                 # STEP 34
ACTION: time7.shift(hours=val7) 
val7 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(hours=val7)                                                 # STEP 35
ACTION: time2.shift(hours=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.now(zone4)                                                # STEP 36
ACTION: time7 = arrow.now(zone4) 
zone4 = 'US/Alaska' : <type 'str'>
time7 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Alaska'                                                     # STEP 37
ACTION: zone4 = 'US/Alaska'  
zone4 = 'US/Alaska' : <type 'str'>
==================================================
val7 += 1                                                               # STEP 38
ACTION: val7 += 1 
val7 = 0 : <type 'int'>
=> val7 = 1 : <type 'int'>
==================================================
time2 = time1.replace(year=val7)                                        # STEP 39
ACTION: time2 = time1.replace(year=val7) 
val7 = 1 : <type 'int'>
time1 = <Arrow [2017-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val7)                                                 # STEP 40
ACTION: time7.shift(hours=val7) 
val7 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 = 0                                                                # STEP 41
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
time6.shift(hours=val7)                                                 # STEP 42
ACTION: time6.shift(hours=val7) 
val7 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(seconds=val7)                                               # STEP 43
ACTION: time2.shift(seconds=val7) 
val7 = 1 : <type 'int'>
time2 = <Arrow [0001-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.get(val1)                                                 # STEP 44
ACTION: time3 = arrow.get(val1) 
val1 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.format()                                                          # STEP 45
ACTION: time1.format() 
time1 = <Arrow [2017-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val1)                                                # STEP 46
ACTION: time7.shift(months=val1) 
val1 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time4.to(zone3)                                                 # STEP 47
ACTION: time4 = time4.to(zone3) 
zone3 = 'Poland' : <type 'str'>
time4 = <Arrow [2017-11-21T14:26:53.400536-07:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T22:26:53.400536+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val1)                                                # STEP 48
ACTION: time7.shift(months=val1) 
val1 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time1.replace(tzinfo=zone1)                                     # STEP 49
ACTION: time8 = time1.replace(tzinfo=zone1) 
zone1 = 'US/Mountain' : <type 'str'>
time1 = <Arrow [2017-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T13:26:53.400536-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T21:26:53.416804-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time6.replace(hours=val1)                                       # STEP 50
ACTION: time9 = time6.replace(hours=val1) 
val1 = 0 : <type 'int'>
time6 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(months=val1)                                                # STEP 51
ACTION: time1.shift(months=val1) 
val1 = 0 : <type 'int'>
time1 = <Arrow [2017-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(months=val7)                                                # STEP 52
ACTION: time4.shift(months=val7) 
val7 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T22:26:53.400536+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'en_be'                                                     # STEP 53
ACTION: locale4 =  u'en_be' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'en_be' : <type 'unicode'>
==================================================
time7.format()                                                          # STEP 54
ACTION: time7.format() 
time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time9.replace(minutes=val1)                                     # STEP 55
ACTION: time5 = time9.replace(minutes=val1) 
val1 = 0 : <type 'int'>
time9 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val7)                                               # STEP 56
ACTION: time3.shift(seconds=val7) 
val7 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val7)                                                # STEP 57
ACTION: time7.shift(months=val7) 
val7 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time3.replace(tzinfo=zone4)                                     # STEP 58
ACTION: time2 = time3.replace(tzinfo=zone4) 
zone4 = 'US/Alaska' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now(zone4)                                                # STEP 59
ACTION: time9 = arrow.now(zone4) 
zone4 = 'US/Alaska' : <type 'str'>
time9 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-21T12:26:53.442926-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time3.replace(tzinfo=zone2)                                     # STEP 60
ACTION: time7 = time3.replace(tzinfo=zone2) 
zone2 = 'US/Mountain' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T12:26:53.425011-09:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Alaska'                                                     # STEP 61
ACTION: zone1 = 'US/Alaska'  
zone1 = 'US/Mountain' : <type 'str'>
=> zone1 = 'US/Alaska' : <type 'str'>
==================================================
time0 = arrow.now()                                                     # STEP 62
ACTION: time0 = arrow.now() 
time0 = <Arrow [2017-11-21T13:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T13:26:53.445534-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = arrow.now()                                                     # STEP 63
ACTION: time1 = arrow.now() 
time1 = <Arrow [2017-11-21T21:26:53.416804+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-21T13:26:53.446395-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time4.replace(seconds=val7)                                     # STEP 64
ACTION: time6 = time4.replace(seconds=val7) 
val7 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T22:26:53.400536+01:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T21:26:53.400536+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T22:26:54.400536+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = arrow.now(zone0)                                                # STEP 65
ACTION: time4 = arrow.now(zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time4 = <Arrow [2017-11-21T22:26:53.400536+01:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T14:26:53.448524-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(tzinfo=zone0)                                     # STEP 66
ACTION: time3 = time7.replace(tzinfo=zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time7 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.format()                                                          # STEP 67
ACTION: time2.format() 
time2 = <Arrow [1970-01-01T00:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(hours=val1)                                                 # STEP 68
ACTION: time8.shift(hours=val1) 
val1 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T21:26:53.416804-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.to(zone4)                                                 # STEP 69
ACTION: time2 = time8.to(zone4) 
zone4 = 'US/Alaska' : <type 'str'>
time8 = <Arrow [2017-11-21T21:26:53.416804-07:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T19:26:53.416804-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Europe/Rome'                                                   # STEP 70
ACTION: zone2 = 'Europe/Rome'  
zone2 = 'US/Mountain' : <type 'str'>
=> zone2 = 'Europe/Rome' : <type 'str'>
==================================================
time7 = time1.replace(tzinfo=zone2)                                     # STEP 71
ACTION: time7 = time1.replace(tzinfo=zone2) 
zone2 = 'Europe/Rome' : <type 'str'>
time1 = <Arrow [2017-11-21T13:26:53.446395-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T13:26:53.446395+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time8.to(zone1)                                                 # STEP 72
ACTION: time8 = time8.to(zone1) 
zone1 = 'US/Alaska' : <type 'str'>
time8 = <Arrow [2017-11-21T21:26:53.416804-07:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T19:26:53.416804-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(years=val7)                                                 # STEP 73
ACTION: time4.shift(years=val7) 
val7 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T14:26:53.448524-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = arrow.get(val1)                                                 # STEP 74
ACTION: time1 = arrow.get(val1) 
val1 = 0 : <type 'int'>
time1 = <Arrow [2017-11-21T13:26:53.446395-08:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Australia/Brisbane'                                            # STEP 75
ACTION: zone4 = 'Australia/Brisbane'  
zone4 = 'US/Alaska' : <type 'str'>
=> zone4 = 'Australia/Brisbane' : <type 'str'>
==================================================
zone3 = 'Europe/Rome'                                                   # STEP 76
ACTION: zone3 = 'Europe/Rome'  
zone3 = 'Poland' : <type 'str'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
time4 = arrow.now()                                                     # STEP 77
ACTION: time4 = arrow.now() 
time4 = <Arrow [2017-11-21T14:26:53.448524-07:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T13:26:53.458996-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 -= 1                                                               # STEP 78
ACTION: val1 -= 1 
val1 = 0 : <type 'int'>
=> val1 = -1 : <type 'int'>
==================================================
time1.shift(seconds=val1)                                               # STEP 79
ACTION: time1.shift(seconds=val1) 
val1 = -1 : <type 'int'>
time1 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time4.replace(year=val7)                                        # STEP 80
ACTION: time1 = time4.replace(year=val7) 
val7 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T13:26:53.458996-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-11-21T13:26:53.458996-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Eastern'                                                    # STEP 81
ACTION: zone1 = 'US/Eastern'  
zone1 = 'US/Alaska' : <type 'str'>
=> zone1 = 'US/Eastern' : <type 'str'>
==================================================
zone0 = 'Asia/Samarkand'                                                # STEP 82
ACTION: zone0 = 'Asia/Samarkand'  
zone0 = 'US/Mountain' : <type 'str'>
=> zone0 = 'Asia/Samarkand' : <type 'str'>
==================================================
time1.shift(years=val1)                                                 # STEP 83
ACTION: time1.shift(years=val1) 
val1 = -1 : <type 'int'>
time1 = <Arrow [0001-11-21T13:26:53.458996-08:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1087cca70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304070, in act6766
    self.p_time[1].shift(years=self.p_val[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #56 STEP #27 (0:00:30.036114) Tue Nov 21 13:27:08 2017 [ 226 stmts 294 branches ] (no cov+ for 5 tests) 5511 TOTAL ACTIONS (183.479127964/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 16
STOPPING TESTING DUE TO TIMEOUT
19.2535545024 PERCENT COVERED
60.2028470039 TOTAL RUNTIME
110 EXECUTED
10900 TOTAL TEST OPERATIONS
7.78259754181 TIME SPENT EXECUTING TEST OPERATIONS
51.9083178043 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00773215293884 TIME SPENT CHECKING PROPERTIES
7.79032969475 TOTAL TIME SPENT RUNNING SUT
0.130565166473 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
time2 = arrow.now()                                                      # STEP 0
time2.format()                                                           # STEP 1
time2.format()                                                           # STEP 2
time2.format()                                                           # STEP 3
time2.format()                                                           # STEP 4
time2.timestamp                                                          # STEP 5
val7 = 0                                                                 # STEP 6
time2.shift(months=val7)                                                 # STEP 7
zone4 = 'US/Mountain'                                                    # STEP 8
time4 = time2.to(zone4)                                                  # STEP 9
zone1 = 'Etc/Greenwich'                                                 # STEP 10
zone4 = 'US/Alaska'                                                     # STEP 11
time2.shift(seconds=val7)                                               # STEP 12
zone2 = 'US/Mountain'                                                   # STEP 13
zone0 = 'US/Mountain'                                                   # STEP 14
time2.shift(months=val7)                                                # STEP 15
zone3 = 'Poland'                                                        # STEP 16
time2.shift(years=val7)                                                 # STEP 17
time4.shift(minutes=val7)                                               # STEP 18
time4.shift(hours=val7)                                                 # STEP 19
time2.shift(years=val7)                                                 # STEP 20
time2.shift(weeks=val7)                                                 # STEP 21
time8 = time2.replace(hours=val7)                                       # STEP 22
time4.shift(weeks=val7)                                                 # STEP 23
time7 = time8.replace(seconds=val7)                                     # STEP 24
time1 = arrow.now(zone1)                                                # STEP 25
time0 = time2.replace(tzinfo=zone1)                                     # STEP 26
time6 = time2.to(zone1)                                                 # STEP 27
zone1 = 'US/Mountain'                                                   # STEP 28
time4.shift(months=val7)                                                # STEP 29
time0.shift(weeks=val7)                                                 # STEP 30
time8.shift(months=val7)                                                # STEP 31
time7.shift(hours=val7)                                                 # STEP 32
time6.shift(hours=val7)                                                 # STEP 33
time7.shift(hours=val7)                                                 # STEP 34
time2.shift(hours=val7)                                                 # STEP 35
time7 = arrow.now(zone4)                                                # STEP 36
zone4 = 'US/Alaska'                                                     # STEP 37
val7 += 1                                                               # STEP 38
time2 = time1.replace(year=val7)                                        # STEP 39
time7.shift(hours=val7)                                                 # STEP 40
val1 = 0                                                                # STEP 41
time6.shift(hours=val7)                                                 # STEP 42
time2.shift(seconds=val7)                                               # STEP 43
time3 = arrow.get(val1)                                                 # STEP 44
time1.format()                                                          # STEP 45
time7.shift(months=val1)                                                # STEP 46
time4 = time4.to(zone3)                                                 # STEP 47
time7.shift(months=val1)                                                # STEP 48
time8 = time1.replace(tzinfo=zone1)                                     # STEP 49
time9 = time6.replace(hours=val1)                                       # STEP 50
time1.shift(months=val1)                                                # STEP 51
time4.shift(months=val7)                                                # STEP 52
locale4 =  u'en_be'                                                     # STEP 53
time7.format()                                                          # STEP 54
time5 = time9.replace(minutes=val1)                                     # STEP 55
time3.shift(seconds=val7)                                               # STEP 56
time7.shift(months=val7)                                                # STEP 57
time2 = time3.replace(tzinfo=zone4)                                     # STEP 58
time9 = arrow.now(zone4)                                                # STEP 59
time7 = time3.replace(tzinfo=zone2)                                     # STEP 60
zone1 = 'US/Alaska'                                                     # STEP 61
time0 = arrow.now()                                                     # STEP 62
time1 = arrow.now()                                                     # STEP 63
time6 = time4.replace(seconds=val7)                                     # STEP 64
time4 = arrow.now(zone0)                                                # STEP 65
time3 = time7.replace(tzinfo=zone0)                                     # STEP 66
time2.format()                                                          # STEP 67
time8.shift(hours=val1)                                                 # STEP 68
time2 = time8.to(zone4)                                                 # STEP 69
zone2 = 'Europe/Rome'                                                   # STEP 70
time7 = time1.replace(tzinfo=zone2)                                     # STEP 71
time8 = time8.to(zone1)                                                 # STEP 72
time4.shift(years=val7)                                                 # STEP 73
time1 = arrow.get(val1)                                                 # STEP 74
zone4 = 'Australia/Brisbane'                                            # STEP 75
zone3 = 'Europe/Rome'                                                   # STEP 76
time4 = arrow.now()                                                     # STEP 77
val1 -= 1                                                               # STEP 78
time1.shift(seconds=val1)                                               # STEP 79
time1 = time4.replace(year=val7)                                        # STEP 80
zone1 = 'US/Eastern'                                                    # STEP 81
zone0 = 'Asia/Samarkand'                                                # STEP 82
time1.shift(years=val1)                                                 # STEP 83
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1087cca70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304070, in act6766
    self.p_time[1].shift(years=self.p_val[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
296 BRANCHES COVERED
227 STATEMENTS COVERED
