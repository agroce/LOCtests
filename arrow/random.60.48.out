Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14653.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #150 STEP #30 (0:00:30.002680) Tue Nov 21 17:31:17 2017 [ 245 stmts 323 branches ] (no cov+ for 25 tests) 14930 TOTAL ACTIONS (497.622215321/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10872fd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 37461, in act1003
    self.p_time[7] = self.p_time[9].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 37 steps

SAVING TEST AS failure.14653.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale1 =  u'de_at'                                                      # STEP 0
ACTION: locale1 =  u'de_at' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'de_at' : <type 'unicode'>
==================================================
locale2 =  u'fa'                                                         # STEP 1
ACTION: locale2 =  u'fa' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'fa' : <type 'unicode'>
==================================================
locale4 =  u'bn_in'                                                      # STEP 2
ACTION: locale4 =  u'bn_in' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'bn_in' : <type 'unicode'>
==================================================
locale0 =  u'vi_vn'                                                      # STEP 3
ACTION: locale0 =  u'vi_vn' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'vi_vn' : <type 'unicode'>
==================================================
locale3 =  u'el'                                                         # STEP 4
ACTION: locale3 =  u'el' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'el' : <type 'unicode'>
==================================================
zone2 = 'US/Mountain'                                                    # STEP 5
ACTION: zone2 = 'US/Mountain'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Mountain' : <type 'str'>
==================================================
time7 = arrow.now()                                                      # STEP 6
ACTION: time7 = arrow.now() 
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 = 0                                                                 # STEP 7
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
zone4 = 'US/Pacific'                                                     # STEP 8
ACTION: zone4 = 'US/Pacific'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Pacific' : <type 'str'>
==================================================
time4 = arrow.get(val7)                                                  # STEP 9
ACTION: time4 = arrow.get(val7) 
val7 = 0 : <type 'int'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(seconds=val7)                                     # STEP 10
ACTION: time6 = time7.replace(seconds=val7) 
val7 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time6.to(zone2)                                                 # STEP 11
ACTION: time9 = time6.to(zone2) 
zone2 = 'US/Mountain' : <type 'str'>
time6 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 += 1                                                               # STEP 12
ACTION: val7 += 1 
val7 = 0 : <type 'int'>
=> val7 = 1 : <type 'int'>
==================================================
time6 = time9.replace(seconds=val7)                                     # STEP 13
ACTION: time6 = time9.replace(seconds=val7) 
val7 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T18:31:33.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.humanize(locale=locale3)                                          # STEP 14
ACTION: time6.humanize(locale=locale3) 
locale3 = u'el' : <type 'unicode'>
time6 = <Arrow [2017-11-21T18:31:33.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time9.to(zone2)                                                 # STEP 15
ACTION: time1 = time9.to(zone2) 
zone2 = 'US/Mountain' : <type 'str'>
time9 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time4.replace(hours=val7)                                       # STEP 16
ACTION: time9 = time4.replace(hours=val7) 
val7 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time6.replace(tzinfo=zone4)                                     # STEP 17
ACTION: time5 = time6.replace(tzinfo=zone4) 
zone4 = 'US/Pacific' : <type 'str'>
time6 = <Arrow [2017-11-21T18:31:33.503249-07:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T18:31:33.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'en_jp'                                                     # STEP 18
ACTION: locale3 =  u'en_jp' 
locale3 = u'el' : <type 'unicode'>
=> locale3 = u'en_jp' : <type 'unicode'>
==================================================
time3 = arrow.get(val7)                                                 # STEP 19
ACTION: time3 = arrow.get(val7) 
val7 = 1 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time7.replace(minutes=val7)                                     # STEP 20
ACTION: time2 = time7.replace(minutes=val7) 
val7 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T17:32:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time1.to(zone2)                                                 # STEP 21
ACTION: time7 = time1.to(zone2) 
zone2 = 'US/Mountain' : <type 'str'>
time1 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T17:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time3.replace(year=val7)                                        # STEP 22
ACTION: time0 = time3.replace(year=val7) 
val7 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time2.replace(year=val7)                                        # STEP 23
ACTION: time6 = time2.replace(year=val7) 
val7 = 1 : <type 'int'>
time2 = <Arrow [2017-11-21T17:32:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T18:31:33.503249-07:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-21T17:32:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(tzinfo=zone2)                                     # STEP 24
ACTION: time4 = time5.replace(tzinfo=zone2) 
zone2 = 'US/Mountain' : <type 'str'>
time5 = <Arrow [2017-11-21T18:31:33.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T18:31:33.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Arizona'                                                    # STEP 25
ACTION: zone3 = 'US/Arizona'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Arizona' : <type 'str'>
==================================================
time9.humanize(locale=locale4)                                          # STEP 26
ACTION: time9.humanize(locale=locale4) 
locale4 = u'bn_in' : <type 'unicode'>
time9 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.humanize(locale=locale2)                                          # STEP 27
ACTION: time5.humanize(locale=locale2) 
locale2 = u'fa' : <type 'unicode'>
time5 = <Arrow [2017-11-21T18:31:33.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.utcnow()                                                  # STEP 28
ACTION: time2 = arrow.utcnow() 
time2 = <Arrow [2017-11-21T17:32:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-22T01:31:32.519914+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'es_es'                                                     # STEP 29
ACTION: locale4 =  u'es_es' 
locale4 = u'bn_in' : <type 'unicode'>
=> locale4 = u'es_es' : <type 'unicode'>
==================================================
time3 = time6.to(zone3)                                                 # STEP 30
ACTION: time3 = time6.to(zone3) 
zone3 = 'US/Arizona' : <type 'str'>
time6 = <Arrow [0001-11-21T17:32:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-11-21T18:32:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time9.replace(year=val7)                                        # STEP 31
ACTION: time9 = time9.replace(year=val7) 
val7 = 1 : <type 'int'>
time9 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(tzinfo=zone4)                                     # STEP 32
ACTION: time8 = time7.replace(tzinfo=zone4) 
zone4 = 'US/Pacific' : <type 'str'>
time7 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T18:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.year                                                              # STEP 33
ACTION: time0.year 
time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(seconds=val7)                                     # STEP 34
ACTION: time1 = time8.replace(seconds=val7) 
val7 = 1 : <type 'int'>
time8 = <Arrow [2017-11-21T18:31:32.503249-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-21T18:31:33.503249-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Eastern'                                                    # STEP 35
ACTION: zone1 = 'US/Eastern'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Eastern' : <type 'str'>
==================================================
time7 = time9.to(zone3)                                                 # STEP 36
ACTION: time7 = time9.to(zone3) 
zone3 = 'US/Arizona' : <type 'str'>
time9 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T18:31:32.503249-07:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2eef38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 37461, in act1003
    self.p_time[7] = self.p_time[9].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 56
STOPPING TESTING DUE TO TIMEOUT
22.3933649289 PERCENT COVERED
60.1818079948 TOTAL RUNTIME
300 EXECUTED
29893 TOTAL TEST OPERATIONS
21.964912653 TIME SPENT EXECUTING TEST OPERATIONS
37.5430467129 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0209107398987 TIME SPENT CHECKING PROPERTIES
21.9858233929 TOTAL TIME SPENT RUNNING SUT
0.200509548187 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
locale1 =  u'de_at'                                                      # STEP 0
locale2 =  u'fa'                                                         # STEP 1
locale4 =  u'bn_in'                                                      # STEP 2
locale0 =  u'vi_vn'                                                      # STEP 3
locale3 =  u'el'                                                         # STEP 4
zone2 = 'US/Mountain'                                                    # STEP 5
time7 = arrow.now()                                                      # STEP 6
val7 = 0                                                                 # STEP 7
zone4 = 'US/Pacific'                                                     # STEP 8
time4 = arrow.get(val7)                                                  # STEP 9
time6 = time7.replace(seconds=val7)                                     # STEP 10
time9 = time6.to(zone2)                                                 # STEP 11
val7 += 1                                                               # STEP 12
time6 = time9.replace(seconds=val7)                                     # STEP 13
time6.humanize(locale=locale3)                                          # STEP 14
time1 = time9.to(zone2)                                                 # STEP 15
time9 = time4.replace(hours=val7)                                       # STEP 16
time5 = time6.replace(tzinfo=zone4)                                     # STEP 17
locale3 =  u'en_jp'                                                     # STEP 18
time3 = arrow.get(val7)                                                 # STEP 19
time2 = time7.replace(minutes=val7)                                     # STEP 20
time7 = time1.to(zone2)                                                 # STEP 21
time0 = time3.replace(year=val7)                                        # STEP 22
time6 = time2.replace(year=val7)                                        # STEP 23
time4 = time5.replace(tzinfo=zone2)                                     # STEP 24
zone3 = 'US/Arizona'                                                    # STEP 25
time9.humanize(locale=locale4)                                          # STEP 26
time5.humanize(locale=locale2)                                          # STEP 27
time2 = arrow.utcnow()                                                  # STEP 28
locale4 =  u'es_es'                                                     # STEP 29
time3 = time6.to(zone3)                                                 # STEP 30
time9 = time9.replace(year=val7)                                        # STEP 31
time8 = time7.replace(tzinfo=zone4)                                     # STEP 32
time0.year                                                              # STEP 33
time1 = time8.replace(seconds=val7)                                     # STEP 34
zone1 = 'US/Eastern'                                                    # STEP 35
time7 = time9.to(zone3)                                                 # STEP 36
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2eef38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 37461, in act1003
    self.p_time[7] = self.p_time[9].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
344 BRANCHES COVERED
257 STATEMENTS COVERED
