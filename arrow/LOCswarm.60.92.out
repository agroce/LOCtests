Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.15500.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1086a4758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 31709, in act876
    self.p_time[5] = self.p_time[4].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 55 steps

SAVING TEST AS failure.15500.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale0 =  u'pl'                                                         # STEP 0
ACTION: locale0 =  u'pl' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'pl' : <type 'unicode'>
==================================================
val6 = 0                                                                 # STEP 1
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
locale4 =  u'ja'                                                         # STEP 2
ACTION: locale4 =  u'ja' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'ja' : <type 'unicode'>
==================================================
val6 += 1                                                                # STEP 3
ACTION: val6 += 1 
val6 = 0 : <type 'int'>
=> val6 = 1 : <type 'int'>
==================================================
time6 = arrow.get(val6)                                                  # STEP 4
ACTION: time6 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time6.replace(year=val6)                                         # STEP 5
ACTION: time4 = time6.replace(year=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.humanize(locale=locale0)                                           # STEP 6
ACTION: time4.humanize(locale=locale0) 
locale0 = u'pl' : <type 'unicode'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(months=val6)                                                 # STEP 7
ACTION: time6.shift(months=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(seconds=val6)                                                # STEP 8
ACTION: time6.shift(seconds=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Asia/Samarkand'                                                 # STEP 9
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
time4.shift(months=val6)                                                # STEP 10
ACTION: time4.shift(months=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time4.replace(month=val6)                                       # STEP 11
ACTION: time8 = time4.replace(month=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(hours=val6)                                                 # STEP 12
ACTION: time6.shift(hours=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(month=val6)                                       # STEP 13
ACTION: time1 = time8.replace(month=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.get(val6)                                                 # STEP 14
ACTION: time6 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time4.replace(minutes=val6)                                     # STEP 15
ACTION: time5 = time4.replace(minutes=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(months=val6)                                                # STEP 16
ACTION: time8.shift(months=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time4.replace(month=val6)                                       # STEP 17
ACTION: time0 = time4.replace(month=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(hours=val6)                                                 # STEP 18
ACTION: time5.shift(hours=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time6.to(zone1)                                                 # STEP 19
ACTION: time2 = time6.to(zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T05:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(hours=val6)                                                 # STEP 20
ACTION: time4.shift(hours=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.get(val6)                                                 # STEP 21
ACTION: time6 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(hours=val6)                                                 # STEP 22
ACTION: time2.shift(hours=val6) 
val6 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T05:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time5.replace(month=val6)                                       # STEP 23
ACTION: time5 = time5.replace(month=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(hours=val6)                                                 # STEP 24
ACTION: time8.shift(hours=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.replace(year=val6)                                        # STEP 25
ACTION: time3 = time4.replace(year=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val6)                                               # STEP 26
ACTION: time3.shift(seconds=val6) 
val6 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale1 =  u'cs'                                                        # STEP 27
ACTION: locale1 =  u'cs' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'cs' : <type 'unicode'>
==================================================
time8.shift(hours=val6)                                                 # STEP 28
ACTION: time8.shift(hours=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.humanize(locale=locale1)                                          # STEP 29
ACTION: time8.humanize(locale=locale1) 
locale1 = u'cs' : <type 'unicode'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time2.replace(year=val6)                                        # STEP 30
ACTION: time3 = time2.replace(year=val6) 
val6 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T05:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T05:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(hours=val6)                                                 # STEP 31
ACTION: time5.shift(hours=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Alaska'                                                     # STEP 32
ACTION: zone4 = 'US/Alaska'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Alaska' : <type 'str'>
==================================================
time4 = time6.replace(year=val6)                                        # STEP 33
ACTION: time4 = time6.replace(year=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now(zone4)                                                # STEP 34
ACTION: time9 = arrow.now(zone4) 
zone4 = 'US/Alaska' : <type 'str'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T21:02:31.536823-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Alaska'                                                     # STEP 35
ACTION: zone1 = 'US/Alaska'  
zone1 = 'Asia/Samarkand' : <type 'str'>
=> zone1 = 'US/Alaska' : <type 'str'>
==================================================
time8.shift(years=val6)                                                 # STEP 36
ACTION: time8.shift(years=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(year=val6)                                        # STEP 37
ACTION: time5 = time8.replace(year=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale1)                                          # STEP 38
ACTION: time3.humanize(locale=locale1) 
locale1 = u'cs' : <type 'unicode'>
time3 = <Arrow [0001-01-01T05:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.get(val6)                                                 # STEP 39
ACTION: time3 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T05:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Asia/Samarkand'                                                # STEP 40
ACTION: zone4 = 'Asia/Samarkand'  
zone4 = 'US/Alaska' : <type 'str'>
=> zone4 = 'Asia/Samarkand' : <type 'str'>
==================================================
zone0 = 'Australia/Brisbane'                                            # STEP 41
ACTION: zone0 = 'Australia/Brisbane'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Australia/Brisbane' : <type 'str'>
==================================================
time7 = time2.to(zone1)                                                 # STEP 42
ACTION: time7 = time2.to(zone1) 
zone1 = 'US/Alaska' : <type 'str'>
time2 = <Arrow [1970-01-01T05:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1969-12-31T14:00:01-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'pt_pt'                                                     # STEP 43
ACTION: locale0 =  u'pt_pt' 
locale0 = u'pl' : <type 'unicode'>
=> locale0 = u'pt_pt' : <type 'unicode'>
==================================================
zone1 = 'US/Alaska'                                                     # STEP 44
ACTION: zone1 = 'US/Alaska'  
zone1 = 'US/Alaska' : <type 'str'>
==================================================
time1.shift(hours=val6)                                                 # STEP 45
ACTION: time1.shift(hours=val6) 
val6 = 1 : <type 'int'>
time1 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time1.replace(minutes=val6)                                     # STEP 46
ACTION: time2 = time1.replace(minutes=val6) 
val6 = 1 : <type 'int'>
time1 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T05:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now(zone0)                                                # STEP 47
ACTION: time6 = arrow.now(zone0) 
zone0 = 'Australia/Brisbane' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-22T16:02:31.545682+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = arrow.get(val6)                                                 # STEP 48
ACTION: time1 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time1 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val6)                                                 # STEP 49
ACTION: time6.shift(years=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [2017-11-22T16:02:31.545682+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now(zone4)                                                # STEP 50
ACTION: time6 = arrow.now(zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time6 = <Arrow [2017-11-22T16:02:31.545682+10:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-22T11:02:31.548231+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time4.replace(year=val6)                                        # STEP 51
ACTION: time8 = time4.replace(year=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(month=val6)                                       # STEP 52
ACTION: time4 = time5.replace(month=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale0)                                          # STEP 53
ACTION: time3.humanize(locale=locale0) 
locale0 = u'pt_pt' : <type 'unicode'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time4.to(zone1)                                                 # STEP 54
ACTION: time5 = time4.to(zone1) 
zone1 = 'US/Alaska' : <type 'str'>
time4 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1086b2758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 31709, in act876
    self.p_time[5] = self.p_time[4].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109a3bab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304928, in act6788
    self.p_time[3].shift(years=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 83 steps

SAVING TEST AS failure.15500.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone3 = 'Etc/Greenwich'                                                  # STEP 0
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone1 = 'US/Mountain'                                                    # STEP 1
ACTION: zone1 = 'US/Mountain'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Mountain' : <type 'str'>
==================================================
zone0 = 'US/Mountain'                                                    # STEP 2
ACTION: zone0 = 'US/Mountain'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Mountain' : <type 'str'>
==================================================
zone4 = 'US/Mountain'                                                    # STEP 3
ACTION: zone4 = 'US/Mountain'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Mountain' : <type 'str'>
==================================================
zone2 = 'US/Eastern'                                                     # STEP 4
ACTION: zone2 = 'US/Eastern'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Eastern' : <type 'str'>
==================================================
time4 = arrow.now(zone0)                                                 # STEP 5
ACTION: time4 = arrow.now(zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.now(zone2)                                                 # STEP 6
ACTION: time2 = arrow.now(zone2) 
zone2 = 'US/Eastern' : <type 'str'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Etc/Greenwich'                                                  # STEP 7
ACTION: zone2 = 'Etc/Greenwich'  
zone2 = 'US/Eastern' : <type 'str'>
=> zone2 = 'Etc/Greenwich' : <type 'str'>
==================================================
time0 = arrow.now()                                                      # STEP 8
ACTION: time0 = arrow.now() 
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T22:02:35.991427-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = arrow.now(zone0)                                                 # STEP 9
ACTION: time1 = arrow.now(zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T23:02:35.992570-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 = 0                                                                # STEP 10
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
time6 = arrow.now(zone4)                                                # STEP 11
ACTION: time6 = arrow.now(zone4) 
zone4 = 'US/Mountain' : <type 'str'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T23:02:35.994104-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 += 1                                                               # STEP 12
ACTION: val2 += 1 
val2 = 0 : <type 'int'>
=> val2 = 1 : <type 'int'>
==================================================
time7 = time2.replace(year=val2)                                        # STEP 13
ACTION: time7 = time2.replace(year=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [2017-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [0001-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time6.replace(tzinfo=zone0)                                     # STEP 14
ACTION: time3 = time6.replace(tzinfo=zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time6 = <Arrow [2017-11-21T23:02:35.994104-07:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-21T23:02:35.994104-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.replace(month=val2)                                       # STEP 15
ACTION: time5 = time2.replace(month=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [2017-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-01-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time5.replace(seconds=val2)                                     # STEP 16
ACTION: time8 = time5.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [2017-01-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-01-22T01:02:36.990378-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(tzinfo=zone4)                                     # STEP 17
ACTION: time5 = time8.replace(tzinfo=zone4) 
zone4 = 'US/Mountain' : <type 'str'>
time8 = <Arrow [2017-01-22T01:02:36.990378-05:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-01-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now()                                                     # STEP 18
ACTION: time6 = arrow.now() 
time6 = <Arrow [2017-11-21T23:02:35.994104-07:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time0.replace(seconds=val2)                                     # STEP 19
ACTION: time9 = time0.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time0 = <Arrow [2017-11-21T22:02:35.991427-08:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T22:02:36.991427-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Mountain'                                                   # STEP 20
ACTION: zone4 = 'US/Mountain'  
zone4 = 'US/Mountain' : <type 'str'>
==================================================
val9 = 0                                                                # STEP 21
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
time1.shift(months=val2)                                                # STEP 22
ACTION: time1.shift(months=val2) 
val2 = 1 : <type 'int'>
time1 = <Arrow [2017-11-21T23:02:35.992570-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time4.replace(tzinfo=zone0)                                     # STEP 23
ACTION: time2 = time4.replace(tzinfo=zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time4 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Eastern'                                                    # STEP 24
ACTION: zone0 = 'US/Eastern'  
zone0 = 'US/Mountain' : <type 'str'>
=> zone0 = 'US/Eastern' : <type 'str'>
==================================================
time8 = time5.replace(seconds=val9)                                     # STEP 25
ACTION: time8 = time5.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time5 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-01-22T01:02:36.990378-05:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time6.replace(month=val2)                                       # STEP 26
ACTION: time5 = time6.replace(month=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(minutes=val9)                                               # STEP 27
ACTION: time7.shift(minutes=val9) 
val9 = 0 : <type 'int'>
time7 = <Arrow [0001-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(years=val2)                                                 # STEP 28
ACTION: time4.shift(years=val2) 
val2 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.year                                                              # STEP 29
ACTION: time3.year 
time3 = <Arrow [2017-11-21T23:02:35.994104-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(year=val2)                                        # STEP 30
ACTION: time3 = time7.replace(year=val2) 
val2 = 1 : <type 'int'>
time7 = <Arrow [0001-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-21T23:02:35.994104-07:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time6.replace(month=val2)                                       # STEP 31
ACTION: time6 = time6.replace(month=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = arrow.now()                                                     # STEP 32
ACTION: time0 = arrow.now() 
time0 = <Arrow [2017-11-21T22:02:35.991427-08:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T22:02:36.011569-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(years=val2)                                                 # STEP 33
ACTION: time5.shift(years=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.now(zone1)                                                # STEP 34
ACTION: time7 = arrow.now(zone1) 
zone1 = 'US/Mountain' : <type 'str'>
time7 = <Arrow [0001-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T23:02:36.013452-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(tzinfo=zone4)                                     # STEP 35
ACTION: time5 = time8.replace(tzinfo=zone4) 
zone4 = 'US/Mountain' : <type 'str'>
time8 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Eastern'                                                    # STEP 36
ACTION: zone4 = 'US/Eastern'  
zone4 = 'US/Mountain' : <type 'str'>
=> zone4 = 'US/Eastern' : <type 'str'>
==================================================
time1 = arrow.now(zone3)                                                # STEP 37
ACTION: time1 = arrow.now(zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time1 = <Arrow [2017-11-21T23:02:35.992570-07:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T06:02:36.016121+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 -= 1                                                               # STEP 38
ACTION: val9 -= 1 
val9 = 0 : <type 'int'>
=> val9 = -1 : <type 'int'>
==================================================
val3 = 0                                                                # STEP 39
ACTION: val3 = 0 
val3 = None : <type 'NoneType'>
=> val3 = 0 : <type 'int'>
==================================================
time4 = arrow.now()                                                     # STEP 40
ACTION: time4 = arrow.now() 
time4 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T22:02:36.017622-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.year                                                              # STEP 41
ACTION: time5.year 
time5 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time0.replace(tzinfo=zone1)                                     # STEP 42
ACTION: time8 = time0.replace(tzinfo=zone1) 
zone1 = 'US/Mountain' : <type 'str'>
time0 = <Arrow [2017-11-21T22:02:36.011569-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T22:02:36.011569-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time5.replace(tzinfo=zone3)                                     # STEP 43
ACTION: time5 = time5.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [2017-01-22T01:02:36.990378-07:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-01-22T01:02:36.990378+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time5.replace(tzinfo=zone3)                                     # STEP 44
ACTION: time0 = time5.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [2017-01-22T01:02:36.990378+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [2017-11-21T22:02:36.011569-08:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-01-22T01:02:36.990378+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = arrow.now(zone3)                                                # STEP 45
ACTION: time5 = arrow.now(zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [2017-01-22T01:02:36.990378+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-11-22T06:02:36.021851+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale2 =  u'el'                                                        # STEP 46
ACTION: locale2 =  u'el' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'el' : <type 'unicode'>
==================================================
time4.shift(months=val9)                                                # STEP 47
ACTION: time4.shift(months=val9) 
val9 = -1 : <type 'int'>
time4 = <Arrow [2017-11-21T22:02:36.017622-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(years=val3)                                                 # STEP 48
ACTION: time9.shift(years=val3) 
val3 = 0 : <type 'int'>
time9 = <Arrow [2017-11-21T22:02:36.991427-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(months=val9)                                                # STEP 49
ACTION: time4.shift(months=val9) 
val9 = -1 : <type 'int'>
time4 = <Arrow [2017-11-21T22:02:36.017622-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(years=val2)                                                 # STEP 50
ACTION: time9.shift(years=val2) 
val2 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T22:02:36.991427-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now(zone4)                                                # STEP 51
ACTION: time9 = arrow.now(zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time9 = <Arrow [2017-11-21T22:02:36.991427-08:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-22T01:02:36.026123-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 -= 1                                                               # STEP 52
ACTION: val9 -= 1 
val9 = -1 : <type 'int'>
=> val9 = -2 : <type 'int'>
==================================================
zone3 = 'US/Mountain'                                                   # STEP 53
ACTION: zone3 = 'US/Mountain'  
zone3 = 'Etc/Greenwich' : <type 'str'>
=> zone3 = 'US/Mountain' : <type 'str'>
==================================================
time4 = time6.replace(tzinfo=zone3)                                     # STEP 54
ACTION: time4 = time6.replace(tzinfo=zone3) 
zone3 = 'US/Mountain' : <type 'str'>
time6 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-11-21T22:02:36.017622-08:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-01-21T22:02:36.001119-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 += 1                                                               # STEP 55
ACTION: val2 += 1 
val2 = 1 : <type 'int'>
=> val2 = 2 : <type 'int'>
==================================================
time1.humanize(locale=locale2)                                          # STEP 56
ACTION: time1.humanize(locale=locale2) 
locale2 = u'el' : <type 'unicode'>
time1 = <Arrow [2017-11-22T06:02:36.016121+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(months=val9)                                                # STEP 57
ACTION: time5.shift(months=val9) 
val9 = -2 : <type 'int'>
time5 = <Arrow [2017-11-22T06:02:36.021851+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time6.replace(tzinfo=zone0)                                     # STEP 58
ACTION: time1 = time6.replace(tzinfo=zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time6 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-22T06:02:36.016121+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time8.replace(tzinfo=zone4)                                     # STEP 59
ACTION: time6 = time8.replace(tzinfo=zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time8 = <Arrow [2017-11-21T22:02:36.011569-07:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-01-21T22:02:36.001119-08:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T22:02:36.011569-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 -= 1                                                               # STEP 60
ACTION: val2 -= 1 
val2 = 2 : <type 'int'>
=> val2 = 1 : <type 'int'>
==================================================
time8.humanize(locale=locale2)                                          # STEP 61
ACTION: time8.humanize(locale=locale2) 
locale2 = u'el' : <type 'unicode'>
time8 = <Arrow [2017-11-21T22:02:36.011569-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time1.replace(year=val2)                                        # STEP 62
ACTION: time5 = time1.replace(year=val2) 
val2 = 1 : <type 'int'>
time1 = <Arrow [2017-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-22T06:02:36.021851+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'nn_no'                                                     # STEP 63
ACTION: locale3 =  u'nn_no' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'nn_no' : <type 'unicode'>
==================================================
val5 = 0                                                                # STEP 64
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
time8 = arrow.now()                                                     # STEP 65
ACTION: time8 = arrow.now() 
time8 = <Arrow [2017-11-21T22:02:36.011569-07:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T22:02:36.035900-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time2.replace(month=val2)                                       # STEP 66
ACTION: time1 = time2.replace(month=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-01-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.now()                                                     # STEP 67
ACTION: time2 = arrow.now() 
time2 = <Arrow [2017-11-21T23:02:35.989003-07:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T22:02:36.037454-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Eastern'                                                    # STEP 68
ACTION: zone0 = 'US/Eastern'  
zone0 = 'US/Eastern' : <type 'str'>
==================================================
time4.shift(months=val9)                                                # STEP 69
ACTION: time4.shift(months=val9) 
val9 = -2 : <type 'int'>
time4 = <Arrow [2017-01-21T22:02:36.001119-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'eu'                                                        # STEP 70
ACTION: locale4 =  u'eu' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'eu' : <type 'unicode'>
==================================================
time6.shift(minutes=val2)                                               # STEP 71
ACTION: time6.shift(minutes=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T22:02:36.011569-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Etc/Greenwich'                                                 # STEP 72
ACTION: zone1 = 'Etc/Greenwich'  
zone1 = 'US/Mountain' : <type 'str'>
=> zone1 = 'Etc/Greenwich' : <type 'str'>
==================================================
time6 = time4.replace(tzinfo=zone4)                                     # STEP 73
ACTION: time6 = time4.replace(tzinfo=zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time4 = <Arrow [2017-01-21T22:02:36.001119-07:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T22:02:36.011569-05:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(tzinfo=zone1)                                     # STEP 74
ACTION: time4 = time5.replace(tzinfo=zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [0001-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-01-21T22:02:36.001119-07:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-01-21T22:02:36.001119+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Mountain'                                                   # STEP 75
ACTION: zone3 = 'US/Mountain'  
zone3 = 'US/Mountain' : <type 'str'>
==================================================
time5 = arrow.now(zone1)                                                # STEP 76
ACTION: time5 = arrow.now(zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [0001-01-21T22:02:36.001119-05:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-11-22T06:02:36.043454+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 = 0                                                                # STEP 77
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
time5.humanize(locale=locale2)                                          # STEP 78
ACTION: time5.humanize(locale=locale2) 
locale2 = u'el' : <type 'unicode'>
time5 = <Arrow [2017-11-22T06:02:36.043454+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time5.replace(year=val2)                                        # STEP 79
ACTION: time5 = time5.replace(year=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [2017-11-22T06:02:36.043454+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-11-22T06:02:36.043454+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Etc/Greenwich'                                                 # STEP 80
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = 'US/Eastern' : <type 'str'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
val3 -= 1                                                               # STEP 81
ACTION: val3 -= 1 
val3 = 0 : <type 'int'>
=> val3 = -1 : <type 'int'>
==================================================
time3.shift(years=val3)                                                 # STEP 82
ACTION: time3.shift(years=val3) 
val3 = -1 : <type 'int'>
time3 = <Arrow [0001-11-22T01:02:35.990378-05:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109a2e9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304928, in act6788
    self.p_time[3].shift(years=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #72 STEP #6 (0:00:30.005321) Tue Nov 21 22:02:51 2017 [ 237 stmts 310 branches ] (no cov+ for 8 tests) 7044 TOTAL ACTIONS (234.758363355/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 8
STOPPING TESTING DUE TO TIMEOUT
20.6753554502 PERCENT COVERED
60.2215437889 TOTAL RUNTIME
147 EXECUTED
14546 TOTAL TEST OPERATIONS
9.41546225548 TIME SPENT EXECUTING TEST OPERATIONS
49.6514995098 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00943279266357 TIME SPENT CHECKING PROPERTIES
9.42489504814 TOTAL TIME SPENT RUNNING SUT
0.154255628586 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
locale0 =  u'pl'                                                         # STEP 0
val6 = 0                                                                 # STEP 1
locale4 =  u'ja'                                                         # STEP 2
val6 += 1                                                                # STEP 3
time6 = arrow.get(val6)                                                  # STEP 4
time4 = time6.replace(year=val6)                                         # STEP 5
time4.humanize(locale=locale0)                                           # STEP 6
time6.shift(months=val6)                                                 # STEP 7
time6.shift(seconds=val6)                                                # STEP 8
zone1 = 'Asia/Samarkand'                                                 # STEP 9
time4.shift(months=val6)                                                # STEP 10
time8 = time4.replace(month=val6)                                       # STEP 11
time6.shift(hours=val6)                                                 # STEP 12
time1 = time8.replace(month=val6)                                       # STEP 13
time6 = arrow.get(val6)                                                 # STEP 14
time5 = time4.replace(minutes=val6)                                     # STEP 15
time8.shift(months=val6)                                                # STEP 16
time0 = time4.replace(month=val6)                                       # STEP 17
time5.shift(hours=val6)                                                 # STEP 18
time2 = time6.to(zone1)                                                 # STEP 19
time4.shift(hours=val6)                                                 # STEP 20
time6 = arrow.get(val6)                                                 # STEP 21
time2.shift(hours=val6)                                                 # STEP 22
time5 = time5.replace(month=val6)                                       # STEP 23
time8.shift(hours=val6)                                                 # STEP 24
time3 = time4.replace(year=val6)                                        # STEP 25
time3.shift(seconds=val6)                                               # STEP 26
locale1 =  u'cs'                                                        # STEP 27
time8.shift(hours=val6)                                                 # STEP 28
time8.humanize(locale=locale1)                                          # STEP 29
time3 = time2.replace(year=val6)                                        # STEP 30
time5.shift(hours=val6)                                                 # STEP 31
zone4 = 'US/Alaska'                                                     # STEP 32
time4 = time6.replace(year=val6)                                        # STEP 33
time9 = arrow.now(zone4)                                                # STEP 34
zone1 = 'US/Alaska'                                                     # STEP 35
time8.shift(years=val6)                                                 # STEP 36
time5 = time8.replace(year=val6)                                        # STEP 37
time3.humanize(locale=locale1)                                          # STEP 38
time3 = arrow.get(val6)                                                 # STEP 39
zone4 = 'Asia/Samarkand'                                                # STEP 40
zone0 = 'Australia/Brisbane'                                            # STEP 41
time7 = time2.to(zone1)                                                 # STEP 42
locale0 =  u'pt_pt'                                                     # STEP 43
zone1 = 'US/Alaska'                                                     # STEP 44
time1.shift(hours=val6)                                                 # STEP 45
time2 = time1.replace(minutes=val6)                                     # STEP 46
time6 = arrow.now(zone0)                                                # STEP 47
time1 = arrow.get(val6)                                                 # STEP 48
time6.shift(years=val6)                                                 # STEP 49
time6 = arrow.now(zone4)                                                # STEP 50
time8 = time4.replace(year=val6)                                        # STEP 51
time4 = time5.replace(month=val6)                                       # STEP 52
time3.humanize(locale=locale0)                                          # STEP 53
time5 = time4.to(zone1)                                                 # STEP 54
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1086b2758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 31709, in act876
    self.p_time[5] = self.p_time[4].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE 1
zone3 = 'Etc/Greenwich'                                                  # STEP 0
zone1 = 'US/Mountain'                                                    # STEP 1
zone0 = 'US/Mountain'                                                    # STEP 2
zone4 = 'US/Mountain'                                                    # STEP 3
zone2 = 'US/Eastern'                                                     # STEP 4
time4 = arrow.now(zone0)                                                 # STEP 5
time2 = arrow.now(zone2)                                                 # STEP 6
zone2 = 'Etc/Greenwich'                                                  # STEP 7
time0 = arrow.now()                                                      # STEP 8
time1 = arrow.now(zone0)                                                 # STEP 9
val2 = 0                                                                # STEP 10
time6 = arrow.now(zone4)                                                # STEP 11
val2 += 1                                                               # STEP 12
time7 = time2.replace(year=val2)                                        # STEP 13
time3 = time6.replace(tzinfo=zone0)                                     # STEP 14
time5 = time2.replace(month=val2)                                       # STEP 15
time8 = time5.replace(seconds=val2)                                     # STEP 16
time5 = time8.replace(tzinfo=zone4)                                     # STEP 17
time6 = arrow.now()                                                     # STEP 18
time9 = time0.replace(seconds=val2)                                     # STEP 19
zone4 = 'US/Mountain'                                                   # STEP 20
val9 = 0                                                                # STEP 21
time1.shift(months=val2)                                                # STEP 22
time2 = time4.replace(tzinfo=zone0)                                     # STEP 23
zone0 = 'US/Eastern'                                                    # STEP 24
time8 = time5.replace(seconds=val9)                                     # STEP 25
time5 = time6.replace(month=val2)                                       # STEP 26
time7.shift(minutes=val9)                                               # STEP 27
time4.shift(years=val2)                                                 # STEP 28
time3.year                                                              # STEP 29
time3 = time7.replace(year=val2)                                        # STEP 30
time6 = time6.replace(month=val2)                                       # STEP 31
time0 = arrow.now()                                                     # STEP 32
time5.shift(years=val2)                                                 # STEP 33
time7 = arrow.now(zone1)                                                # STEP 34
time5 = time8.replace(tzinfo=zone4)                                     # STEP 35
zone4 = 'US/Eastern'                                                    # STEP 36
time1 = arrow.now(zone3)                                                # STEP 37
val9 -= 1                                                               # STEP 38
val3 = 0                                                                # STEP 39
time4 = arrow.now()                                                     # STEP 40
time5.year                                                              # STEP 41
time8 = time0.replace(tzinfo=zone1)                                     # STEP 42
time5 = time5.replace(tzinfo=zone3)                                     # STEP 43
time0 = time5.replace(tzinfo=zone3)                                     # STEP 44
time5 = arrow.now(zone3)                                                # STEP 45
locale2 =  u'el'                                                        # STEP 46
time4.shift(months=val9)                                                # STEP 47
time9.shift(years=val3)                                                 # STEP 48
time4.shift(months=val9)                                                # STEP 49
time9.shift(years=val2)                                                 # STEP 50
time9 = arrow.now(zone4)                                                # STEP 51
val9 -= 1                                                               # STEP 52
zone3 = 'US/Mountain'                                                   # STEP 53
time4 = time6.replace(tzinfo=zone3)                                     # STEP 54
val2 += 1                                                               # STEP 55
time1.humanize(locale=locale2)                                          # STEP 56
time5.shift(months=val9)                                                # STEP 57
time1 = time6.replace(tzinfo=zone0)                                     # STEP 58
time6 = time8.replace(tzinfo=zone4)                                     # STEP 59
val2 -= 1                                                               # STEP 60
time8.humanize(locale=locale2)                                          # STEP 61
time5 = time1.replace(year=val2)                                        # STEP 62
locale3 =  u'nn_no'                                                     # STEP 63
val5 = 0                                                                # STEP 64
time8 = arrow.now()                                                     # STEP 65
time1 = time2.replace(month=val2)                                       # STEP 66
time2 = arrow.now()                                                     # STEP 67
zone0 = 'US/Eastern'                                                    # STEP 68
time4.shift(months=val9)                                                # STEP 69
locale4 =  u'eu'                                                        # STEP 70
time6.shift(minutes=val2)                                               # STEP 71
zone1 = 'Etc/Greenwich'                                                 # STEP 72
time6 = time4.replace(tzinfo=zone4)                                     # STEP 73
time4 = time5.replace(tzinfo=zone1)                                     # STEP 74
zone3 = 'US/Mountain'                                                   # STEP 75
time5 = arrow.now(zone1)                                                # STEP 76
val7 = 0                                                                # STEP 77
time5.humanize(locale=locale2)                                          # STEP 78
time5 = time5.replace(year=val2)                                        # STEP 79
zone4 = 'Etc/Greenwich'                                                 # STEP 80
val3 -= 1                                                               # STEP 81
time3.shift(years=val3)                                                 # STEP 82
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109a2e9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304928, in act6788
    self.p_time[3].shift(years=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
319 BRANCHES COVERED
242 STATEMENTS COVERED
