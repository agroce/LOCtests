Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.15208.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a2fdb90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306215, in act6821
    self.p_time[6].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 39 steps

SAVING TEST AS failure.15208.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
val6 = 0                                                                 # STEP 0
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
val5 = 0                                                                 # STEP 1
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
val9 = 0                                                                 # STEP 2
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
val5 -= 1                                                                # STEP 3
ACTION: val5 -= 1 
val5 = 0 : <type 'int'>
=> val5 = -1 : <type 'int'>
==================================================
zone3 = 'US/Pacific'                                                     # STEP 4
ACTION: zone3 = 'US/Pacific'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Pacific' : <type 'str'>
==================================================
zone1 = 'US/Pacific'                                                     # STEP 5
ACTION: zone1 = 'US/Pacific'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Pacific' : <type 'str'>
==================================================
val6 -= 1                                                                # STEP 6
ACTION: val6 -= 1 
val6 = 0 : <type 'int'>
=> val6 = -1 : <type 'int'>
==================================================
time2 = arrow.now()                                                      # STEP 7
ACTION: time2 = arrow.now() 
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time2.replace(seconds=val9)                                      # STEP 8
ACTION: time1 = time2.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 = 0                                                                 # STEP 9
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
time2.shift(months=val9)                                                # STEP 10
ACTION: time2.shift(months=val9) 
val9 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Poland'                                                        # STEP 11
ACTION: zone0 = 'Poland'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Poland' : <type 'str'>
==================================================
time3 = time1.to(zone1)                                                 # STEP 12
ACTION: time3 = time1.to(zone1) 
zone1 = 'US/Pacific' : <type 'str'>
time1 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(seconds=val5)                                               # STEP 13
ACTION: time2.shift(seconds=val5) 
val5 = -1 : <type 'int'>
time2 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val6)                                                # STEP 14
ACTION: time3.shift(months=val6) 
val6 = -1 : <type 'int'>
time3 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(hours=val5)                                                 # STEP 15
ACTION: time3.shift(hours=val5) 
val5 = -1 : <type 'int'>
time3 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 += 1                                                               # STEP 16
ACTION: val1 += 1 
val1 = 0 : <type 'int'>
=> val1 = 1 : <type 'int'>
==================================================
time9 = time1.replace(seconds=val5)                                     # STEP 17
ACTION: time9 = time1.replace(seconds=val5) 
val5 = -1 : <type 'int'>
time1 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time9.replace(month=val1)                                       # STEP 18
ACTION: time4 = time9.replace(month=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(seconds=val6)                                               # STEP 19
ACTION: time4.shift(seconds=val6) 
val6 = -1 : <type 'int'>
time4 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time9.replace(year=val1)                                        # STEP 20
ACTION: time5 = time9.replace(year=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Etc/Greenwich'                                                 # STEP 21
ACTION: zone2 = 'Etc/Greenwich'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Etc/Greenwich' : <type 'str'>
==================================================
time8 = time2.replace(year=val1)                                        # STEP 22
ACTION: time8 = time2.replace(year=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [0001-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time3.replace(seconds=val9)                                     # STEP 23
ACTION: time3 = time3.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time4.replace(seconds=val1)                                     # STEP 24
ACTION: time0 = time4.replace(seconds=val1) 
val1 = 1 : <type 'int'>
time4 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time1.replace(seconds=val9)                                     # STEP 25
ACTION: time4 = time1.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time1 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time0.to(zone1)                                                 # STEP 26
ACTION: time7 = time0.to(zone1) 
zone1 = 'US/Pacific' : <type 'str'>
time0 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time9.replace(year=val1)                                        # STEP 27
ACTION: time2 = time9.replace(year=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time7.replace(month=val1)                                       # STEP 28
ACTION: time9 = time7.replace(month=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [2017-11-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.replace(seconds=val5)                                     # STEP 29
ACTION: time6 = time9.replace(seconds=val5) 
val5 = -1 : <type 'int'>
time9 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(seconds=val1)                                               # STEP 30
ACTION: time7.shift(seconds=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time9.to(zone2)                                                 # STEP 31
ACTION: time0 = time9.to(zone2) 
zone2 = 'Etc/Greenwich' : <type 'str'>
time9 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-01-22T04:28:25.254621+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time6.replace(seconds=val6)                                     # STEP 32
ACTION: time1 = time6.replace(seconds=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-01-21T20:28:23.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.year                                                              # STEP 33
ACTION: time4.year 
time4 = <Arrow [2017-11-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.to(zone2)                                                 # STEP 34
ACTION: time7 = time6.to(zone2) 
zone2 = 'Etc/Greenwich' : <type 'str'>
time6 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-01-22T04:28:24.254621+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val5 = 0                                                                # STEP 35
ACTION: val5 = 0 
val5 = -1 : <type 'int'>
=> val5 = 0 : <type 'int'>
==================================================
time9 = time9.to(zone2)                                                 # STEP 36
ACTION: time9 = time9.to(zone2) 
zone2 = 'Etc/Greenwich' : <type 'str'>
time9 = <Arrow [2017-01-21T20:28:25.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-01-22T04:28:25.254621+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(year=val1)                                        # STEP 37
ACTION: time6 = time7.replace(year=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-01-22T04:28:24.254621+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-01-21T20:28:24.254621-08:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-22T04:28:24.254621+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val6)                                                 # STEP 38
ACTION: time6.shift(years=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [0001-01-22T04:28:24.254621+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a30eef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306215, in act6821
    self.p_time[6].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #216 STEP #11 (0:00:30.000449) Tue Nov 21 20:28:34 2017 [ 255 stmts 341 branches ] (no cov+ for 42 tests) 21450 TOTAL ACTIONS (714.989300371/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 97
STOPPING TESTING DUE TO TIMEOUT
22.2156398104 PERCENT COVERED
60.177877903 TOTAL RUNTIME
433 EXECUTED
43236 TOTAL TEST OPERATIONS
28.8800947666 TIME SPENT EXECUTING TEST OPERATIONS
28.8063230515 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0290865898132 TIME SPENT CHECKING PROPERTIES
28.9091813564 TOTAL TIME SPENT RUNNING SUT
0.251914978027 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
val6 = 0                                                                 # STEP 0
val5 = 0                                                                 # STEP 1
val9 = 0                                                                 # STEP 2
val5 -= 1                                                                # STEP 3
zone3 = 'US/Pacific'                                                     # STEP 4
zone1 = 'US/Pacific'                                                     # STEP 5
val6 -= 1                                                                # STEP 6
time2 = arrow.now()                                                      # STEP 7
time1 = time2.replace(seconds=val9)                                      # STEP 8
val1 = 0                                                                 # STEP 9
time2.shift(months=val9)                                                # STEP 10
zone0 = 'Poland'                                                        # STEP 11
time3 = time1.to(zone1)                                                 # STEP 12
time2.shift(seconds=val5)                                               # STEP 13
time3.shift(months=val6)                                                # STEP 14
time3.shift(hours=val5)                                                 # STEP 15
val1 += 1                                                               # STEP 16
time9 = time1.replace(seconds=val5)                                     # STEP 17
time4 = time9.replace(month=val1)                                       # STEP 18
time4.shift(seconds=val6)                                               # STEP 19
time5 = time9.replace(year=val1)                                        # STEP 20
zone2 = 'Etc/Greenwich'                                                 # STEP 21
time8 = time2.replace(year=val1)                                        # STEP 22
time3 = time3.replace(seconds=val9)                                     # STEP 23
time0 = time4.replace(seconds=val1)                                     # STEP 24
time4 = time1.replace(seconds=val9)                                     # STEP 25
time7 = time0.to(zone1)                                                 # STEP 26
time2 = time9.replace(year=val1)                                        # STEP 27
time9 = time7.replace(month=val1)                                       # STEP 28
time6 = time9.replace(seconds=val5)                                     # STEP 29
time7.shift(seconds=val1)                                               # STEP 30
time0 = time9.to(zone2)                                                 # STEP 31
time1 = time6.replace(seconds=val6)                                     # STEP 32
time4.year                                                              # STEP 33
time7 = time6.to(zone2)                                                 # STEP 34
val5 = 0                                                                # STEP 35
time9 = time9.to(zone2)                                                 # STEP 36
time6 = time7.replace(year=val1)                                        # STEP 37
time6.shift(years=val6)                                                 # STEP 38
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a30eef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306215, in act6821
    self.p_time[6].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
341 BRANCHES COVERED
255 STATEMENTS COVERED
