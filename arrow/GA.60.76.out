Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.8, timeout=60, output='failure.15194.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=0.8, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
** STARTING EXPLOITATION OF TESTS AT TIME 0.109095096588 AFTER 0 TESTS WITH NO NEW COVERAGE **
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2825a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 25375, in act737
    self.p_time[2] = self.p_time[6].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 59 steps

SAVING TEST AS failure.15194.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale4 =  u'ko'                                                         # STEP 0
ACTION: locale4 =  u'ko' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'ko' : <type 'unicode'>
==================================================
locale1 =  u'ru_ru'                                                      # STEP 1
ACTION: locale1 =  u'ru_ru' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'ru_ru' : <type 'unicode'>
==================================================
locale3 =  u'hu'                                                         # STEP 2
ACTION: locale3 =  u'hu' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'hu' : <type 'unicode'>
==================================================
zone2 = 'US/Eastern'                                                     # STEP 3
ACTION: zone2 = 'US/Eastern'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Eastern' : <type 'str'>
==================================================
locale2 =  u'sv'                                                         # STEP 4
ACTION: locale2 =  u'sv' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'sv' : <type 'unicode'>
==================================================
val1 = 0                                                                 # STEP 5
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
locale0 =  u'ru_ru'                                                      # STEP 6
ACTION: locale0 =  u'ru_ru' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'ru_ru' : <type 'unicode'>
==================================================
val2 = 0                                                                 # STEP 7
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
zone1 = 'US/Arizona'                                                     # STEP 8
ACTION: zone1 = 'US/Arizona'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Arizona' : <type 'str'>
==================================================
val1 += 1                                                                # STEP 9
ACTION: val1 += 1 
val1 = 0 : <type 'int'>
=> val1 = 1 : <type 'int'>
==================================================
val6 = 0                                                                # STEP 10
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
time7 = arrow.get(val6)                                                 # STEP 11
ACTION: time7 = arrow.get(val6) 
val6 = 0 : <type 'int'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 -= 1                                                               # STEP 12
ACTION: val6 -= 1 
val6 = 0 : <type 'int'>
=> val6 = -1 : <type 'int'>
==================================================
time2 = time7.replace(minutes=val2)                                     # STEP 13
ACTION: time2 = time7.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(hours=val1)                                       # STEP 14
ACTION: time6 = time7.replace(hours=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time7.replace(seconds=val2)                                     # STEP 15
ACTION: time9 = time7.replace(seconds=val2) 
val2 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time7.replace(minutes=val1)                                     # STEP 16
ACTION: time1 = time7.replace(minutes=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.humanize(locale=locale0)                                          # STEP 17
ACTION: time7.humanize(locale=locale0) 
locale0 = u'ru_ru' : <type 'unicode'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 = 0                                                                # STEP 18
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
time4 = time7.replace(hours=val1)                                       # STEP 19
ACTION: time4 = time7.replace(hours=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time2.replace(tzinfo=zone2)                                     # STEP 20
ACTION: time0 = time2.replace(tzinfo=zone2) 
zone2 = 'US/Eastern' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:00-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(minutes=val1)                                               # STEP 21
ACTION: time7.shift(minutes=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.replace(minutes=val1)                                     # STEP 22
ACTION: time7 = time6.replace(minutes=val1) 
val1 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time6.replace(minutes=val9)                                     # STEP 23
ACTION: time8 = time6.replace(minutes=val9) 
val9 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(hours=val6)                                                 # STEP 24
ACTION: time0.shift(hours=val6) 
val6 = -1 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:00-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'el_gr'                                                     # STEP 25
ACTION: locale0 =  u'el_gr' 
locale0 = u'ru_ru' : <type 'unicode'>
=> locale0 = u'el_gr' : <type 'unicode'>
==================================================
time2.shift(seconds=val1)                                               # STEP 26
ACTION: time2.shift(seconds=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time9.to(zone1)                                                 # STEP 27
ACTION: time3 = time9.to(zone1) 
zone1 = 'US/Arizona' : <type 'str'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time9.to(zone1)                                                 # STEP 28
ACTION: time9 = time9.to(zone1) 
zone1 = 'US/Arizona' : <type 'str'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(years=val9)                                                 # STEP 29
ACTION: time9.shift(years=val9) 
val9 = 0 : <type 'int'>
time9 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time2.replace(month=val1)                                       # STEP 30
ACTION: time6 = time2.replace(month=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.timestamp                                                         # STEP 31
ACTION: time3.timestamp 
time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time2.replace(tzinfo=zone1)                                     # STEP 32
ACTION: time9 = time2.replace(tzinfo=zone1) 
zone1 = 'US/Arizona' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.timestamp                                                         # STEP 33
ACTION: time6.timestamp 
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(months=val9)                                                # STEP 34
ACTION: time6.shift(months=val9) 
val9 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(hours=val2)                                       # STEP 35
ACTION: time5 = time8.replace(hours=val2) 
val2 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(tzinfo=zone1)                                     # STEP 36
ACTION: time6 = time7.replace(tzinfo=zone1) 
zone1 = 'US/Arizona' : <type 'str'>
time7 = <Arrow [1970-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [1970-01-01T01:01:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time8.to(zone1)                                                 # STEP 37
ACTION: time0 = time8.to(zone1) 
zone1 = 'US/Arizona' : <type 'str'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [1970-01-01T00:00:00-05:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.datetime                                                          # STEP 38
ACTION: time3.datetime 
time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.replace(year=val1)                                        # STEP 39
ACTION: time2 = time8.replace(year=val1) 
val1 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time4.replace(hours=val9)                                       # STEP 40
ACTION: time8 = time4.replace(hours=val9) 
val9 = 0 : <type 'int'>
time4 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time1.replace(year=val1)                                        # STEP 41
ACTION: time3 = time1.replace(year=val1) 
val1 = 1 : <type 'int'>
time1 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Turkey'                                                        # STEP 42
ACTION: zone3 = 'Turkey'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Turkey' : <type 'str'>
==================================================
time6.shift(seconds=val6)                                               # STEP 43
ACTION: time6.shift(seconds=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:01:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time5.replace(month=val1)                                       # STEP 44
ACTION: time1 = time5.replace(month=val1) 
val1 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time0.replace(year=val1)                                        # STEP 45
ACTION: time7 = time0.replace(year=val1) 
val1 = 1 : <type 'int'>
time0 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time4.replace(minutes=val2)                                     # STEP 46
ACTION: time0 = time4.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time4 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time1.to(zone1)                                                 # STEP 47
ACTION: time5 = time1.to(zone1) 
zone1 = 'US/Arizona' : <type 'str'>
time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(hours=val2)                                       # STEP 48
ACTION: time4 = time5.replace(hours=val2) 
val2 = 0 : <type 'int'>
time5 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time6.replace(tzinfo=zone2)                                     # STEP 49
ACTION: time1 = time6.replace(tzinfo=zone2) 
zone2 = 'US/Eastern' : <type 'str'>
time6 = <Arrow [1970-01-01T01:01:00-07:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T01:01:00-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Poland'                                                        # STEP 50
ACTION: zone0 = 'Poland'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Poland' : <type 'str'>
==================================================
time5 = time6.replace(hours=val6)                                       # STEP 51
ACTION: time5 = time6.replace(hours=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:01:00-07:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T00:01:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val2)                                                # STEP 52
ACTION: time3.shift(months=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(years=val6)                                                 # STEP 53
ACTION: time4.shift(years=val6) 
val6 = -1 : <type 'int'>
time4 = <Arrow [1969-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(tzinfo=zone3)                                     # STEP 54
ACTION: time3 = time7.replace(tzinfo=zone3) 
zone3 = 'Turkey' : <type 'str'>
time7 = <Arrow [0001-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-12-31T18:00:00+01:57]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time1.replace(tzinfo=zone3)                                     # STEP 55
ACTION: time7 = time1.replace(tzinfo=zone3) 
zone3 = 'Turkey' : <type 'str'>
time1 = <Arrow [1970-01-01T01:01:00-05:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [0001-12-31T18:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T01:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(months=val2)                                                # STEP 56
ACTION: time8.shift(months=val2) 
val2 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time2.replace(seconds=val9)                                     # STEP 57
ACTION: time6 = time2.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time2 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T01:01:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time6.to(zone2)                                                 # STEP 58
ACTION: time2 = time6.to(zone2) 
zone2 = 'US/Eastern' : <type 'str'>
time6 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2817a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 25375, in act737
    self.p_time[2] = self.p_time[6].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #131 STEP #99 (0:00:30.000364) Tue Nov 21 20:23:30 2017 [ 254 stmts 339 branches ] (no cov+ for 15 tests) 13058 TOTAL ACTIONS (435.26138455/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 99
STOPPING TESTING DUE TO TIMEOUT
22.2156398104 PERCENT COVERED
60.2448830605 TOTAL RUNTIME
265 EXECUTED
26359 TOTAL TEST OPERATIONS
20.8591732979 TIME SPENT EXECUTING TEST OPERATIONS
27.9866132736 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0181279182434 TIME SPENT CHECKING PROPERTIES
20.8773012161 TOTAL TIME SPENT RUNNING SUT
0.195085525513 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
locale4 =  u'ko'                                                         # STEP 0
locale1 =  u'ru_ru'                                                      # STEP 1
locale3 =  u'hu'                                                         # STEP 2
zone2 = 'US/Eastern'                                                     # STEP 3
locale2 =  u'sv'                                                         # STEP 4
val1 = 0                                                                 # STEP 5
locale0 =  u'ru_ru'                                                      # STEP 6
val2 = 0                                                                 # STEP 7
zone1 = 'US/Arizona'                                                     # STEP 8
val1 += 1                                                                # STEP 9
val6 = 0                                                                # STEP 10
time7 = arrow.get(val6)                                                 # STEP 11
val6 -= 1                                                               # STEP 12
time2 = time7.replace(minutes=val2)                                     # STEP 13
time6 = time7.replace(hours=val1)                                       # STEP 14
time9 = time7.replace(seconds=val2)                                     # STEP 15
time1 = time7.replace(minutes=val1)                                     # STEP 16
time7.humanize(locale=locale0)                                          # STEP 17
val9 = 0                                                                # STEP 18
time4 = time7.replace(hours=val1)                                       # STEP 19
time0 = time2.replace(tzinfo=zone2)                                     # STEP 20
time7.shift(minutes=val1)                                               # STEP 21
time7 = time6.replace(minutes=val1)                                     # STEP 22
time8 = time6.replace(minutes=val9)                                     # STEP 23
time0.shift(hours=val6)                                                 # STEP 24
locale0 =  u'el_gr'                                                     # STEP 25
time2.shift(seconds=val1)                                               # STEP 26
time3 = time9.to(zone1)                                                 # STEP 27
time9 = time9.to(zone1)                                                 # STEP 28
time9.shift(years=val9)                                                 # STEP 29
time6 = time2.replace(month=val1)                                       # STEP 30
time3.timestamp                                                         # STEP 31
time9 = time2.replace(tzinfo=zone1)                                     # STEP 32
time6.timestamp                                                         # STEP 33
time6.shift(months=val9)                                                # STEP 34
time5 = time8.replace(hours=val2)                                       # STEP 35
time6 = time7.replace(tzinfo=zone1)                                     # STEP 36
time0 = time8.to(zone1)                                                 # STEP 37
time3.datetime                                                          # STEP 38
time2 = time8.replace(year=val1)                                        # STEP 39
time8 = time4.replace(hours=val9)                                       # STEP 40
time3 = time1.replace(year=val1)                                        # STEP 41
zone3 = 'Turkey'                                                        # STEP 42
time6.shift(seconds=val6)                                               # STEP 43
time1 = time5.replace(month=val1)                                       # STEP 44
time7 = time0.replace(year=val1)                                        # STEP 45
time0 = time4.replace(minutes=val2)                                     # STEP 46
time5 = time1.to(zone1)                                                 # STEP 47
time4 = time5.replace(hours=val2)                                       # STEP 48
time1 = time6.replace(tzinfo=zone2)                                     # STEP 49
zone0 = 'Poland'                                                        # STEP 50
time5 = time6.replace(hours=val6)                                       # STEP 51
time3.shift(months=val2)                                                # STEP 52
time4.shift(years=val6)                                                 # STEP 53
time3 = time7.replace(tzinfo=zone3)                                     # STEP 54
time7 = time1.replace(tzinfo=zone3)                                     # STEP 55
time8.shift(months=val2)                                                # STEP 56
time6 = time2.replace(seconds=val9)                                     # STEP 57
time2 = time6.to(zone2)                                                 # STEP 58
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a2817a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 25375, in act737
    self.p_time[2] = self.p_time[6].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
341 BRANCHES COVERED
255 STATEMENTS COVERED
