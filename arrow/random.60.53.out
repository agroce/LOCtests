Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14738.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #151 STEP #47 (0:00:30.000220) Tue Nov 21 18:01:40 2017 [ 245 stmts 323 branches ] (no cov+ for 92 tests) 15047 TOTAL ACTIONS (501.562987529/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109c69518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 22139, in act666
    self.p_time[1] = self.p_time[2].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 39 steps

SAVING TEST AS failure.14738.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale0 =  u'be'                                                         # STEP 0
ACTION: locale0 =  u'be' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'be' : <type 'unicode'>
==================================================
locale2 =  u'ru'                                                         # STEP 1
ACTION: locale2 =  u'ru' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'ru' : <type 'unicode'>
==================================================
locale3 =  u'fi_fi'                                                      # STEP 2
ACTION: locale3 =  u'fi_fi' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'fi_fi' : <type 'unicode'>
==================================================
locale4 =  u'pt_pt'                                                      # STEP 3
ACTION: locale4 =  u'pt_pt' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'pt_pt' : <type 'unicode'>
==================================================
locale1 =  u'ko_kr'                                                      # STEP 4
ACTION: locale1 =  u'ko_kr' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'ko_kr' : <type 'unicode'>
==================================================
zone4 = 'Australia/Brisbane'                                             # STEP 5
ACTION: zone4 = 'Australia/Brisbane'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Australia/Brisbane' : <type 'str'>
==================================================
val4 = 0                                                                 # STEP 6
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
time2 = arrow.get(val4)                                                  # STEP 7
ACTION: time2 = arrow.get(val4) 
val4 = 0 : <type 'int'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time2.replace(hours=val4)                                        # STEP 8
ACTION: time4 = time2.replace(hours=val4) 
val4 = 0 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Turkey'                                                         # STEP 9
ACTION: zone1 = 'Turkey'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Turkey' : <type 'str'>
==================================================
time1 = time2.to(zone1)                                                 # STEP 10
ACTION: time1 = time2.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time2.to(zone4)                                                 # STEP 11
ACTION: time2 = time2.to(zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time4.replace(tzinfo=zone4)                                     # STEP 12
ACTION: time6 = time4.replace(tzinfo=zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.timestamp                                                         # STEP 13
ACTION: time1.timestamp 
time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 += 1                                                               # STEP 14
ACTION: val4 += 1 
val4 = 0 : <type 'int'>
=> val4 = 1 : <type 'int'>
==================================================
time1.humanize(locale=locale2)                                          # STEP 15
ACTION: time1.humanize(locale=locale2) 
locale2 = u'ru' : <type 'unicode'>
time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(seconds=val4)                                     # STEP 16
ACTION: time7 = time2.replace(seconds=val4) 
val4 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(year=val4)                                        # STEP 17
ACTION: time8 = time7.replace(year=val4) 
val4 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time8.to(zone4)                                                 # STEP 18
ACTION: time3 = time8.to(zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time8 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time4.to(zone4)                                                 # STEP 19
ACTION: time2 = time4.to(zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time7.replace(year=val4)                                        # STEP 20
ACTION: time9 = time7.replace(year=val4) 
val4 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time4.replace(seconds=val4)                                     # STEP 21
ACTION: time1 = time4.replace(seconds=val4) 
val4 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time6.replace(month=val4)                                       # STEP 22
ACTION: time5 = time6.replace(month=val4) 
val4 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(weeks=val4)                                                 # STEP 23
ACTION: time5.shift(weeks=val4) 
val4 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time2.replace(tzinfo=zone4)                                     # STEP 24
ACTION: time8 = time2.replace(tzinfo=zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(tzinfo=zone1)                                     # STEP 25
ACTION: time4 = time5.replace(tzinfo=zone1) 
zone1 = 'Turkey' : <type 'str'>
time5 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val4)                                                 # STEP 26
ACTION: time7.shift(hours=val4) 
val4 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale2 =  u'vi'                                                        # STEP 27
ACTION: locale2 =  u'vi' 
locale2 = u'ru' : <type 'unicode'>
=> locale2 = u'vi' : <type 'unicode'>
==================================================
time1.humanize(locale=locale2)                                          # STEP 28
ACTION: time1.humanize(locale=locale2) 
locale2 = u'vi' : <type 'unicode'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.to(zone1)                                                 # STEP 29
ACTION: time6 = time9.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time9 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T01:57:01+01:57]> : <class 'arrow.arrow.Arrow'>
==================================================
locale2 =  u'be_by'                                                     # STEP 30
ACTION: locale2 =  u'be_by' 
locale2 = u'vi' : <type 'unicode'>
=> locale2 = u'be_by' : <type 'unicode'>
==================================================
time0 = time4.replace(tzinfo=zone1)                                     # STEP 31
ACTION: time0 = time4.replace(tzinfo=zone1) 
zone1 = 'Turkey' : <type 'str'>
time4 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.to(zone1)                                                 # STEP 32
ACTION: time5 = time2.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.humanize(locale=locale0)                                          # STEP 33
ACTION: time2.humanize(locale=locale0) 
locale0 = u'be' : <type 'unicode'>
time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Eastern'                                                    # STEP 34
ACTION: zone1 = 'US/Eastern'  
zone1 = 'Turkey' : <type 'str'>
=> zone1 = 'US/Eastern' : <type 'str'>
==================================================
time2 = time9.replace(hours=val4)                                       # STEP 35
ACTION: time2 = time9.replace(hours=val4) 
val4 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T11:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(years=val4)                                                 # STEP 36
ACTION: time3.shift(years=val4) 
val4 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time4.replace(tzinfo=zone1)                                     # STEP 37
ACTION: time7 = time4.replace(tzinfo=zone1) 
zone1 = 'US/Eastern' : <type 'str'>
time4 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T10:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T00:00:00-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time2.to(zone1)                                                 # STEP 38
ACTION: time1 = time2.to(zone1) 
zone1 = 'US/Eastern' : <type 'str'>
time2 = <Arrow [0001-01-01T11:00:01+10:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109c69440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 22139, in act666
    self.p_time[1] = self.p_time[2].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 3
STOPPING TESTING DUE TO TIMEOUT
22.2156398104 PERCENT COVERED
60.1804170609 TOTAL RUNTIME
301 EXECUTED
29942 TOTAL TEST OPERATIONS
22.1031396389 TIME SPENT EXECUTING TEST OPERATIONS
37.399907589 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0198619365692 TIME SPENT CHECKING PROPERTIES
22.1230015755 TOTAL TIME SPENT RUNNING SUT
0.202882766724 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
locale0 =  u'be'                                                         # STEP 0
locale2 =  u'ru'                                                         # STEP 1
locale3 =  u'fi_fi'                                                      # STEP 2
locale4 =  u'pt_pt'                                                      # STEP 3
locale1 =  u'ko_kr'                                                      # STEP 4
zone4 = 'Australia/Brisbane'                                             # STEP 5
val4 = 0                                                                 # STEP 6
time2 = arrow.get(val4)                                                  # STEP 7
time4 = time2.replace(hours=val4)                                        # STEP 8
zone1 = 'Turkey'                                                         # STEP 9
time1 = time2.to(zone1)                                                 # STEP 10
time2 = time2.to(zone4)                                                 # STEP 11
time6 = time4.replace(tzinfo=zone4)                                     # STEP 12
time1.timestamp                                                         # STEP 13
val4 += 1                                                               # STEP 14
time1.humanize(locale=locale2)                                          # STEP 15
time7 = time2.replace(seconds=val4)                                     # STEP 16
time8 = time7.replace(year=val4)                                        # STEP 17
time3 = time8.to(zone4)                                                 # STEP 18
time2 = time4.to(zone4)                                                 # STEP 19
time9 = time7.replace(year=val4)                                        # STEP 20
time1 = time4.replace(seconds=val4)                                     # STEP 21
time5 = time6.replace(month=val4)                                       # STEP 22
time5.shift(weeks=val4)                                                 # STEP 23
time8 = time2.replace(tzinfo=zone4)                                     # STEP 24
time4 = time5.replace(tzinfo=zone1)                                     # STEP 25
time7.shift(hours=val4)                                                 # STEP 26
locale2 =  u'vi'                                                        # STEP 27
time1.humanize(locale=locale2)                                          # STEP 28
time6 = time9.to(zone1)                                                 # STEP 29
locale2 =  u'be_by'                                                     # STEP 30
time0 = time4.replace(tzinfo=zone1)                                     # STEP 31
time5 = time2.to(zone1)                                                 # STEP 32
time2.humanize(locale=locale0)                                          # STEP 33
zone1 = 'US/Eastern'                                                    # STEP 34
time2 = time9.replace(hours=val4)                                       # STEP 35
time3.shift(years=val4)                                                 # STEP 36
time7 = time4.replace(tzinfo=zone1)                                     # STEP 37
time1 = time2.to(zone1)                                                 # STEP 38
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109c69440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 22139, in act666
    self.p_time[1] = self.p_time[2].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
341 BRANCHES COVERED
255 STATEMENTS COVERED
