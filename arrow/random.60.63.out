Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14925.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a31ae60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 36801, in act988
    self.p_time[7] = self.p_time[6].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
Original test has 24 steps

SAVING TEST AS failure.14925.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale2 =  u'he'                                                         # STEP 0
ACTION: locale2 =  u'he' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'he' : <type 'unicode'>
==================================================
locale0 =  u'sl'                                                         # STEP 1
ACTION: locale0 =  u'sl' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'sl' : <type 'unicode'>
==================================================
locale3 =  u'ro'                                                         # STEP 2
ACTION: locale3 =  u'ro' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'ro' : <type 'unicode'>
==================================================
zone4 = 'US/Mountain'                                                    # STEP 3
ACTION: zone4 = 'US/Mountain'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Mountain' : <type 'str'>
==================================================
locale4 =  u'ua'                                                         # STEP 4
ACTION: locale4 =  u'ua' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'ua' : <type 'unicode'>
==================================================
zone3 = 'Asia/Samarkand'                                                 # STEP 5
ACTION: zone3 = 'Asia/Samarkand'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Asia/Samarkand' : <type 'str'>
==================================================
zone1 = 'US/Eastern'                                                     # STEP 6
ACTION: zone1 = 'US/Eastern'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Eastern' : <type 'str'>
==================================================
val3 = 0                                                                 # STEP 7
ACTION: val3 = 0 
val3 = None : <type 'NoneType'>
=> val3 = 0 : <type 'int'>
==================================================
locale1 =  u'en_au'                                                      # STEP 8
ACTION: locale1 =  u'en_au' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'en_au' : <type 'unicode'>
==================================================
zone0 = 'Turkey'                                                         # STEP 9
ACTION: zone0 = 'Turkey'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Turkey' : <type 'str'>
==================================================
val3 += 1                                                               # STEP 10
ACTION: val3 += 1 
val3 = 0 : <type 'int'>
=> val3 = 1 : <type 'int'>
==================================================
time6 = arrow.get(val3)                                                 # STEP 11
ACTION: time6 = arrow.get(val3) 
val3 = 1 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time6.replace(tzinfo=zone3)                                     # STEP 12
ACTION: time1 = time6.replace(tzinfo=zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(seconds=val3)                                               # STEP 13
ACTION: time6.shift(seconds=val3) 
val3 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.humanize(locale=locale0)                                          # STEP 14
ACTION: time1.humanize(locale=locale0) 
locale0 = u'sl' : <type 'unicode'>
time1 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'pl_pl'                                                     # STEP 15
ACTION: locale0 =  u'pl_pl' 
locale0 = u'sl' : <type 'unicode'>
=> locale0 = u'pl_pl' : <type 'unicode'>
==================================================
time0 = arrow.now(zone3)                                                # STEP 16
ACTION: time0 = arrow.now(zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-22T08:02:26.419349+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.now()                                                     # STEP 17
ACTION: time3 = arrow.now() 
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-21T19:02:26.420222-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time0.replace(year=val3)                                        # STEP 18
ACTION: time6 = time0.replace(year=val3) 
val3 = 1 : <type 'int'>
time0 = <Arrow [2017-11-22T08:02:26.419349+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-22T08:02:26.419349+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time6.to(zone3)                                                 # STEP 19
ACTION: time4 = time6.to(zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time6 = <Arrow [0001-11-22T08:02:26.419349+04:28]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-11-22T08:02:26.419349+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time1.replace(year=val3)                                        # STEP 20
ACTION: time6 = time1.replace(year=val3) 
val3 = 1 : <type 'int'>
time1 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [0001-11-22T08:02:26.419349+04:28]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time4.to(zone4)                                                 # STEP 21
ACTION: time1 = time4.to(zone4) 
zone4 = 'US/Mountain' : <type 'str'>
time4 = <Arrow [0001-11-22T08:02:26.419349+04:28]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-11-21T20:34:26.419349-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale0)                                          # STEP 22
ACTION: time3.humanize(locale=locale0) 
locale0 = u'pl_pl' : <type 'unicode'>
time3 = <Arrow [2017-11-21T19:02:26.420222-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.to(zone3)                                                 # STEP 23
ACTION: time7 = time6.to(zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time6 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a31a200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 36801, in act988
    self.p_time[7] = self.p_time[6].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #149 STEP #32 (0:00:30.007485) Tue Nov 21 19:02:26 2017 [ 252 stmts 336 branches ] (no cov+ for 2 tests) 14756 TOTAL ACTIONS (491.743977972/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a3cb0e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29823, in act835
    self.p_time[4] = self.p_time[6].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 13 steps

SAVING TEST AS failure.14925.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone1 = 'Turkey'                                                         # STEP 0
ACTION: zone1 = 'Turkey'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Turkey' : <type 'str'>
==================================================
locale2 =  u'he_il'                                                      # STEP 1
ACTION: locale2 =  u'he_il' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'he_il' : <type 'unicode'>
==================================================
val4 = 0                                                                 # STEP 2
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
locale4 =  u'nb'                                                         # STEP 3
ACTION: locale4 =  u'nb' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'nb' : <type 'unicode'>
==================================================
zone2 = 'US/Pacific'                                                     # STEP 4
ACTION: zone2 = 'US/Pacific'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Pacific' : <type 'str'>
==================================================
locale1 =  u'ca_fr'                                                      # STEP 5
ACTION: locale1 =  u'ca_fr' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'ca_fr' : <type 'unicode'>
==================================================
locale0 =  u'sv'                                                         # STEP 6
ACTION: locale0 =  u'sv' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'sv' : <type 'unicode'>
==================================================
val4 += 1                                                                # STEP 7
ACTION: val4 += 1 
val4 = 0 : <type 'int'>
=> val4 = 1 : <type 'int'>
==================================================
locale3 =  u'ja'                                                         # STEP 8
ACTION: locale3 =  u'ja' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'ja' : <type 'unicode'>
==================================================
time9 = arrow.get(val4)                                                  # STEP 9
ACTION: time9 = arrow.get(val4) 
val4 = 1 : <type 'int'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.replace(year=val4)                                        # STEP 10
ACTION: time6 = time9.replace(year=val4) 
val4 = 1 : <type 'int'>
time9 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Mountain'                                                   # STEP 11
ACTION: zone0 = 'US/Mountain'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Mountain' : <type 'str'>
==================================================
time4 = time6.to(zone0)                                                 # STEP 12
ACTION: time4 = time6.to(zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time6 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a3cb638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29823, in act835
    self.p_time[4] = self.p_time[6].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 16
STOPPING TESTING DUE TO TIMEOUT
22.2156398104 PERCENT COVERED
60.1755678654 TOTAL RUNTIME
298 EXECUTED
29553 TOTAL TEST OPERATIONS
22.1902749538 TIME SPENT EXECUTING TEST OPERATIONS
37.3210878372 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0219111442566 TIME SPENT CHECKING PROPERTIES
22.2121860981 TOTAL TIME SPENT RUNNING SUT
0.204258203506 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
locale2 =  u'he'                                                         # STEP 0
locale0 =  u'sl'                                                         # STEP 1
locale3 =  u'ro'                                                         # STEP 2
zone4 = 'US/Mountain'                                                    # STEP 3
locale4 =  u'ua'                                                         # STEP 4
zone3 = 'Asia/Samarkand'                                                 # STEP 5
zone1 = 'US/Eastern'                                                     # STEP 6
val3 = 0                                                                 # STEP 7
locale1 =  u'en_au'                                                      # STEP 8
zone0 = 'Turkey'                                                         # STEP 9
val3 += 1                                                               # STEP 10
time6 = arrow.get(val3)                                                 # STEP 11
time1 = time6.replace(tzinfo=zone3)                                     # STEP 12
time6.shift(seconds=val3)                                               # STEP 13
time1.humanize(locale=locale0)                                          # STEP 14
locale0 =  u'pl_pl'                                                     # STEP 15
time0 = arrow.now(zone3)                                                # STEP 16
time3 = arrow.now()                                                     # STEP 17
time6 = time0.replace(year=val3)                                        # STEP 18
time4 = time6.to(zone3)                                                 # STEP 19
time6 = time1.replace(year=val3)                                        # STEP 20
time1 = time4.to(zone4)                                                 # STEP 21
time3.humanize(locale=locale0)                                          # STEP 22
time7 = time6.to(zone3)                                                 # STEP 23
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a31a200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 36801, in act988
    self.p_time[7] = self.p_time[6].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
FAILURE 1
zone1 = 'Turkey'                                                         # STEP 0
locale2 =  u'he_il'                                                      # STEP 1
val4 = 0                                                                 # STEP 2
locale4 =  u'nb'                                                         # STEP 3
zone2 = 'US/Pacific'                                                     # STEP 4
locale1 =  u'ca_fr'                                                      # STEP 5
locale0 =  u'sv'                                                         # STEP 6
val4 += 1                                                                # STEP 7
locale3 =  u'ja'                                                         # STEP 8
time9 = arrow.get(val4)                                                  # STEP 9
time6 = time9.replace(year=val4)                                        # STEP 10
zone0 = 'US/Mountain'                                                   # STEP 11
time4 = time6.to(zone0)                                                 # STEP 12
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a3cb638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29823, in act835
    self.p_time[4] = self.p_time[6].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
341 BRANCHES COVERED
255 STATEMENTS COVERED
