Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.8, timeout=60, output='failure.15005.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=0.8, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
** STARTING EXPLOITATION OF TESTS AT TIME 0.111765146255 AFTER 0 TESTS WITH NO NEW COVERAGE **
TEST #133 STEP #14 (0:00:30.001016) Tue Nov 21 19:22:42 2017 [ 244 stmts 322 branches ] (no cov+ for 32 tests) 13214 TOTAL ACTIONS (440.451747979/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109d839e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29391, in act825
    self.p_time[4] = self.p_time[4].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 36 steps

SAVING TEST AS failure.15005.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale1 =  u'bn'                                                         # STEP 0
ACTION: locale1 =  u'bn' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'bn' : <type 'unicode'>
==================================================
locale0 =  u'tl'                                                         # STEP 1
ACTION: locale0 =  u'tl' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'tl' : <type 'unicode'>
==================================================
locale4 =  u'nn_no'                                                      # STEP 2
ACTION: locale4 =  u'nn_no' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'nn_no' : <type 'unicode'>
==================================================
locale2 =  u'en_gb'                                                      # STEP 3
ACTION: locale2 =  u'en_gb' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'en_gb' : <type 'unicode'>
==================================================
locale3 =  u'mk_mk'                                                      # STEP 4
ACTION: locale3 =  u'mk_mk' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'mk_mk' : <type 'unicode'>
==================================================
val4 = 0                                                                 # STEP 5
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
zone0 = 'US/Eastern'                                                     # STEP 6
ACTION: zone0 = 'US/Eastern'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Eastern' : <type 'str'>
==================================================
zone1 = 'Australia/Brisbane'                                             # STEP 7
ACTION: zone1 = 'Australia/Brisbane'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Australia/Brisbane' : <type 'str'>
==================================================
val2 = 0                                                                 # STEP 8
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
time2 = arrow.get(val2)                                                  # STEP 9
ACTION: time2 = arrow.get(val2) 
val2 = 0 : <type 'int'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 += 1                                                               # STEP 10
ACTION: val2 += 1 
val2 = 0 : <type 'int'>
=> val2 = 1 : <type 'int'>
==================================================
time1 = time2.replace(hours=val2)                                       # STEP 11
ACTION: time1 = time2.replace(hours=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time2.replace(year=val2)                                        # STEP 12
ACTION: time9 = time2.replace(year=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(hours=val2)                                                 # STEP 13
ACTION: time9.shift(hours=val2) 
val2 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.to(zone1)                                                 # STEP 14
ACTION: time5 = time2.to(zone1) 
zone1 = 'Australia/Brisbane' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(years=val2)                                                 # STEP 15
ACTION: time5.shift(years=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time9.replace(hours=val2)                                       # STEP 16
ACTION: time8 = time9.replace(hours=val2) 
val2 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.replace(hours=val2)                                       # STEP 17
ACTION: time2 = time5.replace(hours=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T11:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.humanize(locale=locale0)                                          # STEP 18
ACTION: time1.humanize(locale=locale0) 
locale0 = u'tl' : <type 'unicode'>
time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time2.replace(year=val2)                                        # STEP 19
ACTION: time0 = time2.replace(year=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T11:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-01-01T11:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.replace(minutes=val2)                                     # STEP 20
ACTION: time5 = time2.replace(minutes=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T11:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T10:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(minutes=val4)                                               # STEP 21
ACTION: time5.shift(minutes=val4) 
val4 = 0 : <type 'int'>
time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.replace(minutes=val2)                                     # STEP 22
ACTION: time4 = time8.replace(minutes=val2) 
val2 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.replace(tzinfo=zone0)                                     # STEP 23
ACTION: time2 = time5.replace(tzinfo=zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T11:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T11:01:00-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.get(val2)                                                 # STEP 24
ACTION: time8 = arrow.get(val2) 
val2 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time5.replace(year=val2)                                        # STEP 25
ACTION: time9 = time5.replace(year=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time5.replace(minutes=val4)                                     # STEP 26
ACTION: time3 = time5.replace(minutes=val4) 
val4 = 0 : <type 'int'>
time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.year                                                              # STEP 27
ACTION: time1.year 
time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(month=val2)                                       # STEP 28
ACTION: time1 = time3.replace(month=val2) 
val2 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.get(val2)                                                 # STEP 29
ACTION: time6 = arrow.get(val2) 
val2 = 1 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time5.replace(month=val2)                                       # STEP 30
ACTION: time3 = time5.replace(month=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(months=val2)                                                # STEP 31
ACTION: time9.shift(months=val2) 
val2 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.utcnow()                                                  # STEP 32
ACTION: time7 = arrow.utcnow() 
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-22T03:23:09.246169+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Etc/Greenwich'                                                 # STEP 33
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
time5 = time4.replace(hours=val4)                                       # STEP 34
ACTION: time5 = time4.replace(hours=val4) 
val4 = 0 : <type 'int'>
time4 = <Arrow [0001-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T11:01:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time4.to(zone0)                                                 # STEP 35
ACTION: time4 = time4.to(zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time4 = <Arrow [0001-01-01T01:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109d83d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29391, in act825
    self.p_time[4] = self.p_time[4].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 344
STOPPING TESTING DUE TO TIMEOUT
22.2156398104 PERCENT COVERED
60.2277810574 TOTAL RUNTIME
250 EXECUTED
24891 TOTAL TEST OPERATIONS
19.6446382999 TIME SPENT EXECUTING TEST OPERATIONS
24.2979364395 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0179402828217 TIME SPENT CHECKING PROPERTIES
19.6625785828 TOTAL TIME SPENT RUNNING SUT
0.193001508713 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
locale1 =  u'bn'                                                         # STEP 0
locale0 =  u'tl'                                                         # STEP 1
locale4 =  u'nn_no'                                                      # STEP 2
locale2 =  u'en_gb'                                                      # STEP 3
locale3 =  u'mk_mk'                                                      # STEP 4
val4 = 0                                                                 # STEP 5
zone0 = 'US/Eastern'                                                     # STEP 6
zone1 = 'Australia/Brisbane'                                             # STEP 7
val2 = 0                                                                 # STEP 8
time2 = arrow.get(val2)                                                  # STEP 9
val2 += 1                                                               # STEP 10
time1 = time2.replace(hours=val2)                                       # STEP 11
time9 = time2.replace(year=val2)                                        # STEP 12
time9.shift(hours=val2)                                                 # STEP 13
time5 = time2.to(zone1)                                                 # STEP 14
time5.shift(years=val2)                                                 # STEP 15
time8 = time9.replace(hours=val2)                                       # STEP 16
time2 = time5.replace(hours=val2)                                       # STEP 17
time1.humanize(locale=locale0)                                          # STEP 18
time0 = time2.replace(year=val2)                                        # STEP 19
time5 = time2.replace(minutes=val2)                                     # STEP 20
time5.shift(minutes=val4)                                               # STEP 21
time4 = time8.replace(minutes=val2)                                     # STEP 22
time2 = time5.replace(tzinfo=zone0)                                     # STEP 23
time8 = arrow.get(val2)                                                 # STEP 24
time9 = time5.replace(year=val2)                                        # STEP 25
time3 = time5.replace(minutes=val4)                                     # STEP 26
time1.year                                                              # STEP 27
time1 = time3.replace(month=val2)                                       # STEP 28
time6 = arrow.get(val2)                                                 # STEP 29
time3 = time5.replace(month=val2)                                       # STEP 30
time9.shift(months=val2)                                                # STEP 31
time7 = arrow.utcnow()                                                  # STEP 32
zone4 = 'Etc/Greenwich'                                                 # STEP 33
time5 = time4.replace(hours=val4)                                       # STEP 34
time4 = time4.to(zone0)                                                 # STEP 35
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109d83d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29391, in act825
    self.p_time[4] = self.p_time[4].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
341 BRANCHES COVERED
255 STATEMENTS COVERED
