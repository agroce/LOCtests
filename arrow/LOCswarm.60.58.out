Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14852.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #69 STEP #23 (0:00:30.001630) Tue Nov 21 18:36:06 2017 [ 231 stmts 298 branches ] (no cov+ for 20 tests) 6823 TOTAL ACTIONS (227.420976279/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a2fad40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 309296, in act6900
    self.p_time[4].shift(months=self.p_val[5])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 42 steps

SAVING TEST AS failure.14852.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
val8 = 0                                                                 # STEP 0
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
zone4 = 'Singapore'                                                      # STEP 1
ACTION: zone4 = 'Singapore'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Singapore' : <type 'str'>
==================================================
time3 = arrow.get(val8)                                                  # STEP 2
ACTION: time3 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val5 = 0                                                                 # STEP 3
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
zone3 = 'US/Mountain'                                                    # STEP 4
ACTION: zone3 = 'US/Mountain'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Mountain' : <type 'str'>
==================================================
val5 -= 1                                                                # STEP 5
ACTION: val5 -= 1 
val5 = 0 : <type 'int'>
=> val5 = -1 : <type 'int'>
==================================================
time9 = arrow.now(zone3)                                                 # STEP 6
ACTION: time9 = arrow.now(zone3) 
zone3 = 'US/Mountain' : <type 'str'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.format()                                                           # STEP 7
ACTION: time3.format() 
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time3.replace(seconds=val8)                                      # STEP 8
ACTION: time8 = time3.replace(seconds=val8) 
val8 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 = 0                                                                 # STEP 9
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
time1 = time9.replace(seconds=val8)                                     # STEP 10
ACTION: time1 = time9.replace(seconds=val8) 
val8 = 0 : <type 'int'>
time9 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 += 1                                                               # STEP 11
ACTION: val4 += 1 
val4 = 0 : <type 'int'>
=> val4 = 1 : <type 'int'>
==================================================
zone2 = 'Europe/Rome'                                                   # STEP 12
ACTION: zone2 = 'Europe/Rome'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Europe/Rome' : <type 'str'>
==================================================
time5 = time3.replace(month=val4)                                       # STEP 13
ACTION: time5 = time3.replace(month=val4) 
val4 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time8.replace(month=val4)                                       # STEP 14
ACTION: time3 = time8.replace(month=val4) 
val4 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(year=val4)                                        # STEP 15
ACTION: time7 = time8.replace(year=val4) 
val4 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time3.replace(seconds=val8)                                     # STEP 16
ACTION: time8 = time3.replace(seconds=val8) 
val8 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time8.replace(month=val4)                                       # STEP 17
ACTION: time0 = time8.replace(month=val4) 
val4 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time0.replace(year=val4)                                        # STEP 18
ACTION: time4 = time0.replace(year=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 -= 1                                                               # STEP 19
ACTION: val4 -= 1 
val4 = 1 : <type 'int'>
=> val4 = 0 : <type 'int'>
==================================================
zone3 = 'Etc/Greenwich'                                                 # STEP 20
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = 'US/Mountain' : <type 'str'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
val5 -= 1                                                               # STEP 21
ACTION: val5 -= 1 
val5 = -1 : <type 'int'>
=> val5 = -2 : <type 'int'>
==================================================
time1.datetime                                                          # STEP 22
ACTION: time1.datetime 
time1 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Asia/Samarkand'                                                # STEP 23
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
time3 = arrow.now(zone4)                                                # STEP 24
ACTION: time3 = arrow.now(zone4) 
zone4 = 'Singapore' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-22T10:36:23.707474+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.now(zone2)                                                # STEP 25
ACTION: time2 = arrow.now(zone2) 
zone2 = 'Europe/Rome' : <type 'str'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-22T03:36:23.709177+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.format()                                                          # STEP 26
ACTION: time1.format() 
time1 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Poland'                                                        # STEP 27
ACTION: zone0 = 'Poland'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Poland' : <type 'str'>
==================================================
time8.shift(months=val8)                                                # STEP 28
ACTION: time8.shift(months=val8) 
val8 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now(zone1)                                                # STEP 29
ACTION: time6 = arrow.now(zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-22T07:36:23.713008+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now(zone4)                                                # STEP 30
ACTION: time9 = arrow.now(zone4) 
zone4 = 'Singapore' : <type 'str'>
time9 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-22T10:36:23.714361+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 += 1                                                               # STEP 31
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
val4 += 1                                                               # STEP 32
ACTION: val4 += 1 
val4 = 0 : <type 'int'>
=> val4 = 1 : <type 'int'>
==================================================
time0 = arrow.now(zone1)                                                # STEP 33
ACTION: time0 = arrow.now(zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-22T07:36:23.716830+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(year=val8)                                        # STEP 34
ACTION: time8 = time7.replace(year=val8) 
val8 = 1 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 -= 1                                                               # STEP 35
ACTION: val4 -= 1 
val4 = 1 : <type 'int'>
=> val4 = 0 : <type 'int'>
==================================================
time1 = arrow.now(zone1)                                                # STEP 36
ACTION: time1 = arrow.now(zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time1 = <Arrow [2017-11-21T19:36:23.695108-07:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T07:36:23.719691+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time7.replace(month=val8)                                       # STEP 37
ACTION: time7 = time7.replace(month=val8) 
val8 = 1 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val5)                                                # STEP 38
ACTION: time3.shift(months=val5) 
val5 = -2 : <type 'int'>
time3 = <Arrow [2017-11-22T10:36:23.707474+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Asia/Samarkand'                                                # STEP 39
ACTION: zone2 = 'Asia/Samarkand'  
zone2 = 'Europe/Rome' : <type 'str'>
=> zone2 = 'Asia/Samarkand' : <type 'str'>
==================================================
time3 = arrow.get(val8)                                                 # STEP 40
ACTION: time3 = arrow.get(val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T10:36:23.707474+08:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(months=val5)                                                # STEP 41
ACTION: time4.shift(months=val5) 
val5 = -2 : <type 'int'>
time4 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a30bf38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 309296, in act6900
    self.p_time[4].shift(months=self.p_val[5])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 72
STOPPING TESTING DUE TO TIMEOUT
20.7938388626 PERCENT COVERED
60.1807670593 TOTAL RUNTIME
144 EXECUTED
14314 TOTAL TEST OPERATIONS
9.16132211685 TIME SPENT EXECUTING TEST OPERATIONS
50.0053486824 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00939393043518 TIME SPENT CHECKING PROPERTIES
9.17071604729 TOTAL TIME SPENT RUNNING SUT
0.144241094589 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
val8 = 0                                                                 # STEP 0
zone4 = 'Singapore'                                                      # STEP 1
time3 = arrow.get(val8)                                                  # STEP 2
val5 = 0                                                                 # STEP 3
zone3 = 'US/Mountain'                                                    # STEP 4
val5 -= 1                                                                # STEP 5
time9 = arrow.now(zone3)                                                 # STEP 6
time3.format()                                                           # STEP 7
time8 = time3.replace(seconds=val8)                                      # STEP 8
val4 = 0                                                                 # STEP 9
time1 = time9.replace(seconds=val8)                                     # STEP 10
val4 += 1                                                               # STEP 11
zone2 = 'Europe/Rome'                                                   # STEP 12
time5 = time3.replace(month=val4)                                       # STEP 13
time3 = time8.replace(month=val4)                                       # STEP 14
time7 = time8.replace(year=val4)                                        # STEP 15
time8 = time3.replace(seconds=val8)                                     # STEP 16
time0 = time8.replace(month=val4)                                       # STEP 17
time4 = time0.replace(year=val4)                                        # STEP 18
val4 -= 1                                                               # STEP 19
zone3 = 'Etc/Greenwich'                                                 # STEP 20
val5 -= 1                                                               # STEP 21
time1.datetime                                                          # STEP 22
zone1 = 'Asia/Samarkand'                                                # STEP 23
time3 = arrow.now(zone4)                                                # STEP 24
time2 = arrow.now(zone2)                                                # STEP 25
time1.format()                                                          # STEP 26
zone0 = 'Poland'                                                        # STEP 27
time8.shift(months=val8)                                                # STEP 28
time6 = arrow.now(zone1)                                                # STEP 29
time9 = arrow.now(zone4)                                                # STEP 30
val8 += 1                                                               # STEP 31
val4 += 1                                                               # STEP 32
time0 = arrow.now(zone1)                                                # STEP 33
time8 = time7.replace(year=val8)                                        # STEP 34
val4 -= 1                                                               # STEP 35
time1 = arrow.now(zone1)                                                # STEP 36
time7 = time7.replace(month=val8)                                       # STEP 37
time3.shift(months=val5)                                                # STEP 38
zone2 = 'Asia/Samarkand'                                                # STEP 39
time3 = arrow.get(val8)                                                 # STEP 40
time4.shift(months=val5)                                                # STEP 41
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a30bf38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 309296, in act6900
    self.p_time[4].shift(months=self.p_val[5])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
319 BRANCHES COVERED
243 STATEMENTS COVERED
