Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14773.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x107462c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 167121, in act3748
    self.p_time[4] = self.p_time[9].replace(hours=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 429, in replace
    current += relativedelta(**relative_kwargs) # TODO: DEPRECATED
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
Original test has 54 steps

SAVING TEST AS failure.14773.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale3 =  u'de_at'                                                      # STEP 0
ACTION: locale3 =  u'de_at' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'de_at' : <type 'unicode'>
==================================================
locale0 =  u'zh_tw'                                                      # STEP 1
ACTION: locale0 =  u'zh_tw' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'zh_tw' : <type 'unicode'>
==================================================
locale1 =  u'ca'                                                         # STEP 2
ACTION: locale1 =  u'ca' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'ca' : <type 'unicode'>
==================================================
locale2 =  u'ca_it'                                                      # STEP 3
ACTION: locale2 =  u'ca_it' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'ca_it' : <type 'unicode'>
==================================================
zone0 = 'Etc/Greenwich'                                                  # STEP 4
ACTION: zone0 = 'Etc/Greenwich'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Etc/Greenwich' : <type 'str'>
==================================================
locale4 =  u'is_is'                                                      # STEP 5
ACTION: locale4 =  u'is_is' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'is_is' : <type 'unicode'>
==================================================
zone2 = 'US/Alaska'                                                      # STEP 6
ACTION: zone2 = 'US/Alaska'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Alaska' : <type 'str'>
==================================================
zone4 = 'US/Pacific'                                                     # STEP 7
ACTION: zone4 = 'US/Pacific'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Pacific' : <type 'str'>
==================================================
zone1 = 'US/Mountain'                                                    # STEP 8
ACTION: zone1 = 'US/Mountain'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Mountain' : <type 'str'>
==================================================
val8 = 0                                                                 # STEP 9
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
val9 = 0                                                                # STEP 10
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
zone3 = 'Asia/Samarkand'                                                # STEP 11
ACTION: zone3 = 'Asia/Samarkand'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Asia/Samarkand' : <type 'str'>
==================================================
val7 = 0                                                                # STEP 12
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
val4 = 0                                                                # STEP 13
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
val8 += 1                                                               # STEP 14
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
val3 = 0                                                                # STEP 15
ACTION: val3 = 0 
val3 = None : <type 'NoneType'>
=> val3 = 0 : <type 'int'>
==================================================
val8 = 0                                                                # STEP 16
ACTION: val8 = 0 
val8 = 1 : <type 'int'>
=> val8 = 0 : <type 'int'>
==================================================
time6 = arrow.get(val8)                                                 # STEP 17
ACTION: time6 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time6.replace(hours=val4)                                       # STEP 18
ACTION: time3 = time6.replace(hours=val4) 
val4 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time3.replace(hours=val8)                                       # STEP 19
ACTION: time5 = time3.replace(hours=val8) 
val8 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.replace(hours=val9)                                       # STEP 20
ACTION: time4 = time3.replace(hours=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 += 1                                                               # STEP 21
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
time8 = time6.replace(hours=val8)                                       # STEP 22
ACTION: time8 = time6.replace(hours=val8) 
val8 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time6.replace(hours=val3)                                       # STEP 23
ACTION: time0 = time6.replace(hours=val3) 
val3 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.replace(year=val8)                                        # STEP 24
ACTION: time3 = time4.replace(year=val8) 
val8 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(weeks=val7)                                                 # STEP 25
ACTION: time0.shift(weeks=val7) 
val7 = 0 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time3.replace(hours=val8)                                       # STEP 26
ACTION: time9 = time3.replace(hours=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val3 -= 1                                                               # STEP 27
ACTION: val3 -= 1 
val3 = 0 : <type 'int'>
=> val3 = -1 : <type 'int'>
==================================================
time0.shift(minutes=val9)                                               # STEP 28
ACTION: time0.shift(minutes=val9) 
val9 = 0 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time3.replace(year=val8)                                        # STEP 29
ACTION: time0 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(seconds=val9)                                               # STEP 30
ACTION: time0.shift(seconds=val9) 
val9 = 0 : <type 'int'>
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.replace(hours=val7)                                       # STEP 31
ACTION: time2 = time8.replace(hours=val7) 
val7 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time2.replace(hours=val4)                                       # STEP 32
ACTION: time1 = time2.replace(hours=val4) 
val4 = 0 : <type 'int'>
time2 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time9.replace(hours=val8)                                       # STEP 33
ACTION: time3 = time9.replace(hours=val8) 
val8 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T02:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time0.replace(tzinfo=zone0)                                     # STEP 34
ACTION: time0 = time0.replace(tzinfo=zone0) 
zone0 = 'Etc/Greenwich' : <type 'str'>
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.replace(hours=val3)                                       # STEP 35
ACTION: time4 = time3.replace(hours=val3) 
val3 = -1 : <type 'int'>
time3 = <Arrow [0001-01-01T02:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(tzinfo=zone1)                                     # STEP 36
ACTION: time7 = time8.replace(tzinfo=zone1) 
zone1 = 'US/Mountain' : <type 'str'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T01:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.datetime                                                          # STEP 37
ACTION: time7.datetime 
time7 = <Arrow [1970-01-01T01:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time5.replace(tzinfo=zone0)                                     # STEP 38
ACTION: time8 = time5.replace(tzinfo=zone0) 
zone0 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.replace(year=val8)                                        # STEP 39
ACTION: time3 = time4.replace(year=val8) 
val8 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T02:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time9.replace(tzinfo=zone2)                                     # STEP 40
ACTION: time4 = time9.replace(tzinfo=zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time9 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-01-01T01:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(seconds=val4)                                               # STEP 41
ACTION: time8.shift(seconds=val4) 
val4 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time2.replace(tzinfo=zone3)                                     # STEP 42
ACTION: time8 = time2.replace(tzinfo=zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time2 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time0.replace(tzinfo=zone3)                                     # STEP 43
ACTION: time9 = time0.replace(tzinfo=zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 = 0                                                                # STEP 44
ACTION: val9 = 0 
val9 = 0 : <type 'int'>
==================================================
time7 = time3.replace(hours=val3)                                       # STEP 45
ACTION: time7 = time3.replace(hours=val3) 
val3 = -1 : <type 'int'>
time3 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T01:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.year                                                              # STEP 46
ACTION: time4.year 
time4 = <Arrow [0001-01-01T01:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.replace(hours=val3)                                       # STEP 47
ACTION: time3 = time4.replace(hours=val3) 
val3 = -1 : <type 'int'>
time4 = <Arrow [0001-01-01T01:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(weeks=val7)                                                 # STEP 48
ACTION: time0.shift(weeks=val7) 
val7 = 0 : <type 'int'>
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.replace(hours=val4)                                       # STEP 49
ACTION: time5 = time7.replace(hours=val4) 
val4 = 0 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time6.replace(tzinfo=zone4)                                     # STEP 50
ACTION: time0 = time6.replace(tzinfo=zone4) 
zone4 = 'US/Pacific' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [1970-01-01T00:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(tzinfo=zone1)                                     # STEP 51
ACTION: time7 = time2.replace(tzinfo=zone1) 
zone1 = 'US/Mountain' : <type 'str'>
time2 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T01:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.replace(year=val8)                                        # STEP 52
ACTION: time6 = time9.replace(year=val8) 
val8 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time9.replace(hours=val3)                                       # STEP 53
ACTION: time4 = time9.replace(hours=val3) 
val3 = -1 : <type 'int'>
time9 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-01-01T01:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x107aad0e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 167121, in act3748
    self.p_time[4] = self.p_time[9].replace(hours=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 429, in replace
    current += relativedelta(**relative_kwargs) # TODO: DEPRECATED
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #224 STEP #9 (0:00:30.001890) Tue Nov 21 18:14:50 2017 [ 252 stmts 335 branches ] (no cov+ for 22 tests) 22263 TOTAL ACTIONS (742.053252028/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 74
STOPPING TESTING DUE TO TIMEOUT
22.1563981043 PERCENT COVERED
60.2130279541 TOTAL RUNTIME
443 EXECUTED
44228 TOTAL TEST OPERATIONS
29.652122736 TIME SPENT EXECUTING TEST OPERATIONS
27.9904034138 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0283536911011 TIME SPENT CHECKING PROPERTIES
29.6804764271 TOTAL TIME SPENT RUNNING SUT
0.26202249527 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
locale3 =  u'de_at'                                                      # STEP 0
locale0 =  u'zh_tw'                                                      # STEP 1
locale1 =  u'ca'                                                         # STEP 2
locale2 =  u'ca_it'                                                      # STEP 3
zone0 = 'Etc/Greenwich'                                                  # STEP 4
locale4 =  u'is_is'                                                      # STEP 5
zone2 = 'US/Alaska'                                                      # STEP 6
zone4 = 'US/Pacific'                                                     # STEP 7
zone1 = 'US/Mountain'                                                    # STEP 8
val8 = 0                                                                 # STEP 9
val9 = 0                                                                # STEP 10
zone3 = 'Asia/Samarkand'                                                # STEP 11
val7 = 0                                                                # STEP 12
val4 = 0                                                                # STEP 13
val8 += 1                                                               # STEP 14
val3 = 0                                                                # STEP 15
val8 = 0                                                                # STEP 16
time6 = arrow.get(val8)                                                 # STEP 17
time3 = time6.replace(hours=val4)                                       # STEP 18
time5 = time3.replace(hours=val8)                                       # STEP 19
time4 = time3.replace(hours=val9)                                       # STEP 20
val8 += 1                                                               # STEP 21
time8 = time6.replace(hours=val8)                                       # STEP 22
time0 = time6.replace(hours=val3)                                       # STEP 23
time3 = time4.replace(year=val8)                                        # STEP 24
time0.shift(weeks=val7)                                                 # STEP 25
time9 = time3.replace(hours=val8)                                       # STEP 26
val3 -= 1                                                               # STEP 27
time0.shift(minutes=val9)                                               # STEP 28
time0 = time3.replace(year=val8)                                        # STEP 29
time0.shift(seconds=val9)                                               # STEP 30
time2 = time8.replace(hours=val7)                                       # STEP 31
time1 = time2.replace(hours=val4)                                       # STEP 32
time3 = time9.replace(hours=val8)                                       # STEP 33
time0 = time0.replace(tzinfo=zone0)                                     # STEP 34
time4 = time3.replace(hours=val3)                                       # STEP 35
time7 = time8.replace(tzinfo=zone1)                                     # STEP 36
time7.datetime                                                          # STEP 37
time8 = time5.replace(tzinfo=zone0)                                     # STEP 38
time3 = time4.replace(year=val8)                                        # STEP 39
time4 = time9.replace(tzinfo=zone2)                                     # STEP 40
time8.shift(seconds=val4)                                               # STEP 41
time8 = time2.replace(tzinfo=zone3)                                     # STEP 42
time9 = time0.replace(tzinfo=zone3)                                     # STEP 43
val9 = 0                                                                # STEP 44
time7 = time3.replace(hours=val3)                                       # STEP 45
time4.year                                                              # STEP 46
time3 = time4.replace(hours=val3)                                       # STEP 47
time0.shift(weeks=val7)                                                 # STEP 48
time5 = time7.replace(hours=val4)                                       # STEP 49
time0 = time6.replace(tzinfo=zone4)                                     # STEP 50
time7 = time2.replace(tzinfo=zone1)                                     # STEP 51
time6 = time9.replace(year=val8)                                        # STEP 52
time4 = time9.replace(hours=val3)                                       # STEP 53
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x107aad0e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 167121, in act3748
    self.p_time[4] = self.p_time[9].replace(hours=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 429, in replace
    current += relativedelta(**relative_kwargs) # TODO: DEPRECATED
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
340 BRANCHES COVERED
255 STATEMENTS COVERED
