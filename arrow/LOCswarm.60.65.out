Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14993.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1099d5560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
Original test has 58 steps

SAVING TEST AS failure.14993.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone1 = 'Poland'                                                         # STEP 0
ACTION: zone1 = 'Poland'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Poland' : <type 'str'>
==================================================
zone3 = 'Etc/Greenwich'                                                  # STEP 1
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone0 = 'Asia/Samarkand'                                                 # STEP 2
ACTION: zone0 = 'Asia/Samarkand'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Asia/Samarkand' : <type 'str'>
==================================================
locale4 =  u'de_de'                                                      # STEP 3
ACTION: locale4 =  u'de_de' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'de_de' : <type 'unicode'>
==================================================
val8 = 0                                                                 # STEP 4
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
time3 = arrow.get(val8)                                                  # STEP 5
ACTION: time3 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = arrow.get(val8)                                                  # STEP 6
ACTION: time4 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 += 1                                                                # STEP 7
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
zone2 = 'Africa/Cairo'                                                   # STEP 8
ACTION: zone2 = 'Africa/Cairo'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Africa/Cairo' : <type 'str'>
==================================================
time3.shift(seconds=val8)                                                # STEP 9
ACTION: time3.shift(seconds=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(years=val8)                                                 # STEP 10
ACTION: time4.shift(years=val8) 
val8 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.humanize(locale=locale4)                                          # STEP 11
ACTION: time4.humanize(locale=locale4) 
locale4 = u'de_de' : <type 'unicode'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time3.replace(year=val8)                                        # STEP 12
ACTION: time5 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time3.replace(year=val8)                                        # STEP 13
ACTION: time8 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.replace(tzinfo=zone3)                                     # STEP 14
ACTION: time2 = time8.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time2.replace(tzinfo=zone2)                                     # STEP 15
ACTION: time4 = time2.replace(tzinfo=zone2) 
zone2 = 'Africa/Cairo' : <type 'str'>
time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val8)                                               # STEP 16
ACTION: time3.shift(seconds=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 -= 1                                                               # STEP 17
ACTION: val8 -= 1 
val8 = 1 : <type 'int'>
=> val8 = 0 : <type 'int'>
==================================================
time2 = time3.replace(tzinfo=zone2)                                     # STEP 18
ACTION: time2 = time3.replace(tzinfo=zone2) 
zone2 = 'Africa/Cairo' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Arizona'                                                    # STEP 19
ACTION: zone2 = 'US/Arizona'  
zone2 = 'Africa/Cairo' : <type 'str'>
=> zone2 = 'US/Arizona' : <type 'str'>
==================================================
zone3 = 'US/Mountain'                                                   # STEP 20
ACTION: zone3 = 'US/Mountain'  
zone3 = 'Etc/Greenwich' : <type 'str'>
=> zone3 = 'US/Mountain' : <type 'str'>
==================================================
val8 += 1                                                               # STEP 21
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
time4.format()                                                          # STEP 22
ACTION: time4.format() 
time4 = <Arrow [0001-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.replace(tzinfo=zone2)                                     # STEP 23
ACTION: time9 = time8.replace(tzinfo=zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale4)                                          # STEP 24
ACTION: time3.humanize(locale=locale4) 
locale4 = u'de_de' : <type 'unicode'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time5.replace(month=val8)                                       # STEP 25
ACTION: time1 = time5.replace(month=val8) 
val8 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.replace(tzinfo=zone2)                                     # STEP 26
ACTION: time5 = time2.replace(tzinfo=zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(seconds=val8)                                               # STEP 27
ACTION: time9.shift(seconds=val8) 
val8 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time8.replace(year=val8)                                        # STEP 28
ACTION: time0 = time8.replace(year=val8) 
val8 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time3.replace(year=val8)                                        # STEP 29
ACTION: time6 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time1.replace(tzinfo=zone3)                                     # STEP 30
ACTION: time3 = time1.replace(tzinfo=zone3) 
zone3 = 'US/Mountain' : <type 'str'>
time1 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time3.replace(month=val8)                                       # STEP 31
ACTION: time7 = time3.replace(month=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time8.replace(tzinfo=zone2)                                     # STEP 32
ACTION: time3 = time8.replace(tzinfo=zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Poland'                                                        # STEP 33
ACTION: zone2 = 'Poland'  
zone2 = 'US/Arizona' : <type 'str'>
=> zone2 = 'Poland' : <type 'str'>
==================================================
locale3 =  u'ca_it'                                                     # STEP 34
ACTION: locale3 =  u'ca_it' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'ca_it' : <type 'unicode'>
==================================================
val8 += 1                                                               # STEP 35
ACTION: val8 += 1 
val8 = 1 : <type 'int'>
=> val8 = 2 : <type 'int'>
==================================================
zone4 = 'Australia/Brisbane'                                            # STEP 36
ACTION: zone4 = 'Australia/Brisbane'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Australia/Brisbane' : <type 'str'>
==================================================
time8 = time6.replace(month=val8)                                       # STEP 37
ACTION: time8 = time6.replace(month=val8) 
val8 = 2 : <type 'int'>
time6 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-02-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time1.replace(tzinfo=zone1)                                     # STEP 38
ACTION: time1 = time1.replace(tzinfo=zone1) 
zone1 = 'Poland' : <type 'str'>
time1 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-01-01T00:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time5.replace(tzinfo=zone4)                                     # STEP 39
ACTION: time4 = time5.replace(tzinfo=zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time5 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.format()                                                          # STEP 40
ACTION: time9.format() 
time9 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.timestamp                                                         # STEP 41
ACTION: time9.timestamp 
time9 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.format()                                                          # STEP 42
ACTION: time2.format() 
time2 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val0 = 0                                                                # STEP 43
ACTION: val0 = 0 
val0 = None : <type 'NoneType'>
=> val0 = 0 : <type 'int'>
==================================================
time9 = time9.replace(tzinfo=zone4)                                     # STEP 44
ACTION: time9 = time9.replace(tzinfo=zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time9 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.format()                                                          # STEP 45
ACTION: time4.format() 
time4 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(seconds=val0)                                               # STEP 46
ACTION: time0.shift(seconds=val0) 
val0 = 0 : <type 'int'>
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = arrow.get(val0)                                                 # STEP 47
ACTION: time4 = arrow.get(val0) 
val0 = 0 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Africa/Cairo'                                                  # STEP 48
ACTION: zone1 = 'Africa/Cairo'  
zone1 = 'Poland' : <type 'str'>
=> zone1 = 'Africa/Cairo' : <type 'str'>
==================================================
locale4 =  u'is_is'                                                     # STEP 49
ACTION: locale4 =  u'is_is' 
locale4 = u'de_de' : <type 'unicode'>
=> locale4 = u'is_is' : <type 'unicode'>
==================================================
time0 = arrow.now()                                                     # STEP 50
ACTION: time0 = arrow.now() 
time0 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T19:18:32.353179-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time9.replace(tzinfo=zone2)                                     # STEP 51
ACTION: time5 = time9.replace(tzinfo=zone2) 
zone2 = 'Poland' : <type 'str'>
time9 = <Arrow [0001-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T00:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time2.replace(tzinfo=zone3)                                     # STEP 52
ACTION: time9 = time2.replace(tzinfo=zone3) 
zone3 = 'US/Mountain' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [0001-01-01T00:00:00+10:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.replace(tzinfo=zone1)                                     # STEP 53
ACTION: time2 = time5.replace(tzinfo=zone1) 
zone1 = 'Africa/Cairo' : <type 'str'>
time5 = <Arrow [0001-01-01T00:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.timestamp                                                         # STEP 54
ACTION: time3.timestamp 
time3 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(seconds=val0)                                               # STEP 55
ACTION: time2.shift(seconds=val0) 
val0 = 0 : <type 'int'>
time2 = <Arrow [0001-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time3.replace(tzinfo=zone0)                                     # STEP 56
ACTION: time3 = time3.replace(tzinfo=zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time3 = <Arrow [0001-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.timestamp                                                         # STEP 57
ACTION: time5.timestamp 
time5 = <Arrow [0001-01-01T00:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1099e1560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #75 STEP #38 (0:00:30.002942) Tue Nov 21 19:18:39 2017 [ 239 stmts 312 branches ] (no cov+ for 2 tests) 7396 TOTAL ACTIONS (246.509158301/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 15
STOPPING TESTING DUE TO TIMEOUT
21.2677725118 PERCENT COVERED
60.1729750633 TOTAL RUNTIME
151 EXECUTED
14973 TOTAL TEST OPERATIONS
9.72751784325 TIME SPENT EXECUTING TEST OPERATIONS
49.3886926174 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00984144210815 TIME SPENT CHECKING PROPERTIES
9.73735928535 TOTAL TIME SPENT RUNNING SUT
0.146555423737 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
zone1 = 'Poland'                                                         # STEP 0
zone3 = 'Etc/Greenwich'                                                  # STEP 1
zone0 = 'Asia/Samarkand'                                                 # STEP 2
locale4 =  u'de_de'                                                      # STEP 3
val8 = 0                                                                 # STEP 4
time3 = arrow.get(val8)                                                  # STEP 5
time4 = arrow.get(val8)                                                  # STEP 6
val8 += 1                                                                # STEP 7
zone2 = 'Africa/Cairo'                                                   # STEP 8
time3.shift(seconds=val8)                                                # STEP 9
time4.shift(years=val8)                                                 # STEP 10
time4.humanize(locale=locale4)                                          # STEP 11
time5 = time3.replace(year=val8)                                        # STEP 12
time8 = time3.replace(year=val8)                                        # STEP 13
time2 = time8.replace(tzinfo=zone3)                                     # STEP 14
time4 = time2.replace(tzinfo=zone2)                                     # STEP 15
time3.shift(seconds=val8)                                               # STEP 16
val8 -= 1                                                               # STEP 17
time2 = time3.replace(tzinfo=zone2)                                     # STEP 18
zone2 = 'US/Arizona'                                                    # STEP 19
zone3 = 'US/Mountain'                                                   # STEP 20
val8 += 1                                                               # STEP 21
time4.format()                                                          # STEP 22
time9 = time8.replace(tzinfo=zone2)                                     # STEP 23
time3.humanize(locale=locale4)                                          # STEP 24
time1 = time5.replace(month=val8)                                       # STEP 25
time5 = time2.replace(tzinfo=zone2)                                     # STEP 26
time9.shift(seconds=val8)                                               # STEP 27
time0 = time8.replace(year=val8)                                        # STEP 28
time6 = time3.replace(year=val8)                                        # STEP 29
time3 = time1.replace(tzinfo=zone3)                                     # STEP 30
time7 = time3.replace(month=val8)                                       # STEP 31
time3 = time8.replace(tzinfo=zone2)                                     # STEP 32
zone2 = 'Poland'                                                        # STEP 33
locale3 =  u'ca_it'                                                     # STEP 34
val8 += 1                                                               # STEP 35
zone4 = 'Australia/Brisbane'                                            # STEP 36
time8 = time6.replace(month=val8)                                       # STEP 37
time1 = time1.replace(tzinfo=zone1)                                     # STEP 38
time4 = time5.replace(tzinfo=zone4)                                     # STEP 39
time9.format()                                                          # STEP 40
time9.timestamp                                                         # STEP 41
time2.format()                                                          # STEP 42
val0 = 0                                                                # STEP 43
time9 = time9.replace(tzinfo=zone4)                                     # STEP 44
time4.format()                                                          # STEP 45
time0.shift(seconds=val0)                                               # STEP 46
time4 = arrow.get(val0)                                                 # STEP 47
zone1 = 'Africa/Cairo'                                                  # STEP 48
locale4 =  u'is_is'                                                     # STEP 49
time0 = arrow.now()                                                     # STEP 50
time5 = time9.replace(tzinfo=zone2)                                     # STEP 51
time9 = time2.replace(tzinfo=zone3)                                     # STEP 52
time2 = time5.replace(tzinfo=zone1)                                     # STEP 53
time3.timestamp                                                         # STEP 54
time2.shift(seconds=val0)                                               # STEP 55
time3 = time3.replace(tzinfo=zone0)                                     # STEP 56
time5.timestamp                                                         # STEP 57
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1099e1560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
325 BRANCHES COVERED
247 STATEMENTS COVERED
