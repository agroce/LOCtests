Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14827.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109af35a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304070, in act6766
    self.p_time[1].shift(years=self.p_val[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 26 steps

SAVING TEST AS failure.14827.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone0 = 'US/Eastern'                                                     # STEP 0
ACTION: zone0 = 'US/Eastern'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Eastern' : <type 'str'>
==================================================
time7 = arrow.utcnow()                                                   # STEP 1
ACTION: time7 = arrow.utcnow() 
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-22T02:26:42.078854+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.utcnow()                                                   # STEP 2
ACTION: time3 = arrow.utcnow() 
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val0 = 0                                                                 # STEP 3
ACTION: val0 = 0 
val0 = None : <type 'NoneType'>
=> val0 = 0 : <type 'int'>
==================================================
val1 = 0                                                                 # STEP 4
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
val0 += 1                                                                # STEP 5
ACTION: val0 += 1 
val0 = 0 : <type 'int'>
=> val0 = 1 : <type 'int'>
==================================================
time3.timestamp                                                          # STEP 6
ACTION: time3.timestamp 
time3 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Europe/Rome'                                                    # STEP 7
ACTION: zone1 = 'Europe/Rome'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Europe/Rome' : <type 'str'>
==================================================
time1 = time3.replace(year=val0)                                         # STEP 8
ACTION: time1 = time3.replace(year=val0) 
val0 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [0001-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.to(zone0)                                                  # STEP 9
ACTION: time5 = time7.to(zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time7 = <Arrow [2017-11-22T02:26:42.078854+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time3.replace(hours=val1)                                       # STEP 10
ACTION: time9 = time3.replace(hours=val1) 
val1 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val0)                                                # STEP 11
ACTION: time7.shift(months=val0) 
val0 = 1 : <type 'int'>
time7 = <Arrow [2017-11-22T02:26:42.078854+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time5.to(zone0)                                                 # STEP 12
ACTION: time6 = time5.to(zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time5 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time5.to(zone0)                                                 # STEP 13
ACTION: time5 = time5.to(zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time5 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(minutes=val0)                                               # STEP 14
ACTION: time6.shift(minutes=val0) 
val0 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(year=val0)                                        # STEP 15
ACTION: time6 = time7.replace(year=val0) 
val0 = 1 : <type 'int'>
time7 = <Arrow [2017-11-22T02:26:42.078854+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-22T02:26:42.078854+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time9.replace(hours=val0)                                       # STEP 16
ACTION: time3 = time9.replace(hours=val0) 
val0 = 1 : <type 'int'>
time9 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-22T03:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time3.to(zone0)                                                 # STEP 17
ACTION: time0 = time3.to(zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time3 = <Arrow [2017-11-22T03:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T22:26:42.079500-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Eastern'                                                    # STEP 18
ACTION: zone0 = 'US/Eastern'  
zone0 = 'US/Eastern' : <type 'str'>
==================================================
time0.timestamp                                                         # STEP 19
ACTION: time0.timestamp 
time0 = <Arrow [2017-11-21T22:26:42.079500-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(seconds=val0)                                               # STEP 20
ACTION: time9.shift(seconds=val0) 
val0 = 1 : <type 'int'>
time9 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(minutes=val0)                                               # STEP 21
ACTION: time3.shift(minutes=val0) 
val0 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T03:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time9.replace(hours=val1)                                       # STEP 22
ACTION: time3 = time9.replace(hours=val1) 
val1 = 0 : <type 'int'>
time9 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-22T03:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 -= 1                                                               # STEP 23
ACTION: val1 -= 1 
val1 = 0 : <type 'int'>
=> val1 = -1 : <type 'int'>
==================================================
time8 = time5.replace(hours=val0)                                       # STEP 24
ACTION: time8 = time5.replace(hours=val0) 
val0 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T21:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T22:26:42.078854-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(years=val1)                                                 # STEP 25
ACTION: time1.shift(years=val1) 
val1 = -1 : <type 'int'>
time1 = <Arrow [0001-11-22T02:26:42.079500+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109b257a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304070, in act6766
    self.p_time[1].shift(years=self.p_val[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #221 STEP #44 (0:00:30.000087) Tue Nov 21 18:26:59 2017 [ 253 stmts 337 branches ] (no cov+ for 42 tests) 21970 TOTAL ACTIONS (732.331214837/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
22.0971563981 PERCENT COVERED
60.1841528416 TOTAL RUNTIME
452 EXECUTED
45026 TOTAL TEST OPERATIONS
29.7562758923 TIME SPENT EXECUTING TEST OPERATIONS
27.8826348782 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0286002159119 TIME SPENT CHECKING PROPERTIES
29.7848761082 TOTAL TIME SPENT RUNNING SUT
0.260307073593 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
zone0 = 'US/Eastern'                                                     # STEP 0
time7 = arrow.utcnow()                                                   # STEP 1
time3 = arrow.utcnow()                                                   # STEP 2
val0 = 0                                                                 # STEP 3
val1 = 0                                                                 # STEP 4
val0 += 1                                                                # STEP 5
time3.timestamp                                                          # STEP 6
zone1 = 'Europe/Rome'                                                    # STEP 7
time1 = time3.replace(year=val0)                                         # STEP 8
time5 = time7.to(zone0)                                                  # STEP 9
time9 = time3.replace(hours=val1)                                       # STEP 10
time7.shift(months=val0)                                                # STEP 11
time6 = time5.to(zone0)                                                 # STEP 12
time5 = time5.to(zone0)                                                 # STEP 13
time6.shift(minutes=val0)                                               # STEP 14
time6 = time7.replace(year=val0)                                        # STEP 15
time3 = time9.replace(hours=val0)                                       # STEP 16
time0 = time3.to(zone0)                                                 # STEP 17
zone0 = 'US/Eastern'                                                    # STEP 18
time0.timestamp                                                         # STEP 19
time9.shift(seconds=val0)                                               # STEP 20
time3.shift(minutes=val0)                                               # STEP 21
time3 = time9.replace(hours=val1)                                       # STEP 22
val1 -= 1                                                               # STEP 23
time8 = time5.replace(hours=val0)                                       # STEP 24
time1.shift(years=val1)                                                 # STEP 25
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109b257a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304070, in act6766
    self.p_time[1].shift(years=self.p_val[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
339 BRANCHES COVERED
254 STATEMENTS COVERED
