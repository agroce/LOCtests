Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14689.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a8ac878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
Original test has 42 steps

SAVING TEST AS failure.14689.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale1 =  u'pl_pl'                                                      # STEP 0
ACTION: locale1 =  u'pl_pl' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'pl_pl' : <type 'unicode'>
==================================================
locale0 =  u'da_dk'                                                      # STEP 1
ACTION: locale0 =  u'da_dk' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'da_dk' : <type 'unicode'>
==================================================
locale3 =  u'vi_vn'                                                      # STEP 2
ACTION: locale3 =  u'vi_vn' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'vi_vn' : <type 'unicode'>
==================================================
val9 = 0                                                                 # STEP 3
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
time9 = arrow.utcnow()                                                   # STEP 4
ACTION: time9 = arrow.utcnow() 
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-22T01:44:00.579459+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'ko_kr'                                                      # STEP 5
ACTION: locale4 =  u'ko_kr' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'ko_kr' : <type 'unicode'>
==================================================
zone3 = 'Europe/Rome'                                                    # STEP 6
ACTION: zone3 = 'Europe/Rome'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
val1 = 0                                                                 # STEP 7
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
locale2 =  u'nb_no'                                                      # STEP 8
ACTION: locale2 =  u'nb_no' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'nb_no' : <type 'unicode'>
==================================================
val5 = 0                                                                 # STEP 9
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
val5 += 1                                                               # STEP 10
ACTION: val5 += 1 
val5 = 0 : <type 'int'>
=> val5 = 1 : <type 'int'>
==================================================
time3 = arrow.get(val1)                                                 # STEP 11
ACTION: time3 = arrow.get(val1) 
val1 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.get(val9)                                                 # STEP 12
ACTION: time7 = arrow.get(val9) 
val9 = 0 : <type 'int'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale4)                                          # STEP 13
ACTION: time3.humanize(locale=locale4) 
locale4 = u'ko_kr' : <type 'unicode'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'eo_xx'                                                     # STEP 14
ACTION: locale4 =  u'eo_xx' 
locale4 = u'ko_kr' : <type 'unicode'>
=> locale4 = u'eo_xx' : <type 'unicode'>
==================================================
time5 = time7.replace(year=val5)                                        # STEP 15
ACTION: time5 = time7.replace(year=val5) 
val5 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.humanize(locale=locale3)                                          # STEP 16
ACTION: time7.humanize(locale=locale3) 
locale3 = u'vi_vn' : <type 'unicode'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time3.replace(year=val5)                                        # STEP 17
ACTION: time7 = time3.replace(year=val5) 
val5 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'be_by'                                                     # STEP 18
ACTION: locale3 =  u'be_by' 
locale3 = u'vi_vn' : <type 'unicode'>
=> locale3 = u'be_by' : <type 'unicode'>
==================================================
time1 = time9.replace(tzinfo=zone3)                                     # STEP 19
ACTION: time1 = time9.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time9 = <Arrow [2017-11-22T01:44:00.579459+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time1.replace(tzinfo=zone3)                                     # STEP 20
ACTION: time6 = time1.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time1 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Europe/Rome'                                                   # STEP 21
ACTION: zone2 = 'Europe/Rome'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Europe/Rome' : <type 'str'>
==================================================
time3.humanize(locale=locale0)                                          # STEP 22
ACTION: time3.humanize(locale=locale0) 
locale0 = u'da_dk' : <type 'unicode'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time1.replace(year=val5)                                        # STEP 23
ACTION: time4 = time1.replace(year=val5) 
val5 = 1 : <type 'int'>
time1 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'ro_ro'                                                     # STEP 24
ACTION: locale0 =  u'ro_ro' 
locale0 = u'da_dk' : <type 'unicode'>
=> locale0 = u'ro_ro' : <type 'unicode'>
==================================================
time0 = time1.replace(year=val5)                                        # STEP 25
ACTION: time0 = time1.replace(year=val5) 
val5 = 1 : <type 'int'>
time1 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time6.replace(tzinfo=zone3)                                     # STEP 26
ACTION: time3 = time6.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time6 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time3.replace(tzinfo=zone2)                                     # STEP 27
ACTION: time9 = time3.replace(tzinfo=zone2) 
zone2 = 'Europe/Rome' : <type 'str'>
time3 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [2017-11-22T01:44:00.579459+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time6.replace(tzinfo=zone3)                                     # STEP 28
ACTION: time8 = time6.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time6 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time4.replace(year=val5)                                        # STEP 29
ACTION: time6 = time4.replace(year=val5) 
val5 = 1 : <type 'int'>
time4 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time5.replace(year=val5)                                        # STEP 30
ACTION: time3 = time5.replace(year=val5) 
val5 = 1 : <type 'int'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val5)                                                 # STEP 31
ACTION: time6.shift(years=val5) 
val5 = 1 : <type 'int'>
time6 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.datetime                                                          # STEP 32
ACTION: time1.datetime 
time1 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(years=val1)                                                 # STEP 33
ACTION: time5.shift(years=val1) 
val1 = 0 : <type 'int'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale1)                                          # STEP 34
ACTION: time3.humanize(locale=locale1) 
locale1 = u'pl_pl' : <type 'unicode'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(year=val5)                                        # STEP 35
ACTION: time3 = time7.replace(year=val5) 
val5 = 1 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.humanize(locale=locale4)                                          # STEP 36
ACTION: time0.humanize(locale=locale4) 
locale4 = u'eo_xx' : <type 'unicode'>
time0 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'eu_eu'                                                     # STEP 37
ACTION: locale4 =  u'eu_eu' 
locale4 = u'eo_xx' : <type 'unicode'>
=> locale4 = u'eu_eu' : <type 'unicode'>
==================================================
time5 = time5.replace(tzinfo=zone3)                                     # STEP 38
ACTION: time5 = time5.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time5 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T00:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.timestamp                                                         # STEP 39
ACTION: time9.timestamp 
time9 = <Arrow [2017-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(year=val5)                                        # STEP 40
ACTION: time6 = time7.replace(year=val5) 
val5 = 1 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [0001-11-22T01:44:00.579459+01:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.timestamp                                                         # STEP 41
ACTION: time5.timestamp 
time5 = <Arrow [0001-01-01T00:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a8acc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #226 STEP #70 (0:00:30.000857) Tue Nov 21 17:44:27 2017 [ 250 stmts 331 branches ] (no cov+ for 73 tests) 22512 TOTAL ACTIONS (750.378567278/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10ac7d5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 39471, in act1047
    self.p_time[8] = self.p_time[8].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 54 steps

SAVING TEST AS failure.14689.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale1 =  u'fi'                                                         # STEP 0
ACTION: locale1 =  u'fi' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'fi' : <type 'unicode'>
==================================================
locale3 =  u'mr'                                                         # STEP 1
ACTION: locale3 =  u'mr' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'mr' : <type 'unicode'>
==================================================
zone3 = 'Poland'                                                         # STEP 2
ACTION: zone3 = 'Poland'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Poland' : <type 'str'>
==================================================
locale4 =  u'ua'                                                         # STEP 3
ACTION: locale4 =  u'ua' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'ua' : <type 'unicode'>
==================================================
zone1 = 'Turkey'                                                         # STEP 4
ACTION: zone1 = 'Turkey'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Turkey' : <type 'str'>
==================================================
locale0 =  u'ru'                                                         # STEP 5
ACTION: locale0 =  u'ru' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'ru' : <type 'unicode'>
==================================================
locale2 =  u'bg'                                                         # STEP 6
ACTION: locale2 =  u'bg' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'bg' : <type 'unicode'>
==================================================
val8 = 0                                                                 # STEP 7
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
zone0 = 'Africa/Cairo'                                                   # STEP 8
ACTION: zone0 = 'Africa/Cairo'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Africa/Cairo' : <type 'str'>
==================================================
time7 = arrow.get(val8)                                                  # STEP 9
ACTION: time7 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.to(zone1)                                                 # STEP 10
ACTION: time8 = time7.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.to(zone0)                                                 # STEP 11
ACTION: time9 = time8.to(zone0) 
zone0 = 'Africa/Cairo' : <type 'str'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.format()                                                          # STEP 12
ACTION: time9.format() 
time9 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.to(zone1)                                                 # STEP 13
ACTION: time1 = time8.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(seconds=val8)                                               # STEP 14
ACTION: time1.shift(seconds=val8) 
val8 = 0 : <type 'int'>
time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.get(val8)                                                 # STEP 15
ACTION: time9 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time9 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Etc/Greenwich'                                                 # STEP 16
ACTION: zone2 = 'Etc/Greenwich'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Etc/Greenwich' : <type 'str'>
==================================================
time5 = time8.to(zone0)                                                 # STEP 17
ACTION: time5 = time8.to(zone0) 
zone0 = 'Africa/Cairo' : <type 'str'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.to(zone1)                                                 # STEP 18
ACTION: time4 = time8.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 += 1                                                               # STEP 19
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
time4.datetime                                                          # STEP 20
ACTION: time4.datetime 
time4 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time1.replace(month=val8)                                       # STEP 21
ACTION: time3 = time1.replace(month=val8) 
val8 = 1 : <type 'int'>
time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(minutes=val8)                                     # STEP 22
ACTION: time1 = time3.replace(minutes=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.to(zone0)                                                 # STEP 23
ACTION: time4 = time3.to(zone0) 
zone0 = 'Africa/Cairo' : <type 'str'>
time3 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.get(val8)                                                 # STEP 24
ACTION: time8 = arrow.get(val8) 
val8 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time8.to(zone2)                                                 # STEP 25
ACTION: time3 = time8.to(zone2) 
zone2 = 'Etc/Greenwich' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Eastern'                                                    # STEP 26
ACTION: zone0 = 'US/Eastern'  
zone0 = 'Africa/Cairo' : <type 'str'>
=> zone0 = 'US/Eastern' : <type 'str'>
==================================================
time7 = time3.to(zone0)                                                 # STEP 27
ACTION: time7 = time3.to(zone0) 
zone0 = 'US/Eastern' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1969-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.get(val8)                                                 # STEP 28
ACTION: time6 = arrow.get(val8) 
val8 = 1 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time6.replace(month=val8)                                       # STEP 29
ACTION: time2 = time6.replace(month=val8) 
val8 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.datetime                                                          # STEP 30
ACTION: time9.datetime 
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time6.replace(month=val8)                                       # STEP 31
ACTION: time3 = time6.replace(month=val8) 
val8 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time2.replace(minutes=val8)                                     # STEP 32
ACTION: time6 = time2.replace(minutes=val8) 
val8 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [1970-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Eastern'                                                    # STEP 33
ACTION: zone2 = 'US/Eastern'  
zone2 = 'Etc/Greenwich' : <type 'str'>
=> zone2 = 'US/Eastern' : <type 'str'>
==================================================
time8 = time3.replace(year=val8)                                        # STEP 34
ACTION: time8 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time1.to(zone1)                                                 # STEP 35
ACTION: time0 = time1.to(zone1) 
zone1 = 'Turkey' : <type 'str'>
time1 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time0.replace(month=val8)                                       # STEP 36
ACTION: time1 = time0.replace(month=val8) 
val8 = 1 : <type 'int'>
time0 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time7.replace(year=val8)                                        # STEP 37
ACTION: time9 = time7.replace(year=val8) 
val8 = 1 : <type 'int'>
time7 = <Arrow [1969-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Etc/Greenwich'                                                 # STEP 38
ACTION: zone1 = 'Etc/Greenwich'  
zone1 = 'Turkey' : <type 'str'>
=> zone1 = 'Etc/Greenwich' : <type 'str'>
==================================================
time3 = time7.to(zone1)                                                 # STEP 39
ACTION: time3 = time7.to(zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time7 = <Arrow [1969-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time3.replace(year=val8)                                        # STEP 40
ACTION: time7 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1969-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.humanize(locale=locale3)                                          # STEP 41
ACTION: time6.humanize(locale=locale3) 
locale3 = u'mr' : <type 'unicode'>
time6 = <Arrow [1970-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time2.to(zone3)                                                 # STEP 42
ACTION: time3 = time2.to(zone3) 
zone3 = 'Poland' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T01:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time9.replace(minutes=val8)                                     # STEP 43
ACTION: time2 = time9.replace(minutes=val8) 
val8 = 1 : <type 'int'>
time9 = <Arrow [0001-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-12-31T19:01:01-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time5.replace(year=val8)                                        # STEP 44
ACTION: time6 = time5.replace(year=val8) 
val8 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.replace(month=val8)                                       # STEP 45
ACTION: time9 = time8.replace(month=val8) 
val8 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [0001-12-31T19:00:01-05:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Africa/Cairo'                                                  # STEP 46
ACTION: zone4 = 'Africa/Cairo'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Africa/Cairo' : <type 'str'>
==================================================
locale3 =  u'pt_br'                                                     # STEP 47
ACTION: locale3 =  u'pt_br' 
locale3 = u'mr' : <type 'unicode'>
=> locale3 = u'pt_br' : <type 'unicode'>
==================================================
time1.format()                                                          # STEP 48
ACTION: time1.format() 
time1 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time9.replace(month=val8)                                       # STEP 49
ACTION: time5 = time9.replace(month=val8) 
val8 = 1 : <type 'int'>
time9 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time4.replace(month=val8)                                       # STEP 50
ACTION: time0 = time4.replace(month=val8) 
val8 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [1970-01-01T02:01:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.replace(minutes=val8)                                     # STEP 51
ACTION: time4 = time8.replace(minutes=val8) 
val8 = 1 : <type 'int'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-01-01T00:01:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.humanize(locale=locale4)                                          # STEP 52
ACTION: time5.humanize(locale=locale4) 
locale4 = u'ua' : <type 'unicode'>
time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time8.to(zone2)                                                 # STEP 53
ACTION: time8 = time8.to(zone2) 
zone2 = 'US/Eastern' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10ac7dc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 39471, in act1047
    self.p_time[8] = self.p_time[8].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 86
STOPPING TESTING DUE TO TIMEOUT
21.9786729858 PERCENT COVERED
60.1986730099 TOTAL RUNTIME
447 EXECUTED
44582 TOTAL TEST OPERATIONS
29.9715957642 TIME SPENT EXECUTING TEST OPERATIONS
27.6468491554 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0277583599091 TIME SPENT CHECKING PROPERTIES
29.9993541241 TOTAL TIME SPENT RUNNING SUT
0.24821305275 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
locale1 =  u'pl_pl'                                                      # STEP 0
locale0 =  u'da_dk'                                                      # STEP 1
locale3 =  u'vi_vn'                                                      # STEP 2
val9 = 0                                                                 # STEP 3
time9 = arrow.utcnow()                                                   # STEP 4
locale4 =  u'ko_kr'                                                      # STEP 5
zone3 = 'Europe/Rome'                                                    # STEP 6
val1 = 0                                                                 # STEP 7
locale2 =  u'nb_no'                                                      # STEP 8
val5 = 0                                                                 # STEP 9
val5 += 1                                                               # STEP 10
time3 = arrow.get(val1)                                                 # STEP 11
time7 = arrow.get(val9)                                                 # STEP 12
time3.humanize(locale=locale4)                                          # STEP 13
locale4 =  u'eo_xx'                                                     # STEP 14
time5 = time7.replace(year=val5)                                        # STEP 15
time7.humanize(locale=locale3)                                          # STEP 16
time7 = time3.replace(year=val5)                                        # STEP 17
locale3 =  u'be_by'                                                     # STEP 18
time1 = time9.replace(tzinfo=zone3)                                     # STEP 19
time6 = time1.replace(tzinfo=zone3)                                     # STEP 20
zone2 = 'Europe/Rome'                                                   # STEP 21
time3.humanize(locale=locale0)                                          # STEP 22
time4 = time1.replace(year=val5)                                        # STEP 23
locale0 =  u'ro_ro'                                                     # STEP 24
time0 = time1.replace(year=val5)                                        # STEP 25
time3 = time6.replace(tzinfo=zone3)                                     # STEP 26
time9 = time3.replace(tzinfo=zone2)                                     # STEP 27
time8 = time6.replace(tzinfo=zone3)                                     # STEP 28
time6 = time4.replace(year=val5)                                        # STEP 29
time3 = time5.replace(year=val5)                                        # STEP 30
time6.shift(years=val5)                                                 # STEP 31
time1.datetime                                                          # STEP 32
time5.shift(years=val1)                                                 # STEP 33
time3.humanize(locale=locale1)                                          # STEP 34
time3 = time7.replace(year=val5)                                        # STEP 35
time0.humanize(locale=locale4)                                          # STEP 36
locale4 =  u'eu_eu'                                                     # STEP 37
time5 = time5.replace(tzinfo=zone3)                                     # STEP 38
time9.timestamp                                                         # STEP 39
time6 = time7.replace(year=val5)                                        # STEP 40
time5.timestamp                                                         # STEP 41
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a8acc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
FAILURE 1
locale1 =  u'fi'                                                         # STEP 0
locale3 =  u'mr'                                                         # STEP 1
zone3 = 'Poland'                                                         # STEP 2
locale4 =  u'ua'                                                         # STEP 3
zone1 = 'Turkey'                                                         # STEP 4
locale0 =  u'ru'                                                         # STEP 5
locale2 =  u'bg'                                                         # STEP 6
val8 = 0                                                                 # STEP 7
zone0 = 'Africa/Cairo'                                                   # STEP 8
time7 = arrow.get(val8)                                                  # STEP 9
time8 = time7.to(zone1)                                                 # STEP 10
time9 = time8.to(zone0)                                                 # STEP 11
time9.format()                                                          # STEP 12
time1 = time8.to(zone1)                                                 # STEP 13
time1.shift(seconds=val8)                                               # STEP 14
time9 = arrow.get(val8)                                                 # STEP 15
zone2 = 'Etc/Greenwich'                                                 # STEP 16
time5 = time8.to(zone0)                                                 # STEP 17
time4 = time8.to(zone1)                                                 # STEP 18
val8 += 1                                                               # STEP 19
time4.datetime                                                          # STEP 20
time3 = time1.replace(month=val8)                                       # STEP 21
time1 = time3.replace(minutes=val8)                                     # STEP 22
time4 = time3.to(zone0)                                                 # STEP 23
time8 = arrow.get(val8)                                                 # STEP 24
time3 = time8.to(zone2)                                                 # STEP 25
zone0 = 'US/Eastern'                                                    # STEP 26
time7 = time3.to(zone0)                                                 # STEP 27
time6 = arrow.get(val8)                                                 # STEP 28
time2 = time6.replace(month=val8)                                       # STEP 29
time9.datetime                                                          # STEP 30
time3 = time6.replace(month=val8)                                       # STEP 31
time6 = time2.replace(minutes=val8)                                     # STEP 32
zone2 = 'US/Eastern'                                                    # STEP 33
time8 = time3.replace(year=val8)                                        # STEP 34
time0 = time1.to(zone1)                                                 # STEP 35
time1 = time0.replace(month=val8)                                       # STEP 36
time9 = time7.replace(year=val8)                                        # STEP 37
zone1 = 'Etc/Greenwich'                                                 # STEP 38
time3 = time7.to(zone1)                                                 # STEP 39
time7 = time3.replace(year=val8)                                        # STEP 40
time6.humanize(locale=locale3)                                          # STEP 41
time3 = time2.to(zone3)                                                 # STEP 42
time2 = time9.replace(minutes=val8)                                     # STEP 43
time6 = time5.replace(year=val8)                                        # STEP 44
time9 = time8.replace(month=val8)                                       # STEP 45
zone4 = 'Africa/Cairo'                                                  # STEP 46
locale3 =  u'pt_br'                                                     # STEP 47
time1.format()                                                          # STEP 48
time5 = time9.replace(month=val8)                                       # STEP 49
time0 = time4.replace(month=val8)                                       # STEP 50
time4 = time8.replace(minutes=val8)                                     # STEP 51
time5.humanize(locale=locale4)                                          # STEP 52
time8 = time8.to(zone2)                                                 # STEP 53
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10ac7dc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 39471, in act1047
    self.p_time[8] = self.p_time[8].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
337 BRANCHES COVERED
253 STATEMENTS COVERED
