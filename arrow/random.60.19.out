Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13838.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa09950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 24869, in act726
    self.p_time[2] = self.p_time[4].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
Original test has 29 steps

SAVING TEST AS failure.13838.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale0 =  u'hu_hu'                                                      # STEP 0
ACTION: locale0 =  u'hu_hu' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'hu_hu' : <type 'unicode'>
==================================================
val4 = 0                                                                 # STEP 1
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
zone4 = 'Etc/Greenwich'                                                  # STEP 2
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
locale4 =  u'da_dk'                                                      # STEP 3
ACTION: locale4 =  u'da_dk' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'da_dk' : <type 'unicode'>
==================================================
locale3 =  u'sk'                                                         # STEP 4
ACTION: locale3 =  u'sk' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'sk' : <type 'unicode'>
==================================================
zone1 = 'Asia/Samarkand'                                                 # STEP 5
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
locale1 = u'ar_eg'                                                       # STEP 6
ACTION: locale1 = u'ar_eg' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'ar_eg' : <type 'unicode'>
==================================================
locale2 =  u'nb'                                                         # STEP 7
ACTION: locale2 =  u'nb' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'nb' : <type 'unicode'>
==================================================
time8 = arrow.utcnow()                                                   # STEP 8
ACTION: time8 = arrow.utcnow() 
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T22:34:36.086658+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Europe/Rome'                                                    # STEP 9
ACTION: zone3 = 'Europe/Rome'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
time0 = time8.to(zone3)                                                 # STEP 10
ACTION: time0 = time8.to(zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time8 = <Arrow [2017-11-21T22:34:36.086658+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T23:34:36.086658+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time0.replace(tzinfo=zone1)                                     # STEP 11
ACTION: time2 = time0.replace(tzinfo=zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time0 = <Arrow [2017-11-21T23:34:36.086658+01:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Europe/Rome'                                                   # STEP 12
ACTION: zone3 = 'Europe/Rome'  
zone3 = 'Europe/Rome' : <type 'str'>
==================================================
time7 = arrow.get(val4)                                                 # STEP 13
ACTION: time7 = arrow.get(val4) 
val4 = 0 : <type 'int'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.humanize(locale=locale1)                                          # STEP 14
ACTION: time2.humanize(locale=locale1) 
locale1 = u'ar_eg' : <type 'unicode'>
time2 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(minutes=val4)                                     # STEP 15
ACTION: time8 = time7.replace(minutes=val4) 
val4 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T22:34:36.086658+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time2.replace(seconds=val4)                                     # STEP 16
ACTION: time0 = time2.replace(seconds=val4) 
val4 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [2017-11-21T23:34:36.086658+01:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale1 =  u'ar'                                                        # STEP 17
ACTION: locale1 =  u'ar' 
locale1 = u'ar_eg' : <type 'unicode'>
=> locale1 = u'ar' : <type 'unicode'>
==================================================
time3 = time8.replace(hours=val4)                                       # STEP 18
ACTION: time3 = time8.replace(hours=val4) 
val4 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(hours=val4)                                       # STEP 19
ACTION: time1 = time3.replace(hours=val4) 
val4 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 += 1                                                               # STEP 20
ACTION: val4 += 1 
val4 = 0 : <type 'int'>
=> val4 = 1 : <type 'int'>
==================================================
time8 = time0.replace(hours=val4)                                       # STEP 21
ACTION: time8 = time0.replace(hours=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-22T00:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time3.replace(tzinfo=zone1)                                     # STEP 22
ACTION: time2 = time3.replace(tzinfo=zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(minutes=val4)                                     # STEP 23
ACTION: time5 = time8.replace(minutes=val4) 
val4 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T00:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-22T00:35:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time1.replace(tzinfo=zone4)                                     # STEP 24
ACTION: time6 = time1.replace(tzinfo=zone4) 
zone4 = 'Etc/Greenwich' : <type 'str'>
time1 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = arrow.now(zone3)                                                # STEP 25
ACTION: time0 = arrow.now(zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time0 = <Arrow [2017-11-21T23:34:36.086658+05:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T23:34:36.101513+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time2.replace(year=val4)                                        # STEP 26
ACTION: time4 = time2.replace(year=val4) 
val4 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Turkey'                                                        # STEP 27
ACTION: zone3 = 'Turkey'  
zone3 = 'Europe/Rome' : <type 'str'>
=> zone3 = 'Turkey' : <type 'str'>
==================================================
time2 = time4.to(zone1)                                                 # STEP 28
ACTION: time2 = time4.to(zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time4 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa0ea70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 24869, in act726
    self.p_time[2] = self.p_time[4].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #149 STEP #30 (0:00:30.001779) Tue Nov 21 14:34:56 2017 [ 253 stmts 337 branches ] (no cov+ for 7 tests) 14759 TOTAL ACTIONS (491.93749738/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 48
STOPPING TESTING DUE TO TIMEOUT
22.2156398104 PERCENT COVERED
60.2192788124 TOTAL RUNTIME
299 EXECUTED
29777 TOTAL TEST OPERATIONS
21.9045596123 TIME SPENT EXECUTING TEST OPERATIONS
37.6229441166 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0200145244598 TIME SPENT CHECKING PROPERTIES
21.9245741367 TOTAL TIME SPENT RUNNING SUT
0.186124324799 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
locale0 =  u'hu_hu'                                                      # STEP 0
val4 = 0                                                                 # STEP 1
zone4 = 'Etc/Greenwich'                                                  # STEP 2
locale4 =  u'da_dk'                                                      # STEP 3
locale3 =  u'sk'                                                         # STEP 4
zone1 = 'Asia/Samarkand'                                                 # STEP 5
locale1 = u'ar_eg'                                                       # STEP 6
locale2 =  u'nb'                                                         # STEP 7
time8 = arrow.utcnow()                                                   # STEP 8
zone3 = 'Europe/Rome'                                                    # STEP 9
time0 = time8.to(zone3)                                                 # STEP 10
time2 = time0.replace(tzinfo=zone1)                                     # STEP 11
zone3 = 'Europe/Rome'                                                   # STEP 12
time7 = arrow.get(val4)                                                 # STEP 13
time2.humanize(locale=locale1)                                          # STEP 14
time8 = time7.replace(minutes=val4)                                     # STEP 15
time0 = time2.replace(seconds=val4)                                     # STEP 16
locale1 =  u'ar'                                                        # STEP 17
time3 = time8.replace(hours=val4)                                       # STEP 18
time1 = time3.replace(hours=val4)                                       # STEP 19
val4 += 1                                                               # STEP 20
time8 = time0.replace(hours=val4)                                       # STEP 21
time2 = time3.replace(tzinfo=zone1)                                     # STEP 22
time5 = time8.replace(minutes=val4)                                     # STEP 23
time6 = time1.replace(tzinfo=zone4)                                     # STEP 24
time0 = arrow.now(zone3)                                                # STEP 25
time4 = time2.replace(year=val4)                                        # STEP 26
zone3 = 'Turkey'                                                        # STEP 27
time2 = time4.to(zone1)                                                 # STEP 28
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa0ea70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 24869, in act726
    self.p_time[2] = self.p_time[4].to(self.p_zone[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
341 BRANCHES COVERED
255 STATEMENTS COVERED
