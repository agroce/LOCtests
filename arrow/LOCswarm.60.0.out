Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13330.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #62 STEP #0 (0:00:30.010520) Tue Nov 21 12:43:36 2017 [ 233 stmts 302 branches ] (no cov+ for 17 tests) 6100 TOTAL ACTIONS (203.262056232/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10aae2a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 305942, in act6814
    self.p_time[5].shift(years=self.p_val[9])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 44 steps

SAVING TEST AS failure.13330.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone0 = 'Australia/Brisbane'                                             # STEP 0
ACTION: zone0 = 'Australia/Brisbane'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Australia/Brisbane' : <type 'str'>
==================================================
val9 = 0                                                                 # STEP 1
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
zone2 = 'Australia/Brisbane'                                             # STEP 2
ACTION: zone2 = 'Australia/Brisbane'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Australia/Brisbane' : <type 'str'>
==================================================
val9 -= 1                                                                # STEP 3
ACTION: val9 -= 1 
val9 = 0 : <type 'int'>
=> val9 = -1 : <type 'int'>
==================================================
zone4 = 'Poland'                                                         # STEP 4
ACTION: zone4 = 'Poland'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Poland' : <type 'str'>
==================================================
zone1 = 'US/Alaska'                                                      # STEP 5
ACTION: zone1 = 'US/Alaska'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Alaska' : <type 'str'>
==================================================
val7 = 0                                                                 # STEP 6
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
val7 -= 1                                                                # STEP 7
ACTION: val7 -= 1 
val7 = 0 : <type 'int'>
=> val7 = -1 : <type 'int'>
==================================================
val7 += 1                                                                # STEP 8
ACTION: val7 += 1 
val7 = -1 : <type 'int'>
=> val7 = 0 : <type 'int'>
==================================================
zone3 = 'US/Alaska'                                                      # STEP 9
ACTION: zone3 = 'US/Alaska'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Alaska' : <type 'str'>
==================================================
time5 = arrow.now()                                                     # STEP 10
ACTION: time5 = arrow.now() 
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'tr_tr'                                                     # STEP 11
ACTION: locale4 =  u'tr_tr' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'tr_tr' : <type 'unicode'>
==================================================
val7 += 1                                                               # STEP 12
ACTION: val7 += 1 
val7 = 0 : <type 'int'>
=> val7 = 1 : <type 'int'>
==================================================
time5.shift(hours=val7)                                                 # STEP 13
ACTION: time5.shift(hours=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(months=val7)                                                # STEP 14
ACTION: time5.shift(months=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 -= 1                                                               # STEP 15
ACTION: val9 -= 1 
val9 = -1 : <type 'int'>
=> val9 = -2 : <type 'int'>
==================================================
time5.shift(years=val7)                                                 # STEP 16
ACTION: time5.shift(years=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 = 0                                                                # STEP 17
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
time2 = time5.replace(year=val7)                                        # STEP 18
ACTION: time2 = time5.replace(year=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now()                                                     # STEP 19
ACTION: time9 = arrow.now() 
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T12:43:41.519868-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(years=val6)                                                 # STEP 20
ACTION: time9.shift(years=val6) 
val6 = 0 : <type 'int'>
time9 = <Arrow [2017-11-21T12:43:41.519868-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale2 =  u'pt'                                                        # STEP 21
ACTION: locale2 =  u'pt' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'pt' : <type 'unicode'>
==================================================
time7 = time2.to(zone2)                                                 # STEP 22
ACTION: time7 = time2.to(zone2) 
zone2 = 'Australia/Brisbane' : <type 'str'>
time2 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [0001-11-22T06:43:41.515424+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(hours=val6)                                                 # STEP 23
ACTION: time9.shift(hours=val6) 
val6 = 0 : <type 'int'>
time9 = <Arrow [2017-11-21T12:43:41.519868-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(tzinfo=zone1)                                     # STEP 24
ACTION: time8 = time7.replace(tzinfo=zone1) 
zone1 = 'US/Alaska' : <type 'str'>
time7 = <Arrow [0001-11-22T06:43:41.515424+10:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Asia/Samarkand'                                                # STEP 25
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = 'US/Alaska' : <type 'str'>
=> zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
time7 = time9.replace(tzinfo=zone3)                                     # STEP 26
ACTION: time7 = time9.replace(tzinfo=zone3) 
zone3 = 'US/Alaska' : <type 'str'>
time9 = <Arrow [2017-11-21T12:43:41.519868-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [0001-11-22T06:43:41.515424+10:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T12:43:41.519868-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.humanize(locale=locale2)                                          # STEP 27
ACTION: time5.humanize(locale=locale2) 
locale2 = u'pt' : <type 'unicode'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(years=val6)                                                 # STEP 28
ACTION: time2.shift(years=val6) 
val6 = 0 : <type 'int'>
time2 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time5.replace(year=val7)                                        # STEP 29
ACTION: time6 = time5.replace(year=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(year=val7)                                        # STEP 30
ACTION: time5 = time8.replace(year=val7) 
val7 = 1 : <type 'int'>
time8 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Asia/Samarkand'                                                # STEP 31
ACTION: zone3 = 'Asia/Samarkand'  
zone3 = 'US/Alaska' : <type 'str'>
=> zone3 = 'Asia/Samarkand' : <type 'str'>
==================================================
time6.shift(minutes=val7)                                               # STEP 32
ACTION: time6.shift(minutes=val7) 
val7 = 1 : <type 'int'>
time6 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time2.replace(tzinfo=zone1)                                     # STEP 33
ACTION: time1 = time2.replace(tzinfo=zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time2 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [0001-11-21T12:43:41.515424+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Asia/Samarkand'                                                # STEP 34
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
time8.shift(hours=val6)                                                 # STEP 35
ACTION: time8.shift(hours=val6) 
val6 = 0 : <type 'int'>
time8 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time6.replace(tzinfo=zone2)                                     # STEP 36
ACTION: time9 = time6.replace(tzinfo=zone2) 
zone2 = 'Australia/Brisbane' : <type 'str'>
time6 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [2017-11-21T12:43:41.519868-08:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-11-21T12:43:41.515424+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(seconds=val7)                                               # STEP 37
ACTION: time5.shift(seconds=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(months=val9)                                                # STEP 38
ACTION: time8.shift(months=val9) 
val9 = -2 : <type 'int'>
time8 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 += 1                                                               # STEP 39
ACTION: val6 += 1 
val6 = 0 : <type 'int'>
=> val6 = 1 : <type 'int'>
==================================================
time2.humanize(locale=locale2)                                          # STEP 40
ACTION: time2.humanize(locale=locale2) 
locale2 = u'pt' : <type 'unicode'>
time2 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Alaska'                                                     # STEP 41
ACTION: zone2 = 'US/Alaska'  
zone2 = 'Australia/Brisbane' : <type 'str'>
=> zone2 = 'US/Alaska' : <type 'str'>
==================================================
time8 = time6.replace(tzinfo=zone2)                                     # STEP 42
ACTION: time8 = time6.replace(tzinfo=zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time6 = <Arrow [0001-11-21T12:43:41.515424-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-11-21T12:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(years=val9)                                                 # STEP 43
ACTION: time5.shift(years=val9) 
val9 = -2 : <type 'int'>
time5 = <Arrow [0001-11-22T06:43:41.515424-10:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10aae9a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 305942, in act6814
    self.p_time[5].shift(years=self.p_val[9])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('day is out of range for month',), <traceback object at 0x10ab19d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 98096, in act2292
    self.p_time[0] = self.p_time[3].replace(month=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 428, in replace
    current = self._datetime.replace(**absolute_kwargs)
Original test has 17 steps

SAVING TEST AS failure.13330.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone4 = 'Etc/Greenwich'                                                  # STEP 0
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone0 = 'US/Arizona'                                                     # STEP 1
ACTION: zone0 = 'US/Arizona'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Arizona' : <type 'str'>
==================================================
zone1 = 'US/Arizona'                                                     # STEP 2
ACTION: zone1 = 'US/Arizona'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Arizona' : <type 'str'>
==================================================
zone3 = 'Europe/Rome'                                                    # STEP 3
ACTION: zone3 = 'Europe/Rome'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
val7 = 0                                                                 # STEP 4
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
zone2 = 'Etc/Greenwich'                                                  # STEP 5
ACTION: zone2 = 'Etc/Greenwich'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Etc/Greenwich' : <type 'str'>
==================================================
val7 += 1                                                                # STEP 6
ACTION: val7 += 1 
val7 = 0 : <type 'int'>
=> val7 = 1 : <type 'int'>
==================================================
val7 += 1                                                                # STEP 7
ACTION: val7 += 1 
val7 = 1 : <type 'int'>
=> val7 = 2 : <type 'int'>
==================================================
val1 = 0                                                                 # STEP 8
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
time6 = arrow.get(val1)                                                  # STEP 9
ACTION: time6 = arrow.get(val1) 
val1 = 0 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.to(zone3)                                                 # STEP 10
ACTION: time7 = time6.to(zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(months=val7)                                                # STEP 11
ACTION: time6.shift(months=val7) 
val7 = 2 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.to(zone0)                                                 # STEP 12
ACTION: time3 = time7.to(zone0) 
zone0 = 'US/Arizona' : <type 'str'>
time7 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(weeks=val7)                                                 # STEP 13
ACTION: time3.shift(weeks=val7) 
val7 = 2 : <type 'int'>
time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Alaska'                                                     # STEP 14
ACTION: zone3 = 'US/Alaska'  
zone3 = 'Europe/Rome' : <type 'str'>
=> zone3 = 'US/Alaska' : <type 'str'>
==================================================
time9 = time7.replace(month=val7)                                       # STEP 15
ACTION: time9 = time7.replace(month=val7) 
val7 = 2 : <type 'int'>
time7 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-02-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time3.replace(month=val7)                                       # STEP 16
ACTION: time0 = time3.replace(month=val7) 
val7 = 2 : <type 'int'>
time3 = <Arrow [1969-12-31T17:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> day is out of range for month
ERROR: (<type 'exceptions.ValueError'>, ValueError('day is out of range for month',), <traceback object at 0x10ab1c638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 98096, in act2292
    self.p_time[0] = self.p_time[3].replace(month=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 428, in replace
    current = self._datetime.replace(**absolute_kwargs)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10ab48b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 305825, in act6811
    self.p_time[5].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 37 steps

SAVING TEST AS failure.13330.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone3 = 'Asia/Samarkand'                                                 # STEP 0
ACTION: zone3 = 'Asia/Samarkand'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Asia/Samarkand' : <type 'str'>
==================================================
time0 = arrow.now(zone3)                                                 # STEP 1
ACTION: time0 = arrow.now(zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 = 0                                                                 # STEP 2
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
time7 = arrow.now()                                                      # STEP 3
ACTION: time7 = arrow.now() 
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(seconds=val6)                                                # STEP 4
ACTION: time0.shift(seconds=val6) 
val6 = 0 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 -= 1                                                                # STEP 5
ACTION: val6 -= 1 
val6 = 0 : <type 'int'>
=> val6 = -1 : <type 'int'>
==================================================
time3 = time0.to(zone3)                                                  # STEP 6
ACTION: time3 = time0.to(zone3) 
zone3 = 'Asia/Samarkand' : <type 'str'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(hours=val6)                                                  # STEP 7
ACTION: time0.shift(hours=val6) 
val6 = -1 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 = 0                                                                 # STEP 8
ACTION: val6 = 0 
val6 = -1 : <type 'int'>
=> val6 = 0 : <type 'int'>
==================================================
time0.shift(hours=val6)                                                  # STEP 9
ACTION: time0.shift(hours=val6) 
val6 = 0 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val6)                                                 # STEP 10
ACTION: time0.shift(years=val6) 
val6 = 0 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(minutes=val6)                                               # STEP 11
ACTION: time0.shift(minutes=val6) 
val6 = 0 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(minutes=val6)                                     # STEP 12
ACTION: time6 = time7.replace(minutes=val6) 
val6 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val6)                                               # STEP 13
ACTION: time3.shift(seconds=val6) 
val6 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale4 =  u'is_is'                                                     # STEP 14
ACTION: locale4 =  u'is_is' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'is_is' : <type 'unicode'>
==================================================
time3.shift(seconds=val6)                                               # STEP 15
ACTION: time3.shift(seconds=val6) 
val6 = 0 : <type 'int'>
time3 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 += 1                                                               # STEP 16
ACTION: val6 += 1 
val6 = 0 : <type 'int'>
=> val6 = 1 : <type 'int'>
==================================================
time7.shift(years=val6)                                                 # STEP 17
ACTION: time7.shift(years=val6) 
val6 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time3.replace(year=val6)                                        # STEP 18
ACTION: time2 = time3.replace(year=val6) 
val6 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [0001-11-22T01:43:49.296097+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Africa/Cairo'                                                  # STEP 19
ACTION: zone4 = 'Africa/Cairo'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Africa/Cairo' : <type 'str'>
==================================================
val6 -= 1                                                               # STEP 20
ACTION: val6 -= 1 
val6 = 1 : <type 'int'>
=> val6 = 0 : <type 'int'>
==================================================
val6 -= 1                                                               # STEP 21
ACTION: val6 -= 1 
val6 = 0 : <type 'int'>
=> val6 = -1 : <type 'int'>
==================================================
time2.shift(seconds=val6)                                               # STEP 22
ACTION: time2.shift(seconds=val6) 
val6 = -1 : <type 'int'>
time2 = <Arrow [0001-11-22T01:43:49.296097+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(seconds=val6)                                               # STEP 23
ACTION: time7.shift(seconds=val6) 
val6 = -1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(minutes=val6)                                               # STEP 24
ACTION: time2.shift(minutes=val6) 
val6 = -1 : <type 'int'>
time2 = <Arrow [0001-11-22T01:43:49.296097+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val6)                                                # STEP 25
ACTION: time3.shift(months=val6) 
val6 = -1 : <type 'int'>
time3 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val6)                                                 # STEP 26
ACTION: time0.shift(years=val6) 
val6 = -1 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.format()                                                          # STEP 27
ACTION: time6.format() 
time6 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(months=val6)                                                # STEP 28
ACTION: time6.shift(months=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(minutes=val6)                                               # STEP 29
ACTION: time6.shift(minutes=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(hours=val6)                                                 # STEP 30
ACTION: time0.shift(hours=val6) 
val6 = -1 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.replace(seconds=val6)                                     # STEP 31
ACTION: time5 = time2.replace(seconds=val6) 
val6 = -1 : <type 'int'>
time2 = <Arrow [0001-11-22T01:43:49.296097+04:28]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-11-22T01:43:48.296097+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.to(zone4)                                                 # STEP 32
ACTION: time7 = time6.to(zone4) 
zone4 = 'Africa/Cairo' : <type 'str'>
time6 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T12:43:49.297199-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T22:43:49.297199+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(minutes=val6)                                               # STEP 33
ACTION: time0.shift(minutes=val6) 
val6 = -1 : <type 'int'>
time0 = <Arrow [2017-11-22T01:43:49.296097+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Etc/Greenwich'                                                 # STEP 34
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = 'Africa/Cairo' : <type 'str'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
time2.shift(months=val6)                                                # STEP 35
ACTION: time2.shift(months=val6) 
val6 = -1 : <type 'int'>
time2 = <Arrow [0001-11-22T01:43:49.296097+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(years=val6)                                                 # STEP 36
ACTION: time5.shift(years=val6) 
val6 = -1 : <type 'int'>
time5 = <Arrow [0001-11-22T01:43:48.296097+04:28]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10ab48f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 305825, in act6811
    self.p_time[5].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 3
STOPPING TESTING DUE TO TIMEOUT
20.7938388626 PERCENT COVERED
60.2501809597 TOTAL RUNTIME
133 EXECUTED
13001 TOTAL TEST OPERATIONS
9.31387448311 TIME SPENT EXECUTING TEST OPERATIONS
49.8150196075 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00973534584045 TIME SPENT CHECKING PROPERTIES
9.32360982895 TOTAL TIME SPENT RUNNING SUT
0.154646396637 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
zone0 = 'Australia/Brisbane'                                             # STEP 0
val9 = 0                                                                 # STEP 1
zone2 = 'Australia/Brisbane'                                             # STEP 2
val9 -= 1                                                                # STEP 3
zone4 = 'Poland'                                                         # STEP 4
zone1 = 'US/Alaska'                                                      # STEP 5
val7 = 0                                                                 # STEP 6
val7 -= 1                                                                # STEP 7
val7 += 1                                                                # STEP 8
zone3 = 'US/Alaska'                                                      # STEP 9
time5 = arrow.now()                                                     # STEP 10
locale4 =  u'tr_tr'                                                     # STEP 11
val7 += 1                                                               # STEP 12
time5.shift(hours=val7)                                                 # STEP 13
time5.shift(months=val7)                                                # STEP 14
val9 -= 1                                                               # STEP 15
time5.shift(years=val7)                                                 # STEP 16
val6 = 0                                                                # STEP 17
time2 = time5.replace(year=val7)                                        # STEP 18
time9 = arrow.now()                                                     # STEP 19
time9.shift(years=val6)                                                 # STEP 20
locale2 =  u'pt'                                                        # STEP 21
time7 = time2.to(zone2)                                                 # STEP 22
time9.shift(hours=val6)                                                 # STEP 23
time8 = time7.replace(tzinfo=zone1)                                     # STEP 24
zone1 = 'Asia/Samarkand'                                                # STEP 25
time7 = time9.replace(tzinfo=zone3)                                     # STEP 26
time5.humanize(locale=locale2)                                          # STEP 27
time2.shift(years=val6)                                                 # STEP 28
time6 = time5.replace(year=val7)                                        # STEP 29
time5 = time8.replace(year=val7)                                        # STEP 30
zone3 = 'Asia/Samarkand'                                                # STEP 31
time6.shift(minutes=val7)                                               # STEP 32
time1 = time2.replace(tzinfo=zone1)                                     # STEP 33
zone1 = 'Asia/Samarkand'                                                # STEP 34
time8.shift(hours=val6)                                                 # STEP 35
time9 = time6.replace(tzinfo=zone2)                                     # STEP 36
time5.shift(seconds=val7)                                               # STEP 37
time8.shift(months=val9)                                                # STEP 38
val6 += 1                                                               # STEP 39
time2.humanize(locale=locale2)                                          # STEP 40
zone2 = 'US/Alaska'                                                     # STEP 41
time8 = time6.replace(tzinfo=zone2)                                     # STEP 42
time5.shift(years=val9)                                                 # STEP 43
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10aae9a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 305942, in act6814
    self.p_time[5].shift(years=self.p_val[9])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE 1
zone4 = 'Etc/Greenwich'                                                  # STEP 0
zone0 = 'US/Arizona'                                                     # STEP 1
zone1 = 'US/Arizona'                                                     # STEP 2
zone3 = 'Europe/Rome'                                                    # STEP 3
val7 = 0                                                                 # STEP 4
zone2 = 'Etc/Greenwich'                                                  # STEP 5
val7 += 1                                                                # STEP 6
val7 += 1                                                                # STEP 7
val1 = 0                                                                 # STEP 8
time6 = arrow.get(val1)                                                  # STEP 9
time7 = time6.to(zone3)                                                 # STEP 10
time6.shift(months=val7)                                                # STEP 11
time3 = time7.to(zone0)                                                 # STEP 12
time3.shift(weeks=val7)                                                 # STEP 13
zone3 = 'US/Alaska'                                                     # STEP 14
time9 = time7.replace(month=val7)                                       # STEP 15
time0 = time3.replace(month=val7)                                       # STEP 16
ERROR: (<type 'exceptions.ValueError'>, ValueError('day is out of range for month',), <traceback object at 0x10ab1c638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 98096, in act2292
    self.p_time[0] = self.p_time[3].replace(month=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 428, in replace
    current = self._datetime.replace(**absolute_kwargs)
FAILURE 2
zone3 = 'Asia/Samarkand'                                                 # STEP 0
time0 = arrow.now(zone3)                                                 # STEP 1
val6 = 0                                                                 # STEP 2
time7 = arrow.now()                                                      # STEP 3
time0.shift(seconds=val6)                                                # STEP 4
val6 -= 1                                                                # STEP 5
time3 = time0.to(zone3)                                                  # STEP 6
time0.shift(hours=val6)                                                  # STEP 7
val6 = 0                                                                 # STEP 8
time0.shift(hours=val6)                                                  # STEP 9
time0.shift(years=val6)                                                 # STEP 10
time0.shift(minutes=val6)                                               # STEP 11
time6 = time7.replace(minutes=val6)                                     # STEP 12
time3.shift(seconds=val6)                                               # STEP 13
locale4 =  u'is_is'                                                     # STEP 14
time3.shift(seconds=val6)                                               # STEP 15
val6 += 1                                                               # STEP 16
time7.shift(years=val6)                                                 # STEP 17
time2 = time3.replace(year=val6)                                        # STEP 18
zone4 = 'Africa/Cairo'                                                  # STEP 19
val6 -= 1                                                               # STEP 20
val6 -= 1                                                               # STEP 21
time2.shift(seconds=val6)                                               # STEP 22
time7.shift(seconds=val6)                                               # STEP 23
time2.shift(minutes=val6)                                               # STEP 24
time3.shift(months=val6)                                                # STEP 25
time0.shift(years=val6)                                                 # STEP 26
time6.format()                                                          # STEP 27
time6.shift(months=val6)                                                # STEP 28
time6.shift(minutes=val6)                                               # STEP 29
time0.shift(hours=val6)                                                 # STEP 30
time5 = time2.replace(seconds=val6)                                     # STEP 31
time7 = time6.to(zone4)                                                 # STEP 32
time0.shift(minutes=val6)                                               # STEP 33
zone4 = 'Etc/Greenwich'                                                 # STEP 34
time2.shift(months=val6)                                                # STEP 35
time5.shift(years=val6)                                                 # STEP 36
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10ab48f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 305825, in act6811
    self.p_time[5].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
320 BRANCHES COVERED
243 STATEMENTS COVERED
