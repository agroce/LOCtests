Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13802.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109a4b098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306215, in act6821
    self.p_time[6].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 25 steps

SAVING TEST AS failure.13802.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
time8 = arrow.now()                                                      # STEP 0
ACTION: time8 = arrow.now() 
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T14:21:34.492823-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Etc/Greenwich'                                                  # STEP 1
ACTION: zone1 = 'Etc/Greenwich'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Etc/Greenwich' : <type 'str'>
==================================================
time8.format()                                                           # STEP 2
ACTION: time8.format() 
time8 = <Arrow [2017-11-21T14:21:34.492823-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Australia/Brisbane'                                             # STEP 3
ACTION: zone2 = 'Australia/Brisbane'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Australia/Brisbane' : <type 'str'>
==================================================
time7 = arrow.now(zone2)                                                 # STEP 4
ACTION: time7 = arrow.now(zone2) 
zone2 = 'Australia/Brisbane' : <type 'str'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.now(zone2)                                                 # STEP 5
ACTION: time8 = arrow.now(zone2) 
zone2 = 'Australia/Brisbane' : <type 'str'>
time8 = <Arrow [2017-11-21T14:21:34.492823-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Mountain'                                                    # STEP 6
ACTION: zone3 = 'US/Mountain'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Mountain' : <type 'str'>
==================================================
zone2 = 'Poland'                                                         # STEP 7
ACTION: zone2 = 'Poland'  
zone2 = 'Australia/Brisbane' : <type 'str'>
=> zone2 = 'Poland' : <type 'str'>
==================================================
zone4 = 'US/Mountain'                                                    # STEP 8
ACTION: zone4 = 'US/Mountain'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Mountain' : <type 'str'>
==================================================
time7.format()                                                           # STEP 9
ACTION: time7.format() 
time7 = <Arrow [2017-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Singapore'                                                     # STEP 10
ACTION: zone0 = 'Singapore'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Singapore' : <type 'str'>
==================================================
val6 = 0                                                                # STEP 11
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
time8.shift(minutes=val6)                                               # STEP 12
ACTION: time8.shift(minutes=val6) 
val6 = 0 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 += 1                                                               # STEP 13
ACTION: val6 += 1 
val6 = 0 : <type 'int'>
=> val6 = 1 : <type 'int'>
==================================================
time8.shift(months=val6)                                                # STEP 14
ACTION: time8.shift(months=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(year=val6)                                        # STEP 15
ACTION: time6 = time7.replace(year=val6) 
val6 = 1 : <type 'int'>
time7 = <Arrow [2017-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(hours=val6)                                                 # STEP 16
ACTION: time8.shift(hours=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(month=val6)                                       # STEP 17
ACTION: time1 = time8.replace(month=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-01-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(years=val6)                                                 # STEP 18
ACTION: time8.shift(years=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:34.496532+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val6)                                                 # STEP 19
ACTION: time7.shift(hours=val6) 
val6 = 1 : <type 'int'>
time7 = <Arrow [2017-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 -= 1                                                               # STEP 20
ACTION: val6 -= 1 
val6 = 1 : <type 'int'>
=> val6 = 0 : <type 'int'>
==================================================
time7 = arrow.now(zone0)                                                # STEP 21
ACTION: time7 = arrow.now(zone0) 
zone0 = 'Singapore' : <type 'str'>
time7 = <Arrow [2017-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-22T06:21:34.505967+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 -= 1                                                               # STEP 22
ACTION: val6 -= 1 
val6 = 0 : <type 'int'>
=> val6 = -1 : <type 'int'>
==================================================
zone0 = 'US/Alaska'                                                     # STEP 23
ACTION: zone0 = 'US/Alaska'  
zone0 = 'Singapore' : <type 'str'>
=> zone0 = 'US/Alaska' : <type 'str'>
==================================================
time6.shift(years=val6)                                                 # STEP 24
ACTION: time6.shift(years=val6) 
val6 = -1 : <type 'int'>
time6 = <Arrow [0001-11-22T08:21:34.495551+10:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109a66098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306215, in act6821
    self.p_time[6].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109abe710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29025, in act817
    self.p_time[4] = self.p_time[2].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 69 steps

SAVING TEST AS failure.13802.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone4 = 'Australia/Brisbane'                                             # STEP 0
ACTION: zone4 = 'Australia/Brisbane'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Australia/Brisbane' : <type 'str'>
==================================================
val8 = 0                                                                 # STEP 1
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
time8 = arrow.now()                                                      # STEP 2
ACTION: time8 = arrow.now() 
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(seconds=val8)                                                # STEP 3
ACTION: time8.shift(seconds=val8) 
val8 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.replace(tzinfo=zone4)                                      # STEP 4
ACTION: time4 = time8.replace(tzinfo=zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(minutes=val8)                                                # STEP 5
ACTION: time4.shift(minutes=val8) 
val8 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time4.replace(hours=val8)                                        # STEP 6
ACTION: time5 = time4.replace(hours=val8) 
val8 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time5.replace(tzinfo=zone4)                                      # STEP 7
ACTION: time0 = time5.replace(tzinfo=zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time5 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.replace(minutes=val8)                                      # STEP 8
ACTION: time4 = time8.replace(minutes=val8) 
val8 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.now(zone4)                                                 # STEP 9
ACTION: time2 = arrow.now(zone4) 
zone4 = 'Australia/Brisbane' : <type 'str'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Europe/Rome'                                                   # STEP 10
ACTION: zone4 = 'Europe/Rome'  
zone4 = 'Australia/Brisbane' : <type 'str'>
=> zone4 = 'Europe/Rome' : <type 'str'>
==================================================
time9 = arrow.get(val8)                                                 # STEP 11
ACTION: time9 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Turkey'                                                        # STEP 12
ACTION: zone3 = 'Turkey'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Turkey' : <type 'str'>
==================================================
time8.shift(hours=val8)                                                 # STEP 13
ACTION: time8.shift(hours=val8) 
val8 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(weeks=val8)                                                 # STEP 14
ACTION: time4.shift(weeks=val8) 
val8 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(seconds=val8)                                               # STEP 15
ACTION: time4.shift(seconds=val8) 
val8 = 0 : <type 'int'>
time4 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time0.replace(minutes=val8)                                     # STEP 16
ACTION: time5 = time0.replace(minutes=val8) 
val8 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time4.to(zone3)                                                 # STEP 17
ACTION: time4 = time4.to(zone3) 
zone3 = 'Turkey' : <type 'str'>
time4 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-22T01:21:42.830460+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Arizona'                                                    # STEP 18
ACTION: zone3 = 'US/Arizona'  
zone3 = 'Turkey' : <type 'str'>
=> zone3 = 'US/Arizona' : <type 'str'>
==================================================
time0.timestamp                                                         # STEP 19
ACTION: time0.timestamp 
time0 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.now(zone3)                                                # STEP 20
ACTION: time3 = arrow.now(zone3) 
zone3 = 'US/Arizona' : <type 'str'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(hours=val8)                                       # STEP 21
ACTION: time7 = time2.replace(hours=val8) 
val8 = 0 : <type 'int'>
time2 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(minutes=val8)                                     # STEP 22
ACTION: time1 = time8.replace(minutes=val8) 
val8 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val9 = 0                                                                # STEP 23
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
time8 = time2.replace(tzinfo=zone3)                                     # STEP 24
ACTION: time8 = time2.replace(tzinfo=zone3) 
zone3 = 'US/Arizona' : <type 'str'>
time2 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(weeks=val8)                                                 # STEP 25
ACTION: time0.shift(weeks=val8) 
val8 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Arizona'                                                    # STEP 26
ACTION: zone2 = 'US/Arizona'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Arizona' : <type 'str'>
==================================================
time4.shift(hours=val8)                                                 # STEP 27
ACTION: time4.shift(hours=val8) 
val8 = 0 : <type 'int'>
time4 = <Arrow [2017-11-22T01:21:42.830460+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val8)                                                 # STEP 28
ACTION: time0.shift(years=val8) 
val8 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(minutes=val9)                                               # STEP 29
ACTION: time8.shift(minutes=val9) 
val9 = 0 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time1.replace(tzinfo=zone3)                                     # STEP 30
ACTION: time0 = time1.replace(tzinfo=zone3) 
zone3 = 'US/Arizona' : <type 'str'>
time1 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [2017-11-21T14:21:42.830460+10:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T14:21:42.830460-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(years=val9)                                                 # STEP 31
ACTION: time4.shift(years=val9) 
val9 = 0 : <type 'int'>
time4 = <Arrow [2017-11-22T01:21:42.830460+03:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.replace(minutes=val9)                                     # STEP 32
ACTION: time4 = time8.replace(minutes=val9) 
val9 = 0 : <type 'int'>
time8 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-11-22T01:21:42.830460+03:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(seconds=val9)                                               # STEP 33
ACTION: time0.shift(seconds=val9) 
val9 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T14:21:42.830460-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Etc/Greenwich'                                                 # STEP 34
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = 'US/Arizona' : <type 'str'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
time0 = arrow.get(val8)                                                 # STEP 35
ACTION: time0 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T14:21:42.830460-07:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 += 1                                                               # STEP 36
ACTION: val8 += 1 
val8 = 0 : <type 'int'>
=> val8 = 1 : <type 'int'>
==================================================
time2 = time9.to(zone3)                                                 # STEP 37
ACTION: time2 = time9.to(zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time0.replace(minutes=val9)                                     # STEP 38
ACTION: time8 = time0.replace(minutes=val9) 
val9 = 0 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time9.replace(tzinfo=zone3)                                     # STEP 39
ACTION: time0 = time9.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'hu_hu'                                                     # STEP 40
ACTION: locale3 =  u'hu_hu' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'hu_hu' : <type 'unicode'>
==================================================
zone3 = 'US/Eastern'                                                    # STEP 41
ACTION: zone3 = 'US/Eastern'  
zone3 = 'Etc/Greenwich' : <type 'str'>
=> zone3 = 'US/Eastern' : <type 'str'>
==================================================
time9 = time3.replace(year=val8)                                        # STEP 42
ACTION: time9 = time3.replace(year=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.replace(month=val8)                                       # STEP 43
ACTION: time6 = time9.replace(month=val8) 
val8 = 1 : <type 'int'>
time9 = <Arrow [0001-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-01-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(seconds=val8)                                               # STEP 44
ACTION: time3.shift(seconds=val8) 
val8 = 1 : <type 'int'>
time3 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time3.to(zone2)                                                 # STEP 45
ACTION: time3 = time3.to(zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time3 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(hours=val9)                                       # STEP 46
ACTION: time1 = time3.replace(hours=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-11-21T14:21:42.830460-08:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.now(zone4)                                                # STEP 47
ACTION: time3 = arrow.now(zone4) 
zone4 = 'Europe/Rome' : <type 'str'>
time3 = <Arrow [2017-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-21T23:21:42.860677+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time3.replace(tzinfo=zone2)                                     # STEP 48
ACTION: time9 = time3.replace(tzinfo=zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time3 = <Arrow [2017-11-21T23:21:42.860677+01:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [0001-11-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-21T23:21:42.860677-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(hours=val9)                                                 # STEP 49
ACTION: time6.shift(hours=val9) 
val9 = 0 : <type 'int'>
time6 = <Arrow [0001-01-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(seconds=val8)                                               # STEP 50
ACTION: time8.shift(seconds=val8) 
val8 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(minutes=val9)                                               # STEP 51
ACTION: time3.shift(minutes=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [2017-11-21T23:21:42.860677+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(minutes=val8)                                               # STEP 52
ACTION: time2.shift(minutes=val8) 
val8 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.replace(hours=val9)                                       # STEP 53
ACTION: time3 = time4.replace(hours=val9) 
val9 = 0 : <type 'int'>
time4 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-21T23:21:42.860677+01:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Europe/Rome'                                                   # STEP 54
ACTION: zone0 = 'Europe/Rome'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Europe/Rome' : <type 'str'>
==================================================
time7.shift(hours=val9)                                                 # STEP 55
ACTION: time7.shift(hours=val9) 
val9 = 0 : <type 'int'>
time7 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time0.replace(year=val8)                                        # STEP 56
ACTION: time2 = time0.replace(year=val8) 
val8 = 1 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = arrow.now(zone2)                                                # STEP 57
ACTION: time4 = arrow.now(zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time4 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T15:21:42.869091-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = arrow.now(zone3)                                                # STEP 58
ACTION: time0 = arrow.now(zone3) 
zone3 = 'US/Eastern' : <type 'str'>
time0 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T17:21:42.870544-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Mountain'                                                   # STEP 59
ACTION: zone2 = 'US/Mountain'  
zone2 = 'US/Arizona' : <type 'str'>
=> zone2 = 'US/Mountain' : <type 'str'>
==================================================
time8 = arrow.now(zone4)                                                # STEP 60
ACTION: time8 = arrow.now(zone4) 
zone4 = 'Europe/Rome' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T23:21:42.872270+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Europe/Rome'                                                   # STEP 61
ACTION: zone3 = 'Europe/Rome'  
zone3 = 'US/Eastern' : <type 'str'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
time7 = time3.replace(tzinfo=zone3)                                     # STEP 62
ACTION: time7 = time3.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time3 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-22T08:21:42.835733+10:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-22T08:21:42.835733+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale3)                                          # STEP 63
ACTION: time3.humanize(locale=locale3) 
locale3 = u'hu_hu' : <type 'unicode'>
time3 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.replace(tzinfo=zone0)                                     # STEP 64
ACTION: time3 = time4.replace(tzinfo=zone0) 
zone0 = 'Europe/Rome' : <type 'str'>
time4 = <Arrow [2017-11-21T15:21:42.869091-07:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-22T08:21:42.835733-07:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [2017-11-21T15:21:42.869091+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val8)                                                # STEP 65
ACTION: time7.shift(months=val8) 
val8 = 1 : <type 'int'>
time7 = <Arrow [2017-11-22T08:21:42.835733+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val8)                                                 # STEP 66
ACTION: time0.shift(years=val8) 
val8 = 1 : <type 'int'>
time0 = <Arrow [2017-11-21T17:21:42.870544-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now(zone4)                                                # STEP 67
ACTION: time6 = arrow.now(zone4) 
zone4 = 'Europe/Rome' : <type 'str'>
time6 = <Arrow [0001-01-21T15:21:42.842673-07:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T23:21:42.878616+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time2.to(zone2)                                                 # STEP 68
ACTION: time4 = time2.to(zone2) 
zone2 = 'US/Mountain' : <type 'str'>
time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [2017-11-21T15:21:42.869091-07:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109aefe60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29025, in act817
    self.p_time[4] = self.p_time[2].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #60 STEP #79 (0:00:30.002450) Tue Nov 21 14:21:47 2017 [ 228 stmts 301 branches ] (no cov+ for 6 tests) 5873 TOTAL ACTIONS (195.750680431/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 44
STOPPING TESTING DUE TO TIMEOUT
20.4383886256 PERCENT COVERED
60.2340159416 TOTAL RUNTIME
117 EXECUTED
11538 TOTAL TEST OPERATIONS
8.09204077721 TIME SPENT EXECUTING TEST OPERATIONS
51.5922355652 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00796246528625 TIME SPENT CHECKING PROPERTIES
8.10000324249 TOTAL TIME SPENT RUNNING SUT
0.140344619751 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
time8 = arrow.now()                                                      # STEP 0
zone1 = 'Etc/Greenwich'                                                  # STEP 1
time8.format()                                                           # STEP 2
zone2 = 'Australia/Brisbane'                                             # STEP 3
time7 = arrow.now(zone2)                                                 # STEP 4
time8 = arrow.now(zone2)                                                 # STEP 5
zone3 = 'US/Mountain'                                                    # STEP 6
zone2 = 'Poland'                                                         # STEP 7
zone4 = 'US/Mountain'                                                    # STEP 8
time7.format()                                                           # STEP 9
zone0 = 'Singapore'                                                     # STEP 10
val6 = 0                                                                # STEP 11
time8.shift(minutes=val6)                                               # STEP 12
val6 += 1                                                               # STEP 13
time8.shift(months=val6)                                                # STEP 14
time6 = time7.replace(year=val6)                                        # STEP 15
time8.shift(hours=val6)                                                 # STEP 16
time1 = time8.replace(month=val6)                                       # STEP 17
time8.shift(years=val6)                                                 # STEP 18
time7.shift(hours=val6)                                                 # STEP 19
val6 -= 1                                                               # STEP 20
time7 = arrow.now(zone0)                                                # STEP 21
val6 -= 1                                                               # STEP 22
zone0 = 'US/Alaska'                                                     # STEP 23
time6.shift(years=val6)                                                 # STEP 24
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x109a66098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306215, in act6821
    self.p_time[6].shift(years=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE 1
zone4 = 'Australia/Brisbane'                                             # STEP 0
val8 = 0                                                                 # STEP 1
time8 = arrow.now()                                                      # STEP 2
time8.shift(seconds=val8)                                                # STEP 3
time4 = time8.replace(tzinfo=zone4)                                      # STEP 4
time4.shift(minutes=val8)                                                # STEP 5
time5 = time4.replace(hours=val8)                                        # STEP 6
time0 = time5.replace(tzinfo=zone4)                                      # STEP 7
time4 = time8.replace(minutes=val8)                                      # STEP 8
time2 = arrow.now(zone4)                                                 # STEP 9
zone4 = 'Europe/Rome'                                                   # STEP 10
time9 = arrow.get(val8)                                                 # STEP 11
zone3 = 'Turkey'                                                        # STEP 12
time8.shift(hours=val8)                                                 # STEP 13
time4.shift(weeks=val8)                                                 # STEP 14
time4.shift(seconds=val8)                                               # STEP 15
time5 = time0.replace(minutes=val8)                                     # STEP 16
time4 = time4.to(zone3)                                                 # STEP 17
zone3 = 'US/Arizona'                                                    # STEP 18
time0.timestamp                                                         # STEP 19
time3 = arrow.now(zone3)                                                # STEP 20
time7 = time2.replace(hours=val8)                                       # STEP 21
time1 = time8.replace(minutes=val8)                                     # STEP 22
val9 = 0                                                                # STEP 23
time8 = time2.replace(tzinfo=zone3)                                     # STEP 24
time0.shift(weeks=val8)                                                 # STEP 25
zone2 = 'US/Arizona'                                                    # STEP 26
time4.shift(hours=val8)                                                 # STEP 27
time0.shift(years=val8)                                                 # STEP 28
time8.shift(minutes=val9)                                               # STEP 29
time0 = time1.replace(tzinfo=zone3)                                     # STEP 30
time4.shift(years=val9)                                                 # STEP 31
time4 = time8.replace(minutes=val9)                                     # STEP 32
time0.shift(seconds=val9)                                               # STEP 33
zone3 = 'Etc/Greenwich'                                                 # STEP 34
time0 = arrow.get(val8)                                                 # STEP 35
val8 += 1                                                               # STEP 36
time2 = time9.to(zone3)                                                 # STEP 37
time8 = time0.replace(minutes=val9)                                     # STEP 38
time0 = time9.replace(tzinfo=zone3)                                     # STEP 39
locale3 =  u'hu_hu'                                                     # STEP 40
zone3 = 'US/Eastern'                                                    # STEP 41
time9 = time3.replace(year=val8)                                        # STEP 42
time6 = time9.replace(month=val8)                                       # STEP 43
time3.shift(seconds=val8)                                               # STEP 44
time3 = time3.to(zone2)                                                 # STEP 45
time1 = time3.replace(hours=val9)                                       # STEP 46
time3 = arrow.now(zone4)                                                # STEP 47
time9 = time3.replace(tzinfo=zone2)                                     # STEP 48
time6.shift(hours=val9)                                                 # STEP 49
time8.shift(seconds=val8)                                               # STEP 50
time3.shift(minutes=val9)                                               # STEP 51
time2.shift(minutes=val8)                                               # STEP 52
time3 = time4.replace(hours=val9)                                       # STEP 53
zone0 = 'Europe/Rome'                                                   # STEP 54
time7.shift(hours=val9)                                                 # STEP 55
time2 = time0.replace(year=val8)                                        # STEP 56
time4 = arrow.now(zone2)                                                # STEP 57
time0 = arrow.now(zone3)                                                # STEP 58
zone2 = 'US/Mountain'                                                   # STEP 59
time8 = arrow.now(zone4)                                                # STEP 60
zone3 = 'Europe/Rome'                                                   # STEP 61
time7 = time3.replace(tzinfo=zone3)                                     # STEP 62
time3.humanize(locale=locale3)                                          # STEP 63
time3 = time4.replace(tzinfo=zone0)                                     # STEP 64
time7.shift(months=val8)                                                # STEP 65
time0.shift(years=val8)                                                 # STEP 66
time6 = arrow.now(zone4)                                                # STEP 67
time4 = time2.to(zone2)                                                 # STEP 68
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x109aefe60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 29025, in act817
    self.p_time[4] = self.p_time[2].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
314 BRANCHES COVERED
238 STATEMENTS COVERED
