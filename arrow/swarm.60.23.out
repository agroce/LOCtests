Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13914.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1092fea70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 39301, in act1043
    self.p_time[8] = self.p_time[7].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 20 steps

SAVING TEST AS failure.13914.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale3 =  u'fa'                                                         # STEP 0
ACTION: locale3 =  u'fa' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'fa' : <type 'unicode'>
==================================================
locale4 =  u'sv_se'                                                      # STEP 1
ACTION: locale4 =  u'sv_se' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'sv_se' : <type 'unicode'>
==================================================
locale1 =  u'de_de'                                                      # STEP 2
ACTION: locale1 =  u'de_de' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'de_de' : <type 'unicode'>
==================================================
locale2 =  u'ko'                                                         # STEP 3
ACTION: locale2 =  u'ko' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'ko' : <type 'unicode'>
==================================================
locale0 =  u'ru_ru'                                                      # STEP 4
ACTION: locale0 =  u'ru_ru' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'ru_ru' : <type 'unicode'>
==================================================
zone0 = 'Singapore'                                                      # STEP 5
ACTION: zone0 = 'Singapore'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Singapore' : <type 'str'>
==================================================
val5 = 0                                                                 # STEP 6
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
val5 += 1                                                                # STEP 7
ACTION: val5 += 1 
val5 = 0 : <type 'int'>
=> val5 = 1 : <type 'int'>
==================================================
zone2 = 'Africa/Cairo'                                                   # STEP 8
ACTION: zone2 = 'Africa/Cairo'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Africa/Cairo' : <type 'str'>
==================================================
time2 = arrow.get(val5)                                                  # STEP 9
ACTION: time2 = arrow.get(val5) 
val5 = 1 : <type 'int'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(year=val5)                                        # STEP 10
ACTION: time7 = time2.replace(year=val5) 
val5 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time2.replace(year=val5)                                        # STEP 11
ACTION: time3 = time2.replace(year=val5) 
val5 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.replace(month=val5)                                       # STEP 12
ACTION: time5 = time7.replace(month=val5) 
val5 = 1 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.year                                                              # STEP 13
ACTION: time7.year 
time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.format()                                                          # STEP 14
ACTION: time5.format() 
time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time3.replace(month=val5)                                       # STEP 15
ACTION: time7 = time3.replace(month=val5) 
val5 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time5.to(zone2)                                                 # STEP 16
ACTION: time6 = time5.to(zone2) 
zone2 = 'Africa/Cairo' : <type 'str'>
time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-01-01T02:00:01+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Mountain'                                                   # STEP 17
ACTION: zone3 = 'US/Mountain'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Mountain' : <type 'str'>
==================================================
time3 = time3.to(zone2)                                                 # STEP 18
ACTION: time3 = time3.to(zone2) 
zone2 = 'Africa/Cairo' : <type 'str'>
time3 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T02:00:01+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.to(zone3)                                                 # STEP 19
ACTION: time8 = time7.to(zone3) 
zone3 = 'US/Mountain' : <type 'str'>
time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1092ffb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 39301, in act1043
    self.p_time[8] = self.p_time[7].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #227 STEP #9 (0:00:30.000050) Tue Nov 21 15:00:15 2017 [ 253 stmts 337 branches ] (no cov+ for 91 tests) 22529 TOTAL ACTIONS (750.965413358/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1094bae60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327615, in act7373
    self.p_time[8].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
Original test has 46 steps

SAVING TEST AS failure.13914.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone4 = 'Asia/Samarkand'                                                 # STEP 0
ACTION: zone4 = 'Asia/Samarkand'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Asia/Samarkand' : <type 'str'>
==================================================
val2 = 0                                                                 # STEP 1
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
time7 = arrow.get(val2)                                                  # STEP 2
ACTION: time7 = arrow.get(val2) 
val2 = 0 : <type 'int'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(tzinfo=zone4)                                      # STEP 3
ACTION: time3 = time7.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Etc/Greenwich'                                                  # STEP 4
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone2 = 'Etc/Greenwich'                                                  # STEP 5
ACTION: zone2 = 'Etc/Greenwich'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Etc/Greenwich' : <type 'str'>
==================================================
time2 = time3.replace(hours=val2)                                        # STEP 6
ACTION: time2 = time3.replace(hours=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 += 1                                                                # STEP 7
ACTION: val2 += 1 
val2 = 0 : <type 'int'>
=> val2 = 1 : <type 'int'>
==================================================
time6 = time3.replace(seconds=val2)                                      # STEP 8
ACTION: time6 = time3.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.format()                                                           # STEP 9
ACTION: time7.format() 
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.replace(tzinfo=zone2)                                     # STEP 10
ACTION: time5 = time7.replace(tzinfo=zone2) 
zone2 = 'Etc/Greenwich' : <type 'str'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.replace(hours=val2)                                       # STEP 11
ACTION: time4 = time3.replace(hours=val2) 
val2 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time5.replace(seconds=val2)                                     # STEP 12
ACTION: time1 = time5.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time1.replace(tzinfo=zone3)                                     # STEP 13
ACTION: time7 = time1.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 = 0                                                                # STEP 14
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
time0 = time1.replace(year=val2)                                        # STEP 15
ACTION: time0 = time1.replace(year=val2) 
val2 = 1 : <type 'int'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time5.replace(tzinfo=zone4)                                     # STEP 16
ACTION: time1 = time5.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(hours=val2)                                       # STEP 17
ACTION: time3 = time7.replace(hours=val2) 
val2 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time1.replace(tzinfo=zone4)                                     # STEP 18
ACTION: time8 = time1.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(seconds=val1)                                     # STEP 19
ACTION: time7 = time8.replace(seconds=val1) 
val1 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time6.replace(hours=val1)                                       # STEP 20
ACTION: time9 = time6.replace(hours=val1) 
val1 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.replace(year=val2)                                        # STEP 21
ACTION: time6 = time9.replace(year=val2) 
val2 = 1 : <type 'int'>
time9 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.replace(hours=val2)                                       # STEP 22
ACTION: time5 = time2.replace(hours=val2) 
val2 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Arizona'                                                    # STEP 23
ACTION: zone2 = 'US/Arizona'  
zone2 = 'Etc/Greenwich' : <type 'str'>
=> zone2 = 'US/Arizona' : <type 'str'>
==================================================
zone1 = 'Etc/Greenwich'                                                 # STEP 24
ACTION: zone1 = 'Etc/Greenwich'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Etc/Greenwich' : <type 'str'>
==================================================
time9 = time3.replace(tzinfo=zone4)                                     # STEP 25
ACTION: time9 = time3.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time3 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T01:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time5.replace(tzinfo=zone1)                                     # STEP 26
ACTION: time8 = time5.replace(tzinfo=zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time5 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time3.replace(tzinfo=zone3)                                     # STEP 27
ACTION: time3 = time3.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time3 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Arizona'                                                    # STEP 28
ACTION: zone4 = 'US/Arizona'  
zone4 = 'Asia/Samarkand' : <type 'str'>
=> zone4 = 'US/Arizona' : <type 'str'>
==================================================
time5 = time4.replace(tzinfo=zone2)                                     # STEP 29
ACTION: time5 = time4.replace(tzinfo=zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time4 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T01:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time0.replace(tzinfo=zone4)                                     # STEP 30
ACTION: time1 = time0.replace(tzinfo=zone4) 
zone4 = 'US/Arizona' : <type 'str'>
time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-01-01T00:00:01-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time0.replace(hours=val1)                                       # STEP 31
ACTION: time0 = time0.replace(hours=val1) 
val1 = 0 : <type 'int'>
time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time6.replace(year=val2)                                        # STEP 32
ACTION: time2 = time6.replace(year=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time0.replace(tzinfo=zone4)                                     # STEP 33
ACTION: time6 = time0.replace(tzinfo=zone4) 
zone4 = 'US/Arizona' : <type 'str'>
time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T00:00:01-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time7.replace(seconds=val2)                                     # STEP 34
ACTION: time4 = time7.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T01:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1970-01-01T00:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time1.replace(seconds=val2)                                     # STEP 35
ACTION: time0 = time1.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time1 = <Arrow [0001-01-01T00:00:01-07:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [0001-01-01T00:00:02-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(tzinfo=zone1)                                     # STEP 36
ACTION: time7 = time2.replace(tzinfo=zone1) 
zone1 = 'Etc/Greenwich' : <type 'str'>
time2 = <Arrow [0001-01-01T00:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.datetime                                                          # STEP 37
ACTION: time8.datetime 
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time9.replace(year=val2)                                        # STEP 38
ACTION: time8 = time9.replace(year=val2) 
val2 = 1 : <type 'int'>
time9 = <Arrow [1970-01-01T01:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T01:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-01-01T01:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(year=val2)                                        # STEP 39
ACTION: time1 = time3.replace(year=val2) 
val2 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [0001-01-01T00:00:01-07:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time7.replace(seconds=val1)                                     # STEP 40
ACTION: time9 = time7.replace(seconds=val1) 
val1 = 0 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T01:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time3.replace(tzinfo=zone4)                                     # STEP 41
ACTION: time3 = time3.replace(tzinfo=zone4) 
zone4 = 'US/Arizona' : <type 'str'>
time3 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T01:00:01-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time1.replace(tzinfo=zone2)                                     # STEP 42
ACTION: time7 = time1.replace(tzinfo=zone2) 
zone2 = 'US/Arizona' : <type 'str'>
time1 = <Arrow [0001-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-01-01T01:00:01-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Singapore'                                                     # STEP 43
ACTION: zone3 = 'Singapore'  
zone3 = 'Etc/Greenwich' : <type 'str'>
=> zone3 = 'Singapore' : <type 'str'>
==================================================
val2 -= 1                                                               # STEP 44
ACTION: val2 -= 1 
val2 = 1 : <type 'int'>
=> val2 = 0 : <type 'int'>
==================================================
time8.timestamp                                                         # STEP 45
ACTION: time8.timestamp 
time8 = <Arrow [0001-01-01T01:00:01+04:28]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1094bedd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327615, in act7373
    self.p_time[8].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1094fff38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 150879, in act3391
    self.p_time[1] = self.p_time[3].replace(hours=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 429, in replace
    current += relativedelta(**relative_kwargs) # TODO: DEPRECATED
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
Original test has 44 steps

SAVING TEST AS failure.13914.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale3 =  u'sk'                                                         # STEP 0
ACTION: locale3 =  u'sk' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'sk' : <type 'unicode'>
==================================================
locale1 =  u'ko'                                                         # STEP 1
ACTION: locale1 =  u'ko' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'ko' : <type 'unicode'>
==================================================
locale2 =  u'hu_hu'                                                      # STEP 2
ACTION: locale2 =  u'hu_hu' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'hu_hu' : <type 'unicode'>
==================================================
locale4 =  u'eo_xx'                                                      # STEP 3
ACTION: locale4 =  u'eo_xx' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'eo_xx' : <type 'unicode'>
==================================================
locale0 =  u'is'                                                         # STEP 4
ACTION: locale0 =  u'is' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'is' : <type 'unicode'>
==================================================
val6 = 0                                                                 # STEP 5
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
zone4 = 'Asia/Samarkand'                                                 # STEP 6
ACTION: zone4 = 'Asia/Samarkand'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Asia/Samarkand' : <type 'str'>
==================================================
time8 = arrow.get(val6)                                                  # STEP 7
ACTION: time8 = arrow.get(val6) 
val6 = 0 : <type 'int'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.now()                                                      # STEP 8
ACTION: time2 = arrow.now() 
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T15:00:26.613718-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.humanize(locale=locale4)                                           # STEP 9
ACTION: time2.humanize(locale=locale4) 
locale4 = u'eo_xx' : <type 'unicode'>
time2 = <Arrow [2017-11-21T15:00:26.613718-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val3 = 0                                                                # STEP 10
ACTION: val3 = 0 
val3 = None : <type 'NoneType'>
=> val3 = 0 : <type 'int'>
==================================================
locale4 =  u'zh_tw'                                                     # STEP 11
ACTION: locale4 =  u'zh_tw' 
locale4 = u'eo_xx' : <type 'unicode'>
=> locale4 = u'zh_tw' : <type 'unicode'>
==================================================
time9 = arrow.get(val3)                                                 # STEP 12
ACTION: time9 = arrow.get(val3) 
val3 = 0 : <type 'int'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(tzinfo=zone4)                                     # STEP 13
ACTION: time1 = time8.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.humanize(locale=locale0)                                          # STEP 14
ACTION: time1.humanize(locale=locale0) 
locale0 = u'is' : <type 'unicode'>
time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time1.replace(hours=val6)                                       # STEP 15
ACTION: time5 = time1.replace(hours=val6) 
val6 = 0 : <type 'int'>
time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(hours=val3)                                       # STEP 16
ACTION: time7 = time8.replace(hours=val3) 
val3 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time2.replace(hours=val3)                                       # STEP 17
ACTION: time2 = time2.replace(hours=val3) 
val3 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T15:00:26.613718-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.get(val6)                                                 # STEP 18
ACTION: time6 = arrow.get(val6) 
val6 = 0 : <type 'int'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val3)                                                 # STEP 19
ACTION: time6.shift(years=val3) 
val3 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(years=val3)                                                 # STEP 20
ACTION: time2.shift(years=val3) 
val3 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T15:00:26.613718-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time9.to(zone4)                                                 # STEP 21
ACTION: time3 = time9.to(zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'sk'                                                        # STEP 22
ACTION: locale0 =  u'sk' 
locale0 = u'is' : <type 'unicode'>
=> locale0 = u'sk' : <type 'unicode'>
==================================================
time6 = time3.replace(hours=val6)                                       # STEP 23
ACTION: time6 = time3.replace(hours=val6) 
val6 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time9.to(zone4)                                                 # STEP 24
ACTION: time2 = time9.to(zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T15:00:26.613718-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time2.replace(tzinfo=zone4)                                     # STEP 25
ACTION: time3 = time2.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time2 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val3 += 1                                                               # STEP 26
ACTION: val3 += 1 
val3 = 0 : <type 'int'>
=> val3 = 1 : <type 'int'>
==================================================
time1 = arrow.get(val3)                                                 # STEP 27
ACTION: time1 = arrow.get(val3) 
val3 = 1 : <type 'int'>
time1 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time5.replace(year=val3)                                        # STEP 28
ACTION: time8 = time5.replace(year=val3) 
val3 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time6.to(zone4)                                                 # STEP 29
ACTION: time9 = time6.to(zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time6 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time9.replace(hours=val6)                                       # STEP 30
ACTION: time2 = time9.replace(hours=val6) 
val6 = 0 : <type 'int'>
time9 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val3 += 1                                                               # STEP 31
ACTION: val3 += 1 
val3 = 1 : <type 'int'>
=> val3 = 2 : <type 'int'>
==================================================
time0 = time6.replace(hours=val6)                                       # STEP 32
ACTION: time0 = time6.replace(hours=val6) 
val6 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Poland'                                                        # STEP 33
ACTION: zone0 = 'Poland'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Poland' : <type 'str'>
==================================================
time5.shift(months=val6)                                                # STEP 34
ACTION: time5.shift(months=val6) 
val6 = 0 : <type 'int'>
time5 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time2.replace(tzinfo=zone4)                                     # STEP 35
ACTION: time6 = time2.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time2 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.replace(year=val3)                                        # STEP 36
ACTION: time4 = time3.replace(year=val3) 
val3 = 2 : <type 'int'>
time3 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0002-01-01T05:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time8.replace(tzinfo=zone4)                                     # STEP 37
ACTION: time3 = time8.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
val6 -= 1                                                               # STEP 38
ACTION: val6 -= 1 
val6 = 0 : <type 'int'>
=> val6 = -1 : <type 'int'>
==================================================
time2 = time8.replace(tzinfo=zone4)                                     # STEP 39
ACTION: time2 = time8.replace(tzinfo=zone4) 
zone4 = 'Asia/Samarkand' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time4.to(zone0)                                                 # STEP 40
ACTION: time5 = time4.to(zone0) 
zone0 = 'Poland' : <type 'str'>
time4 = <Arrow [0002-01-01T05:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T00:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0002-01-01T01:56:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.humanize(locale=locale0)                                          # STEP 41
ACTION: time1.humanize(locale=locale0) 
locale0 = u'sk' : <type 'unicode'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'sk'                                                        # STEP 42
ACTION: locale0 =  u'sk' 
locale0 = u'sk' : <type 'unicode'>
==================================================
time1 = time3.replace(hours=val6)                                       # STEP 43
ACTION: time1 = time3.replace(hours=val6) 
val6 = -1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+04:28]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1094fbf38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 150879, in act3391
    self.p_time[1] = self.p_time[3].replace(hours=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 429, in replace
    current += relativedelta(**relative_kwargs) # TODO: DEPRECATED
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 62
STOPPING TESTING DUE TO TIMEOUT
22.3933649289 PERCENT COVERED
60.2134921551 TOTAL RUNTIME
452 EXECUTED
44972 TOTAL TEST OPERATIONS
29.8362884521 TIME SPENT EXECUTING TEST OPERATIONS
27.7004144192 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0292747020721 TIME SPENT CHECKING PROPERTIES
29.8655631542 TOTAL TIME SPENT RUNNING SUT
0.260512113571 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
locale3 =  u'fa'                                                         # STEP 0
locale4 =  u'sv_se'                                                      # STEP 1
locale1 =  u'de_de'                                                      # STEP 2
locale2 =  u'ko'                                                         # STEP 3
locale0 =  u'ru_ru'                                                      # STEP 4
zone0 = 'Singapore'                                                      # STEP 5
val5 = 0                                                                 # STEP 6
val5 += 1                                                                # STEP 7
zone2 = 'Africa/Cairo'                                                   # STEP 8
time2 = arrow.get(val5)                                                  # STEP 9
time7 = time2.replace(year=val5)                                        # STEP 10
time3 = time2.replace(year=val5)                                        # STEP 11
time5 = time7.replace(month=val5)                                       # STEP 12
time7.year                                                              # STEP 13
time5.format()                                                          # STEP 14
time7 = time3.replace(month=val5)                                       # STEP 15
time6 = time5.to(zone2)                                                 # STEP 16
zone3 = 'US/Mountain'                                                   # STEP 17
time3 = time3.to(zone2)                                                 # STEP 18
time8 = time7.to(zone3)                                                 # STEP 19
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1092ffb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 39301, in act1043
    self.p_time[8] = self.p_time[7].to(self.p_zone[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE 1
zone4 = 'Asia/Samarkand'                                                 # STEP 0
val2 = 0                                                                 # STEP 1
time7 = arrow.get(val2)                                                  # STEP 2
time3 = time7.replace(tzinfo=zone4)                                      # STEP 3
zone3 = 'Etc/Greenwich'                                                  # STEP 4
zone2 = 'Etc/Greenwich'                                                  # STEP 5
time2 = time3.replace(hours=val2)                                        # STEP 6
val2 += 1                                                                # STEP 7
time6 = time3.replace(seconds=val2)                                      # STEP 8
time7.format()                                                           # STEP 9
time5 = time7.replace(tzinfo=zone2)                                     # STEP 10
time4 = time3.replace(hours=val2)                                       # STEP 11
time1 = time5.replace(seconds=val2)                                     # STEP 12
time7 = time1.replace(tzinfo=zone3)                                     # STEP 13
val1 = 0                                                                # STEP 14
time0 = time1.replace(year=val2)                                        # STEP 15
time1 = time5.replace(tzinfo=zone4)                                     # STEP 16
time3 = time7.replace(hours=val2)                                       # STEP 17
time8 = time1.replace(tzinfo=zone4)                                     # STEP 18
time7 = time8.replace(seconds=val1)                                     # STEP 19
time9 = time6.replace(hours=val1)                                       # STEP 20
time6 = time9.replace(year=val2)                                        # STEP 21
time5 = time2.replace(hours=val2)                                       # STEP 22
zone2 = 'US/Arizona'                                                    # STEP 23
zone1 = 'Etc/Greenwich'                                                 # STEP 24
time9 = time3.replace(tzinfo=zone4)                                     # STEP 25
time8 = time5.replace(tzinfo=zone1)                                     # STEP 26
time3 = time3.replace(tzinfo=zone3)                                     # STEP 27
zone4 = 'US/Arizona'                                                    # STEP 28
time5 = time4.replace(tzinfo=zone2)                                     # STEP 29
time1 = time0.replace(tzinfo=zone4)                                     # STEP 30
time0 = time0.replace(hours=val1)                                       # STEP 31
time2 = time6.replace(year=val2)                                        # STEP 32
time6 = time0.replace(tzinfo=zone4)                                     # STEP 33
time4 = time7.replace(seconds=val2)                                     # STEP 34
time0 = time1.replace(seconds=val2)                                     # STEP 35
time7 = time2.replace(tzinfo=zone1)                                     # STEP 36
time8.datetime                                                          # STEP 37
time8 = time9.replace(year=val2)                                        # STEP 38
time1 = time3.replace(year=val2)                                        # STEP 39
time9 = time7.replace(seconds=val1)                                     # STEP 40
time3 = time3.replace(tzinfo=zone4)                                     # STEP 41
time7 = time1.replace(tzinfo=zone2)                                     # STEP 42
zone3 = 'Singapore'                                                     # STEP 43
val2 -= 1                                                               # STEP 44
time8.timestamp                                                         # STEP 45
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1094bedd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327615, in act7373
    self.p_time[8].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
FAILURE 2
locale3 =  u'sk'                                                         # STEP 0
locale1 =  u'ko'                                                         # STEP 1
locale2 =  u'hu_hu'                                                      # STEP 2
locale4 =  u'eo_xx'                                                      # STEP 3
locale0 =  u'is'                                                         # STEP 4
val6 = 0                                                                 # STEP 5
zone4 = 'Asia/Samarkand'                                                 # STEP 6
time8 = arrow.get(val6)                                                  # STEP 7
time2 = arrow.now()                                                      # STEP 8
time2.humanize(locale=locale4)                                           # STEP 9
val3 = 0                                                                # STEP 10
locale4 =  u'zh_tw'                                                     # STEP 11
time9 = arrow.get(val3)                                                 # STEP 12
time1 = time8.replace(tzinfo=zone4)                                     # STEP 13
time1.humanize(locale=locale0)                                          # STEP 14
time5 = time1.replace(hours=val6)                                       # STEP 15
time7 = time8.replace(hours=val3)                                       # STEP 16
time2 = time2.replace(hours=val3)                                       # STEP 17
time6 = arrow.get(val6)                                                 # STEP 18
time6.shift(years=val3)                                                 # STEP 19
time2.shift(years=val3)                                                 # STEP 20
time3 = time9.to(zone4)                                                 # STEP 21
locale0 =  u'sk'                                                        # STEP 22
time6 = time3.replace(hours=val6)                                       # STEP 23
time2 = time9.to(zone4)                                                 # STEP 24
time3 = time2.replace(tzinfo=zone4)                                     # STEP 25
val3 += 1                                                               # STEP 26
time1 = arrow.get(val3)                                                 # STEP 27
time8 = time5.replace(year=val3)                                        # STEP 28
time9 = time6.to(zone4)                                                 # STEP 29
time2 = time9.replace(hours=val6)                                       # STEP 30
val3 += 1                                                               # STEP 31
time0 = time6.replace(hours=val6)                                       # STEP 32
zone0 = 'Poland'                                                        # STEP 33
time5.shift(months=val6)                                                # STEP 34
time6 = time2.replace(tzinfo=zone4)                                     # STEP 35
time4 = time3.replace(year=val3)                                        # STEP 36
time3 = time8.replace(tzinfo=zone4)                                     # STEP 37
val6 -= 1                                                               # STEP 38
time2 = time8.replace(tzinfo=zone4)                                     # STEP 39
time5 = time4.to(zone0)                                                 # STEP 40
time1.humanize(locale=locale0)                                          # STEP 41
locale0 =  u'sk'                                                        # STEP 42
time1 = time3.replace(hours=val6)                                       # STEP 43
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x1094fbf38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 150879, in act3391
    self.p_time[1] = self.p_time[3].replace(hours=self.p_val[6])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 429, in replace
    current += relativedelta(**relative_kwargs) # TODO: DEPRECATED
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
345 BRANCHES COVERED
257 STATEMENTS COVERED
