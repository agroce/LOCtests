Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13577.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #43 STEP #48 (0:00:30.074261) Tue Nov 21 13:15:00 2017 [ 220 stmts 285 branches ] (no cov+ for 12 tests) 4248 TOTAL ACTIONS (141.250353818/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a2049e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
Original test has 60 steps

SAVING TEST AS failure.13577.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone2 = 'US/Alaska'                                                      # STEP 0
ACTION: zone2 = 'US/Alaska'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Alaska' : <type 'str'>
==================================================
zone3 = 'Poland'                                                         # STEP 1
ACTION: zone3 = 'Poland'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Poland' : <type 'str'>
==================================================
zone0 = 'US/Mountain'                                                    # STEP 2
ACTION: zone0 = 'US/Mountain'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Mountain' : <type 'str'>
==================================================
zone1 = 'Europe/Rome'                                                    # STEP 3
ACTION: zone1 = 'Europe/Rome'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Europe/Rome' : <type 'str'>
==================================================
val9 = 0                                                                 # STEP 4
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
zone4 = 'Etc/Greenwich'                                                  # STEP 5
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
val2 = 0                                                                 # STEP 6
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
time8 = arrow.get(val9)                                                  # STEP 7
ACTION: time8 = arrow.get(val9) 
val9 = 0 : <type 'int'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(hours=val2)                                                  # STEP 8
ACTION: time8.shift(hours=val2) 
val2 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time8.to(zone3)                                                  # STEP 9
ACTION: time6 = time8.to(zone3) 
zone3 = 'Poland' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.format()                                                          # STEP 10
ACTION: time6.format() 
time6 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Etc/Greenwich'                                                 # STEP 11
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = 'Poland' : <type 'str'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
time3 = arrow.get(val9)                                                 # STEP 12
ACTION: time3 = arrow.get(val9) 
val9 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 += 1                                                               # STEP 13
ACTION: val2 += 1 
val2 = 0 : <type 'int'>
=> val2 = 1 : <type 'int'>
==================================================
time1 = time8.replace(minutes=val2)                                     # STEP 14
ACTION: time1 = time8.replace(minutes=val2) 
val2 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(minutes=val2)                                               # STEP 15
ACTION: time1.shift(minutes=val2) 
val2 = 1 : <type 'int'>
time1 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(minutes=val2)                                               # STEP 16
ACTION: time6.shift(minutes=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.replace(year=val2)                                        # STEP 17
ACTION: time7 = time6.replace(year=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time6.replace(month=val2)                                       # STEP 18
ACTION: time4 = time6.replace(month=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(weeks=val9)                                                 # STEP 19
ACTION: time8.shift(weeks=val9) 
val9 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(months=val2)                                                # STEP 20
ACTION: time8.shift(months=val2) 
val2 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time3.replace(seconds=val2)                                     # STEP 21
ACTION: time8 = time3.replace(seconds=val2) 
val2 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time8.replace(tzinfo=zone1)                                     # STEP 22
ACTION: time0 = time8.replace(tzinfo=zone1) 
zone1 = 'Europe/Rome' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(years=val9)                                                 # STEP 23
ACTION: time8.shift(years=val9) 
val9 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Turkey'                                                        # STEP 24
ACTION: zone1 = 'Turkey'  
zone1 = 'Europe/Rome' : <type 'str'>
=> zone1 = 'Turkey' : <type 'str'>
==================================================
time6 = time6.replace(year=val2)                                        # STEP 25
ACTION: time6 = time6.replace(year=val2) 
val2 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.get(val9)                                                 # STEP 26
ACTION: time3 = arrow.get(val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(month=val2)                                       # STEP 27
ACTION: time1 = time8.replace(month=val2) 
val2 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.replace(hours=val9)                                       # STEP 28
ACTION: time5 = time7.replace(hours=val9) 
val9 = 0 : <type 'int'>
time7 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time3.replace(minutes=val2)                                     # STEP 29
ACTION: time9 = time3.replace(minutes=val2) 
val2 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = arrow.now()                                                     # STEP 30
ACTION: time2 = arrow.now() 
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T13:15:11.467042-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.get(val9)                                                 # STEP 31
ACTION: time8 = arrow.get(val9) 
val9 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time3.replace(tzinfo=zone1)                                     # STEP 32
ACTION: time3 = time3.replace(tzinfo=zone1) 
zone1 = 'Turkey' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(seconds=val9)                                     # STEP 33
ACTION: time7 = time2.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time2 = <Arrow [2017-11-21T13:15:11.467042-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T13:15:11.467042-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time0.replace(seconds=val9)                                     # STEP 34
ACTION: time2 = time0.replace(seconds=val9) 
val9 = 0 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T13:15:11.467042-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = arrow.now(zone0)                                                # STEP 35
ACTION: time0 = arrow.now(zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time0 = <Arrow [1970-01-01T00:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T14:15:11.472007-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(seconds=val9)                                               # STEP 36
ACTION: time0.shift(seconds=val9) 
val9 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T14:15:11.472007-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Alaska'                                                     # STEP 37
ACTION: zone1 = 'US/Alaska'  
zone1 = 'Turkey' : <type 'str'>
=> zone1 = 'US/Alaska' : <type 'str'>
==================================================
zone0 = 'Etc/Greenwich'                                                 # STEP 38
ACTION: zone0 = 'Etc/Greenwich'  
zone0 = 'US/Mountain' : <type 'str'>
=> zone0 = 'Etc/Greenwich' : <type 'str'>
==================================================
time0 = arrow.now()                                                     # STEP 39
ACTION: time0 = arrow.now() 
time0 = <Arrow [2017-11-21T14:15:11.472007-07:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T13:15:11.474608-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 -= 1                                                               # STEP 40
ACTION: val2 -= 1 
val2 = 1 : <type 'int'>
=> val2 = 0 : <type 'int'>
==================================================
time4.shift(seconds=val2)                                               # STEP 41
ACTION: time4.shift(seconds=val2) 
val2 = 0 : <type 'int'>
time4 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val2)                                                 # STEP 42
ACTION: time6.shift(years=val2) 
val2 = 0 : <type 'int'>
time6 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(seconds=val2)                                               # STEP 43
ACTION: time1.shift(seconds=val2) 
val2 = 0 : <type 'int'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale2 =  u'mr'                                                        # STEP 44
ACTION: locale2 =  u'mr' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'mr' : <type 'unicode'>
==================================================
time4 = arrow.now(zone1)                                                # STEP 45
ACTION: time4 = arrow.now(zone1) 
zone1 = 'US/Alaska' : <type 'str'>
time4 = <Arrow [1970-01-01T01:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T12:15:11.479000-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Mountain'                                                   # STEP 46
ACTION: zone1 = 'US/Mountain'  
zone1 = 'US/Alaska' : <type 'str'>
=> zone1 = 'US/Mountain' : <type 'str'>
==================================================
time6 = time8.replace(tzinfo=zone1)                                     # STEP 47
ACTION: time6 = time8.replace(tzinfo=zone1) 
zone1 = 'US/Mountain' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(seconds=val9)                                               # STEP 48
ACTION: time2.shift(seconds=val9) 
val9 = 0 : <type 'int'>
time2 = <Arrow [1970-01-01T00:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.now(zone2)                                                # STEP 49
ACTION: time8 = arrow.now(zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T12:15:11.482844-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(hours=val9)                                       # STEP 50
ACTION: time1 = time8.replace(hours=val9) 
val9 = 0 : <type 'int'>
time8 = <Arrow [2017-11-21T12:15:11.482844-09:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-21T12:15:11.482844-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(months=val9)                                                # STEP 51
ACTION: time6.shift(months=val9) 
val9 = 0 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time0.replace(tzinfo=zone0)                                     # STEP 52
ACTION: time2 = time0.replace(tzinfo=zone0) 
zone0 = 'Etc/Greenwich' : <type 'str'>
time0 = <Arrow [2017-11-21T13:15:11.474608-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T13:15:11.474608+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time2.replace(tzinfo=zone4)                                     # STEP 53
ACTION: time0 = time2.replace(tzinfo=zone4) 
zone4 = 'Etc/Greenwich' : <type 'str'>
time2 = <Arrow [2017-11-21T13:15:11.474608+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [2017-11-21T13:15:11.474608-08:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T13:15:11.474608+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now(zone2)                                                # STEP 54
ACTION: time6 = arrow.now(zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:00-07:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T12:15:11.487740-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time3.replace(minutes=val9)                                     # STEP 55
ACTION: time2 = time3.replace(minutes=val9) 
val9 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T13:15:11.474608+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Singapore'                                                     # STEP 56
ACTION: zone0 = 'Singapore'  
zone0 = 'Etc/Greenwich' : <type 'str'>
=> zone0 = 'Singapore' : <type 'str'>
==================================================
time3.shift(minutes=val2)                                               # STEP 57
ACTION: time3.shift(minutes=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'is_is'                                                     # STEP 58
ACTION: locale3 =  u'is_is' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'is_is' : <type 'unicode'>
==================================================
time5.timestamp                                                         # STEP 59
ACTION: time5.timestamp 
time5 = <Arrow [0001-01-01T01:00:00+01:24]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a2046c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 42
STOPPING TESTING DUE TO TIMEOUT
20.7938388626 PERCENT COVERED
60.2863240242 TOTAL RUNTIME
86 EXECUTED
8502 TOTAL TEST OPERATIONS
7.64847397804 TIME SPENT EXECUTING TEST OPERATIONS
52.0387229919 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00812721252441 TIME SPENT CHECKING PROPERTIES
7.65660119057 TOTAL TIME SPENT RUNNING SUT
0.140531539917 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
zone2 = 'US/Alaska'                                                      # STEP 0
zone3 = 'Poland'                                                         # STEP 1
zone0 = 'US/Mountain'                                                    # STEP 2
zone1 = 'Europe/Rome'                                                    # STEP 3
val9 = 0                                                                 # STEP 4
zone4 = 'Etc/Greenwich'                                                  # STEP 5
val2 = 0                                                                 # STEP 6
time8 = arrow.get(val9)                                                  # STEP 7
time8.shift(hours=val2)                                                  # STEP 8
time6 = time8.to(zone3)                                                  # STEP 9
time6.format()                                                          # STEP 10
zone3 = 'Etc/Greenwich'                                                 # STEP 11
time3 = arrow.get(val9)                                                 # STEP 12
val2 += 1                                                               # STEP 13
time1 = time8.replace(minutes=val2)                                     # STEP 14
time1.shift(minutes=val2)                                               # STEP 15
time6.shift(minutes=val2)                                               # STEP 16
time7 = time6.replace(year=val2)                                        # STEP 17
time4 = time6.replace(month=val2)                                       # STEP 18
time8.shift(weeks=val9)                                                 # STEP 19
time8.shift(months=val2)                                                # STEP 20
time8 = time3.replace(seconds=val2)                                     # STEP 21
time0 = time8.replace(tzinfo=zone1)                                     # STEP 22
time8.shift(years=val9)                                                 # STEP 23
zone1 = 'Turkey'                                                        # STEP 24
time6 = time6.replace(year=val2)                                        # STEP 25
time3 = arrow.get(val9)                                                 # STEP 26
time1 = time8.replace(month=val2)                                       # STEP 27
time5 = time7.replace(hours=val9)                                       # STEP 28
time9 = time3.replace(minutes=val2)                                     # STEP 29
time2 = arrow.now()                                                     # STEP 30
time8 = arrow.get(val9)                                                 # STEP 31
time3 = time3.replace(tzinfo=zone1)                                     # STEP 32
time7 = time2.replace(seconds=val9)                                     # STEP 33
time2 = time0.replace(seconds=val9)                                     # STEP 34
time0 = arrow.now(zone0)                                                # STEP 35
time0.shift(seconds=val9)                                               # STEP 36
zone1 = 'US/Alaska'                                                     # STEP 37
zone0 = 'Etc/Greenwich'                                                 # STEP 38
time0 = arrow.now()                                                     # STEP 39
val2 -= 1                                                               # STEP 40
time4.shift(seconds=val2)                                               # STEP 41
time6.shift(years=val2)                                                 # STEP 42
time1.shift(seconds=val2)                                               # STEP 43
locale2 =  u'mr'                                                        # STEP 44
time4 = arrow.now(zone1)                                                # STEP 45
zone1 = 'US/Mountain'                                                   # STEP 46
time6 = time8.replace(tzinfo=zone1)                                     # STEP 47
time2.shift(seconds=val9)                                               # STEP 48
time8 = arrow.now(zone2)                                                # STEP 49
time1 = time8.replace(hours=val9)                                       # STEP 50
time6.shift(months=val9)                                                # STEP 51
time2 = time0.replace(tzinfo=zone0)                                     # STEP 52
time0 = time2.replace(tzinfo=zone4)                                     # STEP 53
time6 = arrow.now(zone2)                                                # STEP 54
time2 = time3.replace(minutes=val9)                                     # STEP 55
zone0 = 'Singapore'                                                     # STEP 56
time3.shift(minutes=val2)                                               # STEP 57
locale3 =  u'is_is'                                                     # STEP 58
time5.timestamp                                                         # STEP 59
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a2046c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 327519, in act7370
    self.p_time[5].timestamp
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 351, in timestamp
    return calendar.timegm(self._datetime.utctimetuple())
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 614, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
315 BRANCHES COVERED
240 STATEMENTS COVERED
