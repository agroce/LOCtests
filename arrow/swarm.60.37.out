Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14449.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa36830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 35283, in act955
    self.p_time[7] = self.p_time[0].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 23 steps

SAVING TEST AS failure.14449.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale3 =  u'fi_fi'                                                      # STEP 0
ACTION: locale3 =  u'fi_fi' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'fi_fi' : <type 'unicode'>
==================================================
locale4 =  u'en_za'                                                      # STEP 1
ACTION: locale4 =  u'en_za' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'en_za' : <type 'unicode'>
==================================================
locale2 =  u'tr'                                                         # STEP 2
ACTION: locale2 =  u'tr' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'tr' : <type 'unicode'>
==================================================
locale1 =  u'de'                                                         # STEP 3
ACTION: locale1 =  u'de' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'de' : <type 'unicode'>
==================================================
zone0 = 'US/Alaska'                                                      # STEP 4
ACTION: zone0 = 'US/Alaska'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Alaska' : <type 'str'>
==================================================
locale0 =  u'mr'                                                         # STEP 5
ACTION: locale0 =  u'mr' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'mr' : <type 'unicode'>
==================================================
zone1 = 'Turkey'                                                         # STEP 6
ACTION: zone1 = 'Turkey'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Turkey' : <type 'str'>
==================================================
val0 = 0                                                                 # STEP 7
ACTION: val0 = 0 
val0 = None : <type 'NoneType'>
=> val0 = 0 : <type 'int'>
==================================================
zone4 = 'Europe/Rome'                                                    # STEP 8
ACTION: zone4 = 'Europe/Rome'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Europe/Rome' : <type 'str'>
==================================================
val5 = 0                                                                 # STEP 9
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
zone2 = 'US/Alaska'                                                     # STEP 10
ACTION: zone2 = 'US/Alaska'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Alaska' : <type 'str'>
==================================================
val5 -= 1                                                               # STEP 11
ACTION: val5 -= 1 
val5 = 0 : <type 'int'>
=> val5 = -1 : <type 'int'>
==================================================
time3 = arrow.get(val0)                                                 # STEP 12
ACTION: time3 = arrow.get(val0) 
val0 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val5 += 1                                                               # STEP 13
ACTION: val5 += 1 
val5 = -1 : <type 'int'>
=> val5 = 0 : <type 'int'>
==================================================
val5 += 1                                                               # STEP 14
ACTION: val5 += 1 
val5 = 0 : <type 'int'>
=> val5 = 1 : <type 'int'>
==================================================
time4 = arrow.get(val5)                                                 # STEP 15
ACTION: time4 = arrow.get(val5) 
val5 = 1 : <type 'int'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time4.replace(minutes=val0)                                     # STEP 16
ACTION: time2 = time4.replace(minutes=val0) 
val0 = 0 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time4.replace(year=val5)                                        # STEP 17
ACTION: time5 = time4.replace(year=val5) 
val5 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.humanize(locale=locale3)                                          # STEP 18
ACTION: time2.humanize(locale=locale3) 
locale3 = u'fi_fi' : <type 'unicode'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time5.to(zone4)                                                 # STEP 19
ACTION: time0 = time5.to(zone4) 
zone4 = 'Europe/Rome' : <type 'str'>
time5 = <Arrow [0001-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-01-01T01:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time3.replace(year=val5)                                        # STEP 20
ACTION: time2 = time3.replace(year=val5) 
val5 = 1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'ca_ad'                                                     # STEP 21
ACTION: locale3 =  u'ca_ad' 
locale3 = u'fi_fi' : <type 'unicode'>
=> locale3 = u'ca_ad' : <type 'unicode'>
==================================================
time7 = time0.to(zone0)                                                 # STEP 22
ACTION: time7 = time0.to(zone0) 
zone0 = 'US/Alaska' : <type 'str'>
time0 = <Arrow [0001-01-01T01:00:01+01:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa36a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 35283, in act955
    self.p_time[7] = self.p_time[0].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10ab7ee60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 41663, in act1095
    self.p_time[9] = self.p_time[8].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
Original test has 26 steps

SAVING TEST AS failure.14449.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale1 =  u'en_au'                                                      # STEP 0
ACTION: locale1 =  u'en_au' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'en_au' : <type 'unicode'>
==================================================
locale0 =  u'zh_tw'                                                      # STEP 1
ACTION: locale0 =  u'zh_tw' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'zh_tw' : <type 'unicode'>
==================================================
locale3 =  u'mr'                                                         # STEP 2
ACTION: locale3 =  u'mr' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'mr' : <type 'unicode'>
==================================================
locale4 =  u'vi'                                                         # STEP 3
ACTION: locale4 =  u'vi' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'vi' : <type 'unicode'>
==================================================
zone3 = 'Europe/Rome'                                                    # STEP 4
ACTION: zone3 = 'Europe/Rome'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
zone0 = 'Turkey'                                                         # STEP 5
ACTION: zone0 = 'Turkey'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Turkey' : <type 'str'>
==================================================
locale2 =  u'it'                                                         # STEP 6
ACTION: locale2 =  u'it' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'it' : <type 'unicode'>
==================================================
zone1 = 'Asia/Samarkand'                                                 # STEP 7
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
zone2 = 'Turkey'                                                         # STEP 8
ACTION: zone2 = 'Turkey'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Turkey' : <type 'str'>
==================================================
val7 = 0                                                                 # STEP 9
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
time2 = arrow.get(val7)                                                 # STEP 10
ACTION: time2 = arrow.get(val7) 
val7 = 0 : <type 'int'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(tzinfo=zone2)                                     # STEP 11
ACTION: time7 = time2.replace(tzinfo=zone2) 
zone2 = 'Turkey' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time7.to(zone0)                                                 # STEP 12
ACTION: time4 = time7.to(zone0) 
zone0 = 'Turkey' : <type 'str'>
time7 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(hours=val7)                                       # STEP 13
ACTION: time8 = time7.replace(hours=val7) 
val7 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time8.replace(seconds=val7)                                     # STEP 14
ACTION: time6 = time8.replace(seconds=val7) 
val7 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time6.to(zone2)                                                 # STEP 15
ACTION: time5 = time6.to(zone2) 
zone2 = 'Turkey' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time2.replace(tzinfo=zone3)                                     # STEP 16
ACTION: time2 = time2.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time2 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [1970-01-01T00:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time5.replace(seconds=val7)                                     # STEP 17
ACTION: time6 = time5.replace(seconds=val7) 
val7 = 0 : <type 'int'>
time5 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 += 1                                                               # STEP 18
ACTION: val7 += 1 
val7 = 0 : <type 'int'>
=> val7 = 1 : <type 'int'>
==================================================
time0 = time5.replace(seconds=val7)                                     # STEP 19
ACTION: time0 = time5.replace(seconds=val7) 
val7 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:01+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time8.replace(year=val7)                                        # STEP 20
ACTION: time8 = time8.replace(year=val7) 
val7 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-01-01T00:00:00+01:57]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(hours=val7)                                                 # STEP 21
ACTION: time4.shift(hours=val7) 
val7 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Australia/Brisbane'                                            # STEP 22
ACTION: zone0 = 'Australia/Brisbane'  
zone0 = 'Turkey' : <type 'str'>
=> zone0 = 'Australia/Brisbane' : <type 'str'>
==================================================
time5 = time7.to(zone3)                                                 # STEP 23
ACTION: time5 = time7.to(zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time7 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T00:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1969-12-31T23:00:00+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time0.to(zone1)                                                 # STEP 24
ACTION: time1 = time0.to(zone1) 
zone1 = 'Asia/Samarkand' : <type 'str'>
time0 = <Arrow [1970-01-01T00:00:01+02:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T03:00:01+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.to(zone0)                                                 # STEP 25
ACTION: time9 = time8.to(zone0) 
zone0 = 'Australia/Brisbane' : <type 'str'>
time8 = <Arrow [0001-01-01T00:00:00+01:57]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10ab89c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 41663, in act1095
    self.p_time[9] = self.p_time[8].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #218 STEP #73 (0:00:30.000412) Tue Nov 21 16:25:28 2017 [ 251 stmts 333 branches ] (no cov+ for 57 tests) 21622 TOTAL ACTIONS (720.723435703/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
22.1563981043 PERCENT COVERED
60.2121040821 TOTAL RUNTIME
442 EXECUTED
43949 TOTAL TEST OPERATIONS
29.3655495644 TIME SPENT EXECUTING TEST OPERATIONS
28.2745676041 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0279388427734 TIME SPENT CHECKING PROPERTIES
29.3934884071 TOTAL TIME SPENT RUNNING SUT
0.25817155838 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
locale3 =  u'fi_fi'                                                      # STEP 0
locale4 =  u'en_za'                                                      # STEP 1
locale2 =  u'tr'                                                         # STEP 2
locale1 =  u'de'                                                         # STEP 3
zone0 = 'US/Alaska'                                                      # STEP 4
locale0 =  u'mr'                                                         # STEP 5
zone1 = 'Turkey'                                                         # STEP 6
val0 = 0                                                                 # STEP 7
zone4 = 'Europe/Rome'                                                    # STEP 8
val5 = 0                                                                 # STEP 9
zone2 = 'US/Alaska'                                                     # STEP 10
val5 -= 1                                                               # STEP 11
time3 = arrow.get(val0)                                                 # STEP 12
val5 += 1                                                               # STEP 13
val5 += 1                                                               # STEP 14
time4 = arrow.get(val5)                                                 # STEP 15
time2 = time4.replace(minutes=val0)                                     # STEP 16
time5 = time4.replace(year=val5)                                        # STEP 17
time2.humanize(locale=locale3)                                          # STEP 18
time0 = time5.to(zone4)                                                 # STEP 19
time2 = time3.replace(year=val5)                                        # STEP 20
locale3 =  u'ca_ad'                                                     # STEP 21
time7 = time0.to(zone0)                                                 # STEP 22
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa36a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 35283, in act955
    self.p_time[7] = self.p_time[0].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE 1
locale1 =  u'en_au'                                                      # STEP 0
locale0 =  u'zh_tw'                                                      # STEP 1
locale3 =  u'mr'                                                         # STEP 2
locale4 =  u'vi'                                                         # STEP 3
zone3 = 'Europe/Rome'                                                    # STEP 4
zone0 = 'Turkey'                                                         # STEP 5
locale2 =  u'it'                                                         # STEP 6
zone1 = 'Asia/Samarkand'                                                 # STEP 7
zone2 = 'Turkey'                                                         # STEP 8
val7 = 0                                                                 # STEP 9
time2 = arrow.get(val7)                                                 # STEP 10
time7 = time2.replace(tzinfo=zone2)                                     # STEP 11
time4 = time7.to(zone0)                                                 # STEP 12
time8 = time7.replace(hours=val7)                                       # STEP 13
time6 = time8.replace(seconds=val7)                                     # STEP 14
time5 = time6.to(zone2)                                                 # STEP 15
time2 = time2.replace(tzinfo=zone3)                                     # STEP 16
time6 = time5.replace(seconds=val7)                                     # STEP 17
val7 += 1                                                               # STEP 18
time0 = time5.replace(seconds=val7)                                     # STEP 19
time8 = time8.replace(year=val7)                                        # STEP 20
time4.shift(hours=val7)                                                 # STEP 21
zone0 = 'Australia/Brisbane'                                            # STEP 22
time5 = time7.to(zone3)                                                 # STEP 23
time1 = time0.to(zone1)                                                 # STEP 24
time9 = time8.to(zone0)                                                 # STEP 25
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10ab89c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 41663, in act1095
    self.p_time[9] = self.p_time[8].to(self.p_zone[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
340 BRANCHES COVERED
255 STATEMENTS COVERED
