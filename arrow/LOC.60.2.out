Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13362.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a0b0f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304733, in act6783
    self.p_time[2].shift(years=self.p_val[8])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 77 steps

SAVING TEST AS failure.13362.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone2 = 'Africa/Cairo'                                                   # STEP 0
ACTION: zone2 = 'Africa/Cairo'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Africa/Cairo' : <type 'str'>
==================================================
val2 = 0                                                                 # STEP 1
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
val5 = 0                                                                 # STEP 2
ACTION: val5 = 0 
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
zone3 = 'US/Alaska'                                                      # STEP 3
ACTION: zone3 = 'US/Alaska'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Alaska' : <type 'str'>
==================================================
zone0 = 'Asia/Samarkand'                                                 # STEP 4
ACTION: zone0 = 'Asia/Samarkand'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Asia/Samarkand' : <type 'str'>
==================================================
zone1 = 'Poland'                                                         # STEP 5
ACTION: zone1 = 'Poland'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Poland' : <type 'str'>
==================================================
locale2 =  u'sk'                                                         # STEP 6
ACTION: locale2 =  u'sk' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'sk' : <type 'unicode'>
==================================================
val2 += 1                                                                # STEP 7
ACTION: val2 += 1 
val2 = 0 : <type 'int'>
=> val2 = 1 : <type 'int'>
==================================================
zone4 = 'US/Pacific'                                                     # STEP 8
ACTION: zone4 = 'US/Pacific'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Pacific' : <type 'str'>
==================================================
locale0 =  u'it'                                                         # STEP 9
ACTION: locale0 =  u'it' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'it' : <type 'unicode'>
==================================================
val8 = 0                                                                # STEP 10
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
val5 += 1                                                               # STEP 11
ACTION: val5 += 1 
val5 = 0 : <type 'int'>
=> val5 = 1 : <type 'int'>
==================================================
time4 = arrow.get(val8)                                                 # STEP 12
ACTION: time4 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 -= 1                                                               # STEP 13
ACTION: val8 -= 1 
val8 = 0 : <type 'int'>
=> val8 = -1 : <type 'int'>
==================================================
time7 = arrow.now(zone3)                                                # STEP 14
ACTION: time7 = arrow.now(zone3) 
zone3 = 'US/Alaska' : <type 'str'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T11:50:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time7.to(zone1)                                                 # STEP 15
ACTION: time1 = time7.to(zone1) 
zone1 = 'Poland' : <type 'str'>
time7 = <Arrow [2017-11-21T11:50:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-11-21T21:50:13.494405+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = arrow.now()                                                     # STEP 16
ACTION: time5 = arrow.now() 
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T12:50:13.496486-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.now(zone3)                                                # STEP 17
ACTION: time8 = arrow.now(zone3) 
zone3 = 'US/Alaska' : <type 'str'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T11:50:13.497662-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(seconds=val8)                                     # STEP 18
ACTION: time7 = time8.replace(seconds=val8) 
val8 = -1 : <type 'int'>
time8 = <Arrow [2017-11-21T11:50:13.497662-09:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T11:50:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T11:50:12.497662-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time1.replace(tzinfo=zone0)                                     # STEP 19
ACTION: time8 = time1.replace(tzinfo=zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time1 = <Arrow [2017-11-21T21:50:13.494405+01:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T11:50:13.497662-09:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T21:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 += 1                                                               # STEP 20
ACTION: val2 += 1 
val2 = 1 : <type 'int'>
=> val2 = 2 : <type 'int'>
==================================================
time1 = time1.to(zone0)                                                 # STEP 21
ACTION: time1 = time1.to(zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time1 = <Arrow [2017-11-21T21:50:13.494405+01:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T01:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(seconds=val5)                                               # STEP 22
ACTION: time1.shift(seconds=val5) 
val5 = 1 : <type 'int'>
time1 = <Arrow [2017-11-22T01:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Europe/Rome'                                                   # STEP 23
ACTION: zone3 = 'Europe/Rome'  
zone3 = 'US/Alaska' : <type 'str'>
=> zone3 = 'Europe/Rome' : <type 'str'>
==================================================
zone1 = 'Asia/Samarkand'                                                # STEP 24
ACTION: zone1 = 'Asia/Samarkand'  
zone1 = 'Poland' : <type 'str'>
=> zone1 = 'Asia/Samarkand' : <type 'str'>
==================================================
time1 = arrow.get(val8)                                                 # STEP 25
ACTION: time1 = arrow.get(val8) 
val8 = -1 : <type 'int'>
time1 = <Arrow [2017-11-22T01:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(years=val8)                                                 # STEP 26
ACTION: time5.shift(years=val8) 
val8 = -1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:50:13.496486-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.now(zone0)                                                # STEP 27
ACTION: time3 = arrow.now(zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-22T01:50:13.506714+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(hours=val8)                                                 # STEP 28
ACTION: time5.shift(hours=val8) 
val8 = -1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:50:13.496486-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'ro_ro'                                                     # STEP 29
ACTION: locale3 =  u'ro_ro' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'ro_ro' : <type 'unicode'>
==================================================
time8.shift(hours=val8)                                                 # STEP 30
ACTION: time8.shift(hours=val8) 
val8 = -1 : <type 'int'>
time8 = <Arrow [2017-11-21T21:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time8.to(zone4)                                                 # STEP 31
ACTION: time6 = time8.to(zone4) 
zone4 = 'US/Pacific' : <type 'str'>
time8 = <Arrow [2017-11-21T21:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T08:50:13.494405-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(weeks=val2)                                                 # STEP 32
ACTION: time5.shift(weeks=val2) 
val2 = 2 : <type 'int'>
time5 = <Arrow [2017-11-21T12:50:13.496486-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val2)                                                # STEP 33
ACTION: time7.shift(months=val2) 
val2 = 2 : <type 'int'>
time7 = <Arrow [2017-11-21T11:50:12.497662-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 += 1                                                               # STEP 34
ACTION: val8 += 1 
val8 = -1 : <type 'int'>
=> val8 = 0 : <type 'int'>
==================================================
time5 = time5.replace(tzinfo=zone3)                                     # STEP 35
ACTION: time5 = time5.replace(tzinfo=zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time5 = <Arrow [2017-11-21T12:50:13.496486-08:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-11-21T12:50:13.496486+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(minutes=val8)                                               # STEP 36
ACTION: time5.shift(minutes=val8) 
val8 = 0 : <type 'int'>
time5 = <Arrow [2017-11-21T12:50:13.496486+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Poland'                                                        # STEP 37
ACTION: zone4 = 'Poland'  
zone4 = 'US/Pacific' : <type 'str'>
=> zone4 = 'Poland' : <type 'str'>
==================================================
time8 = time1.replace(hours=val2)                                       # STEP 38
ACTION: time8 = time1.replace(hours=val2) 
val2 = 2 : <type 'int'>
time1 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T21:50:13.494405+05:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T01:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time7.to(zone0)                                                 # STEP 39
ACTION: time2 = time7.to(zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time7 = <Arrow [2017-11-21T11:50:12.497662-09:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-22T01:50:12.497662+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(minutes=val8)                                               # STEP 40
ACTION: time8.shift(minutes=val8) 
val8 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T01:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val8 -= 1                                                               # STEP 41
ACTION: val8 -= 1 
val8 = 0 : <type 'int'>
=> val8 = -1 : <type 'int'>
==================================================
time0 = time5.replace(seconds=val2)                                     # STEP 42
ACTION: time0 = time5.replace(seconds=val2) 
val2 = 2 : <type 'int'>
time5 = <Arrow [2017-11-21T12:50:13.496486+01:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T12:50:15.496486+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time6.to(zone3)                                                 # STEP 43
ACTION: time5 = time6.to(zone3) 
zone3 = 'Europe/Rome' : <type 'str'>
time6 = <Arrow [2017-11-21T08:50:13.494405-08:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-21T12:50:13.496486+01:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-11-21T17:50:13.494405+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'US/Alaska'                                                     # STEP 44
ACTION: zone3 = 'US/Alaska'  
zone3 = 'Europe/Rome' : <type 'str'>
=> zone3 = 'US/Alaska' : <type 'str'>
==================================================
time5.datetime                                                          # STEP 45
ACTION: time5.datetime 
time5 = <Arrow [2017-11-21T17:50:13.494405+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(months=val8)                                                # STEP 46
ACTION: time7.shift(months=val8) 
val8 = -1 : <type 'int'>
time7 = <Arrow [2017-11-21T11:50:12.497662-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(years=val5)                                                 # STEP 47
ACTION: time3.shift(years=val5) 
val5 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T01:50:13.506714+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.now()                                                     # STEP 48
ACTION: time7 = arrow.now() 
time7 = <Arrow [2017-11-21T11:50:12.497662-09:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T12:50:13.522970-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Alaska'                                                     # STEP 49
ACTION: zone0 = 'US/Alaska'  
zone0 = 'Asia/Samarkand' : <type 'str'>
=> zone0 = 'US/Alaska' : <type 'str'>
==================================================
time1 = time2.replace(tzinfo=zone3)                                     # STEP 50
ACTION: time1 = time2.replace(tzinfo=zone3) 
zone3 = 'US/Alaska' : <type 'str'>
time2 = <Arrow [2017-11-22T01:50:12.497662+05:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-22T01:50:12.497662-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(weeks=val8)                                                 # STEP 51
ACTION: time7.shift(weeks=val8) 
val8 = -1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:50:13.522970-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time3.replace(year=val5)                                        # STEP 52
ACTION: time6 = time3.replace(year=val5) 
val5 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T01:50:13.506714+05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T08:50:13.494405-08:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-22T01:50:13.506714+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time5.replace(tzinfo=zone2)                                     # STEP 53
ACTION: time5 = time5.replace(tzinfo=zone2) 
zone2 = 'Africa/Cairo' : <type 'str'>
time5 = <Arrow [2017-11-21T17:50:13.494405+01:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-11-21T17:50:13.494405+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.humanize(locale=locale2)                                          # STEP 54
ACTION: time7.humanize(locale=locale2) 
locale2 = u'sk' : <type 'unicode'>
time7 = <Arrow [2017-11-21T12:50:13.522970-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(seconds=val8)                                               # STEP 55
ACTION: time4.shift(seconds=val8) 
val8 = -1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Singapore'                                                     # STEP 56
ACTION: zone2 = 'Singapore'  
zone2 = 'Africa/Cairo' : <type 'str'>
=> zone2 = 'Singapore' : <type 'str'>
==================================================
time9 = time2.replace(year=val5)                                        # STEP 57
ACTION: time9 = time2.replace(year=val5) 
val5 = 1 : <type 'int'>
time2 = <Arrow [2017-11-22T01:50:12.497662+05:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [0001-11-22T01:50:12.497662+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.replace(minutes=val8)                                     # STEP 58
ACTION: time2 = time5.replace(minutes=val8) 
val8 = -1 : <type 'int'>
time5 = <Arrow [2017-11-21T17:50:13.494405+02:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-22T01:50:12.497662+05:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T17:49:13.494405+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = arrow.get(val8)                                                 # STEP 59
ACTION: time5 = arrow.get(val8) 
val8 = -1 : <type 'int'>
time5 = <Arrow [2017-11-21T17:50:13.494405+02:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.to(zone3)                                                 # STEP 60
ACTION: time7 = time2.to(zone3) 
zone3 = 'US/Alaska' : <type 'str'>
time2 = <Arrow [2017-11-21T17:49:13.494405+02:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T12:50:13.522970-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T06:49:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time9.replace(tzinfo=zone3)                                     # STEP 61
ACTION: time2 = time9.replace(tzinfo=zone3) 
zone3 = 'US/Alaska' : <type 'str'>
time9 = <Arrow [0001-11-22T01:50:12.497662+04:28]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T17:49:13.494405+02:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-11-22T01:50:12.497662-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(years=val5)                                                 # STEP 62
ACTION: time9.shift(years=val5) 
val5 = 1 : <type 'int'>
time9 = <Arrow [0001-11-22T01:50:12.497662+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val5)                                                # STEP 63
ACTION: time3.shift(months=val5) 
val5 = 1 : <type 'int'>
time3 = <Arrow [2017-11-22T01:50:13.506714+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time7.replace(hours=val2)                                       # STEP 64
ACTION: time4 = time7.replace(hours=val2) 
val2 = 2 : <type 'int'>
time7 = <Arrow [2017-11-21T06:49:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T08:49:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.get(val8)                                                 # STEP 65
ACTION: time7 = arrow.get(val8) 
val8 = -1 : <type 'int'>
time7 = <Arrow [2017-11-21T06:49:13.494405-09:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time5.to(zone4)                                                 # STEP 66
ACTION: time3 = time5.to(zone4) 
zone4 = 'Poland' : <type 'str'>
time5 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-22T01:50:13.506714+05:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1970-01-01T00:59:59+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(seconds=val8)                                               # STEP 67
ACTION: time7.shift(seconds=val8) 
val8 = -1 : <type 'int'>
time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time7.replace(month=val5)                                       # STEP 68
ACTION: time7 = time7.replace(month=val5) 
val5 = 1 : <type 'int'>
time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1969-01-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time5.to(zone4)                                                 # STEP 69
ACTION: time8 = time5.to(zone4) 
zone4 = 'Poland' : <type 'str'>
time5 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T01:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:59:59+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.to(zone2)                                                 # STEP 70
ACTION: time9 = time8.to(zone2) 
zone2 = 'Singapore' : <type 'str'>
time8 = <Arrow [1970-01-01T00:59:59+01:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [0001-11-22T01:50:12.497662+04:28]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1970-01-01T07:29:59+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Etc/Greenwich'                                                 # STEP 71
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = 'Poland' : <type 'str'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone2 = 'Australia/Brisbane'                                            # STEP 72
ACTION: zone2 = 'Australia/Brisbane'  
zone2 = 'Singapore' : <type 'str'>
=> zone2 = 'Australia/Brisbane' : <type 'str'>
==================================================
zone3 = 'US/Pacific'                                                    # STEP 73
ACTION: zone3 = 'US/Pacific'  
zone3 = 'US/Alaska' : <type 'str'>
=> zone3 = 'US/Pacific' : <type 'str'>
==================================================
time5.shift(months=val2)                                                # STEP 74
ACTION: time5.shift(months=val2) 
val2 = 2 : <type 'int'>
time5 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time3.replace(minutes=val8)                                     # STEP 75
ACTION: time5 = time3.replace(minutes=val8) 
val8 = -1 : <type 'int'>
time3 = <Arrow [1970-01-01T00:59:59+01:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [1970-01-01T00:58:59+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(years=val8)                                                 # STEP 76
ACTION: time2.shift(years=val8) 
val8 = -1 : <type 'int'>
time2 = <Arrow [0001-11-22T01:50:12.497662-10:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1097ded40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304733, in act6783
    self.p_time[2].shift(years=self.p_val[8])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a1bdd40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306254, in act6822
    self.p_time[6].shift(years=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 60 steps

SAVING TEST AS failure.13362.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
time3 = arrow.now()                                                      # STEP 0
ACTION: time3 = arrow.now() 
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-21T12:50:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Singapore'                                                      # STEP 1
ACTION: zone3 = 'Singapore'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Singapore' : <type 'str'>
==================================================
zone4 = 'Etc/Greenwich'                                                  # STEP 2
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
time5 = arrow.now()                                                      # STEP 3
ACTION: time5 = arrow.now() 
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T12:50:35.232747-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'th'                                                         # STEP 4
ACTION: locale3 =  u'th' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'th' : <type 'unicode'>
==================================================
zone1 = 'Poland'                                                         # STEP 5
ACTION: zone1 = 'Poland'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Poland' : <type 'str'>
==================================================
zone2 = 'Europe/Rome'                                                    # STEP 6
ACTION: zone2 = 'Europe/Rome'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Europe/Rome' : <type 'str'>
==================================================
zone0 = 'US/Arizona'                                                     # STEP 7
ACTION: zone0 = 'US/Arizona'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Arizona' : <type 'str'>
==================================================
time8 = arrow.now(zone3)                                                 # STEP 8
ACTION: time8 = arrow.now(zone3) 
zone3 = 'Singapore' : <type 'str'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-22T04:50:35.235115+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Etc/Greenwich'                                                  # STEP 9
ACTION: zone3 = 'Etc/Greenwich'  
zone3 = 'Singapore' : <type 'str'>
=> zone3 = 'Etc/Greenwich' : <type 'str'>
==================================================
val4 = 0                                                                # STEP 10
ACTION: val4 = 0 
val4 = None : <type 'NoneType'>
=> val4 = 0 : <type 'int'>
==================================================
time3.shift(seconds=val4)                                               # STEP 11
ACTION: time3.shift(seconds=val4) 
val4 = 0 : <type 'int'>
time3 = <Arrow [2017-11-21T12:50:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = arrow.now()                                                     # STEP 12
ACTION: time7 = arrow.now() 
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val4 += 1                                                               # STEP 13
ACTION: val4 += 1 
val4 = 0 : <type 'int'>
=> val4 = 1 : <type 'int'>
==================================================
time2 = time5.to(zone1)                                                 # STEP 14
ACTION: time2 = time5.to(zone1) 
zone1 = 'Poland' : <type 'str'>
time5 = <Arrow [2017-11-21T12:50:35.232747-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [2017-11-21T21:50:35.232747+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time3.replace(minutes=val4)                                     # STEP 15
ACTION: time0 = time3.replace(minutes=val4) 
val4 = 1 : <type 'int'>
time3 = <Arrow [2017-11-21T12:50:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [2017-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Poland'                                                        # STEP 16
ACTION: zone1 = 'Poland'  
zone1 = 'Poland' : <type 'str'>
==================================================
time5.shift(hours=val4)                                                 # STEP 17
ACTION: time5.shift(hours=val4) 
val4 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T12:50:35.232747-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.humanize(locale=locale3)                                          # STEP 18
ACTION: time2.humanize(locale=locale3) 
locale3 = u'th' : <type 'unicode'>
time2 = <Arrow [2017-11-21T21:50:35.232747+01:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.timestamp                                                         # STEP 19
ACTION: time8.timestamp 
time8 = <Arrow [2017-11-22T04:50:35.235115+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(year=val4)                                        # STEP 20
ACTION: time3 = time7.replace(year=val4) 
val4 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-21T12:50:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(weeks=val4)                                                 # STEP 21
ACTION: time0.shift(weeks=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [2017-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale1 =  u'he'                                                        # STEP 22
ACTION: locale1 =  u'he' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'he' : <type 'unicode'>
==================================================
time5 = time2.replace(year=val4)                                        # STEP 23
ACTION: time5 = time2.replace(year=val4) 
val4 = 1 : <type 'int'>
time2 = <Arrow [2017-11-21T21:50:35.232747+01:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-21T12:50:35.232747-08:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 = 0                                                                # STEP 24
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
time8 = time8.replace(year=val4)                                        # STEP 25
ACTION: time8 = time8.replace(year=val4) 
val4 = 1 : <type 'int'>
time8 = <Arrow [2017-11-22T04:50:35.235115+08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-11-22T04:50:35.235115+06:55]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(minutes=val7)                                               # STEP 26
ACTION: time0.shift(minutes=val7) 
val7 = 0 : <type 'int'>
time0 = <Arrow [2017-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time0.replace(year=val4)                                        # STEP 27
ACTION: time2 = time0.replace(year=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [2017-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T21:50:35.232747+01:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time2.replace(minutes=val4)                                     # STEP 28
ACTION: time0 = time2.replace(minutes=val4) 
val4 = 1 : <type 'int'>
time2 = <Arrow [0001-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [2017-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [0001-11-21T12:52:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val7)                                                 # STEP 29
ACTION: time0.shift(years=val7) 
val7 = 0 : <type 'int'>
time0 = <Arrow [0001-11-21T12:52:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(hours=val7)                                                 # STEP 30
ACTION: time8.shift(hours=val7) 
val7 = 0 : <type 'int'>
time8 = <Arrow [0001-11-22T04:50:35.235115+06:55]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = arrow.now()                                                     # STEP 31
ACTION: time4 = arrow.now() 
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [2017-11-21T12:50:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time0.replace(hours=val4)                                       # STEP 32
ACTION: time9 = time0.replace(hours=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [0001-11-21T12:52:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [0001-11-21T13:52:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.now()                                                     # STEP 33
ACTION: time8 = arrow.now() 
time8 = <Arrow [0001-11-22T04:50:35.235115+06:55]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T12:50:35.254296-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time5.replace(tzinfo=zone1)                                     # STEP 34
ACTION: time0 = time5.replace(tzinfo=zone1) 
zone1 = 'Poland' : <type 'str'>
time5 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [0001-11-21T12:52:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(seconds=val4)                                               # STEP 35
ACTION: time7.shift(seconds=val4) 
val4 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.timestamp                                                         # STEP 36
ACTION: time5.timestamp 
time5 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time0.replace(minutes=val4)                                     # STEP 37
ACTION: time5 = time0.replace(minutes=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-11-21T21:51:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.replace(tzinfo=zone0)                                     # STEP 38
ACTION: time2 = time8.replace(tzinfo=zone0) 
zone0 = 'US/Arizona' : <type 'str'>
time8 = <Arrow [2017-11-21T12:50:35.254296-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-11-21T12:51:35.231313-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T12:50:35.254296-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(minutes=val4)                                               # STEP 39
ACTION: time7.shift(minutes=val4) 
val4 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(months=val4)                                                # STEP 40
ACTION: time2.shift(months=val4) 
val4 = 1 : <type 'int'>
time2 = <Arrow [2017-11-21T12:50:35.254296-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(tzinfo=zone3)                                     # STEP 41
ACTION: time8 = time7.replace(tzinfo=zone3) 
zone3 = 'Etc/Greenwich' : <type 'str'>
time7 = <Arrow [2017-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T12:50:35.254296-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-21T12:50:35.237525+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'US/Mountain'                                                   # STEP 42
ACTION: zone0 = 'US/Mountain'  
zone0 = 'US/Arizona' : <type 'str'>
=> zone0 = 'US/Mountain' : <type 'str'>
==================================================
time0.shift(hours=val4)                                                 # STEP 43
ACTION: time0.shift(hours=val4) 
val4 = 1 : <type 'int'>
time0 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 -= 1                                                               # STEP 44
ACTION: val7 -= 1 
val7 = 0 : <type 'int'>
=> val7 = -1 : <type 'int'>
==================================================
time0 = time4.to(zone4)                                                 # STEP 45
ACTION: time0 = time4.to(zone4) 
zone4 = 'Etc/Greenwich' : <type 'str'>
time4 = <Arrow [2017-11-21T12:50:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [0001-11-21T21:50:35.232747+01:24]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [2017-11-21T20:50:35.252647+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(hours=val4)                                       # STEP 46
ACTION: time7 = time8.replace(hours=val4) 
val4 = 1 : <type 'int'>
time8 = <Arrow [2017-11-21T12:50:35.237525+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T13:50:35.237525+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'el'                                                        # STEP 47
ACTION: locale0 =  u'el' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'el' : <type 'unicode'>
==================================================
time2 = time3.replace(hours=val7)                                       # STEP 48
ACTION: time2 = time3.replace(hours=val7) 
val7 = -1 : <type 'int'>
time3 = <Arrow [0001-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T12:50:35.254296-07:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-11-21T11:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.humanize(locale=locale1)                                          # STEP 49
ACTION: time2.humanize(locale=locale1) 
locale1 = u'he' : <type 'unicode'>
time2 = <Arrow [0001-11-21T11:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time4.replace(minutes=val7)                                     # STEP 50
ACTION: time4 = time4.replace(minutes=val7) 
val7 = -1 : <type 'int'>
time4 = <Arrow [2017-11-21T12:50:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [2017-11-21T12:49:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'Poland'                                                        # STEP 51
ACTION: zone4 = 'Poland'  
zone4 = 'Etc/Greenwich' : <type 'str'>
=> zone4 = 'Poland' : <type 'str'>
==================================================
time1 = time4.replace(year=val4)                                        # STEP 52
ACTION: time1 = time4.replace(year=val4) 
val4 = 1 : <type 'int'>
time4 = <Arrow [2017-11-21T12:49:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [0001-11-21T12:49:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Turkey'                                                        # STEP 53
ACTION: zone3 = 'Turkey'  
zone3 = 'Etc/Greenwich' : <type 'str'>
=> zone3 = 'Turkey' : <type 'str'>
==================================================
time7.humanize(locale=locale1)                                          # STEP 54
ACTION: time7.humanize(locale=locale1) 
locale1 = u'he' : <type 'unicode'>
time7 = <Arrow [2017-11-21T13:50:35.237525+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Eastern'                                                    # STEP 55
ACTION: zone1 = 'US/Eastern'  
zone1 = 'Poland' : <type 'str'>
=> zone1 = 'US/Eastern' : <type 'str'>
==================================================
time6 = time1.to(zone0)                                                 # STEP 56
ACTION: time6 = time1.to(zone0) 
zone0 = 'US/Mountain' : <type 'str'>
time1 = <Arrow [0001-11-21T12:49:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [0001-11-21T13:49:35.252647-07:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.timestamp                                                         # STEP 57
ACTION: time2.timestamp 
time2 = <Arrow [0001-11-21T11:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(month=val4)                                       # STEP 58
ACTION: time1 = time3.replace(month=val4) 
val4 = 1 : <type 'int'>
time3 = <Arrow [0001-11-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [0001-11-21T12:49:35.252647-08:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-01-21T12:50:35.237525-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val7)                                                 # STEP 59
ACTION: time6.shift(years=val7) 
val7 = -1 : <type 'int'>
time6 = <Arrow [0001-11-21T13:49:35.252647-07:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a1c8950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306254, in act6822
    self.p_time[6].shift(years=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #53 STEP #32 (0:00:30.009621) Tue Nov 21 12:50:41 2017 [ 228 stmts 297 branches ] (no cov+ for 6 tests) 5169 TOTAL ACTIONS (172.244761651/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 29
STOPPING TESTING DUE TO TIMEOUT
21.0900473934 PERCENT COVERED
60.2286679745 TOTAL RUNTIME
104 EXECUTED
10266 TOTAL TEST OPERATIONS
8.02809357643 TIME SPENT EXECUTING TEST OPERATIONS
51.6100757122 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0085232257843 TIME SPENT CHECKING PROPERTIES
8.03661680222 TOTAL TIME SPENT RUNNING SUT
0.136370182037 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
zone2 = 'Africa/Cairo'                                                   # STEP 0
val2 = 0                                                                 # STEP 1
val5 = 0                                                                 # STEP 2
zone3 = 'US/Alaska'                                                      # STEP 3
zone0 = 'Asia/Samarkand'                                                 # STEP 4
zone1 = 'Poland'                                                         # STEP 5
locale2 =  u'sk'                                                         # STEP 6
val2 += 1                                                                # STEP 7
zone4 = 'US/Pacific'                                                     # STEP 8
locale0 =  u'it'                                                         # STEP 9
val8 = 0                                                                # STEP 10
val5 += 1                                                               # STEP 11
time4 = arrow.get(val8)                                                 # STEP 12
val8 -= 1                                                               # STEP 13
time7 = arrow.now(zone3)                                                # STEP 14
time1 = time7.to(zone1)                                                 # STEP 15
time5 = arrow.now()                                                     # STEP 16
time8 = arrow.now(zone3)                                                # STEP 17
time7 = time8.replace(seconds=val8)                                     # STEP 18
time8 = time1.replace(tzinfo=zone0)                                     # STEP 19
val2 += 1                                                               # STEP 20
time1 = time1.to(zone0)                                                 # STEP 21
time1.shift(seconds=val5)                                               # STEP 22
zone3 = 'Europe/Rome'                                                   # STEP 23
zone1 = 'Asia/Samarkand'                                                # STEP 24
time1 = arrow.get(val8)                                                 # STEP 25
time5.shift(years=val8)                                                 # STEP 26
time3 = arrow.now(zone0)                                                # STEP 27
time5.shift(hours=val8)                                                 # STEP 28
locale3 =  u'ro_ro'                                                     # STEP 29
time8.shift(hours=val8)                                                 # STEP 30
time6 = time8.to(zone4)                                                 # STEP 31
time5.shift(weeks=val2)                                                 # STEP 32
time7.shift(months=val2)                                                # STEP 33
val8 += 1                                                               # STEP 34
time5 = time5.replace(tzinfo=zone3)                                     # STEP 35
time5.shift(minutes=val8)                                               # STEP 36
zone4 = 'Poland'                                                        # STEP 37
time8 = time1.replace(hours=val2)                                       # STEP 38
time2 = time7.to(zone0)                                                 # STEP 39
time8.shift(minutes=val8)                                               # STEP 40
val8 -= 1                                                               # STEP 41
time0 = time5.replace(seconds=val2)                                     # STEP 42
time5 = time6.to(zone3)                                                 # STEP 43
zone3 = 'US/Alaska'                                                     # STEP 44
time5.datetime                                                          # STEP 45
time7.shift(months=val8)                                                # STEP 46
time3.shift(years=val5)                                                 # STEP 47
time7 = arrow.now()                                                     # STEP 48
zone0 = 'US/Alaska'                                                     # STEP 49
time1 = time2.replace(tzinfo=zone3)                                     # STEP 50
time7.shift(weeks=val8)                                                 # STEP 51
time6 = time3.replace(year=val5)                                        # STEP 52
time5 = time5.replace(tzinfo=zone2)                                     # STEP 53
time7.humanize(locale=locale2)                                          # STEP 54
time4.shift(seconds=val8)                                               # STEP 55
zone2 = 'Singapore'                                                     # STEP 56
time9 = time2.replace(year=val5)                                        # STEP 57
time2 = time5.replace(minutes=val8)                                     # STEP 58
time5 = arrow.get(val8)                                                 # STEP 59
time7 = time2.to(zone3)                                                 # STEP 60
time2 = time9.replace(tzinfo=zone3)                                     # STEP 61
time9.shift(years=val5)                                                 # STEP 62
time3.shift(months=val5)                                                # STEP 63
time4 = time7.replace(hours=val2)                                       # STEP 64
time7 = arrow.get(val8)                                                 # STEP 65
time3 = time5.to(zone4)                                                 # STEP 66
time7.shift(seconds=val8)                                               # STEP 67
time7 = time7.replace(month=val5)                                       # STEP 68
time8 = time5.to(zone4)                                                 # STEP 69
time9 = time8.to(zone2)                                                 # STEP 70
zone4 = 'Etc/Greenwich'                                                 # STEP 71
zone2 = 'Australia/Brisbane'                                            # STEP 72
zone3 = 'US/Pacific'                                                    # STEP 73
time5.shift(months=val2)                                                # STEP 74
time5 = time3.replace(minutes=val8)                                     # STEP 75
time2.shift(years=val8)                                                 # STEP 76
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x1097ded40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304733, in act6783
    self.p_time[2].shift(years=self.p_val[8])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE 1
time3 = arrow.now()                                                      # STEP 0
zone3 = 'Singapore'                                                      # STEP 1
zone4 = 'Etc/Greenwich'                                                  # STEP 2
time5 = arrow.now()                                                      # STEP 3
locale3 =  u'th'                                                         # STEP 4
zone1 = 'Poland'                                                         # STEP 5
zone2 = 'Europe/Rome'                                                    # STEP 6
zone0 = 'US/Arizona'                                                     # STEP 7
time8 = arrow.now(zone3)                                                 # STEP 8
zone3 = 'Etc/Greenwich'                                                  # STEP 9
val4 = 0                                                                # STEP 10
time3.shift(seconds=val4)                                               # STEP 11
time7 = arrow.now()                                                     # STEP 12
val4 += 1                                                               # STEP 13
time2 = time5.to(zone1)                                                 # STEP 14
time0 = time3.replace(minutes=val4)                                     # STEP 15
zone1 = 'Poland'                                                        # STEP 16
time5.shift(hours=val4)                                                 # STEP 17
time2.humanize(locale=locale3)                                          # STEP 18
time8.timestamp                                                         # STEP 19
time3 = time7.replace(year=val4)                                        # STEP 20
time0.shift(weeks=val4)                                                 # STEP 21
locale1 =  u'he'                                                        # STEP 22
time5 = time2.replace(year=val4)                                        # STEP 23
val7 = 0                                                                # STEP 24
time8 = time8.replace(year=val4)                                        # STEP 25
time0.shift(minutes=val7)                                               # STEP 26
time2 = time0.replace(year=val4)                                        # STEP 27
time0 = time2.replace(minutes=val4)                                     # STEP 28
time0.shift(years=val7)                                                 # STEP 29
time8.shift(hours=val7)                                                 # STEP 30
time4 = arrow.now()                                                     # STEP 31
time9 = time0.replace(hours=val4)                                       # STEP 32
time8 = arrow.now()                                                     # STEP 33
time0 = time5.replace(tzinfo=zone1)                                     # STEP 34
time7.shift(seconds=val4)                                               # STEP 35
time5.timestamp                                                         # STEP 36
time5 = time0.replace(minutes=val4)                                     # STEP 37
time2 = time8.replace(tzinfo=zone0)                                     # STEP 38
time7.shift(minutes=val4)                                               # STEP 39
time2.shift(months=val4)                                                # STEP 40
time8 = time7.replace(tzinfo=zone3)                                     # STEP 41
zone0 = 'US/Mountain'                                                   # STEP 42
time0.shift(hours=val4)                                                 # STEP 43
val7 -= 1                                                               # STEP 44
time0 = time4.to(zone4)                                                 # STEP 45
time7 = time8.replace(hours=val4)                                       # STEP 46
locale0 =  u'el'                                                        # STEP 47
time2 = time3.replace(hours=val7)                                       # STEP 48
time2.humanize(locale=locale1)                                          # STEP 49
time4 = time4.replace(minutes=val7)                                     # STEP 50
zone4 = 'Poland'                                                        # STEP 51
time1 = time4.replace(year=val4)                                        # STEP 52
zone3 = 'Turkey'                                                        # STEP 53
time7.humanize(locale=locale1)                                          # STEP 54
zone1 = 'US/Eastern'                                                    # STEP 55
time6 = time1.to(zone0)                                                 # STEP 56
time2.timestamp                                                         # STEP 57
time1 = time3.replace(month=val4)                                       # STEP 58
time6.shift(years=val7)                                                 # STEP 59
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a1c8950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 306254, in act6822
    self.p_time[6].shift(years=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
323 BRANCHES COVERED
246 STATEMENTS COVERED
