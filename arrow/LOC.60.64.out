Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14940.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=False, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a160440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304538, in act6778
    self.p_time[2].shift(years=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 79 steps

SAVING TEST AS failure.14940.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
val1 = 0                                                                 # STEP 0
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
val1 -= 1                                                                # STEP 1
ACTION: val1 -= 1 
val1 = 0 : <type 'int'>
=> val1 = -1 : <type 'int'>
==================================================
locale1 =  u'fa'                                                         # STEP 2
ACTION: locale1 =  u'fa' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'fa' : <type 'unicode'>
==================================================
zone4 = 'US/Eastern'                                                     # STEP 3
ACTION: zone4 = 'US/Eastern'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'US/Eastern' : <type 'str'>
==================================================
zone0 = 'US/Pacific'                                                     # STEP 4
ACTION: zone0 = 'US/Pacific'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Pacific' : <type 'str'>
==================================================
zone1 = 'US/Alaska'                                                      # STEP 5
ACTION: zone1 = 'US/Alaska'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'US/Alaska' : <type 'str'>
==================================================
zone3 = 'US/Pacific'                                                     # STEP 6
ACTION: zone3 = 'US/Pacific'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Pacific' : <type 'str'>
==================================================
val1 += 1                                                                # STEP 7
ACTION: val1 += 1 
val1 = -1 : <type 'int'>
=> val1 = 0 : <type 'int'>
==================================================
val1 += 1                                                                # STEP 8
ACTION: val1 += 1 
val1 = 0 : <type 'int'>
=> val1 = 1 : <type 'int'>
==================================================
time7 = arrow.now()                                                      # STEP 9
ACTION: time7 = arrow.now() 
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Australia/Brisbane'                                            # STEP 10
ACTION: zone2 = 'Australia/Brisbane'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Australia/Brisbane' : <type 'str'>
==================================================
time7.shift(hours=val1)                                                 # STEP 11
ACTION: time7.shift(hours=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(tzinfo=zone2)                                     # STEP 12
ACTION: time8 = time7.replace(tzinfo=zone2) 
zone2 = 'Australia/Brisbane' : <type 'str'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [2017-11-21T19:07:16.368252+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val1)                                                 # STEP 13
ACTION: time7.shift(hours=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Singapore'                                                     # STEP 14
ACTION: zone2 = 'Singapore'  
zone2 = 'Australia/Brisbane' : <type 'str'>
=> zone2 = 'Singapore' : <type 'str'>
==================================================
time7.shift(months=val1)                                                # STEP 15
ACTION: time7.shift(months=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = arrow.now(zone1)                                                # STEP 16
ACTION: time6 = arrow.now(zone1) 
zone1 = 'US/Alaska' : <type 'str'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [2017-11-21T18:07:16.372771-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.replace(seconds=val1)                                     # STEP 17
ACTION: time9 = time8.replace(seconds=val1) 
val1 = 1 : <type 'int'>
time8 = <Arrow [2017-11-21T19:07:16.368252+10:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [2017-11-21T19:07:17.368252+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(weeks=val1)                                                 # STEP 18
ACTION: time6.shift(weeks=val1) 
val1 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T18:07:16.372771-09:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time7.replace(year=val1)                                        # STEP 19
ACTION: time2 = time7.replace(year=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(months=val1)                                                # STEP 20
ACTION: time2.shift(months=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'US/Pacific'                                                    # STEP 21
ACTION: zone1 = 'US/Pacific'  
zone1 = 'US/Alaska' : <type 'str'>
=> zone1 = 'US/Pacific' : <type 'str'>
==================================================
time9.format()                                                          # STEP 22
ACTION: time9.format() 
time9 = <Arrow [2017-11-21T19:07:17.368252+10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(weeks=val1)                                                 # STEP 23
ACTION: time2.shift(weeks=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = arrow.now(zone0)                                                # STEP 24
ACTION: time5 = arrow.now(zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [2017-11-21T19:07:16.378502-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time6.to(zone2)                                                 # STEP 25
ACTION: time2 = time6.to(zone2) 
zone2 = 'Singapore' : <type 'str'>
time6 = <Arrow [2017-11-21T18:07:16.372771-09:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-22T11:07:16.372771+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now()                                                     # STEP 26
ACTION: time9 = arrow.now() 
time9 = <Arrow [2017-11-21T19:07:17.368252+10:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(tzinfo=zone1)                                     # STEP 27
ACTION: time3 = time7.replace(tzinfo=zone1) 
zone1 = 'US/Pacific' : <type 'str'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time7.replace(tzinfo=zone3)                                     # STEP 28
ACTION: time6 = time7.replace(tzinfo=zone3) 
zone3 = 'US/Pacific' : <type 'str'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T18:07:16.372771-09:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(year=val1)                                        # STEP 29
ACTION: time8 = time7.replace(year=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [2017-11-21T19:07:16.368252+10:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Poland'                                                        # STEP 30
ACTION: zone3 = 'Poland'  
zone3 = 'US/Pacific' : <type 'str'>
=> zone3 = 'Poland' : <type 'str'>
==================================================
time8.shift(minutes=val1)                                               # STEP 31
ACTION: time8.shift(minutes=val1) 
val1 = 1 : <type 'int'>
time8 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time2.replace(year=val1)                                        # STEP 32
ACTION: time4 = time2.replace(year=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [2017-11-22T11:07:16.372771+08:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-11-22T11:07:16.372771+06:55]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time6.replace(minutes=val1)                                     # STEP 33
ACTION: time7 = time6.replace(minutes=val1) 
val1 = 1 : <type 'int'>
time6 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T19:08:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time3.replace(seconds=val1)                                     # STEP 34
ACTION: time2 = time3.replace(seconds=val1) 
val1 = 1 : <type 'int'>
time3 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-22T11:07:16.372771+08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-11-21T19:07:17.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time9.replace(month=val1)                                       # STEP 35
ACTION: time8 = time9.replace(month=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [0001-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time9.replace(year=val1)                                        # STEP 36
ACTION: time3 = time9.replace(year=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [2017-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.now()                                                     # STEP 37
ACTION: time9 = arrow.now() 
time9 = <Arrow [2017-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [2017-11-21T19:07:16.389186-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(months=val1)                                                # STEP 38
ACTION: time5.shift(months=val1) 
val1 = 1 : <type 'int'>
time5 = <Arrow [2017-11-21T19:07:16.378502-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone1 = 'Singapore'                                                     # STEP 39
ACTION: zone1 = 'Singapore'  
zone1 = 'US/Pacific' : <type 'str'>
=> zone1 = 'Singapore' : <type 'str'>
==================================================
time8.shift(minutes=val1)                                               # STEP 40
ACTION: time8.shift(minutes=val1) 
val1 = 1 : <type 'int'>
time8 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.replace(hours=val1)                                       # STEP 41
ACTION: time5 = time7.replace(hours=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [2017-11-21T19:08:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [2017-11-21T19:07:16.378502-08:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [2017-11-21T20:08:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time3.to(zone3)                                                 # STEP 42
ACTION: time6 = time3.to(zone3) 
zone3 = 'Poland' : <type 'str'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [2017-11-21T19:07:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-22T04:31:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(tzinfo=zone0)                                     # STEP 43
ACTION: time1 = time8.replace(tzinfo=zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time8 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.format()                                                          # STEP 44
ACTION: time3.format() 
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time2.replace(minutes=val1)                                     # STEP 45
ACTION: time7 = time2.replace(minutes=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [2017-11-21T19:07:17.368252-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [2017-11-21T19:08:16.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [2017-11-21T19:08:17.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.replace(month=val1)                                       # STEP 46
ACTION: time2 = time8.replace(month=val1) 
val1 = 1 : <type 'int'>
time8 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-11-21T19:07:17.368252-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.get(val1)                                                 # STEP 47
ACTION: time8 = arrow.get(val1) 
val1 = 1 : <type 'int'>
time8 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(minutes=val1)                                               # STEP 48
ACTION: time2.shift(minutes=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time6.to(zone0)                                                 # STEP 49
ACTION: time2 = time6.to(zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time6 = <Arrow [0001-11-22T04:31:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(minutes=val1)                                               # STEP 50
ACTION: time6.shift(minutes=val1) 
val1 = 1 : <type 'int'>
time6 = <Arrow [0001-11-22T04:31:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(hours=val1)                                                 # STEP 51
ACTION: time2.shift(hours=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.shift(months=val1)                                                # STEP 52
ACTION: time1.shift(months=val1) 
val1 = 1 : <type 'int'>
time1 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(weeks=val1)                                                 # STEP 53
ACTION: time6.shift(weeks=val1) 
val1 = 1 : <type 'int'>
time6 = <Arrow [0001-11-22T04:31:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
time1.format()                                                          # STEP 54
ACTION: time1.format() 
time1 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(months=val1)                                                # STEP 55
ACTION: time3.shift(months=val1) 
val1 = 1 : <type 'int'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time1.replace(year=val1)                                        # STEP 56
ACTION: time2 = time1.replace(year=val1) 
val1 = 1 : <type 'int'>
time1 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(hours=val1)                                                 # STEP 57
ACTION: time4.shift(hours=val1) 
val1 = 1 : <type 'int'>
time4 = <Arrow [0001-11-22T11:07:16.372771+06:55]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale1)                                          # STEP 58
ACTION: time3.humanize(locale=locale1) 
locale1 = u'fa' : <type 'unicode'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.humanize(locale=locale1)                                          # STEP 59
ACTION: time3.humanize(locale=locale1) 
locale1 = u'fa' : <type 'unicode'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.replace(tzinfo=zone3)                                     # STEP 60
ACTION: time4 = time3.replace(tzinfo=zone3) 
zone3 = 'Poland' : <type 'str'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-11-22T11:07:16.372771+06:55]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-11-21T19:07:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
==================================================
val1 -= 1                                                               # STEP 61
ACTION: val1 -= 1 
val1 = 1 : <type 'int'>
=> val1 = 0 : <type 'int'>
==================================================
time1 = time9.replace(tzinfo=zone2)                                     # STEP 62
ACTION: time1 = time9.replace(tzinfo=zone2) 
zone2 = 'Singapore' : <type 'str'>
time9 = <Arrow [2017-11-21T19:07:16.389186-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [2017-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [2017-11-21T19:07:16.389186+08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(years=val1)                                                 # STEP 63
ACTION: time7.shift(years=val1) 
val1 = 0 : <type 'int'>
time7 = <Arrow [2017-11-21T19:08:17.368252-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(weeks=val1)                                                 # STEP 64
ACTION: time3.shift(weeks=val1) 
val1 = 0 : <type 'int'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time4.replace(tzinfo=zone4)                                     # STEP 65
ACTION: time0 = time4.replace(tzinfo=zone4) 
zone4 = 'US/Eastern' : <type 'str'>
time4 = <Arrow [0001-11-21T19:07:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-11-21T19:07:16.380305-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'Poland'                                                        # STEP 66
ACTION: zone2 = 'Poland'  
zone2 = 'Singapore' : <type 'str'>
=> zone2 = 'Poland' : <type 'str'>
==================================================
zone3 = 'Turkey'                                                        # STEP 67
ACTION: zone3 = 'Turkey'  
zone3 = 'Poland' : <type 'str'>
=> zone3 = 'Turkey' : <type 'str'>
==================================================
time6 = time0.replace(minutes=val1)                                     # STEP 68
ACTION: time6 = time0.replace(minutes=val1) 
val1 = 0 : <type 'int'>
time0 = <Arrow [0001-11-21T19:07:16.380305-05:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [0001-11-22T04:31:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0001-11-21T19:07:16.380305-05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone4 = 'US/Eastern'                                                    # STEP 69
ACTION: zone4 = 'US/Eastern'  
zone4 = 'US/Eastern' : <type 'str'>
==================================================
zone0 = 'Europe/Rome'                                                   # STEP 70
ACTION: zone0 = 'Europe/Rome'  
zone0 = 'US/Pacific' : <type 'str'>
=> zone0 = 'Europe/Rome' : <type 'str'>
==================================================
time8.shift(minutes=val1)                                               # STEP 71
ACTION: time8.shift(minutes=val1) 
val1 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val3 = 0                                                                # STEP 72
ACTION: val3 = 0 
val3 = None : <type 'NoneType'>
=> val3 = 0 : <type 'int'>
==================================================
val3 -= 1                                                               # STEP 73
ACTION: val3 -= 1 
val3 = 0 : <type 'int'>
=> val3 = -1 : <type 'int'>
==================================================
time8 = arrow.utcnow()                                                  # STEP 74
ACTION: time8 = arrow.utcnow() 
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [2017-11-22T03:07:16.417112+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time4.to(zone1)                                                 # STEP 75
ACTION: time3 = time4.to(zone1) 
zone1 = 'Singapore' : <type 'str'>
time4 = <Arrow [0001-11-21T19:07:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-11-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-11-22T00:38:16.380305+06:55]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = arrow.get(val1)                                                 # STEP 76
ACTION: time4 = arrow.get(val1) 
val1 = 0 : <type 'int'>
time4 = <Arrow [0001-11-21T19:07:16.380305+01:24]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(seconds=val3)                                               # STEP 77
ACTION: time8.shift(seconds=val3) 
val3 = -1 : <type 'int'>
time8 = <Arrow [2017-11-22T03:07:16.417112+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(years=val3)                                                 # STEP 78
ACTION: time2.shift(years=val3) 
val3 = -1 : <type 'int'>
time2 = <Arrow [0001-01-21T19:07:16.380305-08:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a1414d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304538, in act6778
    self.p_time[2].shift(years=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #62 STEP #77 (0:00:30.002064) Tue Nov 21 19:07:30 2017 [ 205 stmts 266 branches ] (no cov+ for 24 tests) 6156 TOTAL ACTIONS (205.185883282/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 56
STOPPING TESTING DUE TO TIMEOUT
20.0236966825 PERCENT COVERED
60.1916909218 TOTAL RUNTIME
124 EXECUTED
12335 TOTAL TEST OPERATIONS
8.63083434105 TIME SPENT EXECUTING TEST OPERATIONS
51.0522930622 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00851035118103 TIME SPENT CHECKING PROPERTIES
8.63934469223 TOTAL TIME SPENT RUNNING SUT
0.140022277832 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
val1 = 0                                                                 # STEP 0
val1 -= 1                                                                # STEP 1
locale1 =  u'fa'                                                         # STEP 2
zone4 = 'US/Eastern'                                                     # STEP 3
zone0 = 'US/Pacific'                                                     # STEP 4
zone1 = 'US/Alaska'                                                      # STEP 5
zone3 = 'US/Pacific'                                                     # STEP 6
val1 += 1                                                                # STEP 7
val1 += 1                                                                # STEP 8
time7 = arrow.now()                                                      # STEP 9
zone2 = 'Australia/Brisbane'                                            # STEP 10
time7.shift(hours=val1)                                                 # STEP 11
time8 = time7.replace(tzinfo=zone2)                                     # STEP 12
time7.shift(hours=val1)                                                 # STEP 13
zone2 = 'Singapore'                                                     # STEP 14
time7.shift(months=val1)                                                # STEP 15
time6 = arrow.now(zone1)                                                # STEP 16
time9 = time8.replace(seconds=val1)                                     # STEP 17
time6.shift(weeks=val1)                                                 # STEP 18
time2 = time7.replace(year=val1)                                        # STEP 19
time2.shift(months=val1)                                                # STEP 20
zone1 = 'US/Pacific'                                                    # STEP 21
time9.format()                                                          # STEP 22
time2.shift(weeks=val1)                                                 # STEP 23
time5 = arrow.now(zone0)                                                # STEP 24
time2 = time6.to(zone2)                                                 # STEP 25
time9 = arrow.now()                                                     # STEP 26
time3 = time7.replace(tzinfo=zone1)                                     # STEP 27
time6 = time7.replace(tzinfo=zone3)                                     # STEP 28
time8 = time7.replace(year=val1)                                        # STEP 29
zone3 = 'Poland'                                                        # STEP 30
time8.shift(minutes=val1)                                               # STEP 31
time4 = time2.replace(year=val1)                                        # STEP 32
time7 = time6.replace(minutes=val1)                                     # STEP 33
time2 = time3.replace(seconds=val1)                                     # STEP 34
time8 = time9.replace(month=val1)                                       # STEP 35
time3 = time9.replace(year=val1)                                        # STEP 36
time9 = arrow.now()                                                     # STEP 37
time5.shift(months=val1)                                                # STEP 38
zone1 = 'Singapore'                                                     # STEP 39
time8.shift(minutes=val1)                                               # STEP 40
time5 = time7.replace(hours=val1)                                       # STEP 41
time6 = time3.to(zone3)                                                 # STEP 42
time1 = time8.replace(tzinfo=zone0)                                     # STEP 43
time3.format()                                                          # STEP 44
time7 = time2.replace(minutes=val1)                                     # STEP 45
time2 = time8.replace(month=val1)                                       # STEP 46
time8 = arrow.get(val1)                                                 # STEP 47
time2.shift(minutes=val1)                                               # STEP 48
time2 = time6.to(zone0)                                                 # STEP 49
time6.shift(minutes=val1)                                               # STEP 50
time2.shift(hours=val1)                                                 # STEP 51
time1.shift(months=val1)                                                # STEP 52
time6.shift(weeks=val1)                                                 # STEP 53
time1.format()                                                          # STEP 54
time3.shift(months=val1)                                                # STEP 55
time2 = time1.replace(year=val1)                                        # STEP 56
time4.shift(hours=val1)                                                 # STEP 57
time3.humanize(locale=locale1)                                          # STEP 58
time3.humanize(locale=locale1)                                          # STEP 59
time4 = time3.replace(tzinfo=zone3)                                     # STEP 60
val1 -= 1                                                               # STEP 61
time1 = time9.replace(tzinfo=zone2)                                     # STEP 62
time7.shift(years=val1)                                                 # STEP 63
time3.shift(weeks=val1)                                                 # STEP 64
time0 = time4.replace(tzinfo=zone4)                                     # STEP 65
zone2 = 'Poland'                                                        # STEP 66
zone3 = 'Turkey'                                                        # STEP 67
time6 = time0.replace(minutes=val1)                                     # STEP 68
zone4 = 'US/Eastern'                                                    # STEP 69
zone0 = 'Europe/Rome'                                                   # STEP 70
time8.shift(minutes=val1)                                               # STEP 71
val3 = 0                                                                # STEP 72
val3 -= 1                                                               # STEP 73
time8 = arrow.utcnow()                                                  # STEP 74
time3 = time4.to(zone1)                                                 # STEP 75
time4 = arrow.get(val1)                                                 # STEP 76
time8.shift(seconds=val3)                                               # STEP 77
time2.shift(years=val3)                                                 # STEP 78
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10a1414d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 304538, in act6778
    self.p_time[2].shift(years=self.p_val[3])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
309 BRANCHES COVERED
234 STATEMENTS COVERED
