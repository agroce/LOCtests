Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs='locsample.probs', LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.13641.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x107e0bea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 303914, in act6762
    self.p_time[0].shift(years=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
Original test has 26 steps

SAVING TEST AS failure.13641.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
locale4 =  u'sv'                                                         # STEP 0
ACTION: locale4 =  u'sv' 
locale4 = None : <type 'NoneType'>
=> locale4 = u'sv' : <type 'unicode'>
==================================================
locale2 =  u'th'                                                         # STEP 1
ACTION: locale2 =  u'th' 
locale2 = None : <type 'NoneType'>
=> locale2 = u'th' : <type 'unicode'>
==================================================
zone1 = 'Singapore'                                                      # STEP 2
ACTION: zone1 = 'Singapore'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Singapore' : <type 'str'>
==================================================
zone4 = 'Etc/Greenwich'                                                  # STEP 3
ACTION: zone4 = 'Etc/Greenwich'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Etc/Greenwich' : <type 'str'>
==================================================
val6 = 0                                                                 # STEP 4
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
zone0 = 'Etc/Greenwich'                                                  # STEP 5
ACTION: zone0 = 'Etc/Greenwich'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Etc/Greenwich' : <type 'str'>
==================================================
zone2 = 'Turkey'                                                         # STEP 6
ACTION: zone2 = 'Turkey'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Turkey' : <type 'str'>
==================================================
val6 += 1                                                                # STEP 7
ACTION: val6 += 1 
val6 = 0 : <type 'int'>
=> val6 = 1 : <type 'int'>
==================================================
time8 = arrow.get(val6)                                                  # STEP 8
ACTION: time8 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = arrow.get(val6)                                                  # STEP 9
ACTION: time0 = arrow.get(val6) 
val6 = 1 : <type 'int'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.humanize(locale=locale2)                                          # STEP 10
ACTION: time8.humanize(locale=locale2) 
locale2 = u'th' : <type 'unicode'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time0.replace(hours=val6)                                       # STEP 11
ACTION: time5 = time0.replace(hours=val6) 
val6 = 1 : <type 'int'>
time0 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time5.replace(year=val6)                                        # STEP 12
ACTION: time0 = time5.replace(year=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time0 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time0 = <Arrow [0001-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time8.replace(seconds=val6)                                     # STEP 13
ACTION: time8 = time8.replace(seconds=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T00:00:02+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5.shift(seconds=val6)                                               # STEP 14
ACTION: time5.shift(seconds=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
locale3 =  u'th_th'                                                     # STEP 15
ACTION: locale3 =  u'th_th' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'th_th' : <type 'unicode'>
==================================================
val7 = 0                                                                # STEP 16
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
zone3 = 'US/Alaska'                                                     # STEP 17
ACTION: zone3 = 'US/Alaska'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'US/Alaska' : <type 'str'>
==================================================
time2 = time5.replace(year=val6)                                        # STEP 18
ACTION: time2 = time5.replace(year=val6) 
val6 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [0001-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time8.replace(hours=val6)                                       # STEP 19
ACTION: time1 = time8.replace(hours=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:02+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1970-01-01T01:00:02+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val7 -= 1                                                               # STEP 20
ACTION: val7 -= 1 
val7 = 0 : <type 'int'>
=> val7 = -1 : <type 'int'>
==================================================
time6 = time8.to(zone2)                                                 # STEP 21
ACTION: time6 = time8.to(zone2) 
zone2 = 'Turkey' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:02+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T02:00:02+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time2.replace(seconds=val6)                                     # STEP 22
ACTION: time4 = time2.replace(seconds=val6) 
val6 = 1 : <type 'int'>
time2 = <Arrow [0001-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [0001-01-01T01:00:02+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4.shift(minutes=val6)                                               # STEP 23
ACTION: time4.shift(minutes=val6) 
val6 = 1 : <type 'int'>
time4 = <Arrow [0001-01-01T01:00:02+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(seconds=val6)                                               # STEP 24
ACTION: time6.shift(seconds=val6) 
val6 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T02:00:02+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val7)                                                 # STEP 25
ACTION: time0.shift(years=val7) 
val7 = -1 : <type 'int'>
time0 = <Arrow [0001-01-01T01:00:01+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> year is out of range
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10849be60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 303914, in act6762
    self.p_time[0].shift(years=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #77 STEP #3 (0:00:30.006456) Tue Nov 21 13:32:12 2017 [ 235 stmts 307 branches ] (no cov+ for 9 tests) 7529 TOTAL ACTIONS (250.912671111/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa605f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 316589, in act7087
    self.p_time[3].shift(hours=self.p_val[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
Original test has 48 steps

SAVING TEST AS failure.13641.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone2 = 'Singapore'                                                      # STEP 0
ACTION: zone2 = 'Singapore'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'Singapore' : <type 'str'>
==================================================
zone3 = 'Singapore'                                                      # STEP 1
ACTION: zone3 = 'Singapore'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Singapore' : <type 'str'>
==================================================
zone4 = 'Europe/Rome'                                                    # STEP 2
ACTION: zone4 = 'Europe/Rome'  
zone4 = None : <type 'NoneType'>
=> zone4 = 'Europe/Rome' : <type 'str'>
==================================================
zone0 = 'Etc/Greenwich'                                                  # STEP 3
ACTION: zone0 = 'Etc/Greenwich'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'Etc/Greenwich' : <type 'str'>
==================================================
val1 = 0                                                                 # STEP 4
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
val6 = 0                                                                 # STEP 5
ACTION: val6 = 0 
val6 = None : <type 'NoneType'>
=> val6 = 0 : <type 'int'>
==================================================
zone1 = 'Singapore'                                                      # STEP 6
ACTION: zone1 = 'Singapore'  
zone1 = None : <type 'NoneType'>
=> zone1 = 'Singapore' : <type 'str'>
==================================================
val1 -= 1                                                                # STEP 7
ACTION: val1 -= 1 
val1 = 0 : <type 'int'>
=> val1 = -1 : <type 'int'>
==================================================
val1 += 1                                                                # STEP 8
ACTION: val1 += 1 
val1 = -1 : <type 'int'>
=> val1 = 0 : <type 'int'>
==================================================
val0 = 0                                                                 # STEP 9
ACTION: val0 = 0 
val0 = None : <type 'NoneType'>
=> val0 = 0 : <type 'int'>
==================================================
val8 = 0                                                                # STEP 10
ACTION: val8 = 0 
val8 = None : <type 'NoneType'>
=> val8 = 0 : <type 'int'>
==================================================
locale3 =  u'ca'                                                        # STEP 11
ACTION: locale3 =  u'ca' 
locale3 = None : <type 'NoneType'>
=> locale3 = u'ca' : <type 'unicode'>
==================================================
locale1 =  u'it'                                                        # STEP 12
ACTION: locale1 =  u'it' 
locale1 = None : <type 'NoneType'>
=> locale1 = u'it' : <type 'unicode'>
==================================================
val6 += 1                                                               # STEP 13
ACTION: val6 += 1 
val6 = 0 : <type 'int'>
=> val6 = 1 : <type 'int'>
==================================================
val1 -= 1                                                               # STEP 14
ACTION: val1 -= 1 
val1 = 0 : <type 'int'>
=> val1 = -1 : <type 'int'>
==================================================
val2 = 0                                                                # STEP 15
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
val2 -= 1                                                               # STEP 16
ACTION: val2 -= 1 
val2 = 0 : <type 'int'>
=> val2 = -1 : <type 'int'>
==================================================
val2 = 0                                                                # STEP 17
ACTION: val2 = 0 
val2 = -1 : <type 'int'>
=> val2 = 0 : <type 'int'>
==================================================
val9 = 0                                                                # STEP 18
ACTION: val9 = 0 
val9 = None : <type 'NoneType'>
=> val9 = 0 : <type 'int'>
==================================================
time8 = arrow.get(val2)                                                 # STEP 19
ACTION: time8 = arrow.get(val2) 
val2 = 0 : <type 'int'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.timestamp                                                         # STEP 20
ACTION: time8.timestamp 
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.to(zone2)                                                 # STEP 21
ACTION: time7 = time8.to(zone2) 
zone2 = 'Singapore' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
zone2 = 'US/Eastern'                                                    # STEP 22
ACTION: zone2 = 'US/Eastern'  
zone2 = 'Singapore' : <type 'str'>
=> zone2 = 'US/Eastern' : <type 'str'>
==================================================
time3 = time8.replace(year=val6)                                        # STEP 23
ACTION: time3 = time8.replace(year=val6) 
val6 = 1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time7.replace(minutes=val2)                                     # STEP 24
ACTION: time0 = time7.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
locale0 =  u'fa'                                                        # STEP 25
ACTION: locale0 =  u'fa' 
locale0 = None : <type 'NoneType'>
=> locale0 = u'fa' : <type 'unicode'>
==================================================
val0 += 1                                                               # STEP 26
ACTION: val0 += 1 
val0 = 0 : <type 'int'>
=> val0 = 1 : <type 'int'>
==================================================
time7.shift(minutes=val2)                                               # STEP 27
ACTION: time7.shift(minutes=val2) 
val2 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = arrow.get(val1)                                                 # STEP 28
ACTION: time8 = arrow.get(val1) 
val1 = -1 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(minutes=val9)                                               # STEP 29
ACTION: time7.shift(minutes=val9) 
val9 = 0 : <type 'int'>
time7 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.to(zone0)                                                 # STEP 30
ACTION: time7 = time8.to(zone0) 
zone0 = 'Etc/Greenwich' : <type 'str'>
time8 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Europe/Rome'                                                   # STEP 31
ACTION: zone0 = 'Europe/Rome'  
zone0 = 'Etc/Greenwich' : <type 'str'>
=> zone0 = 'Europe/Rome' : <type 'str'>
==================================================
time3.humanize(locale=locale0)                                          # STEP 32
ACTION: time3.humanize(locale=locale0) 
locale0 = u'fa' : <type 'unicode'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val0 = 0                                                                # STEP 33
ACTION: val0 = 0 
val0 = 1 : <type 'int'>
=> val0 = 0 : <type 'int'>
==================================================
time6 = time7.to(zone1)                                                 # STEP 34
ACTION: time6 = time7.to(zone1) 
zone1 = 'Singapore' : <type 'str'>
time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T07:29:59+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.humanize(locale=locale1)                                          # STEP 35
ACTION: time8.humanize(locale=locale1) 
locale1 = u'it' : <type 'unicode'>
time8 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7.shift(hours=val0)                                                 # STEP 36
ACTION: time7.shift(hours=val0) 
val0 = 0 : <type 'int'>
time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(hours=val2)                                                 # STEP 37
ACTION: time3.shift(hours=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(hours=val0)                                                 # STEP 38
ACTION: time0.shift(hours=val0) 
val0 = 0 : <type 'int'>
time0 = <Arrow [1970-01-01T07:30:00+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
time3.shift(hours=val2)                                                 # STEP 39
ACTION: time3.shift(hours=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time7.to(zone3)                                                 # STEP 40
ACTION: time2 = time7.to(zone3) 
zone3 = 'Singapore' : <type 'str'>
time7 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1970-01-01T07:29:59+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = arrow.get(val8)                                                 # STEP 41
ACTION: time9 = arrow.get(val8) 
val8 = 0 : <type 'int'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
val2 -= 1                                                               # STEP 42
ACTION: val2 -= 1 
val2 = 0 : <type 'int'>
=> val2 = -1 : <type 'int'>
==================================================
time3 = time3.replace(year=val6)                                        # STEP 43
ACTION: time3 = time3.replace(year=val6) 
val6 = 1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(hours=val6)                                                 # STEP 44
ACTION: time2.shift(hours=val6) 
val6 = 1 : <type 'int'>
time2 = <Arrow [1970-01-01T07:29:59+07:30]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time8.replace(minutes=val2)                                     # STEP 45
ACTION: time5 = time8.replace(minutes=val2) 
val2 = -1 : <type 'int'>
time8 = <Arrow [1969-12-31T23:59:59+00:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1969-12-31T23:58:59+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone3 = 'Poland'                                                        # STEP 46
ACTION: zone3 = 'Poland'  
zone3 = 'Singapore' : <type 'str'>
=> zone3 = 'Poland' : <type 'str'>
==================================================
time3.shift(hours=val2)                                                 # STEP 47
ACTION: time3.shift(hours=val2) 
val2 = -1 : <type 'int'>
time3 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa60b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 316589, in act7087
    self.p_time[3].shift(hours=self.p_val[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
WARNING: DEADLOCK (NO ENABLED ACTIONS)
TERMINATING TEST DUE TO NO ENABLED ACTIONS, AT LENGTH 42
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 53
STOPPING TESTING DUE TO TIMEOUT
20.971563981 PERCENT COVERED
60.2175118923 TOTAL RUNTIME
149 EXECUTED
14669 TOTAL TEST OPERATIONS
9.53175330162 TIME SPENT EXECUTING TEST OPERATIONS
49.5874681473 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0101230144501 TIME SPENT CHECKING PROPERTIES
9.54187631607 TOTAL TIME SPENT RUNNING SUT
0.15243434906 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
locale4 =  u'sv'                                                         # STEP 0
locale2 =  u'th'                                                         # STEP 1
zone1 = 'Singapore'                                                      # STEP 2
zone4 = 'Etc/Greenwich'                                                  # STEP 3
val6 = 0                                                                 # STEP 4
zone0 = 'Etc/Greenwich'                                                  # STEP 5
zone2 = 'Turkey'                                                         # STEP 6
val6 += 1                                                                # STEP 7
time8 = arrow.get(val6)                                                  # STEP 8
time0 = arrow.get(val6)                                                  # STEP 9
time8.humanize(locale=locale2)                                          # STEP 10
time5 = time0.replace(hours=val6)                                       # STEP 11
time0 = time5.replace(year=val6)                                        # STEP 12
time8 = time8.replace(seconds=val6)                                     # STEP 13
time5.shift(seconds=val6)                                               # STEP 14
locale3 =  u'th_th'                                                     # STEP 15
val7 = 0                                                                # STEP 16
zone3 = 'US/Alaska'                                                     # STEP 17
time2 = time5.replace(year=val6)                                        # STEP 18
time1 = time8.replace(hours=val6)                                       # STEP 19
val7 -= 1                                                               # STEP 20
time6 = time8.to(zone2)                                                 # STEP 21
time4 = time2.replace(seconds=val6)                                     # STEP 22
time4.shift(minutes=val6)                                               # STEP 23
time6.shift(seconds=val6)                                               # STEP 24
time0.shift(years=val7)                                                 # STEP 25
ERROR: (<type 'exceptions.ValueError'>, ValueError('year is out of range',), <traceback object at 0x10849be60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 303914, in act6762
    self.p_time[0].shift(years=self.p_val[7])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 363, in __add__
    day = min(calendar.monthrange(year, month)[1],
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 121, in monthrange
    day1 = weekday(year, month, 1)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.py", line 113, in weekday
    return datetime.date(year, month, day).weekday()
FAILURE 1
zone2 = 'Singapore'                                                      # STEP 0
zone3 = 'Singapore'                                                      # STEP 1
zone4 = 'Europe/Rome'                                                    # STEP 2
zone0 = 'Etc/Greenwich'                                                  # STEP 3
val1 = 0                                                                 # STEP 4
val6 = 0                                                                 # STEP 5
zone1 = 'Singapore'                                                      # STEP 6
val1 -= 1                                                                # STEP 7
val1 += 1                                                                # STEP 8
val0 = 0                                                                 # STEP 9
val8 = 0                                                                # STEP 10
locale3 =  u'ca'                                                        # STEP 11
locale1 =  u'it'                                                        # STEP 12
val6 += 1                                                               # STEP 13
val1 -= 1                                                               # STEP 14
val2 = 0                                                                # STEP 15
val2 -= 1                                                               # STEP 16
val2 = 0                                                                # STEP 17
val9 = 0                                                                # STEP 18
time8 = arrow.get(val2)                                                 # STEP 19
time8.timestamp                                                         # STEP 20
time7 = time8.to(zone2)                                                 # STEP 21
zone2 = 'US/Eastern'                                                    # STEP 22
time3 = time8.replace(year=val6)                                        # STEP 23
time0 = time7.replace(minutes=val2)                                     # STEP 24
locale0 =  u'fa'                                                        # STEP 25
val0 += 1                                                               # STEP 26
time7.shift(minutes=val2)                                               # STEP 27
time8 = arrow.get(val1)                                                 # STEP 28
time7.shift(minutes=val9)                                               # STEP 29
time7 = time8.to(zone0)                                                 # STEP 30
zone0 = 'Europe/Rome'                                                   # STEP 31
time3.humanize(locale=locale0)                                          # STEP 32
val0 = 0                                                                # STEP 33
time6 = time7.to(zone1)                                                 # STEP 34
time8.humanize(locale=locale1)                                          # STEP 35
time7.shift(hours=val0)                                                 # STEP 36
time3.shift(hours=val2)                                                 # STEP 37
time0.shift(hours=val0)                                                 # STEP 38
time3.shift(hours=val2)                                                 # STEP 39
time2 = time7.to(zone3)                                                 # STEP 40
time9 = arrow.get(val8)                                                 # STEP 41
val2 -= 1                                                               # STEP 42
time3 = time3.replace(year=val6)                                        # STEP 43
time2.shift(hours=val6)                                                 # STEP 44
time5 = time8.replace(minutes=val2)                                     # STEP 45
zone3 = 'Poland'                                                        # STEP 46
time3.shift(hours=val2)                                                 # STEP 47
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10aa60b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 316589, in act7087
    self.p_time[3].shift(hours=self.p_val[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 467, in shift
    current = self._datetime + relativedelta(**relative_kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 391, in __radd__
    return self.__add__(other)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/relativedelta.py", line 378, in __add__
    microseconds=self.microseconds))
322 BRANCHES COVERED
244 STATEMENTS COVERED
