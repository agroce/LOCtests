Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.14032.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
TEST #222 STEP #53 (0:00:30.000638) Tue Nov 21 15:36:49 2017 [ 244 stmts 322 branches ] (no cov+ for 114 tests) 22153 TOTAL ACTIONS (738.417629452/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a3fbd40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 25145, in act732
    self.p_time[2] = self.p_time[5].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
Original test has 44 steps

SAVING TEST AS failure.14032.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
zone0 = 'US/Pacific'                                                     # STEP 0
ACTION: zone0 = 'US/Pacific'  
zone0 = None : <type 'NoneType'>
=> zone0 = 'US/Pacific' : <type 'str'>
==================================================
zone2 = 'US/Alaska'                                                      # STEP 1
ACTION: zone2 = 'US/Alaska'  
zone2 = None : <type 'NoneType'>
=> zone2 = 'US/Alaska' : <type 'str'>
==================================================
val7 = 0                                                                 # STEP 2
ACTION: val7 = 0 
val7 = None : <type 'NoneType'>
=> val7 = 0 : <type 'int'>
==================================================
val1 = 0                                                                 # STEP 3
ACTION: val1 = 0 
val1 = None : <type 'NoneType'>
=> val1 = 0 : <type 'int'>
==================================================
val1 += 1                                                                # STEP 4
ACTION: val1 += 1 
val1 = 0 : <type 'int'>
=> val1 = 1 : <type 'int'>
==================================================
val2 = 0                                                                 # STEP 5
ACTION: val2 = 0 
val2 = None : <type 'NoneType'>
=> val2 = 0 : <type 'int'>
==================================================
val3 = 0                                                                 # STEP 6
ACTION: val3 = 0 
val3 = None : <type 'NoneType'>
=> val3 = 0 : <type 'int'>
==================================================
zone3 = 'Turkey'                                                         # STEP 7
ACTION: zone3 = 'Turkey'  
zone3 = None : <type 'NoneType'>
=> zone3 = 'Turkey' : <type 'str'>
==================================================
time8 = arrow.get(val7)                                                  # STEP 8
ACTION: time8 = arrow.get(val7) 
val7 = 0 : <type 'int'>
time8 = None : <type 'NoneType'>
=> time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = arrow.get(val7)                                                  # STEP 9
ACTION: time3 = arrow.get(val7) 
val7 = 0 : <type 'int'>
time3 = None : <type 'NoneType'>
=> time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time8.to(zone0)                                                 # STEP 10
ACTION: time2 = time8.to(zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time2 = None : <type 'NoneType'>
=> time2 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time3.to(zone0)                                                 # STEP 11
ACTION: time7 = time3.to(zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = None : <type 'NoneType'>
=> time7 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time3.replace(minutes=val2)                                     # STEP 12
ACTION: time9 = time3.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = None : <type 'NoneType'>
=> time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time9.replace(month=val1)                                       # STEP 13
ACTION: time4 = time9.replace(month=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time4 = None : <type 'NoneType'>
=> time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time8.replace(hours=val3)                                       # STEP 14
ACTION: time9 = time8.replace(hours=val3) 
val3 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time2.replace(hours=val7)                                       # STEP 15
ACTION: time8 = time2.replace(hours=val7) 
val7 = 0 : <type 'int'>
time2 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time7.to(zone0)                                                 # STEP 16
ACTION: time1 = time7.to(zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time7 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time1 = None : <type 'NoneType'>
=> time1 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2.shift(years=val3)                                                 # STEP 17
ACTION: time2.shift(years=val3) 
val3 = 0 : <type 'int'>
time2 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time8.replace(minutes=val2)                                     # STEP 18
ACTION: time7 = time8.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time8 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6 = time9.replace(minutes=val3)                                     # STEP 19
ACTION: time6 = time9.replace(minutes=val3) 
val3 = 0 : <type 'int'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time6 = None : <type 'NoneType'>
=> time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time7.to(zone3)                                                 # STEP 20
ACTION: time5 = time7.to(zone3) 
zone3 = 'Turkey' : <type 'str'>
time7 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time5 = None : <type 'NoneType'>
=> time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time7.replace(year=val1)                                        # STEP 21
ACTION: time8 = time7.replace(year=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time1.replace(year=val1)                                        # STEP 22
ACTION: time3 = time1.replace(year=val1) 
val1 = 1 : <type 'int'>
time1 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time7 = time4.replace(year=val1)                                        # STEP 23
ACTION: time7 = time4.replace(year=val1) 
val1 = 1 : <type 'int'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time7 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time6.shift(years=val1)                                                 # STEP 24
ACTION: time6.shift(years=val1) 
val1 = 1 : <type 'int'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time6.to(zone0)                                                 # STEP 25
ACTION: time9 = time6.to(zone0) 
zone0 = 'US/Pacific' : <type 'str'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time9 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time9 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time2.replace(minutes=val2)                                     # STEP 26
ACTION: time2 = time2.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time2 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time8.replace(minutes=val3)                                     # STEP 27
ACTION: time4 = time8.replace(minutes=val3) 
val3 = 0 : <type 'int'>
time8 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
zone0 = 'Asia/Samarkand'                                                # STEP 28
ACTION: zone0 = 'Asia/Samarkand'  
zone0 = 'US/Pacific' : <type 'str'>
=> zone0 = 'Asia/Samarkand' : <type 'str'>
==================================================
time6 = time3.to(zone0)                                                 # STEP 29
ACTION: time6 = time3.to(zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time3 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time6 = <Arrow [1970-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time6 = <Arrow [0002-01-01T04:28:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time0 = time4.to(zone2)                                                 # STEP 30
ACTION: time0 = time4.to(zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time4 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time0 = None : <type 'NoneType'>
=> time0 = <Arrow [0001-12-31T14:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time4 = time3.to(zone2)                                                 # STEP 31
ACTION: time4 = time3.to(zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time3 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time4 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time4 = <Arrow [0001-12-31T14:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time5.replace(month=val1)                                       # STEP 32
ACTION: time8 = time5.replace(month=val1) 
val1 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time8 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time7.replace(minutes=val1)                                     # STEP 33
ACTION: time3 = time7.replace(minutes=val1) 
val1 = 1 : <type 'int'>
time7 = <Arrow [0001-01-01T00:00:00+00:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9.shift(years=val1)                                                 # STEP 34
ACTION: time9.shift(years=val1) 
val1 = 1 : <type 'int'>
time9 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8.shift(hours=val7)                                                 # STEP 35
ACTION: time8.shift(hours=val7) 
val7 = 0 : <type 'int'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time1 = time3.replace(hours=val2)                                       # STEP 36
ACTION: time1 = time3.replace(hours=val2) 
val2 = 0 : <type 'int'>
time3 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
time1 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time1 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time8 = time8.to(zone0)                                                 # STEP 37
ACTION: time8 = time8.to(zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time8 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time8 = <Arrow [1970-01-01T05:00:00+05:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time3 = time2.replace(minutes=val1)                                     # STEP 38
ACTION: time3 = time2.replace(minutes=val1) 
val1 = 1 : <type 'int'>
time2 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
time3 = <Arrow [0001-01-01T00:01:00+00:00]> : <class 'arrow.arrow.Arrow'>
=> time3 = <Arrow [1969-12-31T16:01:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.replace(year=val1)                                        # STEP 39
ACTION: time2 = time5.replace(year=val1) 
val1 = 1 : <type 'int'>
time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
=> time2 = <Arrow [0001-01-01T02:00:00+01:57]> : <class 'arrow.arrow.Arrow'>
==================================================
time0.shift(years=val7)                                                 # STEP 40
ACTION: time0.shift(years=val7) 
val7 = 0 : <type 'int'>
time0 = <Arrow [0001-12-31T14:00:00-10:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time9 = time9.replace(minutes=val2)                                     # STEP 41
ACTION: time9 = time9.replace(minutes=val2) 
val2 = 0 : <type 'int'>
time9 = <Arrow [1969-12-31T16:00:00-08:00]> : <class 'arrow.arrow.Arrow'>
==================================================
time5 = time2.to(zone0)                                                 # STEP 42
ACTION: time5 = time2.to(zone0) 
zone0 = 'Asia/Samarkand' : <type 'str'>
time2 = <Arrow [0001-01-01T02:00:00+01:57]> : <class 'arrow.arrow.Arrow'>
time5 = <Arrow [1970-01-01T02:00:00+02:00]> : <class 'arrow.arrow.Arrow'>
=> time5 = <Arrow [0001-01-01T04:31:00+04:28]> : <class 'arrow.arrow.Arrow'>
==================================================
time2 = time5.to(zone2)                                                 # STEP 43
ACTION: time2 = time5.to(zone2) 
zone2 = 'US/Alaska' : <type 'str'>
time5 = <Arrow [0001-01-01T04:31:00+04:28]> : <class 'arrow.arrow.Arrow'>
time2 = <Arrow [0001-01-01T02:00:00+01:57]> : <class 'arrow.arrow.Arrow'>
RAISED EXCEPTION: <type 'exceptions.OverflowError'> date value out of range
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a3f7f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 25145, in act732
    self.p_time[2] = self.p_time[5].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 100
STOPPING TESTING DUE TO TIMEOUT
21.9786729858 PERCENT COVERED
60.2152719498 TOTAL RUNTIME
439 EXECUTED
43844 TOTAL TEST OPERATIONS
28.9590075016 TIME SPENT EXECUTING TEST OPERATIONS
28.7224218845 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0277709960938 TIME SPENT CHECKING PROPERTIES
28.9867784977 TOTAL TIME SPENT RUNNING SUT
0.254644632339 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
zone0 = 'US/Pacific'                                                     # STEP 0
zone2 = 'US/Alaska'                                                      # STEP 1
val7 = 0                                                                 # STEP 2
val1 = 0                                                                 # STEP 3
val1 += 1                                                                # STEP 4
val2 = 0                                                                 # STEP 5
val3 = 0                                                                 # STEP 6
zone3 = 'Turkey'                                                         # STEP 7
time8 = arrow.get(val7)                                                  # STEP 8
time3 = arrow.get(val7)                                                  # STEP 9
time2 = time8.to(zone0)                                                 # STEP 10
time7 = time3.to(zone0)                                                 # STEP 11
time9 = time3.replace(minutes=val2)                                     # STEP 12
time4 = time9.replace(month=val1)                                       # STEP 13
time9 = time8.replace(hours=val3)                                       # STEP 14
time8 = time2.replace(hours=val7)                                       # STEP 15
time1 = time7.to(zone0)                                                 # STEP 16
time2.shift(years=val3)                                                 # STEP 17
time7 = time8.replace(minutes=val2)                                     # STEP 18
time6 = time9.replace(minutes=val3)                                     # STEP 19
time5 = time7.to(zone3)                                                 # STEP 20
time8 = time7.replace(year=val1)                                        # STEP 21
time3 = time1.replace(year=val1)                                        # STEP 22
time7 = time4.replace(year=val1)                                        # STEP 23
time6.shift(years=val1)                                                 # STEP 24
time9 = time6.to(zone0)                                                 # STEP 25
time2 = time2.replace(minutes=val2)                                     # STEP 26
time4 = time8.replace(minutes=val3)                                     # STEP 27
zone0 = 'Asia/Samarkand'                                                # STEP 28
time6 = time3.to(zone0)                                                 # STEP 29
time0 = time4.to(zone2)                                                 # STEP 30
time4 = time3.to(zone2)                                                 # STEP 31
time8 = time5.replace(month=val1)                                       # STEP 32
time3 = time7.replace(minutes=val1)                                     # STEP 33
time9.shift(years=val1)                                                 # STEP 34
time8.shift(hours=val7)                                                 # STEP 35
time1 = time3.replace(hours=val2)                                       # STEP 36
time8 = time8.to(zone0)                                                 # STEP 37
time3 = time2.replace(minutes=val1)                                     # STEP 38
time2 = time5.replace(year=val1)                                        # STEP 39
time0.shift(years=val7)                                                 # STEP 40
time9 = time9.replace(minutes=val2)                                     # STEP 41
time5 = time2.to(zone0)                                                 # STEP 42
time2 = time5.to(zone2)                                                 # STEP 43
ERROR: (<type 'exceptions.OverflowError'>, OverflowError('date value out of range',), <traceback object at 0x10a3f7f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/arrow/sut.py", line 405705, in safely
    act[2]()
  File "/Users/alex/tstl/examples/arrow/sut.py", line 25145, in act732
    self.p_time[2] = self.p_time[5].to(self.p_zone[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/arrow/arrow.py", line 510, in to
    dt = self._datetime.astimezone(tz)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/dateutil/tz/tz.py", line 667, in fromutc
    dt_out = dt + datetime.timedelta(seconds=tti.offset)
337 BRANCHES COVERED
253 STATEMENTS COVERED
