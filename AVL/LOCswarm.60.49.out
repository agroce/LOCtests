Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40719.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103f82098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 59 steps

SAVING TEST AS failure.40719.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 10                                                                # STEP 0
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
int3 = 15                                                                # STEP 1
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 12                                                                # STEP 2
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 3
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                        # STEP 6
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 7
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 9
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 1                                                                # STEP 10
ACTION: int0 = 1 
int0 = 10 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 5                                                                # STEP 12
ACTION: int3 = 5 
int3 = 15 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 13
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 7                                                                # STEP 15
ACTION: int2 = 7 
int2 = 12 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 16
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 7, 15]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 19
ACTION: int1 = 2 
int1 = 12 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 20
ACTION: int2 = 19 
int2 = 7 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 10, 7, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 22
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 10, 7, 2, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 23
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 10, 7, 2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 7, 10, 15, 19]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 24
ACTION: int0 = 19 
int0 = 1 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 25
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 26
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 2, 5, 7, 10, 15, 19]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 7, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 7, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 2, 7, 10, 15, 19]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 29
ACTION: int1 = 12 
int1 = 2 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 30
ACTION: int3 = 18 
int3 = 5 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 31
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 11                                                               # STEP 32
ACTION: int2 = 11 
int2 = 19 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 33
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 2, 7, 10, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 34
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0 == avl0                                                            # STEP 35
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int0 = 9                                                                # STEP 36
ACTION: int0 = 9 
int0 = 19 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 37
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 38
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 2, 7, 9, 10, 15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 39
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 40
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int0 = 12                                                               # STEP 43
ACTION: int0 = 12 
int0 = 9 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 45
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 46
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 5                                                                # STEP 47
ACTION: int0 = 5 
int0 = 12 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 48
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 19                                                               # STEP 49
ACTION: int2 = 19 
int2 = 11 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 50
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int3 = 3                                                                # STEP 51
ACTION: int3 = 3 
int3 = 18 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 52
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 9                                                                # STEP 53
ACTION: int1 = 9 
int1 = 12 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 54
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int2)                                                       # STEP 55
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 7, 9, 10, 12, 15, 19]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 56
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 57
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 58
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e15c20> : <type 'instance'>
avl_REF0 = set([1, 2, 7, 9, 10, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 2, 7, 10, 12, 15, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103f0dab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #95 (0:00:30.017196) Mon May  1 02:38:24 2017 [ 124 stmts 164 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 13
STOPPING TESTING DUE TO TIMEOUT
7.95712893797 PERCENT COVERED
60.2262649536 TOTAL RUNTIME
7 EXECUTED
572 TOTAL TEST OPERATIONS
27.0151133537 TIME SPENT EXECUTING TEST OPERATIONS
0.0816321372986 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.2390623093 TIME SPENT CHECKING PROPERTIES
54.254175663 TOTAL TIME SPENT RUNNING SUT
0.00413370132446 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 10                                                                # STEP 0
int3 = 15                                                                # STEP 1
int2 = 12                                                                # STEP 2
int1 = 12                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int3)                                                        # STEP 5
avl0.insert(int3)                                                        # STEP 6
avl0.delete(int0)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
avl0.delete(int1)                                                        # STEP 9
int0 = 1                                                                # STEP 10
avl0.delete(int1)                                                       # STEP 11
int3 = 5                                                                # STEP 12
avl0.delete(int2)                                                       # STEP 13
avl0.delete(int3)                                                       # STEP 14
int2 = 7                                                                # STEP 15
avl0.delete(int2)                                                       # STEP 16
avl0.delete(int1)                                                       # STEP 17
avl0.insert(int2)                                                       # STEP 18
int1 = 2                                                                # STEP 19
int2 = 19                                                               # STEP 20
avl0.insert(int0)                                                       # STEP 21
avl0.insert(int1)                                                       # STEP 22
avl0.insert(int2)                                                       # STEP 23
int0 = 19                                                               # STEP 24
avl0.delete(int3)                                                       # STEP 25
avl0.insert(int3)                                                       # STEP 26
avl0.insert(int2)                                                       # STEP 27
avl0.delete(int3)                                                       # STEP 28
int1 = 12                                                               # STEP 29
int3 = 18                                                               # STEP 30
avl0.insert(int2)                                                       # STEP 31
int2 = 11                                                               # STEP 32
avl0.delete(int0)                                                       # STEP 33
avl0.delete(int3)                                                       # STEP 34
avl0 == avl0                                                            # STEP 35
int0 = 9                                                                # STEP 36
avl0.delete(int1)                                                       # STEP 37
avl0.insert(int0)                                                       # STEP 38
avl0.delete(int2)                                                       # STEP 39
avl0.delete(int3)                                                       # STEP 40
avl0.insert(int1)                                                       # STEP 41
avl0.insert(int1)                                                       # STEP 42
int0 = 12                                                               # STEP 43
avl0.delete(int3)                                                       # STEP 44
avl0.insert(int0)                                                       # STEP 45
avl0.delete(int2)                                                       # STEP 46
int0 = 5                                                                # STEP 47
avl0 == avl0                                                            # STEP 48
int2 = 19                                                               # STEP 49
avl0 == avl0                                                            # STEP 50
int3 = 3                                                                # STEP 51
avl0.insert(int1)                                                       # STEP 52
int1 = 9                                                                # STEP 53
avl0 == avl0                                                            # STEP 54
avl0.insert(int2)                                                       # STEP 55
avl0.insert(int2)                                                       # STEP 56
avl0.delete(int3)                                                       # STEP 57
avl0.delete(int1)                                                       # STEP 58
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103f0dab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
190 BRANCHES COVERED
145 STATEMENTS COVERED
