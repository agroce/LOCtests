Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.44975.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102e33320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 52 steps

SAVING TEST AS failure.44975.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 15                                                                # STEP 0
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int0 = 18                                                                # STEP 1
ACTION: int0 = 18 
int0 = None : <type 'NoneType'>
=> int0 = 18 : <type 'int'>
==================================================
int1 = 4                                                                 # STEP 2
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
int3 = 19                                                                # STEP 3
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
int0 = 12                                                                # STEP 6
ACTION: int0 = 12 
int0 = 18 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.delete(int3)                                                        # STEP 7
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([18, 15]) : <type 'set'>
==================================================
int3 = 9                                                                 # STEP 9
ACTION: int3 = 9 
int3 = 19 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 10
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 11
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 12
ACTION: int2 = 12 
int2 = 15 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 13
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18, 4]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 14
ACTION: int1 = 9 
int1 = 4 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 15
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 18, 4]) : <type 'set'>
==================================================
int1 = 13                                                               # STEP 16
ACTION: int1 = 13 
int1 = 9 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 17
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([9, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 18
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([9, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 18, 4, 13]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 19
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([9, 18, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 12                                                               # STEP 20
ACTION: int1 = 12 
int1 = 13 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([9, 18, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4, 9, 12, 13, 18]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 22
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 9, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([4, 9, 13, 18]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 23
ACTION: int0 = 15 
int0 = 12 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 24
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 9, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 25
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 9, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([4, 13, 18]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 26
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 27
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 5                                                                # STEP 28
ACTION: int1 = 5 
int1 = 12 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 29
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2 == avl2                                                            # STEP 30
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int2)                                                       # STEP 31
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 32
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 4                                                                # STEP 33
ACTION: int3 = 4 
int3 = 9 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 34
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 35
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4, 12, 13, 18]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 36
ACTION: int2 = 1 
int2 = 12 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 37
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 38
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([4, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([12, 13, 18]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 39
ACTION: int0 = 4 
int0 = 15 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 40
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 12, 13, 18]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 41
ACTION: int2 = 3 
int2 = 1 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 42
ACTION: result = avl2.find(int0) 
int0 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([1, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 43
ACTION: avl2.insert(int0) 
int0 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([1, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 4, 12, 13, 18]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 44
ACTION: int0 = 10 
int0 = 4 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int3 = 10                                                               # STEP 45
ACTION: int3 = 10 
int3 = 4 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 46
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([1, 4, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 4, 10, 12, 13, 18]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 47
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([1, 4, 10, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 48
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([1, 4, 10, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 4, 5, 10, 12, 13, 18]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 49
ACTION: int2 = 10 
int2 = 3 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 50
ACTION: int1 = 12 
int1 = 5 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 51
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cae4d0> : <type 'instance'>
avl_REF2 = set([1, 4, 5, 10, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 4, 5, 10, 13, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102eee290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026cb4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 66 steps

SAVING TEST AS failure.44975.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 9                                                                 # STEP 0
ACTION: int1 = 9 
int1 = None : <type 'NoneType'>
=> int1 = 9 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 1
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 3                                                                 # STEP 3
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 4
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl2 = avl.AVLTree()                                                     # STEP 7
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 8
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
int2 = 8                                                                 # STEP 9
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 10
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 11
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl1.inorder()                                                 # STEP 12
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.delete(int2)                                                       # STEP 13
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 14
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.insert(int1)                                                       # STEP 15
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 18                                                               # STEP 16
ACTION: int1 = 18 
int1 = 9 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 17
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 18
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 3]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 19
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 20
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 2                                                                # STEP 21
ACTION: int1 = 2 
int1 = 18 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 22
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 23
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 24
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 3, 14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 25
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([9, 3]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 26
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 27
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 14]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 29
ACTION: int3 = 8 
int3 = 3 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 30
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 31
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 9, 3]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 32
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 3, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 33
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 34
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 11                                                               # STEP 36
ACTION: int1 = 11 
int1 = 2 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 37
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([2, 3]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 38
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 2, 3]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 40
ACTION: int0 = 15 
int0 = 14 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 41
ACTION: int2 = 19 
int2 = 8 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 42
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([11, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 43
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([11, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 44
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 45
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([11, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11, 19, 2, 3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 46
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([11, 19, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 2                                                                # STEP 47
ACTION: int3 = 2 
int3 = 8 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 48
ACTION: int1 = 9 
int1 = 11 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 49
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([11, 19, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 3, 11, 15, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 50
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 5                                                                # STEP 51
ACTION: int0 = 5 
int0 = 15 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 52
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 53
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.insert(int1)                                                       # STEP 54
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 3, 9, 11, 15, 19]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 55
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int1 = 16                                                               # STEP 56
ACTION: int1 = 16 
int1 = 9 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 57
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 9, 3, 16]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 58
ACTION: int3 = 11 
int3 = 2 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 59
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([2, 3, 9, 11, 15]) : <type 'set'>
==================================================
int1 = 1                                                                # STEP 61
ACTION: int1 = 1 
int1 = 16 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int2 = 6                                                                # STEP 62
ACTION: int2 = 6 
int2 = 19 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 63
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1027510e0> : <type 'instance'>
avl_REF2 = set([8, 9, 3, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.delete(int1)                                                       # STEP 64
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 9, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 65
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102e33cf8> : <type 'instance'>
avl_REF1 = set([2, 3, 9, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([2, 3, 9, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c9b998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102718950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 100 steps

SAVING TEST AS failure.44975.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 20                                                                # STEP 0
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 2
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 3
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int3 = 6                                                                 # STEP 4
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 9                                                                 # STEP 6
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 7
ACTION: int0 = 12 
int0 = 20 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                        # STEP 9
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 19                                                               # STEP 10
ACTION: int0 = 19 
int0 = 12 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 12
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20, 6]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 13
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 20, 6]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 14
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 18                                                               # STEP 15
ACTION: int3 = 18 
int3 = 6 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 16
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 19, 20, 6]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 17
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 15                                                               # STEP 18
ACTION: int0 = 15 
int0 = 19 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 21
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9, 18, 19, 20, 6]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 22
ACTION: int3 = 16 
int3 = 18 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 23
ACTION: int0 = 7 
int0 = 15 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([9, 18, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([18, 19, 20, 6]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 25
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([18, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 26
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([18, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 18                                                               # STEP 27
ACTION: int0 = 18 
int0 = 7 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 28
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([18, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([19, 20, 6]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 29
ACTION: int0 = 1 
int0 = 18 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 13                                                               # STEP 30
ACTION: int2 = 13 
int2 = 9 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 19, 20, 6]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 32
ACTION: int0 = 17 
int0 = 1 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 33
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 34
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 6, 19, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 36
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 37
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 6, 16, 17, 19, 20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 38
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 39
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 40
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 6                                                                # STEP 41
ACTION: int0 = 6 
int0 = 17 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 42
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 43
ACTION: int3 = 20 
int3 = 16 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 44
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 15                                                               # STEP 46
ACTION: int1 = 15 
int1 = 18 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 47
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 48
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 17, 19, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 49
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 50
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 17, 19, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 51
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 52
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 53
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 17, 19]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 54
ACTION: int3 = 6 
int3 = 20 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
int0 = 2                                                                # STEP 55
ACTION: int0 = 2 
int0 = 6 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 56
ACTION: int2 = 15 
int2 = 13 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 57
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 6, 17, 19]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 58
ACTION: int3 = 4 
int3 = 6 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 59
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 4, 6, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 60
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 4, 6, 15, 17, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 61
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 6, 15, 17, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 62
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 63
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 64
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 4, 6, 15, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 65
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 66
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 4, 6, 15, 17, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 67
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 4, 6, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 68
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 69
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int3 = 18                                                               # STEP 70
ACTION: int3 = 18 
int3 = 4 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 71
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 2, 4, 6, 17, 18, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 72
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 73
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 4, 6, 17, 18, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 74
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 4, 6, 17, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 75
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 76
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 4, 6, 17, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 77
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
==================================================
int1 = 6                                                                # STEP 78
ACTION: int1 = 6 
int1 = 15 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 79
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 80
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 81
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 9                                                                # STEP 82
ACTION: int1 = 9 
int1 = 6 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 83
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 1                                                                # STEP 84
ACTION: int0 = 1 
int0 = 2 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 85
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 86
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 87
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 88
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 16                                                               # STEP 89
ACTION: int3 = 16 
int3 = 18 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 90
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 91
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 92
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 93
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 94
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 95
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 4, 6, 9, 17, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 96
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 9, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 97
ACTION: int3 = 4 
int3 = 16 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 98
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 99
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026ba878> : <type 'instance'>
avl_REF1 = set([1, 4, 6, 9, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 6, 9, 15, 17, 18, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026c4170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:38.410578) Mon May  1 03:04:57 2017 [ 148 stmts 195 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10295a878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 51 steps

SAVING TEST AS failure.44975.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 9                                                                 # STEP 0
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 2
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 4
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 14                                                                # STEP 5
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
result = avl2.inorder()                                                  # STEP 6
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.delete(int2)                                                        # STEP 7
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 13                                                                # STEP 8
ACTION: int2 = 13 
int2 = 9 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 9
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 10
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 11
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 12
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 20                                                               # STEP 13
ACTION: int1 = 20 
int1 = 11 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 14
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.insert(int1)                                                       # STEP 15
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 16
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int3 = 6                                                                # STEP 19
ACTION: int3 = 6 
int3 = 14 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
int0 = 11                                                               # STEP 20
ACTION: int0 = 11 
int0 = 15 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 21
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13, 15]) : <type 'set'>
==================================================
avl1 == avl2                                                            # STEP 22
ACTION: avl1 == avl2 
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
avl_REF2 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 23
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 24
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 25
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 9                                                                # STEP 26
ACTION: int3 = 9 
int3 = 6 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 27
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9, 13, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 29
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 11, 20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 30
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([9, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([9, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 32
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.insert(int0)                                                       # STEP 33
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 34
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 11, 20, 13]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 35
ACTION: int2 = 1 
int2 = 13 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
int1 = 19                                                               # STEP 36
ACTION: int1 = 19 
int1 = 20 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 37
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 11, 20, 13, 1]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 39
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 3                                                                # STEP 40
ACTION: int2 = 3 
int2 = 1 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 41
ACTION: avl2.insert(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 20, 13, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 9, 11, 13, 19, 20]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 42
ACTION: int3 = 6 
int3 = 9 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 43
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([1, 9, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int3)                                                       # STEP 44
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([1, 9, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 6, 9, 11, 13, 19, 20]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 45
ACTION: int1 = 19 
int1 = 19 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 46
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10295a950> : <type 'instance'>
avl_REF1 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 11, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([1, 6, 9, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 48
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([1, 6, 9, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 3, 6, 9, 11, 13, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 49
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 9, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1, 3, 6, 9, 13, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 50
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1026e4ea8> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 9, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 3, 6, 9, 13, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102df7ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 41
STOPPING TESTING DUE TO TIMEOUT
8.18447547905 PERCENT COVERED
60.2353990078 TOTAL RUNTIME
6 EXECUTED
410 TOTAL TEST OPERATIONS
18.0242755413 TIME SPENT EXECUTING TEST OPERATIONS
0.0415372848511 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
18.1297333241 TIME SPENT CHECKING PROPERTIES
36.1540088654 TOTAL TIME SPENT RUNNING SUT
0.00334239006042 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 15                                                                # STEP 0
int0 = 18                                                                # STEP 1
int1 = 4                                                                 # STEP 2
int3 = 19                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int0)                                                        # STEP 5
int0 = 12                                                                # STEP 6
avl2.delete(int3)                                                        # STEP 7
avl2.insert(int2)                                                        # STEP 8
int3 = 9                                                                 # STEP 9
avl2.insert(int2)                                                       # STEP 10
avl2.delete(int2)                                                       # STEP 11
int2 = 12                                                               # STEP 12
avl2.insert(int1)                                                       # STEP 13
int1 = 9                                                                # STEP 14
avl2.insert(int1)                                                       # STEP 15
int1 = 13                                                               # STEP 16
avl2.delete(int0)                                                       # STEP 17
avl2.insert(int1)                                                       # STEP 18
avl2.insert(int1)                                                       # STEP 19
int1 = 12                                                               # STEP 20
avl2.insert(int1)                                                       # STEP 21
avl2.delete(int1)                                                       # STEP 22
int0 = 15                                                               # STEP 23
avl2.delete(int0)                                                       # STEP 24
avl2.delete(int3)                                                       # STEP 25
avl2 == avl2                                                            # STEP 26
avl2.delete(int3)                                                       # STEP 27
int1 = 5                                                                # STEP 28
avl2.delete(int2)                                                       # STEP 29
avl2 == avl2                                                            # STEP 30
avl2.delete(int2)                                                       # STEP 31
avl2.delete(int3)                                                       # STEP 32
int3 = 4                                                                # STEP 33
avl2.insert(int3)                                                       # STEP 34
avl2.insert(int2)                                                       # STEP 35
int2 = 1                                                                # STEP 36
avl2.delete(int0)                                                       # STEP 37
avl2.delete(int3)                                                       # STEP 38
int0 = 4                                                                # STEP 39
avl2.insert(int2)                                                       # STEP 40
int2 = 3                                                                # STEP 41
result = avl2.find(int0)                                                # STEP 42
avl2.insert(int0)                                                       # STEP 43
int0 = 10                                                               # STEP 44
int3 = 10                                                               # STEP 45
avl2.insert(int0)                                                       # STEP 46
avl2.delete(int2)                                                       # STEP 47
avl2.insert(int1)                                                       # STEP 48
int2 = 10                                                               # STEP 49
int1 = 12                                                               # STEP 50
avl2.delete(int1)                                                       # STEP 51
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102eee290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int1 = 9                                                                 # STEP 0
int0 = 14                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
int3 = 3                                                                 # STEP 3
avl1.insert(int0)                                                        # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl2 = avl.AVLTree()                                                     # STEP 7
avl2.insert(int1)                                                        # STEP 8
int2 = 8                                                                 # STEP 9
avl2.delete(int0)                                                       # STEP 10
result = avl2.inorder()                                                 # STEP 11
result = avl1.inorder()                                                 # STEP 12
avl2.delete(int2)                                                       # STEP 13
result = avl1.inorder()                                                 # STEP 14
avl2.insert(int1)                                                       # STEP 15
int1 = 18                                                               # STEP 16
avl2.delete(int1)                                                       # STEP 17
avl2.insert(int3)                                                       # STEP 18
avl2.delete(int2)                                                       # STEP 19
avl2.delete(int2)                                                       # STEP 20
int1 = 2                                                                # STEP 21
avl2.insert(int3)                                                       # STEP 22
avl1.insert(int0)                                                       # STEP 23
avl2.insert(int0)                                                       # STEP 24
avl2.delete(int0)                                                       # STEP 25
avl1.delete(int3)                                                       # STEP 26
result = avl1.inorder()                                                 # STEP 27
avl1.insert(int3)                                                       # STEP 28
int3 = 8                                                                # STEP 29
result = avl2.inorder()                                                 # STEP 30
avl2.insert(int2)                                                       # STEP 31
avl1.insert(int1)                                                       # STEP 32
avl1.insert(int0)                                                       # STEP 33
avl1.insert(int0)                                                       # STEP 34
avl2.delete(int1)                                                       # STEP 35
int1 = 11                                                               # STEP 36
avl1.delete(int0)                                                       # STEP 37
avl1.delete(int3)                                                       # STEP 38
avl1.insert(int1)                                                       # STEP 39
int0 = 15                                                               # STEP 40
int2 = 19                                                               # STEP 41
avl1.delete(int3)                                                       # STEP 42
avl1.delete(int2)                                                       # STEP 43
avl2.insert(int3)                                                       # STEP 44
avl1.insert(int2)                                                       # STEP 45
avl1.insert(int2)                                                       # STEP 46
int3 = 2                                                                # STEP 47
int1 = 9                                                                # STEP 48
avl1.insert(int0)                                                       # STEP 49
avl1.delete(int1)                                                       # STEP 50
int0 = 5                                                                # STEP 51
avl2.delete(int3)                                                       # STEP 52
result = avl2.inorder()                                                 # STEP 53
avl1.insert(int1)                                                       # STEP 54
result = avl1.inorder()                                                 # STEP 55
int1 = 16                                                               # STEP 56
avl2.insert(int1)                                                       # STEP 57
int3 = 11                                                               # STEP 58
avl2.delete(int2)                                                       # STEP 59
avl1.delete(int2)                                                       # STEP 60
int1 = 1                                                                # STEP 61
int2 = 6                                                                # STEP 62
result = avl2.inorder()                                                 # STEP 63
avl1.delete(int1)                                                       # STEP 64
avl1.delete(int3)                                                       # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c9b998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int0 = 20                                                                # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl1.insert(int0)                                                        # STEP 2
avl1.insert(int0)                                                        # STEP 3
int3 = 6                                                                 # STEP 4
avl1.insert(int0)                                                        # STEP 5
int2 = 9                                                                 # STEP 6
int0 = 12                                                                # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.delete(int2)                                                        # STEP 9
int0 = 19                                                               # STEP 10
avl1.delete(int2)                                                       # STEP 11
avl1.insert(int3)                                                       # STEP 12
avl1.insert(int2)                                                       # STEP 13
avl1.delete(int0)                                                       # STEP 14
int3 = 18                                                               # STEP 15
avl1.insert(int0)                                                       # STEP 16
avl1.delete(int3)                                                       # STEP 17
int0 = 15                                                               # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1.insert(int2)                                                       # STEP 20
avl1.insert(int3)                                                       # STEP 21
int3 = 16                                                               # STEP 22
int0 = 7                                                                # STEP 23
avl1.delete(int2)                                                       # STEP 24
avl1.delete(int0)                                                       # STEP 25
avl1.delete(int2)                                                       # STEP 26
int0 = 18                                                               # STEP 27
avl1.delete(int0)                                                       # STEP 28
int0 = 1                                                                # STEP 29
int2 = 13                                                               # STEP 30
avl1.insert(int0)                                                       # STEP 31
int0 = 17                                                               # STEP 32
avl1.insert(int0)                                                       # STEP 33
avl1.delete(int0)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
avl1.delete(int3)                                                       # STEP 36
avl1.insert(int3)                                                       # STEP 37
avl1.insert(int3)                                                       # STEP 38
avl1.insert(int3)                                                       # STEP 39
avl1.insert(int0)                                                       # STEP 40
int0 = 6                                                                # STEP 41
avl1.delete(int3)                                                       # STEP 42
int3 = 20                                                               # STEP 43
int1 = 18                                                               # STEP 44
avl1.delete(int1)                                                       # STEP 45
int1 = 15                                                               # STEP 46
avl1.insert(int3)                                                       # STEP 47
avl1.delete(int0)                                                       # STEP 48
avl1.insert(int0)                                                       # STEP 49
avl1.delete(int0)                                                       # STEP 50
avl1.delete(int0)                                                       # STEP 51
avl1.delete(int2)                                                       # STEP 52
avl1.delete(int3)                                                       # STEP 53
int3 = 6                                                                # STEP 54
int0 = 2                                                                # STEP 55
int2 = 15                                                               # STEP 56
avl1.insert(int3)                                                       # STEP 57
int3 = 4                                                                # STEP 58
avl1.insert(int3)                                                       # STEP 59
avl1.insert(int2)                                                       # STEP 60
avl1.delete(int3)                                                       # STEP 61
avl1.delete(int3)                                                       # STEP 62
avl1.insert(int2)                                                       # STEP 63
avl1.insert(int3)                                                       # STEP 64
avl1.insert(int2)                                                       # STEP 65
avl1.insert(int0)                                                       # STEP 66
avl1.delete(int1)                                                       # STEP 67
avl1.insert(int0)                                                       # STEP 68
avl1.insert(int0)                                                       # STEP 69
int3 = 18                                                               # STEP 70
avl1.insert(int3)                                                       # STEP 71
avl1.delete(int1)                                                       # STEP 72
avl1.delete(int0)                                                       # STEP 73
avl1.delete(int3)                                                       # STEP 74
avl1.delete(int1)                                                       # STEP 75
avl1.insert(int3)                                                       # STEP 76
avl1.insert(int2)                                                       # STEP 77
int1 = 6                                                                # STEP 78
avl1.insert(int3)                                                       # STEP 79
avl1.insert(int1)                                                       # STEP 80
avl1.insert(int3)                                                       # STEP 81
int1 = 9                                                                # STEP 82
avl1.delete(int1)                                                       # STEP 83
int0 = 1                                                                # STEP 84
avl1.delete(int1)                                                       # STEP 85
avl1.delete(int1)                                                       # STEP 86
avl1.delete(int1)                                                       # STEP 87
avl1.insert(int2)                                                       # STEP 88
int3 = 16                                                               # STEP 89
avl1.delete(int3)                                                       # STEP 90
avl1.insert(int2)                                                       # STEP 91
avl1.insert(int1)                                                       # STEP 92
avl1.delete(int3)                                                       # STEP 93
avl1.insert(int2)                                                       # STEP 94
avl1.delete(int2)                                                       # STEP 95
avl1.insert(int2)                                                       # STEP 96
int3 = 4                                                                # STEP 97
avl1.insert(int2)                                                       # STEP 98
avl1.delete(int3)                                                       # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026c4170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 3
int2 = 9                                                                 # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2.delete(int2)                                                        # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl2.delete(int2)                                                        # STEP 4
int3 = 14                                                                # STEP 5
result = avl2.inorder()                                                  # STEP 6
avl1.delete(int2)                                                        # STEP 7
int2 = 13                                                                # STEP 8
int0 = 15                                                                # STEP 9
int1 = 11                                                               # STEP 10
avl2.insert(int1)                                                       # STEP 11
result = avl2.inorder()                                                 # STEP 12
int1 = 20                                                               # STEP 13
result = avl1.inorder()                                                 # STEP 14
avl2.insert(int1)                                                       # STEP 15
avl2.delete(int3)                                                       # STEP 16
avl1.insert(int0)                                                       # STEP 17
avl1.insert(int0)                                                       # STEP 18
int3 = 6                                                                # STEP 19
int0 = 11                                                               # STEP 20
avl1.insert(int2)                                                       # STEP 21
avl1 == avl2                                                            # STEP 22
avl2.delete(int3)                                                       # STEP 23
avl1.delete(int3)                                                       # STEP 24
avl1.insert(int2)                                                       # STEP 25
int3 = 9                                                                # STEP 26
result = avl2.inorder()                                                 # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl2.insert(int3)                                                       # STEP 29
avl1.delete(int2)                                                       # STEP 30
avl1.delete(int1)                                                       # STEP 31
result = avl1.inorder()                                                 # STEP 32
avl2.insert(int0)                                                       # STEP 33
avl2.insert(int2)                                                       # STEP 34
int2 = 1                                                                # STEP 35
int1 = 19                                                               # STEP 36
avl1.delete(int0)                                                       # STEP 37
avl2.insert(int2)                                                       # STEP 38
result = avl1.inorder()                                                 # STEP 39
int2 = 3                                                                # STEP 40
avl2.insert(int1)                                                       # STEP 41
int3 = 6                                                                # STEP 42
avl2 == avl2                                                            # STEP 43
avl2.insert(int3)                                                       # STEP 44
int1 = 19                                                               # STEP 45
avl1.insert(int0)                                                       # STEP 46
avl2.insert(int1)                                                       # STEP 47
avl2.insert(int2)                                                       # STEP 48
avl2.delete(int0)                                                       # STEP 49
avl2.delete(int1)                                                       # STEP 50
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102df7ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
197 BRANCHES COVERED
149 STATEMENTS COVERED
