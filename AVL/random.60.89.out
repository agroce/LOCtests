Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.942.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #46 (0:00:30.059544) Fri Apr 28 07:43:59 2017 [ 148 stmts 196 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1047a5560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 22 steps

SAVING TEST AS failure.942.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 14                                                                # STEP 1
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 2
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 9                                                                 # STEP 3
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
int1 = 11                                                                # STEP 4
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 5
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 5                                                                 # STEP 6
ACTION: int0 = 5 
int0 = 14 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
int0 = 19                                                                # STEP 8
ACTION: int0 = 19 
int0 = 5 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.insert(int1)                                                        # STEP 9
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 5]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 10
ACTION: int1 = 12 
int1 = 11 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([19, 11, 5]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 12
ACTION: int0 = 1 
int0 = 19 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 13
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([19, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([19, 11, 12, 5]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([19, 11, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([19, 11, 5]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 15
ACTION: int3 = 16 
int3 = 12 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 16
ACTION: int1 = 18 
int1 = 12 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 17
ACTION: result = avl1.find(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([19, 11, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int3 = 6                                                                # STEP 18
ACTION: int3 = 6 
int3 = 16 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([19, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([19, 1, 11, 5]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 20
ACTION: int0 = 19 
int0 = 1 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10409b5a8> : <type 'instance'>
avl_REF1 = set([19, 1, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 11, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10474e368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 46
STOPPING TESTING DUE TO TIMEOUT
7.9742110621 PERCENT COVERED
60.1655180454 TOTAL RUNTIME
8 EXECUTED
668 TOTAL TEST OPERATIONS
29.0008471012 TIME SPENT EXECUTING TEST OPERATIONS
0.0241568088531 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.0541844368 TIME SPENT CHECKING PROPERTIES
58.055031538 TOTAL TIME SPENT RUNNING SUT
0.00499105453491 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
avl1 = avl.AVLTree()                                                     # STEP 0
int0 = 14                                                                # STEP 1
int3 = 12                                                                # STEP 2
int2 = 9                                                                 # STEP 3
int1 = 11                                                                # STEP 4
avl1.delete(int0)                                                        # STEP 5
int0 = 5                                                                 # STEP 6
avl1.insert(int0)                                                        # STEP 7
int0 = 19                                                                # STEP 8
avl1.insert(int1)                                                        # STEP 9
int1 = 12                                                               # STEP 10
avl1.insert(int0)                                                       # STEP 11
int0 = 1                                                                # STEP 12
avl1.insert(int3)                                                       # STEP 13
avl1.delete(int1)                                                       # STEP 14
int3 = 16                                                               # STEP 15
int1 = 18                                                               # STEP 16
result = avl1.find(int3)                                                # STEP 17
int3 = 6                                                                # STEP 18
avl1.insert(int0)                                                       # STEP 19
int0 = 19                                                               # STEP 20
avl1.delete(int0)                                                       # STEP 21
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10474e368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
200 BRANCHES COVERED
150 STATEMENTS COVERED
