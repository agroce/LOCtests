Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.45864.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #44 (0:00:30.079658) Mon May  1 03:11:58 2017 [ 121 stmts 161 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c94d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 73 steps

SAVING TEST AS failure.45864.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 16                                                                # STEP 0
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
int2 = 8                                                                 # STEP 1
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
int1 = 19                                                                # STEP 2
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
int3 = 10                                                                # STEP 3
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 5
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
int3 = 20                                                                # STEP 6
ACTION: int3 = 20 
int3 = 10 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 7
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                  # STEP 9
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 11                                                               # STEP 10
ACTION: int1 = 11 
int1 = 19 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 11
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 20]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 12
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 13
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 14
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 9                                                                # STEP 15
ACTION: int1 = 9 
int1 = 11 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 16
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 17
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 18
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 9                                                                # STEP 19
ACTION: int3 = 9 
int3 = 20 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 20
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 21
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 22
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 10, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 23
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([10, 20]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 25
ACTION: int0 = 18 
int0 = 16 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 26
ACTION: int3 = 13 
int3 = 9 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 27
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 10, 20]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 28
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 29
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 10                                                               # STEP 30
ACTION: int3 = 10 
int3 = 13 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 31
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 32
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 4                                                                # STEP 33
ACTION: int0 = 4 
int0 = 18 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 34
ACTION: int1 = 13 
int1 = 9 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 36
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 10, 20, 13]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 37
ACTION: avl2.insert(int0) 
int0 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 10, 20, 13, 4]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 38
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 39
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 40
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 18                                                               # STEP 41
ACTION: int1 = 18 
int1 = 13 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 42
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([9, 10, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4, 8, 9, 10, 13, 20]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 43
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
==================================================
int0 = 20                                                               # STEP 44
ACTION: int0 = 20 
int0 = 4 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 45
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int3 = 1                                                                # STEP 46
ACTION: int3 = 1 
int3 = 10 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 48
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 49
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 50
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 51
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 8, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([4, 9, 10, 13, 18, 20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 52
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 53
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 54
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([4, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 9, 10, 13, 18, 20]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 55
ACTION: int1 = 19 
int1 = 18 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
int0 = 16                                                               # STEP 56
ACTION: int0 = 16 
int0 = 20 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 57
ACTION: int3 = 11 
int3 = 1 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 58
ACTION: int2 = 18 
int2 = 8 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 59
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 60
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 4, 9, 10, 13, 20]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 61
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 19                                                               # STEP 62
ACTION: int2 = 19 
int2 = 18 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 63
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 64
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 65
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 4, 9, 10, 13, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 66
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 67
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 9, 10, 11, 13, 19, 20]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 68
ACTION: int2 = 2 
int2 = 19 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 69
ACTION: result = avl2.find(int2) 
int2 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int0 = 20                                                               # STEP 70
ACTION: int0 = 20 
int0 = 16 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 71
ACTION: avl2.insert(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 72
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102b916c8> : <type 'instance'>
avl_REF2 = set([1, 4, 9, 10, 11, 13, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 4, 9, 10, 11, 13, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102506290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 41
STOPPING TESTING DUE TO TIMEOUT
8.02208509256 PERCENT COVERED
60.2284390926 TOTAL RUNTIME
7 EXECUTED
614 TOTAL TEST OPERATIONS
26.7071807384 TIME SPENT EXECUTING TEST OPERATIONS
0.0784757137299 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.9225986004 TIME SPENT CHECKING PROPERTIES
53.6297793388 TOTAL TIME SPENT RUNNING SUT
0.00410270690918 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 16                                                                # STEP 0
int2 = 8                                                                 # STEP 1
int1 = 19                                                                # STEP 2
int3 = 10                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int3)                                                        # STEP 5
int3 = 20                                                                # STEP 6
avl2.delete(int1)                                                        # STEP 7
avl2.delete(int1)                                                        # STEP 8
result = avl2.inorder()                                                  # STEP 9
int1 = 11                                                               # STEP 10
avl2.insert(int3)                                                       # STEP 11
avl2.delete(int1)                                                       # STEP 12
result = avl2.inorder()                                                 # STEP 13
avl2.insert(int3)                                                       # STEP 14
int1 = 9                                                                # STEP 15
result = avl2.inorder()                                                 # STEP 16
avl2.insert(int3)                                                       # STEP 17
avl2.delete(int0)                                                       # STEP 18
int3 = 9                                                                # STEP 19
avl2.delete(int3)                                                       # STEP 20
avl2.delete(int0)                                                       # STEP 21
avl2.insert(int3)                                                       # STEP 22
avl2.delete(int2)                                                       # STEP 23
avl2.delete(int3)                                                       # STEP 24
int0 = 18                                                               # STEP 25
int3 = 13                                                               # STEP 26
avl2.insert(int1)                                                       # STEP 27
avl2.insert(int1)                                                       # STEP 28
avl2.delete(int3)                                                       # STEP 29
int3 = 10                                                               # STEP 30
avl2.delete(int0)                                                       # STEP 31
avl2.delete(int0)                                                       # STEP 32
int0 = 4                                                                # STEP 33
int1 = 13                                                               # STEP 34
avl2.delete(int1)                                                       # STEP 35
avl2.insert(int1)                                                       # STEP 36
avl2.insert(int0)                                                       # STEP 37
avl2.insert(int3)                                                       # STEP 38
avl2.insert(int3)                                                       # STEP 39
avl2.insert(int3)                                                       # STEP 40
int1 = 18                                                               # STEP 41
avl2.insert(int2)                                                       # STEP 42
avl2.insert(int1)                                                       # STEP 43
int0 = 20                                                               # STEP 44
avl2.insert(int3)                                                       # STEP 45
int3 = 1                                                                # STEP 46
avl2.insert(int1)                                                       # STEP 47
avl2.insert(int2)                                                       # STEP 48
avl2.insert(int0)                                                       # STEP 49
avl2.insert(int1)                                                       # STEP 50
avl2.delete(int2)                                                       # STEP 51
avl2.insert(int0)                                                       # STEP 52
avl2.delete(int3)                                                       # STEP 53
avl2.insert(int3)                                                       # STEP 54
int1 = 19                                                               # STEP 55
int0 = 16                                                               # STEP 56
int3 = 11                                                               # STEP 57
int2 = 18                                                               # STEP 58
avl2.insert(int2)                                                       # STEP 59
avl2.delete(int2)                                                       # STEP 60
result = avl2.inorder()                                                 # STEP 61
int2 = 19                                                               # STEP 62
avl2.delete(int0)                                                       # STEP 63
avl2.delete(int0)                                                       # STEP 64
avl2.insert(int2)                                                       # STEP 65
avl2.delete(int3)                                                       # STEP 66
avl2.insert(int3)                                                       # STEP 67
int2 = 2                                                                # STEP 68
result = avl2.find(int2)                                                # STEP 69
int0 = 20                                                               # STEP 70
avl2.insert(int1)                                                       # STEP 71
avl2.delete(int1)                                                       # STEP 72
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102506290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
192 BRANCHES COVERED
146 STATEMENTS COVERED
