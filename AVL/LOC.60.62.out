Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.425.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  6 [3:-1]
-- < 2 [1:-1]
---- > 3 [0:0] L
-- > 12 [2:1]
---- < 10 [1:-1]
------ > 11 [0:0] L
---- > 18 [0:0] L
set([2, 3, 6, 10, 11, 12, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c85200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 68 steps

SAVING TEST AS failure.425.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 6                                                                 # STEP 2
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 3
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                        # STEP 4
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 5
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                        # STEP 7
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                        # STEP 9
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 11
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 13
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 15
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 16
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 17
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 14                                                               # STEP 18
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 19
ACTION: int1 = 12 
int1 = 6 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int3 = 10                                                               # STEP 20
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 21
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 22
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 23
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 24
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 25
ACTION: int0 = 18 
int0 = 14 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 26
ACTION: result = avl2.find(int1) 
int1 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12, 6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 28
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 29
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 10                                                               # STEP 30
ACTION: int1 = 10 
int1 = 12 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 31
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 12, 6]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 32
ACTION: int0 = 2 
int0 = 18 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 33
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 14]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 34
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 35
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18, 12, 10, 6]) : <type 'set'>
==================================================
avl1 == avl0                                                            # STEP 36
ACTION: avl1 == avl0 
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF0 = set([18, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 37
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 2, 12, 10, 6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 38
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 2, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 39
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 41
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 42
ACTION: int1 = 18 
int1 = 10 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 43
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10, 18]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 44
ACTION: int0 = 3 
int0 = 2 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 45
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 2, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 46
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 47
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 2, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 48
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 49
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19, 14]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 50
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 2, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 51
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18, 19, 14]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 52
ACTION: result = avl1.find(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([10, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 53
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([18, 2, 12, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 3, 6, 10, 12, 18]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 54
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 55
ACTION: int1 = 11 
int1 = 18 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 56
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 10, 12, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 3, 6, 10, 11, 12, 18]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 57
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 10, 11, 12, 18]) : <type 'set'>
  6 [3:-1]
-- < 2 [1:-1]
---- > 3 [0:0] L
-- > 12 [2:1]
---- < 10 [1:-1]
------ > 11 [0:0] L
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 3, 6, 10, 11, 12, 18])
==================================================
avl2.insert(int2)                                                       # STEP 58
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([18, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
result = avl0.find(int1)                                                # STEP 59
ACTION: result = avl0.find(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e76368> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 10, 11, 12, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 60
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 19]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 61
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 10, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 62
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103e5b7a0> : <type 'instance'>
avl_REF1 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 63
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([18, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 18                                                               # STEP 64
ACTION: int0 = 18 
int0 = 3 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 65
ACTION: result = avl2.find(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([18, 19, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 66
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([18, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 19, 10, 14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 67
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1038aacf8> : <type 'instance'>
avl_REF2 = set([18, 19, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([19, 10, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10392add0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  10 [2:0]
-- < 7 [1:0]
---- < 5 [0:0] L
---- > 9 [0:0] L
-- > 11 [1:-1]
---- > 18 [0:0] L
set([5, 7, 9, 10, 11, 18])
  10 [3:1]
-- < 7 [2:-1]
---- < 5 [0:0] L
---- > 9 [1:1]
------ < 8 [0:0] L
-- > 15 [1:0]
---- < 11 [0:0] L
---- > 18 [0:0] L
set([5, 7, 8, 9, 10, 11, 15, 18])
  10 [3:1]
-- < 7 [2:-1]
---- < 5 [0:0] L
---- > 9 [1:1]
------ < 8 [0:0] L
-- > 15 [1:0]
---- < 11 [0:0] L
---- > 18 [0:0] L
set([5, 7, 8, 9, 10, 11, 15, 18])
  10 [3:0]
-- < 8 [2:1]
---- < 5 [1:1]
------ < 3 [0:0] L
---- > 9 [0:0] L
-- > 15 [2:-1]
---- < 11 [0:0] L
---- > 18 [1:1]
------ < 16 [0:0] L
set([3, 5, 8, 9, 10, 11, 15, 16, 18])
  10 [3:0]
-- < 5 [2:0]
---- < 4 [1:1]
------ < 3 [0:0] L
---- > 8 [1:0]
------ < 7 [0:0] L
------ > 9 [0:0] L
-- > 15 [2:-1]
---- < 11 [0:0] L
---- > 18 [1:1]
------ < 16 [0:0] L
set([3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 18])
  10 [3:1]
-- < 5 [2:0]
---- < 4 [1:1]
------ < 3 [0:0] L
---- > 8 [1:0]
------ < 7 [0:0] L
------ > 9 [0:0] L
-- > 15 [1:0]
---- < 11 [0:0] L
---- > 18 [0:0] L
set([3, 4, 5, 7, 8, 9, 10, 11, 15, 18])
  10 [3:1]
-- < 5 [2:0]
---- < 4 [1:1]
------ < 3 [0:0] L
---- > 8 [1:0]
------ < 7 [0:0] L
------ > 9 [0:0] L
-- > 15 [1:0]
---- < 11 [0:0] L
---- > 18 [0:0] L
set([3, 4, 5, 7, 8, 9, 10, 11, 15, 18])
TEST #4 STEP #36 (0:00:30.039361) Fri Apr 28 06:20:26 2017 [ 161 stmts 214 branches ]
  6 [2:0]
-- < 1 [1:-1]
---- > 3 [0:0] L
-- > 10 [1:0]
---- < 9 [0:0] L
---- > 11 [0:0] L
set([1, 3, 6, 9, 10, 11])
  6 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 10 [1:1]
---- < 9 [0:0] L
set([1, 3, 5, 6, 9, 10])
  6 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 10 [1:1]
---- < 9 [0:0] L
set([1, 3, 5, 6, 9, 10])
  6 [3:1]
-- < 3 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 5 [0:0] L
-- > 10 [1:1]
---- < 9 [0:0] L
set([1, 2, 3, 5, 6, 9, 10])
  6 [3:1]
-- < 3 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 5 [0:0] L
-- > 10 [1:0]
---- < 9 [0:0] L
---- > 15 [0:0] L
set([1, 2, 3, 5, 6, 9, 10, 15])
  6 [3:1]
-- < 3 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 5 [0:0] L
-- > 10 [1:0]
---- < 9 [0:0] L
---- > 15 [0:0] L
set([1, 2, 3, 5, 6, 9, 10, 15])
  7 [2:0]
-- < 4 [1:1]
---- < 1 [0:0] L
-- > 12 [1:0]
---- < 8 [0:0] L
---- > 14 [0:0] L
set([1, 4, 7, 8, 12, 14])
  9 [3:1]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:0]
------ < 6 [0:0] L
------ > 8 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 4, 6, 7, 8, 9, 12, 14, 18])
  9 [3:0]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 14 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([1, 4, 6, 7, 9, 12, 14, 18, 20])
  9 [3:0]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 14 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([1, 4, 6, 7, 9, 12, 14, 18, 20])
  9 [3:0]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 14 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([1, 4, 6, 7, 9, 12, 14, 18, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105859560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 95 steps

SAVING TEST AS failure.425.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 3                                                                 # STEP 0
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 1
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
int1 = 5                                                                 # STEP 2
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
int3 = 8                                                                 # STEP 3
ACTION: int3 = 8 
int3 = None : <type 'NoneType'>
=> int3 = 8 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 5
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 9                                                                 # STEP 6
ACTION: int1 = 9 
int1 = 5 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 7
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 8
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 3]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 9
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 9, 3]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 11
ACTION: result = avl2.find(int3) 
int3 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 12                                                               # STEP 12
ACTION: int3 = 12 
int3 = 8 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 13
ACTION: int1 = 5 
int1 = 9 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 14
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 9                                                                # STEP 15
ACTION: int1 = 9 
int1 = 5 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 16
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 9]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 17
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 18
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 9, 3]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 19
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 9]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 20
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.find(int1)                                                # STEP 21
ACTION: result = avl2.find(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 22
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 23
ACTION: int1 = 4 
int1 = 9 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
int0 = 18                                                               # STEP 24
ACTION: int0 = 18 
int0 = 3 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 25
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 7]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 26
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 4, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 27
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 12, 4, 7]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 28
ACTION: int1 = 14 
int1 = 4 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int2 = 1                                                                # STEP 29
ACTION: int2 = 1 
int2 = 7 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 30
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([8, 12, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4, 7, 8, 12, 14]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 31
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 32
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 33
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 8                                                                # STEP 34
ACTION: int1 = 8 
int1 = 14 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 35
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 36
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 4, 7, 8, 12, 14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 37
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int2 = 17                                                               # STEP 38
ACTION: int2 = 17 
int2 = 1 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl2.display()                                                          # STEP 39
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 12, 14]) : <type 'set'>
  7 [2:0]
-- < 4 [1:1]
---- < 1 [0:0] L
-- > 12 [1:0]
---- < 8 [0:0] L
---- > 14 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([1, 4, 7, 8, 12, 14])
==================================================
int3 = 9                                                                # STEP 40
ACTION: int3 = 9 
int3 = 12 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 41
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 42
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 43
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 44
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int3 = 7                                                                # STEP 45
ACTION: int3 = 7 
int3 = 9 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 46
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1, 4, 8, 9, 12, 14]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 47
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 48
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 49
ACTION: result = avl2.find(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 50
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 51
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 8, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 52
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                 # STEP 53
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int3 = 6                                                                # STEP 54
ACTION: int3 = 6 
int3 = 7 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 55
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 3                                                                # STEP 56
ACTION: int2 = 3 
int2 = 17 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 57
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int2)                                                       # STEP 58
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 14                                                               # STEP 59
ACTION: int2 = 14 
int2 = 3 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 60
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 61
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 62
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2 == avl2                                                            # STEP 63
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 64
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 65
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 4, 7, 9, 12, 14, 18]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 66
ACTION: int2 = 20 
int2 = 14 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 67
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 68
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 69
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 70
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 71
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 72
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18]) : <type 'set'>
==================================================
avl2.display()                                                          # STEP 73
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18]) : <type 'set'>
  9 [3:1]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:0]
------ < 6 [0:0] L
------ > 8 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([1, 4, 6, 7, 8, 9, 12, 14, 18])
==================================================
avl2.delete(int1)                                                       # STEP 74
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 75
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 76
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 77
ACTION: result = avl2.find(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 78
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18, 20]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 79
ACTION: int2 = 19 
int2 = 20 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 80
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 81
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 8, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 82
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.display()                                                          # STEP 83
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
  9 [3:0]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 14 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([1, 4, 6, 7, 9, 12, 14, 18, 20])
==================================================
avl2.insert(int3)                                                       # STEP 84
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 85
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.display()                                                          # STEP 86
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
  9 [3:0]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 14 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([1, 4, 6, 7, 9, 12, 14, 18, 20])
==================================================
avl2.display()                                                          # STEP 87
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
  9 [3:0]
-- < 4 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 14 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([1, 4, 6, 7, 9, 12, 14, 18, 20])
==================================================
avl0.insert(int1)                                                       # STEP 88
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103fe81b8> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 18, 6]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 89
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int0 = 9                                                                # STEP 90
ACTION: int0 = 9 
int0 = 18 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 91
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 92
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 93
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 94
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103fc1128> : <type 'instance'>
avl_REF2 = set([1, 4, 6, 7, 9, 12, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1, 4, 6, 7, 12, 14, 18, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105865908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  7 [2:0]
-- < 3 [1:-1]
---- > 6 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([3, 6, 7, 13, 14, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105844d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 95 steps

SAVING TEST AS failure.425.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 13                                                                # STEP 0
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int0 = 17                                                                # STEP 1
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
int3 = 7                                                                 # STEP 2
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 3
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 6
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                        # STEP 7
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 17                                                                # STEP 8
ACTION: int0 = 17 
int0 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 9
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 11
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13, 7]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 12
ACTION: result = avl1.find(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1 == avl1                                                            # STEP 13
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
result = avl1.inorder()                                                 # STEP 14
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 3                                                                # STEP 16
ACTION: int3 = 3 
int3 = 7 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 17
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 14                                                               # STEP 18
ACTION: int0 = 14 
int0 = 17 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 19
ACTION: int1 = 18 
int1 = 3 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 20
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int3)                                                       # STEP 21
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 13, 7]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 23
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 24
ACTION: int3 = 14 
int3 = 3 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 25
ACTION: int1 = 6 
int1 = 18 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 26
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 27
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 28
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 29
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int2 = 6                                                                # STEP 30
ACTION: int2 = 6 
int2 = 13 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 33
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([18, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 6, 7, 13, 18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 34
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 35
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 36
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.display()                                                          # STEP 37
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
  7 [2:0]
-- < 3 [1:-1]
---- > 6 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 6, 7, 13, 14, 18])
==================================================
result = avl1.find(int1)                                                # STEP 38
ACTION: result = avl1.find(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int3 = 20                                                               # STEP 39
ACTION: int3 = 20 
int3 = 14 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 8                                                                # STEP 40
ACTION: int0 = 8 
int0 = 14 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 41
ACTION: result = avl1.find(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 42
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3, 7, 13, 14, 18]) : <type 'set'>
==================================================
int1 = 6                                                                # STEP 43
ACTION: int1 = 6 
int1 = 6 : <type 'int'>
==================================================
int2 = 1                                                                # STEP 44
ACTION: int2 = 1 
int2 = 6 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 45
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 7, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 7, 8, 13, 14, 18]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 46
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x1058a1320> : <type 'instance'>
avl_REF1 = set([3, 7, 8, 13, 14, 18]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 47
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 48
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 49
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 8                                                                # STEP 50
ACTION: int2 = 8 
int2 = 1 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 51
ACTION: int0 = 1 
int0 = 8 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 6]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 53
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 1, 6]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 54
ACTION: int2 = 13 
int2 = 8 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 55
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 56
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 57
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 58
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 59
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 61
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 8                                                                # STEP 62
ACTION: int1 = 8 
int1 = 6 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 63
ACTION: int2 = 15 
int2 = 13 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 64
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 65
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([8, 1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 6]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 66
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 4                                                                # STEP 67
ACTION: int1 = 4 
int1 = 8 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
int0 = 11                                                               # STEP 68
ACTION: int0 = 11 
int0 = 1 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 69
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 20, 6]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 70
ACTION: result = avl1.find(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 20, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 71
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 11, 20, 6]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 72
ACTION: int0 = 15 
int0 = 11 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 73
ACTION: int2 = 10 
int2 = 15 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 74
ACTION: int3 = 6 
int3 = 20 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 75
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 11, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 76
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 77
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int1)                                                       # STEP 78
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 79
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 12                                                               # STEP 80
ACTION: int3 = 12 
int3 = 6 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 81
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10585fcb0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 82
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 83
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int3)                                                       # STEP 84
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10585fcb0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 85
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10585fcb0> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 12]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 86
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 87
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 88
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 11                                                               # STEP 89
ACTION: int1 = 11 
int1 = 4 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 90
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl0.inorder()                                                 # STEP 91
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10585fcb0> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int3)                                                # STEP 92
ACTION: result = avl0.find(int3) 
int3 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10585fcb0> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int3 = 11                                                               # STEP 93
ACTION: int3 = 11 
int3 = 12 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 94
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10587e440> : <type 'instance'>
avl_REF1 = set([1, 11, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 20, 4]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105856128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
65.0271501541 TOTAL RUNTIME
7 EXECUTED
558 TOTAL TEST OPERATIONS
22.0428352356 TIME SPENT EXECUTING TEST OPERATIONS
0.0569272041321 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.222260952 TIME SPENT CHECKING PROPERTIES
44.2650961876 TOTAL TIME SPENT RUNNING SUT
0.0043637752533 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
avl1 = avl.AVLTree()                                                     # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
int1 = 6                                                                 # STEP 2
avl2 = avl.AVLTree()                                                     # STEP 3
avl1.insert(int1)                                                        # STEP 4
avl2.delete(int1)                                                        # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.insert(int1)                                                        # STEP 7
avl2.delete(int1)                                                        # STEP 8
avl2.insert(int1)                                                        # STEP 9
avl1.delete(int1)                                                       # STEP 10
avl2.delete(int1)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
avl1.insert(int1)                                                       # STEP 13
avl1.delete(int1)                                                       # STEP 14
avl1.delete(int1)                                                       # STEP 15
avl0.insert(int1)                                                       # STEP 16
avl1.delete(int1)                                                       # STEP 17
int0 = 14                                                               # STEP 18
int1 = 12                                                               # STEP 19
int3 = 10                                                               # STEP 20
avl2.delete(int1)                                                       # STEP 21
result = avl2.inorder()                                                 # STEP 22
avl0.delete(int0)                                                       # STEP 23
avl2.insert(int0)                                                       # STEP 24
int0 = 18                                                               # STEP 25
result = avl2.find(int1)                                                # STEP 26
avl0.insert(int1)                                                       # STEP 27
avl1.delete(int1)                                                       # STEP 28
result = avl2.inorder()                                                 # STEP 29
int1 = 10                                                               # STEP 30
avl0.insert(int0)                                                       # STEP 31
int0 = 2                                                                # STEP 32
avl2.insert(int3)                                                       # STEP 33
avl2.delete(int3)                                                       # STEP 34
avl0.insert(int1)                                                       # STEP 35
avl1 == avl0                                                            # STEP 36
avl0.insert(int0)                                                       # STEP 37
avl0.insert(int3)                                                       # STEP 38
avl1.delete(int1)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
int2 = 19                                                               # STEP 41
int1 = 18                                                               # STEP 42
avl1.insert(int1)                                                       # STEP 43
int0 = 3                                                                # STEP 44
avl0.delete(int2)                                                       # STEP 45
avl2.delete(int1)                                                       # STEP 46
avl0.insert(int3)                                                       # STEP 47
avl2.delete(int2)                                                       # STEP 48
avl2.insert(int2)                                                       # STEP 49
avl0.delete(int2)                                                       # STEP 50
avl2.insert(int1)                                                       # STEP 51
result = avl1.find(int1)                                                # STEP 52
avl0.insert(int0)                                                       # STEP 53
avl1.delete(int1)                                                       # STEP 54
int1 = 11                                                               # STEP 55
avl0.insert(int1)                                                       # STEP 56
avl0.display()                                                          # STEP 57
avl2.insert(int2)                                                       # STEP 58
result = avl0.find(int1)                                                # STEP 59
avl1.insert(int2)                                                       # STEP 60
avl1.insert(int1)                                                       # STEP 61
avl1.delete(int0)                                                       # STEP 62
avl2.delete(int0)                                                       # STEP 63
int0 = 18                                                               # STEP 64
result = avl2.find(int3)                                                # STEP 65
avl2.insert(int3)                                                       # STEP 66
avl2.delete(int0)                                                       # STEP 67
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10392add0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int0 = 3                                                                 # STEP 0
int2 = 7                                                                 # STEP 1
int1 = 5                                                                 # STEP 2
int3 = 8                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int1)                                                        # STEP 5
int1 = 9                                                                 # STEP 6
avl2.insert(int3)                                                        # STEP 7
avl2.insert(int0)                                                        # STEP 8
avl2.delete(int1)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
result = avl2.find(int3)                                                # STEP 11
int3 = 12                                                               # STEP 12
int1 = 5                                                                # STEP 13
avl2.delete(int1)                                                       # STEP 14
int1 = 9                                                                # STEP 15
avl2.delete(int0)                                                       # STEP 16
avl2.insert(int1)                                                       # STEP 17
avl2.insert(int0)                                                       # STEP 18
avl2.delete(int0)                                                       # STEP 19
avl2.delete(int0)                                                       # STEP 20
result = avl2.find(int1)                                                # STEP 21
avl2.delete(int1)                                                       # STEP 22
int1 = 4                                                                # STEP 23
int0 = 18                                                               # STEP 24
avl2.insert(int2)                                                       # STEP 25
avl2.insert(int1)                                                       # STEP 26
avl2.insert(int3)                                                       # STEP 27
int1 = 14                                                               # STEP 28
int2 = 1                                                                # STEP 29
avl2.insert(int1)                                                       # STEP 30
avl2.delete(int2)                                                       # STEP 31
avl2.delete(int2)                                                       # STEP 32
result = avl2.inorder()                                                 # STEP 33
int1 = 8                                                                # STEP 34
result = avl2.inorder()                                                 # STEP 35
avl2.insert(int2)                                                       # STEP 36
avl2.insert(int2)                                                       # STEP 37
int2 = 17                                                               # STEP 38
avl2.display()                                                          # STEP 39
int3 = 9                                                                # STEP 40
result = avl2.inorder()                                                 # STEP 41
avl2.insert(int3)                                                       # STEP 42
avl2.delete(int2)                                                       # STEP 43
avl2.insert(int1)                                                       # STEP 44
int3 = 7                                                                # STEP 45
avl2.delete(int3)                                                       # STEP 46
avl2.delete(int3)                                                       # STEP 47
avl2.insert(int3)                                                       # STEP 48
result = avl2.find(int2)                                                # STEP 49
avl2.delete(int2)                                                       # STEP 50
avl2.delete(int1)                                                       # STEP 51
result = avl2.inorder()                                                 # STEP 52
result = avl2.inorder()                                                 # STEP 53
int3 = 6                                                                # STEP 54
avl2.delete(int3)                                                       # STEP 55
int2 = 3                                                                # STEP 56
result = avl2.inorder()                                                 # STEP 57
avl2.delete(int2)                                                       # STEP 58
int2 = 14                                                               # STEP 59
avl2.delete(int1)                                                       # STEP 60
avl2.insert(int2)                                                       # STEP 61
result = avl2.inorder()                                                 # STEP 62
avl2 == avl2                                                            # STEP 63
avl2.delete(int3)                                                       # STEP 64
avl2.insert(int0)                                                       # STEP 65
int2 = 20                                                               # STEP 66
avl2.insert(int3)                                                       # STEP 67
avl0 = avl.AVLTree()                                                    # STEP 68
avl0.insert(int3)                                                       # STEP 69
avl0.delete(int1)                                                       # STEP 70
avl2.delete(int1)                                                       # STEP 71
avl2.insert(int1)                                                       # STEP 72
avl2.display()                                                          # STEP 73
avl2.delete(int1)                                                       # STEP 74
avl0.delete(int2)                                                       # STEP 75
avl2.insert(int1)                                                       # STEP 76
result = avl2.find(int0)                                                # STEP 77
avl2.insert(int2)                                                       # STEP 78
int2 = 19                                                               # STEP 79
avl0.insert(int0)                                                       # STEP 80
avl2.delete(int1)                                                       # STEP 81
avl0.insert(int0)                                                       # STEP 82
avl2.display()                                                          # STEP 83
avl2.insert(int3)                                                       # STEP 84
result = avl0.inorder()                                                 # STEP 85
avl2.display()                                                          # STEP 86
avl2.display()                                                          # STEP 87
avl0.insert(int1)                                                       # STEP 88
avl2.insert(int0)                                                       # STEP 89
int0 = 9                                                                # STEP 90
avl2.delete(int1)                                                       # STEP 91
avl2.delete(int2)                                                       # STEP 92
avl2.delete(int2)                                                       # STEP 93
avl2.delete(int0)                                                       # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105865908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int2 = 13                                                                # STEP 0
int0 = 17                                                                # STEP 1
int3 = 7                                                                 # STEP 2
int1 = 3                                                                 # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int0)                                                        # STEP 5
result = avl1.inorder()                                                  # STEP 6
avl1.delete(int0)                                                        # STEP 7
int0 = 17                                                                # STEP 8
avl1.insert(int3)                                                        # STEP 9
avl1.delete(int2)                                                       # STEP 10
avl1.insert(int2)                                                       # STEP 11
result = avl1.find(int1)                                                # STEP 12
avl1 == avl1                                                            # STEP 13
result = avl1.inorder()                                                 # STEP 14
avl1.insert(int2)                                                       # STEP 15
int3 = 3                                                                # STEP 16
avl1.delete(int0)                                                       # STEP 17
int0 = 14                                                               # STEP 18
int1 = 18                                                               # STEP 19
avl1 == avl1                                                            # STEP 20
avl1.delete(int3)                                                       # STEP 21
avl1.insert(int3)                                                       # STEP 22
avl1.insert(int1)                                                       # STEP 23
int3 = 14                                                               # STEP 24
int1 = 6                                                                # STEP 25
result = avl1.inorder()                                                 # STEP 26
avl1.delete(int3)                                                       # STEP 27
avl1.delete(int1)                                                       # STEP 28
avl1.delete(int3)                                                       # STEP 29
int2 = 6                                                                # STEP 30
avl1.delete(int1)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
avl1.insert(int2)                                                       # STEP 33
avl1.insert(int0)                                                       # STEP 34
avl1.insert(int1)                                                       # STEP 35
avl1.insert(int1)                                                       # STEP 36
avl1.display()                                                          # STEP 37
result = avl1.find(int1)                                                # STEP 38
int3 = 20                                                               # STEP 39
int0 = 8                                                                # STEP 40
result = avl1.find(int2)                                                # STEP 41
avl1.delete(int2)                                                       # STEP 42
int1 = 6                                                                # STEP 43
int2 = 1                                                                # STEP 44
avl1.insert(int0)                                                       # STEP 45
avl1 = avl.AVLTree()                                                    # STEP 46
avl1.insert(int2)                                                       # STEP 47
avl1.delete(int3)                                                       # STEP 48
result = avl1.inorder()                                                 # STEP 49
int2 = 8                                                                # STEP 50
int0 = 1                                                                # STEP 51
avl1.insert(int1)                                                       # STEP 52
avl1.insert(int2)                                                       # STEP 53
int2 = 13                                                               # STEP 54
avl1.insert(int1)                                                       # STEP 55
result = avl1.inorder()                                                 # STEP 56
avl1.insert(int0)                                                       # STEP 57
avl1.insert(int0)                                                       # STEP 58
avl1.insert(int1)                                                       # STEP 59
avl1.delete(int2)                                                       # STEP 60
avl1.delete(int3)                                                       # STEP 61
int1 = 8                                                                # STEP 62
int2 = 15                                                               # STEP 63
avl1.delete(int2)                                                       # STEP 64
avl1.delete(int1)                                                       # STEP 65
avl1.insert(int0)                                                       # STEP 66
int1 = 4                                                                # STEP 67
int0 = 11                                                               # STEP 68
avl1.insert(int3)                                                       # STEP 69
result = avl1.find(int3)                                                # STEP 70
avl1.insert(int0)                                                       # STEP 71
int0 = 15                                                               # STEP 72
int2 = 10                                                               # STEP 73
int3 = 6                                                                # STEP 74
avl1.delete(int3)                                                       # STEP 75
avl1.insert(int1)                                                       # STEP 76
avl1 == avl1                                                            # STEP 77
avl1.insert(int1)                                                       # STEP 78
avl1.delete(int3)                                                       # STEP 79
int3 = 12                                                               # STEP 80
avl0 = avl.AVLTree()                                                    # STEP 81
avl1.delete(int3)                                                       # STEP 82
result = avl1.inorder()                                                 # STEP 83
avl0.insert(int3)                                                       # STEP 84
avl0.insert(int2)                                                       # STEP 85
avl1.delete(int2)                                                       # STEP 86
avl1.delete(int0)                                                       # STEP 87
avl1.delete(int3)                                                       # STEP 88
int1 = 11                                                               # STEP 89
result = avl1.inorder()                                                 # STEP 90
result = avl0.inorder()                                                 # STEP 91
result = avl0.find(int3)                                                # STEP 92
int3 = 11                                                               # STEP 93
avl1.delete(int3)                                                       # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105856128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
