Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.586.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [3:-1]
-- < 10 [1:1]
---- < 1 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([1, 10, 11, 16, 17, 19, 20])
  11 [3:-1]
-- < 7 [1:0]
---- < 1 [0:0] L
---- > 10 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([1, 7, 10, 11, 16, 17, 19, 20])
  11 [3:-1]
-- < 7 [1:0]
---- < 1 [0:0] L
---- > 10 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([1, 7, 10, 11, 16, 17, 19, 20])
  13 [2:0]
-- < 10 [1:-1]
---- > 12 [0:0] L
-- > 17 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([10, 12, 13, 15, 17, 20])
  7 [2:0]
-- < 1 [1:-1]
---- > 6 [0:0] L
-- > 12 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
set([1, 6, 7, 9, 12, 16])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1059b37a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 98 steps

SAVING TEST AS failure.586.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 15                                                                # STEP 0
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 7                                                                 # STEP 1
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
int2 = 12                                                                # STEP 2
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
int3 = 15                                                                # STEP 3
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
int0 = 20                                                                # STEP 6
ACTION: int0 = 20 
int0 = 7 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                        # STEP 7
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([20, 7]) : <type 'set'>
==================================================
int0 = 12                                                                # STEP 8
ACTION: int0 = 12 
int0 = 20 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int0)                                                        # STEP 9
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 6                                                                # STEP 10
ACTION: int0 = 6 
int0 = 12 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([20, 6, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 11                                                               # STEP 13
ACTION: int0 = 11 
int0 = 6 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 14
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 15
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 20, 6, 7]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 16
ACTION: int2 = 18 
int2 = 12 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
int3 = 19                                                               # STEP 17
ACTION: int3 = 19 
int3 = 15 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 18
ACTION: int0 = 19 
int0 = 11 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 19
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([11, 20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([19, 11, 20, 6, 7]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 20
ACTION: int0 = 9 
int0 = 19 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([19, 11, 20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([6, 7, 9, 11, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 9, 11, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 18                                                               # STEP 23
ACTION: int2 = 18 
int2 = 18 : <type 'int'>
==================================================
int0 = 13                                                               # STEP 24
ACTION: int0 = 13 
int0 = 9 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 25
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 26
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 27
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 28
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 29
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 9, 11, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 8                                                                # STEP 30
ACTION: int0 = 8 
int0 = 13 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 31
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 9, 11, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([6, 7, 8, 9, 11, 19, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 32
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 8, 9, 11, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([6, 7, 8, 9, 11, 18, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 33
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 34
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 13                                                               # STEP 35
ACTION: int1 = 13 
int1 = 15 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 36
ACTION: int2 = 4 
int2 = 18 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int0 = 3                                                                # STEP 37
ACTION: int0 = 3 
int0 = 8 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 39
ACTION: int2 = 11 
int2 = 4 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 40
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 8, 9, 11, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([6, 7, 8, 9, 18, 19, 20]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 42
ACTION: int2 = 2 
int2 = 11 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 43
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 8, 9, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 14                                                               # STEP 46
ACTION: int3 = 14 
int3 = 19 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 47
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 48
ACTION: int1 = 7 
int1 = 13 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 49
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 50
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
int0 = 16                                                               # STEP 51
ACTION: int0 = 16 
int0 = 3 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 52
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4, 7]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 53
ACTION: int1 = 14 
int1 = 7 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 54
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 55
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([6, 7, 8, 9, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 6, 7, 8, 9, 18, 19, 20]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 56
ACTION: int3 = 11 
int3 = 14 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 57
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 9, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 6, 7, 8, 9, 11, 18, 19, 20]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 58
ACTION: int3 = 1 
int3 = 11 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 59
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 7]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 60
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 3]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 61
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 2                                                                # STEP 62
ACTION: int3 = 2 
int3 = 1 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 63
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 10                                                               # STEP 64
ACTION: int2 = 10 
int2 = 2 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 65
ACTION: int0 = 19 
int0 = 16 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 66
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 12                                                               # STEP 67
ACTION: int3 = 12 
int3 = 2 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 68
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 9, 11, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 6, 7, 8, 9, 11, 12, 18, 19, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 69
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 70
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 4, 14, 7]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 71
ACTION: int1 = 15 
int1 = 14 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 72
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 10, 4, 14, 7]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 73
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 9, 11, 12, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 74
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 10, 4, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 4, 7, 10, 12, 14]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 75
ACTION: int2 = 16 
int2 = 10 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 76
ACTION: int3 = 6 
int3 = 12 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 77
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 78
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([19, 2, 3]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 79
ACTION: int0 = 11 
int0 = 19 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 80
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 9, 11, 12, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 81
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105984b48> : <type 'instance'>
avl_REF1 = set([19, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 82
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 9, 11, 12, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 6, 7, 8, 9, 12, 18, 19, 20]) : <type 'set'>
==================================================
int1 = 6                                                                # STEP 83
ACTION: int1 = 6 
int1 = 15 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 84
ACTION: int2 = 11 
int2 = 16 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int0 = 8                                                                # STEP 85
ACTION: int0 = 8 
int0 = 11 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 86
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 9, 12, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 7, 8, 9, 12, 18, 19, 20]) : <type 'set'>
==================================================
int3 = 10                                                               # STEP 87
ACTION: int3 = 10 
int3 = 6 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 88
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 7, 8, 9, 12, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 7, 8, 9, 11, 12, 18, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 89
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 10, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 90
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a693f8> : <type 'instance'>
avl_REF0 = set([2, 7, 8, 9, 11, 12, 18, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int2 = 17                                                               # STEP 91
ACTION: int2 = 17 
int2 = 11 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 92
ACTION: int0 = 19 
int0 = 8 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 93
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 10, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 4, 7, 10, 12, 14, 17]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 94
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 10, 12, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 4, 7, 10, 12, 14, 17, 19]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 95
ACTION: int0 = 1 
int0 = 19 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 96
ACTION: int2 = 17 
int2 = 17 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 97
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10599a1b8> : <type 'instance'>
avl_REF2 = set([1, 4, 7, 10, 12, 14, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1, 4, 7, 12, 14, 17, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105a1d290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:30.985898) Fri Apr 28 06:43:55 2017 [ 164 stmts 220 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 50
STOPPING TESTING DUE TO TIMEOUT
8.72073294876 PERCENT COVERED
60.1662139893 TOTAL RUNTIME
7 EXECUTED
648 TOTAL TEST OPERATIONS
26.0780217648 TIME SPENT EXECUTING TEST OPERATIONS
0.0247225761414 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.2248775959 TIME SPENT CHECKING PROPERTIES
52.3028993607 TOTAL TIME SPENT RUNNING SUT
0.00399208068848 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 15                                                                # STEP 0
int0 = 7                                                                 # STEP 1
int2 = 12                                                                # STEP 2
int3 = 15                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int0)                                                        # STEP 5
int0 = 20                                                                # STEP 6
avl0.insert(int0)                                                        # STEP 7
int0 = 12                                                                # STEP 8
avl0.delete(int0)                                                        # STEP 9
int0 = 6                                                                # STEP 10
avl0.insert(int0)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
int0 = 11                                                               # STEP 13
avl0.delete(int2)                                                       # STEP 14
avl0.insert(int0)                                                       # STEP 15
int2 = 18                                                               # STEP 16
int3 = 19                                                               # STEP 17
int0 = 19                                                               # STEP 18
avl0.insert(int0)                                                       # STEP 19
int0 = 9                                                                # STEP 20
avl0.insert(int0)                                                       # STEP 21
avl0.delete(int2)                                                       # STEP 22
int2 = 18                                                               # STEP 23
int0 = 13                                                               # STEP 24
avl2 = avl.AVLTree()                                                    # STEP 25
avl2.delete(int0)                                                       # STEP 26
avl2.delete(int0)                                                       # STEP 27
avl2.delete(int0)                                                       # STEP 28
avl0.delete(int0)                                                       # STEP 29
int0 = 8                                                                # STEP 30
avl0.insert(int0)                                                       # STEP 31
avl0.insert(int2)                                                       # STEP 32
avl2.delete(int2)                                                       # STEP 33
avl2.delete(int1)                                                       # STEP 34
int1 = 13                                                               # STEP 35
int2 = 4                                                                # STEP 36
int0 = 3                                                                # STEP 37
avl2.insert(int2)                                                       # STEP 38
int2 = 11                                                               # STEP 39
avl1 = avl.AVLTree()                                                    # STEP 40
avl0.delete(int2)                                                       # STEP 41
int2 = 2                                                                # STEP 42
avl0.insert(int3)                                                       # STEP 43
avl1.delete(int1)                                                       # STEP 44
avl1.delete(int3)                                                       # STEP 45
int3 = 14                                                               # STEP 46
avl1.insert(int0)                                                       # STEP 47
int1 = 7                                                                # STEP 48
avl1.delete(int0)                                                       # STEP 49
avl1.insert(int0)                                                       # STEP 50
int0 = 16                                                               # STEP 51
avl2.insert(int1)                                                       # STEP 52
int1 = 14                                                               # STEP 53
avl1.delete(int3)                                                       # STEP 54
avl0.insert(int2)                                                       # STEP 55
int3 = 11                                                               # STEP 56
avl0.insert(int3)                                                       # STEP 57
int3 = 1                                                                # STEP 58
avl2.insert(int3)                                                       # STEP 59
avl1.insert(int2)                                                       # STEP 60
avl2.delete(int2)                                                       # STEP 61
int3 = 2                                                                # STEP 62
avl1.delete(int0)                                                       # STEP 63
int2 = 10                                                               # STEP 64
int0 = 19                                                               # STEP 65
avl2.delete(int3)                                                       # STEP 66
int3 = 12                                                               # STEP 67
avl0.insert(int3)                                                       # STEP 68
avl1.delete(int3)                                                       # STEP 69
avl2.insert(int1)                                                       # STEP 70
int1 = 15                                                               # STEP 71
avl2.insert(int2)                                                       # STEP 72
avl0.delete(int2)                                                       # STEP 73
avl2.insert(int3)                                                       # STEP 74
int2 = 16                                                               # STEP 75
int3 = 6                                                                # STEP 76
avl1.delete(int0)                                                       # STEP 77
avl1.insert(int0)                                                       # STEP 78
int0 = 11                                                               # STEP 79
avl0.delete(int1)                                                       # STEP 80
avl1.delete(int2)                                                       # STEP 81
avl0.delete(int0)                                                       # STEP 82
int1 = 6                                                                # STEP 83
int2 = 11                                                               # STEP 84
int0 = 8                                                                # STEP 85
avl0.delete(int3)                                                       # STEP 86
int3 = 10                                                               # STEP 87
avl0.insert(int2)                                                       # STEP 88
avl2.delete(int2)                                                       # STEP 89
avl0.insert(int0)                                                       # STEP 90
int2 = 17                                                               # STEP 91
int0 = 19                                                               # STEP 92
avl2.insert(int2)                                                       # STEP 93
avl2.insert(int0)                                                       # STEP 94
int0 = 1                                                                # STEP 95
int2 = 17                                                               # STEP 96
avl2.delete(int3)                                                       # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105a1d290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
220 BRANCHES COVERED
164 STATEMENTS COVERED
