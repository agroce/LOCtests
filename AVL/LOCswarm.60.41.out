Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40589.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1051a7dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 91 steps

SAVING TEST AS failure.40589.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 11                                                                # STEP 0
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 1
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
int1 = 8                                                                 # STEP 2
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 3
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 5
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0 = avl.AVLTree()                                                     # STEP 6
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 7                                                                 # STEP 7
ACTION: int2 = 7 
int2 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 8
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.delete(int0)                                                        # STEP 9
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 8                                                                # STEP 10
ACTION: int3 = 8 
int3 = 12 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 11
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 12
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 13
ACTION: int0 = 17 
int0 = 11 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 14
ACTION: result = avl0.find(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 15
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 7                                                                # STEP 18
ACTION: int3 = 7 
int3 = 8 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 19
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 7]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 20
ACTION: int2 = 15 
int2 = 7 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 15, 7]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 22
ACTION: int3 = 2 
int3 = 7 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 23
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl0.find(int3)                                                # STEP 24
ACTION: result = avl0.find(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 15, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 25
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 26
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 27
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 11                                                               # STEP 28
ACTION: int0 = 11 
int0 = 17 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 15, 7]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 30
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 11, 15, 7]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 31
ACTION: int2 = 3 
int2 = 15 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 32
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([8, 11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([11, 15, 7]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 33
ACTION: result = avl0.find(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 34
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 5                                                                # STEP 35
ACTION: int3 = 5 
int3 = 2 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 36
ACTION: int1 = 10 
int1 = 8 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 37
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 7                                                                # STEP 38
ACTION: int2 = 7 
int2 = 3 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 40
ACTION: int0 = 1 
int0 = 11 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 41
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 13                                                               # STEP 42
ACTION: int2 = 13 
int2 = 7 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 43
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 13]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 44
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 45
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 10, 13]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 46
ACTION: result = avl2.find(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 10, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 8                                                                # STEP 47
ACTION: int3 = 8 
int3 = 5 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int1 = 17                                                               # STEP 48
ACTION: int1 = 17 
int1 = 10 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 49
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 15, 17, 7]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 50
ACTION: result = avl0.find(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 17, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 51
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([8, 10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([10, 13]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 52
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 17, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([11, 15, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 53
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 16                                                               # STEP 54
ACTION: int1 = 16 
int1 = 17 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 15, 1, 7]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 56
ACTION: int3 = 1 
int3 = 8 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 57
ACTION: result = avl0.find(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 1, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 58
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11, 15, 7]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 59
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 15, 1, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 60
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([11, 15, 1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 7, 11, 13, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 61
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 62
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([1, 7, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([7, 11, 13, 15]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 63
ACTION: int0 = 4 
int0 = 1 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 64
ACTION: int1 = 2 
int1 = 16 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 65
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 66
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 67
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 68
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([7, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 7, 11, 13, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 69
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 70
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 71
ACTION: avl2.insert(int0) 
int0 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 4]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 72
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([1, 7, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 3                                                                # STEP 73
ACTION: int0 = 3 
int0 = 4 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 74
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 3]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 75
ACTION: int3 = 15 
int3 = 1 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int0 = 4                                                                # STEP 76
ACTION: int0 = 4 
int0 = 3 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 77
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([10, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 78
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 3]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 79
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([1, 7, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 7, 11, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 80
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 15]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 81
ACTION: int3 = 19 
int3 = 15 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 82
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int2 = 12                                                               # STEP 83
ACTION: int2 = 12 
int2 = 13 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 84
ACTION: result = avl1.find(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1, 2, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 85
ACTION: avl1.delete(int0) 
int0 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10510fea8> : <type 'instance'>
avl_REF1 = set([1, 2, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 86
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([1, 7, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 15                                                               # STEP 87
ACTION: int1 = 15 
int1 = 2 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 88
ACTION: int3 = 4 
int3 = 19 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 89
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104bf54d0> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10, 12, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 90
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104bf5a70> : <type 'instance'>
avl_REF0 = set([1, 7, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 7, 11]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10515bb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #30 (0:00:30.007241) Mon May  1 02:30:13 2017 [ 131 stmts 173 branches ]
  13 [2:0]
-- < 11 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([1, 11, 13, 17, 18, 20])
  13 [2:0]
-- < 11 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([1, 11, 13, 17, 18, 20])
  13 [2:0]
-- < 11 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([1, 11, 13, 17, 18, 20])
  13 [2:0]
-- < 11 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([1, 11, 13, 17, 18, 20])
  13 [2:0]
-- < 11 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([1, 11, 13, 17, 18, 20])
  13 [2:0]
-- < 11 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([1, 11, 13, 17, 18, 20])
  13 [3:-1]
-- < 4 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 18 [2:-1]
---- < 17 [0:0] L
---- > 20 [1:1]
------ < 19 [0:0] L
set([1, 4, 11, 13, 17, 18, 19, 20])
  13 [3:-1]
-- < 4 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 18 [2:-1]
---- < 17 [0:0] L
---- > 20 [1:1]
------ < 19 [0:0] L
set([1, 4, 11, 13, 17, 18, 19, 20])
  11 [2:0]
-- < 9 [1:-1]
---- > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([9, 10, 11, 12, 14, 18])
  11 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 9, 10, 11, 12, 14, 18])
  11 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 9, 10, 11, 12, 14, 18])
  11 [3:1]
-- < 9 [2:1]
---- < 1 [1:-1]
------ > 4 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 4, 9, 10, 11, 12, 14, 18])
  11 [3:1]
-- < 9 [2:1]
---- < 1 [1:-1]
------ > 4 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 4, 9, 10, 11, 12, 14, 18])
  12 [2:0]
-- < 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 19 [0:0] L
set([7, 9, 10, 12, 14, 15, 19])
  12 [2:0]
-- < 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 19 [0:0] L
set([7, 9, 10, 12, 14, 15, 19])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 39
STOPPING TESTING DUE TO TIMEOUT
8.67164663852 PERCENT COVERED
60.2211091518 TOTAL RUNTIME
6 EXECUTED
530 TOTAL TEST OPERATIONS
25.4806516171 TIME SPENT EXECUTING TEST OPERATIONS
0.0649251937866 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.611232996 TIME SPENT CHECKING PROPERTIES
51.091884613 TOTAL TIME SPENT RUNNING SUT
0.00355768203735 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 11                                                                # STEP 0
int2 = 7                                                                 # STEP 1
int1 = 8                                                                 # STEP 2
int3 = 12                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int2)                                                        # STEP 5
avl0 = avl.AVLTree()                                                     # STEP 6
int2 = 7                                                                 # STEP 7
avl0.delete(int3)                                                        # STEP 8
avl2.delete(int0)                                                        # STEP 9
int3 = 8                                                                # STEP 10
avl2.insert(int1)                                                       # STEP 11
avl0.insert(int2)                                                       # STEP 12
int0 = 17                                                               # STEP 13
result = avl0.find(int3)                                                # STEP 14
avl0.delete(int3)                                                       # STEP 15
avl0.insert(int3)                                                       # STEP 16
avl2.delete(int2)                                                       # STEP 17
int3 = 7                                                                # STEP 18
avl2.insert(int3)                                                       # STEP 19
int2 = 15                                                               # STEP 20
avl0.insert(int2)                                                       # STEP 21
int3 = 2                                                                # STEP 22
avl2.delete(int2)                                                       # STEP 23
result = avl0.find(int3)                                                # STEP 24
avl0.delete(int0)                                                       # STEP 25
avl0.delete(int2)                                                       # STEP 26
avl2.delete(int2)                                                       # STEP 27
int0 = 11                                                               # STEP 28
avl0.insert(int2)                                                       # STEP 29
avl0.insert(int0)                                                       # STEP 30
int2 = 3                                                                # STEP 31
avl0.delete(int1)                                                       # STEP 32
result = avl0.find(int3)                                                # STEP 33
avl0.insert(int0)                                                       # STEP 34
int3 = 5                                                                # STEP 35
int1 = 10                                                               # STEP 36
avl2.delete(int2)                                                       # STEP 37
int2 = 7                                                                # STEP 38
avl2.delete(int2)                                                       # STEP 39
int0 = 1                                                                # STEP 40
avl2.delete(int2)                                                       # STEP 41
int2 = 13                                                               # STEP 42
avl2.insert(int2)                                                       # STEP 43
avl0.delete(int1)                                                       # STEP 44
avl2.insert(int1)                                                       # STEP 45
result = avl2.find(int3)                                                # STEP 46
int3 = 8                                                                # STEP 47
int1 = 17                                                               # STEP 48
avl0.insert(int1)                                                       # STEP 49
result = avl0.find(int2)                                                # STEP 50
avl2.delete(int3)                                                       # STEP 51
avl0.delete(int1)                                                       # STEP 52
avl0.delete(int3)                                                       # STEP 53
int1 = 16                                                               # STEP 54
avl0.insert(int0)                                                       # STEP 55
int3 = 1                                                                # STEP 56
result = avl0.find(int1)                                                # STEP 57
avl0.delete(int3)                                                       # STEP 58
avl0.insert(int3)                                                       # STEP 59
avl0.insert(int2)                                                       # STEP 60
avl2.delete(int2)                                                       # STEP 61
avl0.delete(int0)                                                       # STEP 62
int0 = 4                                                                # STEP 63
int1 = 2                                                                # STEP 64
avl1 = avl.AVLTree()                                                    # STEP 65
avl1.insert(int3)                                                       # STEP 66
avl2.delete(int2)                                                       # STEP 67
avl0.insert(int3)                                                       # STEP 68
avl1.delete(int1)                                                       # STEP 69
avl1.insert(int3)                                                       # STEP 70
avl2.insert(int0)                                                       # STEP 71
avl0.delete(int1)                                                       # STEP 72
int0 = 3                                                                # STEP 73
avl1.insert(int0)                                                       # STEP 74
int3 = 15                                                               # STEP 75
int0 = 4                                                                # STEP 76
avl2.delete(int0)                                                       # STEP 77
avl1.insert(int1)                                                       # STEP 78
avl0.delete(int2)                                                       # STEP 79
avl2.insert(int3)                                                       # STEP 80
int3 = 19                                                               # STEP 81
avl1.insert(int1)                                                       # STEP 82
int2 = 12                                                               # STEP 83
result = avl1.find(int1)                                                # STEP 84
avl1.delete(int0)                                                       # STEP 85
avl0.delete(int3)                                                       # STEP 86
int1 = 15                                                               # STEP 87
int3 = 4                                                                # STEP 88
avl2.insert(int2)                                                       # STEP 89
avl0.delete(int1)                                                       # STEP 90
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10515bb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
210 BRANCHES COVERED
159 STATEMENTS COVERED
