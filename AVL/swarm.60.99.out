Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.1119.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ca5878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 56 steps

SAVING TEST AS failure.1119.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 20                                                                # STEP 1
ACTION: int1 = 20 
int1 = None : <type 'NoneType'>
=> int1 = 20 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 16                                                                # STEP 3
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
int0 = 5                                                                 # STEP 4
ACTION: int0 = 5 
int0 = None : <type 'NoneType'>
=> int0 = 5 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 5
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 6
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 7
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 8
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 19                                                                # STEP 9
ACTION: int2 = 19 
int2 = 5 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 10
ACTION: int1 = 12 
int1 = 20 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 11
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 2                                                                # STEP 12
ACTION: int2 = 2 
int2 = 19 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 13
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 14
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 12                                                               # STEP 16
ACTION: int1 = 12 
int1 = 12 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 17
ACTION: int2 = 15 
int2 = 2 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 18
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 2]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 19
ACTION: int3 = 2 
int3 = 16 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 20
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 21
ACTION: int2 = 7 
int2 = 15 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 20]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 23
ACTION: int3 = 3 
int3 = 2 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 24
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 2, 7]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 26
ACTION: int3 = 5 
int3 = 3 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12, 2, 20]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 28
ACTION: int1 = 9 
int1 = 12 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 29
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([5, 15]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 30
ACTION: int2 = 6 
int2 = 7 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 31
ACTION: int0 = 15 
int0 = 5 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 33
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([12, 2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([12, 2, 20, 15]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 34
ACTION: int1 = 8 
int1 = 9 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 35
ACTION: int0 = 6 
int0 = 15 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 36
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([12, 2, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 2, 3, 6, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 38
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([12, 2, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12, 2, 20, 6, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 39
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([12, 2, 20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 13                                                               # STEP 40
ACTION: int1 = 13 
int1 = 8 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 41
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 3, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 42
ACTION: int0 = 1 
int0 = 6 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 43
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 44
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([12, 2, 20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 6, 12, 13, 15, 20]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 46
ACTION: int1 = 7 
int1 = 13 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 47
ACTION: int0 = 1 
int0 = 1 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 48
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103c77e18> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 15                                                               # STEP 49
ACTION: int2 = 15 
int2 = 6 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 50
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([2, 6, 12, 13, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 6, 7, 12, 13, 15, 20]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 51
ACTION: int3 = 1 
int3 = 5 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 52
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1027cd5a8> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 12, 13, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 2                                                                # STEP 53
ACTION: int2 = 2 
int2 = 15 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 54
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 55
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x102602e18> : <type 'instance'>
avl_REF1 = set([16, 2, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 2, 3]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e00488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #70 (0:00:30.035472) Fri Apr 28 08:15:41 2017 [ 149 stmts 198 branches ]
  7 [3:-1]
-- < 6 [1:1]
---- < 2 [0:0] L
-- > 14 [2:-1]
---- < 13 [0:0] L
---- > 19 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 6, 7, 13, 14, 16, 19, 20])
  12 [2:0]
-- < 11 [1:1]
---- < 2 [0:0] L
-- > 15 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([2, 11, 12, 13, 15, 18])
  12 [3:1]
-- < 7 [2:1]
---- < 2 [1:-1]
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 15 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([2, 6, 7, 11, 12, 13, 15, 18])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 58
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.2183539867 TOTAL RUNTIME
8 EXECUTED
714 TOTAL TEST OPERATIONS
27.6513843536 TIME SPENT EXECUTING TEST OPERATIONS
0.0252079963684 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.8172101974 TIME SPENT CHECKING PROPERTIES
55.4685945511 TOTAL TIME SPENT RUNNING SUT
0.00419688224792 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
avl2 = avl.AVLTree()                                                     # STEP 0
int1 = 20                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
int3 = 16                                                                # STEP 3
int0 = 5                                                                 # STEP 4
int2 = 5                                                                 # STEP 5
avl0 = avl.AVLTree()                                                     # STEP 6
avl0.insert(int1)                                                        # STEP 7
avl1.delete(int2)                                                        # STEP 8
int2 = 19                                                                # STEP 9
int1 = 12                                                               # STEP 10
avl2.delete(int2)                                                       # STEP 11
int2 = 2                                                                # STEP 12
avl1.insert(int2)                                                       # STEP 13
avl2.delete(int1)                                                       # STEP 14
avl1.insert(int2)                                                       # STEP 15
int1 = 12                                                               # STEP 16
int2 = 15                                                               # STEP 17
avl1.insert(int3)                                                       # STEP 18
int3 = 2                                                                # STEP 19
avl2.insert(int2)                                                       # STEP 20
int2 = 7                                                                # STEP 21
avl0.insert(int3)                                                       # STEP 22
int3 = 3                                                                # STEP 23
avl1.insert(int2)                                                       # STEP 24
avl1.insert(int3)                                                       # STEP 25
int3 = 5                                                                # STEP 26
avl0.insert(int1)                                                       # STEP 27
int1 = 9                                                                # STEP 28
avl2.insert(int0)                                                       # STEP 29
int2 = 6                                                                # STEP 30
int0 = 15                                                               # STEP 31
avl1.delete(int1)                                                       # STEP 32
avl0.insert(int0)                                                       # STEP 33
int1 = 8                                                                # STEP 34
int0 = 6                                                                # STEP 35
avl0.delete(int0)                                                       # STEP 36
avl1.insert(int2)                                                       # STEP 37
avl0.insert(int2)                                                       # STEP 38
avl0.delete(int1)                                                       # STEP 39
int1 = 13                                                               # STEP 40
avl1.delete(int2)                                                       # STEP 41
int0 = 1                                                                # STEP 42
avl2.delete(int0)                                                       # STEP 43
avl1.delete(int3)                                                       # STEP 44
avl0.insert(int1)                                                       # STEP 45
int1 = 7                                                                # STEP 46
int0 = 1                                                                # STEP 47
avl2.delete(int2)                                                       # STEP 48
int2 = 15                                                               # STEP 49
avl0.insert(int1)                                                       # STEP 50
int3 = 1                                                                # STEP 51
avl0.insert(int2)                                                       # STEP 52
int2 = 2                                                                # STEP 53
avl1.delete(int3)                                                       # STEP 54
avl1.delete(int1)                                                       # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e00488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
