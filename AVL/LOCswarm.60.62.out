Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.42697.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1048701b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 71 steps

SAVING TEST AS failure.42697.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 2                                                                 # STEP 0
ACTION: int3 = 2 
int3 = None : <type 'NoneType'>
=> int3 = 2 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 1
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
int2 = 9                                                                 # STEP 2
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
int0 = 11                                                                # STEP 3
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1 == avl1                                                             # STEP 6
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 11]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 9
ACTION: avl1.delete(int3) 
int3 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 11
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 12
ACTION: avl1.insert(int3) 
int3 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 13
ACTION: int2 = 9 
int2 = 9 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 12]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 15
ACTION: int0 = 17 
int0 = 11 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 16
ACTION: int1 = 15 
int1 = 12 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 5                                                                # STEP 17
ACTION: int3 = 5 
int3 = 2 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 18
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 20
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 12, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 2, 12, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 23
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([17, 2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([17, 2, 12]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 24
ACTION: int0 = 3 
int0 = 17 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 25
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 26
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([17, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 27
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 28
ACTION: avl2.delete(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2 == avl2                                                            # STEP 29
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl1.insert(int1)                                                       # STEP 30
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([17, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 12, 15, 17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 19                                                               # STEP 32
ACTION: int0 = 19 
int0 = 3 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 33
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([2, 12, 17]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 34
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 35
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 36
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 9                                                                # STEP 37
ACTION: int2 = 9 
int2 = 9 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 38
ACTION: int3 = 4 
int3 = 5 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 39
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 6                                                                # STEP 40
ACTION: int3 = 6 
int3 = 4 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 41
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 42
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 6, 12, 17]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 43
ACTION: int1 = 7 
int1 = 15 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 44
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 45
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 47
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 3, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 48
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 13                                                               # STEP 49
ACTION: int0 = 13 
int0 = 19 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 50
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 6, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([2, 12, 17]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 51
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 3, 6, 15]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 52
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([9, 3, 15]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 53
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int2 = 2                                                                # STEP 54
ACTION: int2 = 2 
int2 = 9 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 55
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 56
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 12, 13, 17]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 57
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 58
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 7, 12, 13, 17]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 59
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 60
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 7, 12, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([2, 12, 13, 17]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 61
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 62
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 2]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 63
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 64
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 65
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 3, 6, 15]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 66
ACTION: int0 = 2 
int0 = 13 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 67
ACTION: avl2.delete(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1041ef128> : <type 'instance'>
avl_REF2 = set([9, 3, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 13                                                               # STEP 68
ACTION: int0 = 13 
int0 = 2 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 69
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045500e0> : <type 'instance'>
avl_REF0 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 70
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1048a9a70> : <type 'instance'>
avl_REF1 = set([2, 12, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([12, 13, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104193170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104618998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 65 steps

SAVING TEST AS failure.42697.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 2                                                                 # STEP 0
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
int3 = 7                                                                 # STEP 1
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 2
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int1 = 1                                                                 # STEP 3
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 5
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                        # STEP 6
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 7
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                        # STEP 8
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 7]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 9
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 10
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 12, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 12
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([12, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 17
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 20
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 12]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 21
ACTION: int1 = 3 
int1 = 1 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
int0 = 13                                                               # STEP 22
ACTION: int0 = 13 
int0 = 12 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 23
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 10                                                               # STEP 24
ACTION: int2 = 10 
int2 = 2 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 26
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 12, 13]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 27
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 28
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 29
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 12]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 30
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 12]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 32
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 4                                                                # STEP 33
ACTION: int1 = 4 
int1 = 3 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 34
ACTION: int3 = 3 
int3 = 7 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 35
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 36
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 37
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 4, 12]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 38
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 39
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 40
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 41
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 42
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 43
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([13]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 44
ACTION: int1 = 12 
int1 = 4 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 45
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 46
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 47
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 48
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 49
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 12]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 50
ACTION: int1 = 2 
int1 = 12 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
int0 = 8                                                                # STEP 51
ACTION: int0 = 8 
int0 = 13 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 3, 4, 12]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 53
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 54
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 1                                                                # STEP 55
ACTION: int1 = 1 
int1 = 2 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 56
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 57
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 58
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 10, 12]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 59
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([8, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 10, 3, 12]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 60
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104618200> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 61
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([8, 10, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 3, 8, 10, 12]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 62
ACTION: int0 = 12 
int0 = 8 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 63
ACTION: int1 = 5 
int1 = 1 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 64
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046e9cb0> : <type 'instance'>
avl_REF0 = set([1, 3, 8, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 3, 8, 10]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104358ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104835170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 26 steps

SAVING TEST AS failure.42697.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 14                                                                # STEP 0
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 2                                                                 # STEP 2
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 3
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 4
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 16                                                                # STEP 5
ACTION: int1 = 16 
int1 = 2 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.delete(int0)                                                        # STEP 6
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                        # STEP 7
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 8
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 14]) : <type 'set'>
==================================================
avl2 == avl2                                                             # STEP 9
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int3)                                                       # STEP 10
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 11
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 12
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 13
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([16]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 14
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 9                                                                # STEP 15
ACTION: int1 = 9 
int1 = 16 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 16
ACTION: int3 = 1 
int3 = 14 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 17
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 18
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.find(int1)                                                # STEP 19
ACTION: result = avl2.find(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 20
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 12]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 21
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 22
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 1, 12]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 23
ACTION: int0 = 19 
int0 = 12 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 24
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 1, 19, 12]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 25
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104835d88> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([16, 19, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10477dd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #4 STEP #9 (0:00:30.063897) Mon May  1 02:51:37 2017 [ 147 stmts 194 branches ]
  7 [2:0]
-- < 5 [1:1]
---- < 1 [0:0] L
-- > 13 [1:0]
---- < 8 [0:0] L
---- > 15 [0:0] L
set([1, 5, 7, 8, 13, 15])
  7 [2:0]
-- < 5 [1:1]
---- < 1 [0:0] L
-- > 13 [1:0]
---- < 8 [0:0] L
---- > 15 [0:0] L
set([1, 5, 7, 8, 13, 15])
  17 [2:0]
-- < 7 [1:0]
---- < 4 [0:0] L
---- > 9 [0:0] L
-- > 19 [1:-1]
---- > 20 [0:0] L
set([4, 7, 9, 17, 19, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 49
STOPPING TESTING DUE TO TIMEOUT
8.73660279311 PERCENT COVERED
60.1786379814 TOTAL RUNTIME
7 EXECUTED
511 TOTAL TEST OPERATIONS
22.5812282562 TIME SPENT EXECUTING TEST OPERATIONS
0.0626697540283 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.7654871941 TIME SPENT CHECKING PROPERTIES
45.3467154503 TOTAL TIME SPENT RUNNING SUT
0.00403475761414 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 2                                                                 # STEP 0
int1 = 12                                                                # STEP 1
int2 = 9                                                                 # STEP 2
int0 = 11                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int0)                                                        # STEP 5
avl1 == avl1                                                             # STEP 6
avl1.insert(int2)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.delete(int3)                                                        # STEP 9
avl1.delete(int2)                                                       # STEP 10
avl1.delete(int1)                                                       # STEP 11
avl1.insert(int3)                                                       # STEP 12
int2 = 9                                                                # STEP 13
avl1.insert(int1)                                                       # STEP 14
int0 = 17                                                               # STEP 15
int1 = 15                                                               # STEP 16
int3 = 5                                                                # STEP 17
avl1 == avl1                                                            # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1.insert(int3)                                                       # STEP 20
avl1.delete(int2)                                                       # STEP 21
avl1.insert(int0)                                                       # STEP 22
avl1.delete(int3)                                                       # STEP 23
int0 = 3                                                                # STEP 24
avl2 = avl.AVLTree()                                                    # STEP 25
avl1.delete(int1)                                                       # STEP 26
avl2.insert(int0)                                                       # STEP 27
avl2.delete(int3)                                                       # STEP 28
avl2 == avl2                                                            # STEP 29
avl1.insert(int1)                                                       # STEP 30
avl1.delete(int2)                                                       # STEP 31
int0 = 19                                                               # STEP 32
avl1.delete(int1)                                                       # STEP 33
avl2.delete(int1)                                                       # STEP 34
avl0 = avl.AVLTree()                                                    # STEP 35
avl0.delete(int0)                                                       # STEP 36
int2 = 9                                                                # STEP 37
int3 = 4                                                                # STEP 38
avl2.delete(int3)                                                       # STEP 39
int3 = 6                                                                # STEP 40
avl2.insert(int1)                                                       # STEP 41
avl1.insert(int3)                                                       # STEP 42
int1 = 7                                                                # STEP 43
avl2.delete(int2)                                                       # STEP 44
avl0.delete(int2)                                                       # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl2.insert(int2)                                                       # STEP 47
avl0.delete(int0)                                                       # STEP 48
int0 = 13                                                               # STEP 49
avl1.delete(int3)                                                       # STEP 50
avl2.insert(int3)                                                       # STEP 51
avl2.delete(int3)                                                       # STEP 52
avl2.delete(int0)                                                       # STEP 53
int2 = 2                                                                # STEP 54
avl0.delete(int3)                                                       # STEP 55
avl1.insert(int0)                                                       # STEP 56
avl2.delete(int2)                                                       # STEP 57
avl1.insert(int1)                                                       # STEP 58
avl2.delete(int0)                                                       # STEP 59
avl1.delete(int1)                                                       # STEP 60
avl0.delete(int0)                                                       # STEP 61
avl0.insert(int2)                                                       # STEP 62
avl1.insert(int2)                                                       # STEP 63
avl0.insert(int2)                                                       # STEP 64
avl2.insert(int3)                                                       # STEP 65
int0 = 2                                                                # STEP 66
avl2.delete(int0)                                                       # STEP 67
int0 = 13                                                               # STEP 68
avl0.insert(int2)                                                       # STEP 69
avl1.delete(int2)                                                       # STEP 70
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104193170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int2 = 2                                                                 # STEP 0
int3 = 7                                                                 # STEP 1
int0 = 12                                                                # STEP 2
int1 = 1                                                                 # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int0)                                                        # STEP 5
avl1.insert(int1)                                                        # STEP 6
avl1.delete(int0)                                                        # STEP 7
avl1.insert(int3)                                                        # STEP 8
avl1.delete(int0)                                                        # STEP 9
avl1.insert(int1)                                                       # STEP 10
avl1.insert(int0)                                                       # STEP 11
avl1.delete(int2)                                                       # STEP 12
avl1.delete(int1)                                                       # STEP 13
avl1.delete(int1)                                                       # STEP 14
avl1.insert(int0)                                                       # STEP 15
avl1.delete(int1)                                                       # STEP 16
avl1.delete(int0)                                                       # STEP 17
avl1.delete(int3)                                                       # STEP 18
avl1.insert(int0)                                                       # STEP 19
avl1.insert(int1)                                                       # STEP 20
int1 = 3                                                                # STEP 21
int0 = 13                                                               # STEP 22
avl1.delete(int1)                                                       # STEP 23
int2 = 10                                                               # STEP 24
avl1.delete(int2)                                                       # STEP 25
avl1.insert(int0)                                                       # STEP 26
avl1.delete(int3)                                                       # STEP 27
avl1.delete(int1)                                                       # STEP 28
avl1.delete(int0)                                                       # STEP 29
avl1.insert(int1)                                                       # STEP 30
avl1.delete(int2)                                                       # STEP 31
avl1.delete(int3)                                                       # STEP 32
int1 = 4                                                                # STEP 33
int3 = 3                                                                # STEP 34
avl1.delete(int1)                                                       # STEP 35
avl1.delete(int1)                                                       # STEP 36
avl1.insert(int1)                                                       # STEP 37
avl0 = avl.AVLTree()                                                    # STEP 38
avl1.delete(int2)                                                       # STEP 39
avl1.delete(int0)                                                       # STEP 40
avl1.delete(int2)                                                       # STEP 41
avl0.delete(int0)                                                       # STEP 42
avl0.insert(int0)                                                       # STEP 43
int1 = 12                                                               # STEP 44
avl1.insert(int1)                                                       # STEP 45
avl0.delete(int3)                                                       # STEP 46
avl0.delete(int0)                                                       # STEP 47
avl0.insert(int2)                                                       # STEP 48
avl0.insert(int1)                                                       # STEP 49
int1 = 2                                                                # STEP 50
int0 = 8                                                                # STEP 51
avl1.insert(int1)                                                       # STEP 52
avl0.delete(int1)                                                       # STEP 53
avl1.insert(int3)                                                       # STEP 54
int1 = 1                                                                # STEP 55
avl0.delete(int1)                                                       # STEP 56
avl0.insert(int2)                                                       # STEP 57
avl0.insert(int0)                                                       # STEP 58
avl0.insert(int3)                                                       # STEP 59
avl1.insert(int3)                                                       # STEP 60
avl0.insert(int1)                                                       # STEP 61
int0 = 12                                                               # STEP 62
int1 = 5                                                                # STEP 63
avl0.delete(int0)                                                       # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104358ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int3 = 14                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
int1 = 2                                                                 # STEP 2
int0 = 12                                                                # STEP 3
avl2.delete(int1)                                                        # STEP 4
int1 = 16                                                                # STEP 5
avl2.delete(int0)                                                        # STEP 6
avl2.insert(int1)                                                        # STEP 7
avl2.insert(int3)                                                        # STEP 8
avl2 == avl2                                                             # STEP 9
avl2.insert(int3)                                                       # STEP 10
avl2.insert(int1)                                                       # STEP 11
avl2.insert(int1)                                                       # STEP 12
avl2.delete(int3)                                                       # STEP 13
avl2.delete(int0)                                                       # STEP 14
int1 = 9                                                                # STEP 15
int3 = 1                                                                # STEP 16
avl2.delete(int3)                                                       # STEP 17
avl2.delete(int3)                                                       # STEP 18
result = avl2.find(int1)                                                # STEP 19
avl2.insert(int0)                                                       # STEP 20
avl2.delete(int3)                                                       # STEP 21
avl2.insert(int3)                                                       # STEP 22
int0 = 19                                                               # STEP 23
avl2.insert(int0)                                                       # STEP 24
avl2.delete(int3)                                                       # STEP 25
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10477dd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
