Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.380.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 10 [0:0] L
-- > 16 [1:1]
---- < 13 [0:0] L
set([2, 5, 10, 11, 13, 16])
  11 [3:1]
-- < 5 [2:-1]
---- < 2 [0:0] L
---- > 10 [1:1]
------ < 9 [0:0] L
-- > 16 [1:1]
---- < 13 [0:0] L
set([2, 5, 9, 10, 11, 13, 16])
  11 [3:1]
-- < 5 [2:-1]
---- < 2 [0:0] L
---- > 10 [1:1]
------ < 9 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 16 [0:0] L
set([2, 5, 9, 10, 11, 12, 13, 16])
TEST #4 STEP #89 (0:00:30.065327) Fri Apr 28 06:13:21 2017 [ 160 stmts 212 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058a0a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 99 steps

SAVING TEST AS failure.380.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 14                                                                # STEP 0
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
int1 = 15                                                                # STEP 1
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 2
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 3
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 5
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
int2 = 4                                                                 # STEP 6
ACTION: int2 = 4 
int2 = 14 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 7
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([14, 15]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 8
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 9                                                                 # STEP 9
ACTION: int1 = 9 
int1 = 15 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 10
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4, 14, 15]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 11
ACTION: int2 = 12 
int2 = 4 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
int3 = 10                                                               # STEP 12
ACTION: int3 = 10 
int3 = 13 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 13
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 14
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 2                                                                # STEP 15
ACTION: int1 = 2 
int1 = 9 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 16
ACTION: int2 = 10 
int2 = 12 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 17
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 5                                                                # STEP 18
ACTION: int1 = 5 
int1 = 2 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 19
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 8                                                                # STEP 20
ACTION: int2 = 8 
int2 = 10 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 21
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 19                                                               # STEP 22
ACTION: int3 = 19 
int3 = 10 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 23
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 14                                                               # STEP 24
ACTION: int1 = 14 
int1 = 5 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 25
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 27
ACTION: int2 = 14 
int2 = 8 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 28
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 29
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 4                                                                # STEP 30
ACTION: int2 = 4 
int2 = 14 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 18                                                               # STEP 33
ACTION: int1 = 18 
int1 = 14 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 34
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 35
ACTION: int0 = 19 
int0 = 15 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 36
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 16                                                               # STEP 37
ACTION: int1 = 16 
int1 = 18 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 39
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 4]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 16, 4]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 41
ACTION: int1 = 14 
int1 = 16 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 42
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 19, 4, 14, 15]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 43
ACTION: int0 = 19 
int0 = 19 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 44
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 45
ACTION: int3 = 3 
int3 = 19 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 47
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 48
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 19, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 49
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 16, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 1                                                                # STEP 50
ACTION: int2 = 1 
int2 = 4 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 51
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 16, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 16, 4, 14]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 52
ACTION: int0 = 11 
int0 = 19 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 53
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 19, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 7                                                                # STEP 54
ACTION: int1 = 7 
int1 = 14 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 56
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([9, 19, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([4, 9, 11, 14, 15, 19]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 57
ACTION: int2 = 7 
int2 = 1 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 58
ACTION: int0 = 7 
int0 = 11 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 59
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 7]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 60
ACTION: int1 = 16 
int1 = 7 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 61
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 16, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 14                                                               # STEP 62
ACTION: int0 = 14 
int0 = 7 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 63
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 10                                                               # STEP 64
ACTION: int1 = 10 
int1 = 16 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 65
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 66
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 14, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 67
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 11, 7]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 68
ACTION: int0 = 11 
int0 = 14 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 69
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 11                                                               # STEP 70
ACTION: int1 = 11 
int1 = 10 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 71
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 72
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([10, 11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 73
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int3 = 8                                                                # STEP 74
ACTION: int3 = 8 
int3 = 3 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 75
ACTION: int1 = 11 
int1 = 11 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 76
ACTION: int0 = 17 
int0 = 11 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 77
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 78
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 16, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 79
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 16, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 3                                                                # STEP 80
ACTION: int1 = 3 
int1 = 11 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 12                                                               # STEP 81
ACTION: int3 = 12 
int3 = 8 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 82
ACTION: int2 = 19 
int2 = 7 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 83
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([8, 16, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 4, 8, 14, 16]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 84
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 18                                                               # STEP 85
ACTION: int0 = 18 
int0 = 17 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int1 = 8                                                                # STEP 86
ACTION: int1 = 8 
int1 = 3 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 87
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([3, 4, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([3, 4, 14, 16]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 88
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 19                                                               # STEP 89
ACTION: int1 = 19 
int1 = 8 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 90
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 91
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([3, 4, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 19                                                               # STEP 92
ACTION: int0 = 19 
int0 = 18 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
int3 = 9                                                                # STEP 93
ACTION: int3 = 9 
int3 = 12 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 94
ACTION: avl1.insert(int1) 
int1 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([3, 4, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 4, 14, 16, 19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 95
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a92758> : <type 'instance'>
avl_REF1 = set([3, 4, 14, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3, 4, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 96
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104a97098> : <type 'instance'>
avl_REF0 = set([10, 11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19, 10, 11, 7]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 97
ACTION: int2 = 12 
int2 = 19 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 98
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1049a1d40> : <type 'instance'>
avl_REF2 = set([4, 9, 11, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([4, 9, 11, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f8bfc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 63
STOPPING TESTING DUE TO TIMEOUT
8.44927044452 PERCENT COVERED
60.1597890854 TOTAL RUNTIME
7 EXECUTED
662 TOTAL TEST OPERATIONS
26.2780418396 TIME SPENT EXECUTING TEST OPERATIONS
0.0237383842468 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.374181509 TIME SPENT CHECKING PROPERTIES
52.6522233486 TOTAL TIME SPENT RUNNING SUT
0.00423622131348 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 14                                                                # STEP 0
int1 = 15                                                                # STEP 1
int3 = 13                                                                # STEP 2
int0 = 15                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int2)                                                        # STEP 5
int2 = 4                                                                 # STEP 6
avl2.insert(int1)                                                        # STEP 7
avl2.delete(int3)                                                        # STEP 8
int1 = 9                                                                 # STEP 9
avl2.insert(int2)                                                       # STEP 10
int2 = 12                                                               # STEP 11
int3 = 10                                                               # STEP 12
avl2.insert(int1)                                                       # STEP 13
avl2.delete(int2)                                                       # STEP 14
int1 = 2                                                                # STEP 15
int2 = 10                                                               # STEP 16
avl2.delete(int1)                                                       # STEP 17
int1 = 5                                                                # STEP 18
avl2.delete(int2)                                                       # STEP 19
int2 = 8                                                                # STEP 20
avl2.delete(int3)                                                       # STEP 21
int3 = 19                                                               # STEP 22
avl2.delete(int1)                                                       # STEP 23
int1 = 14                                                               # STEP 24
avl1 = avl.AVLTree()                                                    # STEP 25
avl1.insert(int2)                                                       # STEP 26
int2 = 14                                                               # STEP 27
avl0 = avl.AVLTree()                                                    # STEP 28
avl1.delete(int2)                                                       # STEP 29
int2 = 4                                                                # STEP 30
avl1.insert(int0)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
int1 = 18                                                               # STEP 33
avl1.delete(int0)                                                       # STEP 34
int0 = 19                                                               # STEP 35
avl1.delete(int1)                                                       # STEP 36
int1 = 16                                                               # STEP 37
avl0.delete(int0)                                                       # STEP 38
avl1.insert(int2)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
int1 = 14                                                               # STEP 41
avl2.insert(int3)                                                       # STEP 42
int0 = 19                                                               # STEP 43
avl0.insert(int2)                                                       # STEP 44
int3 = 3                                                                # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl0.delete(int2)                                                       # STEP 47
avl2.insert(int2)                                                       # STEP 48
avl1.delete(int0)                                                       # STEP 49
int2 = 1                                                                # STEP 50
avl1.insert(int1)                                                       # STEP 51
int0 = 11                                                               # STEP 52
avl2.delete(int2)                                                       # STEP 53
int1 = 7                                                                # STEP 54
avl0.insert(int0)                                                       # STEP 55
avl2.insert(int0)                                                       # STEP 56
int2 = 7                                                                # STEP 57
int0 = 7                                                                # STEP 58
avl0.insert(int1)                                                       # STEP 59
int1 = 16                                                               # STEP 60
avl1.delete(int0)                                                       # STEP 61
int0 = 14                                                               # STEP 62
avl0.delete(int1)                                                       # STEP 63
int1 = 10                                                               # STEP 64
avl0.insert(int2)                                                       # STEP 65
avl2.delete(int0)                                                       # STEP 66
avl0.insert(int1)                                                       # STEP 67
int0 = 11                                                               # STEP 68
avl2.delete(int1)                                                       # STEP 69
int1 = 11                                                               # STEP 70
avl2.delete(int3)                                                       # STEP 71
avl0.insert(int0)                                                       # STEP 72
avl2.insert(int1)                                                       # STEP 73
int3 = 8                                                                # STEP 74
int1 = 11                                                               # STEP 75
int0 = 17                                                               # STEP 76
avl2.insert(int1)                                                       # STEP 77
avl1.delete(int2)                                                       # STEP 78
avl1.insert(int3)                                                       # STEP 79
int1 = 3                                                                # STEP 80
int3 = 12                                                               # STEP 81
int2 = 19                                                               # STEP 82
avl1.insert(int1)                                                       # STEP 83
avl2.delete(int0)                                                       # STEP 84
int0 = 18                                                               # STEP 85
int1 = 8                                                                # STEP 86
avl1.delete(int1)                                                       # STEP 87
avl2.delete(int1)                                                       # STEP 88
int1 = 19                                                               # STEP 89
avl2.delete(int0)                                                       # STEP 90
avl1.delete(int3)                                                       # STEP 91
int0 = 19                                                               # STEP 92
int3 = 9                                                                # STEP 93
avl1.insert(int1)                                                       # STEP 94
avl1.delete(int2)                                                       # STEP 95
avl0.insert(int2)                                                       # STEP 96
int2 = 12                                                               # STEP 97
avl2.delete(int0)                                                       # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f8bfc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
