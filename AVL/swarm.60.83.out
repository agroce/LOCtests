Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.839.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #58 (0:00:30.047409) Fri Apr 28 07:26:42 2017 [ 135 stmts 182 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104137b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 82 steps

SAVING TEST AS failure.839.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 16                                                                # STEP 0
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
int1 = 2                                                                 # STEP 1
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
int0 = 2                                                                 # STEP 2
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
int3 = 7                                                                 # STEP 3
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 5
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 6
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 7
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 14                                                                # STEP 8
ACTION: int2 = 14 
int2 = 16 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 9
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 4                                                                # STEP 10
ACTION: int3 = 4 
int3 = 7 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 13
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 14
ACTION: int3 = 5 
int3 = 4 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 15
ACTION: int2 = 19 
int2 = 14 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 16
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 14]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 17
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 8                                                                # STEP 18
ACTION: int0 = 8 
int0 = 2 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 8]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 16                                                               # STEP 21
ACTION: int2 = 16 
int2 = 19 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 22
ACTION: int0 = 9 
int0 = 8 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 14                                                               # STEP 24
ACTION: int1 = 14 
int1 = 2 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 2, 14]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 26
ACTION: int2 = 13 
int2 = 16 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 27
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 8, 5]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 29
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 30
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16, 8]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 1                                                                # STEP 32
ACTION: int0 = 1 
int0 = 9 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 33
ACTION: int2 = 4 
int2 = 13 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 34
ACTION: int3 = 13 
int3 = 5 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 1                                                                # STEP 36
ACTION: int3 = 1 
int3 = 13 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 37
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 8, 14]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 38
ACTION: int1 = 3 
int1 = 14 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 39
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 7                                                                # STEP 40
ACTION: int0 = 7 
int0 = 1 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 41
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 11                                                               # STEP 42
ACTION: int1 = 11 
int1 = 3 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 1, 2, 14]) : <type 'set'>
==================================================
int3 = 9                                                                # STEP 45
ACTION: int3 = 9 
int3 = 1 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 46
ACTION: int0 = 6 
int0 = 7 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1 == avl0                                                            # STEP 47
ACTION: avl1 == avl0 
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF1 = set([16, 8, 14]) : <type 'set'>
avl_REF0 = set([16, 1, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
avl1.delete(int2)                                                       # STEP 48
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 17                                                               # STEP 49
ACTION: int2 = 17 
int2 = 4 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([16, 1, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 14, 16, 17]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 51
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 2, 6, 14, 16, 17]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 52
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 2, 6, 11, 14, 16, 17]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 53
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.insert(int3)                                                       # STEP 54
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 2, 6, 9, 11, 14, 16, 17]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 55
ACTION: int2 = 6 
int2 = 17 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 56
ACTION: int3 = 17 
int3 = 9 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 5                                                                # STEP 57
ACTION: int0 = 5 
int0 = 6 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 58
ACTION: int1 = 3 
int1 = 11 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 59
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0 == avl0                                                            # STEP 60
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 9, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl1.insert(int0)                                                       # STEP 61
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 8, 5, 14]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 62
ACTION: int0 = 13 
int0 = 5 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 19                                                               # STEP 63
ACTION: int3 = 19 
int3 = 17 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 64
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 8, 6, 5, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 65
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 6, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([16, 8, 5, 14]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 66
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int2 = 13                                                               # STEP 67
ACTION: int2 = 13 
int2 = 6 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 68
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([16, 8, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 8, 14, 16, 19]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 69
ACTION: int3 = 16 
int3 = 19 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 70
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([5, 8, 14, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 17                                                               # STEP 71
ACTION: int2 = 17 
int2 = 13 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 72
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 9, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 73
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([5, 8, 14, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 1                                                                # STEP 74
ACTION: int3 = 1 
int3 = 16 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 75
ACTION: int2 = 4 
int2 = 17 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 76
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105873200> : <type 'instance'>
avl_REF1 = set([5, 8, 14, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 77
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 9, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 3                                                                # STEP 78
ACTION: int0 = 3 
int0 = 13 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 79
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 9, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 17                                                               # STEP 80
ACTION: int2 = 17 
int2 = 4 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 81
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10412c950> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 9, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 2, 6, 9, 11, 14, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105858830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 42
STOPPING TESTING DUE TO TIMEOUT
7.90634543604 PERCENT COVERED
60.1974720955 TOTAL RUNTIME
7 EXECUTED
624 TOTAL TEST OPERATIONS
26.2680432796 TIME SPENT EXECUTING TEST OPERATIONS
0.024528503418 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.3852052689 TIME SPENT CHECKING PROPERTIES
52.6532485485 TOTAL TIME SPENT RUNNING SUT
0.00393509864807 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 16                                                                # STEP 0
int1 = 2                                                                 # STEP 1
int0 = 2                                                                 # STEP 2
int3 = 7                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl1 = avl.AVLTree()                                                     # STEP 5
avl1.insert(int2)                                                        # STEP 6
avl0 == avl0                                                             # STEP 7
int2 = 14                                                                # STEP 8
avl0.delete(int3)                                                        # STEP 9
int3 = 4                                                                # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.insert(int3)                                                       # STEP 12
avl0.delete(int3)                                                       # STEP 13
int3 = 5                                                                # STEP 14
int2 = 19                                                               # STEP 15
avl0.insert(int0)                                                       # STEP 16
avl0.insert(int0)                                                       # STEP 17
int0 = 8                                                                # STEP 18
avl1.insert(int0)                                                       # STEP 19
avl1.delete(int2)                                                       # STEP 20
int2 = 16                                                               # STEP 21
int0 = 9                                                                # STEP 22
avl0.insert(int1)                                                       # STEP 23
int1 = 14                                                               # STEP 24
avl0.insert(int2)                                                       # STEP 25
int2 = 13                                                               # STEP 26
avl0.delete(int0)                                                       # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl0.delete(int2)                                                       # STEP 29
avl1.delete(int3)                                                       # STEP 30
avl1.delete(int2)                                                       # STEP 31
int0 = 1                                                                # STEP 32
int2 = 4                                                                # STEP 33
int3 = 13                                                               # STEP 34
avl0.delete(int3)                                                       # STEP 35
int3 = 1                                                                # STEP 36
avl1.insert(int1)                                                       # STEP 37
int1 = 3                                                                # STEP 38
avl0.delete(int0)                                                       # STEP 39
int0 = 7                                                                # STEP 40
avl1.delete(int1)                                                       # STEP 41
int1 = 11                                                               # STEP 42
avl0.delete(int0)                                                       # STEP 43
avl0.insert(int3)                                                       # STEP 44
int3 = 9                                                                # STEP 45
int0 = 6                                                                # STEP 46
avl1 == avl0                                                            # STEP 47
avl1.delete(int2)                                                       # STEP 48
int2 = 17                                                               # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl0.insert(int0)                                                       # STEP 51
avl0.insert(int1)                                                       # STEP 52
avl1 == avl1                                                            # STEP 53
avl0.insert(int3)                                                       # STEP 54
int2 = 6                                                                # STEP 55
int3 = 17                                                               # STEP 56
int0 = 5                                                                # STEP 57
int1 = 3                                                                # STEP 58
avl1.delete(int3)                                                       # STEP 59
avl0 == avl0                                                            # STEP 60
avl1.insert(int0)                                                       # STEP 61
int0 = 13                                                               # STEP 62
int3 = 19                                                               # STEP 63
avl1.insert(int2)                                                       # STEP 64
avl1.delete(int2)                                                       # STEP 65
avl1 == avl1                                                            # STEP 66
int2 = 13                                                               # STEP 67
avl1.insert(int3)                                                       # STEP 68
int3 = 16                                                               # STEP 69
avl1.delete(int2)                                                       # STEP 70
int2 = 17                                                               # STEP 71
avl0.insert(int3)                                                       # STEP 72
avl1.delete(int2)                                                       # STEP 73
int3 = 1                                                                # STEP 74
int2 = 4                                                                # STEP 75
avl1.delete(int1)                                                       # STEP 76
avl0.delete(int0)                                                       # STEP 77
int0 = 3                                                                # STEP 78
avl0.delete(int2)                                                       # STEP 79
int2 = 17                                                               # STEP 80
avl0.delete(int2)                                                       # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105858830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
198 BRANCHES COVERED
149 STATEMENTS COVERED
