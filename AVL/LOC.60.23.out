Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99580.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [2:0]
-- < 7 [1:0]
---- < 3 [0:0] L
---- > 9 [0:0] L
-- > 14 [1:1]
---- < 12 [0:0] L
set([3, 7, 9, 11, 12, 14])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b0d248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 50 steps

SAVING TEST AS failure.99580.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 13                                                                # STEP 0
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 16                                                                # STEP 1
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
int0 = 5                                                                 # STEP 2
ACTION: int0 = 5 
int0 = None : <type 'NoneType'>
=> int0 = 5 : <type 'int'>
==================================================
int1 = 11                                                                # STEP 3
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 7
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 13]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 8
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 18                                                                # STEP 9
ACTION: int3 = 18 
int3 = 13 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 10
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 11
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 12
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5, 13]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 13
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 14
ACTION: int3 = 11 
int3 = 18 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 15
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 11]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 16
ACTION: int2 = 13 
int2 = 16 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 3                                                                # STEP 18
ACTION: int0 = 3 
int0 = 5 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 19
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 20
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 22
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 19                                                               # STEP 23
ACTION: int3 = 19 
int3 = 11 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 24
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.insert(int2)                                                       # STEP 25
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 26
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1 == avl1                                                            # STEP 27
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl2.delete(int2)                                                       # STEP 28
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 29
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([19, 5, 13]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 30
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 3                                                                # STEP 31
ACTION: int2 = 3 
int2 = 13 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int1 = 17                                                               # STEP 32
ACTION: int1 = 17 
int1 = 11 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 33
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 34
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 35
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3, 18, 11]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 36
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 37
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([3, 18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 19, 18, 11]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 38
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([3, 19, 18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 39
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 19, 5, 13]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 40
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([3, 19, 5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 41
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([3, 19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
result = avl1.find(int1)                                                # STEP 42
ACTION: result = avl1.find(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([3, 19, 5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl2.find(int3)                                                # STEP 43
ACTION: result = avl2.find(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([3, 19, 18, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 44
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([3, 19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([19, 5, 13]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 46
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 19, 5, 13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 47
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f11908> : <type 'instance'>
avl_REF1 = set([17, 19, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 17, 19, 5, 13]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 48
ACTION: int1 = 11 
int1 = 17 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 49
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b0f5a8> : <type 'instance'>
avl_REF2 = set([3, 19, 18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([19, 18, 11]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b167a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105836fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 96 steps

SAVING TEST AS failure.99580.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 3                                                                 # STEP 0
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 1
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 2
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int2 = 3                                                                 # STEP 3
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 4
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 5
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 6
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                        # STEP 7
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int3 = 4                                                                 # STEP 9
ACTION: int3 = 4 
int3 = None : <type 'NoneType'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 10
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 11
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 12
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 13
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 14
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.find(int0)                                                # STEP 15
ACTION: result = avl2.find(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 16
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 17
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 18
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 19
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 6                                                                # STEP 20
ACTION: int2 = 6 
int2 = 3 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 21
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 22
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 23
ACTION: int0 = 12 
int0 = 12 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 24
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 16                                                               # STEP 25
ACTION: int2 = 16 
int2 = 6 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 2                                                                # STEP 26
ACTION: int3 = 2 
int3 = 4 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 27
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 28
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 29
ACTION: avl2.insert(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 12]) : <type 'set'>
==================================================
int1 = 5                                                                # STEP 30
ACTION: int1 = 5 
int1 = 3 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 31
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 32
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 33
ACTION: int3 = 16 
int3 = 2 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 34
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 35
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 12                                                               # STEP 36
ACTION: int0 = 12 
int0 = 12 : <type 'int'>
==================================================
int1 = 8                                                                # STEP 37
ACTION: int1 = 8 
int1 = 5 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 38
ACTION: int3 = 16 
int3 = 16 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 39
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 40
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 41
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 14                                                               # STEP 42
ACTION: int3 = 14 
int3 = 16 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 43
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 44
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 45
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 46
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 10                                                               # STEP 47
ACTION: int0 = 10 
int0 = 12 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 48
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 11                                                               # STEP 49
ACTION: int3 = 11 
int3 = 14 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 50
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 5                                                                # STEP 51
ACTION: int2 = 5 
int2 = 16 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 52
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 12]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 53
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 54
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 4                                                                # STEP 55
ACTION: int0 = 4 
int0 = 10 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 56
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl2.find(int3)                                                # STEP 57
ACTION: result = avl2.find(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 19                                                               # STEP 58
ACTION: int3 = 19 
int3 = 11 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 59
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 60
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 10, 12]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 61
ACTION: result = avl2.find(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 62
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 63
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 19, 12]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 64
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 20                                                               # STEP 65
ACTION: int3 = 20 
int3 = 19 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 66
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 67
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 68
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 69
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 70
ACTION: result = avl0.find(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 71
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 72
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 73
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 74
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 75
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 76
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20, 5]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 77
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 78
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 79
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 80
ACTION: avl1.delete(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 81
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 19                                                               # STEP 82
ACTION: int2 = 19 
int2 = 5 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 83
ACTION: int3 = 17 
int3 = 20 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 84
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 85
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 4, 10, 12]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 86
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 87
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 20, 2, 19, 12]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 88
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19, 20, 5]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 89
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b15560> : <type 'instance'>
avl_REF2 = set([8, 20, 2, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([20, 2, 19, 12]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 90
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10580fbd8> : <type 'instance'>
avl_REF0 = set([8, 4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 10, 12]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 91
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([19, 20, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 6                                                                # STEP 92
ACTION: int3 = 6 
int3 = 17 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 93
ACTION: result = avl1.find(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([19, 20, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 94
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([19, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4, 19, 20, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 95
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104983950> : <type 'instance'>
avl_REF1 = set([4, 19, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([4, 20, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10581a6c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:30.041533) Fri Apr 28 04:21:25 2017 [ 157 stmts 208 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1049b0050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 65 steps

SAVING TEST AS failure.99580.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 20                                                                # STEP 0
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 1
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 4                                                                 # STEP 3
ACTION: int2 = 4 
int2 = None : <type 'NoneType'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 4
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
int3 = 6                                                                 # STEP 6
ACTION: int3 = 6 
int3 = 20 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
int1 = 9                                                                 # STEP 7
ACTION: int1 = 9 
int1 = None : <type 'NoneType'>
=> int1 = 9 : <type 'int'>
==================================================
int0 = 6                                                                 # STEP 8
ACTION: int0 = 6 
int0 = 14 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 10
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int0)                                                # STEP 11
ACTION: result = avl0.find(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int3 = 16                                                               # STEP 12
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 13
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 14
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([6, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 15
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 6, 14]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 17
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([16, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int1)                                                       # STEP 18
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([16, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 9, 6, 14]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 19
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x1049b03b0> : <type 'instance'>
avl_REF0 = set([16, 9, 6, 14]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 20
ACTION: int1 = 19 
int1 = 9 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 21
ACTION: result = avl0.find(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 19                                                               # STEP 22
ACTION: int0 = 19 
int0 = 6 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 23
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0 == avl0                                                            # STEP 24
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 25
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 28
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 29
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 30
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 5                                                                # STEP 31
ACTION: int3 = 5 
int3 = 16 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 32
ACTION: int0 = 19 
int0 = 19 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 33
ACTION: int1 = 11 
int1 = 19 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 34
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 19]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 10, 19]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 37
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 38
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int1 = 18                                                               # STEP 39
ACTION: int1 = 18 
int1 = 11 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 40
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 10, 19, 18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 41
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 19, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([11, 10, 18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 42
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 10, 18, 5]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 43
ACTION: int2 = 13 
int2 = 10 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 45
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11, 10, 18]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([11, 10, 18, 13]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 47
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 15                                                               # STEP 48
ACTION: int0 = 15 
int0 = 19 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 49
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 50
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([11, 10, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 51
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([11, 10]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 52
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 53
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 6                                                                # STEP 54
ACTION: int3 = 6 
int3 = 5 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 55
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 18                                                               # STEP 56
ACTION: int2 = 18 
int2 = 13 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 57
ACTION: result = avl0.find(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 58
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 1                                                                # STEP 59
ACTION: int0 = 1 
int0 = 15 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 60
ACTION: result = avl0.find(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 61
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([11, 10, 18]) : <type 'set'>
==================================================
int1 = 6                                                                # STEP 62
ACTION: int1 = 6 
int1 = 18 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 63
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([11, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([6, 10, 11, 18]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 64
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10581f368> : <type 'instance'>
avl_REF0 = set([6, 10, 11, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([6, 10, 11]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058107a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
  11 [2:0]
-- < 4 [1:-1]
---- > 6 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 20 [0:0] L
set([4, 6, 11, 16, 18, 20])
  11 [2:0]
-- < 6 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 12 [1:-1]
---- > 16 [0:0] L
set([1, 6, 8, 11, 12, 16])
  11 [2:0]
-- < 6 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 12 [1:-1]
---- > 16 [0:0] L
set([1, 6, 8, 11, 12, 16])
  11 [2:0]
-- < 6 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 12 [1:-1]
---- > 16 [0:0] L
set([1, 6, 8, 11, 12, 16])
  11 [3:1]
-- < 6 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 12 [0:0] L
---- > 16 [0:0] L
set([1, 2, 6, 8, 11, 12, 15, 16])
  11 [3:1]
-- < 6 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 12 [0:0] L
---- > 16 [0:0] L
set([1, 2, 6, 8, 11, 12, 15, 16])
  11 [3:1]
-- < 6 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 12 [0:0] L
---- > 16 [0:0] L
set([1, 2, 6, 8, 11, 12, 15, 16])
  11 [3:1]
-- < 6 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 12 [0:0] L
---- > 16 [0:0] L
set([1, 2, 6, 8, 11, 12, 15, 16])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 66
STOPPING TESTING DUE TO TIMEOUT
8.58500169664 PERCENT COVERED
60.2007770538 TOTAL RUNTIME
7 EXECUTED
577 TOTAL TEST OPERATIONS
21.8851094246 TIME SPENT EXECUTING TEST OPERATIONS
0.0620446205139 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
21.8326342106 TIME SPENT CHECKING PROPERTIES
43.7177436352 TOTAL TIME SPENT RUNNING SUT
0.0039050579071 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 13                                                                # STEP 0
int2 = 16                                                                # STEP 1
int0 = 5                                                                 # STEP 2
int1 = 11                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int2)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl1.insert(int3)                                                        # STEP 7
avl2 = avl.AVLTree()                                                     # STEP 8
int3 = 18                                                                # STEP 9
result = avl1.inorder()                                                 # STEP 10
avl1.delete(int0)                                                       # STEP 11
avl1.insert(int0)                                                       # STEP 12
avl2.insert(int3)                                                       # STEP 13
int3 = 11                                                               # STEP 14
avl2.insert(int3)                                                       # STEP 15
int2 = 13                                                               # STEP 16
avl1.insert(int0)                                                       # STEP 17
int0 = 3                                                                # STEP 18
avl1.delete(int1)                                                       # STEP 19
avl2.insert(int3)                                                       # STEP 20
avl2.insert(int1)                                                       # STEP 21
avl1.delete(int1)                                                       # STEP 22
int3 = 19                                                               # STEP 23
result = avl2.inorder()                                                 # STEP 24
avl1.insert(int2)                                                       # STEP 25
avl1.delete(int3)                                                       # STEP 26
avl1 == avl1                                                            # STEP 27
avl2.delete(int2)                                                       # STEP 28
avl1.insert(int3)                                                       # STEP 29
avl1.delete(int1)                                                       # STEP 30
int2 = 3                                                                # STEP 31
int1 = 17                                                               # STEP 32
avl2.delete(int2)                                                       # STEP 33
avl1.delete(int0)                                                       # STEP 34
avl2.insert(int2)                                                       # STEP 35
avl1.delete(int2)                                                       # STEP 36
avl2.insert(int3)                                                       # STEP 37
avl2.delete(int1)                                                       # STEP 38
avl1.insert(int2)                                                       # STEP 39
result = avl1.inorder()                                                 # STEP 40
avl1.insert(int2)                                                       # STEP 41
result = avl1.find(int1)                                                # STEP 42
result = avl2.find(int3)                                                # STEP 43
avl1.delete(int2)                                                       # STEP 44
avl1.delete(int1)                                                       # STEP 45
avl1.insert(int1)                                                       # STEP 46
avl1.insert(int0)                                                       # STEP 47
int1 = 11                                                               # STEP 48
avl2.delete(int2)                                                       # STEP 49
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b167a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int1 = 3                                                                 # STEP 0
int0 = 12                                                                # STEP 1
avl2 = avl.AVLTree()                                                     # STEP 2
int2 = 3                                                                 # STEP 3
avl2.insert(int1)                                                        # STEP 4
avl2.delete(int1)                                                        # STEP 5
result = avl2.inorder()                                                  # STEP 6
avl2.insert(int2)                                                        # STEP 7
avl2.insert(int2)                                                        # STEP 8
int3 = 4                                                                 # STEP 9
avl2.delete(int2)                                                       # STEP 10
avl2.delete(int1)                                                       # STEP 11
result = avl2.inorder()                                                 # STEP 12
avl2.insert(int2)                                                       # STEP 13
avl2 == avl2                                                            # STEP 14
result = avl2.find(int0)                                                # STEP 15
avl2.delete(int3)                                                       # STEP 16
avl2.delete(int1)                                                       # STEP 17
avl2.delete(int1)                                                       # STEP 18
avl2.delete(int3)                                                       # STEP 19
int2 = 6                                                                # STEP 20
avl2.delete(int3)                                                       # STEP 21
avl2.insert(int0)                                                       # STEP 22
int0 = 12                                                               # STEP 23
avl2.delete(int2)                                                       # STEP 24
int2 = 16                                                               # STEP 25
int3 = 2                                                                # STEP 26
avl2.delete(int0)                                                       # STEP 27
avl2.insert(int0)                                                       # STEP 28
avl2.insert(int3)                                                       # STEP 29
int1 = 5                                                                # STEP 30
result = avl2.inorder()                                                 # STEP 31
avl0 = avl.AVLTree()                                                    # STEP 32
int3 = 16                                                               # STEP 33
avl2.delete(int3)                                                       # STEP 34
avl0.delete(int1)                                                       # STEP 35
int0 = 12                                                               # STEP 36
int1 = 8                                                                # STEP 37
int3 = 16                                                               # STEP 38
result = avl2.inorder()                                                 # STEP 39
avl2.delete(int3)                                                       # STEP 40
avl0.delete(int3)                                                       # STEP 41
int3 = 14                                                               # STEP 42
avl0.insert(int0)                                                       # STEP 43
avl0.delete(int2)                                                       # STEP 44
avl2.insert(int0)                                                       # STEP 45
avl2.delete(int2)                                                       # STEP 46
int0 = 10                                                               # STEP 47
avl0.delete(int3)                                                       # STEP 48
int3 = 11                                                               # STEP 49
avl0.delete(int2)                                                       # STEP 50
int2 = 5                                                                # STEP 51
avl0.insert(int0)                                                       # STEP 52
avl2.delete(int2)                                                       # STEP 53
result = avl2.inorder()                                                 # STEP 54
int0 = 4                                                                # STEP 55
avl0.delete(int2)                                                       # STEP 56
result = avl2.find(int3)                                                # STEP 57
int3 = 19                                                               # STEP 58
avl2.delete(int1)                                                       # STEP 59
avl0.insert(int0)                                                       # STEP 60
result = avl2.find(int1)                                                # STEP 61
avl2.delete(int1)                                                       # STEP 62
avl2.insert(int3)                                                       # STEP 63
avl0.delete(int2)                                                       # STEP 64
int3 = 20                                                               # STEP 65
avl2.delete(int3)                                                       # STEP 66
avl1 = avl.AVLTree()                                                    # STEP 67
avl0.delete(int2)                                                       # STEP 68
avl2.insert(int3)                                                       # STEP 69
result = avl0.find(int1)                                                # STEP 70
avl2.insert(int3)                                                       # STEP 71
avl0.delete(int2)                                                       # STEP 72
avl0.delete(int3)                                                       # STEP 73
avl2.delete(int0)                                                       # STEP 74
avl1.insert(int2)                                                       # STEP 75
avl1.insert(int3)                                                       # STEP 76
result = avl0.find(int2)                                                # STEP 77
avl0.delete(int1)                                                       # STEP 78
avl2.delete(int2)                                                       # STEP 79
avl1.delete(int0)                                                       # STEP 80
avl2.delete(int2)                                                       # STEP 81
int2 = 19                                                               # STEP 82
int3 = 17                                                               # STEP 83
avl1.delete(int2)                                                       # STEP 84
avl0.insert(int1)                                                       # STEP 85
avl1.delete(int3)                                                       # STEP 86
avl2.insert(int1)                                                       # STEP 87
avl1.insert(int2)                                                       # STEP 88
avl2.delete(int1)                                                       # STEP 89
avl0.delete(int0)                                                       # STEP 90
result = avl1.inorder()                                                 # STEP 91
int3 = 6                                                                # STEP 92
result = avl1.find(int3)                                                # STEP 93
avl1.insert(int0)                                                       # STEP 94
avl1.delete(int2)                                                       # STEP 95
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10581a6c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int3 = 20                                                                # STEP 0
int0 = 14                                                                # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
int2 = 4                                                                 # STEP 3
avl0.delete(int3)                                                        # STEP 4
avl0.insert(int0)                                                        # STEP 5
int3 = 6                                                                 # STEP 6
int1 = 9                                                                 # STEP 7
int0 = 6                                                                 # STEP 8
avl0.insert(int3)                                                        # STEP 9
result = avl0.inorder()                                                 # STEP 10
result = avl0.find(int0)                                                # STEP 11
int3 = 16                                                               # STEP 12
avl0.delete(int0)                                                       # STEP 13
avl0.insert(int0)                                                       # STEP 14
result = avl0.inorder()                                                 # STEP 15
avl0.insert(int3)                                                       # STEP 16
avl0 == avl0                                                            # STEP 17
avl0.insert(int1)                                                       # STEP 18
avl0 = avl.AVLTree()                                                    # STEP 19
int1 = 19                                                               # STEP 20
result = avl0.find(int2)                                                # STEP 21
int0 = 19                                                               # STEP 22
result = avl0.inorder()                                                 # STEP 23
avl0 == avl0                                                            # STEP 24
avl0.delete(int1)                                                       # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl0.insert(int1)                                                       # STEP 27
int2 = 10                                                               # STEP 28
avl0.delete(int3)                                                       # STEP 29
avl0.insert(int0)                                                       # STEP 30
int3 = 5                                                                # STEP 31
int0 = 19                                                               # STEP 32
int1 = 11                                                               # STEP 33
avl0.delete(int3)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
avl0.insert(int1)                                                       # STEP 36
avl0.delete(int3)                                                       # STEP 37
avl0.insert(int2)                                                       # STEP 38
int1 = 18                                                               # STEP 39
avl0.insert(int1)                                                       # STEP 40
avl0.delete(int0)                                                       # STEP 41
avl0.insert(int3)                                                       # STEP 42
int2 = 13                                                               # STEP 43
avl0.insert(int3)                                                       # STEP 44
avl0.delete(int3)                                                       # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl0.delete(int3)                                                       # STEP 47
int0 = 15                                                               # STEP 48
result = avl0.inorder()                                                 # STEP 49
avl0.delete(int1)                                                       # STEP 50
avl0.delete(int2)                                                       # STEP 51
avl0.delete(int2)                                                       # STEP 52
result = avl0.inorder()                                                 # STEP 53
int3 = 6                                                                # STEP 54
avl0.delete(int0)                                                       # STEP 55
int2 = 18                                                               # STEP 56
result = avl0.find(int2)                                                # STEP 57
avl0.delete(int0)                                                       # STEP 58
int0 = 1                                                                # STEP 59
result = avl0.find(int3)                                                # STEP 60
avl0.insert(int2)                                                       # STEP 61
int1 = 6                                                                # STEP 62
avl0.insert(int1)                                                       # STEP 63
avl0.delete(int2)                                                       # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058107a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
