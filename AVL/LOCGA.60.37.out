Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62183.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 10 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 10, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 10 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 10, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 8, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 8, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 8, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 8, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([2, 5, 8, 15, 16, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 16 [0:0] L
set([2, 5, 11, 15, 16, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104929d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 71 steps

SAVING TEST AS failure.62183.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 11                                                                # STEP 0
ACTION: int2 = 11 
int2 = None : <type 'NoneType'>
=> int2 = 11 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 1
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x101e8a560> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 3
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8a560> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.inorder()                                                  # STEP 4
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8a560> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1 = avl.AVLTree()                                                     # STEP 5
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x101e8a560> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
==================================================
result = avl1.inorder()                                                  # STEP 6
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                        # STEP 9
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 10
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 11]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 12
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 1                                                                # STEP 13
ACTION: int0 = 1 
int0 = 16 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 14
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 15
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 13                                                               # STEP 16
ACTION: int1 = 13 
int1 = None : <type 'NoneType'>
=> int1 = 13 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 17
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 1]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 19
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 14                                                               # STEP 24
ACTION: int2 = 14 
int2 = 11 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 25
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                       # STEP 26
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 18                                                               # STEP 27
ACTION: int1 = 18 
int1 = 13 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 28
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 8                                                                # STEP 29
ACTION: int0 = 8 
int0 = 1 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 30
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 1, 8]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 33
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 34
ACTION: avl1.delete(int0) 
int0 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16, 1]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 35
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 3                                                                # STEP 36
ACTION: int0 = 3 
int0 = 8 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 1, 14]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 38
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 1, 18, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 39
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 18, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 1, 14]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 40
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 41
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 1, 3, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 42
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 43
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 19                                                               # STEP 44
ACTION: int2 = 19 
int2 = 14 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 45
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 46
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 1, 18, 3, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 47
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([16, 1, 18, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
==================================================
int0 = 16                                                               # STEP 48
ACTION: int0 = 16 
int0 = 3 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 49
ACTION: int1 = 18 
int1 = 18 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 50
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 3, 14, 16, 18]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 51
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 52
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 53
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 54
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1 == avl1                                                            # STEP 55
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int3)                                                       # STEP 56
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 57
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 3, 14, 16, 18]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 58
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 59
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 60
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 61
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 62
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 63
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 11                                                               # STEP 64
ACTION: int2 = 11 
int2 = 19 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int1 = 14                                                               # STEP 65
ACTION: int1 = 14 
int1 = 18 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 66
ACTION: int3 = 7 
int3 = 7 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 67
ACTION: int0 = 10 
int0 = 16 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 68
ACTION: result = avl1.find(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 69
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                       # STEP 70
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101e8ad88> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 3, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101cd1878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:35.334480) Mon May  1 17:53:46 2017 [ 159 stmts 210 branches ]
  9 [2:0]
-- < 7 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([2, 7, 8, 9, 10, 16, 19])
  9 [3:0]
-- < 7 [2:1]
---- < 2 [1:-1]
------ > 6 [0:0] L
---- > 8 [0:0] L
-- > 16 [2:1]
---- < 10 [1:-1]
------ > 15 [0:0] L
---- > 19 [0:0] L
set([2, 6, 7, 8, 9, 10, 15, 16, 19])
  9 [3:0]
-- < 7 [2:1]
---- < 2 [1:-1]
------ > 6 [0:0] L
---- > 8 [0:0] L
-- > 16 [2:1]
---- < 10 [1:-1]
------ > 15 [0:0] L
---- > 19 [0:0] L
set([2, 6, 7, 8, 9, 10, 15, 16, 19])
  9 [3:0]
-- < 7 [2:1]
---- < 2 [1:-1]
------ > 6 [0:0] L
---- > 8 [0:0] L
-- > 16 [2:1]
---- < 10 [1:-1]
------ > 15 [0:0] L
---- > 19 [0:0] L
set([2, 6, 7, 8, 9, 10, 15, 16, 19])
  9 [3:1]
-- < 7 [2:1]
---- < 2 [1:-1]
------ > 6 [0:0] L
---- > 8 [0:0] L
-- > 16 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([2, 6, 7, 8, 9, 10, 16, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10302d170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 56 steps

SAVING TEST AS failure.62183.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 19                                                                # STEP 0
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 16                                                                # STEP 1
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int3 = 4                                                                 # STEP 2
ACTION: int3 = 4 
int3 = None : <type 'NoneType'>
=> int3 = 4 : <type 'int'>
==================================================
int0 = 9                                                                 # STEP 3
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 6
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int3 = 3                                                                 # STEP 7
ACTION: int3 = 3 
int3 = 4 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
result = avl1.inorder()                                                  # STEP 8
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                        # STEP 9
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 10
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 11
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 12
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 13
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 15
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 2                                                                # STEP 16
ACTION: int1 = 2 
int1 = 16 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 17
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 4]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 18
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19, 3, 4]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 19
ACTION: int2 = 18 
int2 = 19 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 20
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 21
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 23
ACTION: int3 = 8 
int3 = 3 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 14                                                               # STEP 25
ACTION: int1 = 14 
int1 = 2 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 26
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 27
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 28
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([19, 9, 3, 4, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 29
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 9, 3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 30
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([19, 3, 4]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 31
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 32
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 33
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x10302d8c0> : <type 'instance'>
avl_REF1 = set([19, 3, 4]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 34
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 36
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 38
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 39
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 9]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 40
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 9, 18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 41
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 42
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 43
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 16                                                               # STEP 46
ACTION: int1 = 16 
int1 = 14 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 47
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([9, 18]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 48
ACTION: int0 = 6 
int0 = 9 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
int3 = 19                                                               # STEP 49
ACTION: int3 = 19 
int3 = 8 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 50
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 9, 18]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 51
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([16, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 52
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([16, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 5                                                                # STEP 53
ACTION: int3 = 5 
int3 = 19 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 54
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([16, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 9, 18, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 55
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c9d680> : <type 'instance'>
avl_REF1 = set([16, 9, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([16, 9, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101cf40e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 26
STOPPING TESTING DUE TO TIMEOUT
8.15438189205 PERCENT COVERED
60.2481031418 TOTAL RUNTIME
6 EXECUTED
453 TOTAL TEST OPERATIONS
23.3188004494 TIME SPENT EXECUTING TEST OPERATIONS
0.051926612854 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.4876644611 TIME SPENT CHECKING PROPERTIES
46.8064649105 TOTAL TIME SPENT RUNNING SUT
0.00409007072449 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 11                                                                # STEP 0
int0 = 16                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
result = avl1.inorder()                                                  # STEP 3
result = avl1.inorder()                                                  # STEP 4
avl1 = avl.AVLTree()                                                     # STEP 5
result = avl1.inorder()                                                  # STEP 6
avl1.insert(int2)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.insert(int2)                                                        # STEP 9
avl1.delete(int0)                                                       # STEP 10
avl1.insert(int0)                                                       # STEP 11
result = avl1.inorder()                                                 # STEP 12
int0 = 1                                                                # STEP 13
avl1.delete(int2)                                                       # STEP 14
avl1.delete(int0)                                                       # STEP 15
int1 = 13                                                               # STEP 16
result = avl1.inorder()                                                 # STEP 17
avl1.insert(int0)                                                       # STEP 18
result = avl1.inorder()                                                 # STEP 19
avl1.delete(int1)                                                       # STEP 20
avl1.delete(int2)                                                       # STEP 21
avl1.insert(int0)                                                       # STEP 22
result = avl1.inorder()                                                 # STEP 23
int2 = 14                                                               # STEP 24
avl1 == avl1                                                            # STEP 25
avl1.insert(int0)                                                       # STEP 26
int1 = 18                                                               # STEP 27
avl1.delete(int2)                                                       # STEP 28
int0 = 8                                                                # STEP 29
avl1 == avl1                                                            # STEP 30
avl1.insert(int0)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
avl1.delete(int1)                                                       # STEP 33
avl1.delete(int0)                                                       # STEP 34
avl1.delete(int2)                                                       # STEP 35
int0 = 3                                                                # STEP 36
avl1.insert(int2)                                                       # STEP 37
avl1.insert(int1)                                                       # STEP 38
avl1.delete(int1)                                                       # STEP 39
result = avl1.inorder()                                                 # STEP 40
avl1.insert(int0)                                                       # STEP 41
avl1.insert(int0)                                                       # STEP 42
avl1.insert(int0)                                                       # STEP 43
int2 = 19                                                               # STEP 44
avl1.delete(int2)                                                       # STEP 45
avl1.insert(int1)                                                       # STEP 46
avl1.insert(int2)                                                       # STEP 47
int0 = 16                                                               # STEP 48
int1 = 18                                                               # STEP 49
avl1.delete(int2)                                                       # STEP 50
int3 = 7                                                                # STEP 51
result = avl1.inorder()                                                 # STEP 52
avl1.insert(int2)                                                       # STEP 53
avl1.insert(int0)                                                       # STEP 54
avl1 == avl1                                                            # STEP 55
avl1.delete(int3)                                                       # STEP 56
avl1.delete(int2)                                                       # STEP 57
avl1.delete(int1)                                                       # STEP 58
avl1.delete(int2)                                                       # STEP 59
avl1.delete(int3)                                                       # STEP 60
avl1.insert(int0)                                                       # STEP 61
avl1.insert(int0)                                                       # STEP 62
avl1.delete(int1)                                                       # STEP 63
int2 = 11                                                               # STEP 64
int1 = 14                                                               # STEP 65
int3 = 7                                                                # STEP 66
int0 = 10                                                               # STEP 67
result = avl1.find(int1)                                                # STEP 68
result = avl1.inorder()                                                 # STEP 69
avl1.delete(int1)                                                       # STEP 70
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101cd1878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int2 = 19                                                                # STEP 0
int1 = 16                                                                # STEP 1
int3 = 4                                                                 # STEP 2
int0 = 9                                                                 # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.insert(int3)                                                        # STEP 6
int3 = 3                                                                 # STEP 7
result = avl1.inorder()                                                  # STEP 8
avl1.delete(int3)                                                        # STEP 9
result = avl1.inorder()                                                 # STEP 10
avl1.delete(int3)                                                       # STEP 11
avl1.delete(int2)                                                       # STEP 12
avl1.delete(int2)                                                       # STEP 13
avl1.delete(int1)                                                       # STEP 14
avl1.delete(int2)                                                       # STEP 15
int1 = 2                                                                # STEP 16
avl1.insert(int3)                                                       # STEP 17
avl1.insert(int2)                                                       # STEP 18
int2 = 18                                                               # STEP 19
avl1.insert(int3)                                                       # STEP 20
avl1.delete(int1)                                                       # STEP 21
avl1.insert(int0)                                                       # STEP 22
int3 = 8                                                                # STEP 23
avl1.delete(int2)                                                       # STEP 24
int1 = 14                                                               # STEP 25
avl1.delete(int2)                                                       # STEP 26
avl1.delete(int1)                                                       # STEP 27
avl1.insert(int1)                                                       # STEP 28
avl1.delete(int1)                                                       # STEP 29
avl1.delete(int0)                                                       # STEP 30
avl1.delete(int3)                                                       # STEP 31
avl1.delete(int2)                                                       # STEP 32
avl1 = avl.AVLTree()                                                    # STEP 33
avl1.delete(int0)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
avl1.insert(int3)                                                       # STEP 36
avl1.delete(int3)                                                       # STEP 37
avl1.delete(int3)                                                       # STEP 38
avl1.insert(int3)                                                       # STEP 39
avl1.insert(int2)                                                       # STEP 40
avl1.insert(int0)                                                       # STEP 41
avl1.delete(int1)                                                       # STEP 42
avl1.insert(int2)                                                       # STEP 43
avl1.delete(int1)                                                       # STEP 44
avl1.delete(int1)                                                       # STEP 45
int1 = 16                                                               # STEP 46
avl1.delete(int3)                                                       # STEP 47
int0 = 6                                                                # STEP 48
int3 = 19                                                               # STEP 49
avl1.insert(int1)                                                       # STEP 50
avl1.insert(int2)                                                       # STEP 51
avl1.delete(int3)                                                       # STEP 52
int3 = 5                                                                # STEP 53
avl1.insert(int3)                                                       # STEP 54
avl1.delete(int2)                                                       # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101cf40e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
