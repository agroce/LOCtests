Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40675.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #20 (0:00:30.006171) Mon May  1 02:36:23 2017 [ 87 stmts 119 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050bcb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 97 steps

SAVING TEST AS failure.40675.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 16                                                                # STEP 0
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 1
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 2
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 19                                                                # STEP 4
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                        # STEP 6
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int2 = 14                                                                # STEP 7
ACTION: int2 = 14 
int2 = 13 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 8
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                        # STEP 9
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 5                                                                # STEP 10
ACTION: int3 = 5 
int3 = 19 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 11
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int3)                                                       # STEP 12
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 13
ACTION: int3 = 8 
int3 = 5 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int1 = 17                                                               # STEP 14
ACTION: int1 = 17 
int1 = 16 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 15
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 16
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 5]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 17
ACTION: int2 = 13 
int2 = 14 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 19
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 5, 13]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 21
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 22
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 23
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 5]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 25
ACTION: int3 = 5 
int3 = 8 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 27
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 29
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 30
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int2 = 9                                                                # STEP 33
ACTION: int2 = 9 
int2 = 13 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 34
ACTION: result = avl1.find(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 35
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 36
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 9]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 37
ACTION: int0 = 15 
int0 = 16 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 38
ACTION: result = avl1.find(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 39
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
result = avl1.find(int0)                                                # STEP 40
ACTION: result = avl1.find(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 41
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 42
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 15, 9]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 43
ACTION: avl2.delete(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 44
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 5, 15]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 45
ACTION: int2 = 15 
int2 = 9 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 46
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 15, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 47
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 48
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 49
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 50
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 51
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 15, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 52
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 53
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 54
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 55
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 56
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 57
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int3 = 14                                                               # STEP 58
ACTION: int3 = 14 
int3 = 5 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 59
ACTION: int2 = 10 
int2 = 15 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 60
ACTION: int1 = 10 
int1 = 17 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 61
ACTION: int0 = 12 
int0 = 15 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 62
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 9                                                                # STEP 63
ACTION: int3 = 9 
int3 = 14 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 64
ACTION: avl1.delete(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 65
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 66
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 67
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 68
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 15]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 69
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 9]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 70
ACTION: int3 = 4 
int3 = 9 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 71
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 72
ACTION: int0 = 5 
int0 = 12 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 73
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([5, 15]) : <type 'set'>
==================================================
int1 = 1                                                                # STEP 74
ACTION: int1 = 1 
int1 = 10 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int0 = 13                                                               # STEP 75
ACTION: int0 = 13 
int0 = 5 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 76
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 77
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 13, 9]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 78
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 79
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 1]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 80
ACTION: result = avl2.find(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 81
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 82
ACTION: int0 = 6 
int0 = 13 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 83
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 1]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 84
ACTION: int1 = 17 
int1 = 1 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 85
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 4, 13, 9]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 86
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 1, 10]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 87
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 88
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([17, 4, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 6, 9, 13, 17]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 89
ACTION: avl2.delete(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 19                                                               # STEP 90
ACTION: int0 = 19 
int0 = 6 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
int2 = 5                                                                # STEP 91
ACTION: int2 = 5 
int2 = 10 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 92
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 1, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 1, 10, 5]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 93
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([4, 5, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 94
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10454c518> : <type 'instance'>
avl_REF2 = set([4, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([4, 15]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 95
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1052db5a8> : <type 'instance'>
avl_REF1 = set([16, 1, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 1, 10, 5, 17]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 96
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1052bb7e8> : <type 'instance'>
avl_REF0 = set([4, 6, 9, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([4, 6, 9, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104579098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045487a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 24 steps

SAVING TEST AS failure.40675.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 15                                                                # STEP 0
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 19                                                                # STEP 1
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int0 = 3                                                                 # STEP 2
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
int2 = 2                                                                 # STEP 3
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                 # STEP 5
ACTION: result = avl0.find(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int0)                                                        # STEP 6
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                        # STEP 7
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                        # STEP 9
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 10
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 19]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 12
ACTION: int2 = 12 
int2 = 2 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 13
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 14
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 15
ACTION: result = avl0.find(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int3 = 2                                                                # STEP 16
ACTION: int3 = 2 
int3 = 19 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 17
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 18
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 19, 15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 20
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 19, 12, 15]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 21
ACTION: int2 = 5 
int2 = 12 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 19, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 2, 19, 12, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 23
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104548e18> : <type 'instance'>
avl_REF0 = set([3, 2, 19, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 2, 19, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10472c488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 7
STOPPING TESTING DUE TO TIMEOUT
8.15199740175 PERCENT COVERED
60.2329320908 TOTAL RUNTIME
7 EXECUTED
528 TOTAL TEST OPERATIONS
24.323759079 TIME SPENT EXECUTING TEST OPERATIONS
0.0453321933746 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.4850831032 TIME SPENT CHECKING PROPERTIES
48.8088421822 TOTAL TIME SPENT RUNNING SUT
0.00396251678467 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 16                                                                # STEP 0
int2 = 13                                                                # STEP 1
int0 = 16                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
int3 = 19                                                                # STEP 4
avl1.delete(int2)                                                        # STEP 5
avl1.delete(int3)                                                        # STEP 6
int2 = 14                                                                # STEP 7
avl1.delete(int3)                                                        # STEP 8
avl1.delete(int1)                                                        # STEP 9
int3 = 5                                                                # STEP 10
avl1 == avl1                                                            # STEP 11
avl1.insert(int3)                                                       # STEP 12
int3 = 8                                                                # STEP 13
int1 = 17                                                               # STEP 14
avl1.delete(int2)                                                       # STEP 15
avl1.insert(int1)                                                       # STEP 16
int2 = 13                                                               # STEP 17
avl1.insert(int1)                                                       # STEP 18
avl1.delete(int3)                                                       # STEP 19
avl1.insert(int2)                                                       # STEP 20
avl1.insert(int1)                                                       # STEP 21
avl0 = avl.AVLTree()                                                    # STEP 22
avl1 == avl1                                                            # STEP 23
avl1.delete(int2)                                                       # STEP 24
int3 = 5                                                                # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl1.insert(int3)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl1.delete(int1)                                                       # STEP 29
avl1.insert(int3)                                                       # STEP 30
avl1.insert(int0)                                                       # STEP 31
avl0.insert(int1)                                                       # STEP 32
int2 = 9                                                                # STEP 33
result = avl1.find(int3)                                                # STEP 34
avl2 = avl.AVLTree()                                                    # STEP 35
avl0.insert(int2)                                                       # STEP 36
int0 = 15                                                               # STEP 37
result = avl1.find(int3)                                                # STEP 38
avl1.insert(int3)                                                       # STEP 39
result = avl1.find(int0)                                                # STEP 40
avl1.insert(int3)                                                       # STEP 41
avl0.insert(int0)                                                       # STEP 42
avl2.delete(int3)                                                       # STEP 43
avl1.insert(int0)                                                       # STEP 44
int2 = 15                                                               # STEP 45
avl0.insert(int1)                                                       # STEP 46
avl1.delete(int1)                                                       # STEP 47
avl1.delete(int1)                                                       # STEP 48
avl1.delete(int2)                                                       # STEP 49
avl2.insert(int2)                                                       # STEP 50
avl0.delete(int2)                                                       # STEP 51
avl1.delete(int3)                                                       # STEP 52
avl0.delete(int0)                                                       # STEP 53
avl2.delete(int1)                                                       # STEP 54
avl0.delete(int3)                                                       # STEP 55
avl1.delete(int1)                                                       # STEP 56
avl2.delete(int1)                                                       # STEP 57
int3 = 14                                                               # STEP 58
int2 = 10                                                               # STEP 59
int1 = 10                                                               # STEP 60
int0 = 12                                                               # STEP 61
avl0.delete(int3)                                                       # STEP 62
int3 = 9                                                                # STEP 63
avl1.delete(int3)                                                       # STEP 64
avl0.delete(int3)                                                       # STEP 65
avl0.delete(int0)                                                       # STEP 66
avl2.delete(int0)                                                       # STEP 67
avl2.insert(int1)                                                       # STEP 68
avl0.insert(int3)                                                       # STEP 69
int3 = 4                                                                # STEP 70
avl2.delete(int1)                                                       # STEP 71
int0 = 5                                                                # STEP 72
avl2.insert(int0)                                                       # STEP 73
int1 = 1                                                                # STEP 74
int0 = 13                                                               # STEP 75
avl1.delete(int2)                                                       # STEP 76
avl0.insert(int0)                                                       # STEP 77
avl1.delete(int0)                                                       # STEP 78
avl1.insert(int1)                                                       # STEP 79
result = avl2.find(int0)                                                # STEP 80
avl1.delete(int1)                                                       # STEP 81
int0 = 6                                                                # STEP 82
avl1.insert(int1)                                                       # STEP 83
int1 = 17                                                               # STEP 84
avl0.insert(int3)                                                       # STEP 85
avl1.insert(int2)                                                       # STEP 86
avl2.delete(int2)                                                       # STEP 87
avl0.insert(int0)                                                       # STEP 88
avl2.delete(int0)                                                       # STEP 89
int0 = 19                                                               # STEP 90
int2 = 5                                                                # STEP 91
avl1.insert(int2)                                                       # STEP 92
avl2.insert(int3)                                                       # STEP 93
avl2.delete(int2)                                                       # STEP 94
avl1.insert(int1)                                                       # STEP 95
avl0.delete(int1)                                                       # STEP 96
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104579098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int1 = 15                                                                # STEP 0
int3 = 19                                                                # STEP 1
int0 = 3                                                                 # STEP 2
int2 = 2                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
result = avl0.find(int3)                                                 # STEP 5
avl0.delete(int0)                                                        # STEP 6
avl0.delete(int2)                                                        # STEP 7
avl0.delete(int0)                                                        # STEP 8
avl0.delete(int0)                                                        # STEP 9
avl0.insert(int3)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
int2 = 12                                                               # STEP 12
avl0.delete(int2)                                                       # STEP 13
avl0.insert(int3)                                                       # STEP 14
result = avl0.find(int3)                                                # STEP 15
int3 = 2                                                                # STEP 16
avl0.delete(int3)                                                       # STEP 17
avl0.insert(int1)                                                       # STEP 18
avl0.delete(int2)                                                       # STEP 19
avl0.insert(int2)                                                       # STEP 20
int2 = 5                                                                # STEP 21
avl0.insert(int3)                                                       # STEP 22
avl0.delete(int1)                                                       # STEP 23
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10472c488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
196 BRANCHES COVERED
148 STATEMENTS COVERED
