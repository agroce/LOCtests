Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.39781.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #7 (0:00:30.034608) Mon May  1 01:49:25 2017 [ 127 stmts 168 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045d0cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 45 steps

SAVING TEST AS failure.39781.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 6                                                                 # STEP 0
ACTION: int0 = 6 
int0 = None : <type 'NoneType'>
=> int0 = 6 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 1
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 3
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([13]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                 # STEP 4
ACTION: result = avl0.find(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 6
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                        # STEP 7
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                 # STEP 8
ACTION: result = avl0.find(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int0)                                                        # STEP 9
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 2                                                                # STEP 10
ACTION: int3 = 2 
int3 = 13 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 11
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 6]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 12
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 13
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 19, 6]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 14
ACTION: int3 = 4 
int3 = 2 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 15
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 16
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 6]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 17
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 18
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int0 = 13                                                               # STEP 19
ACTION: int0 = 13 
int0 = 6 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 21
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 19, 6]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 22
ACTION: result = avl0.find(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 19, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 23
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 24
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 1                                                                # STEP 25
ACTION: int2 = 1 
int2 = 8 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 26
ACTION: int0 = 15 
int0 = 13 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 27
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 6]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 28
ACTION: result = avl0.find(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 29
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 11                                                               # STEP 30
ACTION: int0 = 11 
int0 = 15 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 31
ACTION: int3 = 7 
int3 = 4 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 32
ACTION: result = avl0.find(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int1 = 11                                                               # STEP 33
ACTION: int1 = 11 
int1 = 19 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 34
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 6, 7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 35
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 36
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 37
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 38
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 39
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 6, 7]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 40
ACTION: int0 = 6 
int0 = 11 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 2, 6, 7, 11]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 7, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 2, 6, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104734a70> : <type 'instance'>
avl_REF0 = set([1, 2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 2, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104129908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 20
STOPPING TESTING DUE TO TIMEOUT
7.31945348081 PERCENT COVERED
60.2192130089 TOTAL RUNTIME
7 EXECUTED
565 TOTAL TEST OPERATIONS
27.6286933422 TIME SPENT EXECUTING TEST OPERATIONS
0.0729863643646 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.7916998863 TIME SPENT CHECKING PROPERTIES
55.4203932285 TOTAL TIME SPENT RUNNING SUT
0.0042188167572 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 6                                                                 # STEP 0
int3 = 13                                                                # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
avl0.insert(int3)                                                        # STEP 3
result = avl0.find(int3)                                                 # STEP 4
avl0.delete(int3)                                                        # STEP 5
avl0.delete(int3)                                                        # STEP 6
avl0.insert(int0)                                                        # STEP 7
result = avl0.find(int0)                                                 # STEP 8
avl0.insert(int0)                                                        # STEP 9
int3 = 2                                                                # STEP 10
avl0.insert(int3)                                                       # STEP 11
int1 = 19                                                               # STEP 12
avl0.insert(int1)                                                       # STEP 13
int3 = 4                                                                # STEP 14
avl0.insert(int1)                                                       # STEP 15
avl0.delete(int1)                                                       # STEP 16
int2 = 8                                                                # STEP 17
avl0 == avl0                                                            # STEP 18
int0 = 13                                                               # STEP 19
avl0.delete(int0)                                                       # STEP 20
avl0.insert(int1)                                                       # STEP 21
result = avl0.find(int3)                                                # STEP 22
avl0.delete(int2)                                                       # STEP 23
avl0.delete(int2)                                                       # STEP 24
int2 = 1                                                                # STEP 25
int0 = 15                                                               # STEP 26
avl0.delete(int1)                                                       # STEP 27
result = avl0.find(int2)                                                # STEP 28
avl0.delete(int0)                                                       # STEP 29
int0 = 11                                                               # STEP 30
int3 = 7                                                                # STEP 31
result = avl0.find(int2)                                                # STEP 32
int1 = 11                                                               # STEP 33
avl0.insert(int3)                                                       # STEP 34
avl0.delete(int0)                                                       # STEP 35
avl0.delete(int1)                                                       # STEP 36
avl0.insert(int3)                                                       # STEP 37
result = avl0.find(int3)                                                # STEP 38
avl0.insert(int2)                                                       # STEP 39
int0 = 6                                                                # STEP 40
avl0.insert(int1)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl0.insert(int2)                                                       # STEP 43
avl0.delete(int3)                                                       # STEP 44
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104129908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
175 BRANCHES COVERED
132 STATEMENTS COVERED
