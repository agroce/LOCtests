Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62220.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  12 [2:0]
-- < 9 [1:1]
---- < 3 [0:0] L
-- > 19 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([3, 9, 12, 15, 19, 20])
  12 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 9 [0:0] L
-- > 19 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([3, 4, 9, 12, 15, 19, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f11d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 88 steps

SAVING TEST AS failure.62220.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2 == avl2                                                             # STEP 1
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.inorder()                                                  # STEP 2
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2 == avl2                                                             # STEP 3
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.inorder()                                                  # STEP 4
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                  # STEP 5
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 9                                                                 # STEP 6
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl2.delete(int2)                                                        # STEP 7
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
int0 = 7                                                                 # STEP 9
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 10
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int3 = 3                                                                # STEP 11
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 12
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 13
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int0)                                                       # STEP 14
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 12                                                               # STEP 15
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 16
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 17
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int2 = 12                                                               # STEP 18
ACTION: int2 = 12 
int2 = 9 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 19
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 20
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 3]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 21
ACTION: int1 = 10 
int1 = 12 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 22
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 23
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 10, 3]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 24
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 25
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 10, 3, 12]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 26
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 27
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int3 = 19                                                               # STEP 28
ACTION: int3 = 19 
int3 = 3 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 29
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 10, 3, 12, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 30
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int2 = 2                                                                # STEP 31
ACTION: int2 = 2 
int2 = 12 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 32
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                 # STEP 33
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int1)                                                       # STEP 34
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 10, 3, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([9, 3, 12, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 35
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([9, 3, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 7, 9, 12, 19]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 36
ACTION: int3 = 13 
int3 = 19 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int0 = 5                                                                # STEP 37
ACTION: int0 = 5 
int0 = 7 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 38
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 7, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 7                                                                # STEP 39
ACTION: int1 = 7 
int1 = 10 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 40
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 7, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 41
ACTION: int1 = 11 
int1 = 7 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 42
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 43
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.find(int3)                                                # STEP 44
ACTION: result = avl2.find(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 45
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 46
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 17                                                               # STEP 47
ACTION: int3 = 17 
int3 = 13 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 48
ACTION: avl2.delete(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 49
ACTION: avl2.delete(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 50
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 9, 12, 17, 19]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 51
ACTION: int2 = 13 
int2 = 2 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 52
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 15                                                               # STEP 53
ACTION: int0 = 15 
int0 = 5 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 54
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 55
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 56
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 9, 12, 15, 17, 19]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 57
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 58
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 9, 11, 12, 15, 17, 19]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 59
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 11, 12, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int1)                                                       # STEP 60
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 11, 12, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 9, 12, 15, 17, 19]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 61
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 62
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 12                                                               # STEP 63
ACTION: int1 = 12 
int1 = 11 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int0 = 16                                                               # STEP 64
ACTION: int0 = 16 
int0 = 15 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 65
ACTION: avl2.insert(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 9, 12, 15, 16, 19]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 66
ACTION: int2 = 20 
int2 = 13 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 67
ACTION: result = avl2.find(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 4                                                                # STEP 68
ACTION: int1 = 4 
int1 = 12 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 69
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 70
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 71
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 72
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.display()                                                          # STEP 73
ACTION: avl2.display() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
  12 [2:0]
-- < 9 [1:1]
---- < 3 [0:0] L
-- > 19 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([3, 9, 12, 15, 19, 20])
==================================================
avl2.delete(int2)                                                       # STEP 74
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 75
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 4, 9, 12, 15, 19]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 76
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int0)                                                       # STEP 77
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 78
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3, 4, 9, 12, 15, 19, 20]) : <type 'set'>
==================================================
avl2.display()                                                          # STEP 79
ACTION: avl2.display() 
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19, 20]) : <type 'set'>
  12 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 9 [0:0] L
-- > 19 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([3, 4, 9, 12, 15, 19, 20])
==================================================
result = avl2.find(int1)                                                # STEP 80
ACTION: result = avl2.find(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 81
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 82
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 83
ACTION: avl2.insert(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 9, 12, 15, 16, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 84
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 85
ACTION: avl2.insert(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 9, 12, 15, 16, 19, 20]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 86
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 87
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10278d908> : <type 'instance'>
avl_REF2 = set([3, 9, 12, 15, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([3, 9, 12, 15, 16, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026ed7a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #17 (0:00:30.100837) Mon May  1 17:58:49 2017 [ 159 stmts 210 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1023900e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 53 steps

SAVING TEST AS failure.62220.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 19                                                                # STEP 1
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 2
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
int0 = 8                                                                 # STEP 3
ACTION: int0 = 8 
int0 = None : <type 'NoneType'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 4
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 5
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 19                                                                # STEP 6
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int2)                                                        # STEP 7
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 10
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 11
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 12
ACTION: int0 = 10 
int0 = 8 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 13
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 17
ACTION: int3 = 12 
int3 = 19 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 18
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 19
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 20
ACTION: int2 = 5 
int2 = 19 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 21
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 22
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12, 5]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 23
ACTION: result = avl0.find(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int3 = 10                                                               # STEP 24
ACTION: int3 = 10 
int3 = 12 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 25
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int2)                                                # STEP 26
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 27
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 29
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18, 12, 5]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([12, 5]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 31
ACTION: int3 = 4 
int3 = 10 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 32
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 5, 12]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 33
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([4, 5, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([4, 5, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18, 4, 5, 12]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 35
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 5, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 9                                                                # STEP 36
ACTION: int3 = 9 
int3 = 4 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 37
ACTION: result = avl0.find(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 5, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 38
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 5, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 39
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 5, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 4, 5, 10, 12]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 40
ACTION: int3 = 1 
int3 = 9 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 5, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([18, 4, 10, 12]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 42
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 10, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 43
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([18, 4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 18, 4, 10, 12]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 45
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([1, 18, 4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([1, 18, 4, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 4, 5, 10, 12]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 47
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([1, 18, 4, 5, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 48
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1025c2a70> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 49
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([1, 18, 4, 5, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 18, 4, 5, 12]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 50
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1025c2a70> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1 == avl0                                                            # STEP 51
ACTION: avl1 == avl0 
avl1 = <avlbug2.AVLTree instance at 0x1025c2a70> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
avl_REF0 = set([1, 18, 4, 5, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 52
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1026d2fc8> : <type 'instance'>
avl_REF0 = set([1, 18, 4, 5, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 4, 5, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1025fa5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  4 [2:0]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
  4 [3:-1]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [2:1]
---- < 10 [1:1]
------ < 6 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 10, 13, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 1
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
60.2186739445 TOTAL RUNTIME
6 EXECUTED
442 TOTAL TEST OPERATIONS
22.6368277073 TIME SPENT EXECUTING TEST OPERATIONS
0.045547246933 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.7954888344 TIME SPENT CHECKING PROPERTIES
45.4323165417 TOTAL TIME SPENT RUNNING SUT
0.00415587425232 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
avl2 = avl.AVLTree()                                                     # STEP 0
avl2 == avl2                                                             # STEP 1
result = avl2.inorder()                                                  # STEP 2
avl2 == avl2                                                             # STEP 3
result = avl2.inorder()                                                  # STEP 4
result = avl2.inorder()                                                  # STEP 5
int2 = 9                                                                 # STEP 6
avl2.delete(int2)                                                        # STEP 7
avl2.insert(int2)                                                        # STEP 8
int0 = 7                                                                 # STEP 9
avl2.insert(int2)                                                       # STEP 10
int3 = 3                                                                # STEP 11
avl2.delete(int3)                                                       # STEP 12
result = avl2.inorder()                                                 # STEP 13
avl2.delete(int0)                                                       # STEP 14
int1 = 12                                                               # STEP 15
avl2.delete(int1)                                                       # STEP 16
avl2.delete(int0)                                                       # STEP 17
int2 = 12                                                               # STEP 18
avl2.delete(int0)                                                       # STEP 19
avl2.insert(int3)                                                       # STEP 20
int1 = 10                                                               # STEP 21
avl2.delete(int1)                                                       # STEP 22
avl2.insert(int1)                                                       # STEP 23
avl2.insert(int3)                                                       # STEP 24
avl2.insert(int2)                                                       # STEP 25
avl2.insert(int1)                                                       # STEP 26
result = avl2.inorder()                                                 # STEP 27
int3 = 19                                                               # STEP 28
avl2.insert(int0)                                                       # STEP 29
avl2.insert(int0)                                                       # STEP 30
int2 = 2                                                                # STEP 31
result = avl2.inorder()                                                 # STEP 32
result = avl2.inorder()                                                 # STEP 33
avl2.delete(int1)                                                       # STEP 34
avl2.insert(int3)                                                       # STEP 35
int3 = 13                                                               # STEP 36
int0 = 5                                                                # STEP 37
avl2.delete(int3)                                                       # STEP 38
int1 = 7                                                                # STEP 39
avl2.delete(int1)                                                       # STEP 40
int1 = 11                                                               # STEP 41
avl2.delete(int1)                                                       # STEP 42
avl2.delete(int3)                                                       # STEP 43
result = avl2.find(int3)                                                # STEP 44
avl2.delete(int2)                                                       # STEP 45
avl2.delete(int3)                                                       # STEP 46
int3 = 17                                                               # STEP 47
avl2.delete(int0)                                                       # STEP 48
avl2.delete(int0)                                                       # STEP 49
avl2.insert(int3)                                                       # STEP 50
int2 = 13                                                               # STEP 51
avl2.delete(int2)                                                       # STEP 52
int0 = 15                                                               # STEP 53
avl2.insert(int3)                                                       # STEP 54
avl2.delete(int0)                                                       # STEP 55
avl2.insert(int0)                                                       # STEP 56
avl2.delete(int1)                                                       # STEP 57
avl2.insert(int1)                                                       # STEP 58
result = avl2.inorder()                                                 # STEP 59
avl2.delete(int1)                                                       # STEP 60
avl2.delete(int3)                                                       # STEP 61
avl2.delete(int1)                                                       # STEP 62
int1 = 12                                                               # STEP 63
int0 = 16                                                               # STEP 64
avl2.insert(int0)                                                       # STEP 65
int2 = 20                                                               # STEP 66
result = avl2.find(int1)                                                # STEP 67
int1 = 4                                                                # STEP 68
avl2.delete(int0)                                                       # STEP 69
avl2.delete(int0)                                                       # STEP 70
avl2.insert(int2)                                                       # STEP 71
result = avl2.inorder()                                                 # STEP 72
avl2.display()                                                          # STEP 73
avl2.delete(int2)                                                       # STEP 74
avl2.insert(int1)                                                       # STEP 75
result = avl2.inorder()                                                 # STEP 76
avl2.delete(int0)                                                       # STEP 77
avl2.insert(int2)                                                       # STEP 78
avl2.display()                                                          # STEP 79
result = avl2.find(int1)                                                # STEP 80
avl2.delete(int0)                                                       # STEP 81
avl2.delete(int1)                                                       # STEP 82
avl2.insert(int0)                                                       # STEP 83
avl2.delete(int0)                                                       # STEP 84
avl2.insert(int0)                                                       # STEP 85
avl2.insert(int2)                                                       # STEP 86
avl2.delete(int2)                                                       # STEP 87
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026ed7a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
avl0 = avl.AVLTree()                                                     # STEP 0
int3 = 19                                                                # STEP 1
avl0.insert(int3)                                                        # STEP 2
int0 = 8                                                                 # STEP 3
avl0.delete(int3)                                                        # STEP 4
avl0 == avl0                                                             # STEP 5
int2 = 19                                                                # STEP 6
avl0.insert(int2)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
avl0.delete(int2)                                                        # STEP 9
avl0.delete(int3)                                                       # STEP 10
avl0.delete(int0)                                                       # STEP 11
int0 = 10                                                               # STEP 12
int1 = 18                                                               # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.insert(int2)                                                       # STEP 15
avl0.delete(int3)                                                       # STEP 16
int3 = 12                                                               # STEP 17
avl0.delete(int3)                                                       # STEP 18
avl0.insert(int3)                                                       # STEP 19
int2 = 5                                                                # STEP 20
avl0.insert(int3)                                                       # STEP 21
avl0.insert(int2)                                                       # STEP 22
result = avl0.find(int1)                                                # STEP 23
int3 = 10                                                               # STEP 24
avl0.delete(int0)                                                       # STEP 25
result = avl0.find(int2)                                                # STEP 26
avl0.delete(int0)                                                       # STEP 27
avl0.delete(int3)                                                       # STEP 28
avl0.insert(int1)                                                       # STEP 29
avl0.delete(int1)                                                       # STEP 30
int3 = 4                                                                # STEP 31
avl0.insert(int3)                                                       # STEP 32
avl0.delete(int0)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
result = avl0.inorder()                                                 # STEP 35
int3 = 9                                                                # STEP 36
result = avl0.find(int3)                                                # STEP 37
avl0.insert(int2)                                                       # STEP 38
avl0.insert(int0)                                                       # STEP 39
int3 = 1                                                                # STEP 40
avl0.delete(int2)                                                       # STEP 41
result = avl0.find(int2)                                                # STEP 42
avl0.insert(int1)                                                       # STEP 43
avl0.insert(int3)                                                       # STEP 44
avl0.delete(int2)                                                       # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl0.insert(int1)                                                       # STEP 47
avl1 = avl.AVLTree()                                                    # STEP 48
avl0.delete(int0)                                                       # STEP 49
avl1.insert(int3)                                                       # STEP 50
avl1 == avl0                                                            # STEP 51
avl0.delete(int1)                                                       # STEP 52
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1025fa5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
