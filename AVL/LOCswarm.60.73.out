Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.44417.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #34 (0:00:30.018669) Mon May  1 03:02:47 2017 [ 147 stmts 194 branches ]
  13 [2:0]
-- < 7 [1:0]
---- < 3 [0:0] L
---- > 12 [0:0] L
-- > 15 [1:-1]
---- > 20 [0:0] L
set([3, 7, 12, 13, 15, 20])
  13 [2:0]
-- < 7 [1:0]
---- < 3 [0:0] L
---- > 12 [0:0] L
-- > 15 [1:-1]
---- > 20 [0:0] L
set([3, 7, 12, 13, 15, 20])
  13 [2:0]
-- < 7 [1:0]
---- < 3 [0:0] L
---- > 12 [0:0] L
-- > 15 [1:-1]
---- > 20 [0:0] L
set([3, 7, 12, 13, 15, 20])
  15 [2:0]
-- < 10 [1:0]
---- < 6 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([6, 10, 12, 15, 17, 20])
  15 [2:0]
-- < 10 [1:0]
---- < 6 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([6, 10, 12, 15, 17, 20])
  15 [2:0]
-- < 10 [1:0]
---- < 6 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([6, 10, 12, 15, 17, 20])
  15 [3:1]
-- < 10 [2:1]
---- < 6 [1:1]
------ < 4 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([4, 6, 10, 12, 15, 17, 20])
  15 [3:1]
-- < 10 [2:1]
---- < 6 [1:1]
------ < 4 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([4, 6, 10, 12, 15, 17, 20])
  15 [3:1]
-- < 10 [2:1]
---- < 6 [1:1]
------ < 4 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([4, 6, 10, 12, 15, 17, 20])
  15 [3:1]
-- < 10 [2:1]
---- < 6 [1:1]
------ < 4 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([4, 6, 10, 12, 15, 17, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10450a3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 72 steps

SAVING TEST AS failure.44417.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 14                                                                # STEP 0
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 1
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 2
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int1 = 10                                                                # STEP 3
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                        # STEP 6
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
int2 = 14                                                                # STEP 7
ACTION: int2 = 14 
int2 = 14 : <type 'int'>
==================================================
avl0.delete(int2)                                                        # STEP 8
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 10
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10, 12]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 11
ACTION: int1 = 8 
int1 = 10 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 13
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 14
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 15
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 16
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 10]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 18
ACTION: int2 = 10 
int2 = 14 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 19
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 8                                                                # STEP 20
ACTION: int1 = 8 
int1 = 8 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 21
ACTION: int3 = 4 
int3 = 12 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 22
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 23
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 24
ACTION: int0 = 10 
int0 = 14 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 8                                                                # STEP 26
ACTION: int2 = 8 
int2 = 10 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 27
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 6                                                                # STEP 29
ACTION: int3 = 6 
int3 = 4 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 30
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10, 6]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 31
ACTION: int3 = 5 
int3 = 6 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 10, 6]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 33
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 34
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 10, 5, 6]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 35
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 37
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 38
ACTION: int3 = 4 
int3 = 5 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 39
ACTION: int0 = 19 
int0 = 10 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 40
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 7                                                                # STEP 41
ACTION: int2 = 7 
int2 = 8 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 42
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 7                                                                # STEP 43
ACTION: int1 = 7 
int1 = 8 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 44
ACTION: int3 = 11 
int3 = 4 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 45
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 19]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 46
ACTION: int2 = 2 
int2 = 7 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 47
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 48
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 19, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 49
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 50
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 4                                                                # STEP 51
ACTION: int1 = 4 
int1 = 7 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 52
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 53
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([10, 7]) : <type 'set'>
==================================================
int0 = 20                                                               # STEP 54
ACTION: int0 = 20 
int0 = 19 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 55
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 56
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 10, 20, 5, 6]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 57
ACTION: int0 = 1 
int0 = 20 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 58
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 4, 7]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 59
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([10, 7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 60
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 20, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 4                                                                # STEP 61
ACTION: int1 = 4 
int1 = 4 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 62
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 20, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 63
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 11, 7]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 64
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([8, 10, 20, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 5, 6, 8, 10, 20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 65
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([10, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 66
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 11, 7]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 67
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 8, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 68
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1045cec68> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 8, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 4, 5, 6, 8, 10, 20]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 69
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 11, 4, 7]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 70
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 11, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 71
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104691638> : <type 'instance'>
avl_REF2 = set([10, 11, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([10, 4, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045a40e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 20
STOPPING TESTING DUE TO TIMEOUT
8.73660279311 PERCENT COVERED
60.17664814 TOTAL RUNTIME
7 EXECUTED
592 TOTAL TEST OPERATIONS
26.5026433468 TIME SPENT EXECUTING TEST OPERATIONS
0.0801730155945 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.8069036007 TIME SPENT CHECKING PROPERTIES
53.3095469475 TOTAL TIME SPENT RUNNING SUT
0.00385808944702 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 14                                                                # STEP 0
int3 = 12                                                                # STEP 1
int0 = 14                                                                # STEP 2
int1 = 10                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int2)                                                        # STEP 5
avl0.insert(int1)                                                        # STEP 6
int2 = 14                                                                # STEP 7
avl0.delete(int2)                                                        # STEP 8
avl0.delete(int2)                                                        # STEP 9
avl0.insert(int3)                                                       # STEP 10
int1 = 8                                                                # STEP 11
avl0.insert(int3)                                                       # STEP 12
avl0.delete(int3)                                                       # STEP 13
avl0.delete(int1)                                                       # STEP 14
avl0.delete(int2)                                                       # STEP 15
avl0.insert(int1)                                                       # STEP 16
avl0.delete(int1)                                                       # STEP 17
int2 = 10                                                               # STEP 18
avl0.delete(int1)                                                       # STEP 19
int1 = 8                                                                # STEP 20
int3 = 4                                                                # STEP 21
avl0.insert(int0)                                                       # STEP 22
avl0.delete(int0)                                                       # STEP 23
int0 = 10                                                               # STEP 24
avl0.insert(int2)                                                       # STEP 25
int2 = 8                                                                # STEP 26
avl2 = avl.AVLTree()                                                    # STEP 27
avl0.delete(int3)                                                       # STEP 28
int3 = 6                                                                # STEP 29
avl0.insert(int3)                                                       # STEP 30
int3 = 5                                                                # STEP 31
avl0.insert(int1)                                                       # STEP 32
avl2.delete(int0)                                                       # STEP 33
avl0.insert(int3)                                                       # STEP 34
avl2.delete(int2)                                                       # STEP 35
avl0.insert(int1)                                                       # STEP 36
avl2.insert(int0)                                                       # STEP 37
int3 = 4                                                                # STEP 38
int0 = 19                                                               # STEP 39
avl2.delete(int3)                                                       # STEP 40
int2 = 7                                                                # STEP 41
avl2.delete(int2)                                                       # STEP 42
int1 = 7                                                                # STEP 43
int3 = 11                                                               # STEP 44
avl2.insert(int0)                                                       # STEP 45
int2 = 2                                                                # STEP 46
avl2.delete(int1)                                                       # STEP 47
avl2.insert(int1)                                                       # STEP 48
avl2.insert(int0)                                                       # STEP 49
avl2.insert(int1)                                                       # STEP 50
int1 = 4                                                                # STEP 51
avl0.delete(int0)                                                       # STEP 52
avl2.delete(int0)                                                       # STEP 53
int0 = 20                                                               # STEP 54
avl2.delete(int3)                                                       # STEP 55
avl0.insert(int0)                                                       # STEP 56
int0 = 1                                                                # STEP 57
avl2.insert(int1)                                                       # STEP 58
avl2.delete(int1)                                                       # STEP 59
avl0.delete(int0)                                                       # STEP 60
int1 = 4                                                                # STEP 61
avl0.delete(int2)                                                       # STEP 62
avl2.insert(int3)                                                       # STEP 63
avl0.insert(int0)                                                       # STEP 64
avl2.delete(int3)                                                       # STEP 65
avl2.insert(int3)                                                       # STEP 66
avl0.insert(int0)                                                       # STEP 67
avl0.insert(int1)                                                       # STEP 68
avl2.insert(int1)                                                       # STEP 69
avl2.delete(int0)                                                       # STEP 70
avl2.delete(int3)                                                       # STEP 71
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045a40e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
