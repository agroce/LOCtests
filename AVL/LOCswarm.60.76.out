Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.45059.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #37 (0:00:30.055686) Mon May  1 03:05:50 2017 [ 22 stmts 31 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103074710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 53 steps

SAVING TEST AS failure.45059.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 13                                                                # STEP 0
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
int1 = 1                                                                 # STEP 1
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 2
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int2 = 9                                                                 # STEP 3
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 12                                                                # STEP 6
ACTION: int2 = 12 
int2 = 9 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl1 == avl1                                                             # STEP 7
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                        # STEP 8
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 9
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 6                                                                # STEP 11
ACTION: int0 = 6 
int0 = 12 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 12
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 10                                                               # STEP 14
ACTION: int2 = 10 
int2 = 12 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 13]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 16
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 17
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 13]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 19
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 2                                                                # STEP 21
ACTION: int1 = 2 
int1 = 1 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 22
ACTION: int2 = 17 
int2 = 10 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 23
ACTION: int3 = 4 
int3 = 13 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 24
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int2)                                                       # STEP 25
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 13]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 26
ACTION: int2 = 20 
int2 = 17 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 27
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 4, 13]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 28
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 29
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 13                                                               # STEP 30
ACTION: int0 = 13 
int0 = 6 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 31
ACTION: int1 = 12 
int1 = 2 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 32
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 4, 13, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 33
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([17, 4, 20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 34
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int0 = 20                                                               # STEP 35
ACTION: int0 = 20 
int0 = 13 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 36
ACTION: int3 = 15 
int3 = 4 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 37
ACTION: int2 = 18 
int2 = 20 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 38
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([17, 4]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 39
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 4, 15]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 40
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 41
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 42
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 4, 20, 15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 43
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([17, 4, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 44
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 4, 20, 12]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 45
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 4, 20, 12, 15]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 46
ACTION: int0 = 11 
int0 = 20 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 47
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 4, 20, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 18, 4, 20, 12, 15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 48
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 18, 4, 20, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 18, 4, 20, 11, 12, 15]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 49
ACTION: int1 = 10 
int1 = 12 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 50
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 18, 4, 20, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int0 = 2                                                                # STEP 51
ACTION: int0 = 2 
int0 = 11 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 52
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102fbe128> : <type 'instance'>
avl_REF1 = set([17, 18, 4, 20, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 4, 20, 11, 12, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c9f8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.15199740175 PERCENT COVERED
63.3702180386 TOTAL RUNTIME
8 EXECUTED
653 TOTAL TEST OPERATIONS
29.0372087955 TIME SPENT EXECUTING TEST OPERATIONS
0.0919959545135 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.1747255325 TIME SPENT CHECKING PROPERTIES
58.2119343281 TOTAL TIME SPENT RUNNING SUT
0.00424075126648 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 13                                                                # STEP 0
int1 = 1                                                                 # STEP 1
int0 = 12                                                                # STEP 2
int2 = 9                                                                 # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int2)                                                        # STEP 5
int2 = 12                                                                # STEP 6
avl1 == avl1                                                             # STEP 7
avl1.insert(int0)                                                        # STEP 8
avl1.delete(int2)                                                        # STEP 9
avl1.delete(int2)                                                       # STEP 10
int0 = 6                                                                # STEP 11
avl1.insert(int3)                                                       # STEP 12
avl1.delete(int1)                                                       # STEP 13
int2 = 10                                                               # STEP 14
avl1.insert(int2)                                                       # STEP 15
avl1.delete(int2)                                                       # STEP 16
avl1.insert(int2)                                                       # STEP 17
avl1.delete(int2)                                                       # STEP 18
avl1.delete(int2)                                                       # STEP 19
avl1.delete(int2)                                                       # STEP 20
int1 = 2                                                                # STEP 21
int2 = 17                                                               # STEP 22
int3 = 4                                                                # STEP 23
avl1 == avl1                                                            # STEP 24
avl1.insert(int2)                                                       # STEP 25
int2 = 20                                                               # STEP 26
avl1.insert(int3)                                                       # STEP 27
avl1.delete(int1)                                                       # STEP 28
avl1.delete(int0)                                                       # STEP 29
int0 = 13                                                               # STEP 30
int1 = 12                                                               # STEP 31
avl1.insert(int2)                                                       # STEP 32
avl1.delete(int0)                                                       # STEP 33
avl1.insert(int3)                                                       # STEP 34
int0 = 20                                                               # STEP 35
int3 = 15                                                               # STEP 36
int2 = 18                                                               # STEP 37
avl1.delete(int0)                                                       # STEP 38
avl1.insert(int3)                                                       # STEP 39
avl1.delete(int0)                                                       # STEP 40
avl1.insert(int3)                                                       # STEP 41
avl1.insert(int0)                                                       # STEP 42
avl1.delete(int3)                                                       # STEP 43
avl1.insert(int1)                                                       # STEP 44
avl1.insert(int3)                                                       # STEP 45
int0 = 11                                                               # STEP 46
avl1.insert(int2)                                                       # STEP 47
avl1.insert(int0)                                                       # STEP 48
int1 = 10                                                               # STEP 49
avl1.insert(int2)                                                       # STEP 50
int0 = 2                                                                # STEP 51
avl1.delete(int2)                                                       # STEP 52
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c9f8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
196 BRANCHES COVERED
148 STATEMENTS COVERED
