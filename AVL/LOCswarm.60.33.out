Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40482.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
WARNING: DEADLOCK (NO ENABLED ACTIONS)
TERMINATING TEST DUE TO NO ENABLED ACTIONS
  11 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
set([1, 3, 7, 11, 13, 18, 19])
  11 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
set([1, 3, 7, 11, 18, 19])
  11 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
set([1, 3, 7, 11, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1034574d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 75 steps

SAVING TEST AS failure.40482.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 9                                                                 # STEP 0
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
int0 = 5                                                                 # STEP 1
ACTION: int0 = 5 
int0 = None : <type 'NoneType'>
=> int0 = 5 : <type 'int'>
==================================================
int1 = 1                                                                 # STEP 2
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 11                                                                # STEP 3
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 5
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
int1 = 18                                                                # STEP 6
ACTION: int1 = 18 
int1 = 1 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                 # STEP 8
ACTION: result = avl0.find(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 1                                                                # STEP 10
ACTION: int2 = 1 
int2 = 9 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 11
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 12
ACTION: avl0.insert(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 11, 5]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 13
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 14
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int3)                                                # STEP 17
ACTION: result = avl0.find(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 19
ACTION: int2 = 16 
int2 = 1 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int2)                                                # STEP 22
ACTION: result = avl0.find(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 23
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 10                                                               # STEP 24
ACTION: int0 = 10 
int0 = 5 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 25
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 26
ACTION: int2 = 13 
int2 = 16 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 27
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 18]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 29
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 30
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 31
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 13]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 32
ACTION: int1 = 19 
int1 = 18 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 33
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 34
ACTION: int2 = 3 
int2 = 13 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 3, 13]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 36
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 18, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 1, 18, 3, 13]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 37
ACTION: result = avl0.find(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11, 1, 18, 3, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int3 = 3                                                                # STEP 38
ACTION: int3 = 3 
int3 = 11 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 39
ACTION: int2 = 15 
int2 = 3 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 40
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 7                                                                # STEP 41
ACTION: int2 = 7 
int2 = 15 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 42
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11, 1, 18, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([11, 1, 18, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 3, 7, 11, 13, 18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 44
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 3, 7, 11, 13, 18, 19]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 46
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 13, 18, 19]) : <type 'set'>
  11 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 3, 7, 11, 13, 18, 19])
==================================================
avl2 = avl.AVLTree()                                                    # STEP 47
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 48
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 12                                                               # STEP 49
ACTION: int1 = 12 
int1 = 19 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int2 = 13                                                               # STEP 50
ACTION: int2 = 13 
int2 = 7 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 51
ACTION: int3 = 18 
int3 = 3 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 52
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 13, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 3, 7, 11, 18, 19]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 53
ACTION: int2 = 2 
int2 = 13 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 54
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 7                                                                # STEP 55
ACTION: int2 = 7 
int2 = 2 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 56
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 18, 19]) : <type 'set'>
  11 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 3, 7, 11, 18, 19])
==================================================
avl1.insert(int3)                                                       # STEP 57
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18, 13]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 58
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 59
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 18, 19]) : <type 'set'>
  11 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 3, 7, 11, 18, 19])
==================================================
avl0.delete(int2)                                                       # STEP 60
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 7, 11, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 3, 11, 18, 19]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 61
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 62
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 63
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 13, 7]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 64
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 12, 13, 7]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 65
ACTION: int1 = 16 
int1 = 12 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 66
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x1030a3b90> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 18, 19]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x1036890e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2 == avl1                                                            # STEP 67
ACTION: avl2 == avl1 
avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
avl_REF1 = set([18, 12, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
avl2.delete(int2)                                                       # STEP 68
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 69
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036890e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 70
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([18, 12, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 12                                                               # STEP 71
ACTION: int1 = 12 
int1 = 16 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 72
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036890e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 73
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103594fc8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 74
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103527128> : <type 'instance'>
avl_REF1 = set([18, 12, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([12, 13, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103757a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #92 (0:00:30.064000) Mon May  1 02:22:00 2017 [ 159 stmts 209 branches ]
  7 [2:0]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
set([2, 5, 7, 9, 10, 16])
  7 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:1]
------ < 12 [0:0] L
set([2, 5, 7, 9, 10, 12, 16])
  7 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:1]
------ < 12 [0:0] L
set([2, 5, 7, 9, 10, 12, 16])
  7 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:1]
------ < 12 [0:0] L
set([2, 5, 7, 9, 10, 12, 16])
  7 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:1]
------ < 12 [0:0] L
set([2, 5, 7, 9, 10, 12, 16])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 20
STOPPING TESTING DUE TO TIMEOUT
8.73660279311 PERCENT COVERED
60.2303609848 TOTAL RUNTIME
8 EXECUTED
598 TOTAL TEST OPERATIONS
26.5144815445 TIME SPENT EXECUTING TEST OPERATIONS
0.0731618404388 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.6177399158 TIME SPENT CHECKING PROPERTIES
53.1322214603 TOTAL TIME SPENT RUNNING SUT
0.00428509712219 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 9                                                                 # STEP 0
int0 = 5                                                                 # STEP 1
int1 = 1                                                                 # STEP 2
int3 = 11                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int1)                                                        # STEP 5
int1 = 18                                                                # STEP 6
avl0.insert(int3)                                                        # STEP 7
result = avl0.find(int2)                                                 # STEP 8
avl0.delete(int2)                                                        # STEP 9
int2 = 1                                                                # STEP 10
avl0 == avl0                                                            # STEP 11
avl0.insert(int0)                                                       # STEP 12
avl0.delete(int0)                                                       # STEP 13
avl0.delete(int2)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
result = avl0.find(int3)                                                # STEP 17
avl0.insert(int2)                                                       # STEP 18
int2 = 16                                                               # STEP 19
avl0.insert(int3)                                                       # STEP 20
avl0.delete(int0)                                                       # STEP 21
result = avl0.find(int2)                                                # STEP 22
avl0.delete(int2)                                                       # STEP 23
int0 = 10                                                               # STEP 24
avl0.delete(int3)                                                       # STEP 25
int2 = 13                                                               # STEP 26
avl0.delete(int2)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl0.delete(int2)                                                       # STEP 29
avl1 = avl.AVLTree()                                                    # STEP 30
avl0.insert(int2)                                                       # STEP 31
int1 = 19                                                               # STEP 32
avl1.insert(int2)                                                       # STEP 33
int2 = 3                                                                # STEP 34
avl0.insert(int2)                                                       # STEP 35
avl0.insert(int3)                                                       # STEP 36
result = avl0.find(int2)                                                # STEP 37
int3 = 3                                                                # STEP 38
int2 = 15                                                               # STEP 39
avl1.delete(int2)                                                       # STEP 40
int2 = 7                                                                # STEP 41
avl0.insert(int3)                                                       # STEP 42
avl0.insert(int2)                                                       # STEP 43
avl0.delete(int0)                                                       # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl0.display()                                                          # STEP 46
avl2 = avl.AVLTree()                                                    # STEP 47
avl1.delete(int0)                                                       # STEP 48
int1 = 12                                                               # STEP 49
int2 = 13                                                               # STEP 50
int3 = 18                                                               # STEP 51
avl0.delete(int2)                                                       # STEP 52
int2 = 2                                                                # STEP 53
avl0.delete(int2)                                                       # STEP 54
int2 = 7                                                                # STEP 55
avl0.display()                                                          # STEP 56
avl1.insert(int3)                                                       # STEP 57
avl2.insert(int2)                                                       # STEP 58
avl0.display()                                                          # STEP 59
avl0.delete(int2)                                                       # STEP 60
avl2.insert(int2)                                                       # STEP 61
avl2.delete(int2)                                                       # STEP 62
avl1.insert(int2)                                                       # STEP 63
avl1.insert(int1)                                                       # STEP 64
int1 = 16                                                               # STEP 65
avl0 = avl.AVLTree()                                                    # STEP 66
avl2 == avl1                                                            # STEP 67
avl2.delete(int2)                                                       # STEP 68
avl0.delete(int1)                                                       # STEP 69
avl1.insert(int3)                                                       # STEP 70
int1 = 12                                                               # STEP 71
avl0.delete(int1)                                                       # STEP 72
avl2.insert(int0)                                                       # STEP 73
avl1.delete(int3)                                                       # STEP 74
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103757a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
