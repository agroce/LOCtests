Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.98852.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #5 STEP #5 (0:00:30.073345) Fri Apr 28 03:13:09 2017 [ 134 stmts 178 branches ]
  10 [2:0]
-- < 6 [1:0]
---- < 3 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:1]
---- < 13 [0:0] L
set([3, 6, 8, 10, 13, 15])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b55638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 16 steps

SAVING TEST AS failure.98852.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 19                                                                # STEP 0
ACTION: int0 = 19 
int0 = None : <type 'NoneType'>
=> int0 = 19 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 14                                                                # STEP 2
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 3
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 17                                                                # STEP 4
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.insert(int2)                                                        # STEP 5
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19]) : <type 'set'>
==================================================
int2 = 4                                                                 # STEP 6
ACTION: int2 = 4 
int2 = 19 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 7
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([19, 14]) : <type 'set'>
==================================================
int1 = 6                                                                 # STEP 8
ACTION: int1 = 6 
int1 = 14 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 9
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
avl_REF2 = set([19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 19, 14]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
avl_REF2 = set([17, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 19, 6, 14]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 11
ACTION: int3 = 19 
int3 = 17 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 12
ACTION: int1 = 20 
int1 = 6 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 13
ACTION: avl2.delete(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
avl_REF2 = set([17, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 3                                                                # STEP 14
ACTION: int2 = 3 
int2 = 4 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 15
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103bb4ef0> : <type 'instance'>
avl_REF2 = set([17, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([17, 6, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103f9a440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  11 [3:-1]
-- < 8 [1:1]
---- < 2 [0:0] L
-- > 16 [2:1]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 20 [0:0] L
set([2, 8, 11, 12, 14, 16, 20])
  9 [2:0]
-- < 2 [1:-1]
---- > 8 [0:0] L
-- > 17 [1:0]
---- < 10 [0:0] L
---- > 18 [0:0] L
set([2, 8, 9, 10, 17, 18])
  9 [2:0]
-- < 7 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 17 [1:0]
---- < 10 [0:0] L
---- > 18 [0:0] L
set([2, 7, 8, 9, 10, 17, 18])
  9 [3:-1]
-- < 7 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 17 [2:1]
---- < 10 [1:-1]
------ > 12 [0:0] L
---- > 18 [0:0] L
set([2, 7, 8, 9, 10, 12, 17, 18])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 60
STOPPING TESTING DUE TO TIMEOUT
7.73930753564 PERCENT COVERED
60.1715929508 TOTAL RUNTIME
9 EXECUTED
776 TOTAL TEST OPERATIONS
29.2892251015 TIME SPENT EXECUTING TEST OPERATIONS
0.027880191803 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.4231743813 TIME SPENT CHECKING PROPERTIES
58.7123994827 TOTAL TIME SPENT RUNNING SUT
0.00538086891174 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 19                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
int1 = 14                                                                # STEP 2
int2 = 19                                                                # STEP 3
int3 = 17                                                                # STEP 4
avl2.insert(int2)                                                        # STEP 5
int2 = 4                                                                 # STEP 6
avl2.insert(int1)                                                        # STEP 7
int1 = 6                                                                 # STEP 8
avl2.insert(int3)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
int3 = 19                                                               # STEP 11
int1 = 20                                                               # STEP 12
avl2.delete(int2)                                                       # STEP 13
int2 = 3                                                                # STEP 14
avl2.delete(int3)                                                       # STEP 15
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103f9a440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
196 BRANCHES COVERED
146 STATEMENTS COVERED
