Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.365.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104c3be60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 23 steps

SAVING TEST AS failure.365.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1058fe998> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 10                                                                # STEP 1
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 2
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 3
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
int1 = 1                                                                 # STEP 4
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 14                                                                # STEP 5
ACTION: int3 = 14 
int3 = 10 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058fe998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                        # STEP 7
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058fe998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
int2 = 6                                                                 # STEP 8
ACTION: int2 = 6 
int2 = None : <type 'NoneType'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 10                                                                # STEP 9
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 10
ACTION: result = avl2.find(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 11
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 14]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 12
ACTION: int1 = 2 
int1 = 1 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 13
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 14
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10, 6, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 15
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058fe998> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 19                                                               # STEP 16
ACTION: int3 = 19 
int3 = 14 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 17
ACTION: result = avl2.find(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 18
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int2 = 14                                                               # STEP 19
ACTION: int2 = 14 
int2 = 6 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 20
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 2, 6, 14]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 22
ACTION: avl2.delete(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104dc8e60> : <type 'instance'>
avl_REF2 = set([10, 2, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([10, 2, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104e18d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  9 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [1:1]
---- < 13 [0:0] L
set([2, 5, 6, 9, 13, 14])
  9 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [1:1]
---- < 13 [0:0] L
set([2, 5, 6, 9, 13, 14])
  13 [2:0]
-- < 5 [1:-1]
---- > 8 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([5, 8, 13, 16, 17, 19])
  13 [2:0]
-- < 5 [1:-1]
---- > 8 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([5, 8, 13, 16, 17, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10591f4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 92 steps

SAVING TEST AS failure.365.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 13                                                                # STEP 0
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 2
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 13                                                                # STEP 3
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.insert(int0)                                                        # STEP 4
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([13]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                 # STEP 5
ACTION: result = avl0.find(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int0)                                                        # STEP 6
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                 # STEP 7
ACTION: result = avl0.find(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int3 = 10                                                                # STEP 8
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 9
ACTION: int0 = 14 
int0 = 13 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 10
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 12
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 13
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 14
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 15
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 17
ACTION: int0 = 9 
int0 = 14 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([13]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 19
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 13]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 20
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x104e340e0> : <type 'instance'>
avl_REF0 = set([2, 13]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 21
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 10                                                               # STEP 25
ACTION: int2 = 10 
int2 = 13 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 26
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 10]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 27
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 28
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int2 = 4                                                                # STEP 29
ACTION: int2 = 4 
int2 = 10 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 30
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int3 = 3                                                                # STEP 31
ACTION: int3 = 3 
int3 = 10 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 32
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 3, 10]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 34
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 3, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 35
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 3, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 36
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 37
ACTION: int1 = 20 
int1 = 2 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 38
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 3, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 2, 3, 10]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 39
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 40
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([9, 2, 3, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 3, 10]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 41
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 42
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 3, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 10]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 43
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 44
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 2, 10]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 45
ACTION: int2 = 11 
int2 = 4 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 46
ACTION: int1 = 20 
int1 = 20 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([20, 4]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 48
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([9, 2, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.find(int0)                                                # STEP 49
ACTION: result = avl0.find(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([9, 2, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 50
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([9, 2, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 18                                                               # STEP 51
ACTION: int2 = 18 
int2 = 11 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 52
ACTION: result = avl2.find(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 53
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 54
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 55
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([20, 18, 4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([9, 2, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 10]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 57
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 58
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x10592f560> : <type 'instance'>
avl_REF0 = set([2, 10]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 59
ACTION: int2 = 14 
int2 = 18 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 60
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 61
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 62
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 63
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([20, 18, 3, 4]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 64
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 65
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl1.find(int1)                                                # STEP 66
ACTION: result = avl1.find(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 67
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 68
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 69
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 7                                                                # STEP 70
ACTION: int1 = 7 
int1 = 20 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 71
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.delete(int2)                                                       # STEP 72
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 73
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 74
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 75
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 76
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([20, 18, 3, 4, 14]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 77
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([20, 18, 3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 4, 7, 14, 18, 20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 78
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([3, 4, 7, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([4, 7, 14, 18, 20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 79
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 80
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 81
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([4, 7, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 82
ACTION: avl2.delete(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([4, 7, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([4, 7, 18, 20]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 83
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int0)                                                       # STEP 84
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f55638> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 7]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 85
ACTION: int3 = 19 
int3 = 3 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 86
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 87
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 7]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 88
ACTION: int2 = 20 
int2 = 14 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 89
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104f55320> : <type 'instance'>
avl_REF1 = set([9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 90
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([4, 7, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 91
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e6f80> : <type 'instance'>
avl_REF2 = set([4, 7, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([4, 7, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058c9e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #36 (0:00:30.076880) Fri Apr 28 06:11:19 2017 [ 160 stmts 211 branches ]
  9 [2:0]
-- < 6 [1:0]
---- < 5 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:-1]
---- > 17 [0:0] L
set([5, 6, 7, 9, 16, 17])
  9 [2:0]
-- < 6 [1:0]
---- < 5 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:-1]
---- > 17 [0:0] L
set([5, 6, 7, 9, 16, 17])
  9 [2:0]
-- < 6 [1:0]
---- < 5 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 10 [0:0] L
set([5, 6, 7, 9, 10, 16])
  9 [2:0]
-- < 6 [1:0]
---- < 5 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 10 [0:0] L
set([5, 6, 7, 9, 10, 16])
  9 [2:0]
-- < 6 [1:0]
---- < 5 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 10 [0:0] L
set([5, 6, 7, 9, 10, 16])
  9 [2:0]
-- < 6 [1:0]
---- < 5 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 10 [0:0] L
set([5, 6, 7, 9, 10, 16])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10592e5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 42 steps

SAVING TEST AS failure.365.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 19                                                                # STEP 0
ACTION: int0 = 19 
int0 = None : <type 'NoneType'>
=> int0 = 19 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 2
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                        # STEP 3
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                        # STEP 4
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([19]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 6
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 7
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 6                                                                 # STEP 8
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 9
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 11
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                 # STEP 12
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2 == avl2                                                            # STEP 13
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int1)                                                       # STEP 14
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 15
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 16
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 7                                                                # STEP 17
ACTION: int1 = 7 
int1 = 6 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int2 = 13                                                               # STEP 18
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 19
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 3                                                                # STEP 20
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6, 7]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 22
ACTION: result = avl2.find(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int1 = 6                                                                # STEP 23
ACTION: int1 = 6 
int1 = 7 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 24
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 15                                                               # STEP 25
ACTION: int1 = 15 
int1 = 6 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 26
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 27
ACTION: avl2 = avl.AVLTree() 
avl2 = <avl.AVLTree instance at 0x10592e0e0> : <type 'instance'>
avl_REF2 = set([6, 7]) : <type 'set'>
=> avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 28
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 17                                                               # STEP 29
ACTION: int2 = 17 
int2 = 13 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 30
ACTION: int3 = 4 
int3 = 3 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 31
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 32
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 33
ACTION: int0 = 9 
int0 = 19 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 34
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 35
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 36
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 37
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 4, 15]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 38
ACTION: int3 = 1 
int3 = 4 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 39
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([17, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 4, 9, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 40
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([17, 4, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 41
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10590ac68> : <type 'instance'>
avl_REF2 = set([17, 4, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([17, 4, 9]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f6c320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 26
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.1776909828 TOTAL RUNTIME
8 EXECUTED
583 TOTAL TEST OPERATIONS
23.5801048279 TIME SPENT EXECUTING TEST OPERATIONS
0.0608332157135 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.7219071388 TIME SPENT CHECKING PROPERTIES
47.3020119667 TOTAL TIME SPENT RUNNING SUT
0.00500416755676 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
avl0 = avl.AVLTree()                                                     # STEP 0
int3 = 10                                                                # STEP 1
avl2 = avl.AVLTree()                                                     # STEP 2
avl2.insert(int3)                                                        # STEP 3
int1 = 1                                                                 # STEP 4
int3 = 14                                                                # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.insert(int1)                                                        # STEP 7
int2 = 6                                                                 # STEP 8
int0 = 10                                                                # STEP 9
result = avl2.find(int0)                                                # STEP 10
avl2.insert(int3)                                                       # STEP 11
int1 = 2                                                                # STEP 12
avl2.insert(int3)                                                       # STEP 13
avl2.insert(int2)                                                       # STEP 14
avl0.delete(int0)                                                       # STEP 15
int3 = 19                                                               # STEP 16
result = avl2.find(int3)                                                # STEP 17
avl2.insert(int2)                                                       # STEP 18
int2 = 14                                                               # STEP 19
avl2.insert(int0)                                                       # STEP 20
avl2.insert(int1)                                                       # STEP 21
avl2.delete(int2)                                                       # STEP 22
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104e18d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int0 = 13                                                                # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
result = avl0.inorder()                                                  # STEP 2
int2 = 13                                                                # STEP 3
avl0.insert(int0)                                                        # STEP 4
result = avl0.find(int0)                                                 # STEP 5
avl0.delete(int0)                                                        # STEP 6
result = avl0.find(int0)                                                 # STEP 7
int3 = 10                                                                # STEP 8
int0 = 14                                                                # STEP 9
int1 = 2                                                                # STEP 10
avl0.delete(int1)                                                       # STEP 11
avl0.delete(int1)                                                       # STEP 12
avl0.delete(int0)                                                       # STEP 13
avl0.insert(int3)                                                       # STEP 14
avl0.delete(int2)                                                       # STEP 15
avl0.delete(int3)                                                       # STEP 16
int0 = 9                                                                # STEP 17
avl0.insert(int2)                                                       # STEP 18
avl0.insert(int1)                                                       # STEP 19
avl0 = avl.AVLTree()                                                    # STEP 20
avl0.insert(int1)                                                       # STEP 21
avl0.delete(int2)                                                       # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.delete(int3)                                                       # STEP 24
int2 = 10                                                               # STEP 25
avl0.insert(int2)                                                       # STEP 26
result = avl0.find(int3)                                                # STEP 27
result = avl0.find(int3)                                                # STEP 28
int2 = 4                                                                # STEP 29
avl0 == avl0                                                            # STEP 30
int3 = 3                                                                # STEP 31
result = avl0.inorder()                                                 # STEP 32
avl0.insert(int3)                                                       # STEP 33
avl0.delete(int0)                                                       # STEP 34
avl0.insert(int1)                                                       # STEP 35
avl2 = avl.AVLTree()                                                    # STEP 36
int1 = 20                                                               # STEP 37
avl0.insert(int0)                                                       # STEP 38
avl2.delete(int3)                                                       # STEP 39
avl0.delete(int0)                                                       # STEP 40
avl2.insert(int2)                                                       # STEP 41
avl0.delete(int3)                                                       # STEP 42
avl2.delete(int1)                                                       # STEP 43
avl0.insert(int0)                                                       # STEP 44
int2 = 11                                                               # STEP 45
int1 = 20                                                               # STEP 46
avl2.insert(int1)                                                       # STEP 47
avl0.delete(int2)                                                       # STEP 48
result = avl0.find(int0)                                                # STEP 49
avl0.delete(int3)                                                       # STEP 50
int2 = 18                                                               # STEP 51
result = avl2.find(int0)                                                # STEP 52
avl2.delete(int3)                                                       # STEP 53
avl2.delete(int3)                                                       # STEP 54
avl2.insert(int2)                                                       # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl1 = avl.AVLTree()                                                    # STEP 57
avl0 = avl.AVLTree()                                                    # STEP 58
int2 = 14                                                               # STEP 59
avl1.delete(int0)                                                       # STEP 60
avl2.delete(int3)                                                       # STEP 61
avl1.insert(int3)                                                       # STEP 62
avl2.insert(int3)                                                       # STEP 63
result = avl2.inorder()                                                 # STEP 64
avl0.delete(int0)                                                       # STEP 65
result = avl1.find(int1)                                                # STEP 66
avl0.delete(int2)                                                       # STEP 67
avl0.delete(int0)                                                       # STEP 68
avl0.delete(int1)                                                       # STEP 69
int1 = 7                                                                # STEP 70
result = avl2.inorder()                                                 # STEP 71
avl1.delete(int2)                                                       # STEP 72
avl1.delete(int2)                                                       # STEP 73
avl0.insert(int1)                                                       # STEP 74
avl1.delete(int3)                                                       # STEP 75
avl2.insert(int2)                                                       # STEP 76
avl2.insert(int1)                                                       # STEP 77
avl2.delete(int3)                                                       # STEP 78
avl1.delete(int2)                                                       # STEP 79
avl0.delete(int2)                                                       # STEP 80
avl2.insert(int1)                                                       # STEP 81
avl2.delete(int2)                                                       # STEP 82
result = avl1.inorder()                                                 # STEP 83
avl0.insert(int0)                                                       # STEP 84
int3 = 19                                                               # STEP 85
avl1.insert(int1)                                                       # STEP 86
avl1.insert(int0)                                                       # STEP 87
int2 = 20                                                               # STEP 88
avl1.insert(int0)                                                       # STEP 89
avl2.insert(int1)                                                       # STEP 90
avl2.delete(int2)                                                       # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058c9e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int0 = 19                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2.delete(int0)                                                        # STEP 2
avl2.delete(int0)                                                        # STEP 3
avl2.delete(int0)                                                        # STEP 4
avl2.insert(int0)                                                        # STEP 5
avl2.delete(int0)                                                        # STEP 6
avl2.delete(int0)                                                        # STEP 7
int1 = 6                                                                 # STEP 8
avl2.insert(int1)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
result = avl2.inorder()                                                 # STEP 11
result = avl2.inorder()                                                 # STEP 12
avl2 == avl2                                                            # STEP 13
avl2.insert(int1)                                                       # STEP 14
avl2.delete(int0)                                                       # STEP 15
avl2.delete(int0)                                                       # STEP 16
int1 = 7                                                                # STEP 17
int2 = 13                                                               # STEP 18
avl2.delete(int2)                                                       # STEP 19
int3 = 3                                                                # STEP 20
avl2.insert(int1)                                                       # STEP 21
result = avl2.find(int3)                                                # STEP 22
int1 = 6                                                                # STEP 23
avl2.insert(int1)                                                       # STEP 24
int1 = 15                                                               # STEP 25
avl2.delete(int2)                                                       # STEP 26
avl2 = avl.AVLTree()                                                    # STEP 27
avl2.delete(int1)                                                       # STEP 28
int2 = 17                                                               # STEP 29
int3 = 4                                                                # STEP 30
avl2.delete(int2)                                                       # STEP 31
avl2.insert(int3)                                                       # STEP 32
int0 = 9                                                                # STEP 33
avl2.delete(int0)                                                       # STEP 34
avl2.insert(int1)                                                       # STEP 35
avl2.insert(int3)                                                       # STEP 36
avl2.insert(int2)                                                       # STEP 37
int3 = 1                                                                # STEP 38
avl2.insert(int0)                                                       # STEP 39
avl2.insert(int2)                                                       # STEP 40
avl2.delete(int1)                                                       # STEP 41
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f6c320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
