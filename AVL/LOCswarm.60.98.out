Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47974.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #41 (0:00:30.034533) Mon May  1 03:28:17 2017 [ 108 stmts 145 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10500a8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 21 steps

SAVING TEST AS failure.47974.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 11                                                                # STEP 1
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.delete(int3)                                                        # STEP 2
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                        # STEP 3
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 4
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int0 = 12                                                                # STEP 5
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 6
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int0)                                                        # STEP 7
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 12]) : <type 'set'>
==================================================
int3 = 3                                                                 # STEP 8
ACTION: int3 = 3 
int3 = 11 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
int1 = 2                                                                 # STEP 9
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
int0 = 2                                                                # STEP 10
ACTION: int0 = 2 
int0 = 12 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 11
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 12
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 11, 12]) : <type 'set'>
==================================================
int1 = 6                                                                # STEP 13
ACTION: int1 = 6 
int1 = 2 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 14
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 15
ACTION: avl2.delete(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([11, 12]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 16
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 17
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 11, 12]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 18
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([3, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 19
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([3, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3, 19, 11, 12]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 20
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1050aeb90> : <type 'instance'>
avl_REF2 = set([3, 19, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([19, 11, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10458ee18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 28
STOPPING TESTING DUE TO TIMEOUT
6.75544007795 PERCENT COVERED
60.2503499985 TOTAL RUNTIME
8 EXECUTED
649 TOTAL TEST OPERATIONS
28.8778784275 TIME SPENT EXECUTING TEST OPERATIONS
0.0760941505432 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.1475987434 TIME SPENT CHECKING PROPERTIES
58.0254771709 TOTAL TIME SPENT RUNNING SUT
0.00421404838562 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
avl2 = avl.AVLTree()                                                     # STEP 0
int3 = 11                                                                # STEP 1
avl2.delete(int3)                                                        # STEP 2
avl2.insert(int3)                                                        # STEP 3
avl2.insert(int3)                                                        # STEP 4
int0 = 12                                                                # STEP 5
avl2.insert(int3)                                                        # STEP 6
avl2.insert(int0)                                                        # STEP 7
int3 = 3                                                                 # STEP 8
int1 = 2                                                                 # STEP 9
int0 = 2                                                                # STEP 10
avl2.delete(int1)                                                       # STEP 11
avl2.insert(int0)                                                       # STEP 12
int1 = 6                                                                # STEP 13
avl2.insert(int0)                                                       # STEP 14
avl2.delete(int0)                                                       # STEP 15
int2 = 19                                                               # STEP 16
avl2.insert(int3)                                                       # STEP 17
avl2.insert(int3)                                                       # STEP 18
avl2.insert(int2)                                                       # STEP 19
avl2.delete(int3)                                                       # STEP 20
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10458ee18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
162 BRANCHES COVERED
121 STATEMENTS COVERED
