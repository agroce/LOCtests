Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99419.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c5ecb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 73 steps

SAVING TEST AS failure.99419.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 14                                                                # STEP 0
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 2
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                        # STEP 3
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 4
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 9                                                                 # STEP 5
ACTION: int2 = 9 
int2 = 14 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
result = avl0.find(int2)                                                 # STEP 6
ACTION: result = avl0.find(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 15                                                                # STEP 7
ACTION: int2 = 15 
int2 = 9 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.delete(int2)                                                        # STEP 8
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 10
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 11
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl0                                                            # STEP 12
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int2)                                                       # STEP 13
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 10                                                               # STEP 14
ACTION: int2 = 10 
int2 = 15 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 14]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 16
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 17
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 14]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 18
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 20
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 21
ACTION: result = avl0.find(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 23
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 14]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 25
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 26
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 8                                                                # STEP 27
ACTION: int0 = 8 
int0 = None : <type 'NoneType'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 29
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 30
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 14                                                               # STEP 31
ACTION: int2 = 14 
int2 = 10 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 14]) : <type 'set'>
==================================================
int1 = 1                                                                # STEP 33
ACTION: int1 = 1 
int1 = 8 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 34
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 35
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 36
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 37
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 38
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 3]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 39
ACTION: int0 = 15 
int0 = 8 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 41
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 3, 14]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 42
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 3, 14, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 3, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 44
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 45
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 3, 14, 15]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 46
ACTION: int3 = 20 
int3 = 3 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 47
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 48
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 3, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 49
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 50
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 3]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 51
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 11                                                               # STEP 52
ACTION: int2 = 11 
int2 = 14 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 53
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 54
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 55
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 8, 11]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 8]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 58
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 59
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 8, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 60
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 8, 11, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 61
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int0)                                                # STEP 62
ACTION: result = avl0.find(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 11, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int2 = 4                                                                # STEP 63
ACTION: int2 = 4 
int2 = 11 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 64
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 8, 11]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 65
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 66
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 67
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int0 = 11                                                               # STEP 68
ACTION: int0 = 11 
int0 = 15 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 69
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 70
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 71
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 72
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1038a5e60> : <type 'instance'>
avl_REF0 = set([3, 4, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 4, 8]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103976248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103eb2638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 65 steps

SAVING TEST AS failure.99419.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 19                                                                # STEP 0
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int2 = 4                                                                 # STEP 1
ACTION: int2 = 4 
int2 = None : <type 'NoneType'>
=> int2 = 4 : <type 'int'>
==================================================
int1 = 1                                                                 # STEP 2
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 3
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 5
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                        # STEP 6
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                        # STEP 7
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4, 14]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 10
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 4, 14]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 11
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 12
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([4, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 13
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 14
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 15                                                               # STEP 15
ACTION: int3 = 15 
int3 = 19 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 16
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 17
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 4, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 14]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 19
ACTION: result = avl1.find(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 20
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 21
ACTION: int2 = 11 
int2 = 4 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 15]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 23
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int3 = 1                                                                # STEP 24
ACTION: int3 = 1 
int3 = 15 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 25
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 26
ACTION: int1 = 9 
int1 = 1 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 27
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 28
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([14, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 29
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 14, 15]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 30
ACTION: int2 = 5 
int2 = 11 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 31
ACTION: result = avl1.find(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 32
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 16                                                               # STEP 33
ACTION: int2 = 16 
int2 = 5 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 34
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 15]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 35
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 36
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 37
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 9, 15]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 38
ACTION: result = avl2.find(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 14                                                               # STEP 40
ACTION: int0 = 14 
int0 = 14 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 42
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 43
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 44
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 45
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 9]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 46
ACTION: int2 = 10 
int2 = 16 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 47
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 1                                                                # STEP 48
ACTION: int1 = 1 
int1 = 9 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 49
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 50
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([1, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl1.inorder()                                                 # STEP 51
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 5                                                                # STEP 52
ACTION: int3 = 5 
int3 = 1 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 53
ACTION: avl2 = avl.AVLTree() 
avl2 = <avl.AVLTree instance at 0x103a41ab8> : <type 'instance'>
avl_REF2 = set([1, 9]) : <type 'set'>
=> avl2 = <avl.AVLTree instance at 0x103eae200> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 54
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 55
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int0 = 18                                                               # STEP 56
ACTION: int0 = 18 
int0 = 14 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 6                                                                # STEP 57
ACTION: int2 = 6 
int2 = 10 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 58
ACTION: result = avl1.find(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 59
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103eae200> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 60
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x103eae200> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 9                                                                # STEP 61
ACTION: int2 = 9 
int2 = 6 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 62
ACTION: result = avl2.find(int3) 
int3 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103eae200> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 63
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 64
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103eb2c68> : <type 'instance'>
avl_REF1 = set([1, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([9, 14, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a1ae18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  13 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 9 [0:0] L
-- > 20 [1:1]
---- < 19 [0:0] L
set([2, 5, 9, 13, 19, 20])
TEST #4 STEP #13 (0:00:30.030729) Fri Apr 28 03:53:52 2017 [ 161 stmts 213 branches ]
  11 [2:0]
-- < 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:1]
---- < 13 [0:0] L
set([7, 9, 10, 11, 13, 14])
  11 [2:0]
-- < 10 [1:1]
---- < 7 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([7, 10, 11, 14, 16, 17])
  11 [2:0]
-- < 10 [1:1]
---- < 7 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([7, 10, 11, 14, 16, 17])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e849e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 90 steps

SAVING TEST AS failure.99419.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 1                                                                 # STEP 0
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 1
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                 # STEP 3
ACTION: result = avl0.find(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 4                                                                 # STEP 4
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
result = avl0.find(int0)                                                 # STEP 5
ACTION: result = avl0.find(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.inorder()                                                  # STEP 7
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int1)                                                 # STEP 8
ACTION: result = avl0.find(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int3 = 10                                                                # STEP 9
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 10
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 12
ACTION: int1 = 11 
int1 = 1 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 13
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 14
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 15
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 17
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 18
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 19
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 13                                                               # STEP 20
ACTION: int2 = 13 
int2 = 7 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 21
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x103e840e0> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 23
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 25
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int3)                                                # STEP 26
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 11]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 28
ACTION: int0 = 14 
int0 = 4 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 29
ACTION: int1 = 9 
int1 = 11 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 30
ACTION: int3 = 7 
int3 = 10 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 31
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 11, 14]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10, 11, 14, 7]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 34
ACTION: int0 = 17 
int0 = 14 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10, 11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 11, 13, 14, 7]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 36
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10, 11, 13, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 37
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([10, 11, 13, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7, 9, 10, 11, 13, 14]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 38
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 11, 13, 14]) : <type 'set'>
  11 [2:0]
-- < 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:1]
---- < 13 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([7, 9, 10, 11, 13, 14])
==================================================
avl0.insert(int2)                                                       # STEP 39
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 11, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 11, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 11, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([7, 9, 10, 11, 14]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([7, 10, 11, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 16                                                               # STEP 44
ACTION: int3 = 16 
int3 = 7 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 45
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                       # STEP 46
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 13                                                               # STEP 47
ACTION: int1 = 13 
int1 = 9 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 48
ACTION: int2 = 4 
int2 = 13 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 49
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 50
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0 == avl0                                                            # STEP 51
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int3)                                                       # STEP 52
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 53
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 54
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
  11 [2:0]
-- < 10 [1:1]
---- < 7 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([7, 10, 11, 14, 16, 17])
==================================================
avl0.display()                                                          # STEP 55
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
  11 [2:0]
-- < 10 [1:1]
---- < 7 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([7, 10, 11, 14, 16, 17])
==================================================
avl0.delete(int1)                                                       # STEP 56
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int2)                                                # STEP 57
ACTION: result = avl0.find(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 5                                                                # STEP 58
ACTION: int0 = 5 
int0 = 17 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 59
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 60
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 61
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 62
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 63
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                 # STEP 64
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 65
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 66
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 67
ACTION: result = avl0.find(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 68
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 16                                                               # STEP 69
ACTION: int0 = 16 
int0 = 5 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 70
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int2)                                                # STEP 71
ACTION: result = avl0.find(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 72
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 73
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 14                                                               # STEP 74
ACTION: int1 = 14 
int1 = 13 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int3 = 2                                                                # STEP 75
ACTION: int3 = 2 
int3 = 16 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 76
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 77
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 78
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 79
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 80
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4, 7, 10, 11, 14, 17]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 81
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([4, 7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 82
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([4, 7, 10, 11, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 7, 10, 11, 14, 16, 17]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 83
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([4, 7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 16                                                               # STEP 84
ACTION: int0 = 16 
int0 = 16 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 85
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([4, 7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 4, 7, 10, 11, 14, 16, 17]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 86
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 87
ACTION: int3 = 16 
int3 = 2 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 88
ACTION: avl0.delete(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 10, 11, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 4, 7, 10, 11, 16, 17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 89
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103ea5dd0> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 10, 11, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 4, 7, 11, 16, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a3f7e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a16ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 100 steps

SAVING TEST AS failure.99419.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 1
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 20                                                                # STEP 2
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 3
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                        # STEP 4
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int3)                                                        # STEP 6
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int3)                                                        # STEP 7
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int3)                                                        # STEP 8
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int2 = 7                                                                 # STEP 9
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 10
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 11
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 12
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 13
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 19                                                               # STEP 14
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 16
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 19
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x103a42710> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
==================================================
result = avl0.find(int2)                                                # STEP 20
ACTION: result = avl0.find(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 7                                                                # STEP 21
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 23
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 25
ACTION: int1 = 8 
int1 = 19 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 26
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 7]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 28
ACTION: result = avl1.find(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 29
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 30
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 31
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 32
ACTION: int0 = 12 
int0 = 7 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 33
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 36
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 7]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 37
ACTION: int1 = 17 
int1 = 8 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 38
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 39
ACTION: int0 = 5 
int0 = 12 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 40
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 41
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0 == avl1                                                            # STEP 42
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
int2 = 10                                                               # STEP 43
ACTION: int2 = 10 
int2 = 7 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 44
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 16                                                               # STEP 45
ACTION: int1 = 16 
int1 = 17 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 46
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int2)                                                # STEP 47
ACTION: result = avl0.find(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 9                                                                # STEP 48
ACTION: int0 = 9 
int0 = 5 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 49
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl0.find(int1)                                                # STEP 50
ACTION: result = avl0.find(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 51
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.find(int3)                                                # STEP 52
ACTION: result = avl0.find(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 53
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 54
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 9]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 55
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 57
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 58
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 16]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 59
ACTION: int2 = 11 
int2 = 10 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int3 = 2                                                                # STEP 60
ACTION: int3 = 2 
int3 = 20 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 61
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12, 20, 9]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 62
ACTION: int0 = 5 
int0 = 9 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 63
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 16, 2]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 64
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 65
ACTION: avl1.insert(int3) 
int3 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 66
ACTION: int3 = 20 
int3 = 2 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 67
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0 == avl1                                                            # STEP 68
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF0 = set([8, 16, 2]) : <type 'set'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl1.delete(int2)                                                       # STEP 69
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 9                                                                # STEP 70
ACTION: int2 = 9 
int2 = 11 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 71
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int2)                                                       # STEP 72
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 16, 2, 9]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 73
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int0)                                                       # STEP 74
ACTION: avl0.insert(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([8, 16, 2, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 5, 8, 9, 16]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 75
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 5, 8, 9, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 8, 9, 16]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 76
ACTION: int0 = 17 
int0 = 5 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 77
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 9, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 8, 16]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 78
ACTION: int2 = 13 
int2 = 9 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 79
ACTION: int1 = 20 
int1 = 16 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 80
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl1.inorder()                                                 # STEP 81
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int3)                                                       # STEP 82
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 8, 16, 20]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 83
ACTION: int3 = 12 
int3 = 20 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 84
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.delete(int3)                                                       # STEP 85
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 86
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 8, 16, 17, 20]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 87
ACTION: result = avl1.find(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int3 = 8                                                                # STEP 88
ACTION: int3 = 8 
int3 = 12 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 89
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12, 2, 20, 13, 9]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 90
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 8, 16, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 91
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 92
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 13, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int1)                                                       # STEP 93
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF0 = set([2, 8, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 94
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 95
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([12, 2, 13, 9]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 96
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([12, 2, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 8, 9, 12, 13]) : <type 'set'>
==================================================
avl1 == avl0                                                            # STEP 97
ACTION: avl1 == avl0 
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl0 = <avl.AVLTree instance at 0x103a17488> : <type 'instance'>
avl_REF1 = set([2, 8, 9, 12, 13]) : <type 'set'>
avl_REF0 = set([2, 8, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
avl1.delete(int1)                                                       # STEP 98
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([2, 8, 9, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 99
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103a17bd8> : <type 'instance'>
avl_REF1 = set([2, 8, 9, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([2, 8, 9, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ea6248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 32
STOPPING TESTING DUE TO TIMEOUT
8.58500169664 PERCENT COVERED
60.2065241337 TOTAL RUNTIME
6 EXECUTED
460 TOTAL TEST OPERATIONS
17.4202213287 TIME SPENT EXECUTING TEST OPERATIONS
0.0495538711548 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
17.5359311104 TIME SPENT CHECKING PROPERTIES
34.9561524391 TOTAL TIME SPENT RUNNING SUT
0.00353097915649 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 14                                                                # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
avl0.delete(int2)                                                        # STEP 2
avl0.insert(int2)                                                        # STEP 3
avl0.insert(int2)                                                        # STEP 4
int2 = 9                                                                 # STEP 5
result = avl0.find(int2)                                                 # STEP 6
int2 = 15                                                                # STEP 7
avl0.delete(int2)                                                        # STEP 8
avl0.delete(int2)                                                        # STEP 9
avl0.delete(int2)                                                       # STEP 10
avl0.delete(int2)                                                       # STEP 11
avl0 == avl0                                                            # STEP 12
avl0.delete(int2)                                                       # STEP 13
int2 = 10                                                               # STEP 14
avl0.insert(int2)                                                       # STEP 15
avl0.delete(int2)                                                       # STEP 16
avl0.insert(int2)                                                       # STEP 17
int3 = 3                                                                # STEP 18
avl0.delete(int2)                                                       # STEP 19
int1 = 8                                                                # STEP 20
result = avl0.find(int3)                                                # STEP 21
avl0.delete(int2)                                                       # STEP 22
avl0.delete(int3)                                                       # STEP 23
avl0.insert(int1)                                                       # STEP 24
avl0.delete(int2)                                                       # STEP 25
avl0.delete(int2)                                                       # STEP 26
int0 = 8                                                                # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl0.delete(int1)                                                       # STEP 29
avl0.delete(int3)                                                       # STEP 30
int2 = 14                                                               # STEP 31
avl0.insert(int0)                                                       # STEP 32
int1 = 1                                                                # STEP 33
avl0.delete(int2)                                                       # STEP 34
avl0.insert(int0)                                                       # STEP 35
result = avl0.inorder()                                                 # STEP 36
avl0.delete(int3)                                                       # STEP 37
avl0.insert(int3)                                                       # STEP 38
int0 = 15                                                               # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl0.insert(int2)                                                       # STEP 41
avl0.insert(int0)                                                       # STEP 42
avl0.delete(int0)                                                       # STEP 43
avl0.delete(int0)                                                       # STEP 44
avl0.insert(int0)                                                       # STEP 45
int3 = 20                                                               # STEP 46
result = avl0.inorder()                                                 # STEP 47
avl0.delete(int2)                                                       # STEP 48
avl0.delete(int3)                                                       # STEP 49
avl0.delete(int0)                                                       # STEP 50
avl0 == avl0                                                            # STEP 51
int2 = 11                                                               # STEP 52
avl0.delete(int2)                                                       # STEP 53
avl0.delete(int3)                                                       # STEP 54
avl0.insert(int2)                                                       # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
avl0.delete(int3)                                                       # STEP 58
avl0.insert(int0)                                                       # STEP 59
avl0.insert(int2)                                                       # STEP 60
avl0.delete(int3)                                                       # STEP 61
result = avl0.find(int0)                                                # STEP 62
int2 = 4                                                                # STEP 63
avl0.delete(int0)                                                       # STEP 64
avl0.insert(int2)                                                       # STEP 65
avl0.insert(int2)                                                       # STEP 66
avl0.insert(int2)                                                       # STEP 67
int0 = 11                                                               # STEP 68
avl0.insert(int2)                                                       # STEP 69
avl0.insert(int0)                                                       # STEP 70
avl0.insert(int2)                                                       # STEP 71
avl0.delete(int0)                                                       # STEP 72
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103976248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int3 = 19                                                                # STEP 0
int2 = 4                                                                 # STEP 1
int1 = 1                                                                 # STEP 2
int0 = 14                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
result = avl1.inorder()                                                  # STEP 5
avl1.delete(int1)                                                        # STEP 6
avl1.delete(int3)                                                        # STEP 7
avl1.insert(int2)                                                        # STEP 8
avl1.insert(int0)                                                        # STEP 9
avl1.insert(int1)                                                       # STEP 10
avl1.insert(int1)                                                       # STEP 11
avl1.delete(int1)                                                       # STEP 12
avl1.delete(int2)                                                       # STEP 13
avl1.delete(int2)                                                       # STEP 14
int3 = 15                                                               # STEP 15
avl1.insert(int1)                                                       # STEP 16
avl1.insert(int2)                                                       # STEP 17
avl1.delete(int2)                                                       # STEP 18
result = avl1.find(int1)                                                # STEP 19
avl1.delete(int0)                                                       # STEP 20
int2 = 11                                                               # STEP 21
avl1.insert(int3)                                                       # STEP 22
avl1.insert(int1)                                                       # STEP 23
int3 = 1                                                                # STEP 24
avl1.delete(int3)                                                       # STEP 25
int1 = 9                                                                # STEP 26
avl1.delete(int2)                                                       # STEP 27
avl1.insert(int0)                                                       # STEP 28
avl1.insert(int3)                                                       # STEP 29
int2 = 5                                                                # STEP 30
result = avl1.find(int2)                                                # STEP 31
avl1.delete(int2)                                                       # STEP 32
int2 = 16                                                               # STEP 33
avl1.delete(int0)                                                       # STEP 34
avl1.delete(int0)                                                       # STEP 35
avl2 = avl.AVLTree()                                                    # STEP 36
avl1.insert(int1)                                                       # STEP 37
result = avl2.find(int3)                                                # STEP 38
avl2.delete(int2)                                                       # STEP 39
int0 = 14                                                               # STEP 40
avl2.delete(int3)                                                       # STEP 41
avl2.delete(int2)                                                       # STEP 42
avl2.delete(int2)                                                       # STEP 43
avl2.insert(int3)                                                       # STEP 44
avl2.insert(int1)                                                       # STEP 45
int2 = 10                                                               # STEP 46
avl1.delete(int2)                                                       # STEP 47
int1 = 1                                                                # STEP 48
avl1.insert(int0)                                                       # STEP 49
result = avl2.inorder()                                                 # STEP 50
result = avl1.inorder()                                                 # STEP 51
int3 = 5                                                                # STEP 52
avl2 = avl.AVLTree()                                                    # STEP 53
avl1.insert(int0)                                                       # STEP 54
avl1.insert(int1)                                                       # STEP 55
int0 = 18                                                               # STEP 56
int2 = 6                                                                # STEP 57
result = avl1.find(int2)                                                # STEP 58
avl2.insert(int1)                                                       # STEP 59
result = avl2.inorder()                                                 # STEP 60
int2 = 9                                                                # STEP 61
result = avl2.find(int3)                                                # STEP 62
avl1.insert(int2)                                                       # STEP 63
avl1.delete(int1)                                                       # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a1ae18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int1 = 1                                                                 # STEP 0
int2 = 7                                                                 # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
result = avl0.find(int2)                                                 # STEP 3
int0 = 4                                                                 # STEP 4
result = avl0.find(int0)                                                 # STEP 5
avl0.delete(int1)                                                        # STEP 6
result = avl0.inorder()                                                  # STEP 7
result = avl0.find(int1)                                                 # STEP 8
int3 = 10                                                                # STEP 9
avl0.delete(int0)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
int1 = 11                                                               # STEP 12
avl0.delete(int0)                                                       # STEP 13
avl0.delete(int0)                                                       # STEP 14
avl0.insert(int0)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
avl0.insert(int2)                                                       # STEP 17
avl0.insert(int1)                                                       # STEP 18
avl0.delete(int0)                                                       # STEP 19
int2 = 13                                                               # STEP 20
avl0 = avl.AVLTree()                                                    # STEP 21
avl0.delete(int0)                                                       # STEP 22
avl0.insert(int3)                                                       # STEP 23
avl0.delete(int0)                                                       # STEP 24
avl0.delete(int0)                                                       # STEP 25
result = avl0.find(int3)                                                # STEP 26
avl0.insert(int1)                                                       # STEP 27
int0 = 14                                                               # STEP 28
int1 = 9                                                                # STEP 29
int3 = 7                                                                # STEP 30
avl0.delete(int0)                                                       # STEP 31
avl0.insert(int0)                                                       # STEP 32
avl0.insert(int3)                                                       # STEP 33
int0 = 17                                                               # STEP 34
avl0.insert(int2)                                                       # STEP 35
avl0.insert(int3)                                                       # STEP 36
avl0.insert(int1)                                                       # STEP 37
avl0.display()                                                          # STEP 38
avl0.insert(int2)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl0.delete(int2)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl0.delete(int0)                                                       # STEP 43
int3 = 16                                                               # STEP 44
avl0 == avl0                                                            # STEP 45
avl0.delete(int0)                                                       # STEP 46
int1 = 13                                                               # STEP 47
int2 = 4                                                                # STEP 48
avl0.insert(int0)                                                       # STEP 49
avl0.delete(int3)                                                       # STEP 50
avl0 == avl0                                                            # STEP 51
avl0.delete(int3)                                                       # STEP 52
avl0.insert(int3)                                                       # STEP 53
avl0.display()                                                          # STEP 54
avl0.display()                                                          # STEP 55
avl0.delete(int1)                                                       # STEP 56
result = avl0.find(int2)                                                # STEP 57
int0 = 5                                                                # STEP 58
avl0.delete(int0)                                                       # STEP 59
avl0.insert(int3)                                                       # STEP 60
result = avl0.inorder()                                                 # STEP 61
avl0.delete(int3)                                                       # STEP 62
result = avl0.inorder()                                                 # STEP 63
result = avl0.inorder()                                                 # STEP 64
avl0.delete(int1)                                                       # STEP 65
avl0.delete(int2)                                                       # STEP 66
result = avl0.find(int2)                                                # STEP 67
avl0.delete(int0)                                                       # STEP 68
int0 = 16                                                               # STEP 69
result = avl0.inorder()                                                 # STEP 70
result = avl0.find(int2)                                                # STEP 71
avl0.delete(int3)                                                       # STEP 72
avl0.delete(int3)                                                       # STEP 73
int1 = 14                                                               # STEP 74
int3 = 2                                                                # STEP 75
avl0.delete(int2)                                                       # STEP 76
avl0.insert(int0)                                                       # STEP 77
avl0.delete(int0)                                                       # STEP 78
avl0.delete(int2)                                                       # STEP 79
avl0.insert(int2)                                                       # STEP 80
avl0.delete(int0)                                                       # STEP 81
avl0.insert(int0)                                                       # STEP 82
avl0.insert(int0)                                                       # STEP 83
int0 = 16                                                               # STEP 84
avl0.insert(int3)                                                       # STEP 85
int2 = 10                                                               # STEP 86
int3 = 16                                                               # STEP 87
avl0.delete(int1)                                                       # STEP 88
avl0.delete(int2)                                                       # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a3f7e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 3
avl1 = avl.AVLTree()                                                     # STEP 0
result = avl1.inorder()                                                  # STEP 1
int3 = 20                                                                # STEP 2
avl1.delete(int3)                                                        # STEP 3
avl1.insert(int3)                                                        # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.insert(int3)                                                        # STEP 6
avl1.insert(int3)                                                        # STEP 7
avl1.insert(int3)                                                        # STEP 8
int2 = 7                                                                 # STEP 9
avl1.delete(int3)                                                       # STEP 10
avl1.insert(int3)                                                       # STEP 11
avl1.delete(int3)                                                       # STEP 12
avl1.delete(int2)                                                       # STEP 13
int1 = 19                                                               # STEP 14
avl1.insert(int2)                                                       # STEP 15
avl0 = avl.AVLTree()                                                    # STEP 16
avl0.delete(int1)                                                       # STEP 17
avl1.delete(int2)                                                       # STEP 18
avl1 = avl.AVLTree()                                                    # STEP 19
result = avl0.find(int2)                                                # STEP 20
int0 = 7                                                                # STEP 21
avl0.insert(int3)                                                       # STEP 22
avl1.delete(int2)                                                       # STEP 23
avl0.delete(int3)                                                       # STEP 24
int1 = 8                                                                # STEP 25
avl0.insert(int0)                                                       # STEP 26
avl0.insert(int1)                                                       # STEP 27
result = avl1.find(int0)                                                # STEP 28
avl0.delete(int1)                                                       # STEP 29
avl1.insert(int3)                                                       # STEP 30
avl0.delete(int2)                                                       # STEP 31
int0 = 12                                                               # STEP 32
avl1.delete(int1)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
avl0.insert(int2)                                                       # STEP 36
int1 = 17                                                               # STEP 37
avl0.delete(int2)                                                       # STEP 38
int0 = 5                                                                # STEP 39
avl0.delete(int1)                                                       # STEP 40
avl1.insert(int3)                                                       # STEP 41
avl0 == avl1                                                            # STEP 42
int2 = 10                                                               # STEP 43
avl1.delete(int0)                                                       # STEP 44
int1 = 16                                                               # STEP 45
avl0.delete(int0)                                                       # STEP 46
result = avl0.find(int2)                                                # STEP 47
int0 = 9                                                                # STEP 48
result = avl1.inorder()                                                 # STEP 49
result = avl0.find(int1)                                                # STEP 50
avl0.delete(int2)                                                       # STEP 51
result = avl0.find(int3)                                                # STEP 52
avl1.delete(int0)                                                       # STEP 53
avl0.insert(int0)                                                       # STEP 54
avl0.delete(int2)                                                       # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl0.delete(int0)                                                       # STEP 57
avl0.insert(int1)                                                       # STEP 58
int2 = 11                                                               # STEP 59
int3 = 2                                                                # STEP 60
avl1.insert(int0)                                                       # STEP 61
int0 = 5                                                                # STEP 62
avl0.insert(int3)                                                       # STEP 63
avl1.delete(int0)                                                       # STEP 64
avl1.insert(int3)                                                       # STEP 65
int3 = 20                                                               # STEP 66
avl0.insert(int1)                                                       # STEP 67
avl0 == avl1                                                            # STEP 68
avl1.delete(int2)                                                       # STEP 69
int2 = 9                                                                # STEP 70
result = avl1.inorder()                                                 # STEP 71
avl0.insert(int2)                                                       # STEP 72
result = avl1.inorder()                                                 # STEP 73
avl0.insert(int0)                                                       # STEP 74
avl0.delete(int0)                                                       # STEP 75
int0 = 17                                                               # STEP 76
avl0.delete(int2)                                                       # STEP 77
int2 = 13                                                               # STEP 78
int1 = 20                                                               # STEP 79
result = avl0.inorder()                                                 # STEP 80
result = avl1.inorder()                                                 # STEP 81
avl0.insert(int3)                                                       # STEP 82
int3 = 12                                                               # STEP 83
result = avl1.inorder()                                                 # STEP 84
avl0.delete(int3)                                                       # STEP 85
avl0.insert(int0)                                                       # STEP 86
result = avl1.find(int3)                                                # STEP 87
int3 = 8                                                                # STEP 88
avl1.insert(int2)                                                       # STEP 89
avl0.delete(int0)                                                       # STEP 90
avl1.insert(int2)                                                       # STEP 91
result = avl1.inorder()                                                 # STEP 92
avl0.insert(int1)                                                       # STEP 93
avl1.delete(int0)                                                       # STEP 94
avl1.delete(int1)                                                       # STEP 95
avl1.insert(int3)                                                       # STEP 96
avl1 == avl0                                                            # STEP 97
avl1.delete(int1)                                                       # STEP 98
avl1.delete(int2)                                                       # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ea6248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
