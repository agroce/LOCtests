Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40214.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045ef710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 83 steps

SAVING TEST AS failure.40214.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 7                                                                 # STEP 0
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 15                                                                # STEP 1
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 2
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
int2 = 15                                                                # STEP 3
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 5
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([15]) : <type 'set'>
==================================================
int2 = 15                                                                # STEP 6
ACTION: int2 = 15 
int2 = 15 : <type 'int'>
==================================================
avl0.insert(int0)                                                        # STEP 7
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 8
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 9
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 10
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 15]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 11
ACTION: int0 = 11 
int0 = 16 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 12
ACTION: int1 = 7 
int1 = 15 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 13
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 7, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 14
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 15
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 1                                                                # STEP 16
ACTION: int0 = 1 
int0 = 11 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 17
ACTION: int2 = 17 
int2 = 15 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 18
ACTION: int1 = 20 
int1 = 7 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 19
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 14                                                               # STEP 20
ACTION: int3 = 14 
int3 = 7 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 21
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                 # STEP 22
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 1, 7, 15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 24
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 1, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 25
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 1, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 1, 7, 14, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 26
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 1, 7, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([16, 7, 14, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 27
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16, 7, 15]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 28
ACTION: int3 = 3 
int3 = 14 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 29
ACTION: int0 = 20 
int0 = 1 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 30
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 31
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 1                                                                # STEP 32
ACTION: int1 = 1 
int1 = 20 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 33
ACTION: int3 = 15 
int3 = 3 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 34
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 35
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 36
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16, 7]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 37
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 7, 15]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 38
ACTION: int2 = 13 
int2 = 17 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 39
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 40
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 41
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 42
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([16, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7, 15, 16, 20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 43
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 44
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 7, 15, 16, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 46
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 47
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 48
ACTION: int0 = 19 
int0 = 20 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 49
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 50
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int3 = 13                                                               # STEP 51
ACTION: int3 = 13 
int3 = 15 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 52
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 53
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 54
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 14                                                               # STEP 55
ACTION: int3 = 14 
int3 = 13 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 56
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([1, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([7, 16, 20]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 57
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 16, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 58
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7, 13, 16, 20]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 59
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 3                                                                # STEP 61
ACTION: int0 = 3 
int0 = 19 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 62
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 63
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 64
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 17                                                               # STEP 65
ACTION: int0 = 17 
int0 = 3 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 66
ACTION: int1 = 20 
int1 = 1 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 67
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 68
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 69
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 70
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0 == avl0                                                            # STEP 71
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int2)                                                       # STEP 72
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 73
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 2                                                                # STEP 74
ACTION: int2 = 2 
int2 = 13 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 75
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 7                                                                # STEP 76
ACTION: int0 = 7 
int0 = 17 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 77
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 78
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 16, 20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 79
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 80
ACTION: int3 = 2 
int3 = 14 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 81
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 82
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10485c4d0> : <type 'instance'>
avl_REF0 = set([3, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 7, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10412afc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:34.200007) Mon May  1 02:09:45 2017 [ 140 stmts 184 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104a4c248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 94 steps

SAVING TEST AS failure.40214.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int0 = 14                                                                # STEP 1
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
avl2.insert(int0)                                                        # STEP 2
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 3
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 4
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
int2 = 8                                                                 # STEP 6
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int0)                                                        # STEP 7
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 8
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                        # STEP 9
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 10
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 11
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 12
ACTION: int3 = 1 
int3 = None : <type 'NoneType'>
=> int3 = 1 : <type 'int'>
==================================================
int1 = 14                                                               # STEP 13
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 14
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 15
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 16
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 17
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 18
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 19
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 20
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 21
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 22
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 5                                                                # STEP 23
ACTION: int1 = 5 
int1 = 14 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 24
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 1]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 25
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 1]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 27
ACTION: int3 = 12 
int3 = 1 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 28
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 1                                                                # STEP 29
ACTION: int0 = 1 
int0 = 14 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 30
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 31
ACTION: int2 = 19 
int2 = 8 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 32
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2 == avl2                                                            # STEP 33
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int1 = 3                                                                # STEP 34
ACTION: int1 = 3 
int1 = 5 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 35
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 19]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 36
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 37
ACTION: avl2.delete(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 38
ACTION: avl2.delete(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 39
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 1, 19]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 40
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 1, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 19]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 41
ACTION: int3 = 8 
int3 = 12 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int0 = 8                                                                # STEP 42
ACTION: int0 = 8 
int0 = 1 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int2 = 7                                                                # STEP 43
ACTION: int2 = 7 
int2 = 19 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 44
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 3, 19]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 45
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 46
ACTION: avl2.delete(int0) 
int0 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([3, 19]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 47
ACTION: int1 = 20 
int1 = 3 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 48
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 19, 20]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 49
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 3, 19, 20]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 50
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 51
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([8, 3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([3, 19, 20]) : <type 'set'>
==================================================
int3 = 10                                                               # STEP 52
ACTION: int3 = 10 
int3 = 8 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 53
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 54
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 19                                                               # STEP 55
ACTION: int1 = 19 
int1 = 20 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 56
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 58
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 59
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 60
ACTION: avl2.delete(int0) 
int0 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 61
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 62
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 19, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 63
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int0 = 7                                                                # STEP 64
ACTION: int0 = 7 
int0 = 8 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2 == avl0                                                            # STEP 65
ACTION: avl2 == avl0 
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
avl_REF0 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF0 
==================================================
avl0.insert(int3)                                                       # STEP 66
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 12                                                               # STEP 67
ACTION: int3 = 12 
int3 = 10 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 68
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 69
ACTION: avl2.delete(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 70
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([10, 7]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 71
ACTION: int1 = 11 
int1 = 19 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 72
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 19, 20, 12]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 73
ACTION: int0 = 13 
int0 = 7 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 74
ACTION: int3 = 20 
int3 = 12 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 75
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 76
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 3, 19, 20, 12]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 77
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 79
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 17                                                               # STEP 80
ACTION: int2 = 17 
int2 = 7 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 81
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 82
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([11, 3, 19, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 8                                                                # STEP 83
ACTION: int0 = 8 
int0 = 13 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl0 == avl2                                                            # STEP 84
ACTION: avl0 == avl2 
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
avl_REF2 = set([11, 3, 19, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF2 
==================================================
int3 = 12                                                               # STEP 85
ACTION: int3 = 12 
int3 = 20 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 86
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10, 12, 7]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 87
ACTION: int2 = 20 
int2 = 17 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 88
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([10, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 10, 12, 7]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 89
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([11, 3, 19, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 19, 20, 12]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 90
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([8, 10, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 91
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044aa290> : <type 'instance'>
avl_REF0 = set([8, 10, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int0 = 8                                                                # STEP 92
ACTION: int0 = 8 
int0 = 8 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 93
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045566c8> : <type 'instance'>
avl_REF2 = set([3, 19, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([3, 19, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046830e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.24943163365 PERCENT COVERED
62.1285419464 TOTAL RUNTIME
6 EXECUTED
477 TOTAL TEST OPERATIONS
22.3729989529 TIME SPENT EXECUTING TEST OPERATIONS
0.0612280368805 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.5167443752 TIME SPENT CHECKING PROPERTIES
44.8897433281 TOTAL TIME SPENT RUNNING SUT
0.00364804267883 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 7                                                                 # STEP 0
int1 = 15                                                                # STEP 1
int0 = 16                                                                # STEP 2
int2 = 15                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int2)                                                        # STEP 5
int2 = 15                                                                # STEP 6
avl0.insert(int0)                                                        # STEP 7
avl0.delete(int1)                                                        # STEP 8
result = avl0.inorder()                                                  # STEP 9
avl0.insert(int2)                                                       # STEP 10
int0 = 11                                                               # STEP 11
int1 = 7                                                                # STEP 12
avl0.insert(int1)                                                       # STEP 13
avl0.insert(int2)                                                       # STEP 14
avl0.delete(int0)                                                       # STEP 15
int0 = 1                                                                # STEP 16
int2 = 17                                                               # STEP 17
int1 = 20                                                               # STEP 18
avl0.insert(int3)                                                       # STEP 19
int3 = 14                                                               # STEP 20
result = avl0.inorder()                                                 # STEP 21
result = avl0.inorder()                                                 # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl0.insert(int0)                                                       # STEP 24
avl0.insert(int3)                                                       # STEP 25
avl0.delete(int0)                                                       # STEP 26
avl0.delete(int3)                                                       # STEP 27
int3 = 3                                                                # STEP 28
int0 = 20                                                               # STEP 29
avl0.delete(int3)                                                       # STEP 30
avl0.delete(int1)                                                       # STEP 31
int1 = 1                                                                # STEP 32
int3 = 15                                                               # STEP 33
avl0.delete(int1)                                                       # STEP 34
avl0.delete(int2)                                                       # STEP 35
avl0.delete(int3)                                                       # STEP 36
avl0.insert(int3)                                                       # STEP 37
int2 = 13                                                               # STEP 38
avl0.delete(int1)                                                       # STEP 39
result = avl0.inorder()                                                 # STEP 40
avl0.delete(int1)                                                       # STEP 41
avl0.insert(int0)                                                       # STEP 42
avl0.insert(int3)                                                       # STEP 43
result = avl0.inorder()                                                 # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl0.delete(int2)                                                       # STEP 46
avl0.delete(int3)                                                       # STEP 47
int0 = 19                                                               # STEP 48
avl0.insert(int1)                                                       # STEP 49
avl0.insert(int1)                                                       # STEP 50
int3 = 13                                                               # STEP 51
avl0.delete(int3)                                                       # STEP 52
avl0.delete(int0)                                                       # STEP 53
avl0.delete(int2)                                                       # STEP 54
int3 = 14                                                               # STEP 55
avl0.delete(int1)                                                       # STEP 56
result = avl0.inorder()                                                 # STEP 57
avl0.insert(int2)                                                       # STEP 58
avl0 == avl0                                                            # STEP 59
result = avl0.inorder()                                                 # STEP 60
int0 = 3                                                                # STEP 61
avl0.insert(int0)                                                       # STEP 62
avl0.insert(int2)                                                       # STEP 63
result = avl0.inorder()                                                 # STEP 64
int0 = 17                                                               # STEP 65
int1 = 20                                                               # STEP 66
avl0.delete(int3)                                                       # STEP 67
avl0.delete(int3)                                                       # STEP 68
avl0.insert(int2)                                                       # STEP 69
avl0.delete(int0)                                                       # STEP 70
avl0 == avl0                                                            # STEP 71
avl0.delete(int2)                                                       # STEP 72
avl0.delete(int2)                                                       # STEP 73
int2 = 2                                                                # STEP 74
avl0.delete(int3)                                                       # STEP 75
int0 = 7                                                                # STEP 76
result = avl0.inorder()                                                 # STEP 77
avl0.delete(int0)                                                       # STEP 78
avl0.insert(int0)                                                       # STEP 79
int3 = 2                                                                # STEP 80
avl0.insert(int0)                                                       # STEP 81
avl0.delete(int1)                                                       # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10412afc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
avl2 = avl.AVLTree()                                                     # STEP 0
int0 = 14                                                                # STEP 1
avl2.insert(int0)                                                        # STEP 2
avl2.delete(int0)                                                        # STEP 3
avl2.delete(int0)                                                        # STEP 4
avl2.insert(int0)                                                        # STEP 5
int2 = 8                                                                 # STEP 6
avl2.delete(int0)                                                        # STEP 7
avl2.delete(int2)                                                        # STEP 8
avl2.insert(int2)                                                        # STEP 9
avl2.insert(int0)                                                       # STEP 10
avl2.delete(int0)                                                       # STEP 11
int3 = 1                                                                # STEP 12
int1 = 14                                                               # STEP 13
avl2.delete(int2)                                                       # STEP 14
avl2.insert(int2)                                                       # STEP 15
avl2.delete(int3)                                                       # STEP 16
avl2.delete(int1)                                                       # STEP 17
avl2.insert(int0)                                                       # STEP 18
avl2.delete(int0)                                                       # STEP 19
avl2.delete(int3)                                                       # STEP 20
avl2.delete(int3)                                                       # STEP 21
avl2.delete(int0)                                                       # STEP 22
int1 = 5                                                                # STEP 23
avl2.insert(int3)                                                       # STEP 24
avl2.delete(int3)                                                       # STEP 25
avl2.insert(int3)                                                       # STEP 26
int3 = 12                                                               # STEP 27
avl2.delete(int0)                                                       # STEP 28
int0 = 1                                                                # STEP 29
avl2.delete(int0)                                                       # STEP 30
int2 = 19                                                               # STEP 31
avl2.delete(int1)                                                       # STEP 32
avl2 == avl2                                                            # STEP 33
int1 = 3                                                                # STEP 34
avl2.insert(int2)                                                       # STEP 35
avl2 == avl2                                                            # STEP 36
avl2.delete(int3)                                                       # STEP 37
avl2.delete(int3)                                                       # STEP 38
avl2.insert(int0)                                                       # STEP 39
avl2.delete(int0)                                                       # STEP 40
int3 = 8                                                                # STEP 41
int0 = 8                                                                # STEP 42
int2 = 7                                                                # STEP 43
avl2.insert(int1)                                                       # STEP 44
avl2.delete(int2)                                                       # STEP 45
avl2.delete(int0)                                                       # STEP 46
int1 = 20                                                               # STEP 47
avl2.insert(int1)                                                       # STEP 48
avl2.insert(int3)                                                       # STEP 49
avl0 = avl.AVLTree()                                                    # STEP 50
avl2.delete(int3)                                                       # STEP 51
int3 = 10                                                               # STEP 52
avl2.delete(int2)                                                       # STEP 53
avl2.insert(int1)                                                       # STEP 54
int1 = 19                                                               # STEP 55
avl0.insert(int3)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
avl0.insert(int2)                                                       # STEP 58
avl0.delete(int0)                                                       # STEP 59
avl2.delete(int0)                                                       # STEP 60
avl2.delete(int2)                                                       # STEP 61
avl0.insert(int1)                                                       # STEP 62
avl0.insert(int2)                                                       # STEP 63
int0 = 7                                                                # STEP 64
avl2 == avl0                                                            # STEP 65
avl0.insert(int3)                                                       # STEP 66
int3 = 12                                                               # STEP 67
avl0.insert(int0)                                                       # STEP 68
avl2.delete(int3)                                                       # STEP 69
avl0.delete(int1)                                                       # STEP 70
int1 = 11                                                               # STEP 71
avl2.insert(int3)                                                       # STEP 72
int0 = 13                                                               # STEP 73
int3 = 20                                                               # STEP 74
avl2.delete(int1)                                                       # STEP 75
avl2.insert(int1)                                                       # STEP 76
avl0.delete(int3)                                                       # STEP 77
avl0.delete(int3)                                                       # STEP 78
avl0.delete(int0)                                                       # STEP 79
int2 = 17                                                               # STEP 80
avl0.delete(int0)                                                       # STEP 81
avl2.delete(int2)                                                       # STEP 82
int0 = 8                                                                # STEP 83
avl0 == avl2                                                            # STEP 84
int3 = 12                                                               # STEP 85
avl0.insert(int3)                                                       # STEP 86
int2 = 20                                                               # STEP 87
avl0.insert(int0)                                                       # STEP 88
avl2.delete(int1)                                                       # STEP 89
avl0.insert(int3)                                                       # STEP 90
avl0.insert(int3)                                                       # STEP 91
int0 = 8                                                                # STEP 92
avl2.delete(int2)                                                       # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046830e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
199 BRANCHES COVERED
150 STATEMENTS COVERED
