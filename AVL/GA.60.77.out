Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.14775.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  7 [2:0]
-- < 6 [1:1]
---- < 3 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 14 [0:0] L
set([3, 6, 7, 9, 13, 14])
TEST #3 STEP #80 (0:00:30.081337) Sun Apr 30 04:58:37 2017 [ 160 stmts 211 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104061a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 82 steps

SAVING TEST AS failure.14775.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 14                                                                # STEP 0
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 18                                                                # STEP 1
ACTION: int0 = 18 
int0 = None : <type 'NoneType'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 2                                                                 # STEP 2
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
int3 = 9                                                                 # STEP 3
ACTION: int3 = 9 
int3 = None : <type 'NoneType'>
=> int3 = 9 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                 # STEP 5
ACTION: result = avl2.find(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 20                                                                # STEP 6
ACTION: int1 = 20 
int1 = 14 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 7
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 5                                                                 # STEP 8
ACTION: int1 = 5 
int1 = 20 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2 == avl2                                                             # STEP 9
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2 == avl2                                                            # STEP 10
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int1)                                                       # STEP 11
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 8                                                                # STEP 12
ACTION: int1 = 8 
int1 = 5 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 13
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 14
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 9]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 15
ACTION: int1 = 10 
int1 = 8 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 16
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 9, 18]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 17
ACTION: int3 = 2 
int3 = 9 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 18
ACTION: result = avl2.find(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int0 = 11                                                               # STEP 19
ACTION: int0 = 11 
int0 = 18 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 20
ACTION: result = avl2.find(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 21
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 6                                                                # STEP 22
ACTION: int1 = 6 
int1 = 10 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 23
ACTION: avl2.insert(int2) 
int2 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 9, 18, 2]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 24
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 25
ACTION: int2 = 1 
int2 = 2 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 26
ACTION: result = avl2.find(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int2 = 10                                                               # STEP 27
ACTION: int2 = 10 
int2 = 1 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 28
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 29
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 6                                                                # STEP 30
ACTION: int0 = 6 
int0 = 11 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 31
ACTION: result = avl0.find(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 20                                                               # STEP 32
ACTION: int1 = 20 
int1 = 6 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 33
ACTION: result = avl0.find(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 2                                                                # STEP 34
ACTION: int1 = 2 
int1 = 20 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2 == avl0                                                            # STEP 35
ACTION: avl2 == avl0 
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2]) : <type 'set'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF0 
==================================================
result = avl2.find(int2)                                                # STEP 36
ACTION: result = avl2.find(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 37
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 9, 18, 2, 6]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 38
ACTION: int0 = 15 
int0 = 6 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 7                                                                # STEP 39
ACTION: int2 = 7 
int2 = 10 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 40
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 42
ACTION: int3 = 18 
int3 = 2 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 7                                                                # STEP 44
ACTION: int0 = 7 
int0 = 15 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 45
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 46
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 47
ACTION: int0 = 9 
int0 = 7 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 48
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 49
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 50
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 51
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 14                                                               # STEP 52
ACTION: int1 = 14 
int1 = 2 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 53
ACTION: result = avl2.find(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int2 = 2                                                                # STEP 54
ACTION: int2 = 2 
int2 = 7 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 55
ACTION: int1 = 13 
int1 = 14 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 56
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int1)                                                       # STEP 57
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([13]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 58
ACTION: result = avl0.find(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2 == avl0                                                            # STEP 59
ACTION: avl2 == avl0 
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF0 
==================================================
int1 = 17                                                               # STEP 60
ACTION: int1 = 17 
int1 = 13 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 61
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 62
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 13]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 63
ACTION: int0 = 11 
int0 = 9 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 64
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2 == avl2                                                            # STEP 65
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int1 = 10                                                               # STEP 66
ACTION: int1 = 10 
int1 = 17 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 67
ACTION: result = avl0.find(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([9, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 1                                                                # STEP 68
ACTION: int1 = 1 
int1 = 10 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 69
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 10                                                               # STEP 70
ACTION: int3 = 10 
int3 = 18 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 71
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 13, 1]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 72
ACTION: result = avl0.find(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([9, 13, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int1 = 17                                                               # STEP 73
ACTION: int1 = 17 
int1 = 1 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 74
ACTION: result = avl2.find(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int2 = 15                                                               # STEP 75
ACTION: int2 = 15 
int2 = 2 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
int0 = 2                                                                # STEP 76
ACTION: int0 = 2 
int0 = 11 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 77
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([9, 13, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 79
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10305f998> : <type 'instance'>
avl_REF0 = set([9, 13, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 2, 13, 1]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 80
ACTION: int0 = 9 
int0 = 2 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 81
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103062248> : <type 'instance'>
avl_REF2 = set([8, 9, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 18, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1034370e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.57332009268 PERCENT COVERED
60.6962840557 TOTAL RUNTIME
6 EXECUTED
482 TOTAL TEST OPERATIONS
25.6668658257 TIME SPENT EXECUTING TEST OPERATIONS
0.0189733505249 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.9576966763 TIME SPENT CHECKING PROPERTIES
51.6245625019 TOTAL TIME SPENT RUNNING SUT
0.00464367866516 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 14                                                                # STEP 0
int0 = 18                                                                # STEP 1
int2 = 2                                                                 # STEP 2
int3 = 9                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
result = avl2.find(int1)                                                 # STEP 5
int1 = 20                                                                # STEP 6
avl2.delete(int1)                                                        # STEP 7
int1 = 5                                                                 # STEP 8
avl2 == avl2                                                             # STEP 9
avl2 == avl2                                                            # STEP 10
avl2.delete(int1)                                                       # STEP 11
int1 = 8                                                                # STEP 12
avl2.insert(int3)                                                       # STEP 13
avl2.insert(int1)                                                       # STEP 14
int1 = 10                                                               # STEP 15
avl2.insert(int0)                                                       # STEP 16
int3 = 2                                                                # STEP 17
result = avl2.find(int0)                                                # STEP 18
int0 = 11                                                               # STEP 19
result = avl2.find(int1)                                                # STEP 20
avl2.delete(int1)                                                       # STEP 21
int1 = 6                                                                # STEP 22
avl2.insert(int2)                                                       # STEP 23
avl0 = avl.AVLTree()                                                    # STEP 24
int2 = 1                                                                # STEP 25
result = avl2.find(int2)                                                # STEP 26
int2 = 10                                                               # STEP 27
avl2.delete(int0)                                                       # STEP 28
avl0.delete(int0)                                                       # STEP 29
int0 = 6                                                                # STEP 30
result = avl0.find(int1)                                                # STEP 31
int1 = 20                                                               # STEP 32
result = avl0.find(int1)                                                # STEP 33
int1 = 2                                                                # STEP 34
avl2 == avl0                                                            # STEP 35
result = avl2.find(int2)                                                # STEP 36
avl2.insert(int0)                                                       # STEP 37
int0 = 15                                                               # STEP 38
int2 = 7                                                                # STEP 39
result = avl2.inorder()                                                 # STEP 40
avl2.delete(int3)                                                       # STEP 41
int3 = 18                                                               # STEP 42
avl0.delete(int0)                                                       # STEP 43
int0 = 7                                                                # STEP 44
avl0.insert(int0)                                                       # STEP 45
avl0.delete(int0)                                                       # STEP 46
int0 = 9                                                                # STEP 47
avl0.insert(int2)                                                       # STEP 48
result = avl0.inorder()                                                 # STEP 49
avl0.delete(int2)                                                       # STEP 50
avl0.delete(int1)                                                       # STEP 51
int1 = 14                                                               # STEP 52
result = avl2.find(int1)                                                # STEP 53
int2 = 2                                                                # STEP 54
int1 = 13                                                               # STEP 55
avl0 == avl0                                                            # STEP 56
avl0.insert(int1)                                                       # STEP 57
result = avl0.find(int1)                                                # STEP 58
avl2 == avl0                                                            # STEP 59
int1 = 17                                                               # STEP 60
avl0 == avl0                                                            # STEP 61
avl0.insert(int0)                                                       # STEP 62
int0 = 11                                                               # STEP 63
avl2.delete(int1)                                                       # STEP 64
avl2 == avl2                                                            # STEP 65
int1 = 10                                                               # STEP 66
result = avl0.find(int1)                                                # STEP 67
int1 = 1                                                                # STEP 68
avl0.delete(int3)                                                       # STEP 69
int3 = 10                                                               # STEP 70
avl0.insert(int1)                                                       # STEP 71
result = avl0.find(int2)                                                # STEP 72
int1 = 17                                                               # STEP 73
result = avl2.find(int0)                                                # STEP 74
int2 = 15                                                               # STEP 75
int0 = 2                                                                # STEP 76
avl2.delete(int2)                                                       # STEP 77
avl0.delete(int3)                                                       # STEP 78
avl0.insert(int0)                                                       # STEP 79
int0 = 9                                                                # STEP 80
avl2.delete(int0)                                                       # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1034370e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
