Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62594.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
set([3, 4, 6, 9, 14, 16])
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
set([3, 4, 6, 9, 14, 16])
  6 [3:-1]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:-1]
------ > 17 [0:0] L
set([3, 4, 6, 9, 14, 16, 17])
  6 [3:-1]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [2:1]
---- < 9 [1:1]
------ < 8 [0:0] L
---- > 17 [0:0] L
set([3, 4, 6, 8, 9, 14, 17])
  6 [3:-1]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [2:1]
---- < 9 [1:0]
------ < 8 [0:0] L
------ > 10 [0:0] L
---- > 17 [0:0] L
set([3, 4, 6, 8, 9, 10, 14, 17])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10436c9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 76 steps

SAVING TEST AS failure.62594.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 14                                                                # STEP 0
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int2 = 16                                                                # STEP 1
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 7                                                                 # STEP 2
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 17                                                                # STEP 3
ACTION: int1 = 17 
int1 = None : <type 'NoneType'>
=> int1 = 17 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
int0 = 17                                                                # STEP 6
ACTION: int0 = 17 
int0 = 14 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 7
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 9
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 3                                                                # STEP 10
ACTION: int3 = 3 
int3 = 7 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 11
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 12
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl0                                                            # STEP 13
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                       # STEP 14
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 15
ACTION: int0 = 6 
int0 = 17 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 14]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 17
ACTION: int3 = 14 
int3 = 3 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 3, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 19
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                 # STEP 20
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0 == avl0                                                            # STEP 21
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0 == avl0                                                            # STEP 22
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0 == avl0                                                            # STEP 23
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 4                                                                # STEP 25
ACTION: int3 = 4 
int3 = 14 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
int2 = 9                                                                # STEP 26
ACTION: int2 = 9 
int2 = 16 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 27
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 28
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 29
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 30
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 31
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 17, 3, 14]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 33
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 34
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([16, 3, 14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0 == avl0                                                            # STEP 36
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int2)                                                       # STEP 37
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 9, 3, 14]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 38
ACTION: result = avl0.find(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 39
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 9, 3, 6, 14]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 40
ACTION: result = avl0.find(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 41
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 42
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 43
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 6, 9, 14, 16]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 45
ACTION: int0 = 8 
int0 = 6 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 6, 9, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 47
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 6, 9, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 48
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 14, 16])
==================================================
avl0.display()                                                          # STEP 49
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 14, 16])
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 51
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 52
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int1 = 5                                                                # STEP 53
ACTION: int1 = 5 
int1 = 17 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 54
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
  6 [3:-1]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:-1]
------ > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 14, 16, 17])
==================================================
avl0.insert(int3)                                                       # STEP 55
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 16                                                               # STEP 56
ACTION: int3 = 16 
int3 = 4 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 57
ACTION: int2 = 15 
int2 = 9 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 58
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 59
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 60
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 61
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 62
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 4, 6, 8, 9, 14, 16, 17]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 63
ACTION: int0 = 14 
int0 = 8 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 64
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 65
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 4, 6, 8, 9, 14, 17]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 66
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 17]) : <type 'set'>
  6 [3:-1]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [2:1]
---- < 9 [1:1]
------ < 8 [0:0] L
---- > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 8, 9, 14, 17])
==================================================
avl0.delete(int2)                                                       # STEP 67
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.find(int3)                                                # STEP 68
ACTION: result = avl0.find(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int2 = 4                                                                # STEP 69
ACTION: int2 = 4 
int2 = 15 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 70
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 10                                                               # STEP 71
ACTION: int1 = 10 
int1 = 5 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 72
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 4, 6, 8, 9, 10, 14, 17]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 73
ACTION: result = avl0.find(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 10, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.display()                                                          # STEP 74
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 10, 14, 17]) : <type 'set'>
  6 [3:-1]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 14 [2:1]
---- < 9 [1:0]
------ < 8 [0:0] L
------ > 10 [0:0] L
---- > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 8, 9, 10, 14, 17])
==================================================
avl0.delete(int2)                                                       # STEP 75
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102fe0f80> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 8, 9, 10, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 6, 8, 9, 10, 14, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104729e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  10 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 16 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([7, 9, 10, 12, 16, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10452c710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 97 steps

SAVING TEST AS failure.62594.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 9                                                                 # STEP 0
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int3 = 9                                                                 # STEP 1
ACTION: int3 = 9 
int3 = None : <type 'NoneType'>
=> int3 = 9 : <type 'int'>
==================================================
int1 = 18                                                                # STEP 2
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
int2 = 2                                                                 # STEP 3
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.find(int2)                                                 # STEP 6
ACTION: result = avl0.find(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
int3 = 11                                                                # STEP 8
ACTION: int3 = 11 
int3 = 9 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 9
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 18]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 11
ACTION: int1 = 8 
int1 = 18 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 12
ACTION: int2 = 10 
int2 = 2 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 13
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 15
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 4                                                                # STEP 16
ACTION: int3 = 4 
int3 = 11 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 17
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 18
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 19
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 18, 10]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 20
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int0)                                                # STEP 21
ACTION: result = avl0.find(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 1                                                                # STEP 22
ACTION: int0 = 1 
int0 = 9 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 23
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 12                                                               # STEP 24
ACTION: int3 = 12 
int3 = 4 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 25
ACTION: result = avl1.find(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 26
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int3)                                                       # STEP 27
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 18, 12, 10]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 28
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl0.inorder()                                                 # STEP 29
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 12, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 5                                                                # STEP 30
ACTION: int3 = 5 
int3 = 12 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 31
ACTION: int2 = 8 
int2 = 10 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 32
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 12, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 18, 12, 10, 5]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 33
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 34
ACTION: int3 = 7 
int3 = 5 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 12, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 5                                                                # STEP 36
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 37
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 1]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 38
ACTION: int0 = 8 
int0 = 1 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 39
ACTION: int1 = 5 
int1 = 8 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 40
ACTION: avl2.delete(int0) 
int0 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 11                                                               # STEP 41
ACTION: int0 = 11 
int0 = 8 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 42
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int0)                                                       # STEP 43
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 11]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 44
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 18, 12, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([5, 8, 9, 10, 12, 18]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 45
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 10, 12, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 9, 10, 12, 18]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 46
ACTION: int1 = 12 
int1 = 5 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 11, 12]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 48
ACTION: int0 = 19 
int0 = 11 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 49
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 12, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 50
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 12, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl1.inorder()                                                 # STEP 51
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 1, 12]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 53
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 15                                                               # STEP 54
ACTION: int1 = 15 
int1 = 12 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 55
ACTION: avl2.delete(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 16                                                               # STEP 56
ACTION: int3 = 16 
int3 = 5 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 57
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 12, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 9, 10, 12, 16, 18]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 58
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 59
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 7                                                                # STEP 60
ACTION: int3 = 7 
int3 = 16 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 61
ACTION: int1 = 13 
int1 = 15 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 62
ACTION: int2 = 8 
int2 = 8 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 63
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([9, 10, 12, 16, 18]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 64
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 11, 12, 13]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 65
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 66
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 67
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 10, 11, 12, 13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 68
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 1, 19, 12]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 69
ACTION: int0 = 2 
int0 = 19 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 70
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([8, 10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([10, 11, 12, 13]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 71
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x10450ccb0> : <type 'instance'>
avl_REF1 = set([8, 1, 19, 12]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 72
ACTION: int2 = 18 
int2 = 8 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 73
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([18, 10, 11, 12, 13]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 74
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([18, 10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int1 = 17                                                               # STEP 75
ACTION: int1 = 17 
int1 = 13 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 76
ACTION: int2 = 10 
int2 = 18 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 77
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([18, 10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int3)                                                       # STEP 78
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7, 9, 10, 12, 16, 18]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 79
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 12, 16, 18]) : <type 'set'>
  10 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 16 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([7, 9, 10, 12, 16, 18])
==================================================
avl0.insert(int3)                                                       # STEP 80
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 81
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([7, 9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 10, 12, 16, 18]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 82
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.delete(int0)                                                       # STEP 83
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 5                                                                # STEP 84
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 85
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 86
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 5]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 87
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 10, 5]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 88
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 89
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([9, 12, 16, 18]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 90
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([17, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([17, 10]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 91
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 92
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10451cea8> : <type 'instance'>
avl_REF0 = set([9, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 93
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104767560> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 10, 5]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 94
ACTION: int1 = 4 
int1 = 17 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 95
ACTION: int0 = 12 
int0 = 2 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 96
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10450b710> : <type 'instance'>
avl_REF2 = set([18, 10, 11, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([18, 11, 12, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10471f518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #3 STEP #0 (0:00:36.732749) Mon May  1 18:53:54 2017 [ 159 stmts 210 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104452878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 87 steps

SAVING TEST AS failure.62594.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 3                                                                 # STEP 0
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
int2 = 18                                                                # STEP 1
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 3
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 4
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 5
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 3]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
int0 = 20                                                                # STEP 9
ACTION: int0 = 20 
int0 = 3 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 12
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 14
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 16
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 20]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 18
ACTION: int2 = 1 
int2 = 18 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 20
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 19                                                               # STEP 23
ACTION: int0 = 19 
int0 = 20 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 24
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 18]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 25
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 26
ACTION: result = avl0.find(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 27
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 28
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 29
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 30
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 12                                                               # STEP 31
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 32
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl1 == avl0                                                            # STEP 33
ACTION: avl1 == avl0 
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
result = avl0.inorder()                                                 # STEP 34
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 35
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 36
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 12]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 37
ACTION: int0 = 2 
int0 = 19 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 39
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 18, 12]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 41
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 42
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 18]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 43
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl1.find(int1)                                                # STEP 44
ACTION: result = avl1.find(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 45
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 18, 12]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 46
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 47
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 18]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 48
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 49
ACTION: int2 = 7 
int2 = 1 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 50
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 51
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 52
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 2]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 53
ACTION: int0 = 13 
int0 = 2 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 54
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int2 = 14                                                               # STEP 55
ACTION: int2 = 14 
int2 = 7 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 56
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 57
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 12, 2]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 58
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int3 = 12                                                               # STEP 59
ACTION: int3 = 12 
int3 = 7 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 60
ACTION: int1 = 15 
int1 = 12 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 61
ACTION: result = avl1.find(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 12, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int1 = 15                                                               # STEP 62
ACTION: int1 = 15 
int1 = 15 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 63
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 64
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([18, 2]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 65
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 66
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 12]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 67
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 2, 13]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 68
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 13                                                               # STEP 69
ACTION: int3 = 13 
int3 = 12 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 70
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 12, 13]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 71
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 72
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 73
ACTION: result = avl0.find(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2, 12, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int0 = 2                                                                # STEP 74
ACTION: int0 = 2 
int0 = 13 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 75
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 76
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 18                                                               # STEP 77
ACTION: int1 = 18 
int1 = 15 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 78
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 8                                                                # STEP 79
ACTION: int2 = 8 
int2 = 14 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
int3 = 2                                                                # STEP 80
ACTION: int3 = 2 
int3 = 13 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 81
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([18, 13]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 82
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 8, 13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 83
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 8, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 8, 2, 13]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 84
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2, 12, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int3)                                                # STEP 85
ACTION: result = avl0.find(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10473b5a8> : <type 'instance'>
avl_REF0 = set([2, 12, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 86
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1044529e0> : <type 'instance'>
avl_REF1 = set([18, 8, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([8, 2, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104043998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
  4 [2:0]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 15 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
set([2, 3, 4, 9, 15, 16])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 78
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
60.230522871 TOTAL RUNTIME
4 EXECUTED
338 TOTAL TEST OPERATIONS
16.7886168957 TIME SPENT EXECUTING TEST OPERATIONS
0.0366666316986 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
16.8333268166 TIME SPENT CHECKING PROPERTIES
33.6219437122 TOTAL TIME SPENT RUNNING SUT
0.00291609764099 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 14                                                                # STEP 0
int2 = 16                                                                # STEP 1
int3 = 7                                                                 # STEP 2
int1 = 17                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int0)                                                        # STEP 5
int0 = 17                                                                # STEP 6
avl0.delete(int3)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
result = avl0.inorder()                                                  # STEP 9
int3 = 3                                                                # STEP 10
result = avl0.inorder()                                                 # STEP 11
avl0.delete(int2)                                                       # STEP 12
avl0 == avl0                                                            # STEP 13
avl0.delete(int0)                                                       # STEP 14
int0 = 6                                                                # STEP 15
avl0.insert(int3)                                                       # STEP 16
int3 = 14                                                               # STEP 17
avl0.insert(int2)                                                       # STEP 18
result = avl0.inorder()                                                 # STEP 19
result = avl0.inorder()                                                 # STEP 20
avl0 == avl0                                                            # STEP 21
avl0 == avl0                                                            # STEP 22
avl0 == avl0                                                            # STEP 23
avl0.insert(int3)                                                       # STEP 24
int3 = 4                                                                # STEP 25
int2 = 9                                                                # STEP 26
result = avl0.inorder()                                                 # STEP 27
avl0.delete(int2)                                                       # STEP 28
avl0.delete(int3)                                                       # STEP 29
result = avl0.inorder()                                                 # STEP 30
avl0.delete(int0)                                                       # STEP 31
avl0.insert(int1)                                                       # STEP 32
avl0.delete(int2)                                                       # STEP 33
avl0.delete(int1)                                                       # STEP 34
avl0.delete(int3)                                                       # STEP 35
avl0 == avl0                                                            # STEP 36
avl0.insert(int2)                                                       # STEP 37
result = avl0.find(int1)                                                # STEP 38
avl0.insert(int0)                                                       # STEP 39
result = avl0.find(int3)                                                # STEP 40
avl0.delete(int1)                                                       # STEP 41
avl0.insert(int2)                                                       # STEP 42
avl0.insert(int3)                                                       # STEP 43
avl0.delete(int3)                                                       # STEP 44
int0 = 8                                                                # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl0.insert(int3)                                                       # STEP 47
avl0.display()                                                          # STEP 48
avl0.display()                                                          # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl0.insert(int1)                                                       # STEP 51
avl0.insert(int3)                                                       # STEP 52
int1 = 5                                                                # STEP 53
avl0.display()                                                          # STEP 54
avl0.insert(int3)                                                       # STEP 55
int3 = 16                                                               # STEP 56
int2 = 15                                                               # STEP 57
result = avl0.inorder()                                                 # STEP 58
avl0.delete(int2)                                                       # STEP 59
avl0.delete(int0)                                                       # STEP 60
avl0.delete(int2)                                                       # STEP 61
avl0.insert(int0)                                                       # STEP 62
int0 = 14                                                               # STEP 63
avl0.delete(int2)                                                       # STEP 64
avl0.delete(int3)                                                       # STEP 65
avl0.display()                                                          # STEP 66
avl0.delete(int2)                                                       # STEP 67
result = avl0.find(int3)                                                # STEP 68
int2 = 4                                                                # STEP 69
avl0.delete(int1)                                                       # STEP 70
int1 = 10                                                               # STEP 71
avl0.insert(int1)                                                       # STEP 72
result = avl0.find(int0)                                                # STEP 73
avl0.display()                                                          # STEP 74
avl0.delete(int2)                                                       # STEP 75
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104729e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int0 = 9                                                                 # STEP 0
int3 = 9                                                                 # STEP 1
int1 = 18                                                                # STEP 2
int2 = 2                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int2)                                                        # STEP 5
result = avl0.find(int2)                                                 # STEP 6
avl0.insert(int3)                                                        # STEP 7
int3 = 11                                                                # STEP 8
avl2 = avl.AVLTree()                                                     # STEP 9
avl0.insert(int1)                                                       # STEP 10
int1 = 8                                                                # STEP 11
int2 = 10                                                               # STEP 12
avl1 = avl.AVLTree()                                                    # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl2.delete(int3)                                                       # STEP 15
int3 = 4                                                                # STEP 16
avl2.insert(int2)                                                       # STEP 17
avl2.delete(int3)                                                       # STEP 18
avl0.insert(int2)                                                       # STEP 19
result = avl0.inorder()                                                 # STEP 20
result = avl0.find(int0)                                                # STEP 21
int0 = 1                                                                # STEP 22
avl1.delete(int3)                                                       # STEP 23
int3 = 12                                                               # STEP 24
result = avl1.find(int3)                                                # STEP 25
result = avl2.inorder()                                                 # STEP 26
avl0.insert(int3)                                                       # STEP 27
result = avl2.inorder()                                                 # STEP 28
result = avl0.inorder()                                                 # STEP 29
int3 = 5                                                                # STEP 30
int2 = 8                                                                # STEP 31
avl0.insert(int3)                                                       # STEP 32
avl1.insert(int1)                                                       # STEP 33
int3 = 7                                                                # STEP 34
avl0.delete(int3)                                                       # STEP 35
int3 = 5                                                                # STEP 36
avl1.insert(int0)                                                       # STEP 37
int0 = 8                                                                # STEP 38
int1 = 5                                                                # STEP 39
avl2.delete(int0)                                                       # STEP 40
int0 = 11                                                               # STEP 41
avl2 == avl2                                                            # STEP 42
avl2.insert(int0)                                                       # STEP 43
avl0.insert(int2)                                                       # STEP 44
avl0.delete(int1)                                                       # STEP 45
int1 = 12                                                               # STEP 46
avl2.insert(int1)                                                       # STEP 47
int0 = 19                                                               # STEP 48
avl0.delete(int0)                                                       # STEP 49
result = avl0.inorder()                                                 # STEP 50
result = avl1.inorder()                                                 # STEP 51
avl1.insert(int1)                                                       # STEP 52
avl1.delete(int0)                                                       # STEP 53
int1 = 15                                                               # STEP 54
avl2.delete(int3)                                                       # STEP 55
int3 = 16                                                               # STEP 56
avl0.insert(int3)                                                       # STEP 57
avl1.delete(int1)                                                       # STEP 58
avl0.insert(int3)                                                       # STEP 59
int3 = 7                                                                # STEP 60
int1 = 13                                                               # STEP 61
int2 = 8                                                                # STEP 62
avl0.delete(int2)                                                       # STEP 63
avl2.insert(int1)                                                       # STEP 64
avl1.insert(int2)                                                       # STEP 65
avl2.delete(int2)                                                       # STEP 66
avl2.insert(int2)                                                       # STEP 67
avl1.insert(int0)                                                       # STEP 68
int0 = 2                                                                # STEP 69
avl2.delete(int2)                                                       # STEP 70
avl1 = avl.AVLTree()                                                    # STEP 71
int2 = 18                                                               # STEP 72
avl2.insert(int2)                                                       # STEP 73
avl2 == avl2                                                            # STEP 74
int1 = 17                                                               # STEP 75
int2 = 10                                                               # STEP 76
result = avl2.inorder()                                                 # STEP 77
avl0.insert(int3)                                                       # STEP 78
avl0.display()                                                          # STEP 79
avl0.insert(int3)                                                       # STEP 80
avl0.delete(int3)                                                       # STEP 81
result = avl0.inorder()                                                 # STEP 82
avl1.delete(int0)                                                       # STEP 83
int3 = 5                                                                # STEP 84
avl1.insert(int3)                                                       # STEP 85
avl1.insert(int2)                                                       # STEP 86
avl1.insert(int1)                                                       # STEP 87
avl0.delete(int3)                                                       # STEP 88
avl0.delete(int2)                                                       # STEP 89
avl1.delete(int3)                                                       # STEP 90
avl1.insert(int1)                                                       # STEP 91
avl0.delete(int1)                                                       # STEP 92
avl1.insert(int3)                                                       # STEP 93
int1 = 4                                                                # STEP 94
int0 = 12                                                               # STEP 95
avl2.delete(int2)                                                       # STEP 96
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10471f518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int0 = 3                                                                 # STEP 0
int2 = 18                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
avl1.insert(int0)                                                        # STEP 3
avl1.insert(int0)                                                        # STEP 4
avl1.delete(int0)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl1.insert(int2)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
int0 = 20                                                                # STEP 9
avl1.delete(int2)                                                       # STEP 10
avl1.insert(int0)                                                       # STEP 11
avl1.insert(int2)                                                       # STEP 12
avl1.insert(int0)                                                       # STEP 13
avl1.delete(int2)                                                       # STEP 14
avl1.insert(int2)                                                       # STEP 15
avl1.delete(int0)                                                       # STEP 16
avl1.insert(int0)                                                       # STEP 17
int2 = 1                                                                # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1 == avl1                                                            # STEP 20
avl1.delete(int0)                                                       # STEP 21
avl1.delete(int2)                                                       # STEP 22
int0 = 19                                                               # STEP 23
avl1.insert(int2)                                                       # STEP 24
avl0 = avl.AVLTree()                                                    # STEP 25
result = avl0.find(int0)                                                # STEP 26
avl1.delete(int2)                                                       # STEP 27
avl1.insert(int0)                                                       # STEP 28
avl0.delete(int2)                                                       # STEP 29
avl1.insert(int0)                                                       # STEP 30
int1 = 12                                                               # STEP 31
avl1.delete(int0)                                                       # STEP 32
avl1 == avl0                                                            # STEP 33
result = avl0.inorder()                                                 # STEP 34
avl0.insert(int1)                                                       # STEP 35
avl1.insert(int1)                                                       # STEP 36
int0 = 2                                                                # STEP 37
avl0.delete(int0)                                                       # STEP 38
avl1.insert(int2)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
avl0.delete(int1)                                                       # STEP 41
avl1.delete(int1)                                                       # STEP 42
avl0.delete(int2)                                                       # STEP 43
result = avl1.find(int1)                                                # STEP 44
avl1.insert(int1)                                                       # STEP 45
avl1.insert(int2)                                                       # STEP 46
avl1.delete(int1)                                                       # STEP 47
avl1.delete(int2)                                                       # STEP 48
int2 = 7                                                                # STEP 49
avl0.delete(int2)                                                       # STEP 50
avl0.insert(int0)                                                       # STEP 51
avl1.insert(int0)                                                       # STEP 52
int0 = 13                                                               # STEP 53
int3 = 7                                                                # STEP 54
int2 = 14                                                               # STEP 55
avl1.delete(int1)                                                       # STEP 56
avl1.insert(int1)                                                       # STEP 57
result = avl0.find(int3)                                                # STEP 58
int3 = 12                                                               # STEP 59
int1 = 15                                                               # STEP 60
result = avl1.find(int1)                                                # STEP 61
int1 = 15                                                               # STEP 62
avl1.delete(int2)                                                       # STEP 63
avl1.delete(int3)                                                       # STEP 64
avl0.delete(int1)                                                       # STEP 65
avl0.insert(int3)                                                       # STEP 66
avl1.insert(int0)                                                       # STEP 67
avl1.delete(int2)                                                       # STEP 68
int3 = 13                                                               # STEP 69
avl0.insert(int0)                                                       # STEP 70
avl1.delete(int2)                                                       # STEP 71
avl1.insert(int3)                                                       # STEP 72
result = avl0.find(int3)                                                # STEP 73
int0 = 2                                                                # STEP 74
avl0.delete(int1)                                                       # STEP 75
avl1.delete(int1)                                                       # STEP 76
int1 = 18                                                               # STEP 77
result = avl1.inorder()                                                 # STEP 78
int2 = 8                                                                # STEP 79
int3 = 2                                                                # STEP 80
avl1.delete(int0)                                                       # STEP 81
avl1.insert(int2)                                                       # STEP 82
avl1.insert(int0)                                                       # STEP 83
result = avl0.inorder()                                                 # STEP 84
result = avl0.find(int3)                                                # STEP 85
avl1.delete(int1)                                                       # STEP 86
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104043998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
