Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.61972.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  13 [3:-1]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 16 [2:-1]
---- < 14 [0:0] L
---- > 20 [1:1]
------ < 18 [0:0] L
set([2, 4, 11, 13, 14, 16, 18, 20])
  13 [3:-1]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 16 [2:-1]
---- < 14 [0:0] L
---- > 20 [1:1]
------ < 18 [0:0] L
set([2, 4, 11, 13, 14, 16, 18, 20])
  13 [3:-1]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 16 [2:-1]
---- < 14 [0:0] L
---- > 20 [1:1]
------ < 18 [0:0] L
set([2, 3, 4, 13, 14, 16, 18, 20])
TEST #3 STEP #96 (0:00:30.009243) Mon May  1 17:25:58 2017 [ 144 stmts 192 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046e38c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 85 steps

SAVING TEST AS failure.61972.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 6                                                                 # STEP 0
ACTION: int0 = 6 
int0 = None : <type 'NoneType'>
=> int0 = 6 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 1
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int2 = 1                                                                 # STEP 2
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
int3 = 14                                                                # STEP 3
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 5
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int0)                                                        # STEP 6
ACTION: avl2.delete(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.find(int0)                                                 # STEP 7
ACTION: result = avl2.find(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 10                                                                # STEP 9
ACTION: int1 = 10 
int1 = 3 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 10
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 11
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 14]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 12
ACTION: result = avl2.find(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 13
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 14
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 15
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 16                                                               # STEP 16
ACTION: int0 = 16 
int0 = 6 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 17
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 19                                                               # STEP 18
ACTION: int2 = 19 
int2 = 1 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 19
ACTION: result = avl2.find(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 20
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6, 14]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 21
ACTION: int3 = 13 
int3 = 14 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 22
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.find(int0)                                                # STEP 23
ACTION: result = avl2.find(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 24
ACTION: avl2.insert(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6, 14, 13]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 25
ACTION: result = avl2.find(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int0 = 15                                                               # STEP 26
ACTION: int0 = 15 
int0 = 16 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 27
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([6, 14]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 28
ACTION: int3 = 15 
int3 = 13 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 29
ACTION: result = avl2.find(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 30
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 31
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 32
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 33
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.find(int2)                                                # STEP 34
ACTION: result = avl2.find(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 35
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                 # STEP 36
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int0)                                                       # STEP 37
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([19, 6, 14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 39
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.find(int2)                                                # STEP 40
ACTION: result = avl2.find(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 41
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 43
ACTION: int0 = 11 
int0 = 15 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 44
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 45
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 46
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 47
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 48
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 49
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 19]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 50
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 51
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 52
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 6                                                                # STEP 53
ACTION: int2 = 6 
int2 = 19 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 54
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 55
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int0)                                                # STEP 56
ACTION: result = avl0.find(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 57
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 10, 19]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 58
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 19, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 10, 11, 14, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 59
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 60
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([10, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 61
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 62
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 63
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 10, 19]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 64
ACTION: result = avl2.find(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 10, 11, 14, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
result = avl1.find(int2)                                                # STEP 65
ACTION: result = avl1.find(int2) 
int2 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 66
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 67
ACTION: result = avl0.find(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 68
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.find(int0)                                                # STEP 69
ACTION: result = avl0.find(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int3 = 14                                                               # STEP 70
ACTION: int3 = 14 
int3 = 15 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 71
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([6, 10, 11, 14, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([10, 11, 14, 19]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 72
ACTION: result = avl0.find(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 73
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 11, 14, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 74
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104528cb0> : <type 'instance'>
avl_REF0 = set([11, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 12                                                               # STEP 75
ACTION: int1 = 12 
int1 = 10 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 76
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 77
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 78
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 79
ACTION: result = avl2.find(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 11, 14, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
result = avl1.find(int1)                                                # STEP 80
ACTION: result = avl1.find(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 81
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 11, 14, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([10, 11, 12, 14, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 82
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 83
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10411a9e0> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 84
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048c3098> : <type 'instance'>
avl_REF2 = set([10, 11, 12, 14, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([10, 11, 12, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104114680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  9 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([3, 4, 7, 9, 15, 18, 20])
  9 [3:1]
-- < 4 [2:1]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 7, 9, 15, 18, 20])
  9 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 20 [1:1]
---- < 15 [0:0] L
set([3, 4, 7, 9, 15, 20])
  9 [3:1]
-- < 4 [2:1]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 20 [1:1]
---- < 15 [0:0] L
set([2, 3, 4, 7, 9, 15, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104135c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 75 steps

SAVING TEST AS failure.61972.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 18                                                                # STEP 1
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 2
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 3
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int3)                                                        # STEP 4
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int0 = 7                                                                 # STEP 6
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 7
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 8
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 10                                                                # STEP 9
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 10
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 11
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 12
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 14                                                               # STEP 13
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 14
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl0                                                            # STEP 15
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 9                                                                # STEP 16
ACTION: int2 = 9 
int2 = 10 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 17
ACTION: int3 = 15 
int3 = 18 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 18]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 19
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 18, 7]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 22
ACTION: int0 = 3 
int0 = 7 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
int2 = 20                                                               # STEP 23
ACTION: int2 = 20 
int2 = 9 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 24
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 25
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 7                                                                # STEP 26
ACTION: int3 = 7 
int3 = 15 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 27
ACTION: int1 = 7 
int1 = 14 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 18]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 29
ACTION: int3 = 3 
int3 = 7 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 30
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 18, 7]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 32
ACTION: int1 = 15 
int1 = 7 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 18, 3, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 34
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 18, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 36
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 37
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 38
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 18, 3, 7]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 39
ACTION: int3 = 4 
int3 = 3 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 40
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 3, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([9, 18, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([15, 9, 18, 3, 7]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 42
ACTION: int1 = 12 
int1 = 15 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([15, 9, 18, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 44
ACTION: int2 = 18 
int2 = 20 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 45
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 7, 9, 15, 20]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 46
ACTION: int0 = 12 
int0 = 3 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 47
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 48
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 49
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 50
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
  9 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 7, 9, 15, 18, 20])
==================================================
int3 = 2                                                                # STEP 51
ACTION: int3 = 2 
int3 = 4 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 52
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 53
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
  9 [3:1]
-- < 4 [2:1]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 3, 4, 7, 9, 15, 18, 20])
==================================================
avl0.delete(int0)                                                       # STEP 54
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 2                                                                # STEP 55
ACTION: int0 = 2 
int0 = 12 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 56
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 58
ACTION: int2 = 20 
int2 = 18 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 59
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 60
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 4, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 61
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 9, 15, 20]) : <type 'set'>
  9 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 20 [1:1]
---- < 15 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 7, 9, 15, 20])
==================================================
avl0.insert(int0)                                                       # STEP 62
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 63
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
  9 [3:1]
-- < 4 [2:1]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 20 [1:1]
---- < 15 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 3, 4, 7, 9, 15, 20])
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 65
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 3, 4, 7, 9, 12, 15, 20]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 66
ACTION: result = avl0.find(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 67
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 3, 4, 7, 9, 12, 15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 68
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0 == avl0                                                            # STEP 69
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int3 = 15                                                               # STEP 70
ACTION: int3 = 15 
int3 = 2 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 71
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.find(int1)                                                # STEP 72
ACTION: result = avl0.find(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int0 = 2                                                                # STEP 73
ACTION: int0 = 2 
int0 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 74
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10413c248> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 7, 9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 3, 4, 7, 9, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104525050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.09634358677 PERCENT COVERED
63.2523698807 TOTAL RUNTIME
6 EXECUTED
460 TOTAL TEST OPERATIONS
23.2854390144 TIME SPENT EXECUTING TEST OPERATIONS
0.0530543327332 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.3791983128 TIME SPENT CHECKING PROPERTIES
46.6646373272 TOTAL TIME SPENT RUNNING SUT
0.00414109230042 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 6                                                                 # STEP 0
int1 = 3                                                                 # STEP 1
int2 = 1                                                                 # STEP 2
int3 = 14                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
result = avl2.inorder()                                                  # STEP 5
avl2.delete(int0)                                                        # STEP 6
result = avl2.find(int0)                                                 # STEP 7
avl2.delete(int1)                                                        # STEP 8
int1 = 10                                                                # STEP 9
avl2.insert(int3)                                                       # STEP 10
avl2.insert(int0)                                                       # STEP 11
result = avl2.find(int2)                                                # STEP 12
avl2.insert(int0)                                                       # STEP 13
avl2.delete(int3)                                                       # STEP 14
result = avl2.inorder()                                                 # STEP 15
int0 = 16                                                               # STEP 16
result = avl2.inorder()                                                 # STEP 17
int2 = 19                                                               # STEP 18
result = avl2.find(int0)                                                # STEP 19
avl2.insert(int3)                                                       # STEP 20
int3 = 13                                                               # STEP 21
result = avl2.inorder()                                                 # STEP 22
result = avl2.find(int0)                                                # STEP 23
avl2.insert(int3)                                                       # STEP 24
result = avl2.find(int0)                                                # STEP 25
int0 = 15                                                               # STEP 26
avl2.delete(int3)                                                       # STEP 27
int3 = 15                                                               # STEP 28
result = avl2.find(int2)                                                # STEP 29
avl2.insert(int0)                                                       # STEP 30
avl2.insert(int2)                                                       # STEP 31
avl2.insert(int2)                                                       # STEP 32
result = avl2.inorder()                                                 # STEP 33
result = avl2.find(int2)                                                # STEP 34
result = avl2.inorder()                                                 # STEP 35
result = avl2.inorder()                                                 # STEP 36
avl2.delete(int0)                                                       # STEP 37
avl2.insert(int2)                                                       # STEP 38
avl2.delete(int3)                                                       # STEP 39
result = avl2.find(int2)                                                # STEP 40
avl0 = avl.AVLTree()                                                    # STEP 41
avl0.insert(int1)                                                       # STEP 42
int0 = 11                                                               # STEP 43
avl0.delete(int2)                                                       # STEP 44
avl2.insert(int1)                                                       # STEP 45
avl2.delete(int0)                                                       # STEP 46
avl2.delete(int0)                                                       # STEP 47
avl0.delete(int2)                                                       # STEP 48
avl0.insert(int2)                                                       # STEP 49
avl1 = avl.AVLTree()                                                    # STEP 50
avl2.insert(int2)                                                       # STEP 51
result = avl2.inorder()                                                 # STEP 52
int2 = 6                                                                # STEP 53
result = avl2.inorder()                                                 # STEP 54
avl0.delete(int0)                                                       # STEP 55
result = avl0.find(int0)                                                # STEP 56
avl0.insert(int0)                                                       # STEP 57
avl2.insert(int0)                                                       # STEP 58
avl1.delete(int0)                                                       # STEP 59
avl0.delete(int0)                                                       # STEP 60
avl1.delete(int1)                                                       # STEP 61
avl1.delete(int2)                                                       # STEP 62
avl0.insert(int0)                                                       # STEP 63
result = avl2.find(int2)                                                # STEP 64
result = avl1.find(int2)                                                # STEP 65
avl1.insert(int0)                                                       # STEP 66
result = avl0.find(int3)                                                # STEP 67
avl0.insert(int1)                                                       # STEP 68
result = avl0.find(int0)                                                # STEP 69
int3 = 14                                                               # STEP 70
avl2.delete(int2)                                                       # STEP 71
result = avl0.find(int3)                                                # STEP 72
avl2.delete(int2)                                                       # STEP 73
avl0.delete(int3)                                                       # STEP 74
int1 = 12                                                               # STEP 75
avl1.delete(int0)                                                       # STEP 76
result = avl1.inorder()                                                 # STEP 77
avl1.insert(int3)                                                       # STEP 78
result = avl2.find(int3)                                                # STEP 79
result = avl1.find(int1)                                                # STEP 80
avl2.insert(int1)                                                       # STEP 81
avl1.delete(int1)                                                       # STEP 82
avl1.delete(int0)                                                       # STEP 83
avl2.delete(int3)                                                       # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104114680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
avl0 = avl.AVLTree()                                                     # STEP 0
int3 = 18                                                                # STEP 1
avl0.insert(int3)                                                        # STEP 2
avl0.insert(int3)                                                        # STEP 3
avl0.insert(int3)                                                        # STEP 4
avl0.insert(int3)                                                        # STEP 5
int0 = 7                                                                 # STEP 6
avl0.delete(int3)                                                        # STEP 7
avl0.delete(int3)                                                        # STEP 8
int2 = 10                                                                # STEP 9
result = avl0.inorder()                                                 # STEP 10
avl0.insert(int3)                                                       # STEP 11
avl0.delete(int0)                                                       # STEP 12
int1 = 14                                                               # STEP 13
avl0.delete(int2)                                                       # STEP 14
avl0 == avl0                                                            # STEP 15
int2 = 9                                                                # STEP 16
int3 = 15                                                               # STEP 17
avl0.insert(int2)                                                       # STEP 18
result = avl0.inorder()                                                 # STEP 19
avl0.delete(int1)                                                       # STEP 20
avl0.insert(int0)                                                       # STEP 21
int0 = 3                                                                # STEP 22
int2 = 20                                                               # STEP 23
result = avl0.inorder()                                                 # STEP 24
avl0.delete(int3)                                                       # STEP 25
int3 = 7                                                                # STEP 26
int1 = 7                                                                # STEP 27
avl0.delete(int3)                                                       # STEP 28
int3 = 3                                                                # STEP 29
avl0.delete(int3)                                                       # STEP 30
avl0.insert(int1)                                                       # STEP 31
int1 = 15                                                               # STEP 32
avl0.insert(int3)                                                       # STEP 33
avl0.delete(int3)                                                       # STEP 34
avl0.delete(int3)                                                       # STEP 35
avl0.delete(int2)                                                       # STEP 36
avl0.delete(int0)                                                       # STEP 37
avl0.insert(int3)                                                       # STEP 38
int3 = 4                                                                # STEP 39
result = avl0.inorder()                                                 # STEP 40
avl0.insert(int1)                                                       # STEP 41
int1 = 12                                                               # STEP 42
avl0.insert(int2)                                                       # STEP 43
int2 = 18                                                               # STEP 44
avl0.delete(int2)                                                       # STEP 45
int0 = 12                                                               # STEP 46
avl0.delete(int0)                                                       # STEP 47
avl0.insert(int2)                                                       # STEP 48
avl0.insert(int3)                                                       # STEP 49
avl0.display()                                                          # STEP 50
int3 = 2                                                                # STEP 51
avl0.insert(int3)                                                       # STEP 52
avl0.display()                                                          # STEP 53
avl0.delete(int0)                                                       # STEP 54
int0 = 2                                                                # STEP 55
avl0.insert(int2)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
int2 = 20                                                               # STEP 58
avl0.delete(int1)                                                       # STEP 59
avl0.delete(int3)                                                       # STEP 60
avl0.display()                                                          # STEP 61
avl0.insert(int0)                                                       # STEP 62
avl0.display()                                                          # STEP 63
avl0.insert(int3)                                                       # STEP 64
avl0.insert(int1)                                                       # STEP 65
result = avl0.find(int2)                                                # STEP 66
avl0.delete(int2)                                                       # STEP 67
avl0.insert(int0)                                                       # STEP 68
avl0 == avl0                                                            # STEP 69
int3 = 15                                                               # STEP 70
avl0.insert(int0)                                                       # STEP 71
result = avl0.find(int1)                                                # STEP 72
int0 = 2                                                                # STEP 73
avl0.delete(int3)                                                       # STEP 74
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104525050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
210 BRANCHES COVERED
159 STATEMENTS COVERED
