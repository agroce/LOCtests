Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40071.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  13 [2:0]
-- < 10 [1:0]
---- < 6 [0:0] L
---- > 11 [0:0] L
-- > 18 [1:1]
---- < 15 [0:0] L
set([6, 10, 11, 13, 15, 18])
TEST #4 STEP #17 (0:00:30.046021) Mon May  1 02:06:39 2017 [ 146 stmts 193 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1049302d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 70 steps

SAVING TEST AS failure.40071.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 17                                                                # STEP 0
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 19                                                                # STEP 1
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
int2 = 12                                                                # STEP 2
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 4
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
int3 = 8                                                                 # STEP 5
ACTION: int3 = 8 
int3 = None : <type 'NoneType'>
=> int3 = 8 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                        # STEP 7
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 12]) : <type 'set'>
==================================================
int2 = 17                                                                # STEP 9
ACTION: int2 = 17 
int2 = 12 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 10
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int1 = 1                                                                # STEP 11
ACTION: int1 = 1 
int1 = 19 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 12
ACTION: int0 = 10 
int0 = 17 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 13
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 17, 12]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 14
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0 == avl0                                                            # STEP 15
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int3 = 14                                                               # STEP 16
ACTION: int3 = 14 
int3 = 8 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 17
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 17, 10, 12]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 18
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int0 = 11                                                               # STEP 19
ACTION: int0 = 11 
int0 = 10 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 20
ACTION: int2 = 16 
int2 = 17 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 17, 10, 12, 16]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 22
ACTION: int2 = 20 
int2 = 16 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 23
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 10, 12, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 10, 12, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 19                                                               # STEP 25
ACTION: int0 = 19 
int0 = 11 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 26
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([8, 17, 10, 12, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 8, 10, 12, 16, 17]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 8, 10, 12, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 8, 10, 12, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 8, 10, 12, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 8, 10, 12, 16, 17, 20]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 30
ACTION: int2 = 11 
int2 = 20 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 31
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 7                                                                # STEP 32
ACTION: int1 = 7 
int1 = 1 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 33
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 34
ACTION: int1 = 4 
int1 = 7 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 35
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 7, 8, 10, 12, 14, 16, 17, 20]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 36
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 10, 12, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                       # STEP 37
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 10, 12, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 38
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 10, 12, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 39
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 4, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 40
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 6                                                                # STEP 41
ACTION: int1 = 6 
int1 = 4 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 42
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 9                                                                # STEP 43
ACTION: int2 = 9 
int2 = 11 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 44
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 4, 6, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 45
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 16, 17, 20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 47
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 48
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 49
ACTION: avl0.delete(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 50
ACTION: int0 = 12 
int0 = 19 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 51
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 6                                                                # STEP 52
ACTION: int2 = 6 
int2 = 9 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 53
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 54
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 55
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 56
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 58
ACTION: int2 = 11 
int2 = 6 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 59
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 60
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 61
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 62
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 4, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 63
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 64
ACTION: int3 = 14 
int3 = 14 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 65
ACTION: int1 = 15 
int1 = 6 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 66
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 4, 7, 8, 9, 10, 14, 16, 17, 19, 20]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 67
ACTION: int0 = 5 
int0 = 12 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 68
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 69
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102843e18> : <type 'instance'>
avl_REF0 = set([1, 4, 7, 8, 9, 10, 14, 16, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 4, 7, 8, 9, 10, 16, 17, 19, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102ab1830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  15 [2:0]
-- < 8 [1:0]
---- < 2 [0:0] L
---- > 14 [0:0] L
-- > 17 [1:1]
---- < 16 [0:0] L
set([2, 8, 14, 15, 16, 17])
  15 [2:0]
-- < 8 [1:0]
---- < 2 [0:0] L
---- > 14 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([2, 8, 14, 15, 16, 17, 19])
  15 [3:1]
-- < 8 [2:-1]
---- < 2 [0:0] L
---- > 14 [1:1]
------ < 11 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([2, 8, 11, 14, 15, 16, 17, 19])
  8 [2:0]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([2, 4, 6, 8, 9, 14, 17])
  8 [2:0]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([2, 4, 6, 8, 9, 14, 17])
  8 [3:-1]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [2:-1]
---- < 9 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 6, 8, 9, 14, 16, 17, 20])
  8 [3:-1]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [2:0]
---- < 9 [1:-1]
------ > 10 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 6, 8, 9, 10, 14, 16, 17, 20])
  8 [3:-1]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [2:0]
---- < 9 [1:-1]
------ > 10 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 6, 8, 9, 10, 14, 16, 17, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 3
STOPPING TESTING DUE TO TIMEOUT
8.75081327261 PERCENT COVERED
60.1658210754 TOTAL RUNTIME
7 EXECUTED
573 TOTAL TEST OPERATIONS
26.4692978859 TIME SPENT EXECUTING TEST OPERATIONS
0.0782330036163 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.6841719151 TIME SPENT CHECKING PROPERTIES
53.1534698009 TOTAL TIME SPENT RUNNING SUT
0.00416588783264 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 17                                                                # STEP 0
int1 = 19                                                                # STEP 1
int2 = 12                                                                # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.insert(int2)                                                        # STEP 4
int3 = 8                                                                 # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.delete(int0)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
int2 = 17                                                                # STEP 9
avl0.insert(int0)                                                       # STEP 10
int1 = 1                                                                # STEP 11
int0 = 10                                                               # STEP 12
avl0.insert(int3)                                                       # STEP 13
avl0.insert(int2)                                                       # STEP 14
avl0 == avl0                                                            # STEP 15
int3 = 14                                                               # STEP 16
avl0.insert(int0)                                                       # STEP 17
avl0 == avl0                                                            # STEP 18
int0 = 11                                                               # STEP 19
int2 = 16                                                               # STEP 20
avl0.insert(int2)                                                       # STEP 21
int2 = 20                                                               # STEP 22
avl0.delete(int2)                                                       # STEP 23
avl0.delete(int0)                                                       # STEP 24
int0 = 19                                                               # STEP 25
avl0.insert(int1)                                                       # STEP 26
avl0.insert(int1)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl0.insert(int2)                                                       # STEP 29
int2 = 11                                                               # STEP 30
avl0.delete(int2)                                                       # STEP 31
int1 = 7                                                                # STEP 32
avl0.insert(int1)                                                       # STEP 33
int1 = 4                                                                # STEP 34
avl0.insert(int3)                                                       # STEP 35
avl0 == avl0                                                            # STEP 36
avl0.delete(int0)                                                       # STEP 37
avl0.delete(int3)                                                       # STEP 38
avl0.insert(int1)                                                       # STEP 39
avl0.delete(int3)                                                       # STEP 40
int1 = 6                                                                # STEP 41
avl0.delete(int3)                                                       # STEP 42
int2 = 9                                                                # STEP 43
avl0.insert(int1)                                                       # STEP 44
avl0.delete(int0)                                                       # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl0.insert(int0)                                                       # STEP 47
avl0.insert(int3)                                                       # STEP 48
avl0.delete(int1)                                                       # STEP 49
int0 = 12                                                               # STEP 50
avl0 == avl0                                                            # STEP 51
int2 = 6                                                                # STEP 52
avl0.insert(int2)                                                       # STEP 53
avl0.insert(int1)                                                       # STEP 54
avl0.insert(int1)                                                       # STEP 55
avl0.insert(int2)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
int2 = 11                                                               # STEP 58
avl0.delete(int2)                                                       # STEP 59
avl0.insert(int3)                                                       # STEP 60
avl0.insert(int3)                                                       # STEP 61
avl0.insert(int2)                                                       # STEP 62
avl0.delete(int2)                                                       # STEP 63
int3 = 14                                                               # STEP 64
int1 = 15                                                               # STEP 65
avl0.delete(int0)                                                       # STEP 66
int0 = 5                                                                # STEP 67
avl0.delete(int2)                                                       # STEP 68
avl0.delete(int3)                                                       # STEP 69
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102ab1830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
