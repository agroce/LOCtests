Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62002.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 12 [1:-1]
---- > 19 [0:0] L
set([2, 3, 8, 11, 12, 19])
  11 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 12 [1:-1]
---- > 19 [0:0] L
set([2, 3, 8, 11, 12, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1032e1440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 83 steps

SAVING TEST AS failure.62002.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 13                                                                # STEP 0
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int1 = 17                                                                # STEP 1
ACTION: int1 = 17 
int1 = None : <type 'NoneType'>
=> int1 = 17 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 2
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int3 = 6                                                                 # STEP 3
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 5
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
int1 = 13                                                                # STEP 6
ACTION: int1 = 13 
int1 = 17 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl2.delete(int3)                                                        # STEP 7
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                        # STEP 8
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int2)                                                        # STEP 9
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 10
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 6]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 11
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 13
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 13, 6]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 14
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 15
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 16
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 17
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([17, 6]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 18
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 19
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 13]) : <type 'set'>
==================================================
int3 = 9                                                                # STEP 20
ACTION: int3 = 9 
int3 = 6 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 21
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 22
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 23
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 24
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 25
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 9]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 27
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 14                                                               # STEP 28
ACTION: int1 = 14 
int1 = 13 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 29
ACTION: int0 = 10 
int0 = 14 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 30
ACTION: result = avl2.find(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 31
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 32
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 14, 9]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 33
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 14, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([17, 9]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 34
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int3 = 15                                                               # STEP 35
ACTION: int3 = 15 
int3 = 9 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 36
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 37
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 38
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2 == avl2                                                            # STEP 39
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int1)                                                       # STEP 40
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 42
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 43
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 14, 9]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 44
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 14, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 15, 14, 9]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 45
ACTION: int3 = 11 
int3 = 15 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 46
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 15, 14, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 47
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 15, 14, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 17                                                               # STEP 48
ACTION: int2 = 17 
int2 = 13 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 49
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([17, 15, 14, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 11, 14, 15, 17]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 50
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 14, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 51
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 14, 15, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int3 = 3                                                                # STEP 52
ACTION: int3 = 3 
int3 = 11 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 53
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 14, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 54
ACTION: int1 = 7 
int1 = 14 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 55
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 56
ACTION: result = avl2.find(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 57
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 58
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.find(int3)                                                # STEP 59
ACTION: result = avl2.find(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 60
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 61
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 62
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int1)                                                       # STEP 63
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 64
ACTION: int1 = 7 
int1 = 7 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 65
ACTION: int0 = 12 
int0 = 10 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 66
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 12]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 67
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 10, 12]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 68
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 18                                                               # STEP 69
ACTION: int3 = 18 
int3 = 3 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 70
ACTION: int0 = 6 
int0 = 12 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 71
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([17, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 72
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 73
ACTION: avl2.delete(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 12                                                               # STEP 74
ACTION: int1 = 12 
int1 = 7 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 75
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([17, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1 == avl2                                                            # STEP 76
ACTION: avl1 == avl2 
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF1 = set([17, 10, 12]) : <type 'set'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 77
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 78
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 18                                                               # STEP 79
ACTION: int0 = 18 
int0 = 6 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 80
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([17, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 81
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10395c830> : <type 'instance'>
avl_REF1 = set([17, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 82
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103579b90> : <type 'instance'>
avl_REF2 = set([7, 9, 11, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([7, 9, 11, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1037b2128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #31 (0:00:30.047615) Mon May  1 17:30:07 2017 [ 161 stmts 213 branches ]
  15 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 13 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([3, 5, 13, 15, 16, 18, 19])
  15 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 13 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([3, 5, 13, 15, 16, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103425bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 90 steps

SAVING TEST AS failure.62002.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 7                                                                 # STEP 0
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 7                                                                 # STEP 2
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 3
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 4
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 6
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 8
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 13                                                                # STEP 9
ACTION: int2 = 13 
int2 = 7 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int0 = 3                                                                # STEP 10
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([13, 7]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 12
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 13, 7]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 13
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 6                                                                # STEP 14
ACTION: int2 = 6 
int2 = 13 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 15
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 13]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 12                                                               # STEP 18
ACTION: int0 = 12 
int0 = 3 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
int3 = 5                                                                # STEP 19
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int1 = 19                                                               # STEP 20
ACTION: int1 = 19 
int1 = 2 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 21
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 23
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 24
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 13, 6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 26
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([19, 3, 13, 6]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 27
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([19, 3, 13, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([19, 3, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 29
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([19, 3, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([19, 3, 13]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 30
ACTION: int3 = 12 
int3 = 5 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 6                                                                # STEP 31
ACTION: int2 = 6 
int2 = 6 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([19, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl0                                                            # STEP 33
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([19, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int1 = 17                                                               # STEP 34
ACTION: int1 = 17 
int1 = 19 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 35
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([19, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 36
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 38
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 39
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 6, 12, 13, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 40
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 6, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 41
ACTION: int1 = 4 
int1 = 17 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 42
ACTION: result = avl0.find(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int2 = 1                                                                # STEP 43
ACTION: int2 = 1 
int2 = 6 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 5                                                                # STEP 45
ACTION: int3 = 5 
int3 = 12 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 46
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 47
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 48
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 49
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 50
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 12, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 13, 19]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 51
ACTION: result = avl2.find(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int0 = 18                                                               # STEP 52
ACTION: int0 = 18 
int0 = 12 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 53
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 54
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 55
ACTION: result = avl2.find(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int2 = 16                                                               # STEP 56
ACTION: int2 = 16 
int2 = 1 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 57
ACTION: int1 = 20 
int1 = 4 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 58
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.delete(int1)                                                       # STEP 59
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 15                                                               # STEP 60
ACTION: int1 = 15 
int1 = 20 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 61
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 62
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 13, 18, 19]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 63
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 64
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 65
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 18, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 66
ACTION: avl2.insert(int2) 
int2 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([1, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([16, 1, 18, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 67
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 13, 15, 18, 19]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 68
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 69
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int3)                                                       # STEP 70
ACTION: avl2.insert(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 1, 18, 5, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 71
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 72
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1037e4ef0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 73
ACTION: int0 = 15 
int0 = 18 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 74
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([16, 1, 18, 5]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 75
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 76
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 77
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1037e4ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 78
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 79
ACTION: avl2.insert(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl1.find(int1)                                                # STEP 80
ACTION: result = avl1.find(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1037e4ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 81
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int3 = 20                                                               # STEP 82
ACTION: int3 = 20 
int3 = 5 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 83
ACTION: int1 = 2 
int1 = 15 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 84
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 5, 13, 15, 16, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 13 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 5, 13, 15, 16, 18, 19])
==================================================
avl0.display()                                                          # STEP 85
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1037baa70> : <type 'instance'>
avl_REF0 = set([3, 5, 13, 15, 16, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 13 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 5, 13, 15, 16, 18, 19])
==================================================
avl2.delete(int3)                                                       # STEP 86
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 12                                                               # STEP 87
ACTION: int3 = 12 
int3 = 20 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 88
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int2)                                                       # STEP 89
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1037ec3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 18, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103872d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1032412d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 26 steps

SAVING TEST AS failure.62002.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 5                                                                 # STEP 0
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
int1 = 6                                                                 # STEP 1
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
int0 = 2                                                                 # STEP 2
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 4
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 5
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                        # STEP 6
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 7
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                        # STEP 8
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 6]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 10
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 11
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int1 = 18                                                               # STEP 12
ACTION: int1 = 18 
int1 = 6 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 13
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 6, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 14
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 14                                                               # STEP 15
ACTION: int2 = 14 
int2 = 5 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 17
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 18
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 14, 6, 7]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int0)                                                # STEP 21
ACTION: result = avl1.find(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 23
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 18, 14, 6, 7]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 24
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 18, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 25
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103241758> : <type 'instance'>
avl_REF1 = set([2, 18, 14, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([18, 14, 6, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10387f560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
60.8558609486 TOTAL RUNTIME
6 EXECUTED
399 TOTAL TEST OPERATIONS
20.1932821274 TIME SPENT EXECUTING TEST OPERATIONS
0.0450258255005 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
20.207337141 TIME SPENT CHECKING PROPERTIES
40.4006192684 TOTAL TIME SPENT RUNNING SUT
0.00403618812561 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 13                                                                # STEP 0
int1 = 17                                                                # STEP 1
int0 = 14                                                                # STEP 2
int3 = 6                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int1)                                                        # STEP 5
int1 = 13                                                                # STEP 6
avl2.delete(int3)                                                        # STEP 7
avl2.delete(int0)                                                        # STEP 8
avl2.delete(int2)                                                        # STEP 9
avl2.insert(int3)                                                       # STEP 10
avl2.insert(int3)                                                       # STEP 11
avl2.delete(int2)                                                       # STEP 12
avl2.insert(int1)                                                       # STEP 13
avl2.insert(int1)                                                       # STEP 14
result = avl2.inorder()                                                 # STEP 15
avl2.insert(int3)                                                       # STEP 16
avl2.delete(int1)                                                       # STEP 17
avl2.delete(int3)                                                       # STEP 18
avl2.insert(int1)                                                       # STEP 19
int3 = 9                                                                # STEP 20
avl2.delete(int3)                                                       # STEP 21
avl2.delete(int3)                                                       # STEP 22
avl2.delete(int0)                                                       # STEP 23
avl2.delete(int2)                                                       # STEP 24
avl2.delete(int1)                                                       # STEP 25
avl2.insert(int3)                                                       # STEP 26
result = avl2.inorder()                                                 # STEP 27
int1 = 14                                                               # STEP 28
int0 = 10                                                               # STEP 29
result = avl2.find(int2)                                                # STEP 30
avl2.delete(int1)                                                       # STEP 31
avl2.insert(int1)                                                       # STEP 32
avl2.delete(int1)                                                       # STEP 33
avl2.delete(int1)                                                       # STEP 34
int3 = 15                                                               # STEP 35
avl2.delete(int1)                                                       # STEP 36
result = avl2.inorder()                                                 # STEP 37
avl2.delete(int3)                                                       # STEP 38
avl2 == avl2                                                            # STEP 39
avl2.delete(int1)                                                       # STEP 40
avl2.delete(int3)                                                       # STEP 41
avl2.delete(int0)                                                       # STEP 42
avl2.insert(int1)                                                       # STEP 43
avl2.insert(int3)                                                       # STEP 44
int3 = 11                                                               # STEP 45
avl2.delete(int3)                                                       # STEP 46
result = avl2.inorder()                                                 # STEP 47
int2 = 17                                                               # STEP 48
avl2.insert(int3)                                                       # STEP 49
avl2.insert(int3)                                                       # STEP 50
result = avl2.inorder()                                                 # STEP 51
int3 = 3                                                                # STEP 52
avl2.delete(int1)                                                       # STEP 53
int1 = 7                                                                # STEP 54
avl1 = avl.AVLTree()                                                    # STEP 55
result = avl2.find(int3)                                                # STEP 56
avl1.insert(int0)                                                       # STEP 57
result = avl2.inorder()                                                 # STEP 58
result = avl2.find(int3)                                                # STEP 59
avl1.delete(int1)                                                       # STEP 60
avl2.delete(int3)                                                       # STEP 61
result = avl2.inorder()                                                 # STEP 62
avl2.insert(int1)                                                       # STEP 63
int1 = 7                                                                # STEP 64
int0 = 12                                                               # STEP 65
avl1.insert(int0)                                                       # STEP 66
avl1.insert(int2)                                                       # STEP 67
avl2.delete(int0)                                                       # STEP 68
int3 = 18                                                               # STEP 69
int0 = 6                                                                # STEP 70
avl1.delete(int1)                                                       # STEP 71
avl2.insert(int1)                                                       # STEP 72
avl2.delete(int0)                                                       # STEP 73
int1 = 12                                                               # STEP 74
avl1.insert(int2)                                                       # STEP 75
avl1 == avl2                                                            # STEP 76
avl2.delete(int3)                                                       # STEP 77
result = avl2.inorder()                                                 # STEP 78
int0 = 18                                                               # STEP 79
avl1.delete(int3)                                                       # STEP 80
avl1.delete(int3)                                                       # STEP 81
avl2.delete(int2)                                                       # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1037b2128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int2 = 7                                                                 # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
int3 = 7                                                                 # STEP 2
avl0.insert(int3)                                                        # STEP 3
avl0.delete(int2)                                                        # STEP 4
avl0.insert(int3)                                                        # STEP 5
avl0.delete(int3)                                                        # STEP 6
avl0.insert(int3)                                                        # STEP 7
result = avl0.inorder()                                                  # STEP 8
int2 = 13                                                                # STEP 9
int0 = 3                                                                # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.insert(int0)                                                       # STEP 12
result = avl0.inorder()                                                 # STEP 13
int2 = 6                                                                # STEP 14
int1 = 2                                                                # STEP 15
avl0.delete(int3)                                                       # STEP 16
avl0.delete(int1)                                                       # STEP 17
int0 = 12                                                               # STEP 18
int3 = 5                                                                # STEP 19
int1 = 19                                                               # STEP 20
avl0.delete(int2)                                                       # STEP 21
avl0.delete(int1)                                                       # STEP 22
avl0.delete(int0)                                                       # STEP 23
avl0.delete(int1)                                                       # STEP 24
avl0.insert(int2)                                                       # STEP 25
avl0.insert(int1)                                                       # STEP 26
result = avl0.find(int3)                                                # STEP 27
avl0.delete(int3)                                                       # STEP 28
avl0.delete(int2)                                                       # STEP 29
int3 = 12                                                               # STEP 30
int2 = 6                                                                # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl0 == avl0                                                            # STEP 33
int1 = 17                                                               # STEP 34
avl0.insert(int0)                                                       # STEP 35
avl0.delete(int1)                                                       # STEP 36
avl0.delete(int2)                                                       # STEP 37
avl0.insert(int0)                                                       # STEP 38
avl0.insert(int2)                                                       # STEP 39
avl0.delete(int2)                                                       # STEP 40
int1 = 4                                                                # STEP 41
result = avl0.find(int3)                                                # STEP 42
int2 = 1                                                                # STEP 43
avl0.insert(int3)                                                       # STEP 44
int3 = 5                                                                # STEP 45
avl0.delete(int2)                                                       # STEP 46
avl0.delete(int3)                                                       # STEP 47
avl0.delete(int1)                                                       # STEP 48
avl2 = avl.AVLTree()                                                    # STEP 49
avl0.delete(int0)                                                       # STEP 50
result = avl2.find(int3)                                                # STEP 51
int0 = 18                                                               # STEP 52
avl2.delete(int1)                                                       # STEP 53
avl2.insert(int2)                                                       # STEP 54
result = avl2.find(int2)                                                # STEP 55
int2 = 16                                                               # STEP 56
int1 = 20                                                               # STEP 57
avl2 == avl2                                                            # STEP 58
avl0.delete(int1)                                                       # STEP 59
int1 = 15                                                               # STEP 60
avl0.delete(int2)                                                       # STEP 61
avl0.insert(int0)                                                       # STEP 62
avl2.insert(int1)                                                       # STEP 63
avl2.insert(int1)                                                       # STEP 64
avl2.insert(int0)                                                       # STEP 65
avl2.insert(int2)                                                       # STEP 66
avl0.insert(int1)                                                       # STEP 67
avl0.insert(int2)                                                       # STEP 68
result = avl0.inorder()                                                 # STEP 69
avl2.insert(int3)                                                       # STEP 70
avl0.insert(int1)                                                       # STEP 71
avl1 = avl.AVLTree()                                                    # STEP 72
int0 = 15                                                               # STEP 73
avl2.delete(int0)                                                       # STEP 74
result = avl0.find(int3)                                                # STEP 75
avl0.insert(int0)                                                       # STEP 76
avl1.delete(int1)                                                       # STEP 77
avl0.insert(int3)                                                       # STEP 78
avl2.insert(int3)                                                       # STEP 79
result = avl1.find(int1)                                                # STEP 80
avl2.delete(int1)                                                       # STEP 81
int3 = 20                                                               # STEP 82
int1 = 2                                                                # STEP 83
avl0.display()                                                          # STEP 84
avl0.display()                                                          # STEP 85
avl2.delete(int3)                                                       # STEP 86
int3 = 12                                                               # STEP 87
result = avl2.inorder()                                                 # STEP 88
avl2.delete(int2)                                                       # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103872d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int2 = 5                                                                 # STEP 0
int1 = 6                                                                 # STEP 1
int0 = 2                                                                 # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl1.insert(int2)                                                        # STEP 4
avl1.delete(int0)                                                        # STEP 5
avl1.delete(int2)                                                        # STEP 6
avl1.delete(int2)                                                        # STEP 7
avl1.insert(int1)                                                        # STEP 8
avl1.insert(int0)                                                        # STEP 9
int3 = 7                                                                # STEP 10
result = avl1.inorder()                                                 # STEP 11
int1 = 18                                                               # STEP 12
avl1.insert(int3)                                                       # STEP 13
avl1.delete(int2)                                                       # STEP 14
int2 = 14                                                               # STEP 15
avl1.delete(int1)                                                       # STEP 16
avl1.delete(int1)                                                       # STEP 17
avl1.insert(int2)                                                       # STEP 18
avl1.insert(int0)                                                       # STEP 19
avl1.delete(int1)                                                       # STEP 20
result = avl1.find(int0)                                                # STEP 21
avl1.insert(int3)                                                       # STEP 22
avl1.insert(int1)                                                       # STEP 23
avl1.insert(int2)                                                       # STEP 24
avl1.delete(int0)                                                       # STEP 25
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10387f560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
