Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40027.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [2:0]
-- < 8 [1:1]
---- < 5 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 20 [0:0] L
set([5, 8, 11, 14, 16, 20])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 15 [2:1]
---- < 14 [1:1]
------ < 9 [0:0] L
---- > 19 [0:0] L
set([2, 5, 6, 9, 14, 15, 19])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 15 [2:0]
---- < 14 [1:1]
------ < 9 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([2, 5, 6, 9, 14, 15, 19, 20])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 15 [2:0]
---- < 14 [1:1]
------ < 9 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([2, 5, 6, 9, 14, 15, 19, 20])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 15 [2:0]
---- < 14 [1:1]
------ < 9 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([2, 5, 6, 9, 14, 15, 19, 20])
TEST #4 STEP #23 (0:00:30.039310) Mon May  1 02:04:37 2017 [ 142 stmts 191 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105a98518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 81 steps

SAVING TEST AS failure.40027.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 9                                                                 # STEP 0
ACTION: int1 = 9 
int1 = None : <type 'NoneType'>
=> int1 = 9 : <type 'int'>
==================================================
int3 = 15                                                                # STEP 1
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 2
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
int0 = 2                                                                 # STEP 3
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                        # STEP 6
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                        # STEP 7
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 16                                                                # STEP 9
ACTION: int1 = 16 
int1 = 9 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
int0 = 18                                                               # STEP 10
ACTION: int0 = 18 
int0 = 2 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 11
ACTION: int3 = 3 
int3 = 15 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 12
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 9]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 9, 7]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 16
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 9, 3, 7]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 17
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 18
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.inorder()                                                 # STEP 19
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 11                                                               # STEP 20
ACTION: int2 = 11 
int2 = 7 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int3 = 5                                                                # STEP 21
ACTION: int3 = 5 
int3 = 3 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 24
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1 == avl1                                                            # STEP 25
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int3 = 18                                                               # STEP 26
ACTION: int3 = 18 
int3 = 5 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 27
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 19                                                               # STEP 28
ACTION: int1 = 19 
int1 = 7 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 29
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 30
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                       # STEP 31
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 10                                                               # STEP 32
ACTION: int0 = 10 
int0 = 18 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 33
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 35
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int1 = 1                                                                # STEP 36
ACTION: int1 = 1 
int1 = 19 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 5, 7, 9, 11, 16]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 38
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([3, 5, 7, 9, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 5, 7, 9, 11, 16]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 39
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 42
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 3, 5, 7, 9, 11, 16, 18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl1.find(int0)                                                # STEP 44
ACTION: result = avl1.find(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 45
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 46
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 47
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 19]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 48
ACTION: int2 = 12 
int2 = 11 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 49
ACTION: int3 = 15 
int3 = 18 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 50
ACTION: int1 = 11 
int1 = 1 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 51
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([1, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 1, 19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 52
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 1, 10, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 53
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 54
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 1, 10, 19, 15]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 55
ACTION: int0 = 3 
int0 = 10 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 56
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl0.inorder()                                                 # STEP 57
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 10, 19, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 13                                                               # STEP 58
ACTION: int3 = 13 
int3 = 15 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 59
ACTION: int1 = 4 
int1 = 11 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 10, 19, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.insert(int1)                                                       # STEP 61
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 7, 9, 11, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 4, 5, 7, 9, 11, 16, 18]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 62
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 5, 7, 9, 11, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 3, 4, 5, 7, 9, 11, 13, 16, 18]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 63
ACTION: int1 = 2 
int1 = 4 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 64
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 10, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 10                                                               # STEP 65
ACTION: int0 = 10 
int0 = 3 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 66
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 10, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 13                                                               # STEP 67
ACTION: int3 = 13 
int3 = 13 : <type 'int'>
==================================================
int1 = 8                                                                # STEP 68
ACTION: int1 = 8 
int1 = 2 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 69
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 10, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([11, 1, 19, 15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 70
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 5, 7, 9, 11, 13, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 3, 4, 5, 7, 9, 10, 11, 13, 16, 18]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 71
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 16                                                               # STEP 72
ACTION: int0 = 16 
int0 = 10 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 73
ACTION: int3 = 18 
int3 = 13 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 74
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 12                                                               # STEP 75
ACTION: int3 = 12 
int3 = 18 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 76
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([11, 1, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 11, 15, 16, 19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 77
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([1, 11, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 78
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 5, 7, 9, 10, 11, 13, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 16, 18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 79
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b34998> : <type 'instance'>
avl_REF0 = set([1, 11, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 11, 12, 15, 16, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 80
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103f82f38> : <type 'instance'>
avl_REF1 = set([1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d35098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e119e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 70 steps

SAVING TEST AS failure.40027.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 15                                                                # STEP 1
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 2
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 3
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int3)                                                        # STEP 4
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                        # STEP 6
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 7
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 8
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                        # STEP 9
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 10
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 11
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 12
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 13
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 14
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 15
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 16
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 17
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 18
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 19
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 20
ACTION: int0 = 17 
int0 = 7 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 22
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 23
ACTION: int2 = 8 
int2 = 16 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 24
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 25
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 26
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 15]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 27
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 28
ACTION: int3 = 18 
int3 = 15 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
int2 = 13                                                               # STEP 29
ACTION: int2 = 13 
int2 = 8 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 30
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 17, 15]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 33
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 34
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 18]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 36
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 37
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 38
ACTION: int0 = 18 
int0 = 17 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 39
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 18, 13]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 40
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 42
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18, 7]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 43
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 17, 13, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 45
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int3 = 13                                                               # STEP 46
ACTION: int3 = 13 
int3 = 18 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 47
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([17, 13]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 48
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 49
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 50
ACTION: avl2.insert(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 51
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8, 17, 15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 52
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 18, 13]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 53
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b28200> : <type 'instance'>
avl_REF1 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 18, 13, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 54
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 1                                                                # STEP 55
ACTION: int1 = 1 
int1 = 7 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 57
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 7]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 58
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 10                                                               # STEP 59
ACTION: int0 = 10 
int0 = 18 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 60
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 17, 13, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 61
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 62
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 17, 1, 13, 15]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 63
ACTION: int2 = 13 
int2 = 13 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b844d0> : <type 'instance'>
avl_REF0 = set([18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18, 13, 7]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 65
ACTION: int3 = 15 
int3 = 13 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 66
ACTION: int1 = 10 
int1 = 1 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 67
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 1, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([8, 17, 1, 15]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 68
ACTION: int2 = 2 
int2 = 13 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 69
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a88bd8> : <type 'instance'>
avl_REF2 = set([8, 17, 1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8, 17, 1]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e34f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 40
STOPPING TESTING DUE TO TIMEOUT
8.81587508133 PERCENT COVERED
60.2632050514 TOTAL RUNTIME
6 EXECUTED
491 TOTAL TEST OPERATIONS
22.6968796253 TIME SPENT EXECUTING TEST OPERATIONS
0.0693981647491 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.9077785015 TIME SPENT CHECKING PROPERTIES
45.6046581268 TOTAL TIME SPENT RUNNING SUT
0.00364232063293 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 9                                                                 # STEP 0
int3 = 15                                                                # STEP 1
int2 = 7                                                                 # STEP 2
int0 = 2                                                                 # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int3)                                                        # STEP 5
avl1.delete(int1)                                                        # STEP 6
avl1.insert(int1)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
int1 = 16                                                                # STEP 9
int0 = 18                                                               # STEP 10
int3 = 3                                                                # STEP 11
avl1.delete(int3)                                                       # STEP 12
avl1.delete(int1)                                                       # STEP 13
avl1.insert(int1)                                                       # STEP 14
avl1.insert(int2)                                                       # STEP 15
avl1.insert(int3)                                                       # STEP 16
int1 = 7                                                                # STEP 17
result = avl1.inorder()                                                 # STEP 18
result = avl1.inorder()                                                 # STEP 19
int2 = 11                                                               # STEP 20
int3 = 5                                                                # STEP 21
avl1.insert(int3)                                                       # STEP 22
result = avl1.inorder()                                                 # STEP 23
avl1.insert(int3)                                                       # STEP 24
avl1 == avl1                                                            # STEP 25
int3 = 18                                                               # STEP 26
avl1.insert(int1)                                                       # STEP 27
int1 = 19                                                               # STEP 28
avl0 = avl.AVLTree()                                                    # STEP 29
avl0 == avl0                                                            # STEP 30
avl0.delete(int0)                                                       # STEP 31
int0 = 10                                                               # STEP 32
result = avl1.inorder()                                                 # STEP 33
avl0.insert(int1)                                                       # STEP 34
avl1 == avl1                                                            # STEP 35
int1 = 1                                                                # STEP 36
avl1.insert(int2)                                                       # STEP 37
avl1.insert(int1)                                                       # STEP 38
avl1 == avl1                                                            # STEP 39
avl1.insert(int1)                                                       # STEP 40
avl0.delete(int2)                                                       # STEP 41
avl1.insert(int3)                                                       # STEP 42
avl0.delete(int0)                                                       # STEP 43
result = avl1.find(int0)                                                # STEP 44
avl0.delete(int3)                                                       # STEP 45
avl0.delete(int3)                                                       # STEP 46
avl0.insert(int1)                                                       # STEP 47
int2 = 12                                                               # STEP 48
int3 = 15                                                               # STEP 49
int1 = 11                                                               # STEP 50
avl0.insert(int1)                                                       # STEP 51
avl0.insert(int0)                                                       # STEP 52
avl1.delete(int3)                                                       # STEP 53
avl0.insert(int3)                                                       # STEP 54
int0 = 3                                                                # STEP 55
result = avl1.inorder()                                                 # STEP 56
result = avl0.inorder()                                                 # STEP 57
int3 = 13                                                               # STEP 58
int1 = 4                                                                # STEP 59
result = avl0.inorder()                                                 # STEP 60
avl1.insert(int1)                                                       # STEP 61
avl1.insert(int3)                                                       # STEP 62
int1 = 2                                                                # STEP 63
avl0.delete(int0)                                                       # STEP 64
int0 = 10                                                               # STEP 65
avl0.delete(int1)                                                       # STEP 66
int3 = 13                                                               # STEP 67
int1 = 8                                                                # STEP 68
avl0.delete(int0)                                                       # STEP 69
avl1.insert(int0)                                                       # STEP 70
avl0.delete(int3)                                                       # STEP 71
int0 = 16                                                               # STEP 72
int3 = 18                                                               # STEP 73
avl0.delete(int3)                                                       # STEP 74
int3 = 12                                                               # STEP 75
avl0.insert(int0)                                                       # STEP 76
avl0.insert(int0)                                                       # STEP 77
avl1.insert(int1)                                                       # STEP 78
avl0.insert(int3)                                                       # STEP 79
avl1.delete(int0)                                                       # STEP 80
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d35098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
avl1 = avl.AVLTree()                                                     # STEP 0
int3 = 15                                                                # STEP 1
avl1.insert(int3)                                                        # STEP 2
avl1.insert(int3)                                                        # STEP 3
avl1.delete(int3)                                                        # STEP 4
avl1.delete(int3)                                                        # STEP 5
avl1.insert(int3)                                                        # STEP 6
avl1.delete(int3)                                                        # STEP 7
avl1.delete(int3)                                                        # STEP 8
avl1.delete(int3)                                                        # STEP 9
avl1.insert(int3)                                                       # STEP 10
avl1.delete(int3)                                                       # STEP 11
int0 = 7                                                                # STEP 12
avl1.insert(int3)                                                       # STEP 13
avl1.delete(int3)                                                       # STEP 14
int2 = 16                                                               # STEP 15
avl1.delete(int0)                                                       # STEP 16
avl1.insert(int3)                                                       # STEP 17
avl1.insert(int2)                                                       # STEP 18
avl1.delete(int3)                                                       # STEP 19
int0 = 17                                                               # STEP 20
avl1.delete(int2)                                                       # STEP 21
avl2 = avl.AVLTree()                                                    # STEP 22
int2 = 8                                                                # STEP 23
avl2.delete(int2)                                                       # STEP 24
avl2.insert(int3)                                                       # STEP 25
avl2.insert(int2)                                                       # STEP 26
int1 = 7                                                                # STEP 27
int3 = 18                                                               # STEP 28
int2 = 13                                                               # STEP 29
avl2.insert(int0)                                                       # STEP 30
avl1.delete(int2)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
avl2.insert(int0)                                                       # STEP 33
avl1.insert(int3)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
avl0 = avl.AVLTree()                                                    # STEP 36
avl0.insert(int1)                                                       # STEP 37
int0 = 18                                                               # STEP 38
avl1.insert(int2)                                                       # STEP 39
avl1.insert(int2)                                                       # STEP 40
avl0.insert(int1)                                                       # STEP 41
avl0.insert(int3)                                                       # STEP 42
avl2.insert(int2)                                                       # STEP 43
avl1.delete(int1)                                                       # STEP 44
avl2.insert(int2)                                                       # STEP 45
int3 = 13                                                               # STEP 46
avl1.delete(int0)                                                       # STEP 47
avl0.delete(int0)                                                       # STEP 48
avl1.insert(int2)                                                       # STEP 49
avl2.insert(int3)                                                       # STEP 50
avl2.delete(int3)                                                       # STEP 51
avl1.insert(int0)                                                       # STEP 52
avl1.insert(int1)                                                       # STEP 53
avl2.delete(int2)                                                       # STEP 54
int1 = 1                                                                # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl0.insert(int0)                                                       # STEP 57
avl0.delete(int1)                                                       # STEP 58
int0 = 10                                                               # STEP 59
avl2.insert(int2)                                                       # STEP 60
avl0.delete(int3)                                                       # STEP 61
avl2.insert(int1)                                                       # STEP 62
int2 = 13                                                               # STEP 63
avl0.insert(int3)                                                       # STEP 64
int3 = 15                                                               # STEP 65
int1 = 10                                                               # STEP 66
avl2.delete(int2)                                                       # STEP 67
int2 = 2                                                                # STEP 68
avl2.delete(int3)                                                       # STEP 69
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e34f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
