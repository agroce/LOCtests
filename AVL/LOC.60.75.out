Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.681.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  6 [2:0]
-- < 3 [1:1]
---- < 1 [0:0] L
-- > 16 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([1, 3, 6, 12, 16, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042600e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 92 steps

SAVING TEST AS failure.681.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 6                                                                 # STEP 0
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 2
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                        # STEP 3
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 4
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 5
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 6
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int2 = 12                                                                # STEP 7
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 8
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 9
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 6                                                                # STEP 11
ACTION: int1 = 6 
int1 = 6 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 12
ACTION: result = avl1.find(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 13
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 14
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 15
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 18
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 19
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 21
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 16                                                               # STEP 23
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 25
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 26
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 27
ACTION: result = avl1.find(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 29
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 30
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 12, 6]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 31
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 32
ACTION: int1 = 19 
int1 = 6 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 33
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([16, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([12, 6]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 34
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 12, 6]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([16, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([12, 6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 36
ACTION: avl1.delete(int1) 
int1 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 37
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 38
ACTION: int2 = 6 
int2 = 12 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 39
ACTION: avl2.insert(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([19, 6]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 40
ACTION: int1 = 9 
int1 = 19 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 41
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 19, 6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 42
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 6                                                                # STEP 43
ACTION: int1 = 6 
int1 = 9 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 44
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int0 = 11                                                               # STEP 45
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 46
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int2)                                                       # STEP 47
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([16, 19]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 48
ACTION: int2 = 7 
int2 = 6 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 49
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 19, 6]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 50
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 51
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 52
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 53
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 54
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 3                                                                # STEP 55
ACTION: int1 = 3 
int1 = 6 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 56
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 12                                                               # STEP 57
ACTION: int0 = 12 
int0 = 11 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 58
ACTION: int2 = 11 
int2 = 7 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 59
ACTION: int3 = 1 
int3 = 16 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 60
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 61
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 62
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 1, 19, 6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 63
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 64
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 65
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl0.find(int1)                                                # STEP 66
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 67
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 68
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 1, 19, 6, 3]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 69
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 70
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 71
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 1, 11]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 72
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 73
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl2.inorder()                                                 # STEP 74
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int0)                                                       # STEP 75
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([16, 1, 19, 6, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 3, 6, 12, 16, 19]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 76
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([3, 1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.display()                                                          # STEP 77
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 12, 16, 19]) : <type 'set'>
  6 [2:0]
-- < 3 [1:1]
---- < 1 [0:0] L
-- > 16 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([1, 3, 6, 12, 16, 19])
==================================================
int2 = 19                                                               # STEP 78
ACTION: int2 = 19 
int2 = 11 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 79
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([3, 1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 80
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 12, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 3, 6, 12, 16]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 81
ACTION: int2 = 10 
int2 = 19 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 82
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 12, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 83
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 12, 6]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 84
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 12, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int3)                                                       # STEP 85
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047f5ea8> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 86
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1044a3d40> : <type 'instance'>
avl_REF2 = set([1, 3, 6, 12, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 3, 6, 10, 12, 16]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 87
ACTION: int0 = 1 
int0 = 12 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 88
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([10, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 89
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([10, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10, 3, 12, 6]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 90
ACTION: int1 = 8 
int1 = 3 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 91
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1045107e8> : <type 'instance'>
avl_REF1 = set([10, 3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3, 12, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10416fd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:32.260734) Fri Apr 28 07:00:17 2017 [ 160 stmts 212 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10416b3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 57 steps

SAVING TEST AS failure.681.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 16                                                                # STEP 0
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
int2 = 16                                                                # STEP 1
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 3
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 4
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 3                                                                 # STEP 6
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int0)                                                 # STEP 9
ACTION: result = avl0.find(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int3 = 1                                                                # STEP 10
ACTION: int3 = 1 
int3 = 3 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 11
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 12
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 3]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 1                                                                # STEP 14
ACTION: int0 = 1 
int0 = 16 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 15
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 16
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 17
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 18
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 3                                                                # STEP 19
ACTION: int2 = 3 
int2 = 16 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 20
ACTION: int3 = 20 
int3 = 1 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 21
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 11                                                               # STEP 23
ACTION: int2 = 11 
int2 = 3 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 25
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 26
ACTION: result = avl0.find(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 11]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 28
ACTION: int2 = 1 
int2 = 11 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 29
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 30
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 31
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 1, 11]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 32
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int2)                                                       # STEP 33
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([16, 11]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 34
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 1, 11]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 36
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 14                                                               # STEP 37
ACTION: int3 = 14 
int3 = 20 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 38
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 3                                                                # STEP 39
ACTION: int0 = 3 
int0 = 1 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 40
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 1, 11, 3]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 41
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([16, 1, 11, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 3, 11, 14, 16]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 42
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 3, 11, 16]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 43
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 45
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 46
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 3, 11, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 47
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 48
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([1, 3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 49
ACTION: result = avl0.find(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 50
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 11, 16]) : <type 'set'>
==================================================
int1 = 6                                                                # STEP 51
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 52
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 53
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 54
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10416b758> : <type 'instance'>
avl_REF0 = set([3, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([11, 14, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1041456c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  15 [2:0]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
set([3, 10, 11, 15, 18, 19])
  15 [2:0]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
set([3, 10, 11, 15, 18, 19])
  15 [2:0]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
set([3, 10, 11, 15, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10501c950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 62 steps

SAVING TEST AS failure.681.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 19                                                                # STEP 0
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 19                                                                # STEP 1
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int1 = 18                                                                # STEP 2
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
int0 = 10                                                                # STEP 3
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 5
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
avl1 == avl1                                                             # STEP 6
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int3)                                                        # STEP 7
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int2)                                                        # STEP 9
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 4                                                                # STEP 10
ACTION: int3 = 4 
int3 = 19 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 19]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 12
ACTION: int2 = 3 
int2 = 19 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 13
ACTION: int0 = 15 
int0 = 10 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 14
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 19, 15]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 15
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([10, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10, 19, 18, 15]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 16
ACTION: int1 = 11 
int1 = 18 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 17
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 2                                                                # STEP 19
ACTION: int0 = 2 
int0 = 15 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 20
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 21
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 22
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 23
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 24
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.inorder()                                                 # STEP 25
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 26
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 27
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([11, 10, 19, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 28
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 30
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 31
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.display()                                                          # STEP 32
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 10, 11, 15, 18, 19])
==================================================
avl1.display()                                                          # STEP 33
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 10, 11, 15, 18, 19])
==================================================
int2 = 7                                                                # STEP 34
ACTION: int2 = 7 
int2 = 3 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 36
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 3, 10, 11, 15, 18, 19]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 37
ACTION: int3 = 7 
int3 = 4 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 38
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([2, 3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 39
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([2, 3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 40
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 10, 11, 15, 18, 19])
==================================================
int2 = 4                                                                # STEP 41
ACTION: int2 = 4 
int2 = 7 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 42
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 43
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x10414c0e0> : <type 'instance'>
avl_REF1 = set([3, 10, 11, 15, 18, 19]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 44
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 46
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 47
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 48
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 49
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 50
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 51
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 52
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11, 4]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 53
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl1.inorder()                                                 # STEP 54
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 55
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.find(int2)                                                # STEP 56
ACTION: result = avl1.find(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 57
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 58
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11, 4, 7]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 59
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 60
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11, 4, 5, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 61
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105060b00> : <type 'instance'>
avl_REF1 = set([11, 4, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([4, 5, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105068830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
62.2741901875 TOTAL RUNTIME
7 EXECUTED
511 TOTAL TEST OPERATIONS
21.7963764668 TIME SPENT EXECUTING TEST OPERATIONS
0.0581104755402 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
21.9537935257 TIME SPENT CHECKING PROPERTIES
43.7501699924 TOTAL TIME SPENT RUNNING SUT
0.00447392463684 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 6                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl2 = avl.AVLTree()                                                     # STEP 2
avl1.insert(int1)                                                        # STEP 3
avl1.delete(int1)                                                        # STEP 4
avl2.insert(int1)                                                        # STEP 5
avl2.delete(int1)                                                        # STEP 6
int2 = 12                                                                # STEP 7
avl2.insert(int1)                                                        # STEP 8
result = avl2.inorder()                                                  # STEP 9
avl1.delete(int1)                                                       # STEP 10
int1 = 6                                                                # STEP 11
result = avl1.find(int1)                                                # STEP 12
avl2.insert(int1)                                                       # STEP 13
avl1.insert(int2)                                                       # STEP 14
avl1.delete(int1)                                                       # STEP 15
avl1.delete(int1)                                                       # STEP 16
avl2.delete(int2)                                                       # STEP 17
avl2.insert(int1)                                                       # STEP 18
avl1.delete(int2)                                                       # STEP 19
avl1.delete(int2)                                                       # STEP 20
avl2.delete(int1)                                                       # STEP 21
avl1.delete(int2)                                                       # STEP 22
int3 = 16                                                               # STEP 23
avl2.delete(int3)                                                       # STEP 24
avl1.delete(int1)                                                       # STEP 25
avl1.insert(int1)                                                       # STEP 26
result = avl1.find(int1)                                                # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl2.delete(int1)                                                       # STEP 29
avl1.insert(int2)                                                       # STEP 30
avl2.insert(int1)                                                       # STEP 31
int1 = 19                                                               # STEP 32
avl1.delete(int3)                                                       # STEP 33
avl1.insert(int3)                                                       # STEP 34
avl1.delete(int3)                                                       # STEP 35
avl1.delete(int1)                                                       # STEP 36
avl0 = avl.AVLTree()                                                    # STEP 37
int2 = 6                                                                # STEP 38
avl2.insert(int1)                                                       # STEP 39
int1 = 9                                                                # STEP 40
avl2.insert(int3)                                                       # STEP 41
avl2.delete(int1)                                                       # STEP 42
int1 = 6                                                                # STEP 43
avl0 == avl0                                                            # STEP 44
int0 = 11                                                               # STEP 45
result = avl0.inorder()                                                 # STEP 46
avl2.delete(int2)                                                       # STEP 47
int2 = 7                                                                # STEP 48
avl2.insert(int1)                                                       # STEP 49
avl2.insert(int3)                                                       # STEP 50
avl2.delete(int0)                                                       # STEP 51
avl0.insert(int0)                                                       # STEP 52
avl2.delete(int0)                                                       # STEP 53
avl2.insert(int1)                                                       # STEP 54
int1 = 3                                                                # STEP 55
avl2.delete(int2)                                                       # STEP 56
int0 = 12                                                               # STEP 57
int2 = 11                                                               # STEP 58
int3 = 1                                                                # STEP 59
avl1.insert(int0)                                                       # STEP 60
avl0.insert(int3)                                                       # STEP 61
avl2.insert(int3)                                                       # STEP 62
avl2.delete(int1)                                                       # STEP 63
avl2.delete(int1)                                                       # STEP 64
avl2.delete(int2)                                                       # STEP 65
result = avl0.find(int1)                                                # STEP 66
avl2.delete(int2)                                                       # STEP 67
avl2.insert(int1)                                                       # STEP 68
avl1.delete(int3)                                                       # STEP 69
avl1.insert(int0)                                                       # STEP 70
avl0.insert(int1)                                                       # STEP 71
avl2.delete(int2)                                                       # STEP 72
result = avl1.inorder()                                                 # STEP 73
result = avl2.inorder()                                                 # STEP 74
avl2.insert(int0)                                                       # STEP 75
result = avl0.inorder()                                                 # STEP 76
avl2.display()                                                          # STEP 77
int2 = 19                                                               # STEP 78
avl0.delete(int1)                                                       # STEP 79
avl2.delete(int2)                                                       # STEP 80
int2 = 10                                                               # STEP 81
avl2.delete(int2)                                                       # STEP 82
avl1.insert(int2)                                                       # STEP 83
result = avl2.inorder()                                                 # STEP 84
avl0.insert(int3)                                                       # STEP 85
avl2.insert(int2)                                                       # STEP 86
int0 = 1                                                                # STEP 87
avl1.insert(int2)                                                       # STEP 88
avl1.insert(int1)                                                       # STEP 89
int1 = 8                                                                # STEP 90
avl1.delete(int2)                                                       # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10416fd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int0 = 16                                                                # STEP 0
int2 = 16                                                                # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
avl0.insert(int2)                                                        # STEP 3
avl0.insert(int2)                                                        # STEP 4
avl0.delete(int2)                                                        # STEP 5
int3 = 3                                                                 # STEP 6
avl0.insert(int3)                                                        # STEP 7
avl0.delete(int0)                                                        # STEP 8
result = avl0.find(int0)                                                 # STEP 9
int3 = 1                                                                # STEP 10
avl0.delete(int2)                                                       # STEP 11
avl0.insert(int2)                                                       # STEP 12
avl0.insert(int0)                                                       # STEP 13
int0 = 1                                                                # STEP 14
avl0.delete(int3)                                                       # STEP 15
result = avl0.inorder()                                                 # STEP 16
avl0.delete(int0)                                                       # STEP 17
avl0.delete(int3)                                                       # STEP 18
int2 = 3                                                                # STEP 19
int3 = 20                                                               # STEP 20
avl0.delete(int2)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
int2 = 11                                                               # STEP 23
avl0.insert(int3)                                                       # STEP 24
avl0.delete(int3)                                                       # STEP 25
result = avl0.find(int2)                                                # STEP 26
avl0.insert(int2)                                                       # STEP 27
int2 = 1                                                                # STEP 28
avl0.delete(int3)                                                       # STEP 29
result = avl0.inorder()                                                 # STEP 30
avl0.insert(int2)                                                       # STEP 31
avl0 == avl0                                                            # STEP 32
avl0.delete(int2)                                                       # STEP 33
avl0.insert(int0)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
result = avl0.inorder()                                                 # STEP 36
int3 = 14                                                               # STEP 37
avl0.delete(int3)                                                       # STEP 38
int0 = 3                                                                # STEP 39
avl0.insert(int0)                                                       # STEP 40
avl0.insert(int3)                                                       # STEP 41
avl0.delete(int3)                                                       # STEP 42
avl0.delete(int3)                                                       # STEP 43
avl0.delete(int3)                                                       # STEP 44
avl0.insert(int0)                                                       # STEP 45
avl0.insert(int3)                                                       # STEP 46
avl0.insert(int0)                                                       # STEP 47
avl0.delete(int2)                                                       # STEP 48
result = avl0.find(int3)                                                # STEP 49
avl0.delete(int3)                                                       # STEP 50
int1 = 6                                                                # STEP 51
avl0.delete(int3)                                                       # STEP 52
avl0.insert(int3)                                                       # STEP 53
avl0.insert(int3)                                                       # STEP 54
avl0.insert(int0)                                                       # STEP 55
avl0.delete(int0)                                                       # STEP 56
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1041456c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int2 = 19                                                                # STEP 0
int3 = 19                                                                # STEP 1
int1 = 18                                                                # STEP 2
int0 = 10                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int2)                                                        # STEP 5
avl1 == avl1                                                             # STEP 6
avl1.insert(int3)                                                        # STEP 7
avl1.insert(int2)                                                        # STEP 8
avl1.insert(int2)                                                        # STEP 9
int3 = 4                                                                # STEP 10
avl1.insert(int0)                                                       # STEP 11
int2 = 3                                                                # STEP 12
int0 = 15                                                               # STEP 13
avl1.insert(int0)                                                       # STEP 14
avl1.insert(int1)                                                       # STEP 15
int1 = 11                                                               # STEP 16
result = avl1.inorder()                                                 # STEP 17
avl1.insert(int0)                                                       # STEP 18
int0 = 2                                                                # STEP 19
avl1.insert(int1)                                                       # STEP 20
avl1.insert(int1)                                                       # STEP 21
avl1.delete(int3)                                                       # STEP 22
avl1.delete(int3)                                                       # STEP 23
result = avl1.inorder()                                                 # STEP 24
result = avl1.inorder()                                                 # STEP 25
avl1.insert(int1)                                                       # STEP 26
avl1.insert(int2)                                                       # STEP 27
result = avl1.inorder()                                                 # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl1.insert(int2)                                                       # STEP 30
avl1.insert(int2)                                                       # STEP 31
avl1.display()                                                          # STEP 32
avl1.display()                                                          # STEP 33
int2 = 7                                                                # STEP 34
avl1.delete(int3)                                                       # STEP 35
avl1.insert(int0)                                                       # STEP 36
int3 = 7                                                                # STEP 37
avl1.delete(int2)                                                       # STEP 38
avl1.delete(int0)                                                       # STEP 39
avl1.display()                                                          # STEP 40
int2 = 4                                                                # STEP 41
avl1.delete(int0)                                                       # STEP 42
avl1 = avl.AVLTree()                                                    # STEP 43
avl1.insert(int1)                                                       # STEP 44
avl1.delete(int1)                                                       # STEP 45
avl1.insert(int1)                                                       # STEP 46
avl1.delete(int1)                                                       # STEP 47
avl1.insert(int1)                                                       # STEP 48
avl1.insert(int1)                                                       # STEP 49
avl1.delete(int2)                                                       # STEP 50
avl1.insert(int1)                                                       # STEP 51
avl1.insert(int2)                                                       # STEP 52
avl1.delete(int0)                                                       # STEP 53
result = avl1.inorder()                                                 # STEP 54
avl1.delete(int3)                                                       # STEP 55
result = avl1.find(int2)                                                # STEP 56
result = avl1.inorder()                                                 # STEP 57
avl1.insert(int3)                                                       # STEP 58
int3 = 5                                                                # STEP 59
avl1.insert(int3)                                                       # STEP 60
avl1.delete(int1)                                                       # STEP 61
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105068830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
