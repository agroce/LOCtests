Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62131.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  8 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 13 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([3, 7, 8, 10, 13, 20])
  8 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 13 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([3, 7, 8, 10, 13, 20])
  8 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 13 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([3, 7, 8, 10, 13, 20])
  10 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:-1]
---- > 20 [0:0] L
set([3, 4, 7, 10, 13, 20])
  10 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:-1]
---- > 20 [0:0] L
set([3, 4, 7, 10, 13, 20])
  10 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:-1]
---- > 20 [0:0] L
set([3, 4, 7, 10, 13, 20])
  10 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:-1]
---- > 20 [0:0] L
set([3, 4, 7, 10, 13, 20])
  10 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:-1]
---- > 20 [0:0] L
set([3, 4, 7, 10, 13, 20])
  8 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 17 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([5, 6, 8, 12, 17, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104684050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 84 steps

SAVING TEST AS failure.62131.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 9                                                                 # STEP 0
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 2
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                        # STEP 3
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 4
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 5
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 18                                                                # STEP 6
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 8
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 9
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 18]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int0 = 4                                                                # STEP 15
ACTION: int0 = 4 
int0 = 9 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 16
ACTION: int1 = 5 
int1 = 18 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 17
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 18, 4]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 18
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 19
ACTION: result = avl0.find(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 18, 4, 6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 21
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 18, 4]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 22
ACTION: result = avl0.find(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 18, 4, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 24
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 25
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 26
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 27
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int0 = 4                                                                # STEP 28
ACTION: int0 = 4 
int0 = 4 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 29
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 30
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 31
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 32
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9, 18, 5, 6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 34
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 18, 5]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 35
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 36
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 37
ACTION: int0 = 4 
int0 = 4 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 38
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([5, 6]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 39
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 8                                                                # STEP 40
ACTION: int3 = 8 
int3 = 6 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 42
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 43
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 44
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int0 = 17                                                               # STEP 45
ACTION: int0 = 17 
int0 = 4 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 46
ACTION: int1 = 12 
int1 = 5 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 47
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 5, 6]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 48
ACTION: result = avl2.find(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 18                                                               # STEP 49
ACTION: int1 = 18 
int1 = 12 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 50
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 51
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 52
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([9, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([5, 8, 9, 18]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 53
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2 == avl2                                                            # STEP 54
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([5, 8, 9, 17, 18]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 56
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 57
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([5, 8, 9, 18]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 58
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 59
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 12                                                               # STEP 60
ACTION: int3 = 12 
int3 = 8 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 61
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 18, 5, 6]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 62
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 18, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 17, 18, 5, 6]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 63
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 17, 18, 5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int2)                                                       # STEP 64
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([5, 8, 9, 13, 18]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 65
ACTION: int0 = 14 
int0 = 17 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 66
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([8, 17, 18, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([5, 6, 8, 12, 17, 18]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 67
ACTION: result = avl2.find(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 12, 17, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 68
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([5, 8, 9, 12, 13, 18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 69
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 70
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([5, 8, 9, 12, 13, 14, 18]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 71
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 12, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 10                                                               # STEP 72
ACTION: int1 = 10 
int1 = 18 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 73
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 12, 17, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.display()                                                          # STEP 74
ACTION: avl2.display() 
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 12, 17, 18]) : <type 'set'>
  8 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 17 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([5, 6, 8, 12, 17, 18])
==================================================
avl2.insert(int2)                                                       # STEP 75
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 12, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([5, 6, 8, 12, 13, 17, 18]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 76
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([5, 8, 9, 10, 12, 13, 14, 18]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 77
ACTION: int1 = 8 
int1 = 10 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 78
ACTION: avl2.delete(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 12, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([5, 6, 8, 13, 17, 18]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 79
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 80
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 10, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([5, 8, 9, 10, 12, 14, 18]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 81
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 10, 12, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([5, 8, 9, 10, 12, 13, 14, 18]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 82
ACTION: result = avl2.find(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1048855a8> : <type 'instance'>
avl_REF2 = set([5, 6, 8, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 83
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104353200> : <type 'instance'>
avl_REF0 = set([5, 8, 9, 10, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([5, 8, 9, 10, 12, 13, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042394d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #6 (0:00:30.090502) Mon May  1 17:48:32 2017 [ 160 stmts 212 branches ]
  11 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 14 [1:1]
---- < 13 [0:0] L
set([2, 5, 8, 11, 13, 14])
  5 [2:0]
-- < 3 [1:1]
---- < 1 [0:0] L
-- > 11 [1:0]
---- < 8 [0:0] L
---- > 13 [0:0] L
set([1, 3, 5, 8, 11, 13])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 76
STOPPING TESTING DUE TO TIMEOUT
8.32849680789 PERCENT COVERED
60.2064869404 TOTAL RUNTIME
5 EXECUTED
460 TOTAL TEST OPERATIONS
25.3884754181 TIME SPENT EXECUTING TEST OPERATIONS
0.0544092655182 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.5060052872 TIME SPENT CHECKING PROPERTIES
50.8944807053 TOTAL TIME SPENT RUNNING SUT
0.00361204147339 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 9                                                                 # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
avl0.delete(int0)                                                        # STEP 2
avl0.insert(int0)                                                        # STEP 3
avl0.delete(int0)                                                        # STEP 4
avl0.delete(int0)                                                        # STEP 5
int1 = 18                                                                # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl0.delete(int1)                                                        # STEP 8
avl0.delete(int1)                                                        # STEP 9
avl0.insert(int1)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
avl0.insert(int0)                                                       # STEP 13
avl0.insert(int1)                                                       # STEP 14
int0 = 4                                                                # STEP 15
int1 = 5                                                                # STEP 16
avl0.insert(int0)                                                       # STEP 17
int3 = 6                                                                # STEP 18
result = avl0.find(int3)                                                # STEP 19
avl0.insert(int3)                                                       # STEP 20
avl0.delete(int3)                                                       # STEP 21
result = avl0.find(int1)                                                # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.insert(int0)                                                       # STEP 24
avl0.insert(int3)                                                       # STEP 25
avl0.insert(int0)                                                       # STEP 26
avl0.insert(int3)                                                       # STEP 27
int0 = 4                                                                # STEP 28
avl0.insert(int0)                                                       # STEP 29
avl0.insert(int0)                                                       # STEP 30
avl0.insert(int0)                                                       # STEP 31
avl0.delete(int0)                                                       # STEP 32
avl0.insert(int3)                                                       # STEP 33
avl0.delete(int3)                                                       # STEP 34
avl2 = avl.AVLTree()                                                    # STEP 35
avl2.insert(int3)                                                       # STEP 36
int0 = 4                                                                # STEP 37
avl2.insert(int1)                                                       # STEP 38
result = avl0.inorder()                                                 # STEP 39
int3 = 8                                                                # STEP 40
avl2.delete(int3)                                                       # STEP 41
avl0.delete(int0)                                                       # STEP 42
avl0.delete(int3)                                                       # STEP 43
avl2.insert(int1)                                                       # STEP 44
int0 = 17                                                               # STEP 45
int1 = 12                                                               # STEP 46
avl2.insert(int3)                                                       # STEP 47
result = avl2.find(int1)                                                # STEP 48
int1 = 18                                                               # STEP 49
avl0.insert(int1)                                                       # STEP 50
avl0.delete(int3)                                                       # STEP 51
avl0.insert(int3)                                                       # STEP 52
avl2.delete(int1)                                                       # STEP 53
avl2 == avl2                                                            # STEP 54
avl0.insert(int0)                                                       # STEP 55
int2 = 13                                                               # STEP 56
avl0.delete(int0)                                                       # STEP 57
avl2.delete(int2)                                                       # STEP 58
avl2.delete(int2)                                                       # STEP 59
int3 = 12                                                               # STEP 60
avl2.insert(int1)                                                       # STEP 61
avl2.insert(int0)                                                       # STEP 62
result = avl2.inorder()                                                 # STEP 63
avl0.insert(int2)                                                       # STEP 64
int0 = 14                                                               # STEP 65
avl2.insert(int3)                                                       # STEP 66
result = avl2.find(int3)                                                # STEP 67
avl0.insert(int3)                                                       # STEP 68
avl0.delete(int0)                                                       # STEP 69
avl0.insert(int0)                                                       # STEP 70
avl2.insert(int3)                                                       # STEP 71
int1 = 10                                                               # STEP 72
result = avl2.inorder()                                                 # STEP 73
avl2.display()                                                          # STEP 74
avl2.insert(int2)                                                       # STEP 75
avl0.insert(int1)                                                       # STEP 76
int1 = 8                                                                # STEP 77
avl2.delete(int3)                                                       # STEP 78
avl2.insert(int2)                                                       # STEP 79
avl0.delete(int2)                                                       # STEP 80
avl0.insert(int2)                                                       # STEP 81
result = avl2.find(int1)                                                # STEP 82
avl0.delete(int0)                                                       # STEP 83
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042394d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
