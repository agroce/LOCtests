Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.590.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104bd7ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 70 steps

SAVING TEST AS failure.590.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 20                                                                # STEP 0
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 2                                                                 # STEP 2
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 4
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                 # STEP 6
ACTION: result = avl0.find(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int1)                                                        # STEP 8
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 20]) : <type 'set'>
==================================================
avl0 == avl1                                                             # STEP 9
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
avl_REF1 = set([2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl0.insert(int0)                                                       # STEP 10
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl1.find(int1)                                                # STEP 11
ACTION: result = avl1.find(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([2, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 12
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl1.find(int1)                                                # STEP 13
ACTION: result = avl1.find(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([2, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 15
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 16
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 17
ACTION: int1 = 16 
int1 = 2 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 14                                                               # STEP 19
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 20
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([20, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 23
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 24
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 25
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 26
ACTION: int2 = 6 
int2 = 14 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 27
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([6, 14]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 28
ACTION: int3 = 8 
int3 = None : <type 'NoneType'>
=> int3 = 8 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 29
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x104d48ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 30
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 31
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 32
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int2 = 5                                                                # STEP 33
ACTION: int2 = 5 
int2 = 6 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 34
ACTION: int0 = 12 
int0 = 20 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 35
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 6, 14]) : <type 'set'>
==================================================
int1 = 5                                                                # STEP 36
ACTION: int1 = 5 
int1 = 16 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 37
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([16, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 38
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([16, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 39
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 40
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 41
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([5, 6]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 43
ACTION: int3 = 18 
int3 = 8 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 45
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 10                                                               # STEP 46
ACTION: int1 = 10 
int1 = 5 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
int0 = 16                                                               # STEP 47
ACTION: int0 = 16 
int0 = 12 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 48
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 49
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 1                                                                # STEP 50
ACTION: int3 = 1 
int3 = 18 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 51
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 1                                                                # STEP 52
ACTION: int2 = 1 
int2 = 5 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 53
ACTION: result = avl0.find(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 7                                                                # STEP 54
ACTION: int0 = 7 
int0 = 16 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
int1 = 1                                                                # STEP 55
ACTION: int1 = 1 
int1 = 10 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 56
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 58
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 6, 8, 14, 16]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 59
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([1, 6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 60
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 61
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 62
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 6, 8, 14, 16]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 63
ACTION: int2 = 10 
int2 = 1 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int0 = 16                                                               # STEP 64
ACTION: int0 = 16 
int0 = 7 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 65
ACTION: int3 = 7 
int3 = 1 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 66
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([5, 6, 7]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 67
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ba90e0> : <type 'instance'>
avl_REF0 = set([5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 12                                                               # STEP 68
ACTION: int3 = 12 
int3 = 7 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 69
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104c348c0> : <type 'instance'>
avl_REF1 = set([1, 6, 8, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 6, 8, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10489de18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1048a2d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 18 steps

SAVING TEST AS failure.590.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 8                                                                 # STEP 0
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
int3 = 2                                                                 # STEP 1
ACTION: int3 = 2 
int3 = None : <type 'NoneType'>
=> int3 = 2 : <type 'int'>
==================================================
int2 = 12                                                                # STEP 2
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 3
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 5
ACTION: avl2.insert(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 6
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                        # STEP 7
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 2]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([8, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 9
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 10
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 12]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 11
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int1)                                                       # STEP 12
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 17                                                               # STEP 13
ACTION: int1 = 17 
int1 = 8 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 14
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 15
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 2, 12]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 16
ACTION: avl2.insert(int0) 
int0 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([17, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 17, 2, 12]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 17
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1048a2320> : <type 'instance'>
avl_REF2 = set([16, 17, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([16, 17, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105091638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #75 (0:00:30.040413) Fri Apr 28 06:44:55 2017 [ 140 stmts 187 branches ]
  7 [2:0]
-- < 6 [1:1]
---- < 2 [0:0] L
-- > 15 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
set([2, 6, 7, 9, 15, 16])
  7 [3:-1]
-- < 6 [1:1]
---- < 2 [0:0] L
-- > 15 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:-1]
------ > 18 [0:0] L
set([2, 6, 7, 9, 15, 16, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050f7518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 79 steps

SAVING TEST AS failure.590.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 7                                                                 # STEP 1
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 2
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 3
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 4
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
int0 = 1                                                                 # STEP 5
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int3 = 15                                                                # STEP 6
ACTION: int3 = 15 
int3 = 7 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 7
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                 # STEP 8
ACTION: result = avl0.find(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int2 = 14                                                                # STEP 9
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 10
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 12
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 7]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 13
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int3)                                                       # STEP 14
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([14, 15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 15
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 14, 15]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 16
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 18
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([15, 7]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 19
ACTION: result = avl0.find(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int2 = 6                                                                # STEP 20
ACTION: int2 = 6 
int2 = 14 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 21
ACTION: int0 = 9 
int0 = 1 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 22
ACTION: int3 = 16 
int3 = 15 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 23
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 24
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 15, 7]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 25
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([16, 15, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([16, 15, 6, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 26
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([16, 15, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 9, 15, 6, 7]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 27
ACTION: int0 = 4 
int0 = 9 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 28
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 14]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 29
ACTION: int2 = 5 
int2 = 6 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 30
ACTION: result = avl2.find(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([16, 9, 15, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 14, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 32
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([16, 9, 15, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 2                                                                # STEP 33
ACTION: int1 = 2 
int1 = 15 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 34
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([16, 9, 15, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 6, 7, 9, 15, 16]) : <type 'set'>
==================================================
avl2.display()                                                          # STEP 35
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 15, 16]) : <type 'set'>
  7 [2:0]
-- < 6 [1:1]
---- < 2 [0:0] L
-- > 15 [1:0]
---- < 9 [0:0] L
---- > 16 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 6, 7, 9, 15, 16])
==================================================
int1 = 11                                                               # STEP 36
ACTION: int1 = 11 
int1 = 2 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 37
ACTION: int2 = 18 
int2 = 5 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 38
ACTION: int3 = 18 
int3 = 16 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 39
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 15, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 6, 7, 9, 15, 16, 18]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 40
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int1)                                                       # STEP 41
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.display()                                                          # STEP 42
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 15, 16, 18]) : <type 'set'>
  7 [3:-1]
-- < 6 [1:1]
---- < 2 [0:0] L
-- > 15 [2:-1]
---- < 9 [0:0] L
---- > 16 [1:-1]
------ > 18 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 6, 7, 9, 15, 16, 18])
==================================================
avl0.delete(int1)                                                       # STEP 43
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 44
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 6, 7, 9, 11, 15, 16, 18]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 45
ACTION: avl2 = avl.AVLTree() 
avl2 = <avl.AVLTree instance at 0x10513fef0> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 11, 15, 16, 18]) : <type 'set'>
=> avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 46
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int2)                                                       # STEP 47
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 48
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 14, 15]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 49
ACTION: int1 = 11 
int1 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 50
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 18, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 14, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 51
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 52
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 53
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 4, 14, 15]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 54
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2 == avl2                                                            # STEP 55
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int0)                                                       # STEP 56
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 57
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 58
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0 == avl2                                                            # STEP 59
ACTION: avl0 == avl2 
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF0 = set([1, 4, 14, 15]) : <type 'set'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF2 
==================================================
avl0.insert(int2)                                                       # STEP 60
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 4, 14, 15]) : <type 'set'>
==================================================
int1 = 1                                                                # STEP 61
ACTION: int1 = 1 
int1 = 11 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 62
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.delete(int3)                                                       # STEP 63
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 18, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 4, 14, 15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 64
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 1                                                                # STEP 65
ACTION: int2 = 1 
int2 = 18 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 66
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 67
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([1, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 68
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 18]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 69
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 70
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 71
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 72
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 73
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 74
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18, 4, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 75
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 76
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([18, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl2.find(int1)                                                # STEP 77
ACTION: result = avl2.find(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1050ea128> : <type 'instance'>
avl_REF2 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 78
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1050f05f0> : <type 'instance'>
avl_REF0 = set([18, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([18, 14, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104fe7e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105002dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 94 steps

SAVING TEST AS failure.590.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 5                                                                 # STEP 1
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
int3 = 6                                                                 # STEP 2
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 3
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                        # STEP 4
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                  # STEP 6
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 8
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([5, 6]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 9
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 10
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 13
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 14
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 11                                                               # STEP 15
ACTION: int1 = 11 
int1 = 5 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 17
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 18
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 20
ACTION: result = avl0.find(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 21
ACTION: result = avl0.find(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 25
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 6]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 28
ACTION: int3 = 5 
int3 = 6 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 29
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 30
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 32
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([5, 6]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 34
ACTION: int1 = 4 
int1 = 11 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 35
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 36
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int1)                                                # STEP 37
ACTION: result = avl0.find(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int1)                                                # STEP 39
ACTION: result = avl0.find(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 40
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 9                                                                # STEP 41
ACTION: int3 = 9 
int3 = 5 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 42
ACTION: avl1.insert(int3) 
int3 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 43
ACTION: avl1.delete(int3) 
int3 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl1.find(int1)                                                # STEP 45
ACTION: result = avl1.find(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 46
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl1.inorder()                                                 # STEP 47
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                       # STEP 48
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 49
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([4, 5, 6]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 50
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 51
ACTION: result = avl0.find(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 52
ACTION: avl1.insert(int3) 
int3 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 53
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12, 4, 5, 6]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 54
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([12, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 55
ACTION: avl1.insert(int3) 
int3 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 56
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 57
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 58
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([12, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 5, 6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 59
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 60
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([5, 6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 61
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 62
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 3                                                                # STEP 63
ACTION: int2 = 3 
int2 = 12 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 64
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([4, 5, 6]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 65
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 4]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 66
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 67
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 8                                                                # STEP 68
ACTION: int3 = 8 
int3 = 9 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 69
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 70
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 4]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 71
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 72
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 73
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 9, 4]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 74
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl1.delete(int3)                                                       # STEP 75
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([8, 9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([9, 4]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 76
ACTION: int2 = 9 
int2 = 3 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 77
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int0 = 3                                                                # STEP 78
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 79
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 4, 5, 6]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 80
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([9, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int1 = 12                                                               # STEP 81
ACTION: int1 = 12 
int1 = 4 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 82
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 4, 12]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 83
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 84
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([9, 4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 5, 6]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 85
ACTION: result = avl0.find(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int1 = 4                                                                # STEP 86
ACTION: int1 = 4 
int1 = 12 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 87
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 88
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 89
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 90
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([9, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 9, 4, 12]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 91
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 92
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104fdc998> : <type 'instance'>
avl_REF0 = set([4, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 4, 5, 6]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 93
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104fcc2d8> : <type 'instance'>
avl_REF1 = set([8, 9, 4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([8, 4, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050f5170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 5
STOPPING TESTING DUE TO TIMEOUT
8.44927044452 PERCENT COVERED
60.1553709507 TOTAL RUNTIME
7 EXECUTED
466 TOTAL TEST OPERATIONS
19.2465445995 TIME SPENT EXECUTING TEST OPERATIONS
0.0514204502106 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
19.4288272858 TIME SPENT CHECKING PROPERTIES
38.6753718853 TOTAL TIME SPENT RUNNING SUT
0.00402736663818 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 20                                                                # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
int1 = 2                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl1.insert(int0)                                                        # STEP 4
avl0.insert(int0)                                                        # STEP 5
result = avl0.find(int0)                                                 # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl1.insert(int1)                                                        # STEP 8
avl0 == avl1                                                             # STEP 9
avl0.insert(int0)                                                       # STEP 10
result = avl1.find(int1)                                                # STEP 11
result = avl0.inorder()                                                 # STEP 12
result = avl1.find(int1)                                                # STEP 13
avl1.delete(int1)                                                       # STEP 14
avl0.insert(int1)                                                       # STEP 15
avl0.delete(int1)                                                       # STEP 16
int1 = 16                                                               # STEP 17
avl1.insert(int0)                                                       # STEP 18
int2 = 14                                                               # STEP 19
avl0.insert(int0)                                                       # STEP 20
avl1.delete(int2)                                                       # STEP 21
avl1.insert(int2)                                                       # STEP 22
avl1.delete(int1)                                                       # STEP 23
avl0.delete(int1)                                                       # STEP 24
avl1.delete(int0)                                                       # STEP 25
int2 = 6                                                                # STEP 26
avl1.insert(int2)                                                       # STEP 27
int3 = 8                                                                # STEP 28
avl0 = avl.AVLTree()                                                    # STEP 29
avl1.delete(int0)                                                       # STEP 30
avl0.insert(int2)                                                       # STEP 31
avl0.delete(int1)                                                       # STEP 32
int2 = 5                                                                # STEP 33
int0 = 12                                                               # STEP 34
avl1.insert(int1)                                                       # STEP 35
int1 = 5                                                                # STEP 36
avl1.delete(int0)                                                       # STEP 37
avl1.insert(int3)                                                       # STEP 38
avl1.delete(int1)                                                       # STEP 39
avl0.delete(int2)                                                       # STEP 40
result = avl1.inorder()                                                 # STEP 41
avl0.insert(int1)                                                       # STEP 42
int3 = 18                                                               # STEP 43
avl1.delete(int1)                                                       # STEP 44
avl0.delete(int0)                                                       # STEP 45
int1 = 10                                                               # STEP 46
int0 = 16                                                               # STEP 47
avl1.delete(int1)                                                       # STEP 48
avl1.delete(int3)                                                       # STEP 49
int3 = 1                                                                # STEP 50
result = avl0.find(int2)                                                # STEP 51
int2 = 1                                                                # STEP 52
result = avl0.find(int0)                                                # STEP 53
int0 = 7                                                                # STEP 54
int1 = 1                                                                # STEP 55
avl1.delete(int3)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
avl1.insert(int3)                                                       # STEP 58
avl1.delete(int2)                                                       # STEP 59
avl0.delete(int0)                                                       # STEP 60
avl1.delete(int0)                                                       # STEP 61
avl1.insert(int2)                                                       # STEP 62
int2 = 10                                                               # STEP 63
int0 = 16                                                               # STEP 64
int3 = 7                                                                # STEP 65
avl0.insert(int3)                                                       # STEP 66
avl0.insert(int3)                                                       # STEP 67
int3 = 12                                                               # STEP 68
avl1.delete(int0)                                                       # STEP 69
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10489de18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int1 = 8                                                                 # STEP 0
int3 = 2                                                                 # STEP 1
int2 = 12                                                                # STEP 2
int0 = 16                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int3)                                                        # STEP 5
avl2.delete(int0)                                                        # STEP 6
avl2.insert(int1)                                                        # STEP 7
avl2.delete(int1)                                                        # STEP 8
result = avl2.inorder()                                                  # STEP 9
avl2.insert(int2)                                                       # STEP 10
result = avl2.inorder()                                                 # STEP 11
avl2.delete(int1)                                                       # STEP 12
int1 = 17                                                               # STEP 13
avl2.insert(int2)                                                       # STEP 14
avl2.insert(int1)                                                       # STEP 15
avl2.insert(int0)                                                       # STEP 16
avl2.delete(int3)                                                       # STEP 17
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105091638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
avl2 = avl.AVLTree()                                                     # STEP 0
int3 = 7                                                                 # STEP 1
avl2.insert(int3)                                                        # STEP 2
avl2.delete(int3)                                                        # STEP 3
avl2.insert(int3)                                                        # STEP 4
int0 = 1                                                                 # STEP 5
int3 = 15                                                                # STEP 6
avl0 = avl.AVLTree()                                                     # STEP 7
result = avl0.find(int0)                                                 # STEP 8
int2 = 14                                                                # STEP 9
result = avl0.inorder()                                                 # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl2.insert(int0)                                                       # STEP 12
result = avl2.inorder()                                                 # STEP 13
avl0.insert(int3)                                                       # STEP 14
avl0.insert(int0)                                                       # STEP 15
avl2.delete(int0)                                                       # STEP 16
avl0.insert(int3)                                                       # STEP 17
avl2.insert(int3)                                                       # STEP 18
result = avl0.find(int0)                                                # STEP 19
int2 = 6                                                                # STEP 20
int0 = 9                                                                # STEP 21
int3 = 16                                                               # STEP 22
int1 = 15                                                               # STEP 23
avl2.insert(int3)                                                       # STEP 24
avl2.insert(int2)                                                       # STEP 25
avl2.insert(int0)                                                       # STEP 26
int0 = 4                                                                # STEP 27
avl0.delete(int1)                                                       # STEP 28
int2 = 5                                                                # STEP 29
result = avl2.find(int1)                                                # STEP 30
avl0.insert(int1)                                                       # STEP 31
avl2.delete(int2)                                                       # STEP 32
int1 = 2                                                                # STEP 33
avl2.insert(int1)                                                       # STEP 34
avl2.display()                                                          # STEP 35
int1 = 11                                                               # STEP 36
int2 = 18                                                               # STEP 37
int3 = 18                                                               # STEP 38
avl2.insert(int2)                                                       # STEP 39
result = avl0.inorder()                                                 # STEP 40
avl2.delete(int1)                                                       # STEP 41
avl2.display()                                                          # STEP 42
avl0.delete(int1)                                                       # STEP 43
avl2.insert(int1)                                                       # STEP 44
avl2 = avl.AVLTree()                                                    # STEP 45
result = avl2.inorder()                                                 # STEP 46
avl0.delete(int2)                                                       # STEP 47
avl0.insert(int2)                                                       # STEP 48
int1 = 11                                                               # STEP 49
avl0.delete(int2)                                                       # STEP 50
avl0.delete(int0)                                                       # STEP 51
avl2.insert(int3)                                                       # STEP 52
avl0.insert(int0)                                                       # STEP 53
avl2.delete(int1)                                                       # STEP 54
avl2 == avl2                                                            # STEP 55
avl2.delete(int0)                                                       # STEP 56
avl2.delete(int1)                                                       # STEP 57
avl2.delete(int0)                                                       # STEP 58
avl0 == avl2                                                            # STEP 59
avl0.insert(int2)                                                       # STEP 60
int1 = 1                                                                # STEP 61
avl2 == avl2                                                            # STEP 62
avl0.delete(int3)                                                       # STEP 63
avl0.delete(int2)                                                       # STEP 64
int2 = 1                                                                # STEP 65
avl2.insert(int3)                                                       # STEP 66
avl0.delete(int2)                                                       # STEP 67
avl2.insert(int1)                                                       # STEP 68
avl0.insert(int0)                                                       # STEP 69
avl2.insert(int3)                                                       # STEP 70
avl0.delete(int2)                                                       # STEP 71
avl2.delete(int3)                                                       # STEP 72
avl2.insert(int3)                                                       # STEP 73
avl0.insert(int3)                                                       # STEP 74
avl2.insert(int2)                                                       # STEP 75
avl0.insert(int3)                                                       # STEP 76
result = avl2.find(int1)                                                # STEP 77
avl0.delete(int0)                                                       # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104fe7e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 3
avl0 = avl.AVLTree()                                                     # STEP 0
int1 = 5                                                                 # STEP 1
int3 = 6                                                                 # STEP 2
avl0.delete(int3)                                                        # STEP 3
avl0.delete(int3)                                                        # STEP 4
avl0.delete(int3)                                                        # STEP 5
result = avl0.inorder()                                                  # STEP 6
avl0.insert(int3)                                                        # STEP 7
avl0.insert(int1)                                                        # STEP 8
avl0.delete(int1)                                                        # STEP 9
avl0.insert(int3)                                                       # STEP 10
avl0.delete(int1)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
avl0.delete(int3)                                                       # STEP 13
result = avl0.inorder()                                                 # STEP 14
int1 = 11                                                               # STEP 15
avl0.insert(int3)                                                       # STEP 16
avl0.delete(int3)                                                       # STEP 17
avl0.delete(int3)                                                       # STEP 18
avl0.delete(int3)                                                       # STEP 19
result = avl0.find(int3)                                                # STEP 20
result = avl0.find(int3)                                                # STEP 21
avl0.insert(int3)                                                       # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.insert(int3)                                                       # STEP 24
avl0.delete(int1)                                                       # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl0.insert(int1)                                                       # STEP 27
int3 = 5                                                                # STEP 28
result = avl0.find(int3)                                                # STEP 29
avl0.insert(int1)                                                       # STEP 30
avl0.insert(int1)                                                       # STEP 31
avl0.delete(int1)                                                       # STEP 32
avl0.insert(int3)                                                       # STEP 33
int1 = 4                                                                # STEP 34
avl0.insert(int3)                                                       # STEP 35
avl0.delete(int1)                                                       # STEP 36
result = avl0.find(int1)                                                # STEP 37
result = avl0.inorder()                                                 # STEP 38
result = avl0.find(int1)                                                # STEP 39
avl1 = avl.AVLTree()                                                    # STEP 40
int3 = 9                                                                # STEP 41
avl1.insert(int3)                                                       # STEP 42
avl1.delete(int3)                                                       # STEP 43
avl0.delete(int3)                                                       # STEP 44
result = avl1.find(int1)                                                # STEP 45
result = avl0.inorder()                                                 # STEP 46
result = avl1.inorder()                                                 # STEP 47
avl1.delete(int1)                                                       # STEP 48
avl0.insert(int1)                                                       # STEP 49
int2 = 12                                                               # STEP 50
result = avl0.find(int1)                                                # STEP 51
avl1.insert(int3)                                                       # STEP 52
avl0.insert(int2)                                                       # STEP 53
avl0.insert(int2)                                                       # STEP 54
avl1.insert(int3)                                                       # STEP 55
avl1.delete(int1)                                                       # STEP 56
avl1.delete(int1)                                                       # STEP 57
avl0.delete(int2)                                                       # STEP 58
avl0.insert(int1)                                                       # STEP 59
avl0.delete(int1)                                                       # STEP 60
avl1.delete(int1)                                                       # STEP 61
avl1.delete(int2)                                                       # STEP 62
int2 = 3                                                                # STEP 63
avl0.insert(int1)                                                       # STEP 64
avl1.insert(int1)                                                       # STEP 65
avl1.delete(int1)                                                       # STEP 66
avl1.delete(int1)                                                       # STEP 67
int3 = 8                                                                # STEP 68
avl0.delete(int3)                                                       # STEP 69
avl1.insert(int1)                                                       # STEP 70
avl1.delete(int2)                                                       # STEP 71
avl1.delete(int3)                                                       # STEP 72
avl1.insert(int3)                                                       # STEP 73
avl0 == avl0                                                            # STEP 74
avl1.delete(int3)                                                       # STEP 75
int2 = 9                                                                # STEP 76
avl1.insert(int2)                                                       # STEP 77
int0 = 3                                                                # STEP 78
avl0.insert(int2)                                                       # STEP 79
avl0.insert(int2)                                                       # STEP 80
int1 = 12                                                               # STEP 81
avl1.insert(int1)                                                       # STEP 82
avl1.insert(int2)                                                       # STEP 83
avl0.delete(int2)                                                       # STEP 84
result = avl0.find(int2)                                                # STEP 85
int1 = 4                                                                # STEP 86
avl0.insert(int1)                                                       # STEP 87
avl1.insert(int1)                                                       # STEP 88
result = avl1.inorder()                                                 # STEP 89
avl1.insert(int3)                                                       # STEP 90
result = avl0.inorder()                                                 # STEP 91
avl0.insert(int0)                                                       # STEP 92
avl1.delete(int2)                                                       # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050f5170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
