Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.43216.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10418ec68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 40 steps

SAVING TEST AS failure.43216.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 18                                                                # STEP 0
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 2
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 4
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
int1 = 3                                                                 # STEP 5
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 6
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int3)                                                        # STEP 7
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                 # STEP 8
ACTION: result = avl2.find(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 10
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 11
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 13
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18, 3]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 14
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 15
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 16
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 17
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 18
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 19
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 20
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 3, 12]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 21
ACTION: int1 = 16 
int1 = 3 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 22
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int0 = 1                                                                # STEP 23
ACTION: int0 = 1 
int0 = 12 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 24
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 25
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 3]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 27
ACTION: int1 = 16 
int1 = 16 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 28
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 18, 3]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 29
ACTION: int2 = 6 
int2 = 8 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 31
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 18, 3, 12]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 32
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([1, 18, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 3, 12, 6]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 33
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([1, 18, 3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([18, 3, 12, 6]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 34
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 2                                                                # STEP 35
ACTION: int1 = 2 
int1 = 16 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 36
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.find(int1)                                                # STEP 37
ACTION: result = avl0.find(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10454b050> : <type 'instance'>
avl_REF0 = set([18, 3, 12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 18, 3, 6]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 39
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042c3b90> : <type 'instance'>
avl_REF2 = set([8, 18, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8, 3, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046d3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  6 [2:0]
-- < 2 [1:-1]
---- > 5 [0:0] L
-- > 10 [1:0]
---- < 8 [0:0] L
---- > 14 [0:0] L
set([2, 5, 6, 8, 10, 14])
TEST #4 STEP #55 (0:00:30.006521) Mon May  1 02:54:40 2017 [ 152 stmts 202 branches ]
  12 [2:0]
-- < 9 [1:1]
---- < 3 [0:0] L
-- > 17 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([3, 9, 12, 15, 17, 20])
  12 [2:0]
-- < 9 [1:1]
---- < 3 [0:0] L
-- > 17 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([3, 9, 12, 15, 17, 20])
  12 [2:0]
-- < 9 [1:1]
---- < 3 [0:0] L
-- > 17 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([3, 9, 12, 15, 17, 20])
  15 [3:1]
-- < 6 [2:0]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 11 [1:-1]
------ > 13 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([2, 3, 6, 11, 13, 15, 17, 20])
  15 [3:1]
-- < 6 [2:0]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 11 [1:-1]
------ > 13 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([2, 3, 6, 11, 13, 15, 17, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10450e878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 56 steps

SAVING TEST AS failure.43216.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 6                                                                 # STEP 0
ACTION: int2 = 6 
int2 = None : <type 'NoneType'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 1
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 20                                                                # STEP 2
ACTION: int1 = 20 
int1 = None : <type 'NoneType'>
=> int1 = 20 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 4
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                        # STEP 6
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int0)                                                        # STEP 7
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 8
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 9
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 6]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 10
ACTION: result = avl0.find(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 12
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 3                                                                # STEP 13
ACTION: int2 = 3 
int2 = 6 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 14
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 15
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 17                                                               # STEP 16
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 20, 6]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 19
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 13                                                               # STEP 21
ACTION: int2 = 13 
int2 = 3 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 22
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 24
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 12                                                               # STEP 25
ACTION: int3 = 12 
int3 = 17 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 26
ACTION: int1 = 11 
int1 = 20 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([17, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 6, 13, 17, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 13, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 13, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 30
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 13, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 31
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 13, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 6, 17, 20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 6, 15, 17, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 33
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 6, 11, 15, 17, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 11, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int3 = 7                                                                # STEP 35
ACTION: int3 = 7 
int3 = 12 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 36
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 11, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 37
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int2 = 17                                                               # STEP 38
ACTION: int2 = 17 
int2 = 13 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 39
ACTION: int1 = 2 
int1 = 11 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 40
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 41
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 43
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
  15 [3:1]
-- < 6 [2:0]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 11 [1:-1]
------ > 13 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 3, 6, 11, 13, 15, 17, 20])
==================================================
result = avl0.find(int3)                                                # STEP 44
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int2 = 1                                                                # STEP 45
ACTION: int2 = 1 
int2 = 17 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 46
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 3, 6, 7, 11, 13, 15, 17, 20]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 47
ACTION: result = avl0.find(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 7, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 48
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 7, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 49
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
  15 [3:1]
-- < 6 [2:0]
---- < 3 [1:1]
------ < 2 [0:0] L
---- > 11 [1:-1]
------ > 13 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 3, 6, 11, 13, 15, 17, 20])
==================================================
avl0.delete(int3)                                                       # STEP 50
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 51
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.find(int3)                                                # STEP 52
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 53
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 4                                                                # STEP 54
ACTION: int1 = 4 
int1 = 2 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 55
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10450e7a0> : <type 'instance'>
avl_REF0 = set([2, 3, 6, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 3, 6, 11, 13, 17, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104511d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 79
STOPPING TESTING DUE TO TIMEOUT
8.86651510231 PERCENT COVERED
60.1810820103 TOTAL RUNTIME
7 EXECUTED
575 TOTAL TEST OPERATIONS
25.53216362 TIME SPENT EXECUTING TEST OPERATIONS
0.06338763237 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.6834521294 TIME SPENT CHECKING PROPERTIES
51.2156157494 TOTAL TIME SPENT RUNNING SUT
0.0039849281311 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 18                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2.delete(int3)                                                        # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.insert(int3)                                                        # STEP 4
int1 = 3                                                                 # STEP 5
avl2.delete(int1)                                                        # STEP 6
avl0.delete(int3)                                                        # STEP 7
result = avl2.find(int1)                                                 # STEP 8
avl0.insert(int3)                                                        # STEP 9
int0 = 12                                                               # STEP 10
int2 = 8                                                                # STEP 11
avl2.delete(int2)                                                       # STEP 12
avl0.insert(int1)                                                       # STEP 13
avl0.delete(int2)                                                       # STEP 14
avl2.delete(int3)                                                       # STEP 15
avl2.delete(int1)                                                       # STEP 16
avl0.delete(int0)                                                       # STEP 17
avl2.delete(int3)                                                       # STEP 18
avl2.insert(int1)                                                       # STEP 19
avl0.insert(int0)                                                       # STEP 20
int1 = 16                                                               # STEP 21
avl2.delete(int3)                                                       # STEP 22
int0 = 1                                                                # STEP 23
avl2.delete(int1)                                                       # STEP 24
avl0.delete(int1)                                                       # STEP 25
avl2.insert(int3)                                                       # STEP 26
int1 = 16                                                               # STEP 27
avl2.insert(int2)                                                       # STEP 28
int2 = 6                                                                # STEP 29
avl0.delete(int1)                                                       # STEP 30
avl0.insert(int0)                                                       # STEP 31
avl0.insert(int2)                                                       # STEP 32
avl0.delete(int0)                                                       # STEP 33
avl2.insert(int3)                                                       # STEP 34
int1 = 2                                                                # STEP 35
avl0.insert(int2)                                                       # STEP 36
result = avl0.find(int1)                                                # STEP 37
avl2.insert(int2)                                                       # STEP 38
avl2.delete(int3)                                                       # STEP 39
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046d3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int2 = 6                                                                 # STEP 0
int0 = 15                                                                # STEP 1
int1 = 20                                                                # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.insert(int0)                                                        # STEP 4
avl0.delete(int2)                                                        # STEP 5
avl0.insert(int0)                                                        # STEP 6
avl0.delete(int0)                                                        # STEP 7
avl0.insert(int1)                                                        # STEP 8
avl0.insert(int2)                                                        # STEP 9
result = avl0.find(int2)                                                # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.insert(int2)                                                       # STEP 12
int2 = 3                                                                # STEP 13
avl0.delete(int2)                                                       # STEP 14
avl0.delete(int2)                                                       # STEP 15
int3 = 17                                                               # STEP 16
avl0.insert(int3)                                                       # STEP 17
avl0.insert(int2)                                                       # STEP 18
avl0.insert(int1)                                                       # STEP 19
avl0.delete(int0)                                                       # STEP 20
int2 = 13                                                               # STEP 21
avl0.insert(int1)                                                       # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.delete(int2)                                                       # STEP 24
int3 = 12                                                               # STEP 25
int1 = 11                                                               # STEP 26
avl0.insert(int2)                                                       # STEP 27
avl0.delete(int3)                                                       # STEP 28
avl0.insert(int2)                                                       # STEP 29
avl0.insert(int2)                                                       # STEP 30
avl0.delete(int2)                                                       # STEP 31
avl0.insert(int0)                                                       # STEP 32
avl0.insert(int1)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
int3 = 7                                                                # STEP 35
avl0.insert(int2)                                                       # STEP 36
avl0.insert(int1)                                                       # STEP 37
int2 = 17                                                               # STEP 38
int1 = 2                                                                # STEP 39
avl0.insert(int2)                                                       # STEP 40
avl0.delete(int3)                                                       # STEP 41
avl0.insert(int1)                                                       # STEP 42
avl0.display()                                                          # STEP 43
result = avl0.find(int3)                                                # STEP 44
int2 = 1                                                                # STEP 45
avl0.insert(int3)                                                       # STEP 46
result = avl0.find(int1)                                                # STEP 47
avl0.delete(int3)                                                       # STEP 48
avl0.display()                                                          # STEP 49
avl0.delete(int3)                                                       # STEP 50
avl0.insert(int1)                                                       # STEP 51
result = avl0.find(int3)                                                # STEP 52
avl0.delete(int2)                                                       # STEP 53
int1 = 4                                                                # STEP 54
avl0.delete(int0)                                                       # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104511d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
