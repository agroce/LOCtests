Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47853.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c6e3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 36 steps

SAVING TEST AS failure.47853.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 18                                                                # STEP 0
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
int2 = 2                                                                 # STEP 1
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 3
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 9                                                                 # STEP 4
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 6
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int2)                                                        # STEP 7
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 2]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 8
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 2, 18]) : <type 'set'>
==================================================
int3 = 17                                                                # STEP 9
ACTION: int3 = 17 
int3 = 18 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 10
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 11
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 12
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 13
ACTION: int3 = 18 
int3 = 17 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 14
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 18]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 15
ACTION: int3 = 6 
int3 = 18 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 16
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 10                                                               # STEP 17
ACTION: int1 = 10 
int1 = 16 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 20                                                               # STEP 19
ACTION: int2 = 20 
int2 = 2 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 2, 18, 6]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 21
ACTION: int3 = 19 
int3 = 6 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 22
ACTION: result = avl2.find(int0) 
int0 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int0 = 7                                                                # STEP 23
ACTION: int0 = 7 
int0 = 9 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 20                                                               # STEP 25
ACTION: int0 = 20 
int0 = 7 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 27
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl2.find(int0)                                                # STEP 28
ACTION: result = avl2.find(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 29
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 30
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 18, 19, 10]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 31
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 13                                                               # STEP 32
ACTION: int0 = 13 
int0 = 20 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 33
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10389e320> : <type 'instance'>
avl_REF0 = set([9, 2, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 4                                                                # STEP 34
ACTION: int1 = 4 
int1 = 10 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 35
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103d0a3b0> : <type 'instance'>
avl_REF2 = set([17, 18, 19, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([17, 18, 10]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101fd1170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b94cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 31 steps

SAVING TEST AS failure.47853.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 15                                                                # STEP 0
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int3 = 10                                                                # STEP 1
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int0 = 11                                                                # STEP 2
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
int1 = 18                                                                # STEP 3
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                        # STEP 6
ACTION: avl1.insert(int3) 
int3 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 7
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                        # STEP 8
ACTION: avl1.delete(int3) 
int3 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 9
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 10
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 13
ACTION: int2 = 13 
int2 = 15 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 16
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 18                                                               # STEP 17
ACTION: int1 = 18 
int1 = 18 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 18
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 21
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 22
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 18                                                               # STEP 23
ACTION: int0 = 18 
int0 = 11 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103e86830> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int3 = 5                                                                # STEP 25
ACTION: int3 = 5 
int3 = 10 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 27
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 13, 15]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 28
ACTION: int2 = 16 
int2 = 13 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([5, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 5, 13, 15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 30
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038d1b90> : <type 'instance'>
avl_REF1 = set([18, 5, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([18, 13, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105077dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #5 STEP #0 (0:00:30.066419) Mon May  1 03:27:15 2017 [ 125 stmts 166 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103df56c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 82 steps

SAVING TEST AS failure.47853.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 17                                                                # STEP 0
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 2
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 1                                                                 # STEP 3
ACTION: int3 = 1 
int3 = None : <type 'NoneType'>
=> int3 = 1 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 4
ACTION: int0 = 14 
int0 = 17 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 8                                                                 # STEP 6
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
int2 = 15                                                                # STEP 7
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 6                                                                # STEP 10
ACTION: int3 = 6 
int3 = 1 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 11
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 13
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 14
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 15
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 7                                                                # STEP 17
ACTION: int0 = 7 
int0 = 14 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 18
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 1                                                                # STEP 19
ACTION: int3 = 1 
int3 = 6 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 20
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 4                                                                # STEP 23
ACTION: int0 = 4 
int0 = 7 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 24
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 14]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 25
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 26
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4, 14, 15]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 27
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 28
ACTION: int1 = 9 
int1 = 8 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 29
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 30
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 10                                                               # STEP 31
ACTION: int0 = 10 
int0 = 4 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 32
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 33
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 34
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 1                                                                # STEP 36
ACTION: int0 = 1 
int0 = 10 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 37
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 38
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 9]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 39
ACTION: int2 = 18 
int2 = 15 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 40
ACTION: int3 = 1 
int3 = 1 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 41
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 42
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 43
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 44
ACTION: int1 = 10 
int1 = 9 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
int3 = 12                                                               # STEP 45
ACTION: int3 = 12 
int3 = 1 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 46
ACTION: int0 = 9 
int0 = 1 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 47
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 48
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 4, 14, 15]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 49
ACTION: int0 = 12 
int0 = 9 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 50
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 12, 9]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 51
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 12, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 18, 12, 9]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 52
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([10, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 53
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([10, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([4, 14, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 54
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 12, 14, 15]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 56
ACTION: int3 = 2 
int3 = 12 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 57
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 58
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([4, 10, 12, 14, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 59
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 10, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4, 10, 12, 14, 15, 18]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 60
ACTION: avl1.insert(int3) 
int3 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9, 2]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 61
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 10, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([4, 10, 14, 15, 18]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 62
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 2, 18]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 63
ACTION: int0 = 14 
int0 = 12 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([4, 10, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 4, 10, 14, 15, 18]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 65
ACTION: avl2.insert(int3) 
int3 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 18, 12, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 18, 12, 2, 9]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 66
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([2, 4, 10, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 4, 14, 15, 18]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 67
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 18, 12, 2, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 12, 2, 9]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 68
ACTION: int1 = 2 
int1 = 10 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 69
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1050011b8> : <type 'instance'>
avl_REF0 = set([2, 4, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([4, 14, 15, 18]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 70
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([9, 2, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([9, 18]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 71
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 72
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 2]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 73
ACTION: int1 = 16 
int1 = 2 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 74
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 9, 2]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 75
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 12, 2, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 2, 9, 12, 16]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 76
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 2, 9, 12, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 2, 9, 12, 16, 18]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 77
ACTION: int3 = 15 
int3 = 2 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 78
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ca8ab8> : <type 'instance'>
avl_REF1 = set([16, 9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 79
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 2, 9, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 80
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 2, 9, 12, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 2, 9, 12, 14, 16, 18]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 81
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103ca8518> : <type 'instance'>
avl_REF2 = set([1, 2, 9, 12, 14, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 2, 9, 12, 14, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103fae5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
7.14517700552 PERCENT COVERED
61.7816700935 TOTAL RUNTIME
8 EXECUTED
549 TOTAL TEST OPERATIONS
24.1477675438 TIME SPENT EXECUTING TEST OPERATIONS
0.070680141449 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.2450158596 TIME SPENT CHECKING PROPERTIES
48.3927834034 TOTAL TIME SPENT RUNNING SUT
0.00424885749817 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 18                                                                # STEP 0
int2 = 2                                                                 # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
avl0.delete(int2)                                                        # STEP 3
int0 = 9                                                                 # STEP 4
avl0.insert(int0)                                                        # STEP 5
avl0 == avl0                                                             # STEP 6
avl0.insert(int2)                                                        # STEP 7
avl0.insert(int3)                                                        # STEP 8
int3 = 17                                                                # STEP 9
avl2 = avl.AVLTree()                                                    # STEP 10
avl2.insert(int3)                                                       # STEP 11
int1 = 16                                                               # STEP 12
int3 = 18                                                               # STEP 13
avl2.insert(int3)                                                       # STEP 14
int3 = 6                                                                # STEP 15
avl0.delete(int1)                                                       # STEP 16
int1 = 10                                                               # STEP 17
avl0.insert(int2)                                                       # STEP 18
int2 = 20                                                               # STEP 19
avl0.insert(int3)                                                       # STEP 20
int3 = 19                                                               # STEP 21
result = avl2.find(int0)                                                # STEP 22
int0 = 7                                                                # STEP 23
avl0.delete(int0)                                                       # STEP 24
int0 = 20                                                               # STEP 25
avl2.insert(int3)                                                       # STEP 26
avl0.delete(int2)                                                       # STEP 27
result = avl2.find(int0)                                                # STEP 28
avl2.insert(int3)                                                       # STEP 29
avl2.insert(int1)                                                       # STEP 30
avl0.delete(int0)                                                       # STEP 31
int0 = 13                                                               # STEP 32
avl0.delete(int1)                                                       # STEP 33
int1 = 4                                                                # STEP 34
avl2.delete(int3)                                                       # STEP 35
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101fd1170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int2 = 15                                                                # STEP 0
int3 = 10                                                                # STEP 1
int0 = 11                                                                # STEP 2
int1 = 18                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int2)                                                        # STEP 5
avl1.insert(int3)                                                        # STEP 6
avl1.delete(int1)                                                        # STEP 7
avl1.delete(int3)                                                        # STEP 8
avl1.insert(int2)                                                        # STEP 9
avl0 = avl.AVLTree()                                                    # STEP 10
avl0.delete(int1)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
int2 = 13                                                               # STEP 13
avl0.insert(int1)                                                       # STEP 14
avl1.insert(int2)                                                       # STEP 15
result = avl0.inorder()                                                 # STEP 16
int1 = 18                                                               # STEP 17
avl1.insert(int2)                                                       # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1.delete(int1)                                                       # STEP 20
result = avl0.inorder()                                                 # STEP 21
avl0.delete(int3)                                                       # STEP 22
int0 = 18                                                               # STEP 23
avl0.insert(int1)                                                       # STEP 24
int3 = 5                                                                # STEP 25
avl1.insert(int2)                                                       # STEP 26
avl1.insert(int3)                                                       # STEP 27
int2 = 16                                                               # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl1.delete(int3)                                                       # STEP 30
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105077dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int0 = 17                                                                # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
avl0.delete(int0)                                                        # STEP 2
int3 = 1                                                                 # STEP 3
int0 = 14                                                                # STEP 4
avl0.delete(int3)                                                        # STEP 5
int1 = 8                                                                 # STEP 6
int2 = 15                                                                # STEP 7
avl0.delete(int0)                                                        # STEP 8
avl0.delete(int2)                                                        # STEP 9
int3 = 6                                                                # STEP 10
avl0.delete(int2)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
avl0.delete(int1)                                                       # STEP 13
avl0.insert(int0)                                                       # STEP 14
avl0.delete(int3)                                                       # STEP 15
avl0.delete(int3)                                                       # STEP 16
int0 = 7                                                                # STEP 17
avl0.delete(int3)                                                       # STEP 18
int3 = 1                                                                # STEP 19
avl0.delete(int2)                                                       # STEP 20
avl0.delete(int0)                                                       # STEP 21
avl0.delete(int1)                                                       # STEP 22
int0 = 4                                                                # STEP 23
avl0.insert(int0)                                                       # STEP 24
avl0.insert(int0)                                                       # STEP 25
avl0.insert(int2)                                                       # STEP 26
avl2 = avl.AVLTree()                                                    # STEP 27
int1 = 9                                                                # STEP 28
avl1 = avl.AVLTree()                                                    # STEP 29
avl1.delete(int3)                                                       # STEP 30
int0 = 10                                                               # STEP 31
avl1.insert(int3)                                                       # STEP 32
avl2.delete(int0)                                                       # STEP 33
avl2.insert(int3)                                                       # STEP 34
avl0.delete(int3)                                                       # STEP 35
int0 = 1                                                                # STEP 36
avl1.delete(int2)                                                       # STEP 37
avl2.insert(int1)                                                       # STEP 38
int2 = 18                                                               # STEP 39
int3 = 1                                                                # STEP 40
avl0.delete(int1)                                                       # STEP 41
avl0.delete(int0)                                                       # STEP 42
avl1.delete(int3)                                                       # STEP 43
int1 = 10                                                               # STEP 44
int3 = 12                                                               # STEP 45
int0 = 9                                                                # STEP 46
avl1.insert(int0)                                                       # STEP 47
avl0.insert(int1)                                                       # STEP 48
int0 = 12                                                               # STEP 49
avl2.insert(int3)                                                       # STEP 50
avl2.insert(int2)                                                       # STEP 51
avl0.delete(int0)                                                       # STEP 52
avl0.delete(int1)                                                       # STEP 53
avl0.delete(int0)                                                       # STEP 54
avl0.insert(int0)                                                       # STEP 55
int3 = 2                                                                # STEP 56
avl0.delete(int3)                                                       # STEP 57
avl0.insert(int1)                                                       # STEP 58
avl0.insert(int2)                                                       # STEP 59
avl1.insert(int3)                                                       # STEP 60
avl0.delete(int0)                                                       # STEP 61
avl1.insert(int2)                                                       # STEP 62
int0 = 14                                                               # STEP 63
avl0.insert(int3)                                                       # STEP 64
avl2.insert(int3)                                                       # STEP 65
avl0.delete(int1)                                                       # STEP 66
avl2.delete(int2)                                                       # STEP 67
int1 = 2                                                                # STEP 68
avl0.delete(int3)                                                       # STEP 69
avl1.delete(int1)                                                       # STEP 70
avl1.delete(int2)                                                       # STEP 71
avl1.insert(int1)                                                       # STEP 72
int1 = 16                                                               # STEP 73
avl1.insert(int1)                                                       # STEP 74
avl2.insert(int1)                                                       # STEP 75
avl2.insert(int2)                                                       # STEP 76
int3 = 15                                                               # STEP 77
avl1.delete(int0)                                                       # STEP 78
avl2.insert(int1)                                                       # STEP 79
avl2.insert(int0)                                                       # STEP 80
avl2.delete(int2)                                                       # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103fae5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
170 BRANCHES COVERED
128 STATEMENTS COVERED
