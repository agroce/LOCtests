Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99285.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 9, 13, 20])
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 9, 13, 20])
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 9, 13, 20])
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 9, 13, 20])
  6 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
set([2, 3, 4, 6, 9, 17, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10437c8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 95 steps

SAVING TEST AS failure.99285.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 7                                                                 # STEP 0
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
int3 = 20                                                                # STEP 1
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 6                                                                 # STEP 2
ACTION: int0 = 6 
int0 = None : <type 'NoneType'>
=> int0 = 6 : <type 'int'>
==================================================
int2 = 8                                                                 # STEP 3
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 5
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                        # STEP 6
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
int0 = 3                                                                 # STEP 7
ACTION: int0 = 3 
int0 = 6 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int2)                                                        # STEP 8
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 9
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([8, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 10
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([8, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 3, 6]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 11
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([8, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 6]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 12
ACTION: result = avl0.find(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 14                                                               # STEP 13
ACTION: int0 = 14 
int0 = 3 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 14
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 15
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 20, 6]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 18
ACTION: int2 = 10 
int2 = 8 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 19
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl1.inorder()                                                 # STEP 20
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 20, 14, 6]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 20, 14, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 20, 6]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 23
ACTION: int3 = 4 
int3 = 20 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 24
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 26
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1 == avl0                                                            # STEP 27
ACTION: avl1 == avl0 
avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
int2 = 4                                                                # STEP 28
ACTION: int2 = 4 
int2 = 10 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 29
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 10                                                               # STEP 30
ACTION: int1 = 10 
int1 = 7 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 32
ACTION: result = avl0.find(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 20                                                               # STEP 33
ACTION: int0 = 20 
int0 = 14 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 34
ACTION: int2 = 12 
int2 = 4 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 35
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 36
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x1046e19e0> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 37
ACTION: int2 = 5 
int2 = 12 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 38
ACTION: result = avl1.find(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 39
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int2)                                                # STEP 40
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 41
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 42
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 43
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 44
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 6, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 46
ACTION: int0 = 3 
int0 = 20 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 47
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 9                                                                # STEP 48
ACTION: int1 = 9 
int1 = 10 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 49
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 6, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 6, 20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 50
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 51
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 53
ACTION: int2 = 20 
int2 = 5 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 54
ACTION: int3 = 13 
int3 = 4 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 55
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 3]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 56
ACTION: int0 = 9 
int0 = 3 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 57
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 58
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 59
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 20]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 60
ACTION: result = avl0.find(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0 == avl1                                                            # STEP 61
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 20]) : <type 'set'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl0.insert(int3)                                                       # STEP 62
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 6, 13, 20]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 63
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 64
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 65
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 66
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 13, 20])
==================================================
int0 = 13                                                               # STEP 67
ACTION: int0 = 13 
int0 = 9 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 68
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 10                                                               # STEP 69
ACTION: int3 = 10 
int3 = 13 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 70
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 7                                                                # STEP 71
ACTION: int1 = 7 
int1 = 9 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 72
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 73
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.display()                                                          # STEP 74
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 13, 20])
==================================================
int3 = 17                                                               # STEP 75
ACTION: int3 = 17 
int3 = 10 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 76
ACTION: result = avl1.find(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 77
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 13                                                               # STEP 78
ACTION: int1 = 13 
int1 = 7 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 79
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 13, 20])
==================================================
avl0.display()                                                          # STEP 80
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
  6 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 13 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 6, 9, 13, 20])
==================================================
avl0.delete(int0)                                                       # STEP 81
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 4, 6, 9, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 82
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int0 = 2                                                                # STEP 83
ACTION: int0 = 2 
int0 = 13 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
int2 = 9                                                                # STEP 84
ACTION: int2 = 9 
int2 = 20 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 85
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([3, 4, 6, 9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 3, 4, 6, 9, 20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 86
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 6, 9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 3, 4, 6, 9, 17, 20]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 87
ACTION: int0 = 12 
int0 = 2 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 88
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 6, 9, 17, 20]) : <type 'set'>
  6 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 9 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 3, 4, 6, 9, 17, 20])
==================================================
avl0.insert(int2)                                                       # STEP 89
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 90
ACTION: avl1.insert(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 20, 13]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 91
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 92
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043125a8> : <type 'instance'>
avl_REF1 = set([3, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 93
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 3, 4, 6, 9, 12, 17, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 94
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104372098> : <type 'instance'>
avl_REF0 = set([2, 3, 4, 6, 9, 12, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 3, 4, 6, 9, 12, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104276518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10427f3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 66 steps

SAVING TEST AS failure.99285.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 9                                                                 # STEP 0
ACTION: int1 = 9 
int1 = None : <type 'NoneType'>
=> int1 = 9 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 1
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 3
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 12                                                                # STEP 4
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int3 = 3                                                                 # STEP 5
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
result = avl0.find(int3)                                                 # STEP 6
ACTION: result = avl0.find(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                        # STEP 7
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 12]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 9
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 10
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 11
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 3, 12]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 13
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 14
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 16
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 2                                                                # STEP 17
ACTION: int0 = 2 
int0 = 12 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 18
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 3                                                                # STEP 19
ACTION: int1 = 3 
int1 = 9 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 20
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 21
ACTION: int3 = 14 
int3 = 3 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 22
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int2)                                                       # STEP 23
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 3                                                                # STEP 24
ACTION: int2 = 3 
int2 = 5 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 25
ACTION: int0 = 7 
int0 = 2 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 26
ACTION: result = avl0.find(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int3 = 15                                                               # STEP 27
ACTION: int3 = 15 
int3 = 14 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 7                                                                # STEP 29
ACTION: int3 = 7 
int3 = 15 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 30
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 7]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 31
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 32
ACTION: result = avl0.find(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 13                                                               # STEP 33
ACTION: int2 = 13 
int2 = 3 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 34
ACTION: avl2.insert(int3) 
int3 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 5, 7]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 35
ACTION: int3 = 6 
int3 = 5 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 36
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 38
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int3 = 6                                                                # STEP 39
ACTION: int3 = 6 
int3 = 6 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 40
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int2 = 15                                                               # STEP 41
ACTION: int2 = 15 
int2 = 13 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 42
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int2)                                                # STEP 43
ACTION: result = avl0.find(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 44
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 5, 6, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 45
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 46
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int3 = 2                                                                # STEP 47
ACTION: int3 = 2 
int3 = 6 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 48
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 49
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([9, 12, 5]) : <type 'set'>
==================================================
int1 = 13                                                               # STEP 50
ACTION: int1 = 13 
int1 = 3 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 51
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 12, 5, 7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 52
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9, 12, 5]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 53
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 15, 5, 6, 7]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 54
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 15, 5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 5, 6, 7, 13, 15]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 55
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([2, 5, 6, 13, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 56
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 57
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 12, 5, 13]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 58
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([9, 12, 5]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 59
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([5, 6, 13, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl2.find(int2)                                                # STEP 61
ACTION: result = avl2.find(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([5, 6, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 62
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 12, 5, 13]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 63
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([5, 6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10437c0e0> : <type 'instance'>
avl_REF0 = set([9, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 5, 9, 12, 13]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 65
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104720710> : <type 'instance'>
avl_REF2 = set([5, 6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([5, 6, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104278dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:31.235365) Fri Apr 28 03:35:27 2017 [ 162 stmts 216 branches ]
  9 [2:0]
-- < 3 [1:-1]
---- > 7 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 19 [0:0] L
set([3, 7, 9, 11, 12, 19])
  9 [2:0]
-- < 3 [1:-1]
---- > 7 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 19 [0:0] L
set([3, 7, 9, 11, 12, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10584a5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 64 steps

SAVING TEST AS failure.99285.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 6                                                                 # STEP 2
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 3
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.find(int1)                                                 # STEP 4
ACTION: result = avl2.find(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl1.delete(int1)                                                        # STEP 5
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                        # STEP 6
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
int2 = 20                                                                # STEP 7
ACTION: int2 = 20 
int2 = None : <type 'NoneType'>
=> int2 = 20 : <type 'int'>
==================================================
avl2.delete(int2)                                                        # STEP 8
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                        # STEP 9
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 10
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 11
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 12
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 13
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 14
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 15
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 16
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 6]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 17
ACTION: int1 = 11 
int1 = 6 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 3, 6]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 19
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 20
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 6                                                                # STEP 21
ACTION: int0 = 6 
int0 = None : <type 'NoneType'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 22
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([11, 3]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 23
ACTION: int2 = 3 
int2 = 20 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 25
ACTION: int3 = 15 
int3 = 3 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 27
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 28
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 20                                                               # STEP 29
ACTION: int1 = 20 
int1 = 11 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 30
ACTION: int3 = 11 
int3 = 15 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 31
ACTION: int0 = 9 
int0 = 6 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 32
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 18                                                               # STEP 33
ACTION: int2 = 18 
int2 = 3 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 34
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 9, 3]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 36
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 15]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 37
ACTION: int1 = 7 
int1 = 20 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 38
ACTION: int0 = 12 
int0 = 9 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 9, 3, 7]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 40
ACTION: int1 = 11 
int1 = 7 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 41
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1 == avl1                                                            # STEP 42
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int3)                                                       # STEP 43
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int2 = 19                                                               # STEP 44
ACTION: int2 = 19 
int2 = 18 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 45
ACTION: int3 = 20 
int3 = 11 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 46
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 47
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl2.find(int2)                                                # STEP 48
ACTION: result = avl2.find(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 49
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([11, 9, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 7, 9, 11, 12]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 50
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([3, 7, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 7, 9, 11, 12, 19]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 51
ACTION: int0 = 12 
int0 = 12 : <type 'int'>
==================================================
avl1.display()                                                          # STEP 52
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([3, 7, 9, 11, 12, 19]) : <type 'set'>
  9 [2:0]
-- < 3 [1:-1]
---- > 7 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 7, 9, 11, 12, 19])
==================================================
avl1.display()                                                          # STEP 53
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([3, 7, 9, 11, 12, 19]) : <type 'set'>
  9 [2:0]
-- < 3 [1:-1]
---- > 7 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 7, 9, 11, 12, 19])
==================================================
avl2.insert(int0)                                                       # STEP 54
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 12, 15]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 55
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([3, 7, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 16                                                               # STEP 56
ACTION: int3 = 16 
int3 = 20 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 57
ACTION: result = avl1.find(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a0d40> : <type 'instance'>
avl_REF1 = set([3, 7, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 58
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 11, 12, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 59
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 60
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 61
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
result = avl2.find(int1)                                                # STEP 62
ACTION: result = avl2.find(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 63
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104378ea8> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([9, 11, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104287bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105887560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 64 steps

SAVING TEST AS failure.99285.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 1                                                                 # STEP 0
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int3 = 11                                                                # STEP 1
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
int2 = 4                                                                 # STEP 2
ACTION: int2 = 4 
int2 = None : <type 'NoneType'>
=> int2 = 4 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1058877e8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 4
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058877e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                  # STEP 5
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1058877e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                        # STEP 6
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058877e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 13                                                                # STEP 7
ACTION: int1 = 13 
int1 = None : <type 'NoneType'>
=> int1 = 13 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 8
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x1058877e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 10
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 11
ACTION: result = avl0.find(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 12
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 13
ACTION: int3 = 5 
int3 = 11 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 13]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 15
ACTION: int0 = 5 
int0 = 1 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 16
ACTION: int1 = 5 
int1 = 13 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 17
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 18
ACTION: avl0.insert(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 13, 5]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 19
ACTION: int0 = 7 
int0 = 5 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([11, 13]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([11, 4, 13]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 22
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 4, 13, 5]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 25
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11, 4, 13]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 26
ACTION: int2 = 15 
int2 = 4 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 27
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 17                                                               # STEP 28
ACTION: int3 = 17 
int3 = 5 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 29
ACTION: int1 = 4 
int1 = 5 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 30
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 31
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 4, 13, 7]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 33
ACTION: int2 = 2 
int2 = 15 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 34
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([11, 4, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 4, 7, 11, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 35
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 7, 11, 13]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 36
ACTION: int0 = 18 
int0 = 7 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 37
ACTION: int2 = 18 
int2 = 2 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 38
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 39
ACTION: int3 = 3 
int3 = 17 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 40
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4, 7, 11, 13, 17, 18]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 41
ACTION: int2 = 19 
int2 = 18 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 42
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 43
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 12                                                               # STEP 44
ACTION: int0 = 12 
int0 = 18 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 45
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int1)                                                # STEP 46
ACTION: result = avl0.find(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int0 = 11                                                               # STEP 47
ACTION: int0 = 11 
int0 = 12 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 48
ACTION: int1 = 5 
int1 = 4 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 49
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([4, 7, 13, 17]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 50
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 51
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 52
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4, 7, 13, 17, 19]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 53
ACTION: result = avl0.find(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 13, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int0 = 2                                                                # STEP 54
ACTION: int0 = 2 
int0 = 11 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 55
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([4, 7, 13, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 7, 13, 17, 19]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 56
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1042ab638> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 57
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 13, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 4, 5, 7, 13, 17, 19]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 58
ACTION: int2 = 19 
int2 = 19 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 59
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1042ab638> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int1 = 19                                                               # STEP 60
ACTION: int1 = 19 
int1 = 5 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 61
ACTION: int3 = 11 
int3 = 3 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 62
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042ab638> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 63
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105877560> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 7, 13, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 4, 5, 7, 13, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058b15f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
  10 [2:0]
-- < 7 [1:1]
---- < 4 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 18 [0:0] L
set([4, 7, 10, 14, 15, 18])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 50
STOPPING TESTING DUE TO TIMEOUT
8.58500169664 PERCENT COVERED
60.1861898899 TOTAL RUNTIME
7 EXECUTED
539 TOTAL TEST OPERATIONS
19.6234383583 TIME SPENT EXECUTING TEST OPERATIONS
0.0597145557404 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
19.7270195484 TIME SPENT CHECKING PROPERTIES
39.3504579067 TOTAL TIME SPENT RUNNING SUT
0.00431990623474 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 7                                                                 # STEP 0
int3 = 20                                                                # STEP 1
int0 = 6                                                                 # STEP 2
int2 = 8                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int1)                                                        # STEP 5
avl0.insert(int0)                                                        # STEP 6
int0 = 3                                                                 # STEP 7
avl0.insert(int2)                                                        # STEP 8
avl0.delete(int3)                                                        # STEP 9
avl0.insert(int0)                                                       # STEP 10
avl0.delete(int2)                                                       # STEP 11
result = avl0.find(int2)                                                # STEP 12
int0 = 14                                                               # STEP 13
avl1 = avl.AVLTree()                                                    # STEP 14
avl0.delete(int2)                                                       # STEP 15
avl0.delete(int3)                                                       # STEP 16
avl0.insert(int3)                                                       # STEP 17
int2 = 10                                                               # STEP 18
avl0.delete(int0)                                                       # STEP 19
result = avl1.inorder()                                                 # STEP 20
avl0.insert(int0)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
int3 = 4                                                                # STEP 23
result = avl1.inorder()                                                 # STEP 24
avl0.insert(int2)                                                       # STEP 25
avl0.insert(int2)                                                       # STEP 26
avl1 == avl0                                                            # STEP 27
int2 = 4                                                                # STEP 28
avl0.delete(int0)                                                       # STEP 29
int1 = 10                                                               # STEP 30
avl1.delete(int2)                                                       # STEP 31
result = avl0.find(int2)                                                # STEP 32
int0 = 20                                                               # STEP 33
int2 = 12                                                               # STEP 34
avl1.insert(int2)                                                       # STEP 35
avl1 = avl.AVLTree()                                                    # STEP 36
int2 = 5                                                                # STEP 37
result = avl1.find(int3)                                                # STEP 38
avl0.delete(int3)                                                       # STEP 39
result = avl0.find(int2)                                                # STEP 40
avl0.insert(int0)                                                       # STEP 41
avl1.insert(int1)                                                       # STEP 42
result = avl0.inorder()                                                 # STEP 43
avl0.delete(int1)                                                       # STEP 44
avl1.delete(int1)                                                       # STEP 45
int0 = 3                                                                # STEP 46
avl1.delete(int3)                                                       # STEP 47
int1 = 9                                                                # STEP 48
avl0.insert(int3)                                                       # STEP 49
avl0.delete(int1)                                                       # STEP 50
avl1.delete(int0)                                                       # STEP 51
avl1.insert(int1)                                                       # STEP 52
int2 = 20                                                               # STEP 53
int3 = 13                                                               # STEP 54
avl1.insert(int0)                                                       # STEP 55
int0 = 9                                                                # STEP 56
avl1.delete(int2)                                                       # STEP 57
avl1.delete(int0)                                                       # STEP 58
avl1.insert(int2)                                                       # STEP 59
result = avl0.find(int1)                                                # STEP 60
avl0 == avl1                                                            # STEP 61
avl0.insert(int3)                                                       # STEP 62
result = avl1.inorder()                                                 # STEP 63
avl1.delete(int3)                                                       # STEP 64
avl0.insert(int1)                                                       # STEP 65
avl0.display()                                                          # STEP 66
int0 = 13                                                               # STEP 67
avl1.delete(int1)                                                       # STEP 68
int3 = 10                                                               # STEP 69
result = avl0.inorder()                                                 # STEP 70
int1 = 7                                                                # STEP 71
avl0.delete(int3)                                                       # STEP 72
result = avl1.inorder()                                                 # STEP 73
avl0.display()                                                          # STEP 74
int3 = 17                                                               # STEP 75
result = avl1.find(int1)                                                # STEP 76
result = avl0.inorder()                                                 # STEP 77
int1 = 13                                                               # STEP 78
avl0.display()                                                          # STEP 79
avl0.display()                                                          # STEP 80
avl0.delete(int0)                                                       # STEP 81
avl0.insert(int2)                                                       # STEP 82
int0 = 2                                                                # STEP 83
int2 = 9                                                                # STEP 84
avl0.insert(int0)                                                       # STEP 85
avl0.insert(int3)                                                       # STEP 86
int0 = 12                                                               # STEP 87
avl0.display()                                                          # STEP 88
avl0.insert(int2)                                                       # STEP 89
avl1.insert(int1)                                                       # STEP 90
avl0.delete(int1)                                                       # STEP 91
avl1.delete(int2)                                                       # STEP 92
avl0.insert(int0)                                                       # STEP 93
avl0.delete(int3)                                                       # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104276518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int1 = 9                                                                 # STEP 0
int2 = 5                                                                 # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
result = avl0.inorder()                                                  # STEP 3
int0 = 12                                                                # STEP 4
int3 = 3                                                                 # STEP 5
result = avl0.find(int3)                                                 # STEP 6
avl0.insert(int1)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
avl2 = avl.AVLTree()                                                     # STEP 9
result = avl0.find(int2)                                                # STEP 10
avl0.insert(int3)                                                       # STEP 11
avl2.delete(int2)                                                       # STEP 12
avl2.delete(int0)                                                       # STEP 13
result = avl2.inorder()                                                 # STEP 14
avl0.insert(int2)                                                       # STEP 15
avl0.insert(int0)                                                       # STEP 16
int0 = 2                                                                # STEP 17
avl0.insert(int1)                                                       # STEP 18
int1 = 3                                                                # STEP 19
avl2.insert(int0)                                                       # STEP 20
int3 = 14                                                               # STEP 21
result = avl2.inorder()                                                 # STEP 22
avl2.delete(int2)                                                       # STEP 23
int2 = 3                                                                # STEP 24
int0 = 7                                                                # STEP 25
result = avl0.find(int3)                                                # STEP 26
int3 = 15                                                               # STEP 27
avl0.delete(int3)                                                       # STEP 28
int3 = 7                                                                # STEP 29
avl2.insert(int3)                                                       # STEP 30
int3 = 5                                                                # STEP 31
result = avl0.find(int2)                                                # STEP 32
int2 = 13                                                               # STEP 33
avl2.insert(int3)                                                       # STEP 34
int3 = 6                                                                # STEP 35
avl0.delete(int3)                                                       # STEP 36
avl0.delete(int2)                                                       # STEP 37
avl2.insert(int0)                                                       # STEP 38
int3 = 6                                                                # STEP 39
avl2 == avl2                                                            # STEP 40
int2 = 15                                                               # STEP 41
result = avl0.inorder()                                                 # STEP 42
result = avl0.find(int2)                                                # STEP 43
avl2.insert(int3)                                                       # STEP 44
avl2.delete(int2)                                                       # STEP 45
result = avl2.inorder()                                                 # STEP 46
int3 = 2                                                                # STEP 47
avl0.delete(int3)                                                       # STEP 48
avl0.delete(int1)                                                       # STEP 49
int1 = 13                                                               # STEP 50
avl0.insert(int0)                                                       # STEP 51
avl0.delete(int0)                                                       # STEP 52
avl2.insert(int2)                                                       # STEP 53
avl2.insert(int1)                                                       # STEP 54
avl2.delete(int0)                                                       # STEP 55
result = avl0.inorder()                                                 # STEP 56
avl0.insert(int1)                                                       # STEP 57
avl0.delete(int1)                                                       # STEP 58
avl2.delete(int3)                                                       # STEP 59
result = avl0.inorder()                                                 # STEP 60
result = avl2.find(int2)                                                # STEP 61
avl0.insert(int1)                                                       # STEP 62
avl2 == avl2                                                            # STEP 63
avl0.insert(int3)                                                       # STEP 64
avl2.delete(int1)                                                       # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104278dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
avl2 = avl.AVLTree()                                                     # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
int1 = 6                                                                 # STEP 2
avl2.delete(int1)                                                        # STEP 3
result = avl2.find(int1)                                                 # STEP 4
avl1.delete(int1)                                                        # STEP 5
avl1.insert(int1)                                                        # STEP 6
int2 = 20                                                                # STEP 7
avl2.delete(int2)                                                        # STEP 8
avl2.insert(int1)                                                        # STEP 9
int3 = 3                                                                # STEP 10
avl2.delete(int3)                                                       # STEP 11
avl2.delete(int1)                                                       # STEP 12
avl2.delete(int1)                                                       # STEP 13
avl1.delete(int3)                                                       # STEP 14
avl2.insert(int3)                                                       # STEP 15
avl1.insert(int3)                                                       # STEP 16
int1 = 11                                                               # STEP 17
avl1.insert(int1)                                                       # STEP 18
avl1.insert(int1)                                                       # STEP 19
avl2.delete(int2)                                                       # STEP 20
int0 = 6                                                                # STEP 21
avl1.delete(int0)                                                       # STEP 22
int2 = 3                                                                # STEP 23
avl2.delete(int3)                                                       # STEP 24
int3 = 15                                                               # STEP 25
avl2.insert(int3)                                                       # STEP 26
avl2.delete(int2)                                                       # STEP 27
avl2.insert(int3)                                                       # STEP 28
int1 = 20                                                               # STEP 29
int3 = 11                                                               # STEP 30
int0 = 9                                                                # STEP 31
avl2.delete(int1)                                                       # STEP 32
int2 = 18                                                               # STEP 33
avl1.insert(int0)                                                       # STEP 34
avl2.delete(int1)                                                       # STEP 35
avl2.insert(int0)                                                       # STEP 36
int1 = 7                                                                # STEP 37
int0 = 12                                                               # STEP 38
avl1.insert(int1)                                                       # STEP 39
int1 = 11                                                               # STEP 40
avl2.delete(int2)                                                       # STEP 41
avl1 == avl1                                                            # STEP 42
avl1.insert(int3)                                                       # STEP 43
int2 = 19                                                               # STEP 44
int3 = 20                                                               # STEP 45
avl2.delete(int3)                                                       # STEP 46
avl1.delete(int3)                                                       # STEP 47
result = avl2.find(int2)                                                # STEP 48
avl1.insert(int0)                                                       # STEP 49
avl1.insert(int2)                                                       # STEP 50
int0 = 12                                                               # STEP 51
avl1.display()                                                          # STEP 52
avl1.display()                                                          # STEP 53
avl2.insert(int0)                                                       # STEP 54
result = avl1.inorder()                                                 # STEP 55
int3 = 16                                                               # STEP 56
result = avl1.find(int2)                                                # STEP 57
avl2.insert(int1)                                                       # STEP 58
avl2.delete(int2)                                                       # STEP 59
avl2.insert(int1)                                                       # STEP 60
avl2.insert(int0)                                                       # STEP 61
result = avl2.find(int1)                                                # STEP 62
avl2.delete(int0)                                                       # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104287bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 3
int0 = 1                                                                 # STEP 0
int3 = 11                                                                # STEP 1
int2 = 4                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.delete(int3)                                                        # STEP 4
result = avl0.inorder()                                                  # STEP 5
avl0.delete(int3)                                                        # STEP 6
int1 = 13                                                                # STEP 7
avl0 = avl.AVLTree()                                                     # STEP 8
avl0.insert(int3)                                                        # STEP 9
avl0.insert(int0)                                                       # STEP 10
result = avl0.find(int0)                                                # STEP 11
avl0.delete(int0)                                                       # STEP 12
int3 = 5                                                                # STEP 13
avl0.insert(int1)                                                       # STEP 14
int0 = 5                                                                # STEP 15
int1 = 5                                                                # STEP 16
avl0.delete(int3)                                                       # STEP 17
avl0.insert(int0)                                                       # STEP 18
int0 = 7                                                                # STEP 19
avl0.delete(int1)                                                       # STEP 20
avl0.insert(int2)                                                       # STEP 21
result = avl0.find(int3)                                                # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.insert(int1)                                                       # STEP 24
avl0.delete(int3)                                                       # STEP 25
int2 = 15                                                               # STEP 26
avl0.delete(int2)                                                       # STEP 27
int3 = 17                                                               # STEP 28
int1 = 4                                                                # STEP 29
avl0.delete(int2)                                                       # STEP 30
avl0.delete(int2)                                                       # STEP 31
avl0.insert(int0)                                                       # STEP 32
int2 = 2                                                                # STEP 33
avl0.insert(int2)                                                       # STEP 34
avl0.delete(int2)                                                       # STEP 35
int0 = 18                                                               # STEP 36
int2 = 18                                                               # STEP 37
avl0.insert(int3)                                                       # STEP 38
int3 = 3                                                                # STEP 39
avl0.insert(int2)                                                       # STEP 40
int2 = 19                                                               # STEP 41
avl0.delete(int0)                                                       # STEP 42
result = avl0.inorder()                                                 # STEP 43
int0 = 12                                                               # STEP 44
avl0.delete(int0)                                                       # STEP 45
result = avl0.find(int1)                                                # STEP 46
int0 = 11                                                               # STEP 47
int1 = 5                                                                # STEP 48
avl0.delete(int0)                                                       # STEP 49
avl0.delete(int0)                                                       # STEP 50
avl0.delete(int1)                                                       # STEP 51
avl0.insert(int2)                                                       # STEP 52
result = avl0.find(int3)                                                # STEP 53
int0 = 2                                                                # STEP 54
avl0.insert(int3)                                                       # STEP 55
avl1 = avl.AVLTree()                                                    # STEP 56
avl0.insert(int1)                                                       # STEP 57
int2 = 19                                                               # STEP 58
avl1 == avl1                                                            # STEP 59
int1 = 19                                                               # STEP 60
int3 = 11                                                               # STEP 61
avl1.delete(int0)                                                       # STEP 62
avl0.delete(int2)                                                       # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058b15f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
