Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40583.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [3:-1]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 16 [1:-1]
------ > 17 [0:0] L
set([2, 4, 11, 12, 13, 16, 17])
  16 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 3, 11, 16, 17, 18])
  11 [3:-1]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 16 [1:-1]
------ > 17 [0:0] L
set([2, 4, 11, 12, 13, 16, 17])
  12 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 5 [1:0]
------ < 4 [0:0] L
------ > 9 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 18 [0:0] L
set([1, 3, 4, 5, 9, 12, 16, 17, 18])
  12 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 5 [1:0]
------ < 4 [0:0] L
------ > 9 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 18 [0:0] L
set([1, 3, 4, 5, 9, 12, 16, 17, 18])
  11 [3:-1]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 11, 12, 13, 16, 17, 20])
  16 [3:1]
-- < 3 [2:0]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 11 [1:-1]
------ > 12 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 2, 3, 11, 12, 16, 17, 18])
  11 [3:-1]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 11, 12, 13, 16, 17, 20])
  11 [3:-1]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 11, 12, 13, 16, 17, 20])
  11 [3:-1]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 17 [1:0]
------ < 16 [0:0] L
------ > 20 [0:0] L
set([2, 4, 11, 12, 13, 16, 17, 20])
  16 [3:1]
-- < 3 [2:0]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 11 [1:-1]
------ > 12 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 2, 3, 11, 12, 16, 17, 18])
  16 [3:1]
-- < 3 [2:0]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 11 [1:0]
------ < 7 [0:0] L
------ > 12 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 2, 3, 7, 11, 12, 16, 17, 18])
  16 [3:1]
-- < 3 [2:0]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 11 [1:0]
------ < 7 [0:0] L
------ > 12 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 2, 3, 7, 11, 12, 16, 17, 18])
TEST #4 STEP #38 (0:00:30.052261) Mon May  1 02:29:12 2017 [ 140 stmts 189 branches ]
  9 [3:1]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:-1]
------ > 7 [0:0] L
-- > 13 [1:-1]
---- > 15 [0:0] L
set([2, 3, 5, 7, 9, 13, 15])
  9 [3:1]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:-1]
------ > 7 [0:0] L
-- > 13 [1:-1]
---- > 15 [0:0] L
set([2, 3, 5, 7, 9, 13, 15])
  9 [3:1]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:-1]
------ > 7 [0:0] L
-- > 13 [1:-1]
---- > 15 [0:0] L
set([2, 3, 5, 7, 9, 13, 15])
  9 [3:1]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:-1]
------ > 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 15 [0:0] L
set([2, 3, 5, 7, 9, 13, 14, 15])
  9 [3:1]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:-1]
------ > 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 15 [0:0] L
set([2, 3, 5, 7, 9, 13, 14, 15])
  9 [3:0]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:0]
------ < 4 [0:0] L
------ > 7 [0:0] L
-- > 14 [2:-1]
---- < 13 [0:0] L
---- > 15 [1:-1]
------ > 20 [0:0] L
set([2, 3, 4, 5, 7, 9, 13, 14, 15, 20])
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 15 [0:0] L
set([2, 3, 4, 13, 15, 18])
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 15 [0:0] L
set([2, 3, 4, 13, 15, 18])
  9 [3:0]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:0]
------ < 4 [0:0] L
------ > 7 [0:0] L
-- > 14 [2:-1]
---- < 13 [0:0] L
---- > 15 [1:-1]
------ > 20 [0:0] L
set([2, 3, 4, 5, 7, 9, 13, 14, 15, 20])
  9 [3:0]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 5 [1:0]
------ < 4 [0:0] L
------ > 7 [0:0] L
-- > 14 [2:-1]
---- < 13 [0:0] L
---- > 15 [1:-1]
------ > 20 [0:0] L
set([2, 3, 4, 5, 7, 9, 13, 14, 15, 20])
  9 [3:0]
-- < 5 [2:0]
---- < 3 [1:0]
------ < 2 [0:0] L
------ > 4 [0:0] L
---- > 7 [1:-1]
------ > 8 [0:0] L
-- > 14 [2:-1]
---- < 13 [0:0] L
---- > 15 [1:-1]
------ > 20 [0:0] L
set([2, 3, 4, 5, 7, 8, 9, 13, 14, 15, 20])
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 15 [0:0] L
set([2, 3, 4, 13, 15, 18])
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 15 [0:0] L
set([2, 3, 4, 13, 15, 18])
  14 [2:0]
-- < 7 [1:0]
---- < 3 [0:0] L
---- > 13 [0:0] L
-- > 15 [1:-1]
---- > 18 [0:0] L
set([3, 7, 13, 14, 15, 18])
  14 [3:1]
-- < 7 [2:-1]
---- < 3 [0:0] L
---- > 13 [1:1]
------ < 8 [0:0] L
-- > 15 [1:-1]
---- > 18 [0:0] L
set([3, 7, 8, 13, 14, 15, 18])
  14 [3:1]
-- < 7 [2:-1]
---- < 3 [0:0] L
---- > 13 [1:1]
------ < 8 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([3, 7, 8, 13, 14, 15, 16, 18])
  14 [3:1]
-- < 7 [2:-1]
---- < 3 [0:0] L
---- > 13 [1:1]
------ < 8 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([3, 7, 8, 13, 14, 15, 16, 18])
  14 [3:1]
-- < 7 [2:-1]
---- < 3 [0:0] L
---- > 13 [1:1]
------ < 8 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([3, 7, 8, 13, 14, 15, 16, 18])
  15 [2:0]
-- < 13 [1:0]
---- < 11 [0:0] L
---- > 14 [0:0] L
-- > 16 [1:-1]
---- > 20 [0:0] L
set([11, 13, 14, 15, 16, 20])
  15 [2:0]
-- < 13 [1:0]
---- < 11 [0:0] L
---- > 14 [0:0] L
-- > 16 [1:-1]
---- > 20 [0:0] L
set([11, 13, 14, 15, 16, 20])
  11 [3:0]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 8 [1:-1]
------ > 9 [0:0] L
-- > 16 [2:1]
---- < 15 [1:1]
------ < 13 [0:0] L
---- > 18 [0:0] L
set([2, 3, 8, 9, 11, 13, 15, 16, 18])
  11 [3:0]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 8 [1:-1]
------ > 9 [0:0] L
-- > 16 [2:0]
---- < 14 [1:0]
------ < 13 [0:0] L
------ > 15 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([2, 3, 8, 9, 11, 13, 14, 15, 16, 18, 20])
  11 [3:0]
-- < 3 [2:-1]
---- < 2 [0:0] L
---- > 8 [1:-1]
------ > 9 [0:0] L
-- > 16 [2:0]
---- < 14 [1:0]
------ < 13 [0:0] L
------ > 15 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([2, 3, 8, 9, 11, 13, 14, 15, 16, 18, 20])
  9 [3:0]
-- < 6 [2:1]
---- < 3 [1:-1]
------ > 4 [0:0] L
---- > 7 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 16 [1:-1]
------ > 17 [0:0] L
set([3, 4, 6, 7, 9, 12, 13, 16, 17])
  9 [3:0]
-- < 6 [2:1]
---- < 3 [1:-1]
------ > 4 [0:0] L
---- > 7 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 16 [1:0]
------ < 15 [0:0] L
------ > 17 [0:0] L
set([3, 4, 6, 7, 9, 12, 13, 15, 16, 17])
  9 [3:0]
-- < 6 [2:1]
---- < 3 [1:-1]
------ > 4 [0:0] L
---- > 7 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 16 [1:0]
------ < 15 [0:0] L
------ > 17 [0:0] L
set([3, 4, 6, 7, 9, 12, 13, 15, 16, 17])
  7 [2:0]
-- < 4 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([1, 4, 5, 7, 10, 11, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d27050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 75 steps

SAVING TEST AS failure.40583.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 19                                                                # STEP 1
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 2
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 3
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 4
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 5
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 6
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int3)                                                        # STEP 7
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2 == avl2                                                             # STEP 8
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int3)                                                        # STEP 9
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 10
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 11
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 3                                                                # STEP 13
ACTION: int2 = 3 
int2 = 19 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 14
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 15
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 16
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 17
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 18
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 19
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 3]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 20
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 21
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int3 = 18                                                               # STEP 22
ACTION: int3 = 18 
int3 = 19 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
int0 = 13                                                               # STEP 23
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 24
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.find(int0)                                                # STEP 25
ACTION: result = avl2.find(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
result = avl2.find(int2)                                                # STEP 26
ACTION: result = avl2.find(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 27
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([19]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 28
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 29
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2 == avl2                                                            # STEP 30
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int3 = 8                                                                # STEP 31
ACTION: int3 = 8 
int3 = 18 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 32
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 33
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 34
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 8]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 35
ACTION: int2 = 3 
int2 = 3 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 36
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 37
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19, 8, 3]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 39
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 40
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 11                                                               # STEP 41
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 42
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int1)                                                       # STEP 43
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 44
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([19, 8, 3, 11]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 45
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([19, 3, 11]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 46
ACTION: result = avl2.find(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 48
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 8, 3, 11]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 49
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([19, 8, 11]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 50
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([19, 8, 13, 11]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 51
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 13, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 52
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 13, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 17                                                               # STEP 53
ACTION: int1 = 17 
int1 = 11 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 54
ACTION: int2 = 19 
int2 = 3 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 55
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 13, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 56
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([19, 8, 13, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 11, 13, 17, 19]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 57
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 58
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 59
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int3 = 9                                                                # STEP 60
ACTION: int3 = 9 
int3 = 8 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 61
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 62
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 63
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 64
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 11, 19]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 65
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int1)                                                       # STEP 66
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 11, 17, 19]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 67
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 11, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 9, 11, 17, 19]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 68
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 9, 11, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 69
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 9, 11, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 70
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 9, 11, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 71
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x101f24d40> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 72
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 9, 11, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([8, 9, 11, 19]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 73
ACTION: int0 = 11 
int0 = 13 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 74
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103c46638> : <type 'instance'>
avl_REF2 = set([8, 9, 11, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 9, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f17560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 25
STOPPING TESTING DUE TO TIMEOUT
8.9314712569 PERCENT COVERED
60.2189569473 TOTAL RUNTIME
7 EXECUTED
600 TOTAL TEST OPERATIONS
26.3793370724 TIME SPENT EXECUTING TEST OPERATIONS
0.0790655612946 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.634021759 TIME SPENT CHECKING PROPERTIES
53.0133588314 TOTAL TIME SPENT RUNNING SUT
0.00379276275635 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
avl2 = avl.AVLTree()                                                     # STEP 0
int3 = 19                                                                # STEP 1
int2 = 19                                                                # STEP 2
avl2.insert(int3)                                                        # STEP 3
avl2.delete(int3)                                                        # STEP 4
avl2.insert(int2)                                                        # STEP 5
avl2.insert(int3)                                                        # STEP 6
avl2.insert(int3)                                                        # STEP 7
avl2 == avl2                                                             # STEP 8
avl2.insert(int3)                                                        # STEP 9
avl2.insert(int2)                                                       # STEP 10
avl2.delete(int2)                                                       # STEP 11
avl2.delete(int2)                                                       # STEP 12
int2 = 3                                                                # STEP 13
avl2.delete(int3)                                                       # STEP 14
avl2.delete(int3)                                                       # STEP 15
avl2.delete(int3)                                                       # STEP 16
avl2.insert(int2)                                                       # STEP 17
avl2.insert(int2)                                                       # STEP 18
avl2.insert(int3)                                                       # STEP 19
avl2.insert(int2)                                                       # STEP 20
avl2.insert(int2)                                                       # STEP 21
int3 = 18                                                               # STEP 22
int0 = 13                                                               # STEP 23
avl2 == avl2                                                            # STEP 24
result = avl2.find(int0)                                                # STEP 25
result = avl2.find(int2)                                                # STEP 26
avl2.delete(int2)                                                       # STEP 27
avl2.delete(int3)                                                       # STEP 28
avl2.delete(int3)                                                       # STEP 29
avl2 == avl2                                                            # STEP 30
int3 = 8                                                                # STEP 31
avl2.delete(int0)                                                       # STEP 32
avl2.delete(int2)                                                       # STEP 33
avl2.insert(int3)                                                       # STEP 34
int2 = 3                                                                # STEP 35
avl2.delete(int0)                                                       # STEP 36
avl2.delete(int2)                                                       # STEP 37
avl2.insert(int2)                                                       # STEP 38
avl2.delete(int0)                                                       # STEP 39
avl2.insert(int3)                                                       # STEP 40
int1 = 11                                                               # STEP 41
avl2 == avl2                                                            # STEP 42
avl2.delete(int1)                                                       # STEP 43
avl2.insert(int1)                                                       # STEP 44
avl2.delete(int3)                                                       # STEP 45
result = avl2.find(int2)                                                # STEP 46
avl2.insert(int1)                                                       # STEP 47
avl2.insert(int3)                                                       # STEP 48
avl2.delete(int2)                                                       # STEP 49
avl2.insert(int0)                                                       # STEP 50
avl2.insert(int1)                                                       # STEP 51
avl2.insert(int1)                                                       # STEP 52
int1 = 17                                                               # STEP 53
int2 = 19                                                               # STEP 54
avl2.insert(int2)                                                       # STEP 55
avl2.insert(int1)                                                       # STEP 56
avl2.delete(int1)                                                       # STEP 57
avl2.delete(int1)                                                       # STEP 58
avl2.insert(int0)                                                       # STEP 59
int3 = 9                                                                # STEP 60
avl2.delete(int3)                                                       # STEP 61
avl2.insert(int2)                                                       # STEP 62
avl2.delete(int3)                                                       # STEP 63
avl2.delete(int0)                                                       # STEP 64
avl2 == avl2                                                            # STEP 65
avl2.insert(int1)                                                       # STEP 66
avl2.insert(int3)                                                       # STEP 67
avl2.insert(int2)                                                       # STEP 68
avl2.insert(int2)                                                       # STEP 69
avl2.insert(int1)                                                       # STEP 70
avl0 = avl.AVLTree()                                                    # STEP 71
avl2.delete(int1)                                                       # STEP 72
int0 = 11                                                               # STEP 73
avl2.delete(int0)                                                       # STEP 74
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f17560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
