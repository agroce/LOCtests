Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62015.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026297e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 52 steps

SAVING TEST AS failure.62015.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 5                                                                 # STEP 0
ACTION: int0 = 5 
int0 = None : <type 'NoneType'>
=> int0 = 5 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 1
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 18                                                                # STEP 2
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 16                                                                # STEP 4
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
result = avl1.inorder()                                                  # STEP 7
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 16                                                                # STEP 8
ACTION: int0 = 16 
int0 = 5 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
result = avl1.inorder()                                                  # STEP 9
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 10
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 11
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 19, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 12
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.find(int2)                                                # STEP 15
ACTION: result = avl1.find(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
int1 = 8                                                                # STEP 16
ACTION: int1 = 8 
int1 = 16 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 17
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 18
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 19
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int2 = 17                                                               # STEP 20
ACTION: int2 = 17 
int2 = 19 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 21
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 23
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16, 19, 5]) : <type 'set'>
==================================================
int1 = 18                                                               # STEP 24
ACTION: int1 = 18 
int1 = 8 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 25
ACTION: int0 = 6 
int0 = 16 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 26
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 27
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 13                                                               # STEP 28
ACTION: int3 = 13 
int3 = 18 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 29
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 30
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 18, 19, 5, 6]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 32
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 33
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 34
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 35
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([16, 18, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 13, 16, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 36
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int0 = 18                                                               # STEP 37
ACTION: int0 = 18 
int0 = 6 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 38
ACTION: int3 = 13 
int3 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 39
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 40
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int3 = 16                                                               # STEP 41
ACTION: int3 = 16 
int3 = 13 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 42
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 43
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 44
ACTION: int0 = 19 
int0 = 18 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 45
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 46
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.inorder()                                                 # STEP 47
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 2                                                                # STEP 48
ACTION: int2 = 2 
int2 = 17 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 49
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 50
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 51
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1021c4050> : <type 'instance'>
avl_REF1 = set([5, 13, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([5, 13, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102337f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  15 [2:0]
-- < 7 [1:0]
---- < 2 [0:0] L
---- > 14 [0:0] L
-- > 17 [1:-1]
---- > 19 [0:0] L
set([2, 7, 14, 15, 17, 19])
TEST #3 STEP #92 (0:00:30.067602) Mon May  1 17:32:09 2017 [ 144 stmts 192 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101d8a9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 66 steps

SAVING TEST AS failure.62015.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 1                                                                 # STEP 0
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 1
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 3
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                        # STEP 4
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 5
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 19]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 6
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 9
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 10
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 12
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 14
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 15
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 17
ACTION: result = avl1.find(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int0 = 4                                                                # STEP 18
ACTION: int0 = 4 
int0 = 1 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int3 = 9                                                                # STEP 19
ACTION: int3 = 9 
int3 = None : <type 'NoneType'>
=> int3 = 9 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 20
ACTION: int1 = 12 
int1 = 2 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 21
ACTION: int2 = 11 
int2 = 19 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 22
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x101d8ab48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
==================================================
avl1.delete(int2)                                                       # STEP 23
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 24
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 25
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11, 12]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 27
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 30
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 31
ACTION: avl1.delete(int0) 
int0 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int2 = 10                                                               # STEP 33
ACTION: int2 = 10 
int2 = 11 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int0 = 4                                                                # STEP 34
ACTION: int0 = 4 
int0 = 4 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 35
ACTION: int1 = 6 
int1 = 12 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 36
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
result = avl1.inorder()                                                 # STEP 37
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 39
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 12]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 40
ACTION: int2 = 20 
int2 = 10 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 41
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4, 12]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 42
ACTION: result = avl1.find(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 43
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 12, 6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 10, 12]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 6                                                                # STEP 46
ACTION: int0 = 6 
int0 = 4 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 47
ACTION: int1 = 10 
int1 = 6 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 48
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 49
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 12, 6, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 50
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12, 6, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([4, 12, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 51
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 10, 12, 20]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 53
ACTION: result = avl1.find(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 10, 12, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int3 = 18                                                               # STEP 54
ACTION: int3 = 18 
int3 = 9 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 55
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 10, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([4, 12, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 56
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1 == avl0                                                            # STEP 57
ACTION: avl1 == avl0 
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF1 = set([4, 12, 20]) : <type 'set'>
avl_REF0 = set([9, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
int1 = 10                                                               # STEP 58
ACTION: int1 = 10 
int1 = 10 : <type 'int'>
==================================================
avl0 == avl1                                                            # STEP 59
ACTION: avl0 == avl1 
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF0 = set([9, 10, 12]) : <type 'set'>
avl_REF1 = set([4, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl0.insert(int0)                                                       # STEP 60
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 10, 12, 6]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 61
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 62
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 63
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.delete(int2)                                                       # STEP 64
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1022ae200> : <type 'instance'>
avl_REF1 = set([4, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([4, 12]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 65
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101d6d710> : <type 'instance'>
avl_REF0 = set([9, 10, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([9, 12, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1022d2680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102354248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 61 steps

SAVING TEST AS failure.62015.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 1
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 4                                                                 # STEP 2
ACTION: int3 = 4 
int3 = None : <type 'NoneType'>
=> int3 = 4 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 3
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 4
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
int1 = 5                                                                 # STEP 6
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 11                                                                # STEP 8
ACTION: int1 = 11 
int1 = 5 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int2 = 5                                                                # STEP 10
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 11                                                               # STEP 12
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 13
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 15
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int1)                                                # STEP 16
ACTION: result = avl0.find(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 18
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 12                                                               # STEP 21
ACTION: int1 = 12 
int1 = 11 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 22
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 23
ACTION: int2 = 3 
int2 = 5 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 24
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 25
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 16                                                               # STEP 26
ACTION: int3 = 16 
int3 = 4 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 27
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 28
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 29
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 30
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 31
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 11]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 33
ACTION: int3 = 14 
int3 = 16 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 34
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 11, 14]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 36
ACTION: int3 = 1 
int3 = 14 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 37
ACTION: result = avl0.find(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int0 = 4                                                                # STEP 38
ACTION: int0 = 4 
int0 = 11 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 39
ACTION: int2 = 12 
int2 = 3 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 40
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 42
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 3, 11, 12, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 44
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 46
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 47
ACTION: int1 = 7 
int1 = 12 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 48
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 49
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 50
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 3, 11, 4, 14]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 51
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([16, 3, 11, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 4, 7, 11, 14, 16]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 52
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 53
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([3, 4, 7, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 3, 4, 7, 11, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 54
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 7, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 3, 4, 7, 11, 12, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 55
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 7, 11, 12, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 56
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 7, 11, 12, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 3, 4, 7, 11, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 57
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 7, 11, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 3, 4, 7, 11, 12, 14, 16]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 58
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 7, 11, 12, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 11                                                               # STEP 59
ACTION: int0 = 11 
int0 = 4 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 60
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102353a70> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 7, 11, 12, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 3, 4, 11, 12, 14, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102347f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 32
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
60.2949919701 TOTAL RUNTIME
6 EXECUTED
411 TOTAL TEST OPERATIONS
20.8274319172 TIME SPENT EXECUTING TEST OPERATIONS
0.0489163398743 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
20.9712283611 TIME SPENT CHECKING PROPERTIES
41.7986602783 TOTAL TIME SPENT RUNNING SUT
0.00407671928406 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 5                                                                 # STEP 0
int2 = 19                                                                # STEP 1
int3 = 18                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
int1 = 16                                                                # STEP 4
avl1.insert(int0)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
result = avl1.inorder()                                                  # STEP 7
int0 = 16                                                                # STEP 8
result = avl1.inorder()                                                  # STEP 9
avl1.insert(int0)                                                       # STEP 10
avl1.insert(int2)                                                       # STEP 11
avl1.insert(int2)                                                       # STEP 12
avl1.insert(int0)                                                       # STEP 13
avl1.insert(int1)                                                       # STEP 14
result = avl1.find(int2)                                                # STEP 15
int1 = 8                                                                # STEP 16
avl1.delete(int3)                                                       # STEP 17
result = avl1.inorder()                                                 # STEP 18
avl1.delete(int3)                                                       # STEP 19
int2 = 17                                                               # STEP 20
avl1.delete(int1)                                                       # STEP 21
avl1.insert(int3)                                                       # STEP 22
avl1.delete(int3)                                                       # STEP 23
int1 = 18                                                               # STEP 24
int0 = 6                                                                # STEP 25
avl1.insert(int3)                                                       # STEP 26
result = avl1.inorder()                                                 # STEP 27
int3 = 13                                                               # STEP 28
avl1.delete(int0)                                                       # STEP 29
avl1.delete(int3)                                                       # STEP 30
avl1.insert(int0)                                                       # STEP 31
avl1.delete(int0)                                                       # STEP 32
avl1.delete(int3)                                                       # STEP 33
result = avl1.inorder()                                                 # STEP 34
avl1.insert(int3)                                                       # STEP 35
avl1.insert(int3)                                                       # STEP 36
int0 = 18                                                               # STEP 37
int3 = 13                                                               # STEP 38
avl1.insert(int0)                                                       # STEP 39
avl1.insert(int3)                                                       # STEP 40
int3 = 16                                                               # STEP 41
result = avl1.inorder()                                                 # STEP 42
avl1.delete(int0)                                                       # STEP 43
int0 = 19                                                               # STEP 44
avl1.delete(int2)                                                       # STEP 45
result = avl1.inorder()                                                 # STEP 46
result = avl1.inorder()                                                 # STEP 47
int2 = 2                                                                # STEP 48
avl1.delete(int1)                                                       # STEP 49
avl1.insert(int3)                                                       # STEP 50
avl1.delete(int0)                                                       # STEP 51
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102337f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int0 = 1                                                                 # STEP 0
int2 = 19                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
result = avl1.inorder()                                                  # STEP 3
avl1.insert(int0)                                                        # STEP 4
avl1.insert(int2)                                                        # STEP 5
result = avl1.inorder()                                                  # STEP 6
avl1.insert(int0)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.delete(int2)                                                        # STEP 9
int1 = 2                                                                # STEP 10
avl1.insert(int0)                                                       # STEP 11
avl1.insert(int0)                                                       # STEP 12
avl1.insert(int0)                                                       # STEP 13
avl1.delete(int0)                                                       # STEP 14
avl1.insert(int1)                                                       # STEP 15
avl1.delete(int1)                                                       # STEP 16
result = avl1.find(int1)                                                # STEP 17
int0 = 4                                                                # STEP 18
int3 = 9                                                                # STEP 19
int1 = 12                                                               # STEP 20
int2 = 11                                                               # STEP 21
avl1 = avl.AVLTree()                                                    # STEP 22
avl1.delete(int2)                                                       # STEP 23
result = avl1.inorder()                                                 # STEP 24
avl1.insert(int1)                                                       # STEP 25
avl1.insert(int2)                                                       # STEP 26
avl0 = avl.AVLTree()                                                    # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl1.delete(int2)                                                       # STEP 30
avl1.delete(int0)                                                       # STEP 31
avl0.insert(int1)                                                       # STEP 32
int2 = 10                                                               # STEP 33
int0 = 4                                                                # STEP 34
int1 = 6                                                                # STEP 35
avl1 == avl1                                                            # STEP 36
result = avl1.inorder()                                                 # STEP 37
result = avl0.inorder()                                                 # STEP 38
avl0.insert(int2)                                                       # STEP 39
int2 = 20                                                               # STEP 40
avl1.insert(int0)                                                       # STEP 41
result = avl1.find(int3)                                                # STEP 42
avl1.insert(int1)                                                       # STEP 43
avl0.insert(int3)                                                       # STEP 44
avl1.delete(int3)                                                       # STEP 45
int0 = 6                                                                # STEP 46
int1 = 10                                                               # STEP 47
avl0.delete(int0)                                                       # STEP 48
avl1.insert(int2)                                                       # STEP 49
avl1.delete(int0)                                                       # STEP 50
avl0.delete(int0)                                                       # STEP 51
avl1.insert(int1)                                                       # STEP 52
result = avl1.find(int3)                                                # STEP 53
int3 = 18                                                               # STEP 54
avl1.delete(int1)                                                       # STEP 55
avl1.delete(int0)                                                       # STEP 56
avl1 == avl0                                                            # STEP 57
int1 = 10                                                               # STEP 58
avl0 == avl1                                                            # STEP 59
avl0.insert(int0)                                                       # STEP 60
avl0.delete(int2)                                                       # STEP 61
avl0.insert(int1)                                                       # STEP 62
result = avl0.inorder()                                                 # STEP 63
avl1.delete(int2)                                                       # STEP 64
avl0.delete(int1)                                                       # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1022d2680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
avl0 = avl.AVLTree()                                                     # STEP 0
result = avl0.inorder()                                                  # STEP 1
int3 = 4                                                                 # STEP 2
avl0.insert(int3)                                                        # STEP 3
avl0.delete(int3)                                                        # STEP 4
avl0.insert(int3)                                                        # STEP 5
int1 = 5                                                                 # STEP 6
avl0.delete(int1)                                                        # STEP 7
int1 = 11                                                                # STEP 8
avl0.insert(int3)                                                        # STEP 9
int2 = 5                                                                # STEP 10
avl0.delete(int1)                                                       # STEP 11
int0 = 11                                                               # STEP 12
avl0.delete(int1)                                                       # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.delete(int0)                                                       # STEP 15
result = avl0.find(int1)                                                # STEP 16
avl0.insert(int3)                                                       # STEP 17
avl0.delete(int0)                                                       # STEP 18
avl0.delete(int2)                                                       # STEP 19
avl0.delete(int1)                                                       # STEP 20
int1 = 12                                                               # STEP 21
avl0.delete(int3)                                                       # STEP 22
int2 = 3                                                                # STEP 23
avl0.insert(int0)                                                       # STEP 24
avl0.insert(int0)                                                       # STEP 25
int3 = 16                                                               # STEP 26
avl0.delete(int0)                                                       # STEP 27
result = avl0.inorder()                                                 # STEP 28
avl0.insert(int3)                                                       # STEP 29
avl0.insert(int3)                                                       # STEP 30
avl0.delete(int0)                                                       # STEP 31
avl0.insert(int0)                                                       # STEP 32
int3 = 14                                                               # STEP 33
avl0.insert(int3)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
int3 = 1                                                                # STEP 36
result = avl0.find(int2)                                                # STEP 37
int0 = 4                                                                # STEP 38
int2 = 12                                                               # STEP 39
avl0.delete(int3)                                                       # STEP 40
avl0.delete(int2)                                                       # STEP 41
avl0.delete(int2)                                                       # STEP 42
avl0.insert(int2)                                                       # STEP 43
avl0.delete(int0)                                                       # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl0.delete(int2)                                                       # STEP 46
int1 = 7                                                                # STEP 47
avl0.delete(int3)                                                       # STEP 48
result = avl0.inorder()                                                 # STEP 49
avl0.insert(int0)                                                       # STEP 50
avl0.insert(int1)                                                       # STEP 51
avl0.delete(int2)                                                       # STEP 52
avl0.insert(int3)                                                       # STEP 53
avl0.insert(int2)                                                       # STEP 54
avl0.insert(int3)                                                       # STEP 55
avl0.delete(int2)                                                       # STEP 56
avl0.insert(int2)                                                       # STEP 57
avl0.insert(int0)                                                       # STEP 58
int0 = 11                                                               # STEP 59
avl0.delete(int1)                                                       # STEP 60
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102347f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
