Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40568.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  8 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 6 [0:0] L
-- > 17 [1:-1]
---- > 18 [0:0] L
set([3, 5, 6, 8, 17, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a5f5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 90 steps

SAVING TEST AS failure.40568.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 3                                                                 # STEP 1
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
int2 = 8                                                                 # STEP 2
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl1.insert(int2)                                                        # STEP 3
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 4
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 16                                                                # STEP 5
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 6
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 16]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 7
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int2)                                                        # STEP 9
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 11
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 12
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 13
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 14
ACTION: int3 = 5 
int3 = 16 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 16
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 3]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 17
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 18
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 3]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 23
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 24
ACTION: int0 = 20 
int0 = 3 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 25
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 17                                                               # STEP 26
ACTION: int2 = 17 
int2 = 8 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int1 = 17                                                               # STEP 27
ACTION: int1 = 17 
int1 = 10 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 3, 5]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 29
ACTION: int3 = 11 
int3 = 5 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 30
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 32
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 33
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 34
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 3, 20, 5]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 35
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8, 3, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 36
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 6                                                                # STEP 37
ACTION: int1 = 6 
int1 = 17 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 38
ACTION: int0 = 12 
int0 = 20 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 39
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 40
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 41
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 42
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 17, 3, 5]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 43
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 44
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 45
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 46
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 6]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 47
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 11, 6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 48
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 49
ACTION: avl2.delete(int1) 
int1 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([17, 11]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 50
ACTION: int3 = 13 
int3 = 11 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 51
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 52
ACTION: int0 = 4 
int0 = 12 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 53
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([8, 17, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 5, 6, 8, 17]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 54
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 6                                                                # STEP 55
ACTION: int1 = 6 
int1 = 6 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 57
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 6]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 58
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 59
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int2 = 14                                                               # STEP 60
ACTION: int2 = 14 
int2 = 17 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 61
ACTION: int0 = 9 
int0 = 4 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 62
ACTION: int1 = 9 
int1 = 6 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 63
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 6, 9]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 64
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 4                                                                # STEP 65
ACTION: int1 = 4 
int1 = 9 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 66
ACTION: avl2.insert(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 11, 13]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 67
ACTION: int3 = 17 
int3 = 13 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 68
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 18                                                               # STEP 69
ACTION: int1 = 18 
int1 = 4 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 70
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 71
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 72
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 73
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 15                                                               # STEP 74
ACTION: int0 = 15 
int0 = 9 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 75
ACTION: int2 = 18 
int2 = 14 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 76
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 5, 6, 8, 17, 18]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 77
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.display()                                                          # STEP 78
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17, 18]) : <type 'set'>
  8 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 6 [0:0] L
-- > 17 [1:-1]
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 5, 6, 8, 17, 18])
==================================================
avl1 = avl.AVLTree()                                                    # STEP 79
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x103a6ad88> : <type 'instance'>
avl_REF1 = set([3, 5, 6, 8, 17, 18]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x103b813b0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 80
ACTION: int0 = 2 
int0 = 15 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 81
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 82
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 83
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b813b0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 84
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103a63638> : <type 'instance'>
avl_REF2 = set([17, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 18, 11, 13]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 85
ACTION: int1 = 19 
int1 = 18 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 86
ACTION: avl1.delete(int1) 
int1 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b813b0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 87
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 6, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 2, 6, 9]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 88
ACTION: avl1.delete(int1) 
int1 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103b813b0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 89
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a75e18> : <type 'instance'>
avl_REF0 = set([17, 2, 6, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 6, 9]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b4fab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:35.389243) Mon May  1 02:27:14 2017 [ 148 stmts 198 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 83
STOPPING TESTING DUE TO TIMEOUT
8.73660279311 PERCENT COVERED
60.2496709824 TOTAL RUNTIME
6 EXECUTED
573 TOTAL TEST OPERATIONS
25.9449677467 TIME SPENT EXECUTING TEST OPERATIONS
0.0709986686707 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.1760203838 TIME SPENT CHECKING PROPERTIES
52.1209881306 TOTAL TIME SPENT RUNNING SUT
0.00359582901001 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
avl1 = avl.AVLTree()                                                     # STEP 0
int0 = 3                                                                 # STEP 1
int2 = 8                                                                 # STEP 2
avl1.insert(int2)                                                        # STEP 3
avl1.delete(int0)                                                        # STEP 4
int3 = 16                                                                # STEP 5
avl1.insert(int3)                                                        # STEP 6
avl1.delete(int3)                                                        # STEP 7
avl1.insert(int2)                                                        # STEP 8
avl1.insert(int2)                                                        # STEP 9
avl1.delete(int2)                                                       # STEP 10
avl1.delete(int3)                                                       # STEP 11
avl1.insert(int0)                                                       # STEP 12
avl1.delete(int0)                                                       # STEP 13
int3 = 5                                                                # STEP 14
avl1.insert(int0)                                                       # STEP 15
avl1.insert(int2)                                                       # STEP 16
avl1.delete(int0)                                                       # STEP 17
avl1.insert(int2)                                                       # STEP 18
avl1.insert(int0)                                                       # STEP 19
avl1.insert(int2)                                                       # STEP 20
avl1.delete(int2)                                                       # STEP 21
avl1.insert(int2)                                                       # STEP 22
int1 = 10                                                               # STEP 23
int0 = 20                                                               # STEP 24
avl1.delete(int1)                                                       # STEP 25
int2 = 17                                                               # STEP 26
int1 = 17                                                               # STEP 27
avl1.insert(int3)                                                       # STEP 28
int3 = 11                                                               # STEP 29
avl2 = avl.AVLTree()                                                    # STEP 30
avl1.delete(int1)                                                       # STEP 31
avl2.delete(int1)                                                       # STEP 32
avl1.delete(int0)                                                       # STEP 33
avl1.insert(int0)                                                       # STEP 34
avl1.delete(int0)                                                       # STEP 35
avl1.delete(int3)                                                       # STEP 36
int1 = 6                                                                # STEP 37
int0 = 12                                                               # STEP 38
avl1.delete(int2)                                                       # STEP 39
avl2.insert(int2)                                                       # STEP 40
avl2.delete(int0)                                                       # STEP 41
avl1.insert(int2)                                                       # STEP 42
avl2.delete(int0)                                                       # STEP 43
avl0 = avl.AVLTree()                                                    # STEP 44
avl0.insert(int2)                                                       # STEP 45
avl2.insert(int1)                                                       # STEP 46
avl2.insert(int3)                                                       # STEP 47
avl0.insert(int1)                                                       # STEP 48
avl2.delete(int1)                                                       # STEP 49
int3 = 13                                                               # STEP 50
avl0.delete(int2)                                                       # STEP 51
int0 = 4                                                                # STEP 52
avl1.insert(int1)                                                       # STEP 53
avl1.insert(int2)                                                       # STEP 54
int1 = 6                                                                # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl0.insert(int2)                                                       # STEP 57
avl0.delete(int0)                                                       # STEP 58
avl1.insert(int1)                                                       # STEP 59
int2 = 14                                                               # STEP 60
int0 = 9                                                                # STEP 61
int1 = 9                                                                # STEP 62
avl0.insert(int1)                                                       # STEP 63
avl1.delete(int1)                                                       # STEP 64
int1 = 4                                                                # STEP 65
avl2.insert(int3)                                                       # STEP 66
int3 = 17                                                               # STEP 67
avl2.delete(int1)                                                       # STEP 68
int1 = 18                                                               # STEP 69
avl0.delete(int2)                                                       # STEP 70
avl0.insert(int0)                                                       # STEP 71
avl0.insert(int0)                                                       # STEP 72
avl1.delete(int0)                                                       # STEP 73
int0 = 15                                                               # STEP 74
int2 = 18                                                               # STEP 75
avl1.insert(int1)                                                       # STEP 76
avl2.delete(int0)                                                       # STEP 77
avl1.display()                                                          # STEP 78
avl1 = avl.AVLTree()                                                    # STEP 79
int0 = 2                                                                # STEP 80
avl0.delete(int1)                                                       # STEP 81
avl2.delete(int1)                                                       # STEP 82
avl1.delete(int2)                                                       # STEP 83
avl2.insert(int1)                                                       # STEP 84
int1 = 19                                                               # STEP 85
avl1.delete(int1)                                                       # STEP 86
avl0.insert(int0)                                                       # STEP 87
avl1.delete(int1)                                                       # STEP 88
avl0.delete(int3)                                                       # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b4fab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
