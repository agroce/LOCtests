Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62586.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  7 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 3 [0:0] L
-- > 8 [1:-1]
---- > 16 [0:0] L
set([1, 2, 3, 6, 7, 8, 16])
  7 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 3 [0:0] L
-- > 8 [1:-1]
---- > 16 [0:0] L
set([1, 2, 3, 6, 7, 8, 16])
  10 [2:0]
-- < 8 [1:1]
---- < 2 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
set([2, 8, 10, 15, 18, 19])
  15 [2:0]
-- < 8 [1:1]
---- < 7 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([7, 8, 15, 16, 18, 19])
  15 [2:0]
-- < 8 [1:1]
---- < 7 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([7, 8, 15, 16, 18, 19])
  16 [2:0]
-- < 13 [1:0]
---- < 8 [0:0] L
---- > 15 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
set([8, 13, 15, 16, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104c49c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 96 steps

SAVING TEST AS failure.62586.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 20                                                                # STEP 0
ACTION: int1 = 20 
int1 = None : <type 'NoneType'>
=> int1 = 20 : <type 'int'>
==================================================
int2 = 18                                                                # STEP 1
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 10                                                                # STEP 3
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl0.inorder()                                                  # STEP 4
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                        # STEP 6
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                        # STEP 7
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                        # STEP 8
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 9
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 10
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18, 20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 20, 10]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 12
ACTION: int2 = 15 
int2 = 18 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
int3 = 9                                                                # STEP 13
ACTION: int3 = 9 
int3 = None : <type 'NoneType'>
=> int3 = 9 : <type 'int'>
==================================================
int0 = 4                                                                # STEP 14
ACTION: int0 = 4 
int0 = 10 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 15
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 20, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([18, 10]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 16
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 8                                                                # STEP 17
ACTION: int1 = 8 
int1 = 20 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 18
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 18, 10]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 9, 18, 10]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 25
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 9, 18, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 26
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 9, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 15                                                               # STEP 27
ACTION: int1 = 15 
int1 = 8 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 28
ACTION: int0 = 9 
int0 = 4 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 29
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 9, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 18, 10]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 31
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 33
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 9, 10, 15, 18]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 34
ACTION: int2 = 2 
int2 = 15 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 35
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int1 = 7                                                                # STEP 36
ACTION: int1 = 7 
int1 = 15 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 37
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 9                                                                # STEP 39
ACTION: int3 = 9 
int3 = 9 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 40
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 9, 10, 15, 18]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 41
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 42
ACTION: int3 = 19 
int3 = 9 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 5                                                                # STEP 44
ACTION: int0 = 5 
int0 = 9 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 45
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 8, 10, 15, 18]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([2, 8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 47
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([2, 8, 10, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 8, 10, 15, 18, 19]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 48
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([2, 8, 10, 15, 18, 19]) : <type 'set'>
  10 [2:0]
-- < 8 [1:1]
---- < 2 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 8, 10, 15, 18, 19])
==================================================
avl0.delete(int2)                                                       # STEP 49
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([2, 8, 10, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 10, 15, 18, 19]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 50
ACTION: int2 = 16 
int2 = 2 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 51
ACTION: result = avl0.find(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 3                                                                # STEP 52
ACTION: int0 = 3 
int0 = 5 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 53
ACTION: result = avl0.find(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int3 = 10                                                               # STEP 54
ACTION: int3 = 10 
int3 = 19 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 55
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 10, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7, 8, 10, 15, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 57
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 58
ACTION: int0 = 10 
int0 = 3 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 59
ACTION: int1 = 13 
int1 = 7 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 12                                                               # STEP 61
ACTION: int2 = 12 
int2 = 16 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 62
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0 == avl0                                                            # STEP 63
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 64
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 65
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 66
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 10, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 67
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 20                                                               # STEP 68
ACTION: int0 = 20 
int0 = 10 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 69
ACTION: int3 = 15 
int3 = 10 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 70
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.display()                                                          # STEP 71
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 8 [1:1]
---- < 7 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([7, 8, 15, 16, 18, 19])
==================================================
avl0.display()                                                          # STEP 72
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 8 [1:1]
---- < 7 [0:0] L
-- > 18 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([7, 8, 15, 16, 18, 19])
==================================================
avl0.delete(int1)                                                       # STEP 73
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 74
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 75
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 76
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 7                                                                # STEP 77
ACTION: int0 = 7 
int0 = 20 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 78
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 79
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 80
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 3                                                                # STEP 81
ACTION: int1 = 3 
int1 = 13 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 82
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 13, 16, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 83
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 15                                                               # STEP 84
ACTION: int2 = 15 
int2 = 12 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 85
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 86
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 87
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 88
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.display()                                                          # STEP 89
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
  16 [2:0]
-- < 13 [1:0]
---- < 8 [0:0] L
---- > 15 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([8, 13, 15, 16, 18, 19])
==================================================
avl0.insert(int2)                                                       # STEP 90
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 91
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 92
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 93
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 94
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 95
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104c51b90> : <type 'instance'>
avl_REF0 = set([3, 7, 8, 13, 15, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 7, 8, 13, 16, 18, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105b12c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #0 (0:00:31.078431) Mon May  1 18:52:42 2017 [ 160 stmts 212 branches ]
  12 [2:0]
-- < 3 [1:-1]
---- > 10 [0:0] L
-- > 19 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([3, 10, 12, 17, 19, 20])
  12 [3:-1]
-- < 10 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 17 [2:0]
---- < 15 [1:0]
------ < 13 [0:0] L
------ > 16 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([3, 10, 11, 12, 13, 15, 16, 17, 19, 20])
  9 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 12 [0:0] L
set([1, 2, 7, 9, 12, 16])
  9 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 12 [0:0] L
set([1, 2, 7, 9, 12, 16])
  9 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:1]
---- < 12 [0:0] L
set([1, 2, 7, 9, 12, 16])
  9 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 6 [0:0] L
-- > 16 [1:1]
---- < 12 [0:0] L
set([1, 2, 6, 9, 12, 16])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1059993f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 61 steps

SAVING TEST AS failure.62586.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 5                                                                 # STEP 0
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
int1 = 1                                                                 # STEP 1
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 8                                                                 # STEP 2
ACTION: int3 = 8 
int3 = None : <type 'NoneType'>
=> int3 = 8 : <type 'int'>
==================================================
int0 = 3                                                                 # STEP 3
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 6
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 3]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                 # STEP 7
ACTION: result = avl2.find(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 3, 5]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 9
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 10
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int1)                                                       # STEP 11
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.find(int2)                                                # STEP 12
ACTION: result = avl2.find(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 13
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 14
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 5]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 15
ACTION: int3 = 5 
int3 = 8 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 16
ACTION: int0 = 20 
int0 = 3 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 17
ACTION: int2 = 10 
int2 = 5 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 18
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 1, 5]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 19
ACTION: avl2.insert(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 16                                                               # STEP 20
ACTION: int1 = 16 
int1 = 1 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 21
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.inorder()                                                 # STEP 22
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 23
ACTION: avl2.delete(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8, 1]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 24
ACTION: int3 = 18 
int3 = 5 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 25
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 26
ACTION: avl2.delete(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 27
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 1, 20]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 28
ACTION: int3 = 13 
int3 = 18 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 29
ACTION: result = avl2.find(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 30
ACTION: avl2.insert(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 1, 20, 13]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 31
ACTION: int0 = 8 
int0 = 20 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 32
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([8, 1, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 8, 13, 16, 20]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 33
ACTION: avl2.delete(int0) 
int0 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 8, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1, 13, 16, 20]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 34
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 10, 13, 16, 20]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 35
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 36
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 13, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 10, 13, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 37
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 13, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 38
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 16                                                               # STEP 39
ACTION: int0 = 16 
int0 = 8 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 40
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1, 20]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 42
ACTION: int3 = 17 
int3 = 13 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 43
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 12                                                               # STEP 44
ACTION: int1 = 12 
int1 = 16 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 45
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 10, 20]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 46
ACTION: avl2.delete(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 2                                                                # STEP 47
ACTION: int0 = 2 
int0 = 16 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 48
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.find(int0)                                                # STEP 49
ACTION: result = avl2.find(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 50
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int0 = 5                                                                # STEP 51
ACTION: int0 = 5 
int0 = 2 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 52
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 10, 12, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 53
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 10, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 12, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 54
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 55
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 5, 12, 20]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 56
ACTION: int0 = 18 
int0 = 5 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 57
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 5, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int2 = 8                                                                # STEP 58
ACTION: int2 = 8 
int2 = 10 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 59
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 5, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 60
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x105999b48> : <type 'instance'>
avl_REF2 = set([1, 5, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 5, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105843fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
65.7004048824 TOTAL RUNTIME
6 EXECUTED
457 TOTAL TEST OPERATIONS
24.2379961014 TIME SPENT EXECUTING TEST OPERATIONS
0.0497217178345 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.3297076225 TIME SPENT CHECKING PROPERTIES
48.5677037239 TOTAL TIME SPENT RUNNING SUT
0.00405097007751 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 20                                                                # STEP 0
int2 = 18                                                                # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
int0 = 10                                                                # STEP 3
result = avl0.inorder()                                                  # STEP 4
avl0.delete(int2)                                                        # STEP 5
avl0.delete(int0)                                                        # STEP 6
avl0.delete(int2)                                                        # STEP 7
avl0.insert(int1)                                                        # STEP 8
result = avl0.inorder()                                                  # STEP 9
avl0.insert(int2)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
int2 = 15                                                               # STEP 12
int3 = 9                                                                # STEP 13
int0 = 4                                                                # STEP 14
avl0.delete(int1)                                                       # STEP 15
avl0.delete(int2)                                                       # STEP 16
int1 = 8                                                                # STEP 17
avl0.delete(int0)                                                       # STEP 18
avl0.delete(int3)                                                       # STEP 19
avl0.delete(int1)                                                       # STEP 20
avl0.delete(int0)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.insert(int3)                                                       # STEP 24
result = avl0.inorder()                                                 # STEP 25
avl0.delete(int0)                                                       # STEP 26
int1 = 15                                                               # STEP 27
int0 = 9                                                                # STEP 28
avl0.delete(int3)                                                       # STEP 29
avl0.delete(int1)                                                       # STEP 30
avl0.delete(int0)                                                       # STEP 31
avl0.insert(int1)                                                       # STEP 32
avl0.insert(int0)                                                       # STEP 33
int2 = 2                                                                # STEP 34
avl0 == avl0                                                            # STEP 35
int1 = 7                                                                # STEP 36
avl0.delete(int3)                                                       # STEP 37
avl0.delete(int0)                                                       # STEP 38
int3 = 9                                                                # STEP 39
avl0.insert(int0)                                                       # STEP 40
avl0.delete(int3)                                                       # STEP 41
int3 = 19                                                               # STEP 42
avl0.delete(int0)                                                       # STEP 43
int0 = 5                                                                # STEP 44
avl0.insert(int2)                                                       # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl0.insert(int3)                                                       # STEP 47
avl0.display()                                                          # STEP 48
avl0.delete(int2)                                                       # STEP 49
int2 = 16                                                               # STEP 50
result = avl0.find(int0)                                                # STEP 51
int0 = 3                                                                # STEP 52
result = avl0.find(int3)                                                # STEP 53
int3 = 10                                                               # STEP 54
avl0.insert(int1)                                                       # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl0.insert(int2)                                                       # STEP 57
int0 = 10                                                               # STEP 58
int1 = 13                                                               # STEP 59
result = avl0.inorder()                                                 # STEP 60
int2 = 12                                                               # STEP 61
result = avl0.find(int3)                                                # STEP 62
avl0 == avl0                                                            # STEP 63
avl0.insert(int0)                                                       # STEP 64
avl0.insert(int0)                                                       # STEP 65
avl0.delete(int3)                                                       # STEP 66
avl0.delete(int1)                                                       # STEP 67
int0 = 20                                                               # STEP 68
int3 = 15                                                               # STEP 69
avl0.delete(int1)                                                       # STEP 70
avl0.display()                                                          # STEP 71
avl0.display()                                                          # STEP 72
avl0.delete(int1)                                                       # STEP 73
avl0.insert(int1)                                                       # STEP 74
result = avl0.inorder()                                                 # STEP 75
avl0.delete(int0)                                                       # STEP 76
int0 = 7                                                                # STEP 77
avl0.delete(int2)                                                       # STEP 78
avl0.delete(int0)                                                       # STEP 79
avl0.delete(int2)                                                       # STEP 80
int1 = 3                                                                # STEP 81
avl0.delete(int3)                                                       # STEP 82
avl0.delete(int3)                                                       # STEP 83
int2 = 15                                                               # STEP 84
avl0.delete(int0)                                                       # STEP 85
avl0.delete(int1)                                                       # STEP 86
avl0.insert(int2)                                                       # STEP 87
avl0 == avl0                                                            # STEP 88
avl0.display()                                                          # STEP 89
avl0.insert(int2)                                                       # STEP 90
avl0.delete(int1)                                                       # STEP 91
avl0.insert(int0)                                                       # STEP 92
avl0.insert(int3)                                                       # STEP 93
avl0.insert(int1)                                                       # STEP 94
avl0.delete(int3)                                                       # STEP 95
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105b12c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int2 = 5                                                                 # STEP 0
int1 = 1                                                                 # STEP 1
int3 = 8                                                                 # STEP 2
int0 = 3                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int0)                                                        # STEP 5
avl2.insert(int3)                                                        # STEP 6
result = avl2.find(int2)                                                 # STEP 7
avl2.insert(int2)                                                        # STEP 8
avl2.insert(int3)                                                        # STEP 9
result = avl2.inorder()                                                 # STEP 10
avl2.delete(int1)                                                       # STEP 11
result = avl2.find(int2)                                                # STEP 12
avl2.insert(int3)                                                       # STEP 13
avl2.delete(int0)                                                       # STEP 14
int3 = 5                                                                # STEP 15
int0 = 20                                                               # STEP 16
int2 = 10                                                               # STEP 17
avl2.insert(int1)                                                       # STEP 18
avl2.insert(int3)                                                       # STEP 19
int1 = 16                                                               # STEP 20
avl2 == avl2                                                            # STEP 21
result = avl2.inorder()                                                 # STEP 22
avl2.delete(int3)                                                       # STEP 23
int3 = 18                                                               # STEP 24
avl2.delete(int3)                                                       # STEP 25
avl2.delete(int0)                                                       # STEP 26
avl2.insert(int0)                                                       # STEP 27
int3 = 13                                                               # STEP 28
result = avl2.find(int0)                                                # STEP 29
avl2.insert(int3)                                                       # STEP 30
int0 = 8                                                                # STEP 31
avl2.insert(int1)                                                       # STEP 32
avl2.delete(int0)                                                       # STEP 33
avl2.insert(int2)                                                       # STEP 34
avl2.insert(int2)                                                       # STEP 35
avl2.delete(int1)                                                       # STEP 36
avl2.delete(int2)                                                       # STEP 37
avl2.delete(int2)                                                       # STEP 38
int0 = 16                                                               # STEP 39
avl2.delete(int1)                                                       # STEP 40
avl2.delete(int3)                                                       # STEP 41
int3 = 17                                                               # STEP 42
result = avl2.inorder()                                                 # STEP 43
int1 = 12                                                               # STEP 44
avl2.insert(int2)                                                       # STEP 45
avl2.delete(int0)                                                       # STEP 46
int0 = 2                                                                # STEP 47
avl2.delete(int1)                                                       # STEP 48
result = avl2.find(int0)                                                # STEP 49
avl2.insert(int2)                                                       # STEP 50
int0 = 5                                                                # STEP 51
avl2.insert(int1)                                                       # STEP 52
avl2.delete(int2)                                                       # STEP 53
avl2.delete(int2)                                                       # STEP 54
avl2.insert(int0)                                                       # STEP 55
int0 = 18                                                               # STEP 56
avl2.insert(int1)                                                       # STEP 57
int2 = 8                                                                # STEP 58
avl2.delete(int0)                                                       # STEP 59
avl2.delete(int1)                                                       # STEP 60
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105843fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
