Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99714.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  14 [2:0]
-- < 11 [1:0]
---- < 9 [0:0] L
---- > 12 [0:0] L
-- > 20 [1:1]
---- < 15 [0:0] L
set([9, 11, 12, 14, 15, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1044ab518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 96 steps

SAVING TEST AS failure.99714.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 7                                                                 # STEP 2
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
result = avl2.find(int1)                                                 # STEP 3
ACTION: result = avl2.find(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int2 = 10                                                                # STEP 4
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
int1 = 20                                                                # STEP 5
ACTION: int1 = 20 
int1 = 7 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
result = avl2.find(int2)                                                 # STEP 6
ACTION: result = avl2.find(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl1.delete(int1)                                                        # STEP 7
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 9                                                                 # STEP 8
ACTION: int2 = 9 
int2 = 10 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl2.insert(int2)                                                        # STEP 9
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 10
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl1 == avl2                                                            # STEP 11
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 14
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 15
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 16
ACTION: int2 = 6 
int2 = 9 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 17
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 18
ACTION: int2 = 12 
int2 = 6 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 19
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12, 6]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 20
ACTION: result = avl0.find(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 20]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 22
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.delete(int2)                                                       # STEP 23
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 24
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 25
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 26
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 27
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.insert(int1)                                                       # STEP 28
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 29
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12, 20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20, 6]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 32
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12, 20, 6]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 33
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 20, 12]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 34
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([9, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl1.find(int1)                                                # STEP 36
ACTION: result = avl1.find(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 37
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([12, 6]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 38
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 39
ACTION: result = avl0.find(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 40
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 20, 12]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 41
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 42
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([9, 12]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 43
ACTION: int2 = 12 
int2 = 12 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 44
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12, 20, 6]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 46
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 20, 12]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 47
ACTION: int3 = 2 
int3 = None : <type 'NoneType'>
=> int3 = 2 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 48
ACTION: int1 = 9 
int1 = 20 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int0 = 14                                                               # STEP 49
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 50
ACTION: result = avl0.find(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 20, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 51
ACTION: avl1.insert(int3) 
int3 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([12, 2, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 53
ACTION: result = avl0.find(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 20, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 54
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([9, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 55
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([20, 6]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 56
ACTION: int2 = 12 
int2 = 12 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 57
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl1.find(int2)                                                # STEP 58
ACTION: result = avl1.find(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 59
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 14                                                               # STEP 60
ACTION: int1 = 14 
int1 = 9 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 61
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 20, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 62
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl2.find(int3)                                                # STEP 63
ACTION: result = avl2.find(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 64
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 65
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 20, 14, 12]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 66
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 14, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 67
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 15                                                               # STEP 68
ACTION: int1 = 15 
int1 = 14 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 69
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 70
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20, 6, 15]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 71
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12, 2, 15, 20, 9]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 72
ACTION: result = avl2.find(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 14, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 11                                                               # STEP 73
ACTION: int3 = 11 
int3 = 2 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 74
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 20, 14, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 15, 20, 14, 12]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 75
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 15, 20, 14, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 11, 12, 14, 15, 20]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 76
ACTION: int1 = 10 
int1 = 15 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 77
ACTION: int0 = 10 
int0 = 14 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 78
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 15, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.display()                                                          # STEP 79
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 14, 15, 20]) : <type 'set'>
  14 [2:0]
-- < 11 [1:0]
---- < 9 [0:0] L
---- > 12 [0:0] L
-- > 20 [1:1]
---- < 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([9, 11, 12, 14, 15, 20])
==================================================
avl2.insert(int1)                                                       # STEP 80
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 11, 12, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 10, 11, 12, 14, 15, 20]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 81
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 10, 11, 12, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 82
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 10, 11, 12, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int1)                                                       # STEP 83
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 84
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 85
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 15, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 86
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 20, 6, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 87
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([11, 20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([12, 11, 20, 6, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 88
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([12, 11, 20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([6, 10, 11, 12, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 89
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([12, 2, 15, 20, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 9, 10, 12, 15, 20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 90
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([6, 10, 11, 12, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 91
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1044264d0> : <type 'instance'>
avl_REF1 = set([2, 9, 10, 12, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([2, 9, 12, 15, 20]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 92
ACTION: int2 = 9 
int2 = 12 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 93
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045a3710> : <type 'instance'>
avl_REF0 = set([6, 10, 11, 12, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 94
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 10, 11, 12, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 95
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1041a5128> : <type 'instance'>
avl_REF2 = set([9, 10, 11, 12, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([9, 10, 12, 14, 15, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046803b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104678ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 98 steps

SAVING TEST AS failure.99714.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 18                                                                # STEP 0
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
int3 = 11                                                                # STEP 1
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
int2 = 6                                                                 # STEP 2
ACTION: int2 = 6 
int2 = None : <type 'NoneType'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 18                                                                # STEP 3
ACTION: int0 = 18 
int0 = None : <type 'NoneType'>
=> int0 = 18 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 5
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                        # STEP 6
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
int2 = 5                                                                 # STEP 8
ACTION: int2 = 5 
int2 = 6 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
int1 = 1                                                                 # STEP 9
ACTION: int1 = 1 
int1 = 18 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 11
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 6]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 12
ACTION: int0 = 6 
int0 = 18 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 13
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 5, 6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([5, 6]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 15
ACTION: result = avl1.find(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 17
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 15                                                               # STEP 18
ACTION: int1 = 15 
int1 = 1 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 19
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11, 5, 6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 21
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 23
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([11, 6]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 11                                                               # STEP 26
ACTION: int1 = 11 
int1 = 15 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 27
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 28
ACTION: int1 = 3 
int1 = 11 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 29
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 30
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int2)                                                # STEP 31
ACTION: result = avl1.find(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 32
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 33
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 34
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 6]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 17                                                               # STEP 36
ACTION: int0 = 17 
int0 = 6 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 37
ACTION: int1 = 12 
int1 = 3 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 38
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 12, 6]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int3 = 6                                                                # STEP 41
ACTION: int3 = 6 
int3 = 11 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 42
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 43
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 44
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 3, 12, 6]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 45
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([17, 3, 12, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl2.inorder()                                                 # STEP 46
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.delete(int1)                                                       # STEP 47
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([17, 3, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([17, 3, 6]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 48
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([17, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 5                                                                # STEP 49
ACTION: int1 = 5 
int1 = 12 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 50
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([17, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 51
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([17, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 52
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 53
ACTION: int0 = 5 
int0 = 17 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
int1 = 8                                                                # STEP 54
ACTION: int1 = 8 
int1 = 5 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 55
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 17]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 56
ACTION: int2 = 1 
int2 = 5 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 57
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 58
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([17, 3, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 6, 8, 17]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 59
ACTION: result = avl1.find(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 60
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([3, 6, 17]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 61
ACTION: int1 = 14 
int1 = 8 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 62
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 6, 14, 17]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 63
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 1                                                                # STEP 64
ACTION: int1 = 1 
int1 = 14 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 65
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 66
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 17, 5]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 67
ACTION: int3 = 17 
int3 = 16 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 68
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([8, 5]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 69
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 17, 5]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 70
ACTION: int3 = 7 
int3 = 17 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 71
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 17, 5, 1]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 72
ACTION: int0 = 6 
int0 = 5 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 73
ACTION: int2 = 10 
int2 = 1 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 74
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17, 5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 17, 10, 5, 1]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 75
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17, 10, 5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([8, 17, 10, 5]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 76
ACTION: int2 = 16 
int2 = 10 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 77
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 78
ACTION: avl2.insert(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([8, 17, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([5, 8, 10, 16, 17]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 79
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([5, 8, 10, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([5, 7, 8, 10, 16, 17]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 80
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 5                                                                # STEP 81
ACTION: int1 = 5 
int1 = 1 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 82
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([5, 7, 8, 10, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([5, 8, 10, 16, 17]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 83
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([5, 8, 10, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([5, 8, 10, 17]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 84
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([5, 8, 10, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl1.find(int3)                                                # STEP 85
ACTION: result = avl1.find(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int2 = 3                                                                # STEP 86
ACTION: int2 = 3 
int2 = 16 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int3 = 2                                                                # STEP 87
ACTION: int3 = 2 
int3 = 7 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 88
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([5, 8, 10, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 18                                                               # STEP 89
ACTION: int3 = 18 
int3 = 2 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 90
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 91
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 92
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 3, 5, 6, 14, 17]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 93
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 5, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 94
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 3, 14, 17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 95
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042a6368> : <type 'instance'>
avl_REF1 = set([1, 3, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 14, 17]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 96
ACTION: int0 = 8 
int0 = 6 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 97
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104676830> : <type 'instance'>
avl_REF2 = set([5, 8, 10, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([8, 10, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042b2a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #3 STEP #0 (0:00:31.266109) Fri Apr 28 04:42:45 2017 [ 161 stmts 214 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10465a3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 43 steps

SAVING TEST AS failure.99714.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 3                                                                 # STEP 0
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int2 = 10                                                                # STEP 1
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 3
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 11                                                                # STEP 4
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 1                                                                 # STEP 6
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int1)                                                        # STEP 7
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 3]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 9
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11, 10, 3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 10
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([11, 3]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 12
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11, 10, 3]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 13
ACTION: int2 = 14 
int2 = 10 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 14
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 1, 10, 3]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 1, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 16
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 1, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([11, 10, 3]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 20                                                               # STEP 18
ACTION: int0 = 20 
int0 = 1 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 19
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.inorder()                                                 # STEP 20
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1 == avl1                                                            # STEP 21
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 24
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([11, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([10, 3]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 25
ACTION: int1 = 9 
int1 = 3 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 3, 14]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 27
ACTION: result = avl1.find(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([10, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int2 = 6                                                                # STEP 28
ACTION: int2 = 6 
int2 = 14 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 29
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([10, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 30
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([10, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 10, 14, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 31
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 10, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([3, 10, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 32
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 6, 10, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 33
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int2 = 19                                                               # STEP 34
ACTION: int2 = 19 
int2 = 6 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 36
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 6, 10, 14, 20]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 37
ACTION: int0 = 13 
int0 = 20 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 12                                                               # STEP 38
ACTION: int3 = 12 
int3 = 11 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 39
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 6, 10, 13, 14, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 40
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 13, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 6, 10, 13, 14, 19, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 41
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 13, 14, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 42
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042abc68> : <type 'instance'>
avl_REF1 = set([3, 6, 10, 13, 14, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([3, 6, 10, 14, 19, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042867e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
  9 [2:0]
-- < 3 [1:-1]
---- > 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 5, 9, 12, 13, 19])
  9 [2:0]
-- < 3 [1:-1]
---- > 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 5, 9, 12, 13, 19])
  9 [2:0]
-- < 3 [1:-1]
---- > 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 5, 9, 12, 13, 19])
  9 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 4, 5, 9, 12, 13, 19])
  9 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 4, 7, 9, 12, 13, 19])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 74
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.1937251091 TOTAL RUNTIME
6 EXECUTED
511 TOTAL TEST OPERATIONS
20.3403725624 TIME SPENT EXECUTING TEST OPERATIONS
0.0543496608734 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
20.4603962898 TIME SPENT CHECKING PROPERTIES
40.8007688522 TOTAL TIME SPENT RUNNING SUT
0.00374007225037 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
avl2 = avl.AVLTree()                                                     # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
int1 = 7                                                                 # STEP 2
result = avl2.find(int1)                                                 # STEP 3
int2 = 10                                                                # STEP 4
int1 = 20                                                                # STEP 5
result = avl2.find(int2)                                                 # STEP 6
avl1.delete(int1)                                                        # STEP 7
int2 = 9                                                                 # STEP 8
avl2.insert(int2)                                                        # STEP 9
avl2 == avl2                                                            # STEP 10
avl1 == avl2                                                            # STEP 11
avl2.delete(int2)                                                       # STEP 12
avl1.delete(int1)                                                       # STEP 13
avl0 = avl.AVLTree()                                                    # STEP 14
avl2.insert(int2)                                                       # STEP 15
int2 = 6                                                                # STEP 16
avl0.insert(int2)                                                       # STEP 17
int2 = 12                                                               # STEP 18
avl0.insert(int2)                                                       # STEP 19
result = avl0.find(int1)                                                # STEP 20
avl2.insert(int1)                                                       # STEP 21
result = avl1.inorder()                                                 # STEP 22
avl0.delete(int2)                                                       # STEP 23
avl1.delete(int1)                                                       # STEP 24
avl2.insert(int1)                                                       # STEP 25
avl1.insert(int1)                                                       # STEP 26
result = avl2.inorder()                                                 # STEP 27
avl1.insert(int1)                                                       # STEP 28
avl1.insert(int2)                                                       # STEP 29
avl0.delete(int1)                                                       # STEP 30
avl0.insert(int1)                                                       # STEP 31
avl0.insert(int2)                                                       # STEP 32
avl2.insert(int2)                                                       # STEP 33
avl2.delete(int2)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
result = avl1.find(int1)                                                # STEP 36
avl0.delete(int1)                                                       # STEP 37
avl2.delete(int2)                                                       # STEP 38
result = avl0.find(int2)                                                # STEP 39
avl2.insert(int2)                                                       # STEP 40
avl2.insert(int2)                                                       # STEP 41
avl2.delete(int1)                                                       # STEP 42
int2 = 12                                                               # STEP 43
result = avl0.inorder()                                                 # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl2.insert(int1)                                                       # STEP 46
int3 = 2                                                                # STEP 47
int1 = 9                                                                # STEP 48
int0 = 14                                                               # STEP 49
result = avl0.find(int2)                                                # STEP 50
avl1.insert(int3)                                                       # STEP 51
avl1.insert(int1)                                                       # STEP 52
result = avl0.find(int2)                                                # STEP 53
avl2.delete(int2)                                                       # STEP 54
avl0.delete(int2)                                                       # STEP 55
int2 = 12                                                               # STEP 56
avl0.delete(int0)                                                       # STEP 57
result = avl1.find(int2)                                                # STEP 58
avl0.delete(int3)                                                       # STEP 59
int1 = 14                                                               # STEP 60
avl2.insert(int1)                                                       # STEP 61
result = avl0.inorder()                                                 # STEP 62
result = avl2.find(int3)                                                # STEP 63
avl1.delete(int0)                                                       # STEP 64
avl2.insert(int2)                                                       # STEP 65
result = avl2.inorder()                                                 # STEP 66
avl0.delete(int0)                                                       # STEP 67
int1 = 15                                                               # STEP 68
avl0.delete(int1)                                                       # STEP 69
avl0.insert(int1)                                                       # STEP 70
avl1.insert(int1)                                                       # STEP 71
result = avl2.find(int3)                                                # STEP 72
int3 = 11                                                               # STEP 73
avl2.insert(int1)                                                       # STEP 74
avl2.insert(int3)                                                       # STEP 75
int1 = 10                                                               # STEP 76
int0 = 10                                                               # STEP 77
avl1.delete(int0)                                                       # STEP 78
avl2.display()                                                          # STEP 79
avl2.insert(int1)                                                       # STEP 80
avl2.insert(int3)                                                       # STEP 81
result = avl2.inorder()                                                 # STEP 82
avl0.delete(int1)                                                       # STEP 83
avl0.delete(int0)                                                       # STEP 84
avl1.insert(int2)                                                       # STEP 85
avl0.insert(int3)                                                       # STEP 86
avl0.insert(int2)                                                       # STEP 87
avl0.insert(int1)                                                       # STEP 88
avl1.insert(int0)                                                       # STEP 89
avl0.insert(int3)                                                       # STEP 90
avl1.delete(int0)                                                       # STEP 91
int2 = 9                                                                # STEP 92
avl0.insert(int0)                                                       # STEP 93
avl2.insert(int3)                                                       # STEP 94
avl2.delete(int3)                                                       # STEP 95
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046803b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int1 = 18                                                                # STEP 0
int3 = 11                                                                # STEP 1
int2 = 6                                                                 # STEP 2
int0 = 18                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int1)                                                        # STEP 5
avl1.delete(int0)                                                        # STEP 6
avl1.insert(int2)                                                        # STEP 7
int2 = 5                                                                 # STEP 8
int1 = 1                                                                 # STEP 9
avl1.delete(int1)                                                       # STEP 10
avl1.insert(int1)                                                       # STEP 11
int0 = 6                                                                # STEP 12
avl1.insert(int2)                                                       # STEP 13
avl1.delete(int1)                                                       # STEP 14
result = avl1.find(int1)                                                # STEP 15
avl1.delete(int1)                                                       # STEP 16
avl1.insert(int2)                                                       # STEP 17
int1 = 15                                                               # STEP 18
avl1.insert(int3)                                                       # STEP 19
avl1.delete(int1)                                                       # STEP 20
avl1.delete(int1)                                                       # STEP 21
avl1.insert(int2)                                                       # STEP 22
avl1.delete(int2)                                                       # STEP 23
avl1.delete(int2)                                                       # STEP 24
avl1.insert(int3)                                                       # STEP 25
int1 = 11                                                               # STEP 26
avl1.delete(int1)                                                       # STEP 27
int1 = 3                                                                # STEP 28
avl1.delete(int2)                                                       # STEP 29
avl1.delete(int2)                                                       # STEP 30
result = avl1.find(int2)                                                # STEP 31
avl1.delete(int2)                                                       # STEP 32
result = avl1.inorder()                                                 # STEP 33
avl1.insert(int1)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
int0 = 17                                                               # STEP 36
int1 = 12                                                               # STEP 37
avl1.insert(int1)                                                       # STEP 38
avl1.insert(int1)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
int3 = 6                                                                # STEP 41
avl2 = avl.AVLTree()                                                    # STEP 42
avl1.delete(int2)                                                       # STEP 43
avl1.insert(int0)                                                       # STEP 44
result = avl1.inorder()                                                 # STEP 45
result = avl2.inorder()                                                 # STEP 46
avl1.delete(int1)                                                       # STEP 47
avl1.insert(int3)                                                       # STEP 48
int1 = 5                                                                # STEP 49
avl1.insert(int0)                                                       # STEP 50
avl1.delete(int1)                                                       # STEP 51
avl2.insert(int0)                                                       # STEP 52
int0 = 5                                                                # STEP 53
int1 = 8                                                                # STEP 54
avl2.insert(int1)                                                       # STEP 55
int2 = 1                                                                # STEP 56
int3 = 16                                                               # STEP 57
avl1.insert(int1)                                                       # STEP 58
result = avl1.find(int3)                                                # STEP 59
avl1.delete(int1)                                                       # STEP 60
int1 = 14                                                               # STEP 61
avl1.insert(int1)                                                       # STEP 62
avl2.delete(int3)                                                       # STEP 63
int1 = 1                                                                # STEP 64
avl1.delete(int0)                                                       # STEP 65
avl2.insert(int0)                                                       # STEP 66
int3 = 17                                                               # STEP 67
avl2.delete(int3)                                                       # STEP 68
avl2.insert(int3)                                                       # STEP 69
int3 = 7                                                                # STEP 70
avl2.insert(int2)                                                       # STEP 71
int0 = 6                                                                # STEP 72
int2 = 10                                                               # STEP 73
avl2.insert(int2)                                                       # STEP 74
avl2.delete(int1)                                                       # STEP 75
int2 = 16                                                               # STEP 76
avl1.insert(int1)                                                       # STEP 77
avl2.insert(int2)                                                       # STEP 78
avl2.insert(int3)                                                       # STEP 79
avl1.delete(int3)                                                       # STEP 80
int1 = 5                                                                # STEP 81
avl2.delete(int3)                                                       # STEP 82
avl2.delete(int2)                                                       # STEP 83
result = avl2.inorder()                                                 # STEP 84
result = avl1.find(int3)                                                # STEP 85
int2 = 3                                                                # STEP 86
int3 = 2                                                                # STEP 87
avl2.delete(int3)                                                       # STEP 88
int3 = 18                                                               # STEP 89
avl1.insert(int2)                                                       # STEP 90
result = avl1.inorder()                                                 # STEP 91
avl1.insert(int1)                                                       # STEP 92
avl1.delete(int1)                                                       # STEP 93
avl1.delete(int0)                                                       # STEP 94
avl1.delete(int2)                                                       # STEP 95
int0 = 8                                                                # STEP 96
avl2.delete(int1)                                                       # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042b2a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int1 = 3                                                                 # STEP 0
int2 = 10                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
result = avl1.inorder()                                                  # STEP 3
int3 = 11                                                                # STEP 4
avl1.delete(int3)                                                        # STEP 5
int0 = 1                                                                 # STEP 6
avl1.insert(int1)                                                        # STEP 7
avl1.insert(int2)                                                        # STEP 8
avl1.insert(int3)                                                        # STEP 9
avl1.insert(int2)                                                       # STEP 10
avl1.delete(int2)                                                       # STEP 11
avl1.insert(int2)                                                       # STEP 12
int2 = 14                                                               # STEP 13
avl1.insert(int0)                                                       # STEP 14
avl1.insert(int0)                                                       # STEP 15
avl1.delete(int0)                                                       # STEP 16
avl1.delete(int2)                                                       # STEP 17
int0 = 20                                                               # STEP 18
result = avl1.inorder()                                                 # STEP 19
result = avl1.inorder()                                                 # STEP 20
avl1 == avl1                                                            # STEP 21
avl1.delete(int2)                                                       # STEP 22
result = avl1.inorder()                                                 # STEP 23
avl1.delete(int3)                                                       # STEP 24
int1 = 9                                                                # STEP 25
avl1.insert(int2)                                                       # STEP 26
result = avl1.find(int0)                                                # STEP 27
int2 = 6                                                                # STEP 28
result = avl1.inorder()                                                 # STEP 29
avl1.insert(int0)                                                       # STEP 30
avl1.delete(int0)                                                       # STEP 31
avl1.insert(int2)                                                       # STEP 32
avl1.insert(int2)                                                       # STEP 33
int2 = 19                                                               # STEP 34
avl1.delete(int3)                                                       # STEP 35
avl1.insert(int0)                                                       # STEP 36
int0 = 13                                                               # STEP 37
int3 = 12                                                               # STEP 38
avl1.insert(int0)                                                       # STEP 39
avl1.insert(int2)                                                       # STEP 40
avl1.insert(int2)                                                       # STEP 41
avl1.delete(int0)                                                       # STEP 42
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042867e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
