Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99935.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  4 [2:0]
-- < 2 [1:-1]
---- > 3 [0:0] L
-- > 14 [1:0]
---- < 5 [0:0] L
---- > 17 [0:0] L
set([2, 3, 4, 5, 14, 17])
  6 [2:0]
-- < 5 [1:1]
---- < 4 [0:0] L
-- > 17 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
set([4, 5, 6, 15, 17, 19])
  8 [3:-1]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 17 [2:1]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 19 [0:0] L
set([1, 3, 5, 8, 9, 11, 17, 19])
  8 [3:-1]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 17 [2:1]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 19 [0:0] L
set([1, 3, 5, 8, 9, 11, 17, 19])
  8 [3:-1]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 17 [2:1]
---- < 11 [1:0]
------ < 9 [0:0] L
------ > 15 [0:0] L
---- > 19 [0:0] L
set([1, 3, 5, 8, 9, 11, 15, 17, 19])
  8 [3:-1]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 17 [2:1]
---- < 11 [1:0]
------ < 9 [0:0] L
------ > 15 [0:0] L
---- > 19 [0:0] L
set([1, 3, 5, 8, 9, 11, 15, 17, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1010bc998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 44 steps

SAVING TEST AS failure.99935.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 1                                                                 # STEP 0
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 1
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 2
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
int0 = 7                                                                 # STEP 3
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 1                                                                 # STEP 6
ACTION: int2 = 1 
int2 = 13 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                        # STEP 7
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 18                                                                # STEP 8
ACTION: int2 = 18 
int2 = 1 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 12                                                               # STEP 10
ACTION: int2 = 12 
int2 = 18 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 11
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 12
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 2                                                                # STEP 13
ACTION: int3 = 2 
int3 = 13 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 14
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 15
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 12]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 16                                                               # STEP 17
ACTION: int1 = 16 
int1 = 1 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 18
ACTION: int0 = 1 
int0 = 7 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 17                                                               # STEP 20
ACTION: int2 = 17 
int2 = 12 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 1, 12]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 23
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x100f6b5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 24
ACTION: int1 = 10 
int1 = 16 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 25
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f54128> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 26
ACTION: int3 = 14 
int3 = 2 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 27
ACTION: int0 = 7 
int0 = 1 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 28
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 7                                                                # STEP 29
ACTION: int3 = 7 
int3 = 14 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 30
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 31
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 1, 12, 7]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 32
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 33
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f6b5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 34
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f6b5a8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 7]) : <type 'set'>
==================================================
int3 = 10                                                               # STEP 35
ACTION: int3 = 10 
int3 = 7 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 36
ACTION: int0 = 9 
int0 = 7 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f6b5a8> : <type 'instance'>
avl_REF1 = set([17, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 8                                                                # STEP 38
ACTION: int1 = 8 
int1 = 10 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 39
ACTION: int2 = 12 
int2 = 17 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 40
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 1, 12, 9, 7]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 41
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int0 = 7                                                                # STEP 42
ACTION: int0 = 7 
int0 = 9 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 43
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x100f6f3b0> : <type 'instance'>
avl_REF2 = set([16, 1, 12, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([16, 1, 9, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10504f5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #5 STEP #12 (0:00:30.070382) Fri Apr 28 05:21:23 2017 [ 149 stmts 197 branches ]
  12 [2:0]
-- < 10 [1:0]
---- < 4 [0:0] L
---- > 11 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 18 [0:0] L
set([4, 10, 11, 12, 14, 15, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x100faebd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 92 steps

SAVING TEST AS failure.99935.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 7                                                                 # STEP 0
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 4                                                                 # STEP 2
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 3
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 4
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
int3 = 9                                                                 # STEP 6
ACTION: int3 = 9 
int3 = 12 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 7
ACTION: avl1.insert(int3) 
int3 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9, 12]) : <type 'set'>
==================================================
int3 = 15                                                                # STEP 8
ACTION: int3 = 15 
int3 = 9 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 9
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([9, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9, 12, 15]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 10
ACTION: int3 = 17 
int3 = 15 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 2                                                                # STEP 12
ACTION: int2 = 2 
int2 = 19 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 13
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 9                                                                # STEP 14
ACTION: int2 = 9 
int2 = 2 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([9, 12, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 12, 4, 15]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 16
ACTION: int0 = 7 
int0 = 4 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 17
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([9, 12, 4, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([9, 12, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([12, 4, 15]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 19
ACTION: int2 = 18 
int2 = 9 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([12, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 12, 4, 15]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 21
ACTION: int2 = 6 
int2 = 18 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 22
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([18, 12, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 23
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([18, 12, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 24
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10152e6c8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 25
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10152e6c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 26
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 27
ACTION: int2 = 14 
int2 = 6 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 28
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10152e6c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 29
ACTION: int3 = 3 
int3 = 17 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 30
ACTION: int1 = 4 
int1 = 7 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 31
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 32
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 17                                                               # STEP 33
ACTION: int3 = 17 
int3 = 3 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 34
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([18, 12, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 12, 14, 15, 18]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 35
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10152e6c8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 4]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 36
ACTION: int0 = 18 
int0 = 7 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 37
ACTION: int2 = 17 
int2 = 14 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 38
ACTION: int1 = 10 
int1 = 4 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 39
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 8                                                                # STEP 40
ACTION: int3 = 8 
int3 = 17 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 41
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 42
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10152e6c8> : <type 'instance'>
avl_REF0 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.insert(int1)                                                       # STEP 43
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 10, 12, 14, 15, 18]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 44
ACTION: int1 = 11 
int1 = 10 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 45
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 10, 11, 12, 14, 15, 18]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 46
ACTION: int1 = 15 
int1 = 11 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 47
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 18                                                               # STEP 48
ACTION: int0 = 18 
int0 = 18 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 49
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 50
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 51
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 15                                                               # STEP 52
ACTION: int1 = 15 
int1 = 15 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 53
ACTION: int3 = 7 
int3 = 8 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl1.display()                                                          # STEP 54
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15, 18]) : <type 'set'>
  12 [2:0]
-- < 10 [1:0]
---- < 4 [0:0] L
---- > 11 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([4, 10, 11, 12, 14, 15, 18])
==================================================
avl1.delete(int0)                                                       # STEP 55
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([4, 10, 11, 12, 14, 15]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 56
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x10152e6c8> : <type 'instance'>
avl_REF0 = set([17, 4]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 57
ACTION: int0 = 9 
int0 = 18 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 58
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 5                                                                # STEP 59
ACTION: int1 = 5 
int1 = 15 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 60
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 3]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 61
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 62
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 7                                                                # STEP 63
ACTION: int3 = 7 
int3 = 7 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 64
ACTION: int0 = 19 
int0 = 9 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 65
ACTION: int2 = 17 
int2 = 17 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 66
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 3, 7]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 67
ACTION: int3 = 19 
int3 = 7 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 68
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 69
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([17, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 70
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 71
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 72
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 11                                                               # STEP 73
ACTION: int0 = 11 
int0 = 19 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 74
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([4, 10, 12, 14, 15]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 75
ACTION: int0 = 7 
int0 = 11 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
int3 = 10                                                               # STEP 76
ACTION: int3 = 10 
int3 = 19 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 77
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 78
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 79
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 10, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 5, 10, 12, 14, 15]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 80
ACTION: int2 = 16 
int2 = 17 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 81
ACTION: int1 = 20 
int1 = 5 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 82
ACTION: avl1.delete(int3) 
int3 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 5, 10, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([4, 5, 12, 14, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 83
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x100f74dd0> : <type 'instance'>
avl_REF1 = set([4, 5, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 84
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 16                                                               # STEP 85
ACTION: int3 = 16 
int3 = 10 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 86
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([17, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 17, 3, 7]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 87
ACTION: int3 = 14 
int3 = 16 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 88
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x100f9fdd0> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 17                                                               # STEP 89
ACTION: int0 = 17 
int0 = 7 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 90
ACTION: int1 = 3 
int1 = 20 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 91
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10152ec68> : <type 'instance'>
avl_REF2 = set([16, 17, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([16, 17, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101631a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 22
STOPPING TESTING DUE TO TIMEOUT
7.90634543604 PERCENT COVERED
60.1961131096 TOTAL RUNTIME
8 EXECUTED
658 TOTAL TEST OPERATIONS
24.7042143345 TIME SPENT EXECUTING TEST OPERATIONS
0.024760723114 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.8156108856 TIME SPENT CHECKING PROPERTIES
49.5198252201 TOTAL TIME SPENT RUNNING SUT
0.00411677360535 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 1                                                                 # STEP 0
int2 = 13                                                                # STEP 1
int3 = 13                                                                # STEP 2
int0 = 7                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int2)                                                        # STEP 5
int2 = 1                                                                 # STEP 6
avl0.delete(int2)                                                        # STEP 7
int2 = 18                                                                # STEP 8
avl0.delete(int2)                                                        # STEP 9
int2 = 12                                                               # STEP 10
avl2 = avl.AVLTree()                                                    # STEP 11
avl2.delete(int3)                                                       # STEP 12
int3 = 2                                                                # STEP 13
avl2.insert(int1)                                                       # STEP 14
avl2.insert(int2)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
int1 = 16                                                               # STEP 17
int0 = 1                                                                # STEP 18
avl0.delete(int2)                                                       # STEP 19
int2 = 17                                                               # STEP 20
avl2.insert(int1)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
avl1 = avl.AVLTree()                                                    # STEP 23
int1 = 10                                                               # STEP 24
avl0.insert(int3)                                                       # STEP 25
int3 = 14                                                               # STEP 26
int0 = 7                                                                # STEP 27
avl2.delete(int3)                                                       # STEP 28
int3 = 7                                                                # STEP 29
avl2.delete(int0)                                                       # STEP 30
avl2.insert(int0)                                                       # STEP 31
avl2.delete(int1)                                                       # STEP 32
avl1.insert(int3)                                                       # STEP 33
avl1.insert(int2)                                                       # STEP 34
int3 = 10                                                               # STEP 35
int0 = 9                                                                # STEP 36
avl1.insert(int2)                                                       # STEP 37
int1 = 8                                                                # STEP 38
int2 = 12                                                               # STEP 39
avl2.insert(int0)                                                       # STEP 40
avl2.insert(int2)                                                       # STEP 41
int0 = 7                                                                # STEP 42
avl2.delete(int2)                                                       # STEP 43
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10504f5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int1 = 7                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
int0 = 4                                                                 # STEP 2
int3 = 12                                                                # STEP 3
int2 = 19                                                                # STEP 4
avl1.insert(int3)                                                        # STEP 5
int3 = 9                                                                 # STEP 6
avl1.insert(int3)                                                        # STEP 7
int3 = 15                                                                # STEP 8
avl1.insert(int3)                                                        # STEP 9
int3 = 17                                                               # STEP 10
avl1.delete(int2)                                                       # STEP 11
int2 = 2                                                                # STEP 12
avl1.delete(int2)                                                       # STEP 13
int2 = 9                                                                # STEP 14
avl1.insert(int0)                                                       # STEP 15
int0 = 7                                                                # STEP 16
result = avl1.inorder()                                                 # STEP 17
avl1.delete(int2)                                                       # STEP 18
int2 = 18                                                               # STEP 19
avl1.insert(int2)                                                       # STEP 20
int2 = 6                                                                # STEP 21
avl1.delete(int1)                                                       # STEP 22
avl1.delete(int1)                                                       # STEP 23
avl0 = avl.AVLTree()                                                    # STEP 24
avl0.delete(int2)                                                       # STEP 25
avl2 = avl.AVLTree()                                                    # STEP 26
int2 = 14                                                               # STEP 27
avl0.insert(int3)                                                       # STEP 28
int3 = 3                                                                # STEP 29
int1 = 4                                                                # STEP 30
avl2.insert(int3)                                                       # STEP 31
avl2.delete(int0)                                                       # STEP 32
int3 = 17                                                               # STEP 33
avl1.insert(int2)                                                       # STEP 34
avl0.insert(int1)                                                       # STEP 35
int0 = 18                                                               # STEP 36
int2 = 17                                                               # STEP 37
int1 = 10                                                               # STEP 38
avl1.delete(int3)                                                       # STEP 39
int3 = 8                                                                # STEP 40
avl2.delete(int1)                                                       # STEP 41
result = avl0.inorder()                                                 # STEP 42
avl1.insert(int1)                                                       # STEP 43
int1 = 11                                                               # STEP 44
avl1.insert(int1)                                                       # STEP 45
int1 = 15                                                               # STEP 46
avl2.delete(int0)                                                       # STEP 47
int0 = 18                                                               # STEP 48
avl1.insert(int1)                                                       # STEP 49
avl2.delete(int3)                                                       # STEP 50
avl2.delete(int2)                                                       # STEP 51
int1 = 15                                                               # STEP 52
int3 = 7                                                                # STEP 53
avl1.display()                                                          # STEP 54
avl1.delete(int0)                                                       # STEP 55
avl0 = avl.AVLTree()                                                    # STEP 56
int0 = 9                                                                # STEP 57
avl1.insert(int1)                                                       # STEP 58
int1 = 5                                                                # STEP 59
avl2.insert(int2)                                                       # STEP 60
avl1.delete(int3)                                                       # STEP 61
avl0.delete(int0)                                                       # STEP 62
int3 = 7                                                                # STEP 63
int0 = 19                                                               # STEP 64
int2 = 17                                                               # STEP 65
avl2.insert(int3)                                                       # STEP 66
int3 = 19                                                               # STEP 67
avl0.insert(int2)                                                       # STEP 68
avl2.insert(int2)                                                       # STEP 69
avl0.delete(int0)                                                       # STEP 70
avl1.delete(int2)                                                       # STEP 71
avl0.delete(int3)                                                       # STEP 72
int0 = 11                                                               # STEP 73
avl1.delete(int0)                                                       # STEP 74
int0 = 7                                                                # STEP 75
int3 = 10                                                               # STEP 76
avl0.delete(int2)                                                       # STEP 77
avl0.insert(int2)                                                       # STEP 78
avl1.insert(int1)                                                       # STEP 79
int2 = 16                                                               # STEP 80
int1 = 20                                                               # STEP 81
avl1.delete(int3)                                                       # STEP 82
avl1.delete(int1)                                                       # STEP 83
avl0.delete(int0)                                                       # STEP 84
int3 = 16                                                               # STEP 85
avl2.insert(int3)                                                       # STEP 86
int3 = 14                                                               # STEP 87
avl0.delete(int1)                                                       # STEP 88
int0 = 17                                                               # STEP 89
int1 = 3                                                                # STEP 90
avl2.delete(int1)                                                       # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101631a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
199 BRANCHES COVERED
150 STATEMENTS COVERED
