Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62478.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036197a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 85 steps

SAVING TEST AS failure.62478.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 6                                                                 # STEP 0
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
int0 = 11                                                                # STEP 1
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
int2 = 10                                                                # STEP 2
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
int1 = 17                                                                # STEP 3
ACTION: int1 = 17 
int1 = None : <type 'NoneType'>
=> int1 = 17 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 5
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int1)                                                        # STEP 6
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 7
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                        # STEP 8
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 6]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 9
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 10, 6]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 10
ACTION: result = avl2.find(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 10, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 11
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 10, 11, 6]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 10, 11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17, 11, 6]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 13
ACTION: result = avl2.find(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 11, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 14
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 15
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17, 6]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 16
ACTION: result = avl2.find(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 18
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 19
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 20
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int0 = 13                                                               # STEP 21
ACTION: int0 = 13 
int0 = 11 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 22
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([17, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 23
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 24
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 15                                                               # STEP 25
ACTION: int1 = 15 
int1 = 17 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 26
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6, 15]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 27
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.find(int2)                                                # STEP 28
ACTION: result = avl2.find(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 29
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 30
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.find(int0)                                                # STEP 31
ACTION: result = avl2.find(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 32
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 33
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 34
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 35
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 36
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 37
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 14                                                               # STEP 38
ACTION: int1 = 14 
int1 = 15 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 39
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 6, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 40
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 41
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 42
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([10, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([6, 15]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 43
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 44
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int0)                                                       # STEP 45
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 13, 15]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 46
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 47
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 48
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 49
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 50
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 51
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([13, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 52
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.find(int0)                                                # STEP 53
ACTION: result = avl2.find(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int1 = 3                                                                # STEP 54
ACTION: int1 = 3 
int1 = 14 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 55
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6, 13, 15]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 56
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.find(int1)                                                # STEP 57
ACTION: result = avl2.find(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 58
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 59
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 60
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 61
ACTION: int0 = 5 
int0 = 13 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 62
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 63
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 64
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 12                                                               # STEP 65
ACTION: int2 = 12 
int2 = 10 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 66
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 67
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 6, 13, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 68
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([3, 6, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 69
ACTION: avl2 = avl.AVLTree() 
avl2 = <avlbug2.AVLTree instance at 0x1035c56c8> : <type 'instance'>
avl_REF2 = set([3, 6, 13, 15]) : <type 'set'>
=> avl2 = <avlbug2.AVLTree instance at 0x102610b00> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 70
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102610b00> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 19                                                               # STEP 71
ACTION: int0 = 19 
int0 = 5 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 72
ACTION: int2 = 17 
int2 = 12 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 73
ACTION: int3 = 3 
int3 = 6 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 74
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102610b00> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl1.find(int0)                                                # STEP 75
ACTION: result = avl1.find(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 76
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 5]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 77
ACTION: result = avl1.find(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int1 = 11                                                               # STEP 78
ACTION: int1 = 11 
int1 = 3 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int0 = 14                                                               # STEP 79
ACTION: int0 = 14 
int0 = 19 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 80
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 3, 5]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 81
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102610b00> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 82
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102610b00> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 83
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([11, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 3, 5, 14]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 84
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035731b8> : <type 'instance'>
avl_REF1 = set([11, 3, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([11, 5, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026311b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #15 (0:00:30.112363) Mon May  1 18:37:01 2017 [ 145 stmts 192 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102608950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 84 steps

SAVING TEST AS failure.62478.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 3                                                                 # STEP 1
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
result = avl1.find(int3)                                                 # STEP 2
ACTION: result = avl1.find(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int2 = 8                                                                 # STEP 3
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 4
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                  # STEP 6
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 8
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 3]) : <type 'set'>
==================================================
int1 = 8                                                                 # STEP 9
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 10
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 12
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 3                                                                # STEP 14
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 15
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 16
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 3]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 19
ACTION: int2 = 5 
int2 = 8 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 21
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 5]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 23
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 3, 5]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 24
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 26
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([8, 5]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 27
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 28
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 29
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 5]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 30
ACTION: result = avl1.find(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 32
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int3 = 7                                                                # STEP 33
ACTION: int3 = 7 
int3 = 3 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 35
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 3]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 36
ACTION: result = avl1.find(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int1 = 10                                                               # STEP 37
ACTION: int1 = 10 
int1 = 8 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 38
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 3, 7]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 39
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 40
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 41
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8, 7]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 42
ACTION: int0 = 6 
int0 = 3 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 43
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 44
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 46
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 6, 7]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 47
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int3 = 14                                                               # STEP 48
ACTION: int3 = 14 
int3 = 7 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 49
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 50
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 51
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 52
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int0)                                                # STEP 53
ACTION: result = avl1.find(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 54
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 6, 7]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 55
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 5, 6, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 56
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 57
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8, 5, 7]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 58
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 59
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 16                                                               # STEP 60
ACTION: int1 = 16 
int1 = 10 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 61
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int2 = 16                                                               # STEP 62
ACTION: int2 = 16 
int2 = 5 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 9                                                                # STEP 63
ACTION: int3 = 9 
int3 = 14 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 64
ACTION: int0 = 17 
int0 = 6 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 65
ACTION: avl1.insert(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([8, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 7, 8, 9]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 66
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 10                                                               # STEP 67
ACTION: int3 = 10 
int3 = 9 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 68
ACTION: result = avl1.find(int3) 
int3 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 69
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 70
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1 == avl1                                                            # STEP 71
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int3 = 11                                                               # STEP 72
ACTION: int3 = 11 
int3 = 10 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 73
ACTION: int0 = 6 
int0 = 17 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 74
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 1                                                                # STEP 75
ACTION: int3 = 1 
int3 = 11 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 76
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 77
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 78
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 79
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 80
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 5, 7, 8, 9, 17]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 81
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([1, 5, 7, 8, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 5, 7, 8, 9, 16, 17]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 82
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([1, 5, 7, 8, 9, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 83
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102600ea8> : <type 'instance'>
avl_REF1 = set([1, 5, 7, 8, 9, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([5, 7, 8, 9, 16, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104919710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  10 [2:0]
-- < 4 [1:-1]
---- > 8 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([4, 8, 10, 14, 16, 17])
  10 [2:0]
-- < 4 [1:-1]
---- > 8 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([4, 8, 10, 14, 16, 17])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1025c6098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 97 steps

SAVING TEST AS failure.62478.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 4                                                                 # STEP 0
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
int2 = 3                                                                 # STEP 1
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
int0 = 3                                                                 # STEP 2
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
int3 = 17                                                                # STEP 3
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 5
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                        # STEP 6
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
int0 = 13                                                                # STEP 7
ACTION: int0 = 13 
int0 = 3 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 3]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 10
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 13]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 12
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 13
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 14
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 15
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1 == avl0                                                            # STEP 16
ACTION: avl1 == avl0 
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 3, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 18
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 13]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 19
ACTION: int2 = 10 
int2 = 3 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 20
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 10, 13]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 21
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.find(int0)                                                # STEP 22
ACTION: result = avl1.find(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 23
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([17, 10]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 25
ACTION: result = avl0.find(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int2 = 7                                                                # STEP 26
ACTION: int2 = 7 
int2 = 10 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 27
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 28
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 29
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl1.find(int3)                                                # STEP 30
ACTION: result = avl1.find(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 3                                                                # STEP 32
ACTION: int3 = 3 
int3 = 17 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 33
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int0)                                                # STEP 34
ACTION: result = avl1.find(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int1 = 16                                                               # STEP 35
ACTION: int1 = 16 
int1 = 4 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 36
ACTION: int2 = 19 
int2 = 7 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 37
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 17, 10]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 38
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 13]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 39
ACTION: result = avl1.find(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int1 = 3                                                                # STEP 40
ACTION: int1 = 3 
int1 = 16 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 41
ACTION: result = avl1.find(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 42
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 43
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 3, 13]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 13]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 45
ACTION: result = avl1.find(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 46
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 47
ACTION: result = avl0.find(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 48
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 15                                                               # STEP 49
ACTION: int3 = 15 
int3 = 3 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 50
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 51
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 52
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 53
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl1.find(int0)                                                # STEP 54
ACTION: result = avl1.find(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl0 == avl1                                                            # STEP 55
ACTION: avl0 == avl1 
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
result = avl1.find(int3)                                                # STEP 56
ACTION: result = avl1.find(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 57
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 58
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1 == avl1                                                            # STEP 59
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.delete(int2)                                                       # STEP 60
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 9                                                                # STEP 61
ACTION: int0 = 9 
int0 = 13 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 62
ACTION: int2 = 16 
int2 = 19 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl0 == avl1                                                            # STEP 63
ACTION: avl0 == avl1 
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
int3 = 19                                                               # STEP 64
ACTION: int3 = 19 
int3 = 15 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 65
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 66
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 67
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 68
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 10]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 69
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 4                                                                # STEP 70
ACTION: int3 = 4 
int3 = 19 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 71
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 72
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int0 = 14                                                               # STEP 73
ACTION: int0 = 14 
int0 = 9 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 74
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 4]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 75
ACTION: int3 = 4 
int3 = 4 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 76
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 77
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 17, 10]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 78
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 79
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([16, 17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 14, 16, 17]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 80
ACTION: int0 = 8 
int0 = 14 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 81
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 82
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 10, 14, 16, 17]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 83
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int0)                                                       # STEP 84
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([4, 10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 8, 10, 14, 16, 17]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 85
ACTION: int1 = 4 
int1 = 3 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
result = avl1.find(int0)                                                # STEP 86
ACTION: result = avl1.find(int0) 
int0 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 87
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.display()                                                          # STEP 88
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([4, 8, 10, 14, 16, 17]) : <type 'set'>
  10 [2:0]
-- < 4 [1:-1]
---- > 8 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([4, 8, 10, 14, 16, 17])
==================================================
int2 = 4                                                                # STEP 89
ACTION: int2 = 4 
int2 = 16 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 90
ACTION: int1 = 10 
int1 = 4 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 91
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([4, 8, 10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.find(int1)                                                # STEP 92
ACTION: result = avl0.find(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([4, 8, 10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.display()                                                          # STEP 93
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([4, 8, 10, 14, 16, 17]) : <type 'set'>
  10 [2:0]
-- < 4 [1:-1]
---- > 8 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([4, 8, 10, 14, 16, 17])
==================================================
avl0.delete(int2)                                                       # STEP 94
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([4, 8, 10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 10, 14, 16, 17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 95
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103249680> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 96
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1025c65f0> : <type 'instance'>
avl_REF0 = set([8, 10, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([10, 14, 16, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1033e3cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.27045850261 PERCENT COVERED
67.1019940376 TOTAL RUNTIME
5 EXECUTED
366 TOTAL TEST OPERATIONS
19.3043150902 TIME SPENT EXECUTING TEST OPERATIONS
0.0394415855408 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
19.3378517628 TIME SPENT CHECKING PROPERTIES
38.642166853 TOTAL TIME SPENT RUNNING SUT
0.00350713729858 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 6                                                                 # STEP 0
int0 = 11                                                                # STEP 1
int2 = 10                                                                # STEP 2
int1 = 17                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
result = avl2.inorder()                                                  # STEP 5
avl2.insert(int1)                                                        # STEP 6
avl2.delete(int3)                                                        # STEP 7
avl2.insert(int3)                                                        # STEP 8
avl2.insert(int2)                                                        # STEP 9
result = avl2.find(int2)                                                # STEP 10
avl2.insert(int0)                                                       # STEP 11
avl2.delete(int2)                                                       # STEP 12
result = avl2.find(int2)                                                # STEP 13
avl2.insert(int0)                                                       # STEP 14
avl2.delete(int0)                                                       # STEP 15
result = avl2.find(int3)                                                # STEP 16
avl2.delete(int2)                                                       # STEP 17
avl2.insert(int3)                                                       # STEP 18
avl2.delete(int0)                                                       # STEP 19
avl2.insert(int1)                                                       # STEP 20
int0 = 13                                                               # STEP 21
avl2.delete(int1)                                                       # STEP 22
avl2.delete(int1)                                                       # STEP 23
result = avl2.inorder()                                                 # STEP 24
int1 = 15                                                               # STEP 25
avl2.insert(int1)                                                       # STEP 26
avl2.delete(int0)                                                       # STEP 27
result = avl2.find(int2)                                                # STEP 28
avl2.insert(int1)                                                       # STEP 29
avl2.insert(int1)                                                       # STEP 30
result = avl2.find(int0)                                                # STEP 31
avl2.delete(int3)                                                       # STEP 32
result = avl2.inorder()                                                 # STEP 33
avl2.insert(int2)                                                       # STEP 34
avl2.insert(int2)                                                       # STEP 35
avl2.delete(int0)                                                       # STEP 36
avl2.delete(int3)                                                       # STEP 37
int1 = 14                                                               # STEP 38
avl2.insert(int3)                                                       # STEP 39
avl2.insert(int2)                                                       # STEP 40
avl2.delete(int1)                                                       # STEP 41
avl2.delete(int2)                                                       # STEP 42
avl2.delete(int0)                                                       # STEP 43
result = avl2.inorder()                                                 # STEP 44
avl2.insert(int0)                                                       # STEP 45
avl2.insert(int0)                                                       # STEP 46
avl2.insert(int3)                                                       # STEP 47
avl2.insert(int3)                                                       # STEP 48
avl2.insert(int0)                                                       # STEP 49
avl2.insert(int0)                                                       # STEP 50
avl2.delete(int3)                                                       # STEP 51
avl2.delete(int2)                                                       # STEP 52
result = avl2.find(int0)                                                # STEP 53
int1 = 3                                                                # STEP 54
avl2.insert(int3)                                                       # STEP 55
avl2.delete(int1)                                                       # STEP 56
result = avl2.find(int1)                                                # STEP 57
avl2.delete(int1)                                                       # STEP 58
avl2.insert(int0)                                                       # STEP 59
avl1 = avl.AVLTree()                                                    # STEP 60
int0 = 5                                                                # STEP 61
avl1.insert(int0)                                                       # STEP 62
result = avl1.inorder()                                                 # STEP 63
avl1.delete(int2)                                                       # STEP 64
int2 = 12                                                               # STEP 65
avl2.delete(int1)                                                       # STEP 66
avl2.insert(int1)                                                       # STEP 67
avl2.insert(int3)                                                       # STEP 68
avl2 = avl.AVLTree()                                                    # STEP 69
avl2.delete(int2)                                                       # STEP 70
int0 = 19                                                               # STEP 71
int2 = 17                                                               # STEP 72
int3 = 3                                                                # STEP 73
avl2.delete(int3)                                                       # STEP 74
result = avl1.find(int0)                                                # STEP 75
avl1.insert(int1)                                                       # STEP 76
result = avl1.find(int0)                                                # STEP 77
int1 = 11                                                               # STEP 78
int0 = 14                                                               # STEP 79
avl1.insert(int1)                                                       # STEP 80
avl2.delete(int0)                                                       # STEP 81
avl2.delete(int3)                                                       # STEP 82
avl1.insert(int0)                                                       # STEP 83
avl1.delete(int3)                                                       # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026311b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
avl1 = avl.AVLTree()                                                     # STEP 0
int3 = 3                                                                 # STEP 1
result = avl1.find(int3)                                                 # STEP 2
int2 = 8                                                                 # STEP 3
avl1.delete(int2)                                                        # STEP 4
avl1.delete(int3)                                                        # STEP 5
result = avl1.inorder()                                                  # STEP 6
avl1.insert(int2)                                                        # STEP 7
avl1.insert(int3)                                                        # STEP 8
int1 = 8                                                                 # STEP 9
avl1.insert(int2)                                                       # STEP 10
avl1.delete(int2)                                                       # STEP 11
avl1.delete(int2)                                                       # STEP 12
avl1.delete(int1)                                                       # STEP 13
int0 = 3                                                                # STEP 14
avl1.insert(int3)                                                       # STEP 15
avl1.insert(int1)                                                       # STEP 16
avl1.delete(int2)                                                       # STEP 17
avl1.delete(int3)                                                       # STEP 18
int2 = 5                                                                # STEP 19
avl1.insert(int2)                                                       # STEP 20
result = avl1.inorder()                                                 # STEP 21
avl1.insert(int3)                                                       # STEP 22
avl1.insert(int1)                                                       # STEP 23
avl1.insert(int0)                                                       # STEP 24
avl1.insert(int3)                                                       # STEP 25
avl1.delete(int3)                                                       # STEP 26
avl1.delete(int1)                                                       # STEP 27
result = avl1.inorder()                                                 # STEP 28
avl1.insert(int0)                                                       # STEP 29
result = avl1.find(int2)                                                # STEP 30
avl1.delete(int1)                                                       # STEP 31
avl1.insert(int0)                                                       # STEP 32
int3 = 7                                                                # STEP 33
avl1.delete(int2)                                                       # STEP 34
avl1.insert(int1)                                                       # STEP 35
result = avl1.find(int3)                                                # STEP 36
int1 = 10                                                               # STEP 37
avl1.insert(int3)                                                       # STEP 38
avl1.insert(int0)                                                       # STEP 39
avl1.insert(int0)                                                       # STEP 40
avl1.delete(int0)                                                       # STEP 41
int0 = 6                                                                # STEP 42
avl1.delete(int3)                                                       # STEP 43
avl1.insert(int3)                                                       # STEP 44
avl1.delete(int1)                                                       # STEP 45
avl1.insert(int0)                                                       # STEP 46
avl1 == avl1                                                            # STEP 47
int3 = 14                                                               # STEP 48
avl1.delete(int1)                                                       # STEP 49
avl1.insert(int0)                                                       # STEP 50
avl1.delete(int0)                                                       # STEP 51
avl1.delete(int2)                                                       # STEP 52
result = avl1.find(int0)                                                # STEP 53
avl1.insert(int0)                                                       # STEP 54
avl1.insert(int2)                                                       # STEP 55
avl1.delete(int1)                                                       # STEP 56
avl1.delete(int0)                                                       # STEP 57
avl1.delete(int3)                                                       # STEP 58
avl1.insert(int2)                                                       # STEP 59
int1 = 16                                                               # STEP 60
avl1.insert(int2)                                                       # STEP 61
int2 = 16                                                               # STEP 62
int3 = 9                                                                # STEP 63
int0 = 17                                                               # STEP 64
avl1.insert(int3)                                                       # STEP 65
result = avl1.inorder()                                                 # STEP 66
int3 = 10                                                               # STEP 67
result = avl1.find(int3)                                                # STEP 68
avl1.insert(int0)                                                       # STEP 69
avl1.delete(int1)                                                       # STEP 70
avl1 == avl1                                                            # STEP 71
int3 = 11                                                               # STEP 72
int0 = 6                                                                # STEP 73
avl1.delete(int3)                                                       # STEP 74
int3 = 1                                                                # STEP 75
int1 = 7                                                                # STEP 76
avl1.delete(int2)                                                       # STEP 77
avl1.insert(int1)                                                       # STEP 78
result = avl1.inorder()                                                 # STEP 79
avl1.insert(int3)                                                       # STEP 80
avl1.insert(int2)                                                       # STEP 81
avl1.insert(int2)                                                       # STEP 82
avl1.delete(int3)                                                       # STEP 83
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104919710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int1 = 4                                                                 # STEP 0
int2 = 3                                                                 # STEP 1
int0 = 3                                                                 # STEP 2
int3 = 17                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int0)                                                        # STEP 5
avl0.insert(int2)                                                        # STEP 6
int0 = 13                                                                # STEP 7
avl0.delete(int0)                                                        # STEP 8
avl0.insert(int3)                                                        # STEP 9
avl0.delete(int3)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
result = avl0.inorder()                                                 # STEP 12
avl1 = avl.AVLTree()                                                    # STEP 13
avl1.delete(int3)                                                       # STEP 14
avl1.delete(int2)                                                       # STEP 15
avl1 == avl0                                                            # STEP 16
avl0.insert(int3)                                                       # STEP 17
avl0.delete(int2)                                                       # STEP 18
int2 = 10                                                               # STEP 19
avl0.insert(int2)                                                       # STEP 20
avl1.delete(int3)                                                       # STEP 21
result = avl1.find(int0)                                                # STEP 22
avl0.delete(int1)                                                       # STEP 23
avl0.delete(int0)                                                       # STEP 24
result = avl0.find(int0)                                                # STEP 25
int2 = 7                                                                # STEP 26
avl1.delete(int0)                                                       # STEP 27
avl1.insert(int0)                                                       # STEP 28
avl0.delete(int2)                                                       # STEP 29
result = avl1.find(int3)                                                # STEP 30
avl1.delete(int1)                                                       # STEP 31
int3 = 3                                                                # STEP 32
avl1.delete(int2)                                                       # STEP 33
result = avl1.find(int0)                                                # STEP 34
int1 = 16                                                               # STEP 35
int2 = 19                                                               # STEP 36
avl0.insert(int1)                                                       # STEP 37
avl1.insert(int1)                                                       # STEP 38
result = avl1.find(int0)                                                # STEP 39
int1 = 3                                                                # STEP 40
result = avl1.find(int3)                                                # STEP 41
avl1.delete(int2)                                                       # STEP 42
avl1.insert(int3)                                                       # STEP 43
avl1.delete(int1)                                                       # STEP 44
result = avl1.find(int2)                                                # STEP 45
avl1.delete(int0)                                                       # STEP 46
result = avl0.find(int2)                                                # STEP 47
avl0.delete(int1)                                                       # STEP 48
int3 = 15                                                               # STEP 49
avl1.insert(int2)                                                       # STEP 50
avl1.delete(int1)                                                       # STEP 51
avl0.delete(int0)                                                       # STEP 52
avl0.delete(int1)                                                       # STEP 53
result = avl1.find(int0)                                                # STEP 54
avl0 == avl1                                                            # STEP 55
result = avl1.find(int3)                                                # STEP 56
avl1.delete(int3)                                                       # STEP 57
avl0.delete(int2)                                                       # STEP 58
avl1 == avl1                                                            # STEP 59
avl0.delete(int2)                                                       # STEP 60
int0 = 9                                                                # STEP 61
int2 = 16                                                               # STEP 62
avl0 == avl1                                                            # STEP 63
int3 = 19                                                               # STEP 64
avl1.delete(int1)                                                       # STEP 65
avl1.delete(int0)                                                       # STEP 66
avl1.delete(int3)                                                       # STEP 67
avl0.delete(int2)                                                       # STEP 68
avl0.delete(int0)                                                       # STEP 69
int3 = 4                                                                # STEP 70
avl1.delete(int3)                                                       # STEP 71
avl1.insert(int2)                                                       # STEP 72
int0 = 14                                                               # STEP 73
avl1.insert(int3)                                                       # STEP 74
int3 = 4                                                                # STEP 75
avl1.delete(int3)                                                       # STEP 76
avl0.insert(int2)                                                       # STEP 77
avl0.delete(int1)                                                       # STEP 78
avl0.insert(int0)                                                       # STEP 79
int0 = 8                                                                # STEP 80
avl0.delete(int1)                                                       # STEP 81
avl0.insert(int3)                                                       # STEP 82
result = avl1.inorder()                                                 # STEP 83
avl0.insert(int0)                                                       # STEP 84
int1 = 4                                                                # STEP 85
result = avl1.find(int0)                                                # STEP 86
avl1.delete(int1)                                                       # STEP 87
avl0.display()                                                          # STEP 88
int2 = 4                                                                # STEP 89
int1 = 10                                                               # STEP 90
avl0.insert(int3)                                                       # STEP 91
result = avl0.find(int1)                                                # STEP 92
avl0.display()                                                          # STEP 93
avl0.delete(int2)                                                       # STEP 94
avl1.delete(int2)                                                       # STEP 95
avl0.delete(int0)                                                       # STEP 96
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1033e3cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
