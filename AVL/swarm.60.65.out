Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.512.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101b95fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 78 steps

SAVING TEST AS failure.512.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 8                                                                 # STEP 0
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 1
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 2
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int3 = 4                                                                 # STEP 3
ACTION: int3 = 4 
int3 = None : <type 'NoneType'>
=> int3 = 4 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 5
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                        # STEP 6
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 5                                                                 # STEP 7
ACTION: int0 = 5 
int0 = 14 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 8                                                                 # STEP 9
ACTION: int1 = 8 
int1 = 8 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 10
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 11
ACTION: int3 = 13 
int3 = 4 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 12
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 13
ACTION: int1 = 20 
int1 = 8 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 14
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 5]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 15
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 16
ACTION: int0 = 18 
int0 = 5 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 17
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 18, 5]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 19
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl1.insert(int3)                                                       # STEP 20
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 18, 5, 13]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 21
ACTION: int3 = 20 
int3 = 13 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 4                                                                # STEP 22
ACTION: int0 = 4 
int0 = 18 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 23
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([8, 18, 5]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 24
ACTION: int2 = 12 
int2 = 13 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 25
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 26
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 27
ACTION: int3 = 1 
int3 = 20 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 28
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 29
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 30
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 31
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2 == avl0                                                            # STEP 32
ACTION: avl2 == avl0 
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF0 
==================================================
int0 = 2                                                                # STEP 33
ACTION: int0 = 2 
int0 = 4 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 34
ACTION: int3 = 20 
int3 = 1 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 35
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([20, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 36
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 15                                                               # STEP 37
ACTION: int3 = 15 
int3 = 20 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 38
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 39
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([20, 5]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 40
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 2                                                                # STEP 41
ACTION: int1 = 2 
int1 = 20 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2 == avl1                                                            # STEP 42
ACTION: avl2 == avl1 
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF2 = set([20, 5]) : <type 'set'>
avl_REF1 = set([8, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
avl1.insert(int1)                                                       # STEP 43
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 18, 2, 5]) : <type 'set'>
==================================================
int1 = 5                                                                # STEP 44
ACTION: int1 = 5 
int1 = 2 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 45
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 18, 2, 5, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 46
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 47
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 20, 5]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 48
ACTION: int0 = 11 
int0 = 2 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int1 = 1                                                                # STEP 49
ACTION: int1 = 1 
int1 = 5 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 50
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl2.insert(int0)                                                       # STEP 51
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([2, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 11, 20, 5]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 52
ACTION: int3 = 16 
int3 = 15 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 53
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([2, 11, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0 == avl1                                                            # STEP 54
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
avl_REF1 = set([8, 18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
int0 = 15                                                               # STEP 55
ACTION: int0 = 15 
int0 = 11 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 56
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 57
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 58
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 59
ACTION: int2 = 8 
int2 = 12 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 60
ACTION: int1 = 9 
int1 = 1 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 61
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl1.insert(int1)                                                       # STEP 62
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([8, 18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 5, 8, 9, 15, 18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 63
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 5                                                                # STEP 64
ACTION: int3 = 5 
int3 = 16 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 65
ACTION: int1 = 13 
int1 = 9 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 66
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([2, 5, 8, 9, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 67
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 18                                                               # STEP 68
ACTION: int3 = 18 
int3 = 5 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 69
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101aff3b0> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 8]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 70
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([2, 5, 8, 9, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int0 = 1                                                                # STEP 71
ACTION: int0 = 1 
int0 = 15 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 72
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([2, 11, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 2, 11, 20, 5]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 73
ACTION: int2 = 19 
int2 = 8 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 74
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([8, 2, 11, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 75
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101b0e680> : <type 'instance'>
avl_REF1 = set([2, 5, 8, 9, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 2                                                                # STEP 76
ACTION: int2 = 2 
int2 = 19 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 77
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x101a408c0> : <type 'instance'>
avl_REF2 = set([8, 2, 11, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([8, 11, 20, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105958f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #2 (0:00:30.019229) Fri Apr 28 06:31:43 2017 [ 134 stmts 179 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105974200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 75 steps

SAVING TEST AS failure.512.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 3                                                                 # STEP 0
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
int0 = 14                                                                # STEP 1
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 2
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int1 = 16                                                                # STEP 3
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 5
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                        # STEP 6
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([13]) : <type 'set'>
==================================================
int2 = 12                                                                # STEP 7
ACTION: int2 = 12 
int2 = 13 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.delete(int0)                                                        # STEP 8
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 12                                                                # STEP 9
ACTION: int0 = 12 
int0 = 14 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 10
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 11
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 13]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 12
ACTION: int1 = 11 
int1 = 16 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int2 = 7                                                                # STEP 13
ACTION: int2 = 7 
int2 = 12 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 14
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 9                                                                # STEP 15
ACTION: int3 = 9 
int3 = 3 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 16
ACTION: result = avl2.find(int2) 
int2 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int2 = 20                                                               # STEP 17
ACTION: int2 = 20 
int2 = 7 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 18
ACTION: result = avl2.find(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
result = avl2.find(int3)                                                # STEP 19
ACTION: result = avl2.find(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
result = avl2.find(int0)                                                # STEP 20
ACTION: result = avl2.find(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int3 = 6                                                                # STEP 21
ACTION: int3 = 6 
int3 = 9 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 22
ACTION: int0 = 1 
int0 = 12 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 23
ACTION: result = avl2.find(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 24
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 25
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 16                                                               # STEP 26
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 27
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 6                                                                # STEP 28
ACTION: int2 = 6 
int2 = 20 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int1 = 14                                                               # STEP 29
ACTION: int1 = 14 
int1 = 11 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 30
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 31
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 32
ACTION: int1 = 9 
int1 = 14 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 33
ACTION: int2 = 8 
int2 = 6 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 34
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl2.find(int2)                                                # STEP 36
ACTION: result = avl2.find(int2) 
int2 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int3 = 13                                                               # STEP 37
ACTION: int3 = 13 
int3 = 16 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 7                                                                # STEP 38
ACTION: int2 = 7 
int2 = 8 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 39
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 6]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 41
ACTION: int2 = 16 
int2 = 7 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 42
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 9, 13]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 43
ACTION: int1 = 11 
int1 = 9 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 44
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x101f600e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([9, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 46
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f600e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 16                                                               # STEP 47
ACTION: int2 = 16 
int2 = 16 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 48
ACTION: result = avl0.find(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f600e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 49
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([9, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 17                                                               # STEP 50
ACTION: int3 = 17 
int3 = 13 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 51
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x10597fa28> : <type 'instance'>
avl_REF1 = set([9, 6]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x101f3f320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 52
ACTION: result = avl2.find(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 9, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int2 = 1                                                                # STEP 53
ACTION: int2 = 1 
int2 = 16 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
int1 = 1                                                                # STEP 54
ACTION: int1 = 1 
int1 = 11 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 55
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f3f320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl1.find(int3)                                                # STEP 56
ACTION: result = avl1.find(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f3f320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int3 = 18                                                               # STEP 57
ACTION: int3 = 18 
int3 = 17 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 58
ACTION: int0 = 10 
int0 = 1 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 59
ACTION: result = avl2.find(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 9, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 13                                                               # STEP 60
ACTION: int3 = 13 
int3 = 18 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 61
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 9, 10, 13]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 62
ACTION: int0 = 9 
int0 = 10 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 63
ACTION: result = avl0.find(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f600e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 64
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f3f320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 65
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f600e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 66
ACTION: int0 = 9 
int0 = 9 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 67
ACTION: int1 = 5 
int1 = 1 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 68
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f600e0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 13                                                               # STEP 69
ACTION: int1 = 13 
int1 = 5 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 70
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f3f320> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 1]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 71
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 9, 10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([16, 9, 10, 13, 1]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 72
ACTION: int2 = 3 
int2 = 1 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 73
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f3f320> : <type 'instance'>
avl_REF1 = set([9, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 3, 1]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 74
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105974488> : <type 'instance'>
avl_REF2 = set([16, 9, 10, 13, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([16, 9, 10, 1]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f67998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105836878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 85 steps

SAVING TEST AS failure.512.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 15                                                                # STEP 0
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int0 = 2                                                                 # STEP 1
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
int1 = 14                                                                # STEP 2
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
int3 = 3                                                                 # STEP 3
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl2 == avl2                                                             # STEP 6
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2 == avl2                                                             # STEP 7
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int1)                                                        # STEP 8
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 14]) : <type 'set'>
==================================================
int1 = 11                                                                # STEP 9
ACTION: int1 = 11 
int1 = 14 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 10
ACTION: int0 = 1 
int0 = 2 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 11
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 14, 15]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 12
ACTION: int2 = 20 
int2 = 15 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 13
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 3, 14, 15]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 14
ACTION: int3 = 17 
int3 = 3 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 15
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 11                                                               # STEP 16
ACTION: int3 = 11 
int3 = 17 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 17
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 8                                                                # STEP 18
ACTION: int1 = 8 
int1 = 11 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 19
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([11, 2, 3, 14, 15]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 20
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 21
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 12                                                               # STEP 22
ACTION: int1 = 12 
int1 = 8 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 23
ACTION: int3 = 1 
int3 = 11 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([11, 2, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 19                                                               # STEP 25
ACTION: int3 = 19 
int3 = 1 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 26
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([11, 2, 3, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 3, 11, 12, 14, 15]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 27
ACTION: int1 = 3 
int1 = 12 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 28
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 12                                                               # STEP 29
ACTION: int3 = 12 
int3 = 19 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 30
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 31
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl2 == avl1                                                            # STEP 32
ACTION: avl2 == avl1 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF2 = set([2, 3, 11, 12, 14, 15]) : <type 'set'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
avl1.insert(int3)                                                       # STEP 33
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 34
ACTION: int3 = 6 
int3 = 12 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 35
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([20, 12]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 36
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int2 = 4                                                                # STEP 38
ACTION: int2 = 4 
int2 = 20 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 39
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0 == avl1                                                            # STEP 40
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
avl_REF1 = set([20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl2.delete(int0)                                                       # STEP 41
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 9                                                                # STEP 42
ACTION: int0 = 9 
int0 = 1 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 43
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
==================================================
avl0 == avl1                                                            # STEP 44
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
avl_REF1 = set([20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl2 == avl2                                                            # STEP 45
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl1 == avl2                                                            # STEP 47
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF1 = set([20, 12]) : <type 'set'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
int2 = 10                                                               # STEP 48
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 49
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl1.insert(int1)                                                       # STEP 50
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20, 3, 12]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 51
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 52
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2 == avl1                                                            # STEP 53
ACTION: avl2 == avl1 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
avl_REF1 = set([20, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
int1 = 11                                                               # STEP 54
ACTION: int1 = 11 
int1 = 3 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int0 = 3                                                                # STEP 55
ACTION: int0 = 3 
int0 = 9 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl1 == avl2                                                            # STEP 56
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF1 = set([20, 3, 12]) : <type 'set'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl0.delete(int3)                                                       # STEP 57
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 58
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 4]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 59
ACTION: int2 = 6 
int2 = 10 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 60
ACTION: int3 = 20 
int3 = 16 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 61
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([20, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2 == avl2                                                            # STEP 62
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.insert(int2)                                                       # STEP 63
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([10, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 4, 6]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 64
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 3, 4, 6, 11, 12, 14, 15]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 65
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([10, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([20, 10, 4, 6]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 66
ACTION: int3 = 19 
int3 = 20 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
int2 = 9                                                                # STEP 67
ACTION: int2 = 9 
int2 = 6 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 68
ACTION: int1 = 2 
int1 = 11 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 69
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([20, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.delete(int0)                                                       # STEP 70
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([20, 10, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 71
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([20, 10, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 18                                                               # STEP 72
ACTION: int1 = 18 
int1 = 2 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 73
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl_REF0 = set([20, 10, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 10, 4, 6, 9]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 74
ACTION: int2 = 11 
int2 = 9 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 75
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([20, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([19, 20, 3, 12]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 76
ACTION: int3 = 5 
int3 = 19 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 77
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF1 = set([19, 20, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([19, 20, 3, 12, 5]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 78
ACTION: int3 = 13 
int3 = 5 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 79
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 6, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 3, 4, 6, 11, 12, 14, 15, 18]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 80
ACTION: int1 = 4 
int1 = 18 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0 == avl2                                                            # STEP 81
ACTION: avl0 == avl2 
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF0 = set([20, 10, 4, 6, 9]) : <type 'set'>
avl_REF2 = set([2, 3, 4, 6, 11, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF2 
==================================================
int0 = 18                                                               # STEP 82
ACTION: int0 = 18 
int0 = 3 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl0 == avl1                                                            # STEP 83
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x101f13b90> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x101f5d098> : <type 'instance'>
avl_REF0 = set([20, 10, 4, 6, 9]) : <type 'set'>
avl_REF1 = set([19, 20, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl2.delete(int2)                                                       # STEP 84
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10597c7a0> : <type 'instance'>
avl_REF2 = set([2, 3, 4, 6, 11, 12, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 3, 4, 6, 12, 14, 15, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f154d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 42
STOPPING TESTING DUE TO TIMEOUT
7.9742110621 PERCENT COVERED
60.2064909935 TOTAL RUNTIME
6 EXECUTED
480 TOTAL TEST OPERATIONS
19.7906093597 TIME SPENT EXECUTING TEST OPERATIONS
0.0158016681671 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
19.9683046341 TIME SPENT CHECKING PROPERTIES
39.7589139938 TOTAL TIME SPENT RUNNING SUT
0.00381875038147 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 8                                                                 # STEP 0
int2 = 13                                                                # STEP 1
int0 = 14                                                                # STEP 2
int3 = 4                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int3)                                                        # STEP 5
avl2.delete(int0)                                                        # STEP 6
int0 = 5                                                                 # STEP 7
avl2.delete(int1)                                                        # STEP 8
int1 = 8                                                                 # STEP 9
avl1 = avl.AVLTree()                                                    # STEP 10
int3 = 13                                                               # STEP 11
avl1.insert(int1)                                                       # STEP 12
int1 = 20                                                               # STEP 13
avl1.insert(int0)                                                       # STEP 14
avl2.insert(int0)                                                       # STEP 15
int0 = 18                                                               # STEP 16
avl1.delete(int0)                                                       # STEP 17
avl1.insert(int0)                                                       # STEP 18
avl2 == avl2                                                            # STEP 19
avl1.insert(int3)                                                       # STEP 20
int3 = 20                                                               # STEP 21
int0 = 4                                                                # STEP 22
avl1.delete(int2)                                                       # STEP 23
int2 = 12                                                               # STEP 24
avl1.delete(int3)                                                       # STEP 25
avl0 = avl.AVLTree()                                                    # STEP 26
int3 = 1                                                                # STEP 27
avl0.delete(int0)                                                       # STEP 28
avl0.insert(int3)                                                       # STEP 29
avl0.delete(int0)                                                       # STEP 30
avl0.delete(int3)                                                       # STEP 31
avl2 == avl0                                                            # STEP 32
int0 = 2                                                                # STEP 33
int3 = 20                                                               # STEP 34
avl2.insert(int3)                                                       # STEP 35
avl1.delete(int3)                                                       # STEP 36
int3 = 15                                                               # STEP 37
avl2.delete(int1)                                                       # STEP 38
avl2.insert(int1)                                                       # STEP 39
avl0.delete(int1)                                                       # STEP 40
int1 = 2                                                                # STEP 41
avl2 == avl1                                                            # STEP 42
avl1.insert(int1)                                                       # STEP 43
int1 = 5                                                                # STEP 44
avl1.insert(int3)                                                       # STEP 45
avl0.delete(int1)                                                       # STEP 46
avl2.insert(int0)                                                       # STEP 47
int0 = 11                                                               # STEP 48
int1 = 1                                                                # STEP 49
avl1 == avl1                                                            # STEP 50
avl2.insert(int0)                                                       # STEP 51
int3 = 16                                                               # STEP 52
avl2.delete(int3)                                                       # STEP 53
avl0 == avl1                                                            # STEP 54
int0 = 15                                                               # STEP 55
avl1.delete(int1)                                                       # STEP 56
avl1.delete(int2)                                                       # STEP 57
avl0.insert(int3)                                                       # STEP 58
int2 = 8                                                                # STEP 59
int1 = 9                                                                # STEP 60
avl0 == avl0                                                            # STEP 61
avl1.insert(int1)                                                       # STEP 62
avl0.insert(int3)                                                       # STEP 63
int3 = 5                                                                # STEP 64
int1 = 13                                                               # STEP 65
avl1.insert(int0)                                                       # STEP 66
avl0.delete(int3)                                                       # STEP 67
int3 = 18                                                               # STEP 68
avl0.insert(int2)                                                       # STEP 69
avl1 == avl1                                                            # STEP 70
int0 = 1                                                                # STEP 71
avl2.insert(int2)                                                       # STEP 72
int2 = 19                                                               # STEP 73
avl2.delete(int0)                                                       # STEP 74
avl1.delete(int2)                                                       # STEP 75
int2 = 2                                                                # STEP 76
avl2.delete(int2)                                                       # STEP 77
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105958f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int3 = 3                                                                 # STEP 0
int0 = 14                                                                # STEP 1
int2 = 13                                                                # STEP 2
int1 = 16                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int2)                                                        # STEP 5
avl2.insert(int2)                                                        # STEP 6
int2 = 12                                                                # STEP 7
avl2.delete(int0)                                                        # STEP 8
int0 = 12                                                                # STEP 9
avl2.delete(int2)                                                       # STEP 10
avl2.insert(int1)                                                       # STEP 11
int1 = 11                                                               # STEP 12
int2 = 7                                                                # STEP 13
avl2.delete(int3)                                                       # STEP 14
int3 = 9                                                                # STEP 15
result = avl2.find(int2)                                                # STEP 16
int2 = 20                                                               # STEP 17
result = avl2.find(int3)                                                # STEP 18
result = avl2.find(int3)                                                # STEP 19
result = avl2.find(int0)                                                # STEP 20
int3 = 6                                                                # STEP 21
int0 = 1                                                                # STEP 22
result = avl2.find(int3)                                                # STEP 23
avl1 = avl.AVLTree()                                                    # STEP 24
avl2.delete(int2)                                                       # STEP 25
int3 = 16                                                               # STEP 26
avl2.delete(int1)                                                       # STEP 27
int2 = 6                                                                # STEP 28
int1 = 14                                                               # STEP 29
avl1.delete(int1)                                                       # STEP 30
avl1.insert(int2)                                                       # STEP 31
int1 = 9                                                                # STEP 32
int2 = 8                                                                # STEP 33
result = avl1.inorder()                                                 # STEP 34
avl1.delete(int3)                                                       # STEP 35
result = avl2.find(int2)                                                # STEP 36
int3 = 13                                                               # STEP 37
int2 = 7                                                                # STEP 38
avl1.delete(int2)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
int2 = 16                                                               # STEP 41
avl2.insert(int1)                                                       # STEP 42
int1 = 11                                                               # STEP 43
avl0 = avl.AVLTree()                                                    # STEP 44
avl1.delete(int1)                                                       # STEP 45
avl0.delete(int2)                                                       # STEP 46
int2 = 16                                                               # STEP 47
result = avl0.find(int1)                                                # STEP 48
avl1.delete(int3)                                                       # STEP 49
int3 = 17                                                               # STEP 50
avl1 = avl.AVLTree()                                                    # STEP 51
result = avl2.find(int2)                                                # STEP 52
int2 = 1                                                                # STEP 53
int1 = 1                                                                # STEP 54
avl1.delete(int0)                                                       # STEP 55
result = avl1.find(int3)                                                # STEP 56
int3 = 18                                                               # STEP 57
int0 = 10                                                               # STEP 58
result = avl2.find(int3)                                                # STEP 59
int3 = 13                                                               # STEP 60
avl2.insert(int0)                                                       # STEP 61
int0 = 9                                                                # STEP 62
result = avl0.find(int1)                                                # STEP 63
avl1.insert(int0)                                                       # STEP 64
avl0.insert(int2)                                                       # STEP 65
int0 = 9                                                                # STEP 66
int1 = 5                                                                # STEP 67
avl0.delete(int1)                                                       # STEP 68
int1 = 13                                                               # STEP 69
avl1.insert(int2)                                                       # STEP 70
avl2.insert(int2)                                                       # STEP 71
int2 = 3                                                                # STEP 72
avl1.insert(int2)                                                       # STEP 73
avl2.delete(int1)                                                       # STEP 74
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f67998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int2 = 15                                                                # STEP 0
int0 = 2                                                                 # STEP 1
int1 = 14                                                                # STEP 2
int3 = 3                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int0)                                                        # STEP 5
avl2 == avl2                                                             # STEP 6
avl2 == avl2                                                             # STEP 7
avl2.insert(int1)                                                        # STEP 8
int1 = 11                                                                # STEP 9
int0 = 1                                                                # STEP 10
avl2.insert(int2)                                                       # STEP 11
int2 = 20                                                               # STEP 12
avl2.insert(int3)                                                       # STEP 13
int3 = 17                                                               # STEP 14
avl2.delete(int3)                                                       # STEP 15
int3 = 11                                                               # STEP 16
avl2.delete(int1)                                                       # STEP 17
int1 = 8                                                                # STEP 18
avl2.insert(int3)                                                       # STEP 19
avl1 = avl.AVLTree()                                                    # STEP 20
avl1.delete(int1)                                                       # STEP 21
int1 = 12                                                               # STEP 22
int3 = 1                                                                # STEP 23
avl2.delete(int3)                                                       # STEP 24
int3 = 19                                                               # STEP 25
avl2.insert(int1)                                                       # STEP 26
int1 = 3                                                                # STEP 27
avl2.delete(int3)                                                       # STEP 28
int3 = 12                                                               # STEP 29
avl0 = avl.AVLTree()                                                    # STEP 30
avl0 == avl0                                                            # STEP 31
avl2 == avl1                                                            # STEP 32
avl1.insert(int3)                                                       # STEP 33
int3 = 6                                                                # STEP 34
avl1.insert(int2)                                                       # STEP 35
avl1.delete(int3)                                                       # STEP 36
avl1.delete(int3)                                                       # STEP 37
int2 = 4                                                                # STEP 38
int3 = 16                                                               # STEP 39
avl0 == avl1                                                            # STEP 40
avl2.delete(int0)                                                       # STEP 41
int0 = 9                                                                # STEP 42
avl2.insert(int2)                                                       # STEP 43
avl0 == avl1                                                            # STEP 44
avl2 == avl2                                                            # STEP 45
avl0.insert(int2)                                                       # STEP 46
avl1 == avl2                                                            # STEP 47
int2 = 10                                                               # STEP 48
avl2 == avl2                                                            # STEP 49
avl1.insert(int1)                                                       # STEP 50
avl2.delete(int0)                                                       # STEP 51
avl0.delete(int1)                                                       # STEP 52
avl2 == avl1                                                            # STEP 53
int1 = 11                                                               # STEP 54
int0 = 3                                                                # STEP 55
avl1 == avl2                                                            # STEP 56
avl0.delete(int3)                                                       # STEP 57
avl0.insert(int2)                                                       # STEP 58
int2 = 6                                                                # STEP 59
int3 = 20                                                               # STEP 60
avl1.delete(int1)                                                       # STEP 61
avl2 == avl2                                                            # STEP 62
avl0.insert(int2)                                                       # STEP 63
avl2.insert(int2)                                                       # STEP 64
avl0.insert(int3)                                                       # STEP 65
int3 = 19                                                               # STEP 66
int2 = 9                                                                # STEP 67
int1 = 2                                                                # STEP 68
avl1 == avl1                                                            # STEP 69
avl0.delete(int0)                                                       # STEP 70
avl0.delete(int1)                                                       # STEP 71
int1 = 18                                                               # STEP 72
avl0.insert(int2)                                                       # STEP 73
int2 = 11                                                               # STEP 74
avl1.insert(int3)                                                       # STEP 75
int3 = 5                                                                # STEP 76
avl1.insert(int3)                                                       # STEP 77
int3 = 13                                                               # STEP 78
avl2.insert(int1)                                                       # STEP 79
int1 = 4                                                                # STEP 80
avl0 == avl2                                                            # STEP 81
int0 = 18                                                               # STEP 82
avl0 == avl1                                                            # STEP 83
avl2.delete(int2)                                                       # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f154d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
200 BRANCHES COVERED
150 STATEMENTS COVERED
