Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62326.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  9 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
set([5, 6, 9, 11, 12, 15])
  9 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
set([5, 6, 9, 11, 12, 15])
  9 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 12 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
set([5, 6, 9, 11, 12, 15])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10319d638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 68 steps

SAVING TEST AS failure.62326.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 3                                                                 # STEP 0
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 12                                                                # STEP 2
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
result = avl0.inorder()                                                  # STEP 3
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                  # STEP 4
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                        # STEP 5
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                        # STEP 7
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 9
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 12]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 12
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 13
ACTION: result = avl0.find(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 12]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 15
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int1)                                                # STEP 18
ACTION: result = avl0.find(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 19
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 21
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 22
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 23
ACTION: int1 = 16 
int1 = 12 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 24
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 12]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 25
ACTION: int0 = 15 
int0 = 3 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 9                                                                # STEP 26
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 3, 12]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 28
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([16, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl0                                                            # STEP 29
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([16, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([16, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 12]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 31
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 32
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 33
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 3, 12]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 34
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 35
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int1)                                                # STEP 36
ACTION: result = avl0.find(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int3 = 4                                                                # STEP 37
ACTION: int3 = 4 
int3 = None : <type 'NoneType'>
=> int3 = 4 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 38
ACTION: int2 = 19 
int2 = 9 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 39
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 3, 12, 4]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 40
ACTION: int3 = 17 
int3 = 4 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 41
ACTION: int0 = 9 
int0 = 15 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 42
ACTION: int1 = 2 
int1 = 16 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 43
ACTION: result = avl0.find(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 44
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 45
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 46
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 47
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 8                                                                # STEP 48
ACTION: int2 = 8 
int2 = 19 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 49
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 12                                                               # STEP 50
ACTION: int3 = 12 
int3 = 17 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 51
ACTION: int1 = 18 
int1 = 2 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 52
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 53
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 9                                                                # STEP 54
ACTION: int2 = 9 
int2 = 8 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 55
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 56
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 57
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 58
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 59
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([19, 9, 3, 4]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 60
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int1 = 6                                                                # STEP 61
ACTION: int1 = 6 
int1 = 18 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 62
ACTION: avl0.delete(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 63
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 1                                                                # STEP 64
ACTION: int2 = 1 
int2 = 9 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 65
ACTION: int1 = 20 
int1 = 6 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 66
ACTION: result = avl0.find(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 67
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103077950> : <type 'instance'>
avl_REF0 = set([19, 9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([19, 3, 4]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103071638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:34.755717) Mon May  1 18:14:32 2017 [ 162 stmts 216 branches ]
  11 [2:0]
-- < 10 [1:1]
---- < 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 15 [0:0] L
set([5, 10, 11, 12, 13, 15])
  11 [2:0]
-- < 10 [1:1]
---- < 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 15 [0:0] L
set([5, 10, 11, 12, 13, 15])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 44
STOPPING TESTING DUE TO TIMEOUT
8.27045850261 PERCENT COVERED
60.2351288795 TOTAL RUNTIME
6 EXECUTED
512 TOTAL TEST OPERATIONS
26.3528747559 TIME SPENT EXECUTING TEST OPERATIONS
0.0546383857727 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.5575404167 TIME SPENT CHECKING PROPERTIES
52.9104151726 TOTAL TIME SPENT RUNNING SUT
0.00394153594971 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 3                                                                 # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
int1 = 12                                                                # STEP 2
result = avl0.inorder()                                                  # STEP 3
result = avl0.inorder()                                                  # STEP 4
avl0.delete(int0)                                                        # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.delete(int0)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
result = avl0.inorder()                                                  # STEP 9
avl0.insert(int1)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
avl0.delete(int1)                                                       # STEP 12
result = avl0.find(int1)                                                # STEP 13
avl0.insert(int1)                                                       # STEP 14
avl0.delete(int1)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
avl0.delete(int1)                                                       # STEP 17
result = avl0.find(int1)                                                # STEP 18
avl0.insert(int0)                                                       # STEP 19
avl0.delete(int0)                                                       # STEP 20
avl0.delete(int1)                                                       # STEP 21
avl0.insert(int1)                                                       # STEP 22
int1 = 16                                                               # STEP 23
avl0.insert(int0)                                                       # STEP 24
int0 = 15                                                               # STEP 25
int2 = 9                                                                # STEP 26
avl0.insert(int1)                                                       # STEP 27
avl0.delete(int2)                                                       # STEP 28
avl0 == avl0                                                            # STEP 29
avl0.delete(int1)                                                       # STEP 30
avl0.delete(int1)                                                       # STEP 31
avl0.delete(int1)                                                       # STEP 32
avl0.insert(int2)                                                       # STEP 33
avl0.delete(int0)                                                       # STEP 34
avl0.delete(int1)                                                       # STEP 35
result = avl0.find(int1)                                                # STEP 36
int3 = 4                                                                # STEP 37
int2 = 19                                                               # STEP 38
avl0.insert(int3)                                                       # STEP 39
int3 = 17                                                               # STEP 40
int0 = 9                                                                # STEP 41
int1 = 2                                                                # STEP 42
result = avl0.find(int2)                                                # STEP 43
avl0.delete(int1)                                                       # STEP 44
avl0.insert(int2)                                                       # STEP 45
result = avl0.inorder()                                                 # STEP 46
avl0.delete(int3)                                                       # STEP 47
int2 = 8                                                                # STEP 48
avl0.delete(int3)                                                       # STEP 49
int3 = 12                                                               # STEP 50
int1 = 18                                                               # STEP 51
avl0.delete(int1)                                                       # STEP 52
avl0.delete(int2)                                                       # STEP 53
int2 = 9                                                                # STEP 54
avl0.insert(int3)                                                       # STEP 55
result = avl0.inorder()                                                 # STEP 56
avl0.delete(int1)                                                       # STEP 57
result = avl0.inorder()                                                 # STEP 58
avl0.delete(int3)                                                       # STEP 59
avl0.insert(int2)                                                       # STEP 60
int1 = 6                                                                # STEP 61
avl0.delete(int1)                                                       # STEP 62
result = avl0.inorder()                                                 # STEP 63
int2 = 1                                                                # STEP 64
int1 = 20                                                               # STEP 65
result = avl0.find(int0)                                                # STEP 66
avl0.delete(int0)                                                       # STEP 67
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103071638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
