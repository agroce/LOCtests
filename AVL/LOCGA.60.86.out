Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62529.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  15 [3:1]
-- < 5 [2:-1]
---- < 3 [0:0] L
---- > 8 [1:-1]
------ > 12 [0:0] L
-- > 16 [1:-1]
---- > 18 [0:0] L
set([3, 5, 8, 12, 15, 16, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102696128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 41 steps

SAVING TEST AS failure.62529.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 9                                                                 # STEP 0
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 1
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 2
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 4
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 16                                                                # STEP 5
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.insert(int2)                                                        # STEP 6
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 7
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                        # STEP 8
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
int2 = 15                                                                # STEP 9
ACTION: int2 = 15 
int2 = 5 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 10
ACTION: result = avl1.find(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 11
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 5, 15]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 12
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 13
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 15
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 16
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 5, 15]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 17
ACTION: int2 = 20 
int2 = 15 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 19
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 9, 3, 5, 15]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 24
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 9, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 25
ACTION: int1 = 8 
int1 = 3 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int3 = 12                                                               # STEP 26
ACTION: int3 = 12 
int3 = 16 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int0 = 18                                                               # STEP 27
ACTION: int0 = 18 
int0 = 9 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 28
ACTION: int2 = 18 
int2 = 20 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 29
ACTION: result = avl1.find(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1 == avl1                                                            # STEP 30
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([16, 3, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 5, 15, 16, 18]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 32
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 5, 12, 15, 16, 18]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 33
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 12, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 5, 8, 12, 15, 16, 18]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 34
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 8, 12, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([3, 5, 8, 15, 16, 18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 8, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 4                                                                # STEP 36
ACTION: int0 = 4 
int0 = 18 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 37
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 8, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 5, 8, 12, 15, 16, 18]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 38
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 8, 12, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.display()                                                          # STEP 39
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 8, 12, 15, 16, 18]) : <type 'set'>
  15 [3:1]
-- < 5 [2:-1]
---- < 3 [0:0] L
---- > 8 [1:-1]
------ > 12 [0:0] L
-- > 16 [1:-1]
---- > 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([3, 5, 8, 12, 15, 16, 18])
==================================================
avl1.delete(int2)                                                       # STEP 40
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102716d40> : <type 'instance'>
avl_REF1 = set([3, 5, 8, 12, 15, 16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3, 5, 8, 12, 15, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035a3290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030dc710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 25 steps

SAVING TEST AS failure.62529.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 1
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 15                                                                # STEP 2
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
result = avl0.inorder()                                                  # STEP 3
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 10                                                                # STEP 4
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 5
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int3 = 5                                                                 # STEP 6
ACTION: int3 = 5 
int3 = None : <type 'NoneType'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 7
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int3)                                                 # STEP 8
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                        # STEP 9
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 10
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 13
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int0)                                                # STEP 15
ACTION: result = avl0.find(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 9                                                                # STEP 16
ACTION: int0 = 9 
int0 = 12 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 17
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 18
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 20                                                               # STEP 19
ACTION: int1 = 20 
int1 = 15 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10, 5, 15]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 21
ACTION: int3 = 17 
int3 = 5 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 22
ACTION: result = avl0.find(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([10, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 10, 5, 15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 24
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027b9950> : <type 'instance'>
avl_REF0 = set([9, 10, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([9, 5, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036394d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  14 [2:0]
-- < 1 [1:-1]
---- > 7 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([1, 7, 14, 16, 17, 19])
  14 [2:0]
-- < 1 [1:-1]
---- > 7 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
set([1, 7, 14, 16, 17, 19])
  14 [3:0]
-- < 7 [2:1]
---- < 1 [1:-1]
------ > 6 [0:0] L
---- > 13 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:1]
------ < 18 [0:0] L
set([1, 6, 7, 13, 14, 16, 17, 18, 19])
  14 [3:0]
-- < 7 [2:1]
---- < 1 [1:-1]
------ > 6 [0:0] L
---- > 13 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:1]
------ < 18 [0:0] L
set([1, 6, 7, 13, 14, 16, 17, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035fec20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 92 steps

SAVING TEST AS failure.62529.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 3                                                                 # STEP 0
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 5                                                                 # STEP 1
ACTION: int3 = 5 
int3 = None : <type 'NoneType'>
=> int3 = 5 : <type 'int'>
==================================================
int0 = 12                                                                # STEP 2
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int2 = 20                                                                # STEP 3
ACTION: int2 = 20 
int2 = None : <type 'NoneType'>
=> int2 = 20 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 5
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                        # STEP 6
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 18                                                                # STEP 7
ACTION: int1 = 18 
int1 = 3 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 1                                                                # STEP 11
ACTION: int0 = 1 
int0 = 12 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 12
ACTION: int1 = 6 
int1 = 18 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 11                                                               # STEP 14
ACTION: int1 = 11 
int1 = 6 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 12]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 16
ACTION: int0 = 12 
int0 = 1 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 17
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 1                                                                # STEP 19
ACTION: int3 = 1 
int3 = 5 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 20
ACTION: int0 = 1 
int0 = 12 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 21
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 23
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 24
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 14                                                               # STEP 25
ACTION: int3 = 14 
int3 = 1 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 26
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 27
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 28
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 20, 14]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 29
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 30
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 31
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 20, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 32
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 14]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 33
ACTION: int1 = 19 
int1 = 11 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 34
ACTION: int2 = 17 
int2 = 20 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 35
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int3 = 19                                                               # STEP 36
ACTION: int3 = 19 
int3 = 14 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 37
ACTION: avl1.insert(int1) 
int1 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 19, 14]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 38
ACTION: int1 = 16 
int1 = 19 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 40
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
result = avl1.find(int1)                                                # STEP 41
ACTION: result = avl1.find(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int3 = 17                                                               # STEP 42
ACTION: int3 = 17 
int3 = 19 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 43
ACTION: result = avl1.find(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 44
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.find(int0)                                                # STEP 46
ACTION: result = avl1.find(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
result = avl1.find(int2)                                                # STEP 47
ACTION: result = avl1.find(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 48
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 49
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([16, 1, 19, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 14, 16, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 50
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 51
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 16                                                               # STEP 52
ACTION: int0 = 16 
int0 = 1 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 53
ACTION: int2 = 18 
int2 = 17 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 54
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 55
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 10                                                               # STEP 56
ACTION: int0 = 10 
int0 = 16 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 57
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 58
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 59
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 61
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 7, 14, 16, 19]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 62
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 63
ACTION: result = avl1.find(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 64
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl1.find(int1)                                                # STEP 65
ACTION: result = avl1.find(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.display()                                                          # STEP 66
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
  14 [2:0]
-- < 1 [1:-1]
---- > 7 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 7, 14, 16, 17, 19])
==================================================
avl1.insert(int2)                                                       # STEP 67
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 7, 14, 16, 17, 18, 19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 68
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 69
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
  14 [2:0]
-- < 1 [1:-1]
---- > 7 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 7, 14, 16, 17, 19])
==================================================
avl1.delete(int2)                                                       # STEP 70
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 13                                                               # STEP 71
ACTION: int0 = 13 
int0 = 10 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 72
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 18                                                               # STEP 73
ACTION: int3 = 18 
int3 = 17 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 74
ACTION: int1 = 4 
int1 = 7 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 75
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 76
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 77
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 7, 14, 16, 17, 18, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 78
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 79
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 7, 13, 14, 16, 17, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 80
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 13, 14, 16, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 81
ACTION: int3 = 6 
int3 = 18 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 82
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 83
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
result = avl1.find(int0)                                                # STEP 84
ACTION: result = avl1.find(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 85
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 16                                                               # STEP 86
ACTION: int1 = 16 
int1 = 4 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.display()                                                          # STEP 87
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
  14 [3:0]
-- < 7 [2:1]
---- < 1 [1:-1]
------ > 6 [0:0] L
---- > 13 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:1]
------ < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 6, 7, 13, 14, 16, 17, 18, 19])
==================================================
avl1.display()                                                          # STEP 88
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
  14 [3:0]
-- < 7 [2:1]
---- < 1 [1:-1]
------ > 6 [0:0] L
---- > 13 [0:0] L
-- > 17 [2:-1]
---- < 16 [0:0] L
---- > 19 [1:1]
------ < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 6, 7, 13, 14, 16, 17, 18, 19])
==================================================
int3 = 8                                                                # STEP 89
ACTION: int3 = 8 
int3 = 6 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 90
ACTION: int2 = 17 
int2 = 18 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 91
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fef38> : <type 'instance'>
avl_REF1 = set([1, 6, 7, 13, 14, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 6, 7, 13, 14, 17, 18, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10270d050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:33.604885) Mon May  1 18:44:27 2017 [ 158 stmts 208 branches ]
  10 [3:1]
-- < 5 [2:1]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [0:0] L
-- > 17 [1:1]
---- < 12 [0:0] L
set([2, 4, 5, 9, 10, 12, 17])
  10 [3:1]
-- < 5 [2:1]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [0:0] L
-- > 17 [1:1]
---- < 12 [0:0] L
set([2, 4, 5, 9, 10, 12, 17])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1040805a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 64 steps

SAVING TEST AS failure.62529.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 9                                                                 # STEP 0
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 17                                                                # STEP 1
ACTION: int1 = 17 
int1 = None : <type 'NoneType'>
=> int1 = 17 : <type 'int'>
==================================================
int2 = 10                                                                # STEP 2
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 4
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 2                                                                 # STEP 5
ACTION: int2 = 2 
int2 = 10 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
int3 = 5                                                                 # STEP 6
ACTION: int3 = 5 
int3 = None : <type 'NoneType'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 7
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 9
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 10
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 2]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 11
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 2, 5]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 12
ACTION: int2 = 18 
int2 = 2 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([17, 2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 2, 5, 9]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 14
ACTION: int0 = 10 
int0 = 9 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 15
ACTION: int3 = 17 
int3 = 5 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 16
ACTION: int1 = 4 
int1 = 17 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 17
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 18
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0 == avl1                                                            # STEP 19
ACTION: avl0 == avl1 
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
avl_REF1 = set([17, 2, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl0.delete(int2)                                                       # STEP 20
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 21
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([17, 2, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 2, 10, 5, 9]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 23
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([17, 2, 10, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 25
ACTION: int2 = 16 
int2 = 18 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 26
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 27
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 28
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 17]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 30
ACTION: int3 = 4 
int3 = 17 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
int1 = 5                                                                # STEP 31
ACTION: int1 = 5 
int1 = 4 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 32
ACTION: int2 = 11 
int2 = 16 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int0 = 8                                                                # STEP 33
ACTION: int0 = 8 
int0 = 10 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 34
ACTION: result = avl2.find(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 35
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 17, 5]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 37
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 38
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 39
ACTION: int2 = 12 
int2 = 11 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 40
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl2.find(int3)                                                # STEP 41
ACTION: result = avl2.find(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl1 == avl1                                                            # STEP 42
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([17, 2, 10, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl2.insert(int0)                                                       # STEP 43
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 4]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 44
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 45
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([17, 2, 10, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 5, 9, 10, 12, 17]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 46
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 17, 5, 8]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 47
ACTION: int3 = 14 
int3 = 4 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 48
ACTION: int2 = 16 
int2 = 12 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 49
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5, 8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 4                                                                # STEP 50
ACTION: int1 = 4 
int1 = 5 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 51
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2, 5, 9, 10, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 11                                                               # STEP 52
ACTION: int0 = 11 
int0 = 8 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 53
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1027e1f38> : <type 'instance'>
avl_REF2 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 10                                                               # STEP 54
ACTION: int3 = 10 
int3 = 14 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 55
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2, 5, 9, 10, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 4, 5, 9, 10, 12, 17]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 56
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2, 4, 5, 9, 10, 12, 17]) : <type 'set'>
  10 [3:1]
-- < 5 [2:1]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [0:0] L
-- > 17 [1:1]
---- < 12 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([2, 4, 5, 9, 10, 12, 17])
==================================================
avl1.delete(int0)                                                       # STEP 57
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2, 4, 5, 9, 10, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 2                                                                # STEP 58
ACTION: int1 = 2 
int1 = 4 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1.display()                                                          # STEP 59
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1035fe320> : <type 'instance'>
avl_REF1 = set([2, 4, 5, 9, 10, 12, 17]) : <type 'set'>
  10 [3:1]
-- < 5 [2:1]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [0:0] L
-- > 17 [1:1]
---- < 12 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([2, 4, 5, 9, 10, 12, 17])
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5, 8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 61
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int0 = 12                                                               # STEP 62
ACTION: int0 = 12 
int0 = 11 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 63
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1027136c8> : <type 'instance'>
avl_REF0 = set([16, 17, 5, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 5, 8]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102709998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1027e7680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 90 steps

SAVING TEST AS failure.62529.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 9                                                                 # STEP 0
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
int1 = 15                                                                # STEP 1
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 11                                                                # STEP 2
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 4
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 5
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                        # STEP 6
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 6                                                                 # STEP 7
ACTION: int1 = 6 
int1 = 15 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                        # STEP 9
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 10
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 11
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1 == avl1                                                            # STEP 12
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int0 = 1                                                                # STEP 13
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 14
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 15
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 16
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 17                                                               # STEP 18
ACTION: int0 = 17 
int0 = 1 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 19
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.find(int1)                                                # STEP 20
ACTION: result = avl1.find(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int3 = 8                                                                # STEP 21
ACTION: int3 = 8 
int3 = 11 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 22
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 23
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1 == avl1                                                            # STEP 24
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 27
ACTION: int3 = 18 
int3 = 8 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 28
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 29
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([9, 18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 30
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 18, 17]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 31
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 18, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([9, 17]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 32
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 6, 17]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 33
ACTION: result = avl1.find(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 34
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 36
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 38
ACTION: avl1.delete(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([9, 17]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 39
ACTION: int3 = 6 
int3 = 18 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 40
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 41
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 6, 17]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 42
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 43
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 44
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int2 = 20                                                               # STEP 45
ACTION: int2 = 20 
int2 = 9 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 46
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 20, 6, 17]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 47
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 20, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 48
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 20, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int0 = 13                                                               # STEP 49
ACTION: int0 = 13 
int0 = 17 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 50
ACTION: int1 = 3 
int1 = 6 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 51
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([9, 20, 6, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 52
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([3, 9, 17, 20]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 53
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 54
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([13]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 55
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 56
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 57
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 58
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 59
ACTION: result = avl1.find(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
result = avl2.find(int0)                                                # STEP 60
ACTION: result = avl2.find(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 61
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([13, 6]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 62
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 13                                                               # STEP 63
ACTION: int0 = 13 
int0 = 13 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 64
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([20, 13, 6]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 65
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 66
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 67
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 68
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 69
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3, 6, 9, 17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 70
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 71
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 72
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 6, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([3, 9, 17]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 73
ACTION: result = avl1.find(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 74
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl1.find(int1)                                                # STEP 75
ACTION: result = avl1.find(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 76
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 77
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 78
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 79
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 9, 17, 20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 80
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([3, 20, 13]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 81
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 16                                                               # STEP 82
ACTION: int2 = 16 
int2 = 20 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 83
ACTION: int3 = 1 
int3 = 6 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 84
ACTION: result = avl2.find(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
result = avl2.find(int0)                                                # STEP 85
ACTION: result = avl2.find(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 86
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1027e7758> : <type 'instance'>
avl_REF1 = set([3, 9, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 87
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([3, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 3, 20, 13]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 88
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([1, 3, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 89
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1035d7cb0> : <type 'instance'>
avl_REF2 = set([1, 3, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1, 3, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035dcd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.09634358677 PERCENT COVERED
66.4463121891 TOTAL RUNTIME
6 EXECUTED
312 TOTAL TEST OPERATIONS
16.5764100552 TIME SPENT EXECUTING TEST OPERATIONS
0.0365986824036 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
16.60140872 TIME SPENT CHECKING PROPERTIES
33.1778187752 TOTAL TIME SPENT RUNNING SUT
0.00375008583069 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
5 FAILED
0 REPEATS OF FAILURES
5 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 9                                                                 # STEP 0
int2 = 5                                                                 # STEP 1
int1 = 3                                                                 # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl1.delete(int2)                                                        # STEP 4
int3 = 16                                                                # STEP 5
avl1.insert(int2)                                                        # STEP 6
result = avl1.inorder()                                                  # STEP 7
avl1.insert(int3)                                                        # STEP 8
int2 = 15                                                                # STEP 9
result = avl1.find(int2)                                                # STEP 10
avl1.insert(int2)                                                       # STEP 11
avl1.delete(int2)                                                       # STEP 12
avl1.delete(int3)                                                       # STEP 13
avl1.insert(int1)                                                       # STEP 14
avl1.delete(int3)                                                       # STEP 15
avl1.insert(int2)                                                       # STEP 16
int2 = 20                                                               # STEP 17
avl1.delete(int3)                                                       # STEP 18
avl1.insert(int3)                                                       # STEP 19
avl1.delete(int2)                                                       # STEP 20
avl1.delete(int0)                                                       # STEP 21
avl1.insert(int0)                                                       # STEP 22
result = avl1.inorder()                                                 # STEP 23
avl1.delete(int0)                                                       # STEP 24
int1 = 8                                                                # STEP 25
int3 = 12                                                               # STEP 26
int0 = 18                                                               # STEP 27
int2 = 18                                                               # STEP 28
result = avl1.find(int3)                                                # STEP 29
avl1 == avl1                                                            # STEP 30
avl1.insert(int0)                                                       # STEP 31
avl1.insert(int3)                                                       # STEP 32
avl1.insert(int1)                                                       # STEP 33
avl1.delete(int3)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
int0 = 4                                                                # STEP 36
avl1.insert(int3)                                                       # STEP 37
result = avl1.inorder()                                                 # STEP 38
avl1.display()                                                          # STEP 39
avl1.delete(int2)                                                       # STEP 40
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035a3290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
avl0 = avl.AVLTree()                                                     # STEP 0
result = avl0.inorder()                                                  # STEP 1
int1 = 15                                                                # STEP 2
result = avl0.inorder()                                                  # STEP 3
int2 = 10                                                                # STEP 4
int0 = 12                                                                # STEP 5
int3 = 5                                                                 # STEP 6
avl0.delete(int3)                                                        # STEP 7
result = avl0.find(int3)                                                 # STEP 8
avl0.insert(int1)                                                        # STEP 9
avl0.delete(int0)                                                       # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
avl0.insert(int1)                                                       # STEP 13
avl0.delete(int3)                                                       # STEP 14
result = avl0.find(int0)                                                # STEP 15
int0 = 9                                                                # STEP 16
avl0.insert(int2)                                                       # STEP 17
result = avl0.inorder()                                                 # STEP 18
int1 = 20                                                               # STEP 19
avl0.insert(int3)                                                       # STEP 20
int3 = 17                                                               # STEP 21
result = avl0.find(int2)                                                # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl0.delete(int2)                                                       # STEP 24
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036394d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int1 = 3                                                                 # STEP 0
int3 = 5                                                                 # STEP 1
int0 = 12                                                                # STEP 2
int2 = 20                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
result = avl1.inorder()                                                  # STEP 5
avl1.delete(int1)                                                        # STEP 6
int1 = 18                                                                # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.insert(int0)                                                        # STEP 9
avl1.delete(int1)                                                       # STEP 10
int0 = 1                                                                # STEP 11
int1 = 6                                                                # STEP 12
avl1.delete(int1)                                                       # STEP 13
int1 = 11                                                               # STEP 14
avl1.insert(int0)                                                       # STEP 15
int0 = 12                                                               # STEP 16
avl1.delete(int0)                                                       # STEP 17
avl1.delete(int3)                                                       # STEP 18
int3 = 1                                                                # STEP 19
int0 = 1                                                                # STEP 20
avl1.insert(int3)                                                       # STEP 21
avl1.delete(int2)                                                       # STEP 22
avl1.insert(int3)                                                       # STEP 23
avl1.delete(int1)                                                       # STEP 24
int3 = 14                                                               # STEP 25
result = avl1.inorder()                                                 # STEP 26
avl1.insert(int3)                                                       # STEP 27
avl1.insert(int2)                                                       # STEP 28
avl1.delete(int3)                                                       # STEP 29
avl1.delete(int3)                                                       # STEP 30
avl1.insert(int3)                                                       # STEP 31
avl1.delete(int2)                                                       # STEP 32
int1 = 19                                                               # STEP 33
int2 = 17                                                               # STEP 34
avl1.insert(int3)                                                       # STEP 35
int3 = 19                                                               # STEP 36
avl1.insert(int1)                                                       # STEP 37
int1 = 16                                                               # STEP 38
avl1.insert(int1)                                                       # STEP 39
avl1.insert(int3)                                                       # STEP 40
result = avl1.find(int1)                                                # STEP 41
int3 = 17                                                               # STEP 42
result = avl1.find(int2)                                                # STEP 43
avl1.insert(int0)                                                       # STEP 44
avl1.delete(int3)                                                       # STEP 45
result = avl1.find(int0)                                                # STEP 46
result = avl1.find(int2)                                                # STEP 47
avl1.delete(int2)                                                       # STEP 48
avl1.insert(int2)                                                       # STEP 49
avl1.insert(int2)                                                       # STEP 50
avl1.insert(int0)                                                       # STEP 51
int0 = 16                                                               # STEP 52
int2 = 18                                                               # STEP 53
int1 = 7                                                                # STEP 54
avl1.insert(int0)                                                       # STEP 55
int0 = 10                                                               # STEP 56
avl1.insert(int1)                                                       # STEP 57
avl1.insert(int3)                                                       # STEP 58
result = avl1.inorder()                                                 # STEP 59
avl1.delete(int2)                                                       # STEP 60
avl1.delete(int3)                                                       # STEP 61
avl1.insert(int3)                                                       # STEP 62
result = avl1.find(int0)                                                # STEP 63
avl1.delete(int0)                                                       # STEP 64
result = avl1.find(int1)                                                # STEP 65
avl1.display()                                                          # STEP 66
avl1.insert(int2)                                                       # STEP 67
avl1.delete(int2)                                                       # STEP 68
avl1.display()                                                          # STEP 69
avl1.delete(int2)                                                       # STEP 70
int0 = 13                                                               # STEP 71
avl1.delete(int2)                                                       # STEP 72
int3 = 18                                                               # STEP 73
int1 = 4                                                                # STEP 74
avl1.delete(int1)                                                       # STEP 75
result = avl1.inorder()                                                 # STEP 76
avl1.insert(int3)                                                       # STEP 77
avl1.delete(int3)                                                       # STEP 78
avl1.insert(int0)                                                       # STEP 79
avl1.insert(int2)                                                       # STEP 80
int3 = 6                                                                # STEP 81
avl1.insert(int3)                                                       # STEP 82
avl1.insert(int0)                                                       # STEP 83
result = avl1.find(int0)                                                # STEP 84
avl1.insert(int2)                                                       # STEP 85
int1 = 16                                                               # STEP 86
avl1.display()                                                          # STEP 87
avl1.display()                                                          # STEP 88
int3 = 8                                                                # STEP 89
int2 = 17                                                               # STEP 90
avl1.delete(int1)                                                       # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10270d050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 3
int0 = 9                                                                 # STEP 0
int1 = 17                                                                # STEP 1
int2 = 10                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl1.delete(int2)                                                        # STEP 4
int2 = 2                                                                 # STEP 5
int3 = 5                                                                 # STEP 6
avl1.delete(int3)                                                        # STEP 7
avl1.insert(int2)                                                        # STEP 8
avl1.delete(int0)                                                        # STEP 9
avl1.insert(int1)                                                       # STEP 10
avl1.insert(int3)                                                       # STEP 11
int2 = 18                                                               # STEP 12
avl1.insert(int0)                                                       # STEP 13
int0 = 10                                                               # STEP 14
int3 = 17                                                               # STEP 15
int1 = 4                                                                # STEP 16
avl0 = avl.AVLTree()                                                    # STEP 17
avl0.delete(int1)                                                       # STEP 18
avl0 == avl1                                                            # STEP 19
avl0.delete(int2)                                                       # STEP 20
avl0.delete(int2)                                                       # STEP 21
avl1.insert(int0)                                                       # STEP 22
avl1.insert(int3)                                                       # STEP 23
avl0.insert(int3)                                                       # STEP 24
int2 = 16                                                               # STEP 25
avl2 = avl.AVLTree()                                                    # STEP 26
avl0.delete(int0)                                                       # STEP 27
avl2.delete(int1)                                                       # STEP 28
avl0.insert(int2)                                                       # STEP 29
int3 = 4                                                                # STEP 30
int1 = 5                                                                # STEP 31
int2 = 11                                                               # STEP 32
int0 = 8                                                                # STEP 33
result = avl2.find(int3)                                                # STEP 34
avl2.delete(int2)                                                       # STEP 35
avl0.insert(int1)                                                       # STEP 36
avl0.insert(int1)                                                       # STEP 37
avl2.insert(int3)                                                       # STEP 38
int2 = 12                                                               # STEP 39
avl0.delete(int3)                                                       # STEP 40
result = avl2.find(int3)                                                # STEP 41
avl1 == avl1                                                            # STEP 42
avl2.insert(int0)                                                       # STEP 43
avl2.insert(int3)                                                       # STEP 44
avl1.insert(int2)                                                       # STEP 45
avl0.insert(int0)                                                       # STEP 46
int3 = 14                                                               # STEP 47
int2 = 16                                                               # STEP 48
result = avl0.inorder()                                                 # STEP 49
int1 = 4                                                                # STEP 50
avl1.delete(int3)                                                       # STEP 51
int0 = 11                                                               # STEP 52
avl2.delete(int0)                                                       # STEP 53
int3 = 10                                                               # STEP 54
avl1.insert(int1)                                                       # STEP 55
avl1.display()                                                          # STEP 56
avl1.delete(int0)                                                       # STEP 57
int1 = 2                                                                # STEP 58
avl1.display()                                                          # STEP 59
result = avl0.inorder()                                                 # STEP 60
avl0.insert(int2)                                                       # STEP 61
int0 = 12                                                               # STEP 62
avl0.delete(int2)                                                       # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102709998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 4
int2 = 9                                                                 # STEP 0
int1 = 15                                                                # STEP 1
int3 = 11                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl1.insert(int2)                                                        # STEP 4
result = avl1.inorder()                                                  # STEP 5
avl1.delete(int1)                                                        # STEP 6
int1 = 6                                                                 # STEP 7
avl1.insert(int2)                                                        # STEP 8
avl1.delete(int3)                                                        # STEP 9
avl1.delete(int3)                                                       # STEP 10
avl1.delete(int1)                                                       # STEP 11
avl1 == avl1                                                            # STEP 12
int0 = 1                                                                # STEP 13
avl1.insert(int2)                                                       # STEP 14
avl1.delete(int0)                                                       # STEP 15
avl1.delete(int2)                                                       # STEP 16
avl1.delete(int2)                                                       # STEP 17
int0 = 17                                                               # STEP 18
result = avl1.inorder()                                                 # STEP 19
result = avl1.find(int1)                                                # STEP 20
int3 = 8                                                                # STEP 21
avl1.delete(int3)                                                       # STEP 22
avl1.delete(int2)                                                       # STEP 23
avl1 == avl1                                                            # STEP 24
avl1.delete(int2)                                                       # STEP 25
avl1.insert(int2)                                                       # STEP 26
int3 = 18                                                               # STEP 27
avl1.delete(int3)                                                       # STEP 28
avl1.insert(int3)                                                       # STEP 29
avl1.insert(int0)                                                       # STEP 30
avl1.delete(int3)                                                       # STEP 31
avl1.insert(int1)                                                       # STEP 32
result = avl1.find(int0)                                                # STEP 33
avl1.delete(int3)                                                       # STEP 34
avl1.insert(int0)                                                       # STEP 35
avl1.insert(int0)                                                       # STEP 36
avl1.delete(int3)                                                       # STEP 37
avl1.delete(int1)                                                       # STEP 38
int3 = 6                                                                # STEP 39
avl1.delete(int3)                                                       # STEP 40
avl1.insert(int1)                                                       # STEP 41
result = avl1.inorder()                                                 # STEP 42
avl1.insert(int1)                                                       # STEP 43
avl1.insert(int3)                                                       # STEP 44
int2 = 20                                                               # STEP 45
avl1.insert(int2)                                                       # STEP 46
avl1.insert(int2)                                                       # STEP 47
avl1.insert(int3)                                                       # STEP 48
int0 = 13                                                               # STEP 49
int1 = 3                                                                # STEP 50
avl1.insert(int1)                                                       # STEP 51
avl1.delete(int3)                                                       # STEP 52
avl2 = avl.AVLTree()                                                    # STEP 53
avl2.insert(int0)                                                       # STEP 54
avl2.delete(int2)                                                       # STEP 55
avl2.delete(int3)                                                       # STEP 56
avl2.delete(int1)                                                       # STEP 57
avl1.insert(int3)                                                       # STEP 58
result = avl1.find(int3)                                                # STEP 59
result = avl2.find(int0)                                                # STEP 60
avl2.insert(int3)                                                       # STEP 61
result = avl1.inorder()                                                 # STEP 62
int0 = 13                                                               # STEP 63
avl2.insert(int2)                                                       # STEP 64
avl1.insert(int1)                                                       # STEP 65
avl2.insert(int1)                                                       # STEP 66
avl2.insert(int1)                                                       # STEP 67
avl1.insert(int2)                                                       # STEP 68
avl1.delete(int2)                                                       # STEP 69
avl1.delete(int2)                                                       # STEP 70
avl2.insert(int2)                                                       # STEP 71
avl1.delete(int3)                                                       # STEP 72
result = avl1.find(int1)                                                # STEP 73
avl2.insert(int1)                                                       # STEP 74
result = avl1.find(int1)                                                # STEP 75
avl2.insert(int2)                                                       # STEP 76
avl2.insert(int1)                                                       # STEP 77
result = avl1.inorder()                                                 # STEP 78
avl1.insert(int2)                                                       # STEP 79
avl2.delete(int3)                                                       # STEP 80
result = avl1.inorder()                                                 # STEP 81
int2 = 16                                                               # STEP 82
int3 = 1                                                                # STEP 83
result = avl2.find(int3)                                                # STEP 84
result = avl2.find(int0)                                                # STEP 85
avl1.delete(int3)                                                       # STEP 86
avl2.insert(int3)                                                       # STEP 87
avl2.insert(int1)                                                       # STEP 88
avl2.delete(int0)                                                       # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035dcd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
210 BRANCHES COVERED
159 STATEMENTS COVERED
