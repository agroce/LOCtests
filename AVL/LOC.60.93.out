Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.1007.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1051d9bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 37 steps

SAVING TEST AS failure.1007.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 17                                                                # STEP 0
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 2
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 3
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 4
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 5
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 6
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 8
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 10
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 16                                                               # STEP 11
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 12
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 14                                                               # STEP 13
ACTION: int0 = 14 
int0 = 17 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 17]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 15
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 20                                                               # STEP 16
ACTION: int1 = 20 
int1 = 16 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 17, 14]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 18
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 2                                                                # STEP 19
ACTION: int0 = 2 
int0 = 14 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 20
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 17, 20, 14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 17, 2, 20, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 23
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 2, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 10                                                               # STEP 24
ACTION: int0 = 10 
int0 = 2 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 25
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 2, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 26
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([16, 17, 2, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 10, 14, 16, 17, 20]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 27
ACTION: int2 = 20 
int2 = None : <type 'NoneType'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 28
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 5                                                                # STEP 29
ACTION: int1 = 5 
int1 = 20 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
int0 = 19                                                               # STEP 30
ACTION: int0 = 19 
int0 = 10 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 31
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 33
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 5, 10, 14, 16, 17, 20]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 34
ACTION: result = avl1.find(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 5, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
result = avl1.inorder()                                                 # STEP 35
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 5, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 36
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10415fb00> : <type 'instance'>
avl_REF1 = set([2, 5, 10, 14, 16, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([2, 5, 10, 14, 16, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050ff5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10505f5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 53 steps

SAVING TEST AS failure.1007.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 2
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl2.inorder()                                                  # STEP 3
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 20                                                                # STEP 4
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 6
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 8
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int3 = 19                                                                # STEP 9
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 10
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 11
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 12
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 14
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int1 = 4                                                                # STEP 15
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 16
ACTION: int2 = 17 
int2 = None : <type 'NoneType'>
=> int2 = 17 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 17
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 19, 20]) : <type 'set'>
==================================================
avl1 == avl2                                                            # STEP 18
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
int0 = 14                                                               # STEP 19
ACTION: int0 = 14 
int0 = 20 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 20
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 19, 20, 4]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 21
ACTION: result = avl2.find(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 20]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 23
ACTION: result = avl1.find(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 24
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([17, 19, 20]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 25
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int3 = 15                                                               # STEP 26
ACTION: int3 = 15 
int3 = 19 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 27
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 20, 4]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 28
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 29
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 30
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 31
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 32
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2 == avl2                                                            # STEP 33
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int1 = 1                                                                # STEP 34
ACTION: int1 = 1 
int1 = 4 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 35
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 2                                                                # STEP 36
ACTION: int0 = 2 
int0 = 14 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 37
ACTION: result = avl2.find(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 38
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 2, 19, 20]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 39
ACTION: int1 = 20 
int1 = 1 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 40
ACTION: int2 = 10 
int2 = 17 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 41
ACTION: result = avl2.find(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 42
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 43
ACTION: avl2.delete(int0) 
int0 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17, 19, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 44
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 46
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int1)                                                # STEP 47
ACTION: result = avl1.find(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int3 = 3                                                                # STEP 48
ACTION: int3 = 3 
int3 = 15 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 49
ACTION: avl2.insert(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 17, 19, 20]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 50
ACTION: result = avl1.find(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 51
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1050ff290> : <type 'instance'>
avl_REF1 = set([17, 20, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.delete(int1)                                                       # STEP 52
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047f1830> : <type 'instance'>
avl_REF2 = set([3, 17, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 17, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10415d248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #65 (0:00:30.021784) Fri Apr 28 07:55:14 2017 [ 148 stmts 196 branches ]
  10 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([1, 3, 7, 10, 12, 13, 19])
  10 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([1, 3, 7, 10, 12, 13, 19])
  10 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([1, 3, 5, 7, 10, 12, 13, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1042129e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 88 steps

SAVING TEST AS failure.1007.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 1
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                  # STEP 2
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 3                                                                 # STEP 3
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 4
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 5
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 10                                                                # STEP 8
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int2 = 17                                                                # STEP 9
ACTION: int2 = 17 
int2 = None : <type 'NoneType'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 10
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int3)                                                # STEP 11
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
result = avl0.find(int2)                                                # STEP 12
ACTION: result = avl0.find(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 18                                                               # STEP 13
ACTION: int2 = 18 
int2 = 17 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 14
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 17                                                               # STEP 15
ACTION: int1 = 17 
int1 = 3 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 17
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 18
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 7                                                                # STEP 19
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 20
ACTION: int3 = 13 
int3 = 10 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 22
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 23
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 26
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 27
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int0)                                                # STEP 28
ACTION: result = avl1.find(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int3 = 9                                                                # STEP 29
ACTION: int3 = 9 
int3 = 13 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 30
ACTION: int2 = 8 
int2 = 18 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 31
ACTION: int0 = 20 
int0 = 7 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 33
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x10421f290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
==================================================
result = avl1.inorder()                                                 # STEP 34
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.delete(int1)                                                       # STEP 35
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int2 = 5                                                                # STEP 36
ACTION: int2 = 5 
int2 = 8 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13, 5]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 13, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 40
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 41
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 42
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([17, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 43
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 45
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13, 5]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 46
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 13, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 47
ACTION: avl1.delete(int3) 
int3 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([17, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 48
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([17, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 13]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 49
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                       # STEP 50
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 51
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 52
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 53
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 54
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 55
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([13, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 56
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 58
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 11                                                               # STEP 59
ACTION: int3 = 11 
int3 = 9 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 60
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 61
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 62
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 15                                                               # STEP 63
ACTION: int0 = 15 
int0 = 20 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 64
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([15, 13, 5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 65
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([15, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11, 15, 13, 5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 66
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 67
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 68
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 69
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 70
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 71
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 13                                                               # STEP 72
ACTION: int3 = 13 
int3 = 11 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 5                                                                # STEP 73
ACTION: int2 = 5 
int2 = 5 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 74
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 17, 15]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 75
ACTION: int1 = 11 
int1 = 17 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 76
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 77
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl0.find(int3)                                                # STEP 78
ACTION: result = avl0.find(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 17, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int1 = 20                                                               # STEP 79
ACTION: int1 = 20 
int1 = 11 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 80
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
result = avl1.find(int3)                                                # STEP 81
ACTION: result = avl1.find(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 82
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 17, 5, 15]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 83
ACTION: int2 = 1 
int2 = 5 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 84
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([11, 17, 15, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([5, 11, 13, 15, 17, 20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 85
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104788ea8> : <type 'instance'>
avl_REF1 = set([5, 11, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 86
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 17, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 1, 17, 5, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 87
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1042359e0> : <type 'instance'>
avl_REF0 = set([9, 1, 17, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9, 1, 17, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10479fdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
  17 [2:0]
-- < 11 [1:0]
---- < 1 [0:0] L
---- > 14 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([1, 11, 14, 17, 18, 20])
  17 [3:1]
-- < 11 [2:-1]
---- < 1 [0:0] L
---- > 14 [1:1]
------ < 13 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([1, 11, 13, 14, 17, 18, 20])
  17 [3:1]
-- < 11 [2:0]
---- < 1 [1:-1]
------ > 7 [0:0] L
---- > 14 [1:1]
------ < 13 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([1, 7, 11, 13, 14, 17, 18, 20])
  17 [3:1]
-- < 11 [2:0]
---- < 1 [1:-1]
------ > 7 [0:0] L
---- > 14 [1:1]
------ < 13 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([1, 7, 11, 13, 14, 17, 18, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 32
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.1799390316 TOTAL RUNTIME
7 EXECUTED
510 TOTAL TEST OPERATIONS
22.1560587883 TIME SPENT EXECUTING TEST OPERATIONS
0.0549762248993 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.2550718784 TIME SPENT CHECKING PROPERTIES
44.4111306667 TOTAL TIME SPENT RUNNING SUT
0.00398063659668 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 17                                                                # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl1.delete(int0)                                                        # STEP 2
avl1.delete(int0)                                                        # STEP 3
avl1.delete(int0)                                                        # STEP 4
avl1.delete(int0)                                                        # STEP 5
avl1.delete(int0)                                                        # STEP 6
avl1.insert(int0)                                                        # STEP 7
avl1.insert(int0)                                                        # STEP 8
avl1.insert(int0)                                                        # STEP 9
avl1.insert(int0)                                                       # STEP 10
int1 = 16                                                               # STEP 11
avl1.insert(int0)                                                       # STEP 12
int0 = 14                                                               # STEP 13
avl1.insert(int1)                                                       # STEP 14
avl1.insert(int1)                                                       # STEP 15
int1 = 20                                                               # STEP 16
avl1.insert(int0)                                                       # STEP 17
result = avl1.inorder()                                                 # STEP 18
int0 = 2                                                                # STEP 19
avl1.insert(int1)                                                       # STEP 20
avl1.delete(int0)                                                       # STEP 21
avl1.insert(int0)                                                       # STEP 22
avl1.insert(int0)                                                       # STEP 23
int0 = 10                                                               # STEP 24
avl1.insert(int1)                                                       # STEP 25
avl1.insert(int0)                                                       # STEP 26
int2 = 20                                                               # STEP 27
avl1.insert(int1)                                                       # STEP 28
int1 = 5                                                                # STEP 29
int0 = 19                                                               # STEP 30
avl1.delete(int0)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
avl1.insert(int1)                                                       # STEP 33
result = avl1.find(int0)                                                # STEP 34
result = avl1.inorder()                                                 # STEP 35
avl1.delete(int2)                                                       # STEP 36
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050ff5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
avl2 = avl.AVLTree()                                                     # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
result = avl1.inorder()                                                  # STEP 2
result = avl2.inorder()                                                  # STEP 3
int0 = 20                                                                # STEP 4
avl2.insert(int0)                                                        # STEP 5
avl2.insert(int0)                                                        # STEP 6
avl1.insert(int0)                                                        # STEP 7
avl2.insert(int0)                                                        # STEP 8
int3 = 19                                                                # STEP 9
avl1.delete(int0)                                                       # STEP 10
avl2.insert(int3)                                                       # STEP 11
avl1.delete(int3)                                                       # STEP 12
avl1.insert(int0)                                                       # STEP 13
avl2.insert(int0)                                                       # STEP 14
int1 = 4                                                                # STEP 15
int2 = 17                                                               # STEP 16
avl2.insert(int2)                                                       # STEP 17
avl1 == avl2                                                            # STEP 18
int0 = 14                                                               # STEP 19
avl2.insert(int1)                                                       # STEP 20
result = avl2.find(int0)                                                # STEP 21
avl1.insert(int2)                                                       # STEP 22
result = avl1.find(int3)                                                # STEP 23
avl2.delete(int1)                                                       # STEP 24
avl2.delete(int1)                                                       # STEP 25
int3 = 15                                                               # STEP 26
avl1.insert(int1)                                                       # STEP 27
avl2.delete(int1)                                                       # STEP 28
result = avl2.inorder()                                                 # STEP 29
avl2.insert(int2)                                                       # STEP 30
avl2.insert(int2)                                                       # STEP 31
result = avl1.inorder()                                                 # STEP 32
avl2 == avl2                                                            # STEP 33
int1 = 1                                                                # STEP 34
result = avl1.inorder()                                                 # STEP 35
int0 = 2                                                                # STEP 36
result = avl2.find(int1)                                                # STEP 37
avl2.insert(int0)                                                       # STEP 38
int1 = 20                                                               # STEP 39
int2 = 10                                                               # STEP 40
result = avl2.find(int1)                                                # STEP 41
avl1.delete(int3)                                                       # STEP 42
avl2.delete(int0)                                                       # STEP 43
avl1.insert(int1)                                                       # STEP 44
avl1.delete(int3)                                                       # STEP 45
avl1.delete(int2)                                                       # STEP 46
result = avl1.find(int1)                                                # STEP 47
int3 = 3                                                                # STEP 48
avl2.insert(int3)                                                       # STEP 49
result = avl1.find(int1)                                                # STEP 50
result = avl1.inorder()                                                 # STEP 51
avl2.delete(int1)                                                       # STEP 52
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10415d248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
avl0 = avl.AVLTree()                                                     # STEP 0
result = avl0.inorder()                                                  # STEP 1
result = avl0.inorder()                                                  # STEP 2
int1 = 3                                                                 # STEP 3
avl0.delete(int1)                                                        # STEP 4
avl0.delete(int1)                                                        # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.delete(int1)                                                        # STEP 7
int3 = 10                                                                # STEP 8
int2 = 17                                                                # STEP 9
avl0.delete(int1)                                                       # STEP 10
result = avl0.find(int3)                                                # STEP 11
result = avl0.find(int2)                                                # STEP 12
int2 = 18                                                               # STEP 13
result = avl0.inorder()                                                 # STEP 14
int1 = 17                                                               # STEP 15
avl0.delete(int3)                                                       # STEP 16
result = avl0.find(int3)                                                # STEP 17
avl0.delete(int3)                                                       # STEP 18
int0 = 7                                                                # STEP 19
int3 = 13                                                               # STEP 20
avl0.delete(int0)                                                       # STEP 21
avl0.delete(int3)                                                       # STEP 22
avl1 = avl.AVLTree()                                                    # STEP 23
avl1.delete(int2)                                                       # STEP 24
avl1.insert(int3)                                                       # STEP 25
avl1.delete(int0)                                                       # STEP 26
avl1.delete(int2)                                                       # STEP 27
result = avl1.find(int0)                                                # STEP 28
int3 = 9                                                                # STEP 29
int2 = 8                                                                # STEP 30
int0 = 20                                                               # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl0 = avl.AVLTree()                                                    # STEP 33
result = avl1.inorder()                                                 # STEP 34
avl0.delete(int1)                                                       # STEP 35
int2 = 5                                                                # STEP 36
avl1.insert(int2)                                                       # STEP 37
result = avl0.inorder()                                                 # STEP 38
avl1.insert(int1)                                                       # STEP 39
avl0.insert(int0)                                                       # STEP 40
avl0.insert(int2)                                                       # STEP 41
avl1.delete(int2)                                                       # STEP 42
avl0.delete(int2)                                                       # STEP 43
avl1.delete(int1)                                                       # STEP 44
avl1.insert(int2)                                                       # STEP 45
avl1.insert(int1)                                                       # STEP 46
avl1.delete(int3)                                                       # STEP 47
avl1.delete(int2)                                                       # STEP 48
result = avl1.inorder()                                                 # STEP 49
avl1.delete(int1)                                                       # STEP 50
avl0.insert(int3)                                                       # STEP 51
avl1.delete(int0)                                                       # STEP 52
avl0.delete(int0)                                                       # STEP 53
avl1.delete(int2)                                                       # STEP 54
avl1.insert(int2)                                                       # STEP 55
avl1.insert(int2)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
avl1.delete(int0)                                                       # STEP 58
int3 = 11                                                               # STEP 59
avl1.delete(int0)                                                       # STEP 60
avl0.delete(int1)                                                       # STEP 61
avl0.delete(int1)                                                       # STEP 62
int0 = 15                                                               # STEP 63
avl1.insert(int0)                                                       # STEP 64
avl1.insert(int3)                                                       # STEP 65
result = avl1.inorder()                                                 # STEP 66
avl1.insert(int1)                                                       # STEP 67
avl1.insert(int2)                                                       # STEP 68
avl0.insert(int0)                                                       # STEP 69
avl1.insert(int3)                                                       # STEP 70
avl0.insert(int0)                                                       # STEP 71
int3 = 13                                                               # STEP 72
int2 = 5                                                                # STEP 73
avl0.insert(int1)                                                       # STEP 74
int1 = 11                                                               # STEP 75
avl0.delete(int1)                                                       # STEP 76
result = avl1.inorder()                                                 # STEP 77
result = avl0.find(int3)                                                # STEP 78
int1 = 20                                                               # STEP 79
avl1.insert(int0)                                                       # STEP 80
result = avl1.find(int3)                                                # STEP 81
avl0.insert(int2)                                                       # STEP 82
int2 = 1                                                                # STEP 83
avl1.insert(int1)                                                       # STEP 84
avl1.delete(int2)                                                       # STEP 85
avl0.insert(int2)                                                       # STEP 86
avl0.delete(int0)                                                       # STEP 87
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10479fdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
