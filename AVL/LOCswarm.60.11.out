Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.39903.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [3:-1]
-- < 8 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
-- > 18 [2:0]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([7, 8, 10, 11, 12, 14, 18, 19, 20])
  11 [3:-1]
-- < 8 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
-- > 18 [2:0]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([7, 8, 10, 11, 12, 14, 18, 19, 20])
  11 [3:0]
-- < 8 [2:1]
---- < 7 [1:1]
------ < 1 [0:0] L
---- > 10 [0:0] L
-- > 18 [2:0]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([1, 7, 8, 10, 11, 12, 14, 18, 19, 20])
  11 [4:-1]
-- < 8 [2:1]
---- < 7 [1:1]
------ < 1 [0:0] L
---- > 10 [0:0] L
-- > 18 [3:1]
---- < 14 [2:1]
------ < 12 [1:-1]
-------- > 13 [0:0] L
------ > 15 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([1, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20])
  11 [4:-1]
-- < 6 [2:0]
---- < 1 [1:-1]
------ > 3 [0:0] L
---- > 8 [1:0]
------ < 7 [0:0] L
------ > 10 [0:0] L
-- > 18 [3:1]
---- < 14 [2:1]
------ < 12 [1:-1]
-------- > 13 [0:0] L
------ > 15 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20])
  6 [3:-1]
-- < 3 [1:1]
---- < 1 [0:0] L
-- > 11 [2:-1]
---- < 7 [0:0] L
---- > 12 [1:-1]
------ > 16 [0:0] L
set([1, 3, 6, 7, 11, 12, 16])
  6 [3:-1]
-- < 3 [1:1]
---- < 1 [0:0] L
-- > 11 [2:-1]
---- < 7 [0:0] L
---- > 12 [1:-1]
------ > 16 [0:0] L
set([1, 3, 6, 7, 11, 12, 16])
TEST #4 STEP #28 (0:00:30.025037) Mon May  1 01:59:33 2017 [ 152 stmts 202 branches ]
  10 [2:0]
-- < 6 [1:1]
---- < 2 [0:0] L
-- > 16 [1:0]
---- < 14 [0:0] L
---- > 20 [0:0] L
set([2, 6, 10, 14, 16, 20])
  17 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 14 [0:0] L
-- > 20 [1:1]
---- < 18 [0:0] L
set([1, 9, 14, 17, 18, 20])
  17 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 14 [0:0] L
-- > 20 [1:1]
---- < 18 [0:0] L
set([1, 9, 14, 17, 18, 20])
  17 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 14 [0:0] L
-- > 20 [1:1]
---- < 18 [0:0] L
set([1, 9, 14, 17, 18, 20])
  17 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 14 [0:0] L
-- > 20 [1:1]
---- < 18 [0:0] L
set([1, 9, 14, 17, 18, 20])
  17 [3:1]
-- < 9 [2:0]
---- < 1 [1:-1]
------ > 6 [0:0] L
---- > 14 [1:1]
------ < 12 [0:0] L
-- > 19 [1:0]
---- < 18 [0:0] L
---- > 20 [0:0] L
set([1, 6, 9, 12, 14, 17, 18, 19, 20])
  17 [3:1]
-- < 9 [2:0]
---- < 1 [1:-1]
------ > 6 [0:0] L
---- > 14 [1:1]
------ < 12 [0:0] L
-- > 19 [1:0]
---- < 18 [0:0] L
---- > 20 [0:0] L
set([1, 6, 9, 12, 14, 17, 18, 19, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101681758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 13 steps

SAVING TEST AS failure.39903.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 15                                                                # STEP 0
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 2                                                                 # STEP 2
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 3
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
avl2.insert(int0)                                                        # STEP 4
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 5
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 18                                                                # STEP 6
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                        # STEP 7
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([5, 15]) : <type 'set'>
==================================================
int2 = 7                                                                 # STEP 8
ACTION: int2 = 7 
int2 = 5 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 9
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 5, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([18, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18, 2, 5, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 11
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 12
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488bd40> : <type 'instance'>
avl_REF2 = set([18, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([18, 2, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103dc05f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 19
STOPPING TESTING DUE TO TIMEOUT
8.88093689005 PERCENT COVERED
60.1780970097 TOTAL RUNTIME
8 EXECUTED
632 TOTAL TEST OPERATIONS
29.2608296871 TIME SPENT EXECUTING TEST OPERATIONS
0.0838093757629 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.4431154728 TIME SPENT CHECKING PROPERTIES
58.7039451599 TOTAL TIME SPENT RUNNING SUT
0.00431180000305 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 15                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
int1 = 2                                                                 # STEP 2
int2 = 5                                                                 # STEP 3
avl2.insert(int0)                                                        # STEP 4
avl2.delete(int2)                                                        # STEP 5
int3 = 18                                                                # STEP 6
avl2.insert(int2)                                                        # STEP 7
int2 = 7                                                                 # STEP 8
avl2.insert(int3)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
avl2.insert(int3)                                                       # STEP 11
avl2.delete(int0)                                                       # STEP 12
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103dc05f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
