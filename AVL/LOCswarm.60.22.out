Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40223.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104adbea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 99 steps

SAVING TEST AS failure.40223.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 1
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 8                                                                 # STEP 2
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 3
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 8                                                                 # STEP 4
ACTION: int0 = 8 
int0 = None : <type 'NoneType'>
=> int0 = 8 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 6
ACTION: avl1.delete(int0) 
int0 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 7
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                        # STEP 8
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 10
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 11
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 12
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 2                                                                # STEP 13
ACTION: int0 = 2 
int0 = 8 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 14
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 2]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 15
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 16
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 17
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 18
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 19
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 20
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 21
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 22
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 23
ACTION: avl1.delete(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 24
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 2]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 25
ACTION: int0 = 11 
int0 = 2 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 26
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 27
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([8, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 2, 11]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 28
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([8, 2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 11                                                               # STEP 29
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 30
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([8, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 11]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 31
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 32
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 33
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 34
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 13                                                               # STEP 35
ACTION: int2 = 13 
int2 = 8 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 36
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 37
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 38
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 16                                                               # STEP 39
ACTION: int2 = 16 
int2 = 13 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 40
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 41
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 1                                                                # STEP 42
ACTION: int3 = 1 
int3 = None : <type 'NoneType'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 43
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.insert(int2)                                                       # STEP 44
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 7                                                                # STEP 46
ACTION: int3 = 7 
int3 = 1 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 47
ACTION: int0 = 20 
int0 = 11 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 48
ACTION: int2 = 16 
int2 = 16 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 49
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 9                                                                # STEP 50
ACTION: int0 = 9 
int0 = 20 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 51
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 5                                                                # STEP 52
ACTION: int1 = 5 
int1 = 11 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 53
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl2.find(int3)                                                # STEP 54
ACTION: result = avl2.find(int3) 
int3 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 20                                                               # STEP 55
ACTION: int3 = 20 
int3 = 7 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 56
ACTION: int1 = 10 
int1 = 5 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 57
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 17                                                               # STEP 58
ACTION: int1 = 17 
int1 = 10 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 59
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 1                                                                # STEP 60
ACTION: int0 = 1 
int0 = 9 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
result = avl1.find(int0)                                                # STEP 61
ACTION: result = avl1.find(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 62
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 17]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 63
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl1.inorder()                                                 # STEP 64
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.delete(int1)                                                       # STEP 65
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 66
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 67
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 68
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 69
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 70
ACTION: int2 = 8 
int2 = 16 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 71
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 72
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 17]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 73
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.insert(int0)                                                       # STEP 74
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 2, 11]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 75
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 76
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 1]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 77
ACTION: int1 = 7 
int1 = 17 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 79
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x10596ddd0> : <type 'instance'>
avl_REF1 = set([16, 1]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 80
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 81
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 82
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1, 2, 11]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 83
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 84
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 85
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 86
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 17, 1]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 87
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 88
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([8, 17, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 17]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 89
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 90
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 2, 7, 11, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 91
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 92
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104ad1050> : <type 'instance'>
avl_REF0 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 17, 1]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 93
ACTION: int2 = 7 
int2 = 8 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 94
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 95
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 7, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 96
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 97
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104f41b48> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 98
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x104e6b710> : <type 'instance'>
avl_REF2 = set([1, 2, 7, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([2, 7, 11, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058154d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #18 (0:00:30.053498) Mon May  1 02:10:44 2017 [ 131 stmts 173 branches ]
  10 [2:0]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [1:0]
---- < 11 [0:0] L
---- > 14 [0:0] L
set([5, 7, 10, 11, 13, 14])
  10 [2:0]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [1:0]
---- < 11 [0:0] L
---- > 14 [0:0] L
set([5, 7, 10, 11, 13, 14])
  10 [2:0]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [1:0]
---- < 11 [0:0] L
---- > 14 [0:0] L
set([5, 7, 10, 11, 13, 14])
  13 [2:0]
-- < 6 [1:-1]
---- > 12 [0:0] L
-- > 19 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([6, 12, 13, 17, 19, 20])
  10 [2:0]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [1:0]
---- < 11 [0:0] L
---- > 14 [0:0] L
set([5, 7, 10, 11, 13, 14])
  10 [3:-1]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [2:-1]
---- < 11 [0:0] L
---- > 14 [1:-1]
------ > 19 [0:0] L
set([5, 7, 10, 11, 13, 14, 19])
  13 [2:0]
-- < 6 [1:-1]
---- > 12 [0:0] L
-- > 19 [1:0]
---- < 17 [0:0] L
---- > 20 [0:0] L
set([6, 12, 13, 17, 19, 20])
  10 [3:-1]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [2:0]
---- < 11 [1:-1]
------ > 12 [0:0] L
---- > 14 [1:-1]
------ > 19 [0:0] L
set([5, 7, 10, 11, 12, 13, 14, 19])
  10 [3:-1]
-- < 7 [1:1]
---- < 5 [0:0] L
-- > 13 [2:0]
---- < 11 [1:-1]
------ > 12 [0:0] L
---- > 14 [1:-1]
------ > 19 [0:0] L
set([5, 7, 10, 11, 12, 13, 14, 19])
  10 [2:0]
-- < 5 [1:-1]
---- > 9 [0:0] L
-- > 18 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
set([5, 9, 10, 13, 18, 19])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 31
STOPPING TESTING DUE TO TIMEOUT
8.28190971095 PERCENT COVERED
60.1777341366 TOTAL RUNTIME
6 EXECUTED
530 TOTAL TEST OPERATIONS
25.2045710087 TIME SPENT EXECUTING TEST OPERATIONS
0.063583612442 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.2653689384 TIME SPENT CHECKING PROPERTIES
50.4699399471 TOTAL TIME SPENT RUNNING SUT
0.00379705429077 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
avl1 = avl.AVLTree()                                                     # STEP 0
result = avl1.inorder()                                                  # STEP 1
int2 = 8                                                                 # STEP 2
avl1.delete(int2)                                                        # STEP 3
int0 = 8                                                                 # STEP 4
avl1.insert(int0)                                                        # STEP 5
avl1.delete(int0)                                                        # STEP 6
avl1.delete(int2)                                                        # STEP 7
avl1.delete(int2)                                                        # STEP 8
avl1.insert(int0)                                                        # STEP 9
result = avl1.inorder()                                                 # STEP 10
avl1.insert(int2)                                                       # STEP 11
result = avl1.inorder()                                                 # STEP 12
int0 = 2                                                                # STEP 13
avl1.insert(int0)                                                       # STEP 14
avl2 = avl.AVLTree()                                                    # STEP 15
avl1.delete(int0)                                                       # STEP 16
avl2.insert(int2)                                                       # STEP 17
avl1.insert(int2)                                                       # STEP 18
avl1.insert(int2)                                                       # STEP 19
avl2.delete(int2)                                                       # STEP 20
avl2.insert(int0)                                                       # STEP 21
avl2.delete(int2)                                                       # STEP 22
avl1.delete(int0)                                                       # STEP 23
avl2.insert(int2)                                                       # STEP 24
int0 = 11                                                               # STEP 25
avl1.delete(int2)                                                       # STEP 26
avl2.insert(int0)                                                       # STEP 27
result = avl2.inorder()                                                 # STEP 28
int1 = 11                                                               # STEP 29
avl2.delete(int2)                                                       # STEP 30
avl1.delete(int0)                                                       # STEP 31
avl0 = avl.AVLTree()                                                    # STEP 32
avl1.delete(int2)                                                       # STEP 33
avl0.delete(int2)                                                       # STEP 34
int2 = 13                                                               # STEP 35
avl0.insert(int0)                                                       # STEP 36
avl1.insert(int0)                                                       # STEP 37
avl0.delete(int2)                                                       # STEP 38
int2 = 16                                                               # STEP 39
avl1.delete(int1)                                                       # STEP 40
result = avl0.inorder()                                                 # STEP 41
int3 = 1                                                                # STEP 42
result = avl0.inorder()                                                 # STEP 43
avl1.insert(int2)                                                       # STEP 44
avl1.delete(int3)                                                       # STEP 45
int3 = 7                                                                # STEP 46
int0 = 20                                                               # STEP 47
int2 = 16                                                               # STEP 48
avl0.delete(int0)                                                       # STEP 49
int0 = 9                                                                # STEP 50
avl0.delete(int1)                                                       # STEP 51
int1 = 5                                                                # STEP 52
avl0.delete(int1)                                                       # STEP 53
result = avl2.find(int3)                                                # STEP 54
int3 = 20                                                               # STEP 55
int1 = 10                                                               # STEP 56
avl0.delete(int1)                                                       # STEP 57
int1 = 17                                                               # STEP 58
avl1.delete(int0)                                                       # STEP 59
int0 = 1                                                                # STEP 60
result = avl1.find(int0)                                                # STEP 61
avl1.insert(int1)                                                       # STEP 62
result = avl0.inorder()                                                 # STEP 63
result = avl1.inorder()                                                 # STEP 64
avl2.delete(int1)                                                       # STEP 65
avl1.insert(int2)                                                       # STEP 66
avl1.insert(int1)                                                       # STEP 67
avl0.insert(int1)                                                       # STEP 68
avl1.delete(int1)                                                       # STEP 69
int2 = 8                                                                # STEP 70
avl2.delete(int2)                                                       # STEP 71
avl0.insert(int2)                                                       # STEP 72
result = avl1.inorder()                                                 # STEP 73
avl2.insert(int0)                                                       # STEP 74
avl1.delete(int1)                                                       # STEP 75
avl1.insert(int0)                                                       # STEP 76
int1 = 7                                                                # STEP 77
avl0.delete(int3)                                                       # STEP 78
avl1 = avl.AVLTree()                                                    # STEP 79
avl2.insert(int3)                                                       # STEP 80
avl1.insert(int3)                                                       # STEP 81
avl2.delete(int3)                                                       # STEP 82
avl1.delete(int1)                                                       # STEP 83
avl2.delete(int3)                                                       # STEP 84
avl1.insert(int3)                                                       # STEP 85
avl0.insert(int0)                                                       # STEP 86
avl2.insert(int3)                                                       # STEP 87
avl0.delete(int0)                                                       # STEP 88
avl2.delete(int2)                                                       # STEP 89
avl2.insert(int1)                                                       # STEP 90
avl1.delete(int1)                                                       # STEP 91
avl0.insert(int0)                                                       # STEP 92
int2 = 7                                                                # STEP 93
avl1.delete(int3)                                                       # STEP 94
avl2.insert(int0)                                                       # STEP 95
avl1.insert(int3)                                                       # STEP 96
avl1.delete(int2)                                                       # STEP 97
avl2.delete(int0)                                                       # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058154d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
201 BRANCHES COVERED
151 STATEMENTS COVERED
