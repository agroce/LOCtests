Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.42366.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105201bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 35 steps

SAVING TEST AS failure.42366.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 17                                                                # STEP 0
ACTION: int2 = 17 
int2 = None : <type 'NoneType'>
=> int2 = 17 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 2
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 3
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 3                                                                 # STEP 4
ACTION: int2 = 3 
int2 = 17 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 5
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 14                                                                # STEP 6
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 7
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 3]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 8
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 9                                                                 # STEP 9
ACTION: int1 = 9 
int1 = 3 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 10
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 11
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 3, 9]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 12
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 3, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17, 9]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 13
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 14
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 15
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 14, 9]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 16
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
int2 = 6                                                                # STEP 17
ACTION: int2 = 6 
int2 = 3 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 18
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 19
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 20
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 21
ACTION: int1 = 19 
int1 = 9 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 22
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 14]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 14, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([17, 9]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 25
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 26
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1042a7290> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 3, 9]) : <type 'set'>
==================================================
int3 = 10                                                               # STEP 27
ACTION: int3 = 10 
int3 = 14 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 28
ACTION: avl1.insert(int1) 
int1 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([19, 3, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 29
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 14                                                               # STEP 30
ACTION: int1 = 14 
int1 = 19 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 14                                                               # STEP 31
ACTION: int0 = 14 
int0 = 3 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 32
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 33
ACTION: avl1.insert(int3) 
int3 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([19, 10, 3, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 34
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1042847a0> : <type 'instance'>
avl_REF1 = set([19, 10, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([19, 10, 3]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1044d8998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #69 (0:00:30.050129) Mon May  1 02:49:36 2017 [ 135 stmts 180 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1044cf320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 85 steps

SAVING TEST AS failure.42366.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 19                                                                # STEP 0
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
int2 = 17                                                                # STEP 1
ACTION: int2 = 17 
int2 = None : <type 'NoneType'>
=> int2 = 17 : <type 'int'>
==================================================
int3 = 18                                                                # STEP 2
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
int0 = 9                                                                 # STEP 3
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 5
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int1)                                                 # STEP 6
ACTION: result = avl0.find(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 8
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 18]) : <type 'set'>
==================================================
int2 = 5                                                                 # STEP 9
ACTION: int2 = 5 
int2 = 17 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 10
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 11
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int1 = 1                                                                # STEP 13
ACTION: int1 = 1 
int1 = 19 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int0 = 8                                                                # STEP 14
ACTION: int0 = 8 
int0 = 9 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 15
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 16
ACTION: int3 = 8 
int3 = 18 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 17
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 1]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 18
ACTION: int1 = 10 
int1 = 1 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 19
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 5, 1]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 20
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 1                                                                # STEP 21
ACTION: int3 = 1 
int3 = 8 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 1]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 23
ACTION: int2 = 16 
int2 = 5 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 24
ACTION: result = avl0.find(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 9                                                                # STEP 25
ACTION: int1 = 9 
int1 = 10 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 26
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 7                                                                # STEP 27
ACTION: int3 = 7 
int3 = 1 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 28
ACTION: result = avl0.find(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 29
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 7, 1]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 30
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([17, 7, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 7, 8, 17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 31
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 33
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 8, 17]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 34
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 35
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 36
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 37
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 38
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 39
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 7, 8, 16, 17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 41
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 42
ACTION: int2 = 16 
int2 = 16 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 43
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 7, 8, 16, 17]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 45
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 46
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 5, 7, 8, 16, 17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 47
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 7, 8, 16, 17]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 48
ACTION: int0 = 8 
int0 = 8 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 49
ACTION: int3 = 1 
int3 = 5 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 50
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([1, 7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([7, 8, 16, 17]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 51
ACTION: int3 = 14 
int3 = 1 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 52
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 53
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 54
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.find(int0)                                                # STEP 55
ACTION: result = avl0.find(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 56
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 57
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 58
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 59
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7, 8, 9, 14, 16, 17]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 60
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 61
ACTION: int2 = 7 
int2 = 16 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 62
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 9, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 63
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 14, 16, 17]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 64
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1045e6320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 65
ACTION: int0 = 1 
int0 = 8 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int3 = 8                                                                # STEP 66
ACTION: int3 = 8 
int3 = 14 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 67
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 68
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 69
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1045e6320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 70
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 1]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 71
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([9, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 72
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1045e6320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 73
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 74
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 1]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 75
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 76
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1045e6320> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 77
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1044cf3f8> : <type 'instance'>
avl_REF0 = set([7, 8, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 14, 16, 17]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 78
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([9, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 7, 1]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 79
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1045e6320> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 80
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([9, 7, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 81
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1045e6320> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 7]) : <type 'set'>
==================================================
int2 = 4                                                                # STEP 82
ACTION: int2 = 4 
int2 = 7 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 83
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([9, 7, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 9, 7, 1]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 84
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1045d89e0> : <type 'instance'>
avl_REF2 = set([8, 9, 7, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([8, 9, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1044d2cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 41
STOPPING TESTING DUE TO TIMEOUT
7.69730431958 PERCENT COVERED
60.206745863 TOTAL RUNTIME
7 EXECUTED
561 TOTAL TEST OPERATIONS
24.6904459 TIME SPENT EXECUTING TEST OPERATIONS
0.0604555606842 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.9397640228 TIME SPENT CHECKING PROPERTIES
49.6302099228 TOTAL TIME SPENT RUNNING SUT
0.00385403633118 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 17                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2.insert(int2)                                                        # STEP 2
result = avl2.inorder()                                                  # STEP 3
int2 = 3                                                                 # STEP 4
int1 = 3                                                                 # STEP 5
int3 = 14                                                                # STEP 6
avl2.insert(int1)                                                        # STEP 7
avl2.insert(int1)                                                        # STEP 8
int1 = 9                                                                 # STEP 9
avl2.delete(int1)                                                       # STEP 10
avl2.insert(int1)                                                       # STEP 11
avl2.delete(int2)                                                       # STEP 12
avl2.insert(int1)                                                       # STEP 13
avl2.delete(int2)                                                       # STEP 14
avl2.insert(int3)                                                       # STEP 15
int0 = 3                                                                # STEP 16
int2 = 6                                                                # STEP 17
avl1 = avl.AVLTree()                                                    # STEP 18
result = avl1.inorder()                                                 # STEP 19
avl1.insert(int0)                                                       # STEP 20
int1 = 19                                                               # STEP 21
avl1.insert(int3)                                                       # STEP 22
result = avl1.inorder()                                                 # STEP 23
avl2.delete(int3)                                                       # STEP 24
avl2.delete(int0)                                                       # STEP 25
avl2.insert(int0)                                                       # STEP 26
int3 = 10                                                               # STEP 27
avl1.insert(int1)                                                       # STEP 28
avl1.insert(int0)                                                       # STEP 29
int1 = 14                                                               # STEP 30
int0 = 14                                                               # STEP 31
avl1.insert(int1)                                                       # STEP 32
avl1.insert(int3)                                                       # STEP 33
avl1.delete(int1)                                                       # STEP 34
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1044d8998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int1 = 19                                                                # STEP 0
int2 = 17                                                                # STEP 1
int3 = 18                                                                # STEP 2
int0 = 9                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int1)                                                        # STEP 5
result = avl0.find(int1)                                                 # STEP 6
avl0.insert(int3)                                                        # STEP 7
avl0.insert(int2)                                                        # STEP 8
int2 = 5                                                                 # STEP 9
avl0.insert(int3)                                                       # STEP 10
avl0.delete(int0)                                                       # STEP 11
avl0.insert(int3)                                                       # STEP 12
int1 = 1                                                                # STEP 13
int0 = 8                                                                # STEP 14
avl0.delete(int3)                                                       # STEP 15
int3 = 8                                                                # STEP 16
avl0.insert(int1)                                                       # STEP 17
int1 = 10                                                               # STEP 18
avl0.insert(int2)                                                       # STEP 19
avl0.delete(int3)                                                       # STEP 20
int3 = 1                                                                # STEP 21
avl0.delete(int2)                                                       # STEP 22
int2 = 16                                                               # STEP 23
result = avl0.find(int1)                                                # STEP 24
int1 = 9                                                                # STEP 25
avl0.insert(int3)                                                       # STEP 26
int3 = 7                                                                # STEP 27
result = avl0.find(int0)                                                # STEP 28
avl0.insert(int3)                                                       # STEP 29
avl0.insert(int0)                                                       # STEP 30
avl0.delete(int2)                                                       # STEP 31
avl0.insert(int0)                                                       # STEP 32
avl0.delete(int3)                                                       # STEP 33
avl0.insert(int2)                                                       # STEP 34
result = avl0.find(int3)                                                # STEP 35
avl0.delete(int3)                                                       # STEP 36
avl0.insert(int0)                                                       # STEP 37
avl0.insert(int2)                                                       # STEP 38
avl0.insert(int2)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl0.delete(int3)                                                       # STEP 41
int2 = 16                                                               # STEP 42
avl0.delete(int3)                                                       # STEP 43
avl0.insert(int3)                                                       # STEP 44
int3 = 5                                                                # STEP 45
avl0.insert(int3)                                                       # STEP 46
avl0.delete(int3)                                                       # STEP 47
int0 = 8                                                                # STEP 48
int3 = 1                                                                # STEP 49
avl0.delete(int3)                                                       # STEP 50
int3 = 14                                                               # STEP 51
avl0.delete(int1)                                                       # STEP 52
avl0.insert(int2)                                                       # STEP 53
avl0.insert(int2)                                                       # STEP 54
result = avl0.find(int0)                                                # STEP 55
avl0.insert(int3)                                                       # STEP 56
avl0.delete(int1)                                                       # STEP 57
avl0.insert(int3)                                                       # STEP 58
avl0.insert(int1)                                                       # STEP 59
avl2 = avl.AVLTree()                                                    # STEP 60
int2 = 7                                                                # STEP 61
avl0.delete(int1)                                                       # STEP 62
avl0.delete(int2)                                                       # STEP 63
avl1 = avl.AVLTree()                                                    # STEP 64
int0 = 1                                                                # STEP 65
int3 = 8                                                                # STEP 66
avl2.insert(int1)                                                       # STEP 67
avl0.insert(int2)                                                       # STEP 68
avl1.delete(int2)                                                       # STEP 69
avl2.insert(int0)                                                       # STEP 70
avl2.delete(int0)                                                       # STEP 71
avl1.insert(int1)                                                       # STEP 72
avl0.insert(int3)                                                       # STEP 73
avl2.insert(int0)                                                       # STEP 74
avl0.delete(int0)                                                       # STEP 75
avl1.delete(int0)                                                       # STEP 76
avl0.delete(int2)                                                       # STEP 77
avl2.insert(int2)                                                       # STEP 78
avl1.insert(int1)                                                       # STEP 79
avl2.insert(int1)                                                       # STEP 80
avl1.insert(int2)                                                       # STEP 81
int2 = 4                                                                # STEP 82
avl2.insert(int3)                                                       # STEP 83
avl2.delete(int0)                                                       # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1044d2cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
185 BRANCHES COVERED
139 STATEMENTS COVERED
