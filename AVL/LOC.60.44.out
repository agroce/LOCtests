Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99958.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  14 [2:0]
-- < 9 [1:0]
---- < 8 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 18 [0:0] L
set([8, 9, 11, 14, 16, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104ce5758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 93 steps

SAVING TEST AS failure.99958.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 7                                                                 # STEP 0
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
int3 = 14                                                                # STEP 1
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 2
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
int2 = 16                                                                # STEP 3
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 5
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int3)                                                        # STEP 6
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 7
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 2                                                                 # STEP 8
ACTION: int2 = 2 
int2 = 16 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
int3 = 9                                                                 # STEP 9
ACTION: int3 = 9 
int3 = 14 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 10
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 11
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([14, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 12
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 13
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int3 = 14                                                               # STEP 14
ACTION: int3 = 14 
int3 = 9 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 15
ACTION: avl2.insert(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 2, 14, 7]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 16
ACTION: int2 = 12 
int2 = 2 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 17
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                 # STEP 18
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 19
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 20
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 21
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 22
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([9, 2, 12, 7]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 23
ACTION: result = avl2.find(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 24
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 25
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([9, 2, 12, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 27
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int2 = 19                                                               # STEP 28
ACTION: int2 = 19 
int2 = 12 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 29
ACTION: avl2 = avl.AVLTree() 
avl2 = <avl.AVLTree instance at 0x104bfc290> : <type 'instance'>
avl_REF2 = set([9, 2, 12, 14, 7]) : <type 'set'>
=> avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 30
ACTION: int0 = 10 
int0 = 7 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 31
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 32
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.find(int2)                                                # STEP 33
ACTION: result = avl2.find(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 34
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 18                                                               # STEP 35
ACTION: int2 = 18 
int2 = 19 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 36
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 37
ACTION: int1 = 20 
int1 = 12 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 40
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2 == avl2                                                            # STEP 41
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.inorder()                                                 # STEP 42
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 17                                                               # STEP 43
ACTION: int1 = 17 
int1 = 20 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 44
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 45
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 46
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int0)                                                       # STEP 47
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 48
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 4                                                                # STEP 49
ACTION: int2 = 4 
int2 = 18 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 50
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 14]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 51
ACTION: result = avl2.find(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 52
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 53
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 54
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 10]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 55
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 56
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 10]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 57
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 10, 4]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 58
ACTION: int3 = 6 
int3 = 14 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 59
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17, 4]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 60
ACTION: avl2.delete(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 61
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 62
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 10]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 63
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 10, 6]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 64
ACTION: avl2.delete(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 65
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int2 = 10                                                               # STEP 66
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 67
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([17, 10]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 68
ACTION: result = avl2.find(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 69
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 70
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.inorder()                                                 # STEP 71
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 19                                                               # STEP 72
ACTION: int0 = 19 
int0 = 10 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 73
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 74
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 75
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 76
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 77
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 78
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 10]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 79
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 80
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 81
ACTION: avl2.delete(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 82
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 10]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 83
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([16, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 84
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([16, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 19, 10]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 85
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x105961638> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 86
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105961638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 87
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([16, 19, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 88
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([16, 19, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 17, 19, 10]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 89
ACTION: result = avl2.find(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([16, 17, 19, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int3 = 15                                                               # STEP 90
ACTION: int3 = 15 
int3 = 16 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 91
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105961638> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 92
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10588e7a0> : <type 'instance'>
avl_REF2 = set([16, 17, 19, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([16, 17, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105968a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #11 (0:00:30.068041) Fri Apr 28 05:25:29 2017 [ 161 stmts 214 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10596d7e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 26 steps

SAVING TEST AS failure.99958.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 20                                                                # STEP 0
ACTION: int2 = 20 
int2 = None : <type 'NoneType'>
=> int2 = 20 : <type 'int'>
==================================================
int0 = 9                                                                 # STEP 1
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 2
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
int3 = 20                                                                # STEP 3
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                        # STEP 6
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 7
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 20]) : <type 'set'>
==================================================
int2 = 1                                                                 # STEP 8
ACTION: int2 = 1 
int2 = 20 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
result = avl0.inorder()                                                  # STEP 9
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 13                                                               # STEP 10
ACTION: int0 = 13 
int0 = 9 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 11
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0 == avl0                                                            # STEP 12
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
result = avl0.inorder()                                                 # STEP 13
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int1)                                                # STEP 14
ACTION: result = avl0.find(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 12                                                               # STEP 18
ACTION: int1 = 12 
int1 = 12 : <type 'int'>
==================================================
int3 = 14                                                               # STEP 19
ACTION: int3 = 14 
int3 = 20 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 20
ACTION: result = avl0.find(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 20, 13]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 20, 13, 14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 23
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 20, 13]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 20, 13, 12]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 25
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10596df38> : <type 'instance'>
avl_REF0 = set([9, 20, 13, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9, 20, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105976998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1059775f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 51 steps

SAVING TEST AS failure.99958.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 17                                                                # STEP 0
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 7                                                                 # STEP 1
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
int1 = 2                                                                 # STEP 2
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
int2 = 8                                                                 # STEP 3
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 6
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 13                                                                # STEP 7
ACTION: int2 = 13 
int2 = 8 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int3 = 16                                                                # STEP 8
ACTION: int3 = 16 
int3 = 17 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 9
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 10
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 11
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 16                                                               # STEP 12
ACTION: int3 = 16 
int3 = 16 : <type 'int'>
==================================================
int0 = 2                                                                # STEP 13
ACTION: int0 = 2 
int0 = 7 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 15
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 16
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 2]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 17
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 18
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 19
ACTION: result = avl0.find(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 2]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 2]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 25
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 2]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 26
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 2, 13]) : <type 'set'>
==================================================
int3 = 2                                                                # STEP 27
ACTION: int3 = 2 
int3 = 16 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 28
ACTION: int0 = 20 
int0 = 2 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
int2 = 13                                                               # STEP 29
ACTION: int2 = 13 
int2 = 13 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 30
ACTION: int1 = 10 
int1 = 2 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 31
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 2, 20, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 2, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 33
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 2, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([17, 20]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 34
ACTION: int0 = 1 
int0 = 20 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 35
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 10, 20]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 37
ACTION: int3 = 5 
int3 = 2 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 39
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 10, 20, 5]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 41
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 42
ACTION: int0 = 17 
int0 = 1 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 43
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 45
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([17, 10, 20, 13]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 46
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 47
ACTION: result = avl0.find(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 48
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 10, 20, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 49
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 50
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105977d40> : <type 'instance'>
avl_REF0 = set([17, 10, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([10, 20, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b817a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104bb6098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 43 steps

SAVING TEST AS failure.99958.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 15                                                                # STEP 0
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int1 = 18                                                                # STEP 1
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
int0 = 20                                                                # STEP 2
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 3
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 7
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([12, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl1.insert(int1)                                                        # STEP 9
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12, 18]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 10
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12, 18, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int3 = 18                                                               # STEP 12
ACTION: int3 = 18 
int3 = 12 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
result = avl1.find(int0)                                                # STEP 14
ACTION: result = avl1.find(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 18                                                               # STEP 16
ACTION: int0 = 18 
int0 = 20 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 19
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 1                                                                # STEP 20
ACTION: int1 = 1 
int1 = 18 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 21
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 22
ACTION: result = avl1.find(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
result = avl1.find(int0)                                                # STEP 23
ACTION: result = avl1.find(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
result = avl1.find(int3)                                                # STEP 24
ACTION: result = avl1.find(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 26
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 27
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([12, 18, 20]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 28
ACTION: int0 = 17 
int0 = 18 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 29
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int3)                                                # STEP 30
ACTION: result = avl1.find(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 31
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 32
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 33
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([12, 18, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 35
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12, 18, 20, 1]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 36
ACTION: int2 = 15 
int2 = 15 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 37
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 38
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1 == avl1                                                            # STEP 39
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int0 = 15                                                               # STEP 40
ACTION: int0 = 15 
int0 = 17 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 41
ACTION: int1 = 18 
int1 = 1 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 42
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104bb67e8> : <type 'instance'>
avl_REF1 = set([12, 18, 20, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([12, 20, 1]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f3cdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
  11 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([3, 4, 7, 11, 12, 15])
  11 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([3, 4, 7, 11, 12, 15])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 54
STOPPING TESTING DUE TO TIMEOUT
8.58500169664 PERCENT COVERED
60.222867012 TOTAL RUNTIME
8 EXECUTED
567 TOTAL TEST OPERATIONS
21.866089344 TIME SPENT EXECUTING TEST OPERATIONS
0.0671319961548 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
21.9398269653 TIME SPENT CHECKING PROPERTIES
43.8059163094 TOTAL TIME SPENT RUNNING SUT
0.0042519569397 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 7                                                                 # STEP 0
int3 = 14                                                                # STEP 1
int1 = 12                                                                # STEP 2
int2 = 16                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int3)                                                        # STEP 5
avl2.insert(int3)                                                        # STEP 6
avl2.delete(int2)                                                        # STEP 7
int2 = 2                                                                 # STEP 8
int3 = 9                                                                 # STEP 9
avl2.delete(int2)                                                       # STEP 10
avl2.insert(int0)                                                       # STEP 11
avl2.insert(int3)                                                       # STEP 12
avl2.insert(int0)                                                       # STEP 13
int3 = 14                                                               # STEP 14
avl2.insert(int2)                                                       # STEP 15
int2 = 12                                                               # STEP 16
result = avl2.inorder()                                                 # STEP 17
result = avl2.inorder()                                                 # STEP 18
avl2.insert(int3)                                                       # STEP 19
avl2.insert(int2)                                                       # STEP 20
avl2.insert(int3)                                                       # STEP 21
avl2.delete(int3)                                                       # STEP 22
result = avl2.find(int0)                                                # STEP 23
avl2.insert(int3)                                                       # STEP 24
avl2.delete(int3)                                                       # STEP 25
avl2.insert(int3)                                                       # STEP 26
avl2.insert(int2)                                                       # STEP 27
int2 = 19                                                               # STEP 28
avl2 = avl.AVLTree()                                                    # STEP 29
int0 = 10                                                               # STEP 30
avl2.insert(int1)                                                       # STEP 31
avl2.delete(int0)                                                       # STEP 32
result = avl2.find(int2)                                                # STEP 33
avl2.delete(int2)                                                       # STEP 34
int2 = 18                                                               # STEP 35
avl2.delete(int1)                                                       # STEP 36
int1 = 20                                                               # STEP 37
avl2.insert(int2)                                                       # STEP 38
avl2.delete(int2)                                                       # STEP 39
avl2.delete(int1)                                                       # STEP 40
avl2 == avl2                                                            # STEP 41
result = avl2.inorder()                                                 # STEP 42
int1 = 17                                                               # STEP 43
result = avl2.inorder()                                                 # STEP 44
avl2.delete(int3)                                                       # STEP 45
result = avl2.inorder()                                                 # STEP 46
avl2.insert(int0)                                                       # STEP 47
avl2.delete(int3)                                                       # STEP 48
int2 = 4                                                                # STEP 49
avl2.insert(int3)                                                       # STEP 50
result = avl2.find(int2)                                                # STEP 51
avl2.insert(int0)                                                       # STEP 52
avl2.delete(int3)                                                       # STEP 53
avl2.insert(int1)                                                       # STEP 54
avl2.delete(int0)                                                       # STEP 55
avl2.insert(int0)                                                       # STEP 56
avl2.insert(int2)                                                       # STEP 57
int3 = 6                                                                # STEP 58
avl2.delete(int0)                                                       # STEP 59
avl2.delete(int2)                                                       # STEP 60
avl2.insert(int1)                                                       # STEP 61
avl2.insert(int0)                                                       # STEP 62
avl2.insert(int3)                                                       # STEP 63
avl2.delete(int2)                                                       # STEP 64
avl2.insert(int3)                                                       # STEP 65
int2 = 10                                                               # STEP 66
avl2.delete(int3)                                                       # STEP 67
result = avl2.find(int0)                                                # STEP 68
avl2.delete(int1)                                                       # STEP 69
avl2 == avl2                                                            # STEP 70
result = avl2.inorder()                                                 # STEP 71
int0 = 19                                                               # STEP 72
avl2.delete(int2)                                                       # STEP 73
avl2.delete(int0)                                                       # STEP 74
avl2.delete(int1)                                                       # STEP 75
avl2.insert(int2)                                                       # STEP 76
int3 = 16                                                               # STEP 77
avl2.insert(int1)                                                       # STEP 78
avl2.insert(int1)                                                       # STEP 79
avl2.insert(int2)                                                       # STEP 80
avl2.delete(int1)                                                       # STEP 81
avl2.insert(int3)                                                       # STEP 82
avl2.insert(int2)                                                       # STEP 83
avl2.insert(int0)                                                       # STEP 84
avl0 = avl.AVLTree()                                                    # STEP 85
avl0.insert(int2)                                                       # STEP 86
avl2.insert(int0)                                                       # STEP 87
avl2.insert(int1)                                                       # STEP 88
result = avl2.find(int0)                                                # STEP 89
int3 = 15                                                               # STEP 90
avl0.delete(int2)                                                       # STEP 91
avl2.delete(int2)                                                       # STEP 92
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105968a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int2 = 20                                                                # STEP 0
int0 = 9                                                                 # STEP 1
int1 = 12                                                                # STEP 2
int3 = 20                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int2)                                                        # STEP 5
avl0.insert(int2)                                                        # STEP 6
avl0.insert(int0)                                                        # STEP 7
int2 = 1                                                                 # STEP 8
result = avl0.inorder()                                                  # STEP 9
int0 = 13                                                               # STEP 10
result = avl0.inorder()                                                 # STEP 11
avl0 == avl0                                                            # STEP 12
result = avl0.inorder()                                                 # STEP 13
result = avl0.find(int1)                                                # STEP 14
avl0.insert(int3)                                                       # STEP 15
avl0.insert(int3)                                                       # STEP 16
avl0.delete(int1)                                                       # STEP 17
int1 = 12                                                               # STEP 18
int3 = 14                                                               # STEP 19
result = avl0.find(int3)                                                # STEP 20
avl0.insert(int0)                                                       # STEP 21
avl0.insert(int3)                                                       # STEP 22
avl0.delete(int3)                                                       # STEP 23
avl0.insert(int1)                                                       # STEP 24
avl0.delete(int0)                                                       # STEP 25
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105976998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int3 = 17                                                                # STEP 0
int0 = 7                                                                 # STEP 1
int1 = 2                                                                 # STEP 2
int2 = 8                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int3)                                                        # STEP 5
avl0.delete(int2)                                                        # STEP 6
int2 = 13                                                                # STEP 7
int3 = 16                                                                # STEP 8
avl0.delete(int3)                                                        # STEP 9
avl0.delete(int0)                                                       # STEP 10
result = avl0.inorder()                                                 # STEP 11
int3 = 16                                                               # STEP 12
int0 = 2                                                                # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.delete(int3)                                                       # STEP 15
avl0.insert(int0)                                                       # STEP 16
avl0 == avl0                                                            # STEP 17
avl0.delete(int1)                                                       # STEP 18
result = avl0.find(int0)                                                # STEP 19
avl0.delete(int1)                                                       # STEP 20
avl0.insert(int0)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl0.delete(int0)                                                       # STEP 24
avl0.insert(int1)                                                       # STEP 25
avl0.insert(int2)                                                       # STEP 26
int3 = 2                                                                # STEP 27
int0 = 20                                                               # STEP 28
int2 = 13                                                               # STEP 29
int1 = 10                                                               # STEP 30
avl0.insert(int0)                                                       # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl0.delete(int3)                                                       # STEP 33
int0 = 1                                                                # STEP 34
result = avl0.inorder()                                                 # STEP 35
avl0.insert(int1)                                                       # STEP 36
int3 = 5                                                                # STEP 37
avl0.delete(int0)                                                       # STEP 38
avl0.insert(int3)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl0.insert(int2)                                                       # STEP 41
int0 = 17                                                               # STEP 42
result = avl0.inorder()                                                 # STEP 43
avl0.insert(int3)                                                       # STEP 44
avl0.delete(int3)                                                       # STEP 45
avl0.insert(int3)                                                       # STEP 46
result = avl0.find(int2)                                                # STEP 47
avl0.delete(int2)                                                       # STEP 48
avl0.insert(int0)                                                       # STEP 49
avl0.delete(int0)                                                       # STEP 50
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b817a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 3
int2 = 15                                                                # STEP 0
int1 = 18                                                                # STEP 1
int0 = 20                                                                # STEP 2
int3 = 12                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int3)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl1.insert(int3)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.insert(int1)                                                        # STEP 9
avl1.insert(int0)                                                       # STEP 10
avl1.insert(int0)                                                       # STEP 11
int3 = 18                                                               # STEP 12
avl1.insert(int0)                                                       # STEP 13
result = avl1.find(int0)                                                # STEP 14
avl1.insert(int0)                                                       # STEP 15
int0 = 18                                                               # STEP 16
avl1.delete(int2)                                                       # STEP 17
avl1.insert(int1)                                                       # STEP 18
avl1.insert(int1)                                                       # STEP 19
int1 = 1                                                                # STEP 20
avl1.insert(int2)                                                       # STEP 21
result = avl1.find(int2)                                                # STEP 22
result = avl1.find(int0)                                                # STEP 23
result = avl1.find(int3)                                                # STEP 24
avl1.insert(int3)                                                       # STEP 25
avl1.insert(int0)                                                       # STEP 26
avl1.delete(int2)                                                       # STEP 27
int0 = 17                                                               # STEP 28
avl1.delete(int2)                                                       # STEP 29
result = avl1.find(int3)                                                # STEP 30
avl1.insert(int3)                                                       # STEP 31
avl1.insert(int2)                                                       # STEP 32
avl1.insert(int3)                                                       # STEP 33
avl1.delete(int2)                                                       # STEP 34
avl1.insert(int1)                                                       # STEP 35
int2 = 15                                                               # STEP 36
avl1.insert(int3)                                                       # STEP 37
avl1.delete(int0)                                                       # STEP 38
avl1 == avl1                                                            # STEP 39
int0 = 15                                                               # STEP 40
int1 = 18                                                               # STEP 41
avl1.delete(int3)                                                       # STEP 42
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f3cdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
