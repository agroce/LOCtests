Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62210.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102d83290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 83 steps

SAVING TEST AS failure.62210.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 16                                                                # STEP 0
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
int3 = 20                                                                # STEP 1
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 2
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 16                                                                # STEP 4
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
avl0.insert(int2)                                                        # STEP 5
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 6
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 7
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 8
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 19                                                                # STEP 9
ACTION: int2 = 19 
int2 = 16 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 10
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 14
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 16
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 17
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 3, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 18
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 3, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([16, 3]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 19
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 3, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 21
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([16, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 24
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 25
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 26
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 27
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 29
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 30
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 31
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([19, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 32
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int3 = 2                                                                # STEP 33
ACTION: int3 = 2 
int3 = 20 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 34
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 35
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 19, 20]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 36
ACTION: int0 = 15 
int0 = 16 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 37
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 39
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([19, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 40
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 19                                                               # STEP 41
ACTION: int1 = 19 
int1 = 3 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 43
ACTION: int1 = 2 
int1 = 19 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 44
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 45
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 46
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 1                                                                # STEP 47
ACTION: int2 = 1 
int2 = 19 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 48
ACTION: result = avl0.find(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 49
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0 == avl0                                                            # STEP 50
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int0 = 3                                                                # STEP 51
ACTION: int0 = 3 
int0 = 15 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 52
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 19, 20]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 53
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int1)                                                       # STEP 54
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 2, 19, 20]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 56
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 1, 2, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 57
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 1, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 2, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 58
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([1, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 59
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 1                                                                # STEP 60
ACTION: int2 = 1 
int2 = 1 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 61
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 2, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 62
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 63
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([3, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([19, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 64
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 19, 20]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 65
ACTION: int3 = 7 
int3 = 2 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 66
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 67
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 68
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 19                                                               # STEP 69
ACTION: int0 = 19 
int0 = 3 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 70
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 6                                                                # STEP 71
ACTION: int3 = 6 
int3 = 7 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 72
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 73
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0 == avl0                                                            # STEP 74
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int3)                                                       # STEP 75
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 76
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int1)                                                # STEP 77
ACTION: result = avl0.find(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 78
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 6, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 79
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 6, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 14                                                               # STEP 80
ACTION: int3 = 14 
int3 = 6 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 81
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 6, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 82
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101f7dd40> : <type 'instance'>
avl_REF0 = set([2, 6, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 6, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cbdc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #26 (0:00:30.052933) Mon May  1 17:57:48 2017 [ 147 stmts 193 branches ]
  13 [2:0]
-- < 11 [1:1]
---- < 2 [0:0] L
-- > 19 [1:0]
---- < 18 [0:0] L
---- > 20 [0:0] L
set([2, 11, 13, 18, 19, 20])
  13 [2:0]
-- < 11 [1:1]
---- < 2 [0:0] L
-- > 19 [1:0]
---- < 18 [0:0] L
---- > 20 [0:0] L
set([2, 11, 13, 18, 19, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c67128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 47 steps

SAVING TEST AS failure.62210.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 18                                                                # STEP 0
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 2
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.inorder()                                                  # STEP 3
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                        # STEP 4
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 5
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                        # STEP 6
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                        # STEP 7
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                        # STEP 8
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int3 = 15                                                                # STEP 9
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 10
ACTION: int2 = 16 
int2 = 18 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 18]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 12
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 13
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 18]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 18, 15]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 16
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int2 = 13                                                               # STEP 18
ACTION: int2 = 13 
int2 = 16 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16, 18]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 21
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 18, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 22
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 18, 11, 15]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 23
ACTION: int3 = 13 
int3 = 15 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 18, 11, 13, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 26
ACTION: result = avl0.find(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 27
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 11, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 28
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 29
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 10                                                               # STEP 30
ACTION: int3 = 10 
int3 = 13 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 31
ACTION: result = avl2.find(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 32
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 33
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x102d702d8> : <type 'instance'>
avl_REF0 = set([16, 18, 11, 13, 15]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x102c6a908> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 34
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 35
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102c6a908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102c6a908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 37
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102c6a908> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int3 = 16                                                               # STEP 38
ACTION: int3 = 16 
int3 = 10 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 39
ACTION: int2 = 4 
int2 = 13 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 40
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102c6a908> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 11]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 41
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102c6a908> : <type 'instance'>
avl_REF0 = set([17, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int0)                                                       # STEP 42
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 10]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 43
ACTION: result = avl2.find(int3) 
int3 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 44
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 10, 4]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 45
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([17, 10, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 17, 10, 4]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 46
ACTION: avl2.delete(int2) 
int2 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102c7aab8> : <type 'instance'>
avl_REF2 = set([16, 17, 10, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([16, 17, 10]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102eb6b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 22
STOPPING TESTING DUE TO TIMEOUT
8.32849680789 PERCENT COVERED
60.3037211895 TOTAL RUNTIME
6 EXECUTED
452 TOTAL TEST OPERATIONS
23.1881113052 TIME SPENT EXECUTING TEST OPERATIONS
0.0505881309509 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.3562786579 TIME SPENT CHECKING PROPERTIES
46.5443899632 TOTAL TIME SPENT RUNNING SUT
0.00418066978455 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 16                                                                # STEP 0
int3 = 20                                                                # STEP 1
int1 = 3                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
int2 = 16                                                                # STEP 4
avl0.insert(int2)                                                        # STEP 5
avl0.delete(int0)                                                        # STEP 6
avl0.insert(int0)                                                        # STEP 7
avl0.insert(int2)                                                        # STEP 8
int2 = 19                                                                # STEP 9
result = avl0.inorder()                                                 # STEP 10
avl0.insert(int0)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
avl0.insert(int0)                                                       # STEP 13
result = avl0.inorder()                                                 # STEP 14
avl0.insert(int2)                                                       # STEP 15
avl0.delete(int1)                                                       # STEP 16
avl0.insert(int1)                                                       # STEP 17
avl0.delete(int2)                                                       # STEP 18
avl0.insert(int0)                                                       # STEP 19
avl0.insert(int3)                                                       # STEP 20
avl0.insert(int1)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.insert(int2)                                                       # STEP 24
avl0.delete(int0)                                                       # STEP 25
avl0.insert(int2)                                                       # STEP 26
result = avl0.inorder()                                                 # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl0.insert(int1)                                                       # STEP 29
result = avl0.inorder()                                                 # STEP 30
avl0.delete(int1)                                                       # STEP 31
avl0.insert(int2)                                                       # STEP 32
int3 = 2                                                                # STEP 33
avl0.delete(int1)                                                       # STEP 34
avl0.insert(int1)                                                       # STEP 35
int0 = 15                                                               # STEP 36
avl0.delete(int0)                                                       # STEP 37
avl0.delete(int0)                                                       # STEP 38
avl0.delete(int1)                                                       # STEP 39
avl0.delete(int0)                                                       # STEP 40
int1 = 19                                                               # STEP 41
avl0.delete(int1)                                                       # STEP 42
int1 = 2                                                                # STEP 43
avl0.delete(int2)                                                       # STEP 44
avl0.insert(int2)                                                       # STEP 45
avl0.delete(int3)                                                       # STEP 46
int2 = 1                                                                # STEP 47
result = avl0.find(int2)                                                # STEP 48
avl0.delete(int0)                                                       # STEP 49
avl0 == avl0                                                            # STEP 50
int0 = 3                                                                # STEP 51
avl0.insert(int0)                                                       # STEP 52
avl0 == avl0                                                            # STEP 53
avl0.insert(int1)                                                       # STEP 54
avl0.insert(int0)                                                       # STEP 55
avl0.insert(int2)                                                       # STEP 56
avl0.delete(int0)                                                       # STEP 57
avl0.delete(int2)                                                       # STEP 58
avl0.delete(int0)                                                       # STEP 59
int2 = 1                                                                # STEP 60
avl0.insert(int0)                                                       # STEP 61
avl0.delete(int3)                                                       # STEP 62
avl0.delete(int0)                                                       # STEP 63
avl0.insert(int1)                                                       # STEP 64
int3 = 7                                                                # STEP 65
avl0.delete(int2)                                                       # STEP 66
avl0.delete(int0)                                                       # STEP 67
avl0.delete(int2)                                                       # STEP 68
int0 = 19                                                               # STEP 69
avl0.delete(int3)                                                       # STEP 70
int3 = 6                                                                # STEP 71
avl0.insert(int1)                                                       # STEP 72
avl0.insert(int1)                                                       # STEP 73
avl0 == avl0                                                            # STEP 74
avl0.delete(int3)                                                       # STEP 75
avl0.delete(int3)                                                       # STEP 76
result = avl0.find(int1)                                                # STEP 77
avl0.insert(int3)                                                       # STEP 78
avl0.delete(int2)                                                       # STEP 79
int3 = 14                                                               # STEP 80
avl0.insert(int0)                                                       # STEP 81
avl0.delete(int0)                                                       # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cbdc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int2 = 18                                                                # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
avl0.delete(int2)                                                        # STEP 2
result = avl0.inorder()                                                  # STEP 3
avl0.insert(int2)                                                        # STEP 4
avl0.insert(int2)                                                        # STEP 5
avl0.insert(int2)                                                        # STEP 6
avl0.insert(int2)                                                        # STEP 7
avl0.insert(int2)                                                        # STEP 8
int3 = 15                                                                # STEP 9
int2 = 16                                                               # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.delete(int2)                                                       # STEP 12
avl0.insert(int2)                                                       # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
int1 = 11                                                               # STEP 16
avl0.delete(int1)                                                       # STEP 17
int2 = 13                                                               # STEP 18
avl0.delete(int3)                                                       # STEP 19
avl0.delete(int1)                                                       # STEP 20
avl0.insert(int3)                                                       # STEP 21
avl0.insert(int1)                                                       # STEP 22
int3 = 13                                                               # STEP 23
avl0.insert(int3)                                                       # STEP 24
avl0.insert(int2)                                                       # STEP 25
result = avl0.find(int2)                                                # STEP 26
avl0.insert(int3)                                                       # STEP 27
avl2 = avl.AVLTree()                                                    # STEP 28
avl2.delete(int2)                                                       # STEP 29
int3 = 10                                                               # STEP 30
result = avl2.find(int2)                                                # STEP 31
avl2.insert(int3)                                                       # STEP 32
avl0 = avl.AVLTree()                                                    # STEP 33
int0 = 17                                                               # STEP 34
avl0.delete(int2)                                                       # STEP 35
avl0.insert(int1)                                                       # STEP 36
avl0.insert(int1)                                                       # STEP 37
int3 = 16                                                               # STEP 38
int2 = 4                                                                # STEP 39
avl0.insert(int0)                                                       # STEP 40
result = avl0.inorder()                                                 # STEP 41
avl2.insert(int0)                                                       # STEP 42
result = avl2.find(int3)                                                # STEP 43
avl2.insert(int2)                                                       # STEP 44
avl2.insert(int3)                                                       # STEP 45
avl2.delete(int2)                                                       # STEP 46
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102eb6b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
