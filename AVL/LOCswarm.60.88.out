Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.46477.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102718dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 43 steps

SAVING TEST AS failure.46477.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 15                                                                # STEP 0
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 1
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
int2 = 11                                                                # STEP 2
ACTION: int2 = 11 
int2 = None : <type 'NoneType'>
=> int2 = 11 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 3
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 6
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                        # STEP 7
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 9                                                                 # STEP 8
ACTION: int0 = 9 
int0 = 16 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 9
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 2                                                                # STEP 10
ACTION: int2 = 2 
int2 = 11 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 11
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 17                                                               # STEP 12
ACTION: int1 = 17 
int1 = 12 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 13
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 14                                                               # STEP 14
ACTION: int0 = 14 
int0 = 9 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 15
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 16
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.find(int2)                                                # STEP 18
ACTION: result = avl1.find(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
int2 = 7                                                                # STEP 19
ACTION: int2 = 7 
int2 = 2 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 20
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 10                                                               # STEP 21
ACTION: int1 = 10 
int1 = 17 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 22
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 23
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 26
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 15]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 27
ACTION: int3 = 8 
int3 = 15 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 17, 15]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 29
ACTION: int2 = 5 
int2 = 7 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 30
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 17, 5, 15]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 31
ACTION: int0 = 19 
int0 = 14 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 32
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 33
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 34
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int0 = 1                                                                # STEP 35
ACTION: int0 = 1 
int0 = 19 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 36
ACTION: int1 = 3 
int1 = 10 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 37
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 17, 1, 5, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 38
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 15                                                               # STEP 39
ACTION: int0 = 15 
int0 = 1 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 40
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([8, 17, 1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([17, 1, 5, 15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 41
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17, 1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 42
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10304d0e0> : <type 'instance'>
avl_REF1 = set([17, 1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([17, 1, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030126c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #49 (0:00:30.021896) Mon May  1 03:18:05 2017 [ 130 stmts 172 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10340add0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 93 steps

SAVING TEST AS failure.46477.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 5                                                                 # STEP 0
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
int0 = 17                                                                # STEP 1
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
int2 = 1                                                                 # STEP 2
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 4
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2 = avl.AVLTree()                                                     # STEP 5
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 6
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 7
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int1 = 6                                                                 # STEP 8
ACTION: int1 = 6 
int1 = 5 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 10
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 12
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 5, 1]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 13
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int2 = 7                                                                # STEP 14
ACTION: int2 = 7 
int2 = 1 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 15
ACTION: result = avl2.find(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([5, 1]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 18
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 19
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 9                                                                # STEP 21
ACTION: int2 = 9 
int2 = 7 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 22
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 23
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([5, 6, 1]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 25
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 26
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 5, 6, 1]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 27
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 18                                                               # STEP 28
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 29
ACTION: int1 = 18 
int1 = 6 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 30
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 31
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 32
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 33
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 34
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 18, 5, 6, 1]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 37
ACTION: int3 = 6 
int3 = 18 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 38
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 18, 5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([17, 5, 6, 1]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 40
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 18, 5, 6, 1]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 41
ACTION: int0 = 14 
int0 = 17 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 42
ACTION: int2 = 10 
int2 = 9 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 43
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([17, 18, 5, 6, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 5, 6, 14, 17, 18]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 44
ACTION: int1 = 17 
int1 = 18 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 14, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 46
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 14, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 5, 6, 14, 18]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 47
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 48
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 49
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 5, 6, 10, 14, 18]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 50
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x102762c20> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 51
ACTION: int1 = 2 
int1 = 17 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
int2 = 3                                                                # STEP 52
ACTION: int2 = 3 
int2 = 10 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 53
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 54
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 55
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 56
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([1, 5, 6, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 2, 5, 6, 10, 14, 18]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 57
ACTION: int2 = 1 
int2 = 3 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 58
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 6, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 5, 6, 10, 14, 18]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 59
ACTION: result = avl1.find(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102762c20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 60
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 61
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 6, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 62
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 20                                                               # STEP 63
ACTION: int0 = 20 
int0 = 14 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 6, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 65
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 6, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 5, 10, 14, 18]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 66
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102762c20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 67
ACTION: int3 = 18 
int3 = 6 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 68
ACTION: avl2.insert(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 14]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 69
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([5, 10, 14, 18]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 70
ACTION: int2 = 18 
int2 = 1 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 71
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 5, 10, 14, 18]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 72
ACTION: int1 = 2 
int1 = 2 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 73
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 20                                                               # STEP 74
ACTION: int3 = 20 
int3 = 18 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 75
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 5, 10, 14, 18, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 76
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 14, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 5, 10, 14, 18]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 77
ACTION: int0 = 14 
int0 = 20 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 78
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 5, 10, 18]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 79
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 80
ACTION: int0 = 12 
int0 = 14 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 81
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([5, 10, 18]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 82
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([5, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 5, 10, 18]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 83
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 84
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 2]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 85
ACTION: int2 = 12 
int2 = 18 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 86
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 87
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 88
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102762c20> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2]) : <type 'set'>
==================================================
int1 = 18                                                               # STEP 89
ACTION: int1 = 18 
int1 = 2 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 90
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 91
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10340e518> : <type 'instance'>
avl_REF2 = set([1, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 92
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1034032d8> : <type 'instance'>
avl_REF0 = set([2, 5, 10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 5, 10]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1027613f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  8 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 6 [0:0] L
-- > 12 [1:-1]
---- > 17 [0:0] L
set([1, 5, 6, 8, 12, 17])
  8 [3:1]
-- < 5 [2:1]
---- < 1 [1:-1]
------ > 3 [0:0] L
---- > 6 [0:0] L
-- > 12 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 6, 8, 9, 12, 17])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:-1]
---- < 9 [0:0] L
---- > 17 [1:-1]
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 12, 17, 20])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:0]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 20])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:0]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 20])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:0]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 20])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:0]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 20])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:0]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 20])
  8 [3:0]
-- < 5 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 6 [0:0] L
-- > 12 [2:0]
---- < 9 [1:-1]
------ > 11 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 20 [0:0] L
set([1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 17, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 93
STOPPING TESTING DUE TO TIMEOUT
8.9314712569 PERCENT COVERED
60.1669950485 TOTAL RUNTIME
6 EXECUTED
529 TOTAL TEST OPERATIONS
23.7252748013 TIME SPENT EXECUTING TEST OPERATIONS
0.0643131732941 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.959444046 TIME SPENT CHECKING PROPERTIES
47.6847188473 TOTAL TIME SPENT RUNNING SUT
0.00331878662109 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 15                                                                # STEP 0
int1 = 12                                                                # STEP 1
int2 = 11                                                                # STEP 2
int0 = 16                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int0)                                                        # STEP 5
avl1.delete(int2)                                                        # STEP 6
avl1.delete(int0)                                                        # STEP 7
int0 = 9                                                                 # STEP 8
avl1.delete(int2)                                                        # STEP 9
int2 = 2                                                                # STEP 10
avl1.delete(int1)                                                       # STEP 11
int1 = 17                                                               # STEP 12
avl1.delete(int0)                                                       # STEP 13
int0 = 14                                                               # STEP 14
avl1.insert(int1)                                                       # STEP 15
avl1.delete(int2)                                                       # STEP 16
avl1.delete(int2)                                                       # STEP 17
result = avl1.find(int2)                                                # STEP 18
int2 = 7                                                                # STEP 19
avl1.delete(int3)                                                       # STEP 20
int1 = 10                                                               # STEP 21
avl1.delete(int0)                                                       # STEP 22
avl1.delete(int1)                                                       # STEP 23
avl1.delete(int2)                                                       # STEP 24
avl1.delete(int2)                                                       # STEP 25
avl1.insert(int3)                                                       # STEP 26
int3 = 8                                                                # STEP 27
avl1.insert(int3)                                                       # STEP 28
int2 = 5                                                                # STEP 29
avl1.insert(int2)                                                       # STEP 30
int0 = 19                                                               # STEP 31
avl1.delete(int0)                                                       # STEP 32
avl1.delete(int0)                                                       # STEP 33
avl1.insert(int2)                                                       # STEP 34
int0 = 1                                                                # STEP 35
int1 = 3                                                                # STEP 36
avl1.insert(int0)                                                       # STEP 37
avl1.delete(int1)                                                       # STEP 38
int0 = 15                                                               # STEP 39
avl1.delete(int3)                                                       # STEP 40
avl1.insert(int0)                                                       # STEP 41
avl1.delete(int0)                                                       # STEP 42
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030126c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int1 = 5                                                                 # STEP 0
int0 = 17                                                                # STEP 1
int2 = 1                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.delete(int1)                                                        # STEP 4
avl2 = avl.AVLTree()                                                     # STEP 5
avl0.insert(int1)                                                        # STEP 6
avl2.delete(int0)                                                        # STEP 7
int1 = 6                                                                 # STEP 8
avl0.delete(int2)                                                        # STEP 9
avl0.insert(int0)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
avl0.insert(int2)                                                       # STEP 12
avl2.delete(int0)                                                       # STEP 13
int2 = 7                                                                # STEP 14
result = avl2.find(int0)                                                # STEP 15
avl0.delete(int0)                                                       # STEP 16
avl2.delete(int2)                                                       # STEP 17
avl0.delete(int2)                                                       # STEP 18
avl2.delete(int2)                                                       # STEP 19
avl0.delete(int0)                                                       # STEP 20
int2 = 9                                                                # STEP 21
avl2.delete(int0)                                                       # STEP 22
avl2.insert(int0)                                                       # STEP 23
avl0.insert(int1)                                                       # STEP 24
avl0.delete(int2)                                                       # STEP 25
avl0.insert(int0)                                                       # STEP 26
avl0.insert(int0)                                                       # STEP 27
int3 = 18                                                               # STEP 28
int1 = 18                                                               # STEP 29
avl2.delete(int0)                                                       # STEP 30
avl0.delete(int1)                                                       # STEP 31
avl2.insert(int3)                                                       # STEP 32
avl2.delete(int0)                                                       # STEP 33
avl2.insert(int1)                                                       # STEP 34
avl2.delete(int1)                                                       # STEP 35
avl0.insert(int1)                                                       # STEP 36
int3 = 6                                                                # STEP 37
avl0.delete(int1)                                                       # STEP 38
avl2.delete(int2)                                                       # STEP 39
avl0.insert(int1)                                                       # STEP 40
int0 = 14                                                               # STEP 41
int2 = 10                                                               # STEP 42
avl0.insert(int0)                                                       # STEP 43
int1 = 17                                                               # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl0.delete(int1)                                                       # STEP 46
avl2.delete(int0)                                                       # STEP 47
avl0.delete(int1)                                                       # STEP 48
avl0.insert(int2)                                                       # STEP 49
avl1 = avl.AVLTree()                                                    # STEP 50
int1 = 2                                                                # STEP 51
int2 = 3                                                                # STEP 52
avl2.delete(int1)                                                       # STEP 53
avl2.delete(int2)                                                       # STEP 54
avl2.insert(int0)                                                       # STEP 55
avl0.insert(int1)                                                       # STEP 56
int2 = 1                                                                # STEP 57
avl0.delete(int2)                                                       # STEP 58
result = avl1.find(int0)                                                # STEP 59
avl2.delete(int2)                                                       # STEP 60
avl0.insert(int3)                                                       # STEP 61
avl2.delete(int1)                                                       # STEP 62
int0 = 20                                                               # STEP 63
avl0.insert(int3)                                                       # STEP 64
avl0.delete(int3)                                                       # STEP 65
avl1.insert(int2)                                                       # STEP 66
int3 = 18                                                               # STEP 67
avl2.insert(int2)                                                       # STEP 68
avl0.delete(int1)                                                       # STEP 69
int2 = 18                                                               # STEP 70
avl0.insert(int1)                                                       # STEP 71
int1 = 2                                                                # STEP 72
avl2.delete(int3)                                                       # STEP 73
int3 = 20                                                               # STEP 74
avl0.insert(int0)                                                       # STEP 75
avl0.delete(int0)                                                       # STEP 76
int0 = 14                                                               # STEP 77
avl0.delete(int0)                                                       # STEP 78
avl2.delete(int0)                                                       # STEP 79
int0 = 12                                                               # STEP 80
avl0.delete(int1)                                                       # STEP 81
avl0.insert(int1)                                                       # STEP 82
avl2.delete(int2)                                                       # STEP 83
avl2.insert(int1)                                                       # STEP 84
int2 = 12                                                               # STEP 85
avl2.delete(int2)                                                       # STEP 86
avl0.delete(int2)                                                       # STEP 87
avl1.insert(int1)                                                       # STEP 88
int1 = 18                                                               # STEP 89
avl2.delete(int3)                                                       # STEP 90
avl2.delete(int2)                                                       # STEP 91
avl0.delete(int1)                                                       # STEP 92
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1027613f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
