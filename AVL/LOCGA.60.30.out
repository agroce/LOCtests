Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62115.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 3, 4, 8, 17, 18])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 3, 4, 8, 17, 18])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([1, 3, 4, 8, 17, 18])
TEST #3 STEP #94 (0:00:30.015396) Mon May  1 17:46:30 2017 [ 162 stmts 215 branches ]
  7 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([5, 6, 7, 10, 15, 19])
  7 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([5, 6, 7, 10, 15, 19])
  7 [2:0]
-- < 6 [1:1]
---- < 5 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([5, 6, 7, 10, 15, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cedcb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 69 steps

SAVING TEST AS failure.62115.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 8                                                                 # STEP 0
ACTION: int0 = 8 
int0 = None : <type 'NoneType'>
=> int0 = 8 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 1
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 3
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 4
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.find(int0)                                                 # STEP 5
ACTION: result = avl0.find(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int3)                                                        # STEP 6
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                  # STEP 7
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 13]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 10
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 11
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 17                                                               # STEP 12
ACTION: int0 = 17 
int0 = 8 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 17, 13]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 14
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x102ccb560> : <type 'instance'>
avl_REF0 = set([8, 17, 13]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 16
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 17
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 19
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 19]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 20
ACTION: int0 = 11 
int0 = 17 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0 == avl0                                                            # STEP 22
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 17, 19]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([11, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([17, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 25
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 26
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 27
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 28
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 13]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 19, 13]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 30
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 6                                                                # STEP 31
ACTION: int0 = 6 
int0 = 11 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 32
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 33
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 13]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 34
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 13, 6]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 19, 13, 6]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 36
ACTION: int3 = 18 
int3 = 13 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 19, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 13, 6]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 38
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 14                                                               # STEP 39
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 40
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int2 = 6                                                                # STEP 41
ACTION: int2 = 6 
int2 = 19 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([17, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([6, 13, 14, 17]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 43
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 13, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 15                                                               # STEP 44
ACTION: int0 = 15 
int0 = 6 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 45
ACTION: int1 = 9 
int1 = 14 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 46
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 13, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 12                                                               # STEP 47
ACTION: int0 = 12 
int0 = 15 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 48
ACTION: result = avl0.find(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 13, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 13                                                               # STEP 49
ACTION: int0 = 13 
int0 = 12 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 50
ACTION: result = avl0.find(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 13, 14, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 51
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 13, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([6, 14, 17]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 52
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 19                                                               # STEP 53
ACTION: int3 = 19 
int3 = 18 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 54
ACTION: int1 = 9 
int1 = 9 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 55
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([14, 17]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 56
ACTION: int0 = 19 
int0 = 13 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 57
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([6, 14, 17]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 58
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 59
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([6, 14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([14, 17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 60
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 61
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([14, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([14, 17, 19]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 62
ACTION: result = avl0.find(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([14, 17, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 63
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([14, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 64
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([14, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 14, 17, 19]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 65
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([9, 14, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 13                                                               # STEP 66
ACTION: int3 = 13 
int3 = 19 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 67
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([9, 14, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 68
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cd1e18> : <type 'instance'>
avl_REF0 = set([9, 14, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9, 14, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102639368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 50
STOPPING TESTING DUE TO TIMEOUT
8.32849680789 PERCENT COVERED
60.2555229664 TOTAL RUNTIME
6 EXECUTED
519 TOTAL TEST OPERATIONS
26.4054162502 TIME SPENT EXECUTING TEST OPERATIONS
0.0579354763031 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.4915308952 TIME SPENT CHECKING PROPERTIES
52.8969471455 TOTAL TIME SPENT RUNNING SUT
0.00376510620117 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 8                                                                 # STEP 0
int3 = 13                                                                # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
avl0.insert(int0)                                                        # STEP 3
avl0.insert(int0)                                                        # STEP 4
result = avl0.find(int0)                                                 # STEP 5
avl0.delete(int3)                                                        # STEP 6
result = avl0.inorder()                                                  # STEP 7
avl0.insert(int0)                                                        # STEP 8
avl0.insert(int3)                                                        # STEP 9
int2 = 19                                                               # STEP 10
avl0.delete(int2)                                                       # STEP 11
int0 = 17                                                               # STEP 12
avl0.insert(int0)                                                       # STEP 13
avl0 = avl.AVLTree()                                                    # STEP 14
avl0.insert(int2)                                                       # STEP 15
avl0.insert(int2)                                                       # STEP 16
avl0.delete(int2)                                                       # STEP 17
avl0.insert(int2)                                                       # STEP 18
avl0.insert(int0)                                                       # STEP 19
int0 = 11                                                               # STEP 20
avl0.delete(int0)                                                       # STEP 21
avl0 == avl0                                                            # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl0.delete(int0)                                                       # STEP 24
avl0.delete(int2)                                                       # STEP 25
avl0.delete(int3)                                                       # STEP 26
avl0.delete(int0)                                                       # STEP 27
avl0.insert(int3)                                                       # STEP 28
avl0.insert(int2)                                                       # STEP 29
result = avl0.inorder()                                                 # STEP 30
int0 = 6                                                                # STEP 31
avl0.insert(int3)                                                       # STEP 32
avl0.delete(int2)                                                       # STEP 33
avl0.insert(int0)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
int3 = 18                                                               # STEP 36
avl0.delete(int2)                                                       # STEP 37
avl0.delete(int2)                                                       # STEP 38
int1 = 14                                                               # STEP 39
avl0 == avl0                                                            # STEP 40
int2 = 6                                                                # STEP 41
avl0.insert(int1)                                                       # STEP 42
avl0.insert(int0)                                                       # STEP 43
int0 = 15                                                               # STEP 44
int1 = 9                                                                # STEP 45
avl0.delete(int0)                                                       # STEP 46
int0 = 12                                                               # STEP 47
result = avl0.find(int0)                                                # STEP 48
int0 = 13                                                               # STEP 49
result = avl0.find(int3)                                                # STEP 50
avl0.delete(int0)                                                       # STEP 51
avl0.delete(int1)                                                       # STEP 52
int3 = 19                                                               # STEP 53
int1 = 9                                                                # STEP 54
avl0.delete(int2)                                                       # STEP 55
int0 = 19                                                               # STEP 56
avl0.insert(int2)                                                       # STEP 57
avl0.insert(int2)                                                       # STEP 58
avl0.delete(int2)                                                       # STEP 59
avl0.delete(int3)                                                       # STEP 60
avl0.insert(int3)                                                       # STEP 61
result = avl0.find(int3)                                                # STEP 62
avl0.delete(int1)                                                       # STEP 63
avl0.insert(int1)                                                       # STEP 64
avl0.insert(int3)                                                       # STEP 65
int3 = 13                                                               # STEP 66
avl0.insert(int1)                                                       # STEP 67
avl0.delete(int0)                                                       # STEP 68
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102639368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
