Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.1037.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #57 (0:00:30.036745) Fri Apr 28 08:00:26 2017 [ 149 stmts 198 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1047e2560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 79 steps

SAVING TEST AS failure.1037.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 3                                                                 # STEP 0
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int2 = 20                                                                # STEP 1
ACTION: int2 = 20 
int2 = None : <type 'NoneType'>
=> int2 = 20 : <type 'int'>
==================================================
int3 = 17                                                                # STEP 2
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 13                                                                # STEP 3
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 5                                                                 # STEP 6
ACTION: int3 = 5 
int3 = 17 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 7
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 13                                                                # STEP 8
ACTION: int0 = 13 
int0 = 13 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 9
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 11
ACTION: int1 = 2 
int1 = 3 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 13
ACTION: int3 = 16 
int3 = 5 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 14
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 19                                                               # STEP 15
ACTION: int2 = 19 
int2 = 20 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 16
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 17
ACTION: int2 = 7 
int2 = 19 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 18
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([3, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 5, 7]) : <type 'set'>
==================================================
int2 = 17                                                               # STEP 19
ACTION: int2 = 17 
int2 = 7 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 9                                                                # STEP 21
ACTION: int2 = 9 
int2 = 17 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 3, 5, 7]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 23
ACTION: int3 = 8 
int3 = 16 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 24
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([19, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 25
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([16, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([19, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 19, 13]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 27
ACTION: int0 = 15 
int0 = 13 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 20                                                               # STEP 28
ACTION: int2 = 20 
int2 = 9 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([16, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 3, 20, 5, 7]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 30
ACTION: int2 = 12 
int2 = 20 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 31
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([9, 19, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 19, 12, 13]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 32
ACTION: int2 = 18 
int2 = 12 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 33
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([16, 3, 20, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 3, 5, 7, 16, 20]) : <type 'set'>
==================================================
int1 = 18                                                               # STEP 34
ACTION: int1 = 18 
int1 = 2 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 3, 5, 7, 16, 18, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 36
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([9, 19, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 18, 19, 12, 13]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 37
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([9, 18, 19, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 38
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 16, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 3, 5, 7, 16, 20]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 39
ACTION: int2 = 14 
int2 = 18 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 40
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([9, 18, 19, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 2                                                                # STEP 41
ACTION: int1 = 2 
int1 = 18 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 42
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([9, 18, 19, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 9, 12, 13, 18, 19]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 43
ACTION: int1 = 19 
int1 = 2 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 44
ACTION: int3 = 17 
int3 = 8 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 45
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 10                                                               # STEP 46
ACTION: int1 = 10 
int1 = 19 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 47
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 3, 5, 7, 15, 16, 20]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 48
ACTION: int0 = 12 
int0 = 15 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 49
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([2, 9, 12, 13, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 9, 12, 13, 14, 18, 19]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 50
ACTION: int2 = 11 
int2 = 14 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 51
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([2, 9, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 52
ACTION: int2 = 20 
int2 = 11 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 53
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 54
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 10                                                               # STEP 55
ACTION: int2 = 10 
int2 = 20 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 56
ACTION: int0 = 1 
int0 = 12 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 57
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1058820e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 58
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058820e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 16                                                               # STEP 59
ACTION: int2 = 16 
int2 = 10 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 60
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 61
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([1, 2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 11                                                               # STEP 62
ACTION: int0 = 11 
int0 = 1 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 63
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058820e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 64
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 65
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058820e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int0 = 4                                                                # STEP 66
ACTION: int0 = 4 
int0 = 11 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 67
ACTION: int3 = 20 
int3 = 17 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 68
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([1, 2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 19                                                               # STEP 69
ACTION: int1 = 19 
int1 = 10 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 70
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([1, 2, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 4, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 71
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 9                                                                # STEP 72
ACTION: int0 = 9 
int0 = 4 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 73
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058820e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 74
ACTION: avl1.delete(int1) 
int1 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043d3c20> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 9, 11, 12, 13, 14, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 4, 9, 11, 12, 13, 14, 18]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 75
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 5                                                                # STEP 76
ACTION: int1 = 5 
int1 = 19 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 77
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058820e0> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 78
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dc7e8> : <type 'instance'>
avl_REF0 = set([2, 3, 5, 7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 3, 5, 7, 15, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046d55a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 41
STOPPING TESTING DUE TO TIMEOUT
7.9742110621 PERCENT COVERED
60.2424631119 TOTAL RUNTIME
7 EXECUTED
620 TOTAL TEST OPERATIONS
26.4938907623 TIME SPENT EXECUTING TEST OPERATIONS
0.0220541954041 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.7284829617 TIME SPENT CHECKING PROPERTIES
53.222373724 TOTAL TIME SPENT RUNNING SUT
0.00396299362183 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 3                                                                 # STEP 0
int2 = 20                                                                # STEP 1
int3 = 17                                                                # STEP 2
int0 = 13                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int3)                                                        # STEP 5
int3 = 5                                                                 # STEP 6
avl1.delete(int0)                                                        # STEP 7
int0 = 13                                                                # STEP 8
avl0 = avl.AVLTree()                                                     # STEP 9
avl0.insert(int1)                                                       # STEP 10
int1 = 2                                                                # STEP 11
avl0.insert(int3)                                                       # STEP 12
int3 = 16                                                               # STEP 13
avl1.delete(int2)                                                       # STEP 14
int2 = 19                                                               # STEP 15
avl1.insert(int2)                                                       # STEP 16
int2 = 7                                                                # STEP 17
avl0.insert(int2)                                                       # STEP 18
int2 = 17                                                               # STEP 19
avl1.delete(int2)                                                       # STEP 20
int2 = 9                                                                # STEP 21
avl0.insert(int3)                                                       # STEP 22
int3 = 8                                                                # STEP 23
avl1.insert(int0)                                                       # STEP 24
avl0.delete(int2)                                                       # STEP 25
avl1.insert(int2)                                                       # STEP 26
int0 = 15                                                               # STEP 27
int2 = 20                                                               # STEP 28
avl0.insert(int2)                                                       # STEP 29
int2 = 12                                                               # STEP 30
avl1.insert(int2)                                                       # STEP 31
int2 = 18                                                               # STEP 32
avl0.insert(int1)                                                       # STEP 33
int1 = 18                                                               # STEP 34
avl0.insert(int2)                                                       # STEP 35
avl1.insert(int2)                                                       # STEP 36
avl1.insert(int1)                                                       # STEP 37
avl0.delete(int1)                                                       # STEP 38
int2 = 14                                                               # STEP 39
avl1.delete(int3)                                                       # STEP 40
int1 = 2                                                                # STEP 41
avl1.insert(int1)                                                       # STEP 42
int1 = 19                                                               # STEP 43
int3 = 17                                                               # STEP 44
avl0.delete(int1)                                                       # STEP 45
int1 = 10                                                               # STEP 46
avl0.insert(int0)                                                       # STEP 47
int0 = 12                                                               # STEP 48
avl1.insert(int2)                                                       # STEP 49
int2 = 11                                                               # STEP 50
avl1.insert(int2)                                                       # STEP 51
int2 = 20                                                               # STEP 52
avl1.delete(int2)                                                       # STEP 53
avl1.insert(int0)                                                       # STEP 54
int2 = 10                                                               # STEP 55
int0 = 1                                                                # STEP 56
avl2 = avl.AVLTree()                                                    # STEP 57
avl2.delete(int2)                                                       # STEP 58
int2 = 16                                                               # STEP 59
avl1.insert(int0)                                                       # STEP 60
avl1.insert(int0)                                                       # STEP 61
int0 = 11                                                               # STEP 62
avl2.delete(int0)                                                       # STEP 63
avl0.delete(int3)                                                       # STEP 64
avl2.delete(int3)                                                       # STEP 65
int0 = 4                                                                # STEP 66
int3 = 20                                                               # STEP 67
avl1.delete(int1)                                                       # STEP 68
int1 = 19                                                               # STEP 69
avl1.insert(int0)                                                       # STEP 70
avl1.insert(int0)                                                       # STEP 71
int0 = 9                                                                # STEP 72
avl2.insert(int3)                                                       # STEP 73
avl1.delete(int1)                                                       # STEP 74
avl0.delete(int1)                                                       # STEP 75
int1 = 5                                                                # STEP 76
avl2.insert(int3)                                                       # STEP 77
avl0.delete(int2)                                                       # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046d55a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
200 BRANCHES COVERED
150 STATEMENTS COVERED
