Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.402.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1043f2cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 89 steps

SAVING TEST AS failure.402.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 12                                                                # STEP 0
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int2 = 18                                                                # STEP 1
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
int3 = 3                                                                 # STEP 2
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 12                                                                # STEP 4
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
avl0.insert(int1)                                                        # STEP 5
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
int1 = 8                                                                 # STEP 6
ACTION: int1 = 8 
int1 = 12 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 7
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 2                                                                 # STEP 8
ACTION: int3 = 2 
int3 = 3 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 9
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 10
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int0)                                                       # STEP 11
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 12
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 12                                                               # STEP 13
ACTION: int0 = 12 
int0 = 12 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 14
ACTION: avl2.insert(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 15
ACTION: avl0.delete(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 16                                                               # STEP 16
ACTION: int0 = 16 
int0 = 12 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 17
ACTION: int3 = 17 
int3 = 2 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 18
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 2]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 13                                                               # STEP 20
ACTION: int3 = 13 
int3 = 17 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 21
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 22
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl1.delete(int1)                                                       # STEP 23
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 13                                                               # STEP 24
ACTION: int1 = 13 
int1 = 8 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 25
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 26
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int2 = 20                                                               # STEP 27
ACTION: int2 = 20 
int2 = 18 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 28
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 29
ACTION: int0 = 14 
int0 = 16 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 30
ACTION: int2 = 4 
int2 = 20 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 31
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 32
ACTION: int3 = 15 
int3 = 13 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 33
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2 == avl2                                                            # STEP 35
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2 == avl1                                                            # STEP 36
ACTION: avl2 == avl1 
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF2 = set([17, 2]) : <type 'set'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
avl2.delete(int1)                                                       # STEP 37
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 38
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 11                                                               # STEP 39
ACTION: int2 = 11 
int2 = 4 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 40
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 2, 15]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 41
ACTION: int1 = 17 
int1 = 13 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 42
ACTION: int3 = 1 
int3 = 15 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 43
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 44
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 20                                                               # STEP 45
ACTION: int2 = 20 
int2 = 11 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 46
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int1 = 20                                                               # STEP 47
ACTION: int1 = 20 
int1 = 17 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 48
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 49
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20, 13]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 50
ACTION: int2 = 2 
int2 = 20 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 51
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 52
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 20, 14]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 53
ACTION: int0 = 4 
int0 = 14 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 54
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 20, 13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 55
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([1, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 20, 13, 4]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 56
ACTION: int3 = 6 
int3 = 1 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 57
ACTION: int0 = 15 
int0 = 4 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 58
ACTION: avl2.insert(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int1 = 10                                                               # STEP 59
ACTION: int1 = 10 
int1 = 20 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1 == avl0                                                            # STEP 60
ACTION: avl1 == avl0 
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF1 = set([1, 20, 13, 4]) : <type 'set'>
avl_REF0 = set([17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
int2 = 19                                                               # STEP 61
ACTION: int2 = 19 
int2 = 2 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 62
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 11                                                               # STEP 63
ACTION: int1 = 11 
int1 = 10 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 64
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 2, 6, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 65
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 66
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 16                                                               # STEP 67
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int1 = 14                                                               # STEP 68
ACTION: int1 = 14 
int1 = 11 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 69
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int0 = 11                                                               # STEP 70
ACTION: int0 = 11 
int0 = 15 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 71
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([1, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 72
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 73
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([1, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 4                                                                # STEP 74
ACTION: int2 = 4 
int2 = 19 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 75
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10433efc8> : <type 'instance'>
avl_REF2 = set([17, 2, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 6                                                                # STEP 76
ACTION: int1 = 6 
int1 = 14 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 77
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([1, 20, 13, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 20, 13]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 78
ACTION: int2 = 1 
int2 = 4 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 79
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 11, 20, 14]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 80
ACTION: int3 = 17 
int3 = 16 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 81
ACTION: int0 = 12 
int0 = 11 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 82
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([1, 20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int0)                                                       # STEP 83
ACTION: avl0.insert(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 11, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 11, 20, 14, 12]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 84
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x10430b2d8> : <type 'instance'>
avl_REF1 = set([1, 20, 13]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x1043625f0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 20                                                               # STEP 85
ACTION: int0 = 20 
int0 = 12 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 86
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1043625f0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 87
ACTION: int2 = 9 
int2 = 1 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 88
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1043f2ef0> : <type 'instance'>
avl_REF0 = set([17, 11, 20, 14, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11, 20, 14, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104362f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #93 (0:00:30.022223) Fri Apr 28 06:16:23 2017 [ 146 stmts 191 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1047ab3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 30 steps

SAVING TEST AS failure.402.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 9                                                                 # STEP 0
ACTION: int1 = 9 
int1 = None : <type 'NoneType'>
=> int1 = 9 : <type 'int'>
==================================================
int0 = 20                                                                # STEP 1
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 2
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 3
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 5
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
int3 = 7                                                                 # STEP 6
ACTION: int3 = 7 
int3 = 12 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 7
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1047ae3f8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047ae3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 2                                                                 # STEP 9
ACTION: int0 = 2 
int0 = 20 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 10
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 6                                                                # STEP 11
ACTION: int2 = 6 
int2 = 5 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 12
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047ae3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 13
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047ae3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 14
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047ae3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 3                                                                # STEP 15
ACTION: int0 = 3 
int0 = 2 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 16
ACTION: int1 = 2 
int1 = 9 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 17
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([12, 7]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 18
ACTION: int3 = 12 
int3 = 7 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 19
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 12, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 20
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([2, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 7                                                                # STEP 21
ACTION: int1 = 7 
int1 = 2 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047ae3f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int2 = 9                                                                # STEP 23
ACTION: int2 = 9 
int2 = 6 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 24
ACTION: int1 = 6 
int1 = 7 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 25
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([2, 12, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 12, 6, 7]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 26
ACTION: int1 = 2 
int1 = 6 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 27
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([2, 12, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 28
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([2, 12, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 29
ACTION: avl2.delete(int3) 
int3 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1047abab8> : <type 'instance'>
avl_REF2 = set([2, 12, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([2, 6, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1047a7050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  10 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([2, 5, 7, 10, 12, 14, 19])
  15 [2:0]
-- < 8 [1:0]
---- < 7 [0:0] L
---- > 9 [0:0] L
-- > 19 [1:1]
---- < 17 [0:0] L
set([7, 8, 9, 15, 17, 19])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 93
STOPPING TESTING DUE TO TIMEOUT
8.3135391924 PERCENT COVERED
60.1626708508 TOTAL RUNTIME
7 EXECUTED
612 TOTAL TEST OPERATIONS
25.0174281597 TIME SPENT EXECUTING TEST OPERATIONS
0.0217788219452 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.2151999474 TIME SPENT CHECKING PROPERTIES
50.2326281071 TOTAL TIME SPENT RUNNING SUT
0.00401568412781 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 12                                                                # STEP 0
int2 = 18                                                                # STEP 1
int3 = 3                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
int1 = 12                                                                # STEP 4
avl0.insert(int1)                                                        # STEP 5
int1 = 8                                                                 # STEP 6
avl0.delete(int3)                                                        # STEP 7
int3 = 2                                                                 # STEP 8
avl2 = avl.AVLTree()                                                     # STEP 9
avl2 == avl2                                                            # STEP 10
avl2.delete(int0)                                                       # STEP 11
avl0.insert(int0)                                                       # STEP 12
int0 = 12                                                               # STEP 13
avl2.insert(int3)                                                       # STEP 14
avl0.delete(int0)                                                       # STEP 15
int0 = 16                                                               # STEP 16
int3 = 17                                                               # STEP 17
avl2.insert(int3)                                                       # STEP 18
avl0.delete(int2)                                                       # STEP 19
int3 = 13                                                               # STEP 20
avl1 = avl.AVLTree()                                                    # STEP 21
avl0 == avl0                                                            # STEP 22
avl1.delete(int1)                                                       # STEP 23
int1 = 13                                                               # STEP 24
avl1.delete(int3)                                                       # STEP 25
avl0.delete(int0)                                                       # STEP 26
int2 = 20                                                               # STEP 27
avl0.insert(int2)                                                       # STEP 28
int0 = 14                                                               # STEP 29
int2 = 4                                                                # STEP 30
avl1.insert(int3)                                                       # STEP 31
int3 = 15                                                               # STEP 32
avl0.delete(int2)                                                       # STEP 33
avl1.delete(int2)                                                       # STEP 34
avl2 == avl2                                                            # STEP 35
avl2 == avl1                                                            # STEP 36
avl2.delete(int1)                                                       # STEP 37
avl1.delete(int2)                                                       # STEP 38
int2 = 11                                                               # STEP 39
avl2.insert(int3)                                                       # STEP 40
int1 = 17                                                               # STEP 41
int3 = 1                                                                # STEP 42
avl0.insert(int1)                                                       # STEP 43
avl0.delete(int2)                                                       # STEP 44
int2 = 20                                                               # STEP 45
avl0.insert(int2)                                                       # STEP 46
int1 = 20                                                               # STEP 47
avl1.delete(int0)                                                       # STEP 48
avl1.insert(int1)                                                       # STEP 49
int2 = 2                                                                # STEP 50
avl0.delete(int2)                                                       # STEP 51
avl0.insert(int0)                                                       # STEP 52
int0 = 4                                                                # STEP 53
avl1.insert(int3)                                                       # STEP 54
avl1.insert(int0)                                                       # STEP 55
int3 = 6                                                                # STEP 56
int0 = 15                                                               # STEP 57
avl2.insert(int2)                                                       # STEP 58
int1 = 10                                                               # STEP 59
avl1 == avl0                                                            # STEP 60
int2 = 19                                                               # STEP 61
avl0.delete(int1)                                                       # STEP 62
int1 = 11                                                               # STEP 63
avl2.insert(int3)                                                       # STEP 64
avl0.delete(int1)                                                       # STEP 65
avl0.delete(int3)                                                       # STEP 66
int3 = 16                                                               # STEP 67
int1 = 14                                                               # STEP 68
avl2.insert(int0)                                                       # STEP 69
int0 = 11                                                               # STEP 70
avl1.delete(int1)                                                       # STEP 71
avl0.insert(int1)                                                       # STEP 72
avl1.delete(int2)                                                       # STEP 73
int2 = 4                                                                # STEP 74
avl2.delete(int3)                                                       # STEP 75
int1 = 6                                                                # STEP 76
avl1.delete(int2)                                                       # STEP 77
int2 = 1                                                                # STEP 78
avl0.insert(int0)                                                       # STEP 79
int3 = 17                                                               # STEP 80
int0 = 12                                                               # STEP 81
result = avl1.inorder()                                                 # STEP 82
avl0.insert(int0)                                                       # STEP 83
avl1 = avl.AVLTree()                                                    # STEP 84
int0 = 20                                                               # STEP 85
avl1.insert(int2)                                                       # STEP 86
int2 = 9                                                                # STEP 87
avl0.delete(int3)                                                       # STEP 88
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104362f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int1 = 9                                                                 # STEP 0
int0 = 20                                                                # STEP 1
int3 = 12                                                                # STEP 2
int2 = 5                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int3)                                                        # STEP 5
int3 = 7                                                                 # STEP 6
avl0 = avl.AVLTree()                                                     # STEP 7
avl0.delete(int0)                                                        # STEP 8
int0 = 2                                                                 # STEP 9
avl2.delete(int2)                                                       # STEP 10
int2 = 6                                                                # STEP 11
avl0.delete(int0)                                                       # STEP 12
avl0.delete(int0)                                                       # STEP 13
avl0.delete(int1)                                                       # STEP 14
int0 = 3                                                                # STEP 15
int1 = 2                                                                # STEP 16
avl2.insert(int3)                                                       # STEP 17
int3 = 12                                                               # STEP 18
avl2.insert(int1)                                                       # STEP 19
avl2.delete(int2)                                                       # STEP 20
int1 = 7                                                                # STEP 21
avl0.delete(int1)                                                       # STEP 22
int2 = 9                                                                # STEP 23
int1 = 6                                                                # STEP 24
avl2.insert(int1)                                                       # STEP 25
int1 = 2                                                                # STEP 26
avl2.delete(int2)                                                       # STEP 27
avl2.delete(int2)                                                       # STEP 28
avl2.delete(int3)                                                       # STEP 29
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1047a7050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
208 BRANCHES COVERED
158 STATEMENTS COVERED
