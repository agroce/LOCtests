Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40269.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b61050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 55 steps

SAVING TEST AS failure.40269.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 20                                                                # STEP 0
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 10                                                                # STEP 1
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
int1 = 20                                                                # STEP 2
ACTION: int1 = 20 
int1 = None : <type 'NoneType'>
=> int1 = 20 : <type 'int'>
==================================================
int2 = 1                                                                 # STEP 3
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 6
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 19                                                                # STEP 7
ACTION: int2 = 19 
int2 = 1 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 8
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10, 20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 9
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int3 = 16                                                               # STEP 10
ACTION: int3 = 16 
int3 = 20 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 11
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int0 = 11                                                               # STEP 12
ACTION: int0 = 11 
int0 = 10 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int1 = 1                                                                # STEP 13
ACTION: int1 = 1 
int1 = 20 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 14
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10, 19, 20]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 15
ACTION: int2 = 6 
int2 = 19 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 16
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10, 19, 20, 6]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 17
ACTION: int2 = 12 
int2 = 6 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 18
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 19
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([10, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([12, 10, 19, 20, 6]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 20
ACTION: int1 = 8 
int1 = 1 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 21
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([12, 10, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 22
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([12, 10, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 16                                                               # STEP 23
ACTION: int2 = 16 
int2 = 12 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 24
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([12, 10, 19, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 10, 11, 12, 19, 20]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 25
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 26
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 27
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([6, 10, 11, 12, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6, 8, 10, 11, 12, 19, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 29
ACTION: int0 = 10 
int0 = 11 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 30
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int0 = 14                                                               # STEP 32
ACTION: int0 = 14 
int0 = 10 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 33
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 20                                                               # STEP 35
ACTION: int1 = 20 
int1 = 8 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 36
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 37
ACTION: avl2.insert(int0) 
int0 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([6, 8, 10, 11, 12, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 8, 10, 11, 12, 14, 19, 20]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 38
ACTION: int0 = 10 
int0 = 14 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 40
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 42
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 16]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 43
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 44
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([6, 8, 10, 11, 12, 14, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 45
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 10]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 46
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
avl_REF1 = set([8, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 47
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 16, 10]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 48
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([6, 8, 10, 11, 12, 14, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 49
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
avl_REF1 = set([8, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 10, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 50
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103a4e320> : <type 'instance'>
avl_REF1 = set([8, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 51
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8, 16, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 52
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8, 16, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 16, 10, 20]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 53
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103a4ee18> : <type 'instance'>
avl_REF0 = set([8, 16, 10, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 54
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1059df878> : <type 'instance'>
avl_REF2 = set([6, 8, 10, 11, 12, 14, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([6, 8, 11, 12, 14, 19, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e50710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #8 (0:00:30.063547) Mon May  1 02:12:46 2017 [ 137 stmts 181 branches ]
  8 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([3, 7, 8, 9, 14, 17])
  8 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([3, 7, 8, 9, 14, 17])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 7, 8, 9, 14, 17])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 7, 8, 9, 14, 17])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 7, 8, 9, 14, 17])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 7, 8, 9, 14, 17])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 14, 17])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 14, 17])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 14, 17])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 14, 17])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 14, 17])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [1:0]
---- < 9 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 14, 17])
  12 [2:0]
-- < 1 [1:-1]
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 14 [0:0] L
---- > 18 [0:0] L
set([1, 4, 12, 14, 17, 18])
  12 [2:0]
-- < 1 [1:-1]
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 14 [0:0] L
---- > 18 [0:0] L
set([1, 4, 12, 14, 17, 18])
  8 [3:0]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 9 [0:0] L
------ > 12 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 11, 12, 14, 17])
  8 [3:0]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 5 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 9 [0:0] L
------ > 12 [0:0] L
---- > 17 [0:0] L
set([1, 3, 5, 7, 8, 9, 11, 12, 14, 17])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 30
STOPPING TESTING DUE TO TIMEOUT
8.28190971095 PERCENT COVERED
60.1757049561 TOTAL RUNTIME
7 EXECUTED
585 TOTAL TEST OPERATIONS
27.3295526505 TIME SPENT EXECUTING TEST OPERATIONS
0.0794434547424 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.5689222813 TIME SPENT CHECKING PROPERTIES
54.8984749317 TOTAL TIME SPENT RUNNING SUT
0.00383901596069 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 20                                                                # STEP 0
int0 = 10                                                                # STEP 1
int1 = 20                                                                # STEP 2
int2 = 1                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int0)                                                        # STEP 5
avl2.delete(int2)                                                        # STEP 6
int2 = 19                                                                # STEP 7
avl2.insert(int3)                                                        # STEP 8
avl2.insert(int0)                                                        # STEP 9
int3 = 16                                                               # STEP 10
avl2.insert(int1)                                                       # STEP 11
int0 = 11                                                               # STEP 12
int1 = 1                                                                # STEP 13
avl2.insert(int2)                                                       # STEP 14
int2 = 6                                                                # STEP 15
avl2.insert(int2)                                                       # STEP 16
int2 = 12                                                               # STEP 17
avl2.delete(int1)                                                       # STEP 18
avl2.insert(int2)                                                       # STEP 19
int1 = 8                                                                # STEP 20
avl2.delete(int1)                                                       # STEP 21
avl2.delete(int1)                                                       # STEP 22
int2 = 16                                                               # STEP 23
avl2.insert(int0)                                                       # STEP 24
avl0 = avl.AVLTree()                                                    # STEP 25
avl1 = avl.AVLTree()                                                    # STEP 26
avl2.insert(int1)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
int0 = 10                                                               # STEP 29
avl0.delete(int0)                                                       # STEP 30
avl0.insert(int1)                                                       # STEP 31
int0 = 14                                                               # STEP 32
avl1.insert(int1)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
int1 = 20                                                               # STEP 35
avl1.delete(int0)                                                       # STEP 36
avl2.insert(int0)                                                       # STEP 37
int0 = 10                                                               # STEP 38
avl1.insert(int1)                                                       # STEP 39
avl0.delete(int1)                                                       # STEP 40
avl0.delete(int2)                                                       # STEP 41
avl0.insert(int3)                                                       # STEP 42
avl0.delete(int2)                                                       # STEP 43
avl2.delete(int2)                                                       # STEP 44
avl0.insert(int0)                                                       # STEP 45
avl1.delete(int0)                                                       # STEP 46
avl0.insert(int2)                                                       # STEP 47
avl2.insert(int1)                                                       # STEP 48
avl1.insert(int0)                                                       # STEP 49
avl1.insert(int1)                                                       # STEP 50
avl0.insert(int3)                                                       # STEP 51
avl0.insert(int1)                                                       # STEP 52
avl0.insert(int1)                                                       # STEP 53
avl2.delete(int0)                                                       # STEP 54
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e50710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
201 BRANCHES COVERED
151 STATEMENTS COVERED
