Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.39873.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103621d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 83 steps

SAVING TEST AS failure.39873.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 8                                                                 # STEP 0
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 2
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                 # STEP 3
ACTION: result = avl1.find(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.insert(int2)                                                        # STEP 4
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                 # STEP 6
ACTION: result = avl1.find(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 8
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 19                                                                # STEP 9
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 10
ACTION: int2 = 17 
int2 = 8 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 12
ACTION: avl1.delete(int1) 
int1 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 14                                                               # STEP 13
ACTION: int1 = 14 
int1 = 19 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 14
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 17]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 17
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 18
ACTION: int3 = 15 
int3 = None : <type 'NoneType'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 7                                                                # STEP 19
ACTION: int2 = 7 
int2 = 17 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 20
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([14, 7]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 22
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int0 = 6                                                                # STEP 24
ACTION: int0 = 6 
int0 = None : <type 'NoneType'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 25
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 17, 14]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 26
ACTION: int1 = 2 
int1 = 14 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 27
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 14, 7]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 29
ACTION: result = avl1.find(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int0 = 10                                                               # STEP 30
ACTION: int0 = 10 
int0 = 6 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 31
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 32
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 33
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 34
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl2.find(int1)                                                # STEP 36
ACTION: result = avl2.find(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 37
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 38
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 39
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 40
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 17, 10, 14]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 41
ACTION: result = avl2.find(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int0 = 6                                                                # STEP 42
ACTION: int0 = 6 
int0 = 10 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 43
ACTION: int2 = 8 
int2 = 7 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 44
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 45
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 46
ACTION: int1 = 12 
int1 = 2 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 47
ACTION: int3 = 11 
int3 = 15 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 48
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 11, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 49
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 12]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 2, 11, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 51
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.find(int0)                                                # STEP 52
ACTION: result = avl2.find(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 53
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 17, 10, 6, 14]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 54
ACTION: result = avl1.find(int3) 
int3 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 55
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 56
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([8, 2, 11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 57
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([8, 2, 11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 6, 7, 8, 11, 14]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 58
ACTION: int3 = 17 
int3 = 11 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 5                                                                # STEP 59
ACTION: int0 = 5 
int0 = 6 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([8, 17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 61
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 62
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 12, 5]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 63
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 2, 12, 5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 64
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int3 = 12                                                               # STEP 65
ACTION: int3 = 12 
int3 = 17 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 66
ACTION: avl0.insert(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 6, 7, 8, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 5, 6, 7, 8, 11, 14]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 67
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([8, 2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int0 = 17                                                               # STEP 68
ACTION: int0 = 17 
int0 = 5 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 69
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 5, 6, 7, 8, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 5, 6, 7, 8, 11, 12, 14]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 70
ACTION: int1 = 15 
int1 = 12 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 71
ACTION: avl0.insert(int3) 
int3 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF0 = set([2, 5, 6, 7, 8, 11, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int2 = 14                                                               # STEP 72
ACTION: int2 = 14 
int2 = 8 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 73
ACTION: int3 = 18 
int3 = 12 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2 == avl0                                                            # STEP 74
ACTION: avl2 == avl0 
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x1036364d0> : <type 'instance'>
avl_REF2 = set([8, 2, 12, 5]) : <type 'set'>
avl_REF0 = set([2, 5, 6, 7, 8, 11, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF0 
==================================================
avl2 == avl2                                                            # STEP 75
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([8, 2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl1.delete(int3)                                                       # STEP 76
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 77
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 78
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([8, 2, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 2, 18, 12, 5]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 79
ACTION: result = avl1.find(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 80
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103653998> : <type 'instance'>
avl_REF2 = set([8, 2, 18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 5, 8, 12, 14, 18]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 81
ACTION: int3 = 12 
int3 = 18 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 82
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1040c7638> : <type 'instance'>
avl_REF1 = set([17, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 10, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103777320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1031b5440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 45 steps

SAVING TEST AS failure.39873.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 13                                                                # STEP 0
ACTION: int1 = 13 
int1 = None : <type 'NoneType'>
=> int1 = 13 : <type 'int'>
==================================================
int2 = 2                                                                 # STEP 1
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
int0 = 2                                                                 # STEP 2
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 3
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 4
ACTION: avl2.insert(int2) 
int2 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
int3 = 19                                                                # STEP 5
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int2 = 9                                                                 # STEP 6
ACTION: int2 = 9 
int2 = 2 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl2.insert(int0)                                                        # STEP 7
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int0 = 16                                                                # STEP 8
ACTION: int0 = 16 
int0 = 2 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl2.insert(int2)                                                        # STEP 9
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 2]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 2, 13]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 11
ACTION: avl2.insert(int0) 
int0 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([9, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 9, 2, 13]) : <type 'set'>
==================================================
int2 = 17                                                               # STEP 12
ACTION: int2 = 17 
int2 = 9 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 13
ACTION: int0 = 17 
int0 = 16 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 14
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 15
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 16
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 17
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 18
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 20
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 22
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 23
ACTION: result = avl2.find(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 24
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.find(int0)                                                # STEP 25
ACTION: result = avl0.find(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 26
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10408b128> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 27
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10408b128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 28
ACTION: int0 = 13 
int0 = 17 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 29
ACTION: avl2.insert(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16, 9, 2, 19, 13]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 30
ACTION: int3 = 14 
int3 = 19 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 13]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 32
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 13, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 33
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10408b128> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 34
ACTION: result = avl0.find(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17, 13, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10408b128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 5                                                                # STEP 36
ACTION: int1 = 5 
int1 = 13 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 37
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10408b128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 38
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 19, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.find(int3)                                                # STEP 40
ACTION: result = avl2.find(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10321e7a0> : <type 'instance'>
avl_REF2 = set([16, 9, 2, 19, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 13, 14, 5]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 42
ACTION: int0 = 2 
int0 = 13 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 43
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10408b128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10308d710> : <type 'instance'>
avl_REF0 = set([17, 13, 14, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([17, 13, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103598128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:33.516801) Mon May  1 01:54:33 2017 [ 149 stmts 198 branches ]
  11 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([7, 9, 11, 12, 13, 19])
  11 [2:0]
-- < 7 [1:0]
---- < 2 [0:0] L
---- > 9 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([2, 7, 9, 11, 12, 13, 19])
  11 [3:1]
-- < 7 [2:0]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [1:-1]
------ > 10 [0:0] L
-- > 13 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([2, 4, 7, 9, 10, 11, 12, 13, 19])
  8 [3:1]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 19 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 7, 8, 10, 19, 20])
  8 [3:0]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 19 [2:1]
---- < 10 [1:-1]
------ > 16 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 7, 8, 10, 16, 19, 20])
  8 [3:0]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 19 [2:1]
---- < 10 [1:-1]
------ > 16 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 7, 8, 10, 16, 19, 20])
  11 [3:0]
-- < 7 [2:0]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [1:-1]
------ > 10 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([2, 4, 7, 9, 10, 11, 12, 13, 19, 20])
  8 [3:0]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 19 [2:1]
---- < 14 [1:0]
------ < 10 [0:0] L
------ > 16 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 7, 8, 10, 14, 16, 19, 20])
  11 [3:0]
-- < 7 [2:0]
---- < 2 [1:-1]
------ > 4 [0:0] L
---- > 9 [1:-1]
------ > 10 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 19 [1:0]
------ < 14 [0:0] L
------ > 20 [0:0] L
set([2, 4, 7, 9, 10, 11, 12, 13, 14, 19, 20])
  8 [3:0]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 19 [2:1]
---- < 14 [1:0]
------ < 10 [0:0] L
------ > 16 [0:0] L
---- > 20 [0:0] L
set([3, 4, 6, 7, 8, 10, 14, 16, 19, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 78
STOPPING TESTING DUE TO TIMEOUT
8.81587508133 PERCENT COVERED
60.1747550964 TOTAL RUNTIME
6 EXECUTED
506 TOTAL TEST OPERATIONS
23.8605377674 TIME SPENT EXECUTING TEST OPERATIONS
0.0603461265564 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.9604563713 TIME SPENT CHECKING PROPERTIES
47.8209941387 TOTAL TIME SPENT RUNNING SUT
0.00355815887451 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 8                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl1.insert(int2)                                                        # STEP 2
result = avl1.find(int2)                                                 # STEP 3
avl1.insert(int2)                                                        # STEP 4
avl1.delete(int2)                                                        # STEP 5
result = avl1.find(int2)                                                 # STEP 6
avl1.insert(int2)                                                        # STEP 7
avl1.insert(int2)                                                        # STEP 8
int1 = 19                                                                # STEP 9
int2 = 17                                                               # STEP 10
avl1.delete(int2)                                                       # STEP 11
avl1.delete(int1)                                                       # STEP 12
int1 = 14                                                               # STEP 13
avl1.insert(int2)                                                       # STEP 14
avl1.insert(int2)                                                       # STEP 15
avl1.delete(int1)                                                       # STEP 16
avl0 = avl.AVLTree()                                                    # STEP 17
int3 = 15                                                               # STEP 18
int2 = 7                                                                # STEP 19
avl0.insert(int1)                                                       # STEP 20
avl0.insert(int2)                                                       # STEP 21
avl2 = avl.AVLTree()                                                    # STEP 22
avl0.insert(int1)                                                       # STEP 23
int0 = 6                                                                # STEP 24
avl1.insert(int1)                                                       # STEP 25
int1 = 2                                                                # STEP 26
avl1.delete(int0)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
result = avl1.find(int0)                                                # STEP 29
int0 = 10                                                               # STEP 30
avl2.insert(int0)                                                       # STEP 31
avl2.delete(int1)                                                       # STEP 32
avl2.delete(int0)                                                       # STEP 33
avl2.delete(int3)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
result = avl2.find(int1)                                                # STEP 36
avl1.delete(int1)                                                       # STEP 37
avl2.delete(int3)                                                       # STEP 38
avl0.delete(int3)                                                       # STEP 39
avl1.insert(int0)                                                       # STEP 40
result = avl2.find(int1)                                                # STEP 41
int0 = 6                                                                # STEP 42
int2 = 8                                                                # STEP 43
avl1.delete(int3)                                                       # STEP 44
avl2.insert(int1)                                                       # STEP 45
int1 = 12                                                               # STEP 46
int3 = 11                                                               # STEP 47
avl0.insert(int3)                                                       # STEP 48
avl2.insert(int1)                                                       # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl2.insert(int1)                                                       # STEP 51
result = avl2.find(int0)                                                # STEP 52
avl1.insert(int0)                                                       # STEP 53
result = avl1.find(int3)                                                # STEP 54
avl2.insert(int1)                                                       # STEP 55
avl0.delete(int0)                                                       # STEP 56
avl0.insert(int0)                                                       # STEP 57
int3 = 17                                                               # STEP 58
int0 = 5                                                                # STEP 59
avl1.delete(int2)                                                       # STEP 60
avl1.delete(int0)                                                       # STEP 61
avl2.insert(int0)                                                       # STEP 62
avl2.insert(int2)                                                       # STEP 63
avl1.insert(int3)                                                       # STEP 64
int3 = 12                                                               # STEP 65
avl0.insert(int0)                                                       # STEP 66
avl2.insert(int1)                                                       # STEP 67
int0 = 17                                                               # STEP 68
avl0.insert(int1)                                                       # STEP 69
int1 = 15                                                               # STEP 70
avl0.insert(int3)                                                       # STEP 71
int2 = 14                                                               # STEP 72
int3 = 18                                                               # STEP 73
avl2 == avl0                                                            # STEP 74
avl2 == avl2                                                            # STEP 75
avl1.delete(int3)                                                       # STEP 76
avl1.delete(int1)                                                       # STEP 77
avl2.insert(int3)                                                       # STEP 78
result = avl1.find(int2)                                                # STEP 79
avl2.insert(int2)                                                       # STEP 80
int3 = 12                                                               # STEP 81
avl1.delete(int2)                                                       # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103777320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int1 = 13                                                                # STEP 0
int2 = 2                                                                 # STEP 1
int0 = 2                                                                 # STEP 2
avl2 = avl.AVLTree()                                                     # STEP 3
avl2.insert(int2)                                                        # STEP 4
int3 = 19                                                                # STEP 5
int2 = 9                                                                 # STEP 6
avl2.insert(int0)                                                        # STEP 7
int0 = 16                                                                # STEP 8
avl2.insert(int2)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
avl2.insert(int0)                                                       # STEP 11
int2 = 17                                                               # STEP 12
int0 = 17                                                               # STEP 13
avl2.delete(int2)                                                       # STEP 14
avl0 = avl.AVLTree()                                                    # STEP 15
avl2.delete(int2)                                                       # STEP 16
avl0.delete(int2)                                                       # STEP 17
avl2.delete(int3)                                                       # STEP 18
avl0.delete(int3)                                                       # STEP 19
avl0.delete(int1)                                                       # STEP 20
avl0.delete(int0)                                                       # STEP 21
avl0.insert(int2)                                                       # STEP 22
result = avl2.find(int0)                                                # STEP 23
avl0.insert(int0)                                                       # STEP 24
result = avl0.find(int0)                                                # STEP 25
avl1 = avl.AVLTree()                                                    # STEP 26
avl1.insert(int2)                                                       # STEP 27
int0 = 13                                                               # STEP 28
avl2.insert(int3)                                                       # STEP 29
int3 = 14                                                               # STEP 30
avl0.insert(int1)                                                       # STEP 31
avl0.insert(int3)                                                       # STEP 32
avl1.delete(int2)                                                       # STEP 33
result = avl0.find(int0)                                                # STEP 34
avl1.delete(int3)                                                       # STEP 35
int1 = 5                                                                # STEP 36
avl1.delete(int2)                                                       # STEP 37
avl0.delete(int1)                                                       # STEP 38
avl2.delete(int2)                                                       # STEP 39
result = avl2.find(int3)                                                # STEP 40
avl0.insert(int1)                                                       # STEP 41
int0 = 2                                                                # STEP 42
avl1.insert(int2)                                                       # STEP 43
avl0.delete(int3)                                                       # STEP 44
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103598128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
