Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.498.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10345e3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 60 steps

SAVING TEST AS failure.498.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 3                                                                 # STEP 0
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 1
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 5                                                                 # STEP 2
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 4
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0 == avl0                                                             # STEP 6
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int3)                                                        # STEP 8
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 2                                                                 # STEP 9
ACTION: int3 = 2 
int3 = 3 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 10
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int0)                                                # STEP 11
ACTION: result = avl0.find(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 4                                                                # STEP 12
ACTION: int0 = 4 
int0 = 15 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 13
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 16
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 17
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 18
ACTION: int1 = 12 
int1 = 5 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 19
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 20
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 21
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12, 4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 23
ACTION: int1 = 9 
int1 = 12 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 24
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([12, 2]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 25
ACTION: int0 = 19 
int0 = 4 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 27
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12, 2, 9]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 29
ACTION: int3 = 11 
int3 = 2 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 30
ACTION: result = avl0.find(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0 == avl0                                                            # STEP 31
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int3)                                                       # STEP 32
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 33
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([12, 2, 11]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 35
ACTION: int1 = 10 
int1 = 9 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 36
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 37
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 38
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 39
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 17                                                               # STEP 40
ACTION: int3 = 17 
int3 = 11 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 41
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([12, 2, 11, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 43
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 44
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0 == avl0                                                            # STEP 45
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 46
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 47
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int2 = 11                                                               # STEP 48
ACTION: int2 = 11 
int2 = None : <type 'NoneType'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 49
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 51
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 52
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 53
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 54
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 55
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 9, 10, 11, 12]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 56
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 10, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 57
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 13                                                               # STEP 58
ACTION: int0 = 13 
int0 = 19 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 59
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1032dd908> : <type 'instance'>
avl_REF0 = set([2, 9, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 9, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103254d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105967ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 14 steps

SAVING TEST AS failure.498.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 1                                                                 # STEP 0
ACTION: int3 = 1 
int3 = None : <type 'NoneType'>
=> int3 = 1 : <type 'int'>
==================================================
int0 = 5                                                                 # STEP 1
ACTION: int0 = 5 
int0 = None : <type 'NoneType'>
=> int0 = 5 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 9                                                                 # STEP 3
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 4
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 6
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 5, 9]) : <type 'set'>
==================================================
int2 = 20                                                                # STEP 8
ACTION: int2 = 20 
int2 = 9 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 9
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([1, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 9]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 10
ACTION: result = avl1.find(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([1, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([1, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 5, 9]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 12
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([1, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 20, 5, 9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 13
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105966248> : <type 'instance'>
avl_REF1 = set([1, 20, 5, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([20, 5, 9]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10595c320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103769c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 43 steps

SAVING TEST AS failure.498.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 4                                                                 # STEP 0
ACTION: int2 = 4 
int2 = None : <type 'NoneType'>
=> int2 = 4 : <type 'int'>
==================================================
int1 = 16                                                                # STEP 1
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int0 = 17                                                                # STEP 2
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 3
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                        # STEP 6
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 7
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 4]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 8
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                 # STEP 9
ACTION: result = avl1.find(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int0)                                                # STEP 11
ACTION: result = avl1.find(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 12
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 13
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 14
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 15
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 4]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1 == avl1                                                            # STEP 17
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 21
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 22
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 4]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 23
ACTION: int1 = 9 
int1 = 16 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 24
ACTION: int0 = 6 
int0 = 17 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 25
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 19                                                               # STEP 26
ACTION: int3 = 19 
int3 = 12 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 27
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 19, 4]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 28
ACTION: int2 = 8 
int2 = 4 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 9, 19, 4]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 30
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 9, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 31
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 9, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 32
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 9, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 9, 19, 4, 6]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 33
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 9, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 19, 4, 6]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 34
ACTION: int0 = 1 
int0 = 6 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int3 = 2                                                                # STEP 35
ACTION: int3 = 2 
int3 = 19 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 36
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 8                                                                # STEP 37
ACTION: int1 = 8 
int1 = 9 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 38
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 8, 19, 4, 6]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 39
ACTION: int2 = 15 
int2 = 8 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 40
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 8, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 16                                                               # STEP 41
ACTION: int2 = 16 
int2 = 15 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 42
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10372d2d8> : <type 'instance'>
avl_REF1 = set([16, 8, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([8, 19, 4, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1037709e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103771320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 72 steps

SAVING TEST AS failure.498.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 20                                                                # STEP 1
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 2
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 3
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 10                                                                # STEP 4
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 5
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 1                                                                 # STEP 6
ACTION: int0 = 1 
int0 = 20 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int3 = 7                                                                 # STEP 7
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int2 = 16                                                                # STEP 8
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                        # STEP 9
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 11
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 12
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 13
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 14
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([10, 7]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 10, 7]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 16
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([1, 10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int2 = 13                                                               # STEP 17
ACTION: int2 = 13 
int2 = 16 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([1, 10, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([1, 10]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([1, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 21
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 15                                                               # STEP 23
ACTION: int0 = 15 
int0 = 1 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 24
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 26
ACTION: result = avl1.find(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 27
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 15                                                               # STEP 29
ACTION: int1 = 15 
int1 = 10 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 30
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 31
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int0)                                                # STEP 33
ACTION: result = avl1.find(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 5                                                                # STEP 35
ACTION: int2 = 5 
int2 = 13 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 36
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([5, 7]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 38
ACTION: int2 = 6 
int2 = 5 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 39
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x10375a3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x10371d3f8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
==================================================
avl2.insert(int3)                                                       # STEP 40
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 41
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 42
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 43
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([5, 6, 7]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 44
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 1                                                                # STEP 45
ACTION: int1 = 1 
int1 = 15 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 46
ACTION: int3 = 17 
int3 = 7 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 47
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([5, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([5, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 48
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10371d3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 49
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 50
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10371d3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int0)                                                       # STEP 51
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([6, 15]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 52
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([15, 5, 7]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 53
ACTION: result = avl2.find(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([15, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 54
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([15, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 15, 5, 7]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
avl_REF0 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 56
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10371d3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 57
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([17, 15, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17, 5, 7]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 58
ACTION: int2 = 19 
int2 = 6 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 59
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([17, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 15, 5, 7]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 60
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
avl_REF0 = set([6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 6, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 61
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([17, 15, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 5, 7, 15, 17]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 62
ACTION: int0 = 11 
int0 = 15 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 63
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10371d3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 64
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
avl_REF0 = set([17, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 11, 6, 15]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 65
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([1, 5, 7, 15, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1, 5, 7, 15]) : <type 'set'>
==================================================
int0 = 5                                                                # STEP 66
ACTION: int0 = 5 
int0 = 11 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 67
ACTION: int1 = 11 
int1 = 1 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 68
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([1, 5, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 5, 7, 11, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 69
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103731b48> : <type 'instance'>
avl_REF2 = set([1, 5, 7, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 5, 7, 11, 15, 17]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 70
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10371d3f8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 71
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10371dbd8> : <type 'instance'>
avl_REF0 = set([17, 11, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11, 6, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103775e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
TEST #5 STEP #0 (0:00:30.631829) Fri Apr 28 06:29:42 2017 [ 148 stmts 196 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103730098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 36 steps

SAVING TEST AS failure.498.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 9                                                                 # STEP 0
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int2 = 17                                                                # STEP 1
ACTION: int2 = 17 
int2 = None : <type 'NoneType'>
=> int2 = 17 : <type 'int'>
==================================================
int1 = 6                                                                 # STEP 2
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
int3 = 16                                                                # STEP 3
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 5
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 8
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 17]) : <type 'set'>
==================================================
int1 = 12                                                                # STEP 9
ACTION: int1 = 12 
int1 = 6 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 10
ACTION: int3 = 6 
int3 = 16 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 3                                                                # STEP 13
ACTION: int2 = 3 
int2 = 17 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 14
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int0)                                                # STEP 15
ACTION: result = avl0.find(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 16
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 17, 9]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 17
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 18
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 12                                                               # STEP 19
ACTION: int1 = 12 
int1 = 12 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 20
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 21
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 22
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 17, 3, 9]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 23
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 17, 3, 12, 9]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 12, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.find(int2)                                                # STEP 25
ACTION: result = avl0.find(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 12, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 12, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([16, 17, 3, 9]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 27
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10373f5a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10373f5a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 29
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10373f5a8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 16                                                               # STEP 30
ACTION: int1 = 16 
int1 = 12 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
int3 = 14                                                               # STEP 31
ACTION: int3 = 14 
int3 = 6 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int0 = 18                                                               # STEP 32
ACTION: int0 = 18 
int0 = 9 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 33
ACTION: int2 = 19 
int2 = 3 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 34
ACTION: result = avl0.find(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 35
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1037306c8> : <type 'instance'>
avl_REF0 = set([16, 17, 3, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([17, 3, 9]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10373ec20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
  8 [2:0]
-- < 1 [1:-1]
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
set([1, 7, 8, 13, 16, 19])
  8 [2:0]
-- < 1 [1:-1]
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
set([1, 7, 8, 13, 16, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10374cdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 49 steps

SAVING TEST AS failure.498.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 8                                                                 # STEP 0
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 1
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 11                                                                # STEP 2
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
int0 = 2                                                                 # STEP 3
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 5
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 7
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
int2 = 1                                                                 # STEP 8
ACTION: int2 = 1 
int2 = 8 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int2)                                                        # STEP 9
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 1]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 10
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0 == avl0                                                            # STEP 12
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int2)                                                       # STEP 13
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 14
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 15
ACTION: int2 = 10 
int2 = 1 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 16
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                       # STEP 17
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 18
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 19
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 10]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 20
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 11]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 21
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 10, 3]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 3]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 23
ACTION: result = avl2.find(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 24
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 25
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 17                                                               # STEP 26
ACTION: int2 = 17 
int2 = 10 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 27
ACTION: result = avl2.find(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 28
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 29
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 11]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 30
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 31
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10373cc20> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 32
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 11]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 34
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 16                                                               # STEP 35
ACTION: int1 = 16 
int1 = 3 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 36
ACTION: int3 = 16 
int3 = 11 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 37
ACTION: int2 = 15 
int2 = 17 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 38
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 39
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 2, 11]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 16, 2, 11]) : <type 'set'>
==================================================
avl1 == avl2                                                            # STEP 41
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x10373cc20> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 42
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1 == avl2                                                            # STEP 43
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x10373cc20> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
int0 = 2                                                                # STEP 44
ACTION: int0 = 2 
int0 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 45
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 46
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 16, 2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl2.find(int2)                                                # STEP 47
ACTION: result = avl2.find(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103734e18> : <type 'instance'>
avl_REF2 = set([3, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 48
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103745320> : <type 'instance'>
avl_REF0 = set([8, 16, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 16, 11]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103768b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
  6 [2:0]
-- < 4 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 8 [0:0] L
---- > 20 [0:0] L
set([1, 4, 6, 8, 18, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 7
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.2040119171 TOTAL RUNTIME
9 EXECUTED
481 TOTAL TEST OPERATIONS
18.9323880672 TIME SPENT EXECUTING TEST OPERATIONS
0.0534541606903 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
19.0084514618 TIME SPENT CHECKING PROPERTIES
37.940839529 TOTAL TIME SPENT RUNNING SUT
0.00521326065063 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
6 FAILED
0 REPEATS OF FAILURES
6 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 3                                                                 # STEP 0
int0 = 15                                                                # STEP 1
int1 = 5                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.insert(int3)                                                        # STEP 4
avl0.insert(int3)                                                        # STEP 5
avl0 == avl0                                                             # STEP 6
avl0.insert(int3)                                                        # STEP 7
avl0.delete(int3)                                                        # STEP 8
int3 = 2                                                                 # STEP 9
avl0.delete(int1)                                                       # STEP 10
result = avl0.find(int0)                                                # STEP 11
int0 = 4                                                                # STEP 12
result = avl0.inorder()                                                 # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
result = avl0.inorder()                                                 # STEP 16
avl0.delete(int3)                                                       # STEP 17
int1 = 12                                                               # STEP 18
avl0.delete(int0)                                                       # STEP 19
avl0.insert(int0)                                                       # STEP 20
avl0.insert(int1)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
int1 = 9                                                                # STEP 23
avl0.insert(int3)                                                       # STEP 24
int0 = 19                                                               # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl0.delete(int0)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
int3 = 11                                                               # STEP 29
result = avl0.find(int0)                                                # STEP 30
avl0 == avl0                                                            # STEP 31
avl0.insert(int3)                                                       # STEP 32
avl0.delete(int1)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
int1 = 10                                                               # STEP 35
avl0.delete(int1)                                                       # STEP 36
avl0.insert(int3)                                                       # STEP 37
avl0.delete(int1)                                                       # STEP 38
avl0.delete(int1)                                                       # STEP 39
int3 = 17                                                               # STEP 40
avl0.insert(int0)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl0.insert(int0)                                                       # STEP 43
avl0.insert(int0)                                                       # STEP 44
avl0 == avl0                                                            # STEP 45
avl0.delete(int1)                                                       # STEP 46
avl0.delete(int1)                                                       # STEP 47
int2 = 11                                                               # STEP 48
avl0.delete(int0)                                                       # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl0.delete(int3)                                                       # STEP 51
result = avl0.inorder()                                                 # STEP 52
avl0.delete(int1)                                                       # STEP 53
avl0.delete(int1)                                                       # STEP 54
avl0.insert(int1)                                                       # STEP 55
avl0.delete(int1)                                                       # STEP 56
result = avl0.inorder()                                                 # STEP 57
int0 = 13                                                               # STEP 58
avl0.delete(int2)                                                       # STEP 59
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103254d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int3 = 1                                                                 # STEP 0
int0 = 5                                                                 # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
int2 = 9                                                                 # STEP 3
avl1.delete(int2)                                                        # STEP 4
avl1.insert(int0)                                                        # STEP 5
avl1.insert(int3)                                                        # STEP 6
avl1.insert(int2)                                                        # STEP 7
int2 = 20                                                                # STEP 8
avl1.delete(int0)                                                        # STEP 9
result = avl1.find(int0)                                                # STEP 10
avl1.insert(int0)                                                       # STEP 11
avl1.insert(int2)                                                       # STEP 12
avl1.delete(int3)                                                       # STEP 13
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10595c320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int2 = 4                                                                 # STEP 0
int1 = 16                                                                # STEP 1
int0 = 17                                                                # STEP 2
int3 = 12                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int2)                                                        # STEP 5
avl1.insert(int1)                                                        # STEP 6
avl1.insert(int2)                                                        # STEP 7
avl1.delete(int1)                                                        # STEP 8
result = avl1.find(int0)                                                 # STEP 9
avl1.delete(int1)                                                       # STEP 10
result = avl1.find(int0)                                                # STEP 11
avl1.delete(int2)                                                       # STEP 12
avl1.delete(int0)                                                       # STEP 13
avl1.insert(int0)                                                       # STEP 14
avl1.insert(int2)                                                       # STEP 15
avl1.delete(int1)                                                       # STEP 16
avl1 == avl1                                                            # STEP 17
avl1.delete(int2)                                                       # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1.insert(int2)                                                       # STEP 20
avl1.delete(int1)                                                       # STEP 21
avl1.insert(int1)                                                       # STEP 22
int1 = 9                                                                # STEP 23
int0 = 6                                                                # STEP 24
avl1.delete(int3)                                                       # STEP 25
int3 = 19                                                               # STEP 26
avl1.insert(int3)                                                       # STEP 27
int2 = 8                                                                # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl1.insert(int3)                                                       # STEP 30
avl1.insert(int1)                                                       # STEP 31
avl1.insert(int0)                                                       # STEP 32
avl1.delete(int1)                                                       # STEP 33
int0 = 1                                                                # STEP 34
int3 = 2                                                                # STEP 35
avl1.delete(int1)                                                       # STEP 36
int1 = 8                                                                # STEP 37
avl1.insert(int2)                                                       # STEP 38
int2 = 15                                                               # STEP 39
avl1.delete(int2)                                                       # STEP 40
int2 = 16                                                               # STEP 41
avl1.delete(int2)                                                       # STEP 42
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1037709e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 3
avl1 = avl.AVLTree()                                                     # STEP 0
int0 = 20                                                                # STEP 1
avl1.insert(int0)                                                        # STEP 2
avl1.delete(int0)                                                        # STEP 3
int1 = 10                                                                # STEP 4
avl1.delete(int0)                                                        # STEP 5
int0 = 1                                                                 # STEP 6
int3 = 7                                                                 # STEP 7
int2 = 16                                                                # STEP 8
avl1.insert(int1)                                                        # STEP 9
avl1.delete(int2)                                                       # STEP 10
result = avl1.inorder()                                                 # STEP 11
avl1.delete(int3)                                                       # STEP 12
avl1.insert(int1)                                                       # STEP 13
avl1.insert(int3)                                                       # STEP 14
avl1.insert(int0)                                                       # STEP 15
avl1.insert(int3)                                                       # STEP 16
int2 = 13                                                               # STEP 17
avl1.delete(int3)                                                       # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1.delete(int1)                                                       # STEP 20
avl1.delete(int3)                                                       # STEP 21
avl1.delete(int2)                                                       # STEP 22
int0 = 15                                                               # STEP 23
avl1.delete(int0)                                                       # STEP 24
avl1.insert(int3)                                                       # STEP 25
result = avl1.find(int2)                                                # STEP 26
avl1.delete(int1)                                                       # STEP 27
avl1.insert(int3)                                                       # STEP 28
int1 = 15                                                               # STEP 29
avl2 = avl.AVLTree()                                                    # STEP 30
avl2.insert(int3)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
result = avl1.find(int0)                                                # STEP 33
avl1.delete(int2)                                                       # STEP 34
int2 = 5                                                                # STEP 35
avl2.insert(int2)                                                       # STEP 36
avl1.delete(int3)                                                       # STEP 37
int2 = 6                                                                # STEP 38
avl1 = avl.AVLTree()                                                    # STEP 39
avl2.insert(int3)                                                       # STEP 40
avl2.insert(int3)                                                       # STEP 41
avl0 = avl.AVLTree()                                                    # STEP 42
avl2.insert(int2)                                                       # STEP 43
avl2.delete(int1)                                                       # STEP 44
int1 = 1                                                                # STEP 45
int3 = 17                                                               # STEP 46
avl2.delete(int2)                                                       # STEP 47
avl1.delete(int2)                                                       # STEP 48
avl0.insert(int2)                                                       # STEP 49
result = avl1.inorder()                                                 # STEP 50
avl0.insert(int0)                                                       # STEP 51
avl2.insert(int0)                                                       # STEP 52
result = avl2.find(int2)                                                # STEP 53
avl2.insert(int3)                                                       # STEP 54
avl0.insert(int0)                                                       # STEP 55
avl1.delete(int0)                                                       # STEP 56
avl2.delete(int0)                                                       # STEP 57
int2 = 19                                                               # STEP 58
avl2.insert(int0)                                                       # STEP 59
avl0.insert(int3)                                                       # STEP 60
avl2.insert(int1)                                                       # STEP 61
int0 = 11                                                               # STEP 62
avl1.delete(int1)                                                       # STEP 63
avl0.insert(int0)                                                       # STEP 64
avl2.delete(int3)                                                       # STEP 65
int0 = 5                                                                # STEP 66
int1 = 11                                                               # STEP 67
avl2.insert(int1)                                                       # STEP 68
avl2.insert(int3)                                                       # STEP 69
avl1.delete(int3)                                                       # STEP 70
avl0.delete(int3)                                                       # STEP 71
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103775e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 4
int0 = 9                                                                 # STEP 0
int2 = 17                                                                # STEP 1
int1 = 6                                                                 # STEP 2
int3 = 16                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int2)                                                        # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.insert(int3)                                                        # STEP 7
avl0.insert(int2)                                                        # STEP 8
int1 = 12                                                                # STEP 9
int3 = 6                                                                # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
int2 = 3                                                                # STEP 13
avl0.delete(int1)                                                       # STEP 14
result = avl0.find(int0)                                                # STEP 15
avl0.insert(int0)                                                       # STEP 16
avl0 == avl0                                                            # STEP 17
avl0.delete(int1)                                                       # STEP 18
int1 = 12                                                               # STEP 19
result = avl0.inorder()                                                 # STEP 20
avl0.delete(int1)                                                       # STEP 21
avl0.insert(int2)                                                       # STEP 22
avl0.insert(int1)                                                       # STEP 23
avl0.insert(int1)                                                       # STEP 24
result = avl0.find(int2)                                                # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl1 = avl.AVLTree()                                                    # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl1.delete(int2)                                                       # STEP 29
int1 = 16                                                               # STEP 30
int3 = 14                                                               # STEP 31
int0 = 18                                                               # STEP 32
int2 = 19                                                               # STEP 33
result = avl0.find(int0)                                                # STEP 34
avl0.delete(int1)                                                       # STEP 35
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10373ec20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 5
int2 = 8                                                                 # STEP 0
int1 = 3                                                                 # STEP 1
int3 = 11                                                                # STEP 2
int0 = 2                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int1)                                                        # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.insert(int2)                                                        # STEP 7
int2 = 1                                                                 # STEP 8
avl0.insert(int2)                                                        # STEP 9
result = avl0.inorder()                                                 # STEP 10
avl0.delete(int1)                                                       # STEP 11
avl0 == avl0                                                            # STEP 12
avl0.delete(int2)                                                       # STEP 13
avl2 = avl.AVLTree()                                                    # STEP 14
int2 = 10                                                               # STEP 15
result = avl0.inorder()                                                 # STEP 16
avl0.delete(int3)                                                       # STEP 17
avl2.insert(int3)                                                       # STEP 18
avl0.insert(int2)                                                       # STEP 19
avl2.insert(int1)                                                       # STEP 20
avl0.insert(int1)                                                       # STEP 21
avl0.delete(int2)                                                       # STEP 22
result = avl2.find(int1)                                                # STEP 23
avl0.delete(int1)                                                       # STEP 24
avl2.delete(int2)                                                       # STEP 25
int2 = 17                                                               # STEP 26
result = avl2.find(int1)                                                # STEP 27
avl2.delete(int1)                                                       # STEP 28
avl2.insert(int1)                                                       # STEP 29
avl2.delete(int2)                                                       # STEP 30
avl1 = avl.AVLTree()                                                    # STEP 31
avl2.delete(int2)                                                       # STEP 32
avl0.insert(int3)                                                       # STEP 33
result = avl0.inorder()                                                 # STEP 34
int1 = 16                                                               # STEP 35
int3 = 16                                                               # STEP 36
int2 = 15                                                               # STEP 37
avl2.delete(int3)                                                       # STEP 38
avl0.insert(int0)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl1 == avl2                                                            # STEP 41
avl2.delete(int3)                                                       # STEP 42
avl1 == avl2                                                            # STEP 43
int0 = 2                                                                # STEP 44
avl2.delete(int2)                                                       # STEP 45
result = avl0.inorder()                                                 # STEP 46
result = avl2.find(int2)                                                # STEP 47
avl0.delete(int0)                                                       # STEP 48
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103768b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
