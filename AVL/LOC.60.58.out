Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.345.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  10 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:-1]
---- > 18 [0:0] L
set([3, 5, 7, 10, 15, 18])
  10 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:-1]
---- > 18 [0:0] L
set([3, 5, 7, 10, 15, 18])
  10 [2:0]
-- < 5 [1:-1]
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([5, 7, 10, 15, 16, 18])
  10 [2:0]
-- < 5 [1:-1]
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([5, 7, 10, 15, 16, 18])
  10 [2:0]
-- < 5 [1:-1]
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([5, 7, 10, 15, 16, 18])
  16 [2:0]
-- < 8 [1:0]
---- < 1 [0:0] L
---- > 10 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
set([1, 8, 10, 16, 18, 19])
  16 [3:1]
-- < 8 [2:-1]
---- < 1 [0:0] L
---- > 10 [1:-1]
------ > 13 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
set([1, 8, 10, 13, 16, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102fa3ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 73 steps

SAVING TEST AS failure.345.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 16                                                                # STEP 0
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
int0 = 19                                                                # STEP 1
ACTION: int0 = 19 
int0 = None : <type 'NoneType'>
=> int0 = 19 : <type 'int'>
==================================================
int1 = 10                                                                # STEP 2
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
int2 = 12                                                                # STEP 3
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                        # STEP 6
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 8
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 19]) : <type 'set'>
==================================================
int0 = 17                                                                # STEP 9
ACTION: int0 = 17 
int0 = 19 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 10
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 11
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 12
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 14
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 15
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 16
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 17
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10, 19]) : <type 'set'>
==================================================
int1 = 12                                                               # STEP 18
ACTION: int1 = 12 
int1 = 10 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 19
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 22
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 23
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 19, 12]) : <type 'set'>
==================================================
int2 = 3                                                                # STEP 24
ACTION: int2 = 3 
int2 = 12 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 25
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([10, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 10, 19, 12]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 26
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 27
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 28
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 29
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 30
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 10, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 18                                                               # STEP 32
ACTION: int1 = 18 
int1 = 12 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 33
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 20                                                               # STEP 34
ACTION: int2 = 20 
int2 = 3 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 35
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 36
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 17, 10, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 37
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 17, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16, 10, 19]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 38
ACTION: int0 = 8 
int0 = 17 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int2 = 13                                                               # STEP 39
ACTION: int2 = 13 
int2 = 20 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 40
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int3 = 1                                                                # STEP 41
ACTION: int3 = 1 
int3 = 16 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 42
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 43
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 7                                                                # STEP 44
ACTION: int2 = 7 
int2 = 13 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 45
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 46
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 1, 10, 19]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 47
ACTION: int2 = 8 
int2 = 7 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 48
ACTION: int3 = 3 
int3 = 1 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 49
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([16, 1, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 50
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 51
ACTION: avl1.delete(int0) 
int0 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 10, 16, 19]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 52
ACTION: result = avl1.find(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1 == avl1                                                            # STEP 53
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                       # STEP 54
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 55
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 5                                                                # STEP 56
ACTION: int3 = 5 
int3 = 3 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 57
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 58
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 59
ACTION: avl1.insert(int2) 
int2 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int2 = 13                                                               # STEP 60
ACTION: int2 = 13 
int2 = 8 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 61
ACTION: int3 = 13 
int3 = 5 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 62
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 20                                                               # STEP 63
ACTION: int0 = 20 
int0 = 8 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 64
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.display()                                                          # STEP 65
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
  16 [2:0]
-- < 8 [1:0]
---- < 1 [0:0] L
---- > 10 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 8, 10, 16, 18, 19])
==================================================
avl1.insert(int1)                                                       # STEP 66
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1 == avl1                                                            # STEP 67
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int2)                                                       # STEP 68
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 8, 10, 13, 16, 18, 19]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 69
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 13, 16, 18, 19]) : <type 'set'>
  16 [3:1]
-- < 8 [2:-1]
---- < 1 [0:0] L
---- > 10 [1:-1]
------ > 13 [0:0] L
-- > 19 [1:1]
---- < 18 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 8, 10, 13, 16, 18, 19])
==================================================
int0 = 7                                                                # STEP 70
ACTION: int0 = 7 
int0 = 20 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 71
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 72
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1046d8440> : <type 'instance'>
avl_REF1 = set([1, 8, 10, 13, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 8, 10, 13, 16, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046df320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046ebb90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 90 steps

SAVING TEST AS failure.345.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2 == avl2                                                             # STEP 1
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int1 = 19                                                                # STEP 2
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 3
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                        # STEP 4
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.find(int1)                                                 # STEP 5
ACTION: result = avl2.find(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 4                                                                 # STEP 6
ACTION: int1 = 4 
int1 = 19 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 7
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 9
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 11
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 12
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 13
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 14
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 15
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 16
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 1                                                                # STEP 17
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 18
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 14]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 19
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 20
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 21
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl2.find(int3)                                                # STEP 23
ACTION: result = avl2.find(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 24
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 4, 14]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 25
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 26
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 27
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([1, 4]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 28
ACTION: int0 = 1 
int0 = 1 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 29
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 30
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 4]) : <type 'set'>
==================================================
int1 = 13                                                               # STEP 31
ACTION: int1 = 13 
int1 = 4 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 9                                                                # STEP 33
ACTION: int2 = 9 
int2 = 15 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 34
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 35
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 4, 13]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 36
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int0)                                                       # STEP 37
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 38
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 4, 13]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 39
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([1, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([4, 13]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 13, 14]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 4, 13, 14]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 44
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([9, 4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([9, 4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 46
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([9, 4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 4, 13, 14, 1]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 47
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([9, 4, 13, 14, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 48
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([9, 4, 13, 14, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9, 4, 13, 14]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 49
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([9, 4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 13, 14]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 50
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int3)                                                       # STEP 51
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([4, 13]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 52
ACTION: int1 = 4 
int1 = 13 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 53
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 13, 14]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 54
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 55
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 56
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 4, 13, 9]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 57
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.insert(int1)                                                       # STEP 58
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int3 = 11                                                               # STEP 59
ACTION: int3 = 11 
int3 = 14 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 60
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 4, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([1, 13, 9]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 61
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2 == avl2                                                            # STEP 62
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.delete(int2)                                                       # STEP 63
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 1                                                                # STEP 64
ACTION: int1 = 1 
int1 = 4 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 65
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([13, 9]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 66
ACTION: int0 = 18 
int0 = 1 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 67
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.find(int3)                                                # STEP 68
ACTION: result = avl2.find(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([13, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 69
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4, 13, 14, 18]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 70
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 71
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([13, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([18, 9, 13]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 72
ACTION: avl2.insert(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([18, 9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 18, 9, 13]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 73
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 74
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 75
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 76
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 18, 13]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 77
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl0.find(int1)                                                # STEP 78
ACTION: result = avl0.find(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int2 = 17                                                               # STEP 79
ACTION: int2 = 17 
int2 = 9 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 80
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([4, 13, 14]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 81
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 13                                                               # STEP 82
ACTION: int3 = 13 
int3 = 11 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 83
ACTION: int2 = 11 
int2 = 17 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 84
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([4, 14]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 85
ACTION: result = avl2.find(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 86
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046cfb48> : <type 'instance'>
avl_REF0 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 4, 14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 87
ACTION: avl2.insert(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 18, 11, 13]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 88
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 11, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int0)                                                       # STEP 89
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046e80e0> : <type 'instance'>
avl_REF2 = set([1, 18, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1, 11, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10474b5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:34.733327) Fri Apr 28 06:08:20 2017 [ 159 stmts 210 branches ]
  11 [2:0]
-- < 4 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 18 [1:1]
---- < 12 [0:0] L
set([1, 4, 5, 11, 12, 18])
  11 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 11, 12, 14, 20])
  11 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 11, 12, 14, 20])
  11 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 8 [1:-1]
------ > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 10, 11, 12, 14, 20])
  11 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 8 [1:-1]
------ > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 10, 11, 12, 14, 20])
  11 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 8 [1:-1]
------ > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 10, 11, 12, 14, 20])
  11 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 8 [1:-1]
------ > 10 [0:0] L
-- > 14 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 10, 11, 12, 14, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058effc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 45 steps

SAVING TEST AS failure.345.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 3                                                                 # STEP 0
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2 == avl2                                                             # STEP 2
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int2 = 4                                                                 # STEP 3
ACTION: int2 = 4 
int2 = None : <type 'NoneType'>
=> int2 = 4 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 4
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int2)                                                        # STEP 5
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 6
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                        # STEP 7
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int1)                                                        # STEP 9
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 10
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 4]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 11
ACTION: int2 = 19 
int2 = 4 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 12
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 13
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 14
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 4]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 15
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
result = avl2.find(int1)                                                # STEP 16
ACTION: result = avl2.find(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 7                                                                # STEP 17
ACTION: int1 = 7 
int1 = 3 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 18
ACTION: int0 = 20 
int0 = 17 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 19
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 20
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 21
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 19, 4]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 22
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17, 4]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 23
ACTION: result = avl2.find(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 24
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 19, 4]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 25
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 19, 4, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 26
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 19, 4, 20, 7]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 27
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 20, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 28
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 29
ACTION: result = avl2.find(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 20, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 31
ACTION: avl2.delete(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17, 19, 4, 7]) : <type 'set'>
==================================================
result = avl2.find(int1)                                                # STEP 32
ACTION: result = avl2.find(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 3                                                                # STEP 33
ACTION: int1 = 3 
int1 = 7 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 35
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 20]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 36
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 5                                                                # STEP 37
ACTION: int0 = 5 
int0 = 20 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
avl_REF0 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl2.find(int1)                                                # STEP 39
ACTION: result = avl2.find(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 40
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([17, 19, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 4, 7, 17, 19]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 41
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
avl_REF0 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
result = avl0.find(int2)                                                # STEP 42
ACTION: result = avl0.find(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058e18c0> : <type 'instance'>
avl_REF0 = set([3, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int1 = 16                                                               # STEP 43
ACTION: int1 = 16 
int1 = 3 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 44
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058ef5f0> : <type 'instance'>
avl_REF2 = set([3, 4, 7, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([3, 4, 7, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1043da4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10477a170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 71 steps

SAVING TEST AS failure.345.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 9                                                                 # STEP 0
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 15                                                                # STEP 1
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 2
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 3
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int1)                                                        # STEP 4
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                        # STEP 5
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
int2 = 18                                                                # STEP 6
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl2.delete(int1)                                                        # STEP 7
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 8
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                        # STEP 9
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 9                                                                # STEP 10
ACTION: int0 = 9 
int0 = 9 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 11
ACTION: result = avl2.find(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int3 = 6                                                                # STEP 12
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 13
ACTION: int2 = 8 
int2 = 18 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 14
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 15
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 16
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 17
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 9]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 18
ACTION: result = avl0.find(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 19
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 20
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int1)                                                       # STEP 21
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 22
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 23
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 24
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 1                                                                # STEP 26
ACTION: int2 = 1 
int2 = 8 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
int0 = 16                                                               # STEP 27
ACTION: int0 = 16 
int0 = 9 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
int1 = 17                                                               # STEP 28
ACTION: int1 = 17 
int1 = 15 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 29
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 6]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 30
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 18                                                               # STEP 31
ACTION: int2 = 18 
int2 = 1 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
int3 = 16                                                               # STEP 32
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 33
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 18, 6]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 17, 18, 6]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 35
ACTION: int2 = 20 
int2 = 18 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 36
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 17, 18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 17, 18, 6, 16]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 37
ACTION: int0 = 1 
int0 = 16 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 38
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 17, 18, 6, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 39
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 17, 18, 6, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int0 = 12                                                               # STEP 40
ACTION: int0 = 12 
int0 = 1 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 41
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 17, 18, 6, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 18, 6, 16]) : <type 'set'>
==================================================
int3 = 9                                                                # STEP 42
ACTION: int3 = 9 
int3 = 16 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 43
ACTION: avl0.delete(int3) 
int3 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 18, 6, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 44
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x1047583b0> : <type 'instance'>
avl_REF0 = set([8, 18, 6, 16]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 45
ACTION: int1 = 14 
int1 = 17 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 46
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([14, 15]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 47
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12, 14, 15]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 48
ACTION: result = avl2.find(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([12, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int1 = 15                                                               # STEP 49
ACTION: int1 = 15 
int1 = 14 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 50
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 51
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 9                                                                # STEP 52
ACTION: int1 = 9 
int1 = 15 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 53
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 54
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 12, 14, 15]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 55
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([9, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([12, 14, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 56
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int0)                                                       # STEP 57
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([14, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 58
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 59
ACTION: int3 = 8 
int3 = 9 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 60
ACTION: result = avl0.find(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 61
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 62
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int0)                                                       # STEP 63
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 64
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1047675a8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 65
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int1)                                                       # STEP 66
ACTION: avl2.insert(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 14, 15]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 67
ACTION: int1 = 14 
int1 = 9 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 68
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 12, 14, 15]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 69
ACTION: int0 = 7 
int0 = 12 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 70
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10477a488> : <type 'instance'>
avl_REF2 = set([9, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([9, 12, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104753878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
61.961673975 TOTAL RUNTIME
7 EXECUTED
479 TOTAL TEST OPERATIONS
19.2326090336 TIME SPENT EXECUTING TEST OPERATIONS
0.0535168647766 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
19.3871414661 TIME SPENT CHECKING PROPERTIES
38.6197504997 TOTAL TIME SPENT RUNNING SUT
0.00428533554077 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 16                                                                # STEP 0
int0 = 19                                                                # STEP 1
int1 = 10                                                                # STEP 2
int2 = 12                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.delete(int3)                                                        # STEP 5
avl1.delete(int3)                                                        # STEP 6
avl1.insert(int0)                                                        # STEP 7
avl1.insert(int3)                                                        # STEP 8
int0 = 17                                                                # STEP 9
avl1.insert(int3)                                                       # STEP 10
avl1.insert(int3)                                                       # STEP 11
avl1.delete(int3)                                                       # STEP 12
avl1.delete(int1)                                                       # STEP 13
result = avl1.inorder()                                                 # STEP 14
avl1.delete(int2)                                                       # STEP 15
avl1.delete(int2)                                                       # STEP 16
avl1.insert(int1)                                                       # STEP 17
int1 = 12                                                               # STEP 18
avl1.delete(int3)                                                       # STEP 19
avl1.delete(int2)                                                       # STEP 20
avl1.delete(int2)                                                       # STEP 21
avl1.delete(int0)                                                       # STEP 22
avl1.insert(int2)                                                       # STEP 23
int2 = 3                                                                # STEP 24
avl1.insert(int3)                                                       # STEP 25
avl1.delete(int2)                                                       # STEP 26
avl1.delete(int0)                                                       # STEP 27
avl1.delete(int2)                                                       # STEP 28
avl1.delete(int0)                                                       # STEP 29
avl1.delete(int1)                                                       # STEP 30
avl1.delete(int1)                                                       # STEP 31
int1 = 18                                                               # STEP 32
avl1.delete(int2)                                                       # STEP 33
int2 = 20                                                               # STEP 34
avl1.delete(int2)                                                       # STEP 35
avl1.insert(int0)                                                       # STEP 36
avl1.delete(int0)                                                       # STEP 37
int0 = 8                                                                # STEP 38
int2 = 13                                                               # STEP 39
avl1.insert(int3)                                                       # STEP 40
int3 = 1                                                                # STEP 41
avl1.delete(int2)                                                       # STEP 42
avl1.delete(int2)                                                       # STEP 43
int2 = 7                                                                # STEP 44
avl1.delete(int2)                                                       # STEP 45
avl1.insert(int3)                                                       # STEP 46
int2 = 8                                                                # STEP 47
int3 = 3                                                                # STEP 48
avl1.insert(int2)                                                       # STEP 49
avl1.insert(int2)                                                       # STEP 50
avl1.delete(int0)                                                       # STEP 51
result = avl1.find(int3)                                                # STEP 52
avl1 == avl1                                                            # STEP 53
avl1.insert(int0)                                                       # STEP 54
avl1.delete(int3)                                                       # STEP 55
int3 = 5                                                                # STEP 56
avl1.delete(int3)                                                       # STEP 57
avl1.insert(int1)                                                       # STEP 58
avl1.insert(int2)                                                       # STEP 59
int2 = 13                                                               # STEP 60
int3 = 13                                                               # STEP 61
avl1.delete(int2)                                                       # STEP 62
int0 = 20                                                               # STEP 63
avl1.delete(int0)                                                       # STEP 64
avl1.display()                                                          # STEP 65
avl1.insert(int1)                                                       # STEP 66
avl1 == avl1                                                            # STEP 67
avl1.insert(int2)                                                       # STEP 68
avl1.display()                                                          # STEP 69
int0 = 7                                                                # STEP 70
avl1.insert(int2)                                                       # STEP 71
avl1.delete(int1)                                                       # STEP 72
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046df320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
avl2 = avl.AVLTree()                                                     # STEP 0
avl2 == avl2                                                             # STEP 1
int1 = 19                                                                # STEP 2
avl2.delete(int1)                                                        # STEP 3
avl2.delete(int1)                                                        # STEP 4
result = avl2.find(int1)                                                 # STEP 5
int1 = 4                                                                 # STEP 6
avl2.insert(int1)                                                        # STEP 7
avl2.delete(int1)                                                        # STEP 8
avl2.delete(int1)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
avl2.delete(int1)                                                       # STEP 11
int3 = 14                                                               # STEP 12
avl2.delete(int3)                                                       # STEP 13
avl2.delete(int1)                                                       # STEP 14
avl2.insert(int3)                                                       # STEP 15
avl2.delete(int1)                                                       # STEP 16
int0 = 1                                                                # STEP 17
avl2.insert(int0)                                                       # STEP 18
avl0 = avl.AVLTree()                                                    # STEP 19
avl0.insert(int0)                                                       # STEP 20
avl0.delete(int1)                                                       # STEP 21
avl0.delete(int1)                                                       # STEP 22
result = avl2.find(int3)                                                # STEP 23
avl2.insert(int1)                                                       # STEP 24
avl0.insert(int0)                                                       # STEP 25
avl2.insert(int0)                                                       # STEP 26
avl2.delete(int3)                                                       # STEP 27
int0 = 1                                                                # STEP 28
int2 = 15                                                               # STEP 29
avl0.insert(int1)                                                       # STEP 30
int1 = 13                                                               # STEP 31
avl0.delete(int2)                                                       # STEP 32
int2 = 9                                                                # STEP 33
avl2.delete(int1)                                                       # STEP 34
avl2.insert(int1)                                                       # STEP 35
avl2 == avl2                                                            # STEP 36
avl2.insert(int0)                                                       # STEP 37
avl0.insert(int1)                                                       # STEP 38
avl0.delete(int0)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl2.delete(int3)                                                       # STEP 41
avl0.insert(int1)                                                       # STEP 42
avl0.insert(int2)                                                       # STEP 43
avl0.insert(int3)                                                       # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl0.insert(int0)                                                       # STEP 46
avl0.insert(int0)                                                       # STEP 47
avl0.delete(int0)                                                       # STEP 48
avl0.delete(int2)                                                       # STEP 49
avl0 == avl0                                                            # STEP 50
avl0.delete(int3)                                                       # STEP 51
int1 = 4                                                                # STEP 52
avl0.insert(int3)                                                       # STEP 53
avl0.insert(int1)                                                       # STEP 54
avl2.insert(int1)                                                       # STEP 55
avl2.insert(int2)                                                       # STEP 56
avl2 == avl2                                                            # STEP 57
avl0.insert(int1)                                                       # STEP 58
int3 = 11                                                               # STEP 59
avl2.delete(int1)                                                       # STEP 60
avl2.insert(int0)                                                       # STEP 61
avl2 == avl2                                                            # STEP 62
avl0.delete(int2)                                                       # STEP 63
int1 = 1                                                                # STEP 64
avl2.delete(int1)                                                       # STEP 65
int0 = 18                                                               # STEP 66
avl2.delete(int0)                                                       # STEP 67
result = avl2.find(int3)                                                # STEP 68
avl0.insert(int0)                                                       # STEP 69
avl2.delete(int1)                                                       # STEP 70
avl2.insert(int0)                                                       # STEP 71
avl2.insert(int1)                                                       # STEP 72
avl0.delete(int2)                                                       # STEP 73
avl2.insert(int2)                                                       # STEP 74
avl0.delete(int3)                                                       # STEP 75
avl2.delete(int2)                                                       # STEP 76
result = avl2.inorder()                                                 # STEP 77
result = avl0.find(int1)                                                # STEP 78
int2 = 17                                                               # STEP 79
avl0.delete(int0)                                                       # STEP 80
avl2.delete(int2)                                                       # STEP 81
int3 = 13                                                               # STEP 82
int2 = 11                                                               # STEP 83
avl0.delete(int3)                                                       # STEP 84
result = avl2.find(int2)                                                # STEP 85
avl0.insert(int1)                                                       # STEP 86
avl2.insert(int2)                                                       # STEP 87
result = avl2.inorder()                                                 # STEP 88
avl2.delete(int0)                                                       # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10474b5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int1 = 3                                                                 # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2 == avl2                                                             # STEP 2
int2 = 4                                                                 # STEP 3
avl2.delete(int1)                                                        # STEP 4
avl2.insert(int2)                                                        # STEP 5
avl2.insert(int2)                                                        # STEP 6
avl2.insert(int2)                                                        # STEP 7
avl2.insert(int2)                                                        # STEP 8
avl2.delete(int1)                                                        # STEP 9
avl2.insert(int1)                                                       # STEP 10
int2 = 19                                                               # STEP 11
int0 = 17                                                               # STEP 12
avl2.delete(int1)                                                       # STEP 13
avl2.insert(int0)                                                       # STEP 14
avl2.insert(int0)                                                       # STEP 15
result = avl2.find(int1)                                                # STEP 16
int1 = 7                                                                # STEP 17
int0 = 20                                                               # STEP 18
avl2.delete(int2)                                                       # STEP 19
avl2.delete(int2)                                                       # STEP 20
avl2.insert(int2)                                                       # STEP 21
avl2.delete(int2)                                                       # STEP 22
result = avl2.find(int1)                                                # STEP 23
avl2.insert(int2)                                                       # STEP 24
avl2.insert(int1)                                                       # STEP 25
avl2.insert(int0)                                                       # STEP 26
result = avl2.inorder()                                                 # STEP 27
avl0 = avl.AVLTree()                                                    # STEP 28
result = avl2.find(int0)                                                # STEP 29
avl0.delete(int1)                                                       # STEP 30
avl2.delete(int0)                                                       # STEP 31
result = avl2.find(int1)                                                # STEP 32
int1 = 3                                                                # STEP 33
avl0.insert(int1)                                                       # STEP 34
avl0.insert(int0)                                                       # STEP 35
int3 = 17                                                               # STEP 36
int0 = 5                                                                # STEP 37
avl0.delete(int0)                                                       # STEP 38
result = avl2.find(int1)                                                # STEP 39
avl2.insert(int1)                                                       # STEP 40
result = avl0.find(int1)                                                # STEP 41
result = avl0.find(int2)                                                # STEP 42
int1 = 16                                                               # STEP 43
avl2.delete(int2)                                                       # STEP 44
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1043da4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 3
int0 = 9                                                                 # STEP 0
int1 = 15                                                                # STEP 1
avl2 = avl.AVLTree()                                                     # STEP 2
avl2.delete(int0)                                                        # STEP 3
avl2.delete(int1)                                                        # STEP 4
avl2.insert(int1)                                                        # STEP 5
int2 = 18                                                                # STEP 6
avl2.delete(int1)                                                        # STEP 7
avl2.delete(int2)                                                        # STEP 8
avl2.delete(int2)                                                        # STEP 9
int0 = 9                                                                # STEP 10
result = avl2.find(int2)                                                # STEP 11
int3 = 6                                                                # STEP 12
int2 = 8                                                                # STEP 13
avl0 = avl.AVLTree()                                                    # STEP 14
avl0.insert(int0)                                                       # STEP 15
avl2.delete(int1)                                                       # STEP 16
avl0.insert(int2)                                                       # STEP 17
result = avl0.find(int1)                                                # STEP 18
avl2.delete(int3)                                                       # STEP 19
result = avl0.inorder()                                                 # STEP 20
avl2.insert(int1)                                                       # STEP 21
result = avl0.inorder()                                                 # STEP 22
avl0.delete(int0)                                                       # STEP 23
result = avl2.inorder()                                                 # STEP 24
avl0.insert(int2)                                                       # STEP 25
int2 = 1                                                                # STEP 26
int0 = 16                                                               # STEP 27
int1 = 17                                                               # STEP 28
avl0.insert(int3)                                                       # STEP 29
avl0.delete(int2)                                                       # STEP 30
int2 = 18                                                               # STEP 31
int3 = 16                                                               # STEP 32
avl0.insert(int2)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
int2 = 20                                                               # STEP 35
avl0.insert(int0)                                                       # STEP 36
int0 = 1                                                                # STEP 37
avl0.delete(int0)                                                       # STEP 38
avl0.insert(int3)                                                       # STEP 39
int0 = 12                                                               # STEP 40
avl0.delete(int1)                                                       # STEP 41
int3 = 9                                                                # STEP 42
avl0.delete(int3)                                                       # STEP 43
avl0 = avl.AVLTree()                                                    # STEP 44
int1 = 14                                                               # STEP 45
avl2.insert(int1)                                                       # STEP 46
avl2.insert(int0)                                                       # STEP 47
result = avl2.find(int3)                                                # STEP 48
int1 = 15                                                               # STEP 49
avl0.delete(int1)                                                       # STEP 50
avl0.delete(int2)                                                       # STEP 51
int1 = 9                                                                # STEP 52
avl2.insert(int0)                                                       # STEP 53
avl2.insert(int1)                                                       # STEP 54
avl2.delete(int3)                                                       # STEP 55
result = avl0.inorder()                                                 # STEP 56
avl2.delete(int0)                                                       # STEP 57
avl0.insert(int2)                                                       # STEP 58
int3 = 8                                                                # STEP 59
result = avl0.find(int1)                                                # STEP 60
avl2.delete(int2)                                                       # STEP 61
result = avl0.inorder()                                                 # STEP 62
avl2.delete(int0)                                                       # STEP 63
avl0.delete(int2)                                                       # STEP 64
result = avl2.inorder()                                                 # STEP 65
avl2.insert(int1)                                                       # STEP 66
int1 = 14                                                               # STEP 67
avl2.insert(int0)                                                       # STEP 68
int0 = 7                                                                # STEP 69
avl2.delete(int1)                                                       # STEP 70
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104753878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
