Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99264.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  4 [2:0]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [1:0]
---- < 5 [0:0] L
---- > 17 [0:0] L
set([2, 3, 4, 5, 13, 17])
  5 [2:0]
-- < 3 [1:1]
---- < 2 [0:0] L
-- > 13 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
set([2, 3, 5, 10, 13, 15])
  13 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 20 [0:0] L
set([1, 5, 11, 13, 16, 20])
  13 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 20 [0:0] L
set([1, 5, 11, 13, 16, 20])
  13 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 20 [0:0] L
set([1, 5, 11, 13, 16, 20])
  13 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 20 [1:1]
---- < 16 [0:0] L
set([1, 5, 11, 13, 16, 20])
  13 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 20 [1:1]
---- < 16 [0:0] L
set([1, 5, 11, 13, 16, 20])
TEST #4 STEP #98 (0:00:30.066668) Fri Apr 28 03:32:24 2017 [ 161 stmts 213 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105378320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 100 steps

SAVING TEST AS failure.99264.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 14                                                                # STEP 2
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                 # STEP 4
ACTION: result = avl0.find(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 15                                                                # STEP 6
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
avl2.insert(int2)                                                        # STEP 7
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 8
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.delete(int3)                                                        # STEP 9
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl0.find(int2)                                                # STEP 10
ACTION: result = avl0.find(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 11
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 9                                                                # STEP 12
ACTION: int1 = 9 
int1 = None : <type 'NoneType'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 13
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 14
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 15
ACTION: avl0.delete(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 16
ACTION: avl0.insert(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 17
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 18
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl2.insert(int2)                                                       # STEP 19
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 20
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 21
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 23
ACTION: result = avl0.find(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 24
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 25
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 26
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 12                                                               # STEP 27
ACTION: int2 = 12 
int2 = 15 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 28
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 29
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 30
ACTION: int1 = 11 
int1 = 9 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 31
ACTION: int3 = 7 
int3 = 14 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 32
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 10                                                               # STEP 33
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 34
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.inorder()                                                 # STEP 35
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 36
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12, 14]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 37
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl2.inorder()                                                 # STEP 38
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int0)                                                       # STEP 39
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 15]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 40
ACTION: int0 = 1 
int0 = 10 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 41
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 11                                                               # STEP 42
ACTION: int0 = 11 
int0 = 1 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 43
ACTION: int2 = 12 
int2 = 12 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 44
ACTION: result = avl0.find(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 45
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 46
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 47
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 7, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 48
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 7, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 17                                                               # STEP 49
ACTION: int3 = 17 
int3 = 7 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 50
ACTION: int0 = 15 
int0 = 11 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 51
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 8                                                                # STEP 52
ACTION: int3 = 8 
int3 = 17 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int1 = 10                                                               # STEP 53
ACTION: int1 = 10 
int1 = 11 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 54
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 10, 7, 15]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 55
ACTION: int1 = 17 
int1 = 10 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 56
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 57
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x105674cf8> : <type 'instance'>
avl_REF1 = set([12, 14]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 58
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 59
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 10, 15]) : <type 'set'>
==================================================
avl1 == avl2                                                            # STEP 60
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
avl_REF2 = set([17, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl0 == avl2                                                            # STEP 61
ACTION: avl0 == avl2 
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF0 = set([9, 10, 7, 15]) : <type 'set'>
avl_REF2 = set([17, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF2 
==================================================
int1 = 19                                                               # STEP 62
ACTION: int1 = 19 
int1 = 17 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
result = avl1.find(int0)                                                # STEP 63
ACTION: result = avl1.find(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int0 = 14                                                               # STEP 64
ACTION: int0 = 14 
int0 = 15 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 65
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl2.delete(int3)                                                       # STEP 66
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([17, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 67
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 7                                                                # STEP 68
ACTION: int1 = 7 
int1 = 19 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int3 = 8                                                                # STEP 69
ACTION: int3 = 8 
int3 = 8 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 70
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([9, 10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 9, 10, 7, 15]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 71
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl1.find(int1)                                                # STEP 72
ACTION: result = avl1.find(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 73
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([17, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 74
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 7, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 9, 10, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 75
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([17, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 10, 7, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 76
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 77
ACTION: avl2 = avl.AVLTree() 
avl2 = <avl.AVLTree instance at 0x10537c560> : <type 'instance'>
avl_REF2 = set([17, 10, 7, 15]) : <type 'set'>
=> avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 78
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 7                                                                # STEP 79
ACTION: int1 = 7 
int1 = 7 : <type 'int'>
==================================================
int3 = 14                                                               # STEP 80
ACTION: int3 = 14 
int3 = 8 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 81
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 82
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 9, 10, 14, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 83
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int0)                                                # STEP 84
ACTION: result = avl1.find(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int0 = 1                                                                # STEP 85
ACTION: int0 = 1 
int0 = 14 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 86
ACTION: int1 = 20 
int1 = 7 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
result = avl1.find(int0)                                                # STEP 87
ACTION: result = avl1.find(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 88
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 13                                                               # STEP 89
ACTION: int3 = 13 
int3 = 14 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 90
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 1                                                                # STEP 91
ACTION: int1 = 1 
int1 = 20 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 92
ACTION: int2 = 16 
int2 = 12 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 93
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl1.insert(int3)                                                       # STEP 94
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105295ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 95
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 8                                                                # STEP 96
ACTION: int3 = 8 
int3 = 13 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 97
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x10525e290> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl0.find(int2)                                                # STEP 98
ACTION: result = avl0.find(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 99
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1054e6098> : <type 'instance'>
avl_REF0 = set([8, 9, 10, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([9, 10, 14, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058469e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  9 [2:0]
-- < 6 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 11 [0:0] L
---- > 20 [0:0] L
set([2, 6, 7, 9, 11, 15, 20])
  9 [3:1]
-- < 6 [2:1]
---- < 2 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 2, 4, 6, 7, 9, 15, 18, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1056f03b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 100 steps

SAVING TEST AS failure.99264.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 20                                                                # STEP 0
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
int3 = 11                                                                # STEP 1
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
int2 = 15                                                                # STEP 2
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int1 = 6                                                                 # STEP 3
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 5
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
int0 = 7                                                                 # STEP 6
ACTION: int0 = 7 
int0 = 20 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20, 7]) : <type 'set'>
==================================================
int0 = 9                                                                 # STEP 8
ACTION: int0 = 9 
int0 = 7 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int2)                                                        # STEP 9
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([15, 20, 7]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 10
ACTION: int2 = 2 
int2 = 15 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([15, 20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 12
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([15, 20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([15, 20, 6, 7]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([15, 20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 15, 20, 6, 7]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 14
ACTION: int1 = 4 
int1 = 6 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 15
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([9, 15, 20, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 16
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([9, 15, 20, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([6, 7, 9, 11, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([6, 7, 9, 11, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 2                                                                # STEP 18
ACTION: int2 = 2 
int2 = 2 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 19
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([6, 7, 9, 11, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 6, 7, 9, 11, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 6, 7, 9, 11, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.display()                                                          # STEP 21
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 6, 7, 9, 11, 15, 20]) : <type 'set'>
  9 [2:0]
-- < 6 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 11 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([2, 6, 7, 9, 11, 15, 20])
==================================================
int2 = 1                                                                # STEP 22
ACTION: int2 = 1 
int2 = 2 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 23
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 6, 7, 9, 11, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([2, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 24
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 25
ACTION: int0 = 19 
int0 = 9 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 26
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 4, 6, 7, 9, 15, 19, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 27
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 28
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 29
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 30
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 32
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 33
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int1 = 17                                                               # STEP 34
ACTION: int1 = 17 
int1 = 4 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 35
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 36
ACTION: avl1.delete(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 8                                                                # STEP 37
ACTION: int3 = 8 
int3 = 11 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 38
ACTION: int0 = 7 
int0 = 19 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 39
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 40
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 18                                                               # STEP 41
ACTION: int1 = 18 
int1 = 17 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 42
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 4, 6, 7, 8, 9, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 43
ACTION: avl1.insert(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 8, 9, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 4, 6, 7, 8, 9, 15, 18, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 44
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 8, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 45
ACTION: int1 = 3 
int1 = 18 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 46
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 47
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
  9 [3:1]
-- < 6 [2:1]
---- < 2 [1:0]
------ < 1 [0:0] L
------ > 4 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 2, 4, 6, 7, 9, 15, 18, 20])
==================================================
avl1.delete(int2)                                                       # STEP 48
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 49
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 50
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int1)                                                # STEP 51
ACTION: result = avl1.find(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int2 = 15                                                               # STEP 52
ACTION: int2 = 15 
int2 = 1 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 53
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x10586b998> : <type 'instance'>
avl_REF1 = set([2, 4, 6, 7, 9, 15, 18, 20]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 54
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 55
ACTION: result = avl1.find(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int1 = 14                                                               # STEP 56
ACTION: int1 = 14 
int1 = 3 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 57
ACTION: int0 = 9 
int0 = 7 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 58
ACTION: int3 = 15 
int3 = 8 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 59
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 60
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 14]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 61
ACTION: int1 = 2 
int1 = 14 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 62
ACTION: result = avl1.find(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 63
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl1.inorder()                                                 # STEP 64
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int0 = 20                                                               # STEP 65
ACTION: int0 = 20 
int0 = 9 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 66
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 3, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 67
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 1                                                                # STEP 68
ACTION: int2 = 1 
int2 = 15 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 69
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 70
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl1.find(int2)                                                # STEP 71
ACTION: result = avl1.find(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
int1 = 17                                                               # STEP 72
ACTION: int1 = 17 
int1 = 2 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 73
ACTION: result = avl2.find(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 74
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 3, 20, 14]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 75
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 76
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl2.find(int2)                                                # STEP 77
ACTION: result = avl2.find(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 78
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([20, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 79
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 80
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([20]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 81
ACTION: avl2.delete(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 82
ACTION: result = avl1.find(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
result = avl1.find(int2)                                                # STEP 83
ACTION: result = avl1.find(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
result = avl2.find(int2)                                                # STEP 84
ACTION: result = avl2.find(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 85
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 86
ACTION: int0 = 9 
int0 = 20 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 87
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 9                                                                # STEP 88
ACTION: int0 = 9 
int0 = 9 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 89
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 15]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 90
ACTION: int2 = 19 
int2 = 1 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 91
ACTION: int3 = 3 
int3 = 15 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 92
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([17, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([17, 9, 15]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 93
ACTION: avl2.delete(int3) 
int3 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([17, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 1                                                                # STEP 94
ACTION: int3 = 1 
int3 = 3 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 95
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([2, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 2, 3, 20, 14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 96
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([17, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 19, 9, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 97
ACTION: avl2.insert(int2) 
int2 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([17, 19, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 98
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x105254ef0> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 20, 14]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x1052723f8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 99
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058473f8> : <type 'instance'>
avl_REF2 = set([17, 19, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([17, 19, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1052720e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  6 [2:0]
-- < 4 [1:-1]
---- > 5 [0:0] L
-- > 19 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([4, 5, 6, 12, 19, 20])
  6 [2:0]
-- < 4 [1:-1]
---- > 5 [0:0] L
-- > 19 [1:0]
---- < 12 [0:0] L
---- > 20 [0:0] L
set([4, 5, 6, 12, 19, 20])
  6 [3:-1]
-- < 4 [1:-1]
---- > 5 [0:0] L
-- > 19 [2:1]
---- < 12 [1:-1]
------ > 17 [0:0] L
---- > 20 [0:0] L
set([4, 5, 6, 12, 17, 19, 20])
  6 [3:-1]
-- < 4 [1:-1]
---- > 5 [0:0] L
-- > 19 [2:1]
---- < 12 [1:-1]
------ > 17 [0:0] L
---- > 20 [0:0] L
set([4, 5, 6, 12, 17, 19, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 75
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.1687259674 TOTAL RUNTIME
6 EXECUTED
575 TOTAL TEST OPERATIONS
21.9374666214 TIME SPENT EXECUTING TEST OPERATIONS
0.0638618469238 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.1063864231 TIME SPENT CHECKING PROPERTIES
44.0438530445 TOTAL TIME SPENT RUNNING SUT
0.00372672080994 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
avl0 = avl.AVLTree()                                                     # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
int3 = 14                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
result = avl0.find(int3)                                                 # STEP 4
avl0.delete(int3)                                                        # STEP 5
int2 = 15                                                                # STEP 6
avl2.insert(int2)                                                        # STEP 7
avl1.delete(int2)                                                        # STEP 8
avl2.delete(int3)                                                        # STEP 9
result = avl0.find(int2)                                                # STEP 10
avl1.delete(int3)                                                       # STEP 11
int1 = 9                                                                # STEP 12
avl0.insert(int1)                                                       # STEP 13
avl1.delete(int3)                                                       # STEP 14
avl0.delete(int2)                                                       # STEP 15
avl0.insert(int2)                                                       # STEP 16
avl1.delete(int3)                                                       # STEP 17
result = avl1.inorder()                                                 # STEP 18
avl2.insert(int2)                                                       # STEP 19
avl2.delete(int3)                                                       # STEP 20
avl2.delete(int1)                                                       # STEP 21
avl1.delete(int2)                                                       # STEP 22
result = avl0.find(int2)                                                # STEP 23
avl0.insert(int1)                                                       # STEP 24
avl1.insert(int1)                                                       # STEP 25
avl1.delete(int2)                                                       # STEP 26
int2 = 12                                                               # STEP 27
avl1.delete(int1)                                                       # STEP 28
avl1.insert(int3)                                                       # STEP 29
int1 = 11                                                               # STEP 30
int3 = 7                                                                # STEP 31
avl0.delete(int1)                                                       # STEP 32
int0 = 10                                                               # STEP 33
result = avl1.inorder()                                                 # STEP 34
result = avl1.inorder()                                                 # STEP 35
avl1.insert(int2)                                                       # STEP 36
result = avl1.inorder()                                                 # STEP 37
result = avl2.inorder()                                                 # STEP 38
avl2.insert(int0)                                                       # STEP 39
int0 = 1                                                                # STEP 40
avl0.delete(int0)                                                       # STEP 41
int0 = 11                                                               # STEP 42
int2 = 12                                                               # STEP 43
result = avl0.find(int1)                                                # STEP 44
result = avl2.inorder()                                                 # STEP 45
avl0.delete(int0)                                                       # STEP 46
avl0.insert(int3)                                                       # STEP 47
result = avl0.inorder()                                                 # STEP 48
int3 = 17                                                               # STEP 49
int0 = 15                                                               # STEP 50
avl0.delete(int3)                                                       # STEP 51
int3 = 8                                                                # STEP 52
int1 = 10                                                               # STEP 53
avl0.insert(int1)                                                       # STEP 54
int1 = 17                                                               # STEP 55
result = avl2.inorder()                                                 # STEP 56
avl1 = avl.AVLTree()                                                    # STEP 57
avl1.delete(int1)                                                       # STEP 58
avl2.insert(int1)                                                       # STEP 59
avl1 == avl2                                                            # STEP 60
avl0 == avl2                                                            # STEP 61
int1 = 19                                                               # STEP 62
result = avl1.find(int0)                                                # STEP 63
int0 = 14                                                               # STEP 64
avl0 == avl0                                                            # STEP 65
avl2.delete(int3)                                                       # STEP 66
avl0.delete(int1)                                                       # STEP 67
int1 = 7                                                                # STEP 68
int3 = 8                                                                # STEP 69
avl0.insert(int3)                                                       # STEP 70
avl0.insert(int3)                                                       # STEP 71
result = avl1.find(int1)                                                # STEP 72
avl2.delete(int1)                                                       # STEP 73
avl0.delete(int1)                                                       # STEP 74
avl2.insert(int1)                                                       # STEP 75
result = avl0.inorder()                                                 # STEP 76
avl2 = avl.AVLTree()                                                    # STEP 77
result = avl2.inorder()                                                 # STEP 78
int1 = 7                                                                # STEP 79
int3 = 14                                                               # STEP 80
avl2.delete(int1)                                                       # STEP 81
avl0.insert(int3)                                                       # STEP 82
avl1.delete(int1)                                                       # STEP 83
result = avl1.find(int0)                                                # STEP 84
int0 = 1                                                                # STEP 85
int1 = 20                                                               # STEP 86
result = avl1.find(int0)                                                # STEP 87
avl0.delete(int2)                                                       # STEP 88
int3 = 13                                                               # STEP 89
avl2.delete(int1)                                                       # STEP 90
int1 = 1                                                                # STEP 91
int2 = 16                                                               # STEP 92
result = avl2.inorder()                                                 # STEP 93
avl1.insert(int3)                                                       # STEP 94
avl2.delete(int0)                                                       # STEP 95
int3 = 8                                                                # STEP 96
avl2.delete(int1)                                                       # STEP 97
result = avl0.find(int2)                                                # STEP 98
avl0.delete(int3)                                                       # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058469e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int0 = 20                                                                # STEP 0
int3 = 11                                                                # STEP 1
int2 = 15                                                                # STEP 2
int1 = 6                                                                 # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int0)                                                        # STEP 5
int0 = 7                                                                 # STEP 6
avl1.insert(int0)                                                        # STEP 7
int0 = 9                                                                 # STEP 8
avl1.insert(int2)                                                        # STEP 9
int2 = 2                                                                # STEP 10
avl1.delete(int2)                                                       # STEP 11
avl1.insert(int1)                                                       # STEP 12
avl1.insert(int0)                                                       # STEP 13
int1 = 4                                                                # STEP 14
result = avl1.inorder()                                                 # STEP 15
avl1.insert(int3)                                                       # STEP 16
avl1.insert(int0)                                                       # STEP 17
int2 = 2                                                                # STEP 18
avl1.insert(int2)                                                       # STEP 19
avl1.insert(int2)                                                       # STEP 20
avl1.display()                                                          # STEP 21
int2 = 1                                                                # STEP 22
avl1.delete(int3)                                                       # STEP 23
avl1.insert(int1)                                                       # STEP 24
int0 = 19                                                               # STEP 25
avl1.insert(int0)                                                       # STEP 26
avl1.delete(int0)                                                       # STEP 27
avl1.insert(int2)                                                       # STEP 28
avl1.delete(int1)                                                       # STEP 29
avl1.insert(int1)                                                       # STEP 30
avl1.delete(int1)                                                       # STEP 31
avl1.insert(int1)                                                       # STEP 32
avl1 == avl1                                                            # STEP 33
int1 = 17                                                               # STEP 34
avl1.delete(int0)                                                       # STEP 35
avl1.delete(int3)                                                       # STEP 36
int3 = 8                                                                # STEP 37
int0 = 7                                                                # STEP 38
avl1.delete(int2)                                                       # STEP 39
avl1.delete(int1)                                                       # STEP 40
int1 = 18                                                               # STEP 41
avl1.insert(int3)                                                       # STEP 42
avl1.insert(int1)                                                       # STEP 43
avl1.delete(int3)                                                       # STEP 44
int1 = 3                                                                # STEP 45
avl1.insert(int2)                                                       # STEP 46
avl1.display()                                                          # STEP 47
avl1.delete(int2)                                                       # STEP 48
avl1.delete(int3)                                                       # STEP 49
avl1.delete(int1)                                                       # STEP 50
result = avl1.find(int1)                                                # STEP 51
int2 = 15                                                               # STEP 52
avl1 = avl.AVLTree()                                                    # STEP 53
avl1.insert(int1)                                                       # STEP 54
result = avl1.find(int0)                                                # STEP 55
int1 = 14                                                               # STEP 56
int0 = 9                                                                # STEP 57
int3 = 15                                                               # STEP 58
result = avl1.inorder()                                                 # STEP 59
avl1.insert(int1)                                                       # STEP 60
int1 = 2                                                                # STEP 61
result = avl1.find(int2)                                                # STEP 62
avl1.delete(int0)                                                       # STEP 63
result = avl1.inorder()                                                 # STEP 64
int0 = 20                                                               # STEP 65
avl1.insert(int1)                                                       # STEP 66
avl1.delete(int2)                                                       # STEP 67
int2 = 1                                                                # STEP 68
avl2 = avl.AVLTree()                                                    # STEP 69
result = avl2.inorder()                                                 # STEP 70
result = avl1.find(int2)                                                # STEP 71
int1 = 17                                                               # STEP 72
result = avl2.find(int0)                                                # STEP 73
avl1.insert(int0)                                                       # STEP 74
avl2.insert(int0)                                                       # STEP 75
avl1.delete(int2)                                                       # STEP 76
result = avl2.find(int2)                                                # STEP 77
avl2.insert(int3)                                                       # STEP 78
avl2.insert(int3)                                                       # STEP 79
avl2.delete(int3)                                                       # STEP 80
avl2.delete(int0)                                                       # STEP 81
result = avl1.find(int2)                                                # STEP 82
result = avl1.find(int2)                                                # STEP 83
result = avl2.find(int2)                                                # STEP 84
avl2.insert(int1)                                                       # STEP 85
int0 = 9                                                                # STEP 86
avl1.delete(int0)                                                       # STEP 87
int0 = 9                                                                # STEP 88
avl2.insert(int3)                                                       # STEP 89
int2 = 19                                                               # STEP 90
int3 = 3                                                                # STEP 91
avl2.insert(int0)                                                       # STEP 92
avl2.delete(int3)                                                       # STEP 93
int3 = 1                                                                # STEP 94
avl1.insert(int3)                                                       # STEP 95
avl2.insert(int2)                                                       # STEP 96
avl2.insert(int2)                                                       # STEP 97
avl1 = avl.AVLTree()                                                    # STEP 98
avl2.delete(int0)                                                       # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1052720e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
