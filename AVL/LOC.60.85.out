Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.864.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10335f9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 69 steps

SAVING TEST AS failure.864.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 2                                                                 # STEP 0
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 2
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 3
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
result = avl0.inorder()                                                  # STEP 4
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 11                                                                # STEP 5
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
int1 = 16                                                                # STEP 6
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                        # STEP 8
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 2]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 10
ACTION: int0 = 14 
int0 = None : <type 'NoneType'>
=> int0 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 11
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 12
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0 == avl1                                                            # STEP 13
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl0.delete(int2)                                                       # STEP 14
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 2]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 16
ACTION: int2 = 2 
int2 = 2 : <type 'int'>
==================================================
avl0 == avl1                                                            # STEP 17
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
result = avl1.inorder()                                                 # STEP 18
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl0.find(int1)                                                # STEP 19
ACTION: result = avl0.find(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 23
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 2]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 24
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 2, 14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 25
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 26
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 11                                                               # STEP 27
ACTION: int0 = 11 
int0 = 14 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 28
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 2, 11]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 29
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int1 = 4                                                                # STEP 30
ACTION: int1 = 4 
int1 = 16 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 32
ACTION: int0 = 11 
int0 = 11 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 33
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.delete(int3)                                                       # STEP 34
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16, 2]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 2, 4]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 37
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 7                                                                # STEP 38
ACTION: int1 = 7 
int1 = 4 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 39
ACTION: int3 = 6 
int3 = 11 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 40
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 41
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 42
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 2, 11, 4]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 43
ACTION: int2 = 6 
int2 = 2 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 44
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([16, 2, 4]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 45
ACTION: int0 = 19 
int0 = 11 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 46
ACTION: result = avl0.find(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 47
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 3                                                                # STEP 48
ACTION: int1 = 3 
int1 = 7 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 49
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 2, 19, 4]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 50
ACTION: int0 = 14 
int0 = 19 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 51
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 52
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 53
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 54
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 2, 19, 4, 6]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 55
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x10367bc20> : <type 'instance'>
avl_REF1 = set([16, 2, 11, 14]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 56
ACTION: int3 = 14 
int3 = 6 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 57
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 58
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 59
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 60
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int3 = 3                                                                # STEP 61
ACTION: int3 = 3 
int3 = 14 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 62
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 2                                                                # STEP 63
ACTION: int3 = 2 
int3 = 3 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 65
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([6, 14]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 66
ACTION: avl1.delete(int3) 
int3 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 67
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1037b5368> : <type 'instance'>
avl_REF1 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 68
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10335f248> : <type 'instance'>
avl_REF0 = set([16, 2, 19, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16, 19, 4, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10503bb00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #9 (0:00:30.041024) Fri Apr 28 07:30:45 2017 [ 150 stmts 199 branches ]
  15 [2:0]
-- < 7 [1:0]
---- < 1 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:-1]
---- > 20 [0:0] L
set([1, 7, 11, 15, 19, 20])
  11 [2:0]
-- < 7 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 19 [1:-1]
---- > 20 [0:0] L
set([1, 7, 8, 11, 19, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103793170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 30 steps

SAVING TEST AS failure.864.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 7                                                                 # STEP 0
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
int3 = 19                                                                # STEP 1
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int1 = 7                                                                 # STEP 2
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 3
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 5
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int1)                                                        # STEP 6
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
int3 = 19                                                                # STEP 7
ACTION: int3 = 19 
int3 = 19 : <type 'int'>
==================================================
result = avl2.inorder()                                                  # STEP 8
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.find(int3)                                                 # STEP 9
ACTION: result = avl2.find(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int1 = 13                                                               # STEP 10
ACTION: int1 = 13 
int1 = 7 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 11
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 12
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 13
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 11                                                               # STEP 14
ACTION: int3 = 11 
int3 = 19 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 15
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([11, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 16
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 13                                                               # STEP 18
ACTION: int2 = 13 
int2 = 5 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 19
ACTION: int0 = 6 
int0 = 7 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 20
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 21
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 6, 7]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 22
ACTION: avl2.delete(int0) 
int0 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([11, 7]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 23
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 24
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 13, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 25
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 13, 6, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 26
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 13, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 27
ACTION: avl2.insert(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 13, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.find(int1)                                                # STEP 28
ACTION: result = avl2.find(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 13, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 29
ACTION: avl2.delete(int1) 
int1 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1037938c0> : <type 'instance'>
avl_REF2 = set([11, 13, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([11, 6, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050fdd40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  9 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([3, 7, 9, 13, 14, 18])
  9 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([3, 7, 9, 13, 14, 18])
  9 [3:-1]
-- < 5 [1:1]
---- < 3 [0:0] L
-- > 14 [2:-1]
---- < 10 [0:0] L
---- > 18 [1:1]
------ < 16 [0:0] L
set([3, 5, 9, 10, 14, 16, 18])
  9 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([3, 7, 9, 13, 14, 18])
  9 [2:0]
-- < 7 [1:1]
---- < 3 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([3, 7, 9, 13, 14, 18])
  9 [3:-1]
-- < 5 [1:1]
---- < 3 [0:0] L
-- > 14 [2:-1]
---- < 10 [0:0] L
---- > 20 [1:1]
------ < 16 [0:0] L
set([3, 5, 9, 10, 14, 16, 20])
  9 [2:0]
-- < 4 [1:-1]
---- > 5 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([4, 5, 9, 10, 15, 19])
  9 [3:1]
-- < 5 [2:1]
---- < 4 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([2, 4, 5, 7, 9, 10, 15, 19])
  9 [3:1]
-- < 5 [2:1]
---- < 4 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([2, 4, 5, 7, 9, 10, 15, 19])
  9 [3:1]
-- < 5 [2:1]
---- < 4 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
set([2, 4, 5, 7, 9, 10, 15, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050d5098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 79 steps

SAVING TEST AS failure.864.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 9                                                                 # STEP 1
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 15                                                                # STEP 2
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int2 = 1                                                                 # STEP 3
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int1)                                                        # STEP 4
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9, 15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 6
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 9
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 10
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 12
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.find(int0)                                                # STEP 14
ACTION: result = avl0.find(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 15
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 13                                                               # STEP 16
ACTION: int1 = 13 
int1 = 15 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 17
ACTION: int0 = 17 
int0 = 9 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 18
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 19
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 3                                                                # STEP 20
ACTION: int0 = 3 
int0 = 17 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 21
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 18                                                               # STEP 22
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 23
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int2)                                                # STEP 25
ACTION: result = avl0.find(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int3 = 5                                                                # STEP 26
ACTION: int3 = 5 
int3 = 18 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int2 = 5                                                                # STEP 27
ACTION: int2 = 5 
int2 = 1 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
int1 = 14                                                               # STEP 28
ACTION: int1 = 14 
int1 = 13 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 29
ACTION: avl0.delete(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 30
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 5]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 31
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 33
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 5]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 34
ACTION: int1 = 19 
int1 = 14 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 35
ACTION: int3 = 15 
int3 = 5 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 36
ACTION: int2 = 17 
int2 = 5 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 37
ACTION: avl0.insert(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 5, 17]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 5, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 17                                                               # STEP 39
ACTION: int2 = 17 
int2 = 17 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 40
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 5, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 19, 5, 17]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 41
ACTION: int1 = 3 
int1 = 19 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 42
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 19, 5, 17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 43
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([9, 19, 5, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 9, 19, 5, 17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 44
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 9, 19, 5, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 9, 19, 5]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 45
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 9, 19, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int2 = 4                                                                # STEP 46
ACTION: int2 = 4 
int2 = 17 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 47
ACTION: int0 = 10 
int0 = 3 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 48
ACTION: int1 = 9 
int1 = 3 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 49
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 9, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 50
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 9, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 51
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 9, 19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 5, 9, 10, 19]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 52
ACTION: avl0.insert(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 5, 9, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.find(int1)                                                # STEP 53
ACTION: result = avl0.find(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 5, 9, 10, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 54
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 5, 9, 10, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5, 9, 10, 15, 19]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 55
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 56
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 57
ACTION: int2 = 2 
int2 = 4 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 58
ACTION: int3 = 7 
int3 = 15 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 59
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 3                                                                # STEP 61
ACTION: int1 = 3 
int1 = 9 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 62
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int0)                                                # STEP 63
ACTION: result = avl0.find(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 64
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 65
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 66
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([3, 4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([4, 5, 9, 10, 15, 19]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 67
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([4, 5, 9, 10, 15, 19]) : <type 'set'>
  9 [2:0]
-- < 4 [1:-1]
---- > 5 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([4, 5, 9, 10, 15, 19])
==================================================
avl0.insert(int3)                                                       # STEP 68
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([4, 5, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 69
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 70
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int0)                                                       # STEP 71
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 72
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 73
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 74
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.display()                                                          # STEP 75
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
  9 [3:1]
-- < 5 [2:1]
---- < 4 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 4, 5, 7, 9, 10, 15, 19])
==================================================
avl0.display()                                                          # STEP 76
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
  9 [3:1]
-- < 5 [2:1]
---- < 4 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 4, 5, 7, 9, 10, 15, 19])
==================================================
avl0.display()                                                          # STEP 77
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
  9 [3:1]
-- < 5 [2:1]
---- < 4 [1:1]
------ < 2 [0:0] L
---- > 7 [0:0] L
-- > 15 [1:0]
---- < 10 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 4, 5, 7, 9, 10, 15, 19])
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103793368> : <type 'instance'>
avl_REF0 = set([2, 4, 5, 7, 9, 10, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 4, 5, 9, 10, 15, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10378b830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.72073294876 PERCENT COVERED
64.4483020306 TOTAL RUNTIME
8 EXECUTED
578 TOTAL TEST OPERATIONS
24.673158884 TIME SPENT EXECUTING TEST OPERATIONS
0.0619547367096 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.8375740051 TIME SPENT CHECKING PROPERTIES
49.5107328892 TOTAL TIME SPENT RUNNING SUT
0.00457215309143 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 2                                                                 # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
avl0.insert(int2)                                                        # STEP 2
avl0 == avl0                                                             # STEP 3
result = avl0.inorder()                                                  # STEP 4
int3 = 11                                                                # STEP 5
int1 = 16                                                                # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl0.insert(int1)                                                        # STEP 8
avl0.delete(int2)                                                        # STEP 9
int0 = 14                                                               # STEP 10
avl1 = avl.AVLTree()                                                    # STEP 11
avl1.delete(int1)                                                       # STEP 12
avl0 == avl1                                                            # STEP 13
avl0.delete(int2)                                                       # STEP 14
avl0.insert(int2)                                                       # STEP 15
int2 = 2                                                                # STEP 16
avl0 == avl1                                                            # STEP 17
result = avl1.inorder()                                                 # STEP 18
result = avl0.find(int1)                                                # STEP 19
avl1.delete(int1)                                                       # STEP 20
avl0.insert(int2)                                                       # STEP 21
avl1.insert(int2)                                                       # STEP 22
avl1.insert(int1)                                                       # STEP 23
avl1.insert(int0)                                                       # STEP 24
avl0.delete(int3)                                                       # STEP 25
avl0.delete(int0)                                                       # STEP 26
int0 = 11                                                               # STEP 27
avl0.insert(int0)                                                       # STEP 28
result = avl1.inorder()                                                 # STEP 29
int1 = 4                                                                # STEP 30
avl1.insert(int0)                                                       # STEP 31
int0 = 11                                                               # STEP 32
result = avl1.inorder()                                                 # STEP 33
avl0.delete(int3)                                                       # STEP 34
avl0.delete(int3)                                                       # STEP 35
avl0.insert(int1)                                                       # STEP 36
avl1.delete(int1)                                                       # STEP 37
int1 = 7                                                                # STEP 38
int3 = 6                                                                # STEP 39
avl1.delete(int1)                                                       # STEP 40
avl1.insert(int2)                                                       # STEP 41
avl0.insert(int0)                                                       # STEP 42
int2 = 6                                                                # STEP 43
avl0.delete(int0)                                                       # STEP 44
int0 = 19                                                               # STEP 45
result = avl0.find(int1)                                                # STEP 46
avl1.delete(int0)                                                       # STEP 47
int1 = 3                                                                # STEP 48
avl0.insert(int0)                                                       # STEP 49
int0 = 14                                                               # STEP 50
avl1.delete(int3)                                                       # STEP 51
avl1.delete(int2)                                                       # STEP 52
avl1.delete(int1)                                                       # STEP 53
avl0.insert(int2)                                                       # STEP 54
avl1 = avl.AVLTree()                                                    # STEP 55
int3 = 14                                                               # STEP 56
avl1.insert(int3)                                                       # STEP 57
avl1.delete(int0)                                                       # STEP 58
avl1.insert(int3)                                                       # STEP 59
avl1.insert(int0)                                                       # STEP 60
int3 = 3                                                                # STEP 61
avl0.delete(int3)                                                       # STEP 62
int3 = 2                                                                # STEP 63
avl0.insert(int3)                                                       # STEP 64
avl1.insert(int2)                                                       # STEP 65
avl1.delete(int3)                                                       # STEP 66
avl1.insert(int0)                                                       # STEP 67
avl0.delete(int3)                                                       # STEP 68
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10503bb00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int0 = 7                                                                 # STEP 0
int3 = 19                                                                # STEP 1
int1 = 7                                                                 # STEP 2
int2 = 5                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int3)                                                        # STEP 5
avl2.insert(int1)                                                        # STEP 6
int3 = 19                                                                # STEP 7
result = avl2.inorder()                                                  # STEP 8
result = avl2.find(int3)                                                 # STEP 9
int1 = 13                                                               # STEP 10
avl2.delete(int3)                                                       # STEP 11
avl2.insert(int0)                                                       # STEP 12
avl2.delete(int2)                                                       # STEP 13
int3 = 11                                                               # STEP 14
avl2.insert(int3)                                                       # STEP 15
avl2.insert(int3)                                                       # STEP 16
avl2.delete(int2)                                                       # STEP 17
int2 = 13                                                               # STEP 18
int0 = 6                                                                # STEP 19
avl2.insert(int3)                                                       # STEP 20
avl2.insert(int0)                                                       # STEP 21
avl2.delete(int0)                                                       # STEP 22
result = avl2.inorder()                                                 # STEP 23
avl2.insert(int2)                                                       # STEP 24
avl2.insert(int0)                                                       # STEP 25
avl2.insert(int3)                                                       # STEP 26
avl2.insert(int1)                                                       # STEP 27
result = avl2.find(int1)                                                # STEP 28
avl2.delete(int1)                                                       # STEP 29
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050fdd40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
avl0 = avl.AVLTree()                                                     # STEP 0
int0 = 9                                                                 # STEP 1
int1 = 15                                                                # STEP 2
int2 = 1                                                                 # STEP 3
avl0.insert(int1)                                                        # STEP 4
avl0.insert(int0)                                                        # STEP 5
avl0.insert(int0)                                                        # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl0.delete(int0)                                                        # STEP 8
avl0 == avl0                                                             # STEP 9
avl0.insert(int0)                                                       # STEP 10
avl0.delete(int1)                                                       # STEP 11
result = avl0.inorder()                                                 # STEP 12
avl0.insert(int0)                                                       # STEP 13
result = avl0.find(int0)                                                # STEP 14
avl0.delete(int1)                                                       # STEP 15
int1 = 13                                                               # STEP 16
int0 = 17                                                               # STEP 17
avl0.delete(int0)                                                       # STEP 18
avl0.delete(int0)                                                       # STEP 19
int0 = 3                                                                # STEP 20
result = avl0.inorder()                                                 # STEP 21
int3 = 18                                                               # STEP 22
avl0.delete(int1)                                                       # STEP 23
avl0.delete(int3)                                                       # STEP 24
result = avl0.find(int2)                                                # STEP 25
int3 = 5                                                                # STEP 26
int2 = 5                                                                # STEP 27
int1 = 14                                                               # STEP 28
avl0.delete(int1)                                                       # STEP 29
avl0.insert(int2)                                                       # STEP 30
avl0.insert(int3)                                                       # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl0.insert(int3)                                                       # STEP 33
int1 = 19                                                               # STEP 34
int3 = 15                                                               # STEP 35
int2 = 17                                                               # STEP 36
avl0.insert(int2)                                                       # STEP 37
result = avl0.inorder()                                                 # STEP 38
int2 = 17                                                               # STEP 39
avl0.insert(int1)                                                       # STEP 40
int1 = 3                                                                # STEP 41
result = avl0.inorder()                                                 # STEP 42
avl0.insert(int0)                                                       # STEP 43
avl0.delete(int2)                                                       # STEP 44
result = avl0.find(int1)                                                # STEP 45
int2 = 4                                                                # STEP 46
int0 = 10                                                               # STEP 47
int1 = 9                                                                # STEP 48
avl0.insert(int1)                                                       # STEP 49
avl0.delete(int3)                                                       # STEP 50
avl0.insert(int0)                                                       # STEP 51
avl0.insert(int1)                                                       # STEP 52
result = avl0.find(int1)                                                # STEP 53
avl0.insert(int3)                                                       # STEP 54
result = avl0.inorder()                                                 # STEP 55
avl0.insert(int2)                                                       # STEP 56
int2 = 2                                                                # STEP 57
int3 = 7                                                                # STEP 58
avl0 == avl0                                                            # STEP 59
result = avl0.inorder()                                                 # STEP 60
int1 = 3                                                                # STEP 61
avl0.delete(int3)                                                       # STEP 62
result = avl0.find(int0)                                                # STEP 63
avl0.insert(int1)                                                       # STEP 64
avl0.delete(int2)                                                       # STEP 65
avl0.delete(int1)                                                       # STEP 66
avl0.display()                                                          # STEP 67
avl0.insert(int3)                                                       # STEP 68
avl0.insert(int2)                                                       # STEP 69
avl0 == avl0                                                            # STEP 70
avl0.insert(int0)                                                       # STEP 71
avl0.insert(int2)                                                       # STEP 72
avl0.insert(int0)                                                       # STEP 73
avl0.insert(int0)                                                       # STEP 74
avl0.display()                                                          # STEP 75
avl0.display()                                                          # STEP 76
avl0.display()                                                          # STEP 77
avl0.delete(int3)                                                       # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10378b830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
220 BRANCHES COVERED
164 STATEMENTS COVERED
