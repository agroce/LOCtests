Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62192.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102b137e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 94 steps

SAVING TEST AS failure.62192.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 1                                                                 # STEP 0
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int1 = 16                                                                # STEP 1
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 2
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
int3 = 6                                                                 # STEP 3
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 5
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.find(int1)                                                 # STEP 6
ACTION: result = avl2.find(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.insert(int0)                                                        # STEP 7
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                 # STEP 8
ACTION: result = avl2.find(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int1 = 16                                                                # STEP 9
ACTION: int1 = 16 
int1 = 16 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 10
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 11
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 12
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 13
ACTION: int2 = 6 
int2 = 5 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 14
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 5]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 15
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 16
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 18
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 5, 6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 20
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 21
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int1)                                                       # STEP 22
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 1, 5, 6]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 23
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([16, 1, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int1 = 20                                                               # STEP 24
ACTION: int1 = 20 
int1 = 16 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 25
ACTION: int3 = 15 
int3 = 6 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int0 = 2                                                                # STEP 26
ACTION: int0 = 2 
int0 = 1 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 27
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([16, 1, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 1, 2, 5, 6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 8                                                                # STEP 29
ACTION: int3 = 8 
int3 = 15 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 30
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([16, 1, 2, 5, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 31
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([16, 1, 2, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
int0 = 17                                                               # STEP 32
ACTION: int0 = 17 
int0 = 2 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 33
ACTION: avl2.delete(int2) 
int2 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([16, 1, 2, 5, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([16, 1, 2, 5]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 34
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([16, 1, 2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 2, 5, 16, 17]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 35
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([1, 2, 5, 16]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 36
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 37
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 2, 5, 16, 20]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 38
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int2 = 9                                                                # STEP 39
ACTION: int2 = 9 
int2 = 6 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 40
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 41
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 16, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 42
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([1, 2, 5, 9, 16, 20]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 43
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 9, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 2, 5, 8, 9, 16, 20]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 44
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 8, 9, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 45
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 46
ACTION: avl2 = avl.AVLTree() 
avl2 = <avlbug2.AVLTree instance at 0x102cb70e0> : <type 'instance'>
avl_REF2 = set([1, 2, 5, 8, 9, 16, 20]) : <type 'set'>
=> avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 47
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl2.find(int1)                                                # STEP 48
ACTION: result = avl2.find(int1) 
int1 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int3 = 8                                                                # STEP 49
ACTION: int3 = 8 
int3 = 8 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 51
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 52
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 53
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([9, 20]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 54
ACTION: int0 = 10 
int0 = 17 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 55
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 56
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x102a8f7a0> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 57
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 58
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 59
ACTION: int1 = 11 
int1 = 20 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 60
ACTION: int3 = 11 
int3 = 8 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 61
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int2)                                                       # STEP 62
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 63
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 64
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int2)                                                # STEP 65
ACTION: result = avl0.find(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 66
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl2.find(int0)                                                # STEP 67
ACTION: result = avl2.find(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 68
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 69
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 70
ACTION: avl0.insert(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 20]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 71
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([9, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 72
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 11]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 73
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 74
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int1)                                                       # STEP 75
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([9]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 76
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 11]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 77
ACTION: int2 = 8 
int2 = 9 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 78
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int3 = 14                                                               # STEP 79
ACTION: int3 = 14 
int3 = 11 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 80
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([20, 14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 81
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 9, 11]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 82
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 20, 14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 83
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([8, 9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 84
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([8, 9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 85
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([8, 9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 86
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([11, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 87
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([11, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 88
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([11, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 11, 20, 14]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 89
ACTION: result = avl2.find(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([8, 9, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
result = avl0.find(int3)                                                # STEP 90
ACTION: result = avl0.find(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([10, 11, 20, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 91
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([8, 9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 92
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x101e51e18> : <type 'instance'>
avl_REF2 = set([8, 9, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 9, 10, 11]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 93
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102a49ab8> : <type 'instance'>
avl_REF0 = set([10, 11, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([10, 11, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101da35a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c32b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 71 steps

SAVING TEST AS failure.62192.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 17                                                                # STEP 0
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 14                                                                # STEP 1
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 20                                                                # STEP 3
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 4
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 6
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.insert(int1)                                                        # STEP 7
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 14]) : <type 'set'>
==================================================
int0 = 7                                                                 # STEP 8
ACTION: int0 = 7 
int0 = 17 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 9
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 10
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 11
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 12
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 5                                                                # STEP 13
ACTION: int1 = 5 
int1 = 14 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 14
ACTION: int0 = 12 
int0 = 7 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 15
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 16
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 17
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 12, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 19
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 12, 14, 7]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 20
ACTION: int3 = 8 
int3 = 20 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 21
ACTION: int1 = 6 
int1 = 5 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 22
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 12, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 12, 14]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 23
ACTION: int2 = 9 
int2 = 7 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 24
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 20                                                               # STEP 25
ACTION: int0 = 20 
int0 = 12 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 26
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 12, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 27
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 12, 14, 20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([17, 12, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 17, 12, 14, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 29
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 17, 12, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 13                                                               # STEP 30
ACTION: int0 = 13 
int0 = 20 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 17, 12, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 17                                                               # STEP 32
ACTION: int3 = 17 
int3 = 8 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int2 = 15                                                               # STEP 33
ACTION: int2 = 15 
int2 = 9 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 34
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 17, 12, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([8, 12, 13, 14, 17, 20]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 12, 13, 14, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([8, 12, 13, 14, 20]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 36
ACTION: int3 = 5 
int3 = 17 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 37
ACTION: int0 = 6 
int0 = 13 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 38
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 12, 13, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6, 8, 12, 13, 14, 20]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 39
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([6, 8, 12, 13, 14, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int1 = 16                                                               # STEP 40
ACTION: int1 = 16 
int1 = 6 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 41
ACTION: avl1.delete(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([6, 8, 12, 13, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8, 12, 13, 14, 20]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 42
ACTION: result = avl1.find(int0) 
int0 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 12, 13, 14, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int0 = 20                                                               # STEP 43
ACTION: int0 = 20 
int0 = 6 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 44
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x102c32e60> : <type 'instance'>
avl_REF1 = set([8, 12, 13, 14, 20]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 46
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 47
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 48
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 49
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 50
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 51
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 20]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 52
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 53
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 20, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 54
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 55
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 56
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int0 = 13                                                               # STEP 57
ACTION: int0 = 13 
int0 = 20 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 58
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 59
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 20, 15]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 60
ACTION: result = avl1.find(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 61
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 6                                                                # STEP 62
ACTION: int3 = 6 
int3 = 5 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 63
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 20, 6, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 64
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 65
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16, 20, 15]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 66
ACTION: int3 = 20 
int3 = 6 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 67
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 68
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([16, 20, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([7, 15, 16, 20]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 69
ACTION: int2 = 2 
int2 = 15 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 70
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x101c82248> : <type 'instance'>
avl_REF1 = set([7, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([7, 15, 16]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cffa70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #3 STEP #0 (0:00:33.927017) Mon May  1 17:54:46 2017 [ 129 stmts 170 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1051d6248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 46 steps

SAVING TEST AS failure.62192.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 16                                                                # STEP 0
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int3 = 2                                                                 # STEP 1
ACTION: int3 = 2 
int3 = None : <type 'NoneType'>
=> int3 = 2 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 2
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
int0 = 4                                                                 # STEP 3
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                 # STEP 5
ACTION: result = avl0.find(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 11                                                                # STEP 6
ACTION: int1 = 11 
int1 = 16 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                        # STEP 8
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 9
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 4]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 11
ACTION: int0 = 4 
int0 = 4 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 12
ACTION: result = avl0.find(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 13
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 4]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 11, 4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 11]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.find(int2)                                                # STEP 18
ACTION: result = avl0.find(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 19
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 14                                                               # STEP 20
ACTION: int1 = 14 
int1 = 11 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 21
ACTION: int0 = 12 
int0 = 4 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 22
ACTION: int2 = 12 
int2 = 7 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 23
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 24
ACTION: result = avl0.find(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 7                                                                # STEP 25
ACTION: int1 = 7 
int1 = 14 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 26
ACTION: avl0.insert(int3) 
int3 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 11]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 27
ACTION: int3 = 4 
int3 = 2 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 28
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 11, 12]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 30
ACTION: result = avl0.find(int0) 
int0 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 10                                                               # STEP 31
ACTION: int0 = 10 
int0 = 12 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 32
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 33
ACTION: avl0.delete(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0 == avl0                                                            # STEP 34
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int3)                                                       # STEP 35
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 36
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 37
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 13                                                               # STEP 38
ACTION: int0 = 13 
int0 = 10 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 39
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.find(int1)                                                # STEP 40
ACTION: result = avl0.find(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 41
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 43
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 44
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 45
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1051d6998> : <type 'instance'>
avl_REF0 = set([4, 2, 11, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 2, 11]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101e1e758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10288ba70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 41 steps

SAVING TEST AS failure.62192.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 14                                                                # STEP 0
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 11                                                                # STEP 1
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
int3 = 20                                                                # STEP 2
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 3
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 4
ACTION: avl2.insert(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([20]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 5
ACTION: avl2.delete(int3) 
int3 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 5                                                                 # STEP 6
ACTION: int3 = 5 
int3 = 20 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int2 = 3                                                                 # STEP 7
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 8
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 10
ACTION: avl2.insert(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 11
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.find(int0)                                                # STEP 12
ACTION: result = avl2.find(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 13
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 14
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([5, 14]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 15
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 17
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int3 = 1                                                                # STEP 18
ACTION: int3 = 1 
int3 = 5 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 19
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 11                                                               # STEP 20
ACTION: int2 = 11 
int2 = 3 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 21
ACTION: avl2.insert(int2) 
int2 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 5]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 22
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 23
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 5]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 24
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 25
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl0.inorder()                                                 # STEP 26
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([1, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int1)                                                       # STEP 27
ACTION: avl2.insert(int1) 
int1 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 5, 14]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 28
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([1, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 11, 5]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 29
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([11, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([5, 14]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 30
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([1, 5, 14]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 31
ACTION: int1 = 15 
int1 = 14 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 32
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([1, 11, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 20                                                               # STEP 33
ACTION: int2 = 20 
int2 = 11 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 34
ACTION: int0 = 20 
int0 = 11 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 35
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([1, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 20, 5, 14]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 36
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([1, 20, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 37
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([1, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 38
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102cfea70> : <type 'instance'>
avl_REF0 = set([1, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 39
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([1, 20, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 40
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10288bcf8> : <type 'instance'>
avl_REF2 = set([1, 20, 5, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([20, 5, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f673f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
7.45792222867 PERCENT COVERED
62.3019189835 TOTAL RUNTIME
6 EXECUTED
352 TOTAL TEST OPERATIONS
18.0087132454 TIME SPENT EXECUTING TEST OPERATIONS
0.0414776802063 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
18.0649178028 TIME SPENT CHECKING PROPERTIES
36.0736310482 TOTAL TIME SPENT RUNNING SUT
0.00413298606873 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 1                                                                 # STEP 0
int1 = 16                                                                # STEP 1
int2 = 5                                                                 # STEP 2
int3 = 6                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int1)                                                        # STEP 5
result = avl2.find(int1)                                                 # STEP 6
avl2.insert(int0)                                                        # STEP 7
result = avl2.find(int2)                                                 # STEP 8
int1 = 16                                                                # STEP 9
avl2.delete(int3)                                                       # STEP 10
avl2.delete(int0)                                                       # STEP 11
avl2.insert(int2)                                                       # STEP 12
int2 = 6                                                                # STEP 13
avl2.insert(int0)                                                       # STEP 14
avl0 = avl.AVLTree()                                                    # STEP 15
avl2.delete(int1)                                                       # STEP 16
avl2.delete(int2)                                                       # STEP 17
avl2.insert(int2)                                                       # STEP 18
avl0.delete(int3)                                                       # STEP 19
avl0.insert(int2)                                                       # STEP 20
result = avl0.inorder()                                                 # STEP 21
avl2.insert(int1)                                                       # STEP 22
avl2.insert(int1)                                                       # STEP 23
int1 = 20                                                               # STEP 24
int3 = 15                                                               # STEP 25
int0 = 2                                                                # STEP 26
avl2.insert(int0)                                                       # STEP 27
avl0.delete(int3)                                                       # STEP 28
int3 = 8                                                                # STEP 29
result = avl2.inorder()                                                 # STEP 30
avl2.insert(int2)                                                       # STEP 31
int0 = 17                                                               # STEP 32
avl2.delete(int2)                                                       # STEP 33
avl2.insert(int0)                                                       # STEP 34
avl2.delete(int0)                                                       # STEP 35
avl0.delete(int2)                                                       # STEP 36
avl2.insert(int1)                                                       # STEP 37
avl2.delete(int0)                                                       # STEP 38
int2 = 9                                                                # STEP 39
avl0.delete(int3)                                                       # STEP 40
result = avl2.inorder()                                                 # STEP 41
avl2.insert(int2)                                                       # STEP 42
avl2.insert(int3)                                                       # STEP 43
avl2.insert(int2)                                                       # STEP 44
avl0.delete(int1)                                                       # STEP 45
avl2 = avl.AVLTree()                                                    # STEP 46
avl0.delete(int0)                                                       # STEP 47
result = avl2.find(int1)                                                # STEP 48
int3 = 8                                                                # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl0.delete(int3)                                                       # STEP 51
result = avl0.inorder()                                                 # STEP 52
avl0.insert(int1)                                                       # STEP 53
int0 = 10                                                               # STEP 54
avl0.insert(int2)                                                       # STEP 55
avl0 = avl.AVLTree()                                                    # STEP 56
avl2.delete(int3)                                                       # STEP 57
avl0.insert(int1)                                                       # STEP 58
int1 = 11                                                               # STEP 59
int3 = 11                                                               # STEP 60
result = avl0.inorder()                                                 # STEP 61
avl2.insert(int2)                                                       # STEP 62
result = avl2.inorder()                                                 # STEP 63
avl0.delete(int0)                                                       # STEP 64
result = avl0.find(int2)                                                # STEP 65
result = avl0.inorder()                                                 # STEP 66
result = avl2.find(int0)                                                # STEP 67
result = avl2.inorder()                                                 # STEP 68
avl0.delete(int0)                                                       # STEP 69
avl0.insert(int2)                                                       # STEP 70
avl0.delete(int2)                                                       # STEP 71
avl2.insert(int1)                                                       # STEP 72
avl0.delete(int2)                                                       # STEP 73
result = avl0.inorder()                                                 # STEP 74
avl2.delete(int1)                                                       # STEP 75
avl2.insert(int3)                                                       # STEP 76
int2 = 8                                                                # STEP 77
avl0 == avl0                                                            # STEP 78
int3 = 14                                                               # STEP 79
avl0.insert(int3)                                                       # STEP 80
avl2.insert(int2)                                                       # STEP 81
avl0.insert(int1)                                                       # STEP 82
avl2.insert(int2)                                                       # STEP 83
avl2.delete(int3)                                                       # STEP 84
avl2.insert(int1)                                                       # STEP 85
avl0.insert(int1)                                                       # STEP 86
avl0.delete(int2)                                                       # STEP 87
avl0.insert(int0)                                                       # STEP 88
result = avl2.find(int0)                                                # STEP 89
result = avl0.find(int3)                                                # STEP 90
avl2.delete(int3)                                                       # STEP 91
avl2.insert(int0)                                                       # STEP 92
avl0.delete(int3)                                                       # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101da35a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int0 = 17                                                                # STEP 0
int1 = 14                                                                # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
int3 = 20                                                                # STEP 3
avl1.insert(int0)                                                        # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.delete(int3)                                                        # STEP 6
avl1.insert(int1)                                                        # STEP 7
int0 = 7                                                                 # STEP 8
int2 = 7                                                                 # STEP 9
result = avl1.inorder()                                                 # STEP 10
avl1.delete(int0)                                                       # STEP 11
avl1.delete(int0)                                                       # STEP 12
int1 = 5                                                                # STEP 13
int0 = 12                                                               # STEP 14
avl1.delete(int2)                                                       # STEP 15
avl1.delete(int1)                                                       # STEP 16
result = avl1.inorder()                                                 # STEP 17
avl1.insert(int0)                                                       # STEP 18
avl1.insert(int2)                                                       # STEP 19
int3 = 8                                                                # STEP 20
int1 = 6                                                                # STEP 21
avl1.delete(int2)                                                       # STEP 22
int2 = 9                                                                # STEP 23
avl1.delete(int2)                                                       # STEP 24
int0 = 20                                                               # STEP 25
result = avl1.inorder()                                                 # STEP 26
avl1.insert(int0)                                                       # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl1.insert(int0)                                                       # STEP 29
int0 = 13                                                               # STEP 30
avl1.delete(int2)                                                       # STEP 31
int3 = 17                                                               # STEP 32
int2 = 15                                                               # STEP 33
avl1.insert(int0)                                                       # STEP 34
avl1.delete(int3)                                                       # STEP 35
int3 = 5                                                                # STEP 36
int0 = 6                                                                # STEP 37
avl1.insert(int1)                                                       # STEP 38
result = avl1.inorder()                                                 # STEP 39
int1 = 16                                                               # STEP 40
avl1.delete(int0)                                                       # STEP 41
result = avl1.find(int0)                                                # STEP 42
int0 = 20                                                               # STEP 43
avl1 = avl.AVLTree()                                                    # STEP 44
avl1.delete(int3)                                                       # STEP 45
avl1.insert(int0)                                                       # STEP 46
avl1.delete(int1)                                                       # STEP 47
avl1.delete(int1)                                                       # STEP 48
avl1.delete(int3)                                                       # STEP 49
avl1.delete(int1)                                                       # STEP 50
avl1.insert(int1)                                                       # STEP 51
int1 = 7                                                                # STEP 52
avl1.insert(int3)                                                       # STEP 53
avl1.delete(int2)                                                       # STEP 54
avl1.delete(int1)                                                       # STEP 55
avl1.insert(int3)                                                       # STEP 56
int0 = 13                                                               # STEP 57
avl1.delete(int3)                                                       # STEP 58
avl1.insert(int2)                                                       # STEP 59
result = avl1.find(int2)                                                # STEP 60
avl1.delete(int0)                                                       # STEP 61
int3 = 6                                                                # STEP 62
avl1.insert(int3)                                                       # STEP 63
avl1.insert(int3)                                                       # STEP 64
avl1.delete(int3)                                                       # STEP 65
int3 = 20                                                               # STEP 66
avl1.insert(int2)                                                       # STEP 67
avl1.insert(int1)                                                       # STEP 68
int2 = 2                                                                # STEP 69
avl1.delete(int3)                                                       # STEP 70
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cffa70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int1 = 16                                                                # STEP 0
int3 = 2                                                                 # STEP 1
int2 = 7                                                                 # STEP 2
int0 = 4                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
result = avl0.find(int1)                                                 # STEP 5
int1 = 11                                                                # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl0.insert(int0)                                                        # STEP 8
avl0.delete(int1)                                                        # STEP 9
avl0.insert(int1)                                                       # STEP 10
int0 = 4                                                                # STEP 11
result = avl0.find(int2)                                                # STEP 12
avl0.delete(int1)                                                       # STEP 13
avl0.insert(int1)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
avl0.insert(int3)                                                       # STEP 17
result = avl0.find(int2)                                                # STEP 18
avl0.delete(int0)                                                       # STEP 19
int1 = 14                                                               # STEP 20
int0 = 12                                                               # STEP 21
int2 = 12                                                               # STEP 22
avl0.delete(int3)                                                       # STEP 23
result = avl0.find(int1)                                                # STEP 24
int1 = 7                                                                # STEP 25
avl0.insert(int3)                                                       # STEP 26
int3 = 4                                                                # STEP 27
result = avl0.inorder()                                                 # STEP 28
avl0.insert(int2)                                                       # STEP 29
result = avl0.find(int0)                                                # STEP 30
int0 = 10                                                               # STEP 31
avl0.insert(int2)                                                       # STEP 32
avl0.delete(int0)                                                       # STEP 33
avl0 == avl0                                                            # STEP 34
avl0.insert(int3)                                                       # STEP 35
avl0.insert(int2)                                                       # STEP 36
avl0.delete(int1)                                                       # STEP 37
int0 = 13                                                               # STEP 38
avl0.insert(int2)                                                       # STEP 39
result = avl0.find(int1)                                                # STEP 40
avl0.delete(int0)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl0.delete(int0)                                                       # STEP 43
avl0.delete(int0)                                                       # STEP 44
avl0.delete(int2)                                                       # STEP 45
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101e1e758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 3
int1 = 14                                                                # STEP 0
int0 = 11                                                                # STEP 1
int3 = 20                                                                # STEP 2
avl2 = avl.AVLTree()                                                     # STEP 3
avl2.insert(int3)                                                        # STEP 4
avl2.delete(int3)                                                        # STEP 5
int3 = 5                                                                 # STEP 6
int2 = 3                                                                 # STEP 7
avl0 = avl.AVLTree()                                                     # STEP 8
avl0.insert(int3)                                                        # STEP 9
avl2.insert(int3)                                                       # STEP 10
avl2.delete(int2)                                                       # STEP 11
result = avl2.find(int0)                                                # STEP 12
avl0.insert(int3)                                                       # STEP 13
avl2.insert(int1)                                                       # STEP 14
avl2.delete(int1)                                                       # STEP 15
avl0.insert(int3)                                                       # STEP 16
avl2.delete(int2)                                                       # STEP 17
int3 = 1                                                                # STEP 18
result = avl2.inorder()                                                 # STEP 19
int2 = 11                                                               # STEP 20
avl2.insert(int2)                                                       # STEP 21
result = avl0.inorder()                                                 # STEP 22
avl0.insert(int3)                                                       # STEP 23
avl2.delete(int1)                                                       # STEP 24
result = avl2.inorder()                                                 # STEP 25
result = avl0.inorder()                                                 # STEP 26
avl2.insert(int1)                                                       # STEP 27
avl0.insert(int2)                                                       # STEP 28
avl2.delete(int0)                                                       # STEP 29
avl2.insert(int3)                                                       # STEP 30
int1 = 15                                                               # STEP 31
result = avl0.inorder()                                                 # STEP 32
int2 = 20                                                               # STEP 33
int0 = 20                                                               # STEP 34
avl2.insert(int0)                                                       # STEP 35
avl2.insert(int3)                                                       # STEP 36
avl0.insert(int3)                                                       # STEP 37
avl0.delete(int2)                                                       # STEP 38
avl2.delete(int1)                                                       # STEP 39
avl2.delete(int3)                                                       # STEP 40
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101f673f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
190 BRANCHES COVERED
143 STATEMENTS COVERED
