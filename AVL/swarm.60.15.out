Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99445.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #5 STEP #40 (0:00:30.032521) Fri Apr 28 03:58:58 2017 [ 112 stmts 149 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103a5f488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 58 steps

SAVING TEST AS failure.99445.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 16                                                                # STEP 0
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
int2 = 3                                                                 # STEP 1
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
int0 = 3                                                                 # STEP 2
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 3
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int1 = 16                                                                # STEP 4
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 5
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 6
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
int0 = 10                                                                # STEP 7
ACTION: int0 = 10 
int0 = 3 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl2.delete(int0)                                                        # STEP 8
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                        # STEP 9
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 3]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 10
ACTION: int0 = 4 
int0 = 10 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 11
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 12
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 13
ACTION: avl1.delete(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 7                                                                # STEP 14
ACTION: int1 = 7 
int1 = 7 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 15
ACTION: int0 = 20 
int0 = 4 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 16
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 18
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([16]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 19
ACTION: int2 = 20 
int2 = 3 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 20
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([20, 7]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 23
ACTION: avl2.insert(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([16, 20]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 24
ACTION: int2 = 8 
int2 = 20 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
int0 = 3                                                                # STEP 25
ACTION: int0 = 3 
int0 = 20 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 26
ACTION: int1 = 13 
int1 = 7 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 27
ACTION: avl1.insert(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20, 13, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 28
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 3, 20]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 29
ACTION: int0 = 6 
int0 = 3 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 30
ACTION: int1 = 4 
int1 = 13 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 31
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([20, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1 == avl2                                                            # STEP 32
ACTION: avl1 == avl2 
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF1 = set([20, 13, 7]) : <type 'set'>
avl_REF2 = set([16, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF2 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 33
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103f055f0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 34
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 4, 3, 20]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 4, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([16, 3, 20]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 36
ACTION: avl1.insert(int0) 
int0 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([20, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([20, 13, 6, 7]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103f055f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 17                                                               # STEP 38
ACTION: int2 = 17 
int2 = 8 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int1 = 10                                                               # STEP 40
ACTION: int1 = 10 
int1 = 4 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 41
ACTION: int0 = 6 
int0 = 6 : <type 'int'>
==================================================
int2 = 4                                                                # STEP 42
ACTION: int2 = 4 
int2 = 17 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 43
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103f055f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 44
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([20, 13, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 20, 13, 6, 7]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 45
ACTION: int2 = 7 
int2 = 4 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 46
ACTION: int1 = 15 
int1 = 10 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 47
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 3, 20, 6]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 48
ACTION: int0 = 8 
int0 = 6 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 49
ACTION: avl1.insert(int0) 
int0 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([4, 20, 13, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4, 6, 7, 8, 13, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103f055f0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 51
ACTION: int2 = 2 
int2 = 7 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 52
ACTION: int0 = 15 
int0 = 8 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 53
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([16, 3, 20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 6, 15, 16, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 54
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103efaea8> : <type 'instance'>
avl_REF1 = set([4, 6, 7, 8, 13, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 6, 7, 8, 13, 15, 20]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 55
ACTION: int0 = 12 
int0 = 15 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 56
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([3, 6, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 57
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103a65518> : <type 'instance'>
avl_REF2 = set([3, 6, 15, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([3, 6, 15, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b10200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b25878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 51 steps

SAVING TEST AS failure.99445.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 18                                                                # STEP 0
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
int1 = 20                                                                # STEP 1
ACTION: int1 = 20 
int1 = None : <type 'NoneType'>
=> int1 = 20 : <type 'int'>
==================================================
int0 = 4                                                                 # STEP 2
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
int3 = 18                                                                # STEP 3
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 5
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
int2 = 11                                                                # STEP 6
ACTION: int2 = 11 
int2 = 18 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 7
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 9                                                                 # STEP 8
ACTION: int3 = 9 
int3 = 18 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 9
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 15                                                               # STEP 10
ACTION: int1 = 15 
int1 = 20 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18, 11]) : <type 'set'>
==================================================
int2 = 8                                                                # STEP 12
ACTION: int2 = 8 
int2 = 11 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 13
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 14
ACTION: avl2.insert(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 15
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 14                                                               # STEP 16
ACTION: int1 = 14 
int1 = 15 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 17
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 4]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 18
ACTION: int0 = 14 
int0 = 4 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 6                                                                # STEP 21
ACTION: int0 = 6 
int0 = 14 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 22
ACTION: avl2.delete(int1) 
int1 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 3                                                                # STEP 23
ACTION: int2 = 3 
int2 = 8 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 24
ACTION: int1 = 18 
int1 = 14 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 25
ACTION: int3 = 6 
int3 = 9 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 27
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([9, 3, 4]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 28
ACTION: int2 = 5 
int2 = 3 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 29
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([9, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([9, 18, 3, 4]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 30
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([18, 11]) : <type 'set'>
==================================================
int1 = 19                                                               # STEP 31
ACTION: int1 = 19 
int1 = 18 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([19, 18, 11]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 33
ACTION: avl0.insert(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([19, 18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([19, 18, 11, 6]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 34
ACTION: int1 = 2 
int1 = 19 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 35
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([9, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 36
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([19, 18, 11, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([19, 18, 11]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 37
ACTION: int0 = 14 
int0 = 6 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int3 = 15                                                               # STEP 38
ACTION: int3 = 15 
int3 = 6 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
int2 = 3                                                                # STEP 39
ACTION: int2 = 3 
int2 = 5 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 40
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([19, 18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([19, 18, 11, 2]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 41
ACTION: int1 = 15 
int1 = 2 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 42
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([19, 18, 11, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 3, 11, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 43
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([2, 3, 11, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 11                                                               # STEP 44
ACTION: int1 = 11 
int1 = 15 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int2 = 20                                                               # STEP 45
ACTION: int2 = 20 
int2 = 3 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 46
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([9, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 9, 18, 3, 4]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 47
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x103b257a0> : <type 'instance'>
avl_REF0 = set([2, 3, 11, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 14                                                               # STEP 48
ACTION: int1 = 14 
int1 = 11 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
int2 = 3                                                                # STEP 49
ACTION: int2 = 3 
int2 = 20 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 50
ACTION: avl2.delete(int2) 
int2 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x103b263f8> : <type 'instance'>
avl_REF2 = set([11, 9, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([11, 9, 18, 4]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1039f5b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
7.90634543604 PERCENT COVERED
62.7723300457 TOTAL RUNTIME
10 EXECUTED
809 TOTAL TEST OPERATIONS
27.4480278492 TIME SPENT EXECUTING TEST OPERATIONS
0.0272312164307 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.6520278454 TIME SPENT CHECKING PROPERTIES
55.1000556946 TOTAL TIME SPENT RUNNING SUT
0.0051052570343 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 16                                                                # STEP 0
int2 = 3                                                                 # STEP 1
int0 = 3                                                                 # STEP 2
avl2 = avl.AVLTree()                                                     # STEP 3
int1 = 16                                                                # STEP 4
avl1 = avl.AVLTree()                                                     # STEP 5
avl2.insert(int0)                                                        # STEP 6
int0 = 10                                                                # STEP 7
avl2.delete(int0)                                                        # STEP 8
avl2.insert(int1)                                                        # STEP 9
int0 = 4                                                                # STEP 10
int1 = 7                                                                # STEP 11
avl1.delete(int1)                                                       # STEP 12
avl1.delete(int0)                                                       # STEP 13
int1 = 7                                                                # STEP 14
int0 = 20                                                               # STEP 15
avl1.insert(int1)                                                       # STEP 16
avl1.delete(int2)                                                       # STEP 17
avl2.delete(int2)                                                       # STEP 18
int2 = 20                                                               # STEP 19
avl1.delete(int2)                                                       # STEP 20
avl1.delete(int0)                                                       # STEP 21
avl1.insert(int2)                                                       # STEP 22
avl2.insert(int2)                                                       # STEP 23
int2 = 8                                                                # STEP 24
int0 = 3                                                                # STEP 25
int1 = 13                                                               # STEP 26
avl1.insert(int1)                                                       # STEP 27
avl2.insert(int0)                                                       # STEP 28
int0 = 6                                                                # STEP 29
int1 = 4                                                                # STEP 30
avl1 == avl1                                                            # STEP 31
avl1 == avl2                                                            # STEP 32
avl0 = avl.AVLTree()                                                    # STEP 33
avl2.insert(int1)                                                       # STEP 34
avl2.delete(int1)                                                       # STEP 35
avl1.insert(int0)                                                       # STEP 36
avl0.delete(int2)                                                       # STEP 37
int2 = 17                                                               # STEP 38
avl2.delete(int2)                                                       # STEP 39
int1 = 10                                                               # STEP 40
int0 = 6                                                                # STEP 41
int2 = 4                                                                # STEP 42
avl0.delete(int1)                                                       # STEP 43
avl1.insert(int2)                                                       # STEP 44
int2 = 7                                                                # STEP 45
int1 = 15                                                               # STEP 46
avl2.insert(int0)                                                       # STEP 47
int0 = 8                                                                # STEP 48
avl1.insert(int0)                                                       # STEP 49
avl0.insert(int2)                                                       # STEP 50
int2 = 2                                                                # STEP 51
int0 = 15                                                               # STEP 52
avl2.insert(int0)                                                       # STEP 53
avl1.insert(int1)                                                       # STEP 54
int0 = 12                                                               # STEP 55
avl2.insert(int1)                                                       # STEP 56
avl2.delete(int3)                                                       # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b10200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int2 = 18                                                                # STEP 0
int1 = 20                                                                # STEP 1
int0 = 4                                                                 # STEP 2
int3 = 18                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int2)                                                        # STEP 5
int2 = 11                                                                # STEP 6
avl0.insert(int3)                                                        # STEP 7
int3 = 9                                                                 # STEP 8
avl0.delete(int1)                                                        # STEP 9
int1 = 15                                                               # STEP 10
avl0.insert(int2)                                                       # STEP 11
int2 = 8                                                                # STEP 12
avl2 = avl.AVLTree()                                                    # STEP 13
avl2.insert(int0)                                                       # STEP 14
avl0.delete(int1)                                                       # STEP 15
int1 = 14                                                               # STEP 16
avl2.insert(int3)                                                       # STEP 17
int0 = 14                                                               # STEP 18
avl0.delete(int2)                                                       # STEP 19
avl0.delete(int0)                                                       # STEP 20
int0 = 6                                                                # STEP 21
avl2.delete(int1)                                                       # STEP 22
int2 = 3                                                                # STEP 23
int1 = 18                                                               # STEP 24
int3 = 6                                                                # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl2.insert(int2)                                                       # STEP 27
int2 = 5                                                                # STEP 28
avl2.insert(int1)                                                       # STEP 29
avl0.insert(int1)                                                       # STEP 30
int1 = 19                                                               # STEP 31
avl0.insert(int1)                                                       # STEP 32
avl0.insert(int0)                                                       # STEP 33
int1 = 2                                                                # STEP 34
avl2.delete(int2)                                                       # STEP 35
avl0.delete(int3)                                                       # STEP 36
int0 = 14                                                               # STEP 37
int3 = 15                                                               # STEP 38
int2 = 3                                                                # STEP 39
avl0.insert(int1)                                                       # STEP 40
int1 = 15                                                               # STEP 41
avl0.insert(int2)                                                       # STEP 42
avl0.delete(int1)                                                       # STEP 43
int1 = 11                                                               # STEP 44
int2 = 20                                                               # STEP 45
avl2.insert(int1)                                                       # STEP 46
avl0.delete(int2)                                                       # STEP 47
int1 = 14                                                               # STEP 48
int2 = 3                                                                # STEP 49
avl2.delete(int2)                                                       # STEP 50
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1039f5b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
198 BRANCHES COVERED
149 STATEMENTS COVERED
