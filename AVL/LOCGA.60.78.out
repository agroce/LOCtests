Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62472.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  15 [2:0]
-- < 11 [1:-1]
---- > 14 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 19 [0:0] L
set([11, 14, 15, 17, 18, 19])
  15 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 19 [0:0] L
set([3, 4, 11, 15, 17, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1020d2098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 89 steps

SAVING TEST AS failure.62472.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 19                                                                # STEP 1
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.insert(int1)                                                        # STEP 2
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
int1 = 11                                                                # STEP 3
ACTION: int1 = 11 
int1 = 19 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 4
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int1)                                                 # STEP 5
ACTION: result = avl0.find(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int0 = 15                                                                # STEP 7
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
avl0.insert(int1)                                                        # STEP 8
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 19]) : <type 'set'>
==================================================
avl0.insert(int1)                                                        # STEP 9
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 11                                                               # STEP 10
ACTION: int1 = 11 
int1 = 11 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 11
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 12
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 19, 15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0 == avl0                                                            # STEP 14
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                       # STEP 15
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([11, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 16
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 17
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 18
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([19, 15]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 19
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 20
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int3 = 18                                                               # STEP 21
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 22
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18, 19, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 23
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([18, 19]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 24
ACTION: result = avl0.find(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
result = avl0.find(int0)                                                # STEP 25
ACTION: result = avl0.find(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 26
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 27
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([18, 19, 15]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                # STEP 28
ACTION: result = avl0.find(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 29
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([19, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 30
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 31
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 19, 15]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 33
ACTION: int1 = 4 
int1 = 11 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
int0 = 14                                                               # STEP 34
ACTION: int0 = 14 
int0 = 15 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 35
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 36
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 37
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 5                                                                # STEP 38
ACTION: int3 = 5 
int3 = 18 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 39
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 18, 19, 5, 15]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int2 = 1                                                                # STEP 41
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 43
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 44
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 45
ACTION: int3 = 7 
int3 = 5 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 46
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 47
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([4, 11, 15, 18, 19]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 48
ACTION: int3 = 17 
int3 = 7 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 49
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 50
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 51
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([11, 15, 18, 19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 52
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([11, 14, 15, 18, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 53
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 54
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 14, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 5                                                                # STEP 55
ACTION: int0 = 5 
int0 = 14 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 56
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 14, 15, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 14, 15, 17, 18, 19]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 57
ACTION: int2 = 1 
int2 = 1 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 58
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.display()                                                          # STEP 59
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 14, 15, 17, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 11 [1:-1]
---- > 14 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([11, 14, 15, 17, 18, 19])
==================================================
avl0.insert(int1)                                                       # STEP 60
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 61
ACTION: int3 = 15 
int3 = 17 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 62
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl0.find(int2)                                                # STEP 63
ACTION: result = avl0.find(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 64
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 65
ACTION: int2 = 14 
int2 = 1 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 66
ACTION: avl0.delete(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1 == avl0                                                            # STEP 67
ACTION: avl1 == avl0 
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
avl_REF0 = set([4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF0 
==================================================
int3 = 3                                                                # STEP 68
ACTION: int3 = 3 
int3 = 15 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 69
ACTION: int0 = 15 
int0 = 5 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 16                                                               # STEP 70
ACTION: int1 = 16 
int1 = 4 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 71
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 72
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([4, 11, 15, 17, 18, 19]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 73
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([4, 11, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 4, 11, 15, 17, 18, 19]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 74
ACTION: avl0.display() 
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 15, 17, 18, 19]) : <type 'set'>
  15 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 11 [0:0] L
-- > 18 [1:0]
---- < 17 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([3, 4, 11, 15, 17, 18, 19])
==================================================
avl0.insert(int2)                                                       # STEP 75
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 76
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 77
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 14, 15, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 4, 11, 14, 15, 16, 17, 18, 19]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 78
ACTION: int3 = 4 
int3 = 3 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 79
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 80
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 81
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 14, 15, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 82
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 83
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 84
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10240e098> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([14, 15]) : <type 'set'>
==================================================
int1 = 18                                                               # STEP 85
ACTION: int1 = 18 
int1 = 16 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 86
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 14, 15, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 87
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 14, 15, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 88
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1020a93f8> : <type 'instance'>
avl_REF0 = set([3, 4, 11, 14, 15, 16, 17, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 4, 11, 14, 15, 16, 17, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1020a43b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #19 (0:00:30.108038) Mon May  1 18:36:00 2017 [ 154 stmts 204 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026a0638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 54 steps

SAVING TEST AS failure.62472.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10268ea70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 17                                                                # STEP 1
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 2
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10268ea70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 3
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10268ea70> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                  # STEP 4
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10268ea70> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10268ea70> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 6
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x10268ea70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
==================================================
int2 = 8                                                                 # STEP 7
ACTION: int2 = 8 
int2 = None : <type 'NoneType'>
=> int2 = 8 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 8
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 9
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 10
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 11
ACTION: int2 = 7 
int2 = 8 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 12
ACTION: int3 = 13 
int3 = 17 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 13
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 14
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 15
ACTION: int3 = 18 
int3 = 13 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 16
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
result = avl2.find(int2)                                                # STEP 17
ACTION: result = avl2.find(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 18
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 19
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 20
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 21
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 22
ACTION: int2 = 12 
int2 = 7 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 23
ACTION: result = avl0.find(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int0 = 11                                                               # STEP 24
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
result = avl2.find(int1)                                                # STEP 25
ACTION: result = avl2.find(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
int1 = 5                                                                # STEP 26
ACTION: int1 = 5 
int1 = 15 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 27
ACTION: int3 = 6 
int3 = 18 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 28
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 29
ACTION: result = avl0.find(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 30
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 31
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 7]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 32
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int0)                                                       # STEP 33
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 34
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 5]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 35
ACTION: int1 = 10 
int1 = 5 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 36
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 37
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 38
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 12, 5]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 39
ACTION: int3 = 4 
int3 = 6 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 40
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 6, 7]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 10, 12, 5]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 10, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 12, 5]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 43
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([11, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 44
ACTION: avl0.insert(int1) 
int1 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 10, 12, 5]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 45
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([11, 6, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 46
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([11, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 12, 6, 7]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 47
ACTION: int1 = 16 
int1 = 10 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 48
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([11, 12, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([4, 11, 12, 6, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 49
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10269d7a0> : <type 'instance'>
avl_REF2 = set([4, 11, 12, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([4, 11, 6, 7]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 50
ACTION: int3 = 5 
int3 = 4 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 51
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 10, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 52
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 10, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 53
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x102745200> : <type 'instance'>
avl_REF0 = set([8, 10, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 10, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026be320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1020e8950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 22 steps

SAVING TEST AS failure.62472.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 20                                                                # STEP 0
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 11                                                                # STEP 1
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
int2 = 15                                                                # STEP 2
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int1 = 13                                                                # STEP 3
ACTION: int1 = 13 
int1 = None : <type 'NoneType'>
=> int1 = 13 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 6
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 7
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                        # STEP 9
ACTION: avl1.insert(int1) 
int1 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20, 13]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 10
ACTION: result = avl1.find(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
int1 = 15                                                               # STEP 11
ACTION: int1 = 15 
int1 = 13 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 5                                                                # STEP 12
ACTION: int0 = 5 
int0 = 11 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 13
ACTION: result = avl1.find(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int2 = 15                                                               # STEP 14
ACTION: int2 = 15 
int2 = 15 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 15
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20, 13, 15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 16
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5, 20, 13, 15]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 17
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([5, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int0 = 2                                                                # STEP 18
ACTION: int0 = 2 
int0 = 5 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
int3 = 5                                                                # STEP 19
ACTION: int3 = 5 
int3 = 20 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 20
ACTION: result = avl1.find(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([5, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1026bd128> : <type 'instance'>
avl_REF1 = set([5, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([5, 20, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10219a128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 51
STOPPING TESTING DUE TO TIMEOUT
8.27045850261 PERCENT COVERED
60.3227491379 TOTAL RUNTIME
6 EXECUTED
416 TOTAL TEST OPERATIONS
21.296230793 TIME SPENT EXECUTING TEST OPERATIONS
0.0445258617401 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
21.3945896626 TIME SPENT CHECKING PROPERTIES
42.6908204556 TOTAL TIME SPENT RUNNING SUT
0.00390958786011 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
avl0 = avl.AVLTree()                                                     # STEP 0
int1 = 19                                                                # STEP 1
avl0.insert(int1)                                                        # STEP 2
int1 = 11                                                                # STEP 3
avl0.delete(int1)                                                        # STEP 4
result = avl0.find(int1)                                                 # STEP 5
avl0.delete(int1)                                                        # STEP 6
int0 = 15                                                                # STEP 7
avl0.insert(int1)                                                        # STEP 8
avl0.insert(int1)                                                        # STEP 9
int1 = 11                                                               # STEP 10
result = avl0.inorder()                                                 # STEP 11
avl0.insert(int0)                                                       # STEP 12
avl0.insert(int0)                                                       # STEP 13
avl0 == avl0                                                            # STEP 14
avl0.delete(int0)                                                       # STEP 15
avl0.delete(int1)                                                       # STEP 16
avl0.delete(int0)                                                       # STEP 17
avl0.insert(int0)                                                       # STEP 18
avl0.insert(int0)                                                       # STEP 19
avl0.insert(int0)                                                       # STEP 20
int3 = 18                                                               # STEP 21
avl0.insert(int3)                                                       # STEP 22
avl0.delete(int0)                                                       # STEP 23
result = avl0.find(int0)                                                # STEP 24
result = avl0.find(int0)                                                # STEP 25
avl0.insert(int3)                                                       # STEP 26
avl0.insert(int0)                                                       # STEP 27
result = avl0.find(int3)                                                # STEP 28
avl0.delete(int3)                                                       # STEP 29
avl0.delete(int1)                                                       # STEP 30
avl0.delete(int1)                                                       # STEP 31
avl0.insert(int1)                                                       # STEP 32
int1 = 4                                                                # STEP 33
int0 = 14                                                               # STEP 34
avl0.insert(int3)                                                       # STEP 35
result = avl0.inorder()                                                 # STEP 36
avl0.insert(int3)                                                       # STEP 37
int3 = 5                                                                # STEP 38
avl0.insert(int3)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
int2 = 1                                                                # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl0.delete(int3)                                                       # STEP 43
avl1 = avl.AVLTree()                                                    # STEP 44
int3 = 7                                                                # STEP 45
avl0.delete(int3)                                                       # STEP 46
avl0.insert(int1)                                                       # STEP 47
int3 = 17                                                               # STEP 48
avl1.insert(int3)                                                       # STEP 49
avl0.delete(int2)                                                       # STEP 50
avl0.delete(int1)                                                       # STEP 51
avl0.insert(int0)                                                       # STEP 52
avl1.delete(int3)                                                       # STEP 53
avl0.delete(int3)                                                       # STEP 54
int0 = 5                                                                # STEP 55
avl0.insert(int3)                                                       # STEP 56
int2 = 1                                                                # STEP 57
avl1.delete(int1)                                                       # STEP 58
avl0.display()                                                          # STEP 59
avl0.insert(int1)                                                       # STEP 60
int3 = 15                                                               # STEP 61
avl0.insert(int1)                                                       # STEP 62
result = avl0.find(int2)                                                # STEP 63
avl1.insert(int3)                                                       # STEP 64
int2 = 14                                                               # STEP 65
avl0.delete(int0)                                                       # STEP 66
avl1 == avl0                                                            # STEP 67
int3 = 3                                                                # STEP 68
int0 = 15                                                               # STEP 69
int1 = 16                                                               # STEP 70
avl1.delete(int1)                                                       # STEP 71
avl0.delete(int2)                                                       # STEP 72
avl0.insert(int3)                                                       # STEP 73
avl0.display()                                                          # STEP 74
avl0.insert(int2)                                                       # STEP 75
avl0.delete(int1)                                                       # STEP 76
avl0.insert(int1)                                                       # STEP 77
int3 = 4                                                                # STEP 78
avl1.delete(int0)                                                       # STEP 79
avl1.delete(int0)                                                       # STEP 80
avl0.insert(int3)                                                       # STEP 81
avl1.insert(int2)                                                       # STEP 82
avl1.delete(int1)                                                       # STEP 83
avl1.insert(int0)                                                       # STEP 84
int1 = 18                                                               # STEP 85
avl0.insert(int2)                                                       # STEP 86
result = avl0.inorder()                                                 # STEP 87
avl0.delete(int1)                                                       # STEP 88
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1020a43b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
avl0 = avl.AVLTree()                                                     # STEP 0
int3 = 17                                                                # STEP 1
avl0.insert(int3)                                                        # STEP 2
result = avl0.inorder()                                                  # STEP 3
result = avl0.inorder()                                                  # STEP 4
avl0.delete(int3)                                                        # STEP 5
avl0 = avl.AVLTree()                                                     # STEP 6
int2 = 8                                                                 # STEP 7
avl0.insert(int3)                                                        # STEP 8
avl0.delete(int3)                                                        # STEP 9
avl0.insert(int2)                                                       # STEP 10
int2 = 7                                                                # STEP 11
int3 = 13                                                               # STEP 12
avl0.delete(int3)                                                       # STEP 13
avl2 = avl.AVLTree()                                                    # STEP 14
int3 = 18                                                               # STEP 15
avl2.delete(int3)                                                       # STEP 16
result = avl2.find(int2)                                                # STEP 17
avl0.delete(int2)                                                       # STEP 18
avl2.delete(int3)                                                       # STEP 19
avl2.insert(int2)                                                       # STEP 20
int1 = 15                                                               # STEP 21
int2 = 12                                                               # STEP 22
result = avl0.find(int3)                                                # STEP 23
int0 = 11                                                               # STEP 24
result = avl2.find(int1)                                                # STEP 25
int1 = 5                                                                # STEP 26
int3 = 6                                                                # STEP 27
avl2.delete(int2)                                                       # STEP 28
result = avl0.find(int2)                                                # STEP 29
avl2.delete(int1)                                                       # STEP 30
avl2.insert(int0)                                                       # STEP 31
result = avl0.inorder()                                                 # STEP 32
avl2.delete(int0)                                                       # STEP 33
avl0.insert(int1)                                                       # STEP 34
int1 = 10                                                               # STEP 35
avl2.insert(int3)                                                       # STEP 36
avl2.insert(int3)                                                       # STEP 37
avl0.insert(int2)                                                       # STEP 38
int3 = 4                                                                # STEP 39
avl2.insert(int0)                                                       # STEP 40
avl0.insert(int1)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl2.insert(int0)                                                       # STEP 43
avl0.insert(int1)                                                       # STEP 44
result = avl2.inorder()                                                 # STEP 45
avl2.insert(int2)                                                       # STEP 46
int1 = 16                                                               # STEP 47
avl2.insert(int3)                                                       # STEP 48
avl2.delete(int2)                                                       # STEP 49
int3 = 5                                                                # STEP 50
avl0.insert(int3)                                                       # STEP 51
avl0.insert(int2)                                                       # STEP 52
avl0.delete(int3)                                                       # STEP 53
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026be320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int3 = 20                                                                # STEP 0
int0 = 11                                                                # STEP 1
int2 = 15                                                                # STEP 2
int1 = 13                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.delete(int0)                                                        # STEP 6
avl1.delete(int0)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.insert(int1)                                                        # STEP 9
result = avl1.find(int2)                                                # STEP 10
int1 = 15                                                               # STEP 11
int0 = 5                                                                # STEP 12
result = avl1.find(int3)                                                # STEP 13
int2 = 15                                                               # STEP 14
avl1.insert(int1)                                                       # STEP 15
avl1.insert(int0)                                                       # STEP 16
avl1 == avl1                                                            # STEP 17
int0 = 2                                                                # STEP 18
int3 = 5                                                                # STEP 19
result = avl1.find(int1)                                                # STEP 20
avl1.delete(int2)                                                       # STEP 21
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10219a128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
