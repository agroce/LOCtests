Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40144.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10365da70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 57 steps

SAVING TEST AS failure.40144.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 15                                                                # STEP 0
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                        # STEP 2
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 5                                                                 # STEP 3
ACTION: int1 = 5 
int1 = 15 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.insert(int1)                                                        # STEP 4
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 5
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl1 = avl.AVLTree()                                                     # STEP 6
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 2                                                                 # STEP 7
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 8
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                        # STEP 9
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 10
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 11
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 12
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 13
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 5]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 14
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 15
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 16
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int3 = 6                                                                # STEP 17
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 == avl2                                                            # STEP 18
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl1.delete(int2)                                                       # STEP 19
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 20
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 21
ACTION: int2 = 18 
int2 = 2 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 23
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 24
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 25
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 26
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18, 5]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 27
ACTION: avl2.insert(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int2 = 10                                                               # STEP 28
ACTION: int2 = 10 
int2 = 18 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 30
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 31
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 32
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 33
ACTION: int3 = 19 
int3 = 6 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2 == avl1                                                            # STEP 35
ACTION: avl2 == avl1 
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
int0 = 2                                                                # STEP 36
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 37
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([18, 2]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 38
ACTION: avl2.delete(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 39
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 11                                                               # STEP 40
ACTION: int1 = 11 
int1 = 5 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 41
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 42
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 43
ACTION: avl2.delete(int3) 
int3 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 14                                                               # STEP 44
ACTION: int3 = 14 
int3 = 19 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 45
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 11, 5]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 46
ACTION: int0 = 9 
int0 = 2 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 47
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 48
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([18, 10]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 49
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1030dfab8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1030dfab8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 51
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 10, 14]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 52
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 53
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 54
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10332fc68> : <type 'instance'>
avl_REF1 = set([18, 11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([9, 18, 11, 5]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 55
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18, 11, 10, 14]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 56
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103763368> : <type 'instance'>
avl_REF2 = set([18, 11, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([18, 11, 10]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1031b2bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #94 (0:00:30.001350) Mon May  1 02:08:40 2017 [ 138 stmts 183 branches ]
  9 [3:-1]
-- < 5 [1:-1]
---- > 6 [0:0] L
-- > 18 [2:1]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [0:0] L
set([5, 6, 9, 12, 14, 18, 19])
  9 [3:-1]
-- < 5 [1:-1]
---- > 6 [0:0] L
-- > 18 [2:1]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [0:0] L
set([5, 6, 9, 12, 14, 18, 19])
  9 [3:-1]
-- < 5 [1:-1]
---- > 6 [0:0] L
-- > 18 [2:1]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [0:0] L
set([5, 6, 9, 12, 14, 18, 19])
  12 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([7, 9, 12, 13, 14, 18])
  9 [3:-1]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 6 [0:0] L
-- > 18 [2:1]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [0:0] L
set([1, 5, 6, 9, 12, 14, 18, 19])
  9 [3:-1]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 6 [0:0] L
-- > 18 [2:1]
---- < 12 [1:-1]
------ > 14 [0:0] L
---- > 19 [0:0] L
set([1, 5, 6, 9, 12, 14, 18, 19])
  12 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([7, 9, 12, 13, 14, 18])
  12 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([7, 9, 12, 13, 14, 18])
  12 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([7, 9, 12, 13, 14, 18])
  14 [3:1]
-- < 5 [2:-1]
---- < 1 [0:0] L
---- > 12 [1:-1]
------ > 13 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
set([1, 5, 12, 13, 14, 18, 19])
  12 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([7, 9, 12, 13, 14, 18])
  14 [3:1]
-- < 5 [2:-1]
---- < 1 [0:0] L
---- > 12 [1:0]
------ < 7 [0:0] L
------ > 13 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 12, 13, 14, 18, 19])
  12 [2:0]
-- < 9 [1:1]
---- < 7 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([7, 9, 12, 13, 14, 18])
  8 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 7 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([1, 3, 7, 8, 12, 14])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([1, 3, 6, 7, 8, 12, 14])
  14 [3:1]
-- < 5 [2:-1]
---- < 1 [0:0] L
---- > 12 [1:0]
------ < 7 [0:0] L
------ > 13 [0:0] L
-- > 18 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 12, 13, 14, 18, 19])
  12 [2:0]
-- < 7 [1:0]
---- < 1 [0:0] L
---- > 9 [0:0] L
-- > 14 [1:0]
---- < 13 [0:0] L
---- > 18 [0:0] L
set([1, 7, 9, 12, 13, 14, 18])
  8 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 7 [1:1]
------ < 6 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([1, 3, 6, 7, 8, 12, 14])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 12
STOPPING TESTING DUE TO TIMEOUT
8.34686586554 PERCENT COVERED
60.2095451355 TOTAL RUNTIME
7 EXECUTED
569 TOTAL TEST OPERATIONS
27.1145195961 TIME SPENT EXECUTING TEST OPERATIONS
0.0789000988007 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.2967402935 TIME SPENT CHECKING PROPERTIES
54.4112598896 TOTAL TIME SPENT RUNNING SUT
0.0042929649353 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 15                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2.delete(int1)                                                        # STEP 2
int1 = 5                                                                 # STEP 3
avl2.insert(int1)                                                        # STEP 4
avl2.insert(int1)                                                        # STEP 5
avl1 = avl.AVLTree()                                                     # STEP 6
int2 = 2                                                                 # STEP 7
avl1.delete(int2)                                                        # STEP 8
avl1.delete(int1)                                                        # STEP 9
avl1.insert(int1)                                                       # STEP 10
avl1.insert(int2)                                                       # STEP 11
avl1.delete(int2)                                                       # STEP 12
avl1.insert(int2)                                                       # STEP 13
avl2.delete(int1)                                                       # STEP 14
avl1.insert(int1)                                                       # STEP 15
avl1.insert(int1)                                                       # STEP 16
int3 = 6                                                                # STEP 17
avl2 == avl2                                                            # STEP 18
avl1.delete(int2)                                                       # STEP 19
avl1.delete(int1)                                                       # STEP 20
int2 = 18                                                               # STEP 21
avl1.insert(int2)                                                       # STEP 22
avl2.insert(int2)                                                       # STEP 23
avl1.insert(int1)                                                       # STEP 24
avl1.insert(int2)                                                       # STEP 25
avl2.insert(int1)                                                       # STEP 26
avl2.insert(int1)                                                       # STEP 27
int2 = 10                                                               # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl1.delete(int3)                                                       # STEP 30
avl1.delete(int3)                                                       # STEP 31
avl2.delete(int1)                                                       # STEP 32
int3 = 19                                                               # STEP 33
avl1.delete(int2)                                                       # STEP 34
avl2 == avl1                                                            # STEP 35
int0 = 2                                                                # STEP 36
avl2.insert(int0)                                                       # STEP 37
avl2.delete(int0)                                                       # STEP 38
avl2.delete(int1)                                                       # STEP 39
int1 = 11                                                               # STEP 40
avl1.delete(int3)                                                       # STEP 41
avl2.delete(int3)                                                       # STEP 42
avl2.delete(int3)                                                       # STEP 43
int3 = 14                                                               # STEP 44
avl1.insert(int1)                                                       # STEP 45
int0 = 9                                                                # STEP 46
avl1.insert(int1)                                                       # STEP 47
avl2.insert(int2)                                                       # STEP 48
avl0 = avl.AVLTree()                                                    # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl2.insert(int3)                                                       # STEP 51
avl2.delete(int0)                                                       # STEP 52
avl1.delete(int3)                                                       # STEP 53
avl1.insert(int0)                                                       # STEP 54
avl2.insert(int1)                                                       # STEP 55
avl2.delete(int3)                                                       # STEP 56
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1031b2bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
203 BRANCHES COVERED
152 STATEMENTS COVERED
