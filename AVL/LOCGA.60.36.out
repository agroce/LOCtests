Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62177.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050d1248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 72 steps

SAVING TEST AS failure.62177.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 12                                                                # STEP 0
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 2
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 3
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 4
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int0)                                                        # STEP 5
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 6
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int0)                                                        # STEP 7
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2 == avl2                                                             # STEP 8
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
result = avl2.inorder()                                                  # STEP 9
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int0)                                                       # STEP 10
ACTION: avl2.insert(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 11
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 12
ACTION: int0 = 15 
int0 = 12 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 13
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 14
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2 == avl2                                                            # STEP 15
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int1)                                                       # STEP 16
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 17
ACTION: avl2 = avl.AVLTree() 
avl2 = <avlbug2.AVLTree instance at 0x1031f9320> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
=> avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 18
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 19
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 20
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 21
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 22
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103783518> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 23
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103783518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103783518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 12                                                               # STEP 25
ACTION: int1 = 12 
int1 = 2 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 26
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x103783518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 27
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x103783518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
==================================================
int3 = 2                                                                # STEP 28
ACTION: int3 = 2 
int3 = None : <type 'NoneType'>
=> int3 = 2 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 29
ACTION: avl1.delete(int3) 
int3 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 30
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 6                                                                # STEP 31
ACTION: int3 = 6 
int3 = 2 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 32
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 16                                                               # STEP 33
ACTION: int0 = 16 
int0 = 15 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 34
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 35
ACTION: int0 = 3 
int0 = 16 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 36
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 37
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 6]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int1)                                                       # STEP 39
ACTION: avl2.insert(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([12, 6]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 40
ACTION: int1 = 11 
int1 = 12 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 41
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 16                                                               # STEP 42
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 43
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int0 = 13                                                               # STEP 44
ACTION: int0 = 13 
int0 = 3 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 45
ACTION: int3 = 6 
int3 = 16 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 46
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([13, 15]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 47
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int1)                                                       # STEP 48
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 49
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 19                                                               # STEP 50
ACTION: int1 = 19 
int1 = 11 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 51
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 52
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 53
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([12, 13, 6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 54
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 55
ACTION: int1 = 8 
int1 = 19 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 56
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 13, 6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int3)                                                       # STEP 57
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 6]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 58
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13, 6, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 59
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 60
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 61
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([13, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 4                                                                # STEP 62
ACTION: int0 = 4 
int0 = 13 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 63
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 64
ACTION: avl0 = avl.AVLTree() 
avl0 = <avlbug2.AVLTree instance at 0x1037cfa28> : <type 'instance'>
avl_REF0 = set([16, 6]) : <type 'set'>
=> avl0 = <avlbug2.AVLTree instance at 0x105136a70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 65
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl1.find(int0)                                                # STEP 66
ACTION: result = avl1.find(int0) 
int0 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([13, 6, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 67
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([13, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 68
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([13, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18, 13, 6, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 69
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103764ea8> : <type 'instance'>
avl_REF2 = set([12, 13, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int2 = 3                                                                # STEP 70
ACTION: int2 = 3 
int2 = 18 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 71
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103764d40> : <type 'instance'>
avl_REF1 = set([18, 13, 6, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([18, 13, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101c7ecb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #50 (0:00:30.071952) Mon May  1 17:52:40 2017 [ 139 stmts 185 branches ]
  11 [2:0]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 6 [0:0] L
-- > 14 [1:-1]
---- > 20 [0:0] L
set([2, 4, 6, 11, 14, 20])
  3 [2:0]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 17 [1:0]
---- < 11 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 11, 17, 18])
  3 [2:0]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 17 [1:0]
---- < 11 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 11, 17, 18])
  3 [3:-1]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 17 [2:1]
---- < 11 [1:0]
------ < 6 [0:0] L
------ > 13 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 6, 11, 13, 17, 18])
  3 [3:-1]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 17 [2:1]
---- < 11 [1:0]
------ < 6 [0:0] L
------ > 13 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 6, 11, 13, 17, 18])
  3 [3:-1]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 17 [2:0]
---- < 11 [1:1]
------ < 6 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([1, 2, 3, 6, 11, 17, 18, 20])
  3 [3:-1]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 17 [2:0]
---- < 11 [1:0]
------ < 6 [0:0] L
------ > 13 [0:0] L
---- > 18 [1:-1]
------ > 20 [0:0] L
set([1, 2, 3, 6, 11, 13, 17, 18, 20])
  11 [3:0]
-- < 3 [2:0]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 6 [1:1]
------ < 4 [0:0] L
-- > 17 [2:1]
---- < 13 [1:1]
------ < 12 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 4, 6, 11, 12, 13, 17, 18])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 43
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
60.2853279114 TOTAL RUNTIME
6 EXECUTED
515 TOTAL TEST OPERATIONS
26.2551248074 TIME SPENT EXECUTING TEST OPERATIONS
0.0573971271515 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.3969917297 TIME SPENT CHECKING PROPERTIES
52.6521165371 TOTAL TIME SPENT RUNNING SUT
0.0038058757782 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 12                                                                # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
avl2.insert(int0)                                                        # STEP 2
avl2.delete(int0)                                                        # STEP 3
avl2.delete(int0)                                                        # STEP 4
avl2.insert(int0)                                                        # STEP 5
avl2.insert(int0)                                                        # STEP 6
avl2.delete(int0)                                                        # STEP 7
avl2 == avl2                                                             # STEP 8
result = avl2.inorder()                                                  # STEP 9
avl2.insert(int0)                                                       # STEP 10
avl2.delete(int0)                                                       # STEP 11
int0 = 15                                                               # STEP 12
int1 = 2                                                                # STEP 13
avl2.delete(int0)                                                       # STEP 14
avl2 == avl2                                                            # STEP 15
avl2.insert(int1)                                                       # STEP 16
avl2 = avl.AVLTree()                                                    # STEP 17
avl1 = avl.AVLTree()                                                    # STEP 18
avl2.delete(int1)                                                       # STEP 19
avl1.insert(int0)                                                       # STEP 20
int2 = 18                                                               # STEP 21
avl0 = avl.AVLTree()                                                    # STEP 22
result = avl0.inorder()                                                 # STEP 23
avl0.delete(int0)                                                       # STEP 24
int1 = 12                                                               # STEP 25
avl0 == avl0                                                            # STEP 26
avl0 = avl.AVLTree()                                                    # STEP 27
int3 = 2                                                                # STEP 28
avl1.delete(int3)                                                       # STEP 29
avl2.delete(int3)                                                       # STEP 30
int3 = 6                                                                # STEP 31
avl1.insert(int0)                                                       # STEP 32
int0 = 16                                                               # STEP 33
avl0.insert(int0)                                                       # STEP 34
int0 = 3                                                                # STEP 35
avl2.insert(int3)                                                       # STEP 36
avl0.insert(int3)                                                       # STEP 37
result = avl0.inorder()                                                 # STEP 38
avl2.insert(int1)                                                       # STEP 39
int1 = 11                                                               # STEP 40
avl1.delete(int0)                                                       # STEP 41
int3 = 16                                                               # STEP 42
avl0.insert(int3)                                                       # STEP 43
int0 = 13                                                               # STEP 44
int3 = 6                                                                # STEP 45
avl1.insert(int0)                                                       # STEP 46
result = avl0.inorder()                                                 # STEP 47
avl2.delete(int1)                                                       # STEP 48
avl1.delete(int1)                                                       # STEP 49
int1 = 19                                                               # STEP 50
avl2.delete(int1)                                                       # STEP 51
avl2.insert(int3)                                                       # STEP 52
avl2.insert(int0)                                                       # STEP 53
avl0.delete(int3)                                                       # STEP 54
int1 = 8                                                                # STEP 55
result = avl2.inorder()                                                 # STEP 56
avl0.insert(int3)                                                       # STEP 57
avl1.insert(int3)                                                       # STEP 58
avl0.delete(int0)                                                       # STEP 59
avl0.delete(int2)                                                       # STEP 60
avl1.delete(int1)                                                       # STEP 61
int0 = 4                                                                # STEP 62
avl2.delete(int2)                                                       # STEP 63
avl0 = avl.AVLTree()                                                    # STEP 64
avl2.insert(int3)                                                       # STEP 65
result = avl1.find(int0)                                                # STEP 66
avl1.insert(int3)                                                       # STEP 67
avl1.insert(int2)                                                       # STEP 68
avl2.insert(int3)                                                       # STEP 69
int2 = 3                                                                # STEP 70
avl1.delete(int3)                                                       # STEP 71
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101c7ecb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
