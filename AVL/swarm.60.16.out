Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99462.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #5 STEP #14 (0:00:30.007037) Fri Apr 28 04:02:07 2017 [ 143 stmts 188 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105818f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 57 steps

SAVING TEST AS failure.99462.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 1                                                                 # STEP 0
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 16                                                                # STEP 1
ACTION: int2 = 16 
int2 = None : <type 'NoneType'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 9                                                                 # STEP 2
ACTION: int3 = 9 
int3 = None : <type 'NoneType'>
=> int3 = 9 : <type 'int'>
==================================================
int1 = 14                                                                # STEP 3
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 6
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 9]) : <type 'set'>
==================================================
int2 = 16                                                                # STEP 7
ACTION: int2 = 16 
int2 = 16 : <type 'int'>
==================================================
int3 = 2                                                                 # STEP 8
ACTION: int3 = 2 
int3 = 9 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl0.insert(int1)                                                        # STEP 9
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 9, 14]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 10
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 11
ACTION: avl2.insert(int0) 
int0 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 2                                                                # STEP 13
ACTION: int0 = 2 
int0 = 1 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 14
ACTION: int1 = 11 
int1 = 14 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 15
ACTION: int3 = 3 
int3 = 2 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 16
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([1, 11]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 17
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 2, 11]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 18
ACTION: int1 = 10 
int1 = 11 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 19
ACTION: int0 = 20 
int0 = 2 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 9, 3, 14]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 21
ACTION: avl2.delete(int1) 
int1 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 11                                                               # STEP 22
ACTION: int1 = 11 
int1 = 10 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 23
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 11                                                               # STEP 24
ACTION: int3 = 11 
int3 = 3 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 25
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 9, 3, 14, 11]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 26
ACTION: int1 = 3 
int1 = 11 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 27
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 28
ACTION: int0 = 3 
int0 = 20 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 29
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 30
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 3, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([16, 9, 14, 11]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 31
ACTION: int1 = 7 
int1 = 3 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int0 = 14                                                               # STEP 32
ACTION: int0 = 14 
int0 = 3 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 33
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 34
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 36
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int1 = 9                                                                # STEP 37
ACTION: int1 = 9 
int1 = 7 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 38
ACTION: int0 = 7 
int0 = 14 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 39
ACTION: int2 = 19 
int2 = 16 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 40
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([16, 9, 19, 14, 11]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 41
ACTION: int2 = 20 
int2 = 19 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 42
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int3 = 7                                                                # STEP 43
ACTION: int3 = 7 
int3 = 11 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 44
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 45
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int0 = 17                                                               # STEP 46
ACTION: int0 = 17 
int0 = 7 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 47
ACTION: int3 = 11 
int3 = 7 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 48
ACTION: avl2.insert(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([1, 2, 11, 20, 17]) : <type 'set'>
==================================================
int0 = 4                                                                # STEP 49
ACTION: int0 = 4 
int0 = 17 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 50
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 15                                                               # STEP 51
ACTION: int1 = 15 
int1 = 9 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 52
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104c32758> : <type 'instance'>
avl_REF0 = set([16, 9, 19, 14, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([16, 9, 19, 14]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 53
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 20, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([1, 2, 11, 17]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 54
ACTION: int3 = 13 
int3 = 11 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 1                                                                # STEP 55
ACTION: int2 = 1 
int2 = 20 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 56
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a2f998> : <type 'instance'>
avl_REF2 = set([1, 2, 11, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 11, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104a1f878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104a7b368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 48 steps

SAVING TEST AS failure.99462.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 14                                                                # STEP 1
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 2
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 14                                                                # STEP 3
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
int0 = 17                                                                # STEP 4
ACTION: int0 = 17 
int0 = None : <type 'NoneType'>
=> int0 = 17 : <type 'int'>
==================================================
avl2.delete(int0)                                                        # STEP 5
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 7                                                                 # STEP 6
ACTION: int0 = 7 
int0 = 17 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.delete(int0)                                                        # STEP 7
ACTION: avl2.delete(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.inorder()                                                  # STEP 8
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 9                                                                 # STEP 9
ACTION: int0 = 9 
int0 = 7 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 10
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 11
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 12
ACTION: int2 = 6 
int2 = 19 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 13
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 8                                                                # STEP 14
ACTION: int1 = 8 
int1 = 14 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 15
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 16
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 17
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 19]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 19
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([14, 6]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 20
ACTION: int1 = 8 
int1 = 8 : <type 'int'>
==================================================
int3 = 9                                                                # STEP 21
ACTION: int3 = 9 
int3 = 14 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
int2 = 9                                                                # STEP 22
ACTION: int2 = 9 
int2 = 6 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 23
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 3                                                                # STEP 24
ACTION: int0 = 3 
int0 = 9 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 25
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([8, 9, 19]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 26
ACTION: int2 = 14 
int2 = 9 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 27
ACTION: avl2 = avl.AVLTree() 
avl2 = <avl.AVLTree instance at 0x104a4ab48> : <type 'instance'>
avl_REF2 = set([14, 6]) : <type 'set'>
=> avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 28
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([8, 9, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 15                                                               # STEP 29
ACTION: int2 = 15 
int2 = 14 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 30
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 31
ACTION: int0 = 19 
int0 = 3 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 32
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([19, 3]) : <type 'set'>
==================================================
int0 = 3                                                                # STEP 33
ACTION: int0 = 3 
int0 = 19 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 34
ACTION: avl2.insert(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([19, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 9, 3]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 35
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([8, 9, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 36
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([19, 9, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([19, 9]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 37
ACTION: int3 = 1 
int3 = 9 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 38
ACTION: int1 = 15 
int1 = 8 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 39
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([19, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19, 9, 15]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 40
ACTION: int2 = 6 
int2 = 15 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 41
ACTION: int0 = 9 
int0 = 3 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 42
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([8, 9, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([8, 19]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 43
ACTION: int0 = 19 
int0 = 9 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 44
ACTION: avl1.insert(int0) 
int0 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a71b00> : <type 'instance'>
avl_REF1 = set([8, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 3                                                                # STEP 45
ACTION: int0 = 3 
int0 = 19 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 46
ACTION: avl2.insert(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([19, 9, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 9, 1, 15]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 47
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104a6bb48> : <type 'instance'>
avl_REF2 = set([19, 9, 1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([19, 9, 1]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104a94098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 2
STOPPING TESTING DUE TO TIMEOUT
7.70274855786 PERCENT COVERED
60.1895420551 TOTAL RUNTIME
9 EXECUTED
707 TOTAL TEST OPERATIONS
25.9932079315 TIME SPENT EXECUTING TEST OPERATIONS
0.0258390903473 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.9939322472 TIME SPENT CHECKING PROPERTIES
51.9871401787 TOTAL TIME SPENT RUNNING SUT
0.00517082214355 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 1                                                                 # STEP 0
int2 = 16                                                                # STEP 1
int3 = 9                                                                 # STEP 2
int1 = 14                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int3)                                                        # STEP 5
avl0.insert(int2)                                                        # STEP 6
int2 = 16                                                                # STEP 7
int3 = 2                                                                 # STEP 8
avl0.insert(int1)                                                        # STEP 9
avl2 = avl.AVLTree()                                                    # STEP 10
avl2.insert(int0)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
int0 = 2                                                                # STEP 13
int1 = 11                                                               # STEP 14
int3 = 3                                                                # STEP 15
avl2.insert(int1)                                                       # STEP 16
avl2.insert(int0)                                                       # STEP 17
int1 = 10                                                               # STEP 18
int0 = 20                                                               # STEP 19
avl0.insert(int3)                                                       # STEP 20
avl2.delete(int1)                                                       # STEP 21
int1 = 11                                                               # STEP 22
avl0.insert(int3)                                                       # STEP 23
int3 = 11                                                               # STEP 24
avl0.insert(int1)                                                       # STEP 25
int1 = 3                                                                # STEP 26
avl2.insert(int0)                                                       # STEP 27
int0 = 3                                                                # STEP 28
avl0.insert(int1)                                                       # STEP 29
avl0.delete(int0)                                                       # STEP 30
int1 = 7                                                                # STEP 31
int0 = 14                                                               # STEP 32
avl0.insert(int2)                                                       # STEP 33
avl0.insert(int2)                                                       # STEP 34
avl2.delete(int1)                                                       # STEP 35
avl0.insert(int0)                                                       # STEP 36
int1 = 9                                                                # STEP 37
int0 = 7                                                                # STEP 38
int2 = 19                                                               # STEP 39
avl0.insert(int2)                                                       # STEP 40
int2 = 20                                                               # STEP 41
avl2.insert(int3)                                                       # STEP 42
int3 = 7                                                                # STEP 43
avl2.delete(int0)                                                       # STEP 44
avl2.delete(int3)                                                       # STEP 45
int0 = 17                                                               # STEP 46
int3 = 11                                                               # STEP 47
avl2.insert(int0)                                                       # STEP 48
int0 = 4                                                                # STEP 49
avl2.delete(int1)                                                       # STEP 50
int1 = 15                                                               # STEP 51
avl0.delete(int3)                                                       # STEP 52
avl2.delete(int2)                                                       # STEP 53
int3 = 13                                                               # STEP 54
int2 = 1                                                                # STEP 55
avl2.delete(int2)                                                       # STEP 56
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104a1f878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
avl2 = avl.AVLTree()                                                     # STEP 0
int3 = 14                                                                # STEP 1
int2 = 19                                                                # STEP 2
int1 = 14                                                                # STEP 3
int0 = 17                                                                # STEP 4
avl2.delete(int0)                                                        # STEP 5
int0 = 7                                                                 # STEP 6
avl2.delete(int0)                                                        # STEP 7
result = avl2.inorder()                                                  # STEP 8
int0 = 9                                                                 # STEP 9
avl1 = avl.AVLTree()                                                    # STEP 10
avl1.insert(int2)                                                       # STEP 11
int2 = 6                                                                # STEP 12
avl1.delete(int1)                                                       # STEP 13
int1 = 8                                                                # STEP 14
avl2.insert(int2)                                                       # STEP 15
avl2.delete(int3)                                                       # STEP 16
avl2.delete(int3)                                                       # STEP 17
avl1.insert(int1)                                                       # STEP 18
avl2.insert(int3)                                                       # STEP 19
int1 = 8                                                                # STEP 20
int3 = 9                                                                # STEP 21
int2 = 9                                                                # STEP 22
avl1.delete(int0)                                                       # STEP 23
int0 = 3                                                                # STEP 24
avl1.insert(int2)                                                       # STEP 25
int2 = 14                                                               # STEP 26
avl2 = avl.AVLTree()                                                    # STEP 27
avl1.delete(int2)                                                       # STEP 28
int2 = 15                                                               # STEP 29
avl2.insert(int0)                                                       # STEP 30
int0 = 19                                                               # STEP 31
avl2.insert(int0)                                                       # STEP 32
int0 = 3                                                                # STEP 33
avl2.insert(int3)                                                       # STEP 34
avl1.insert(int1)                                                       # STEP 35
avl2.delete(int0)                                                       # STEP 36
int3 = 1                                                                # STEP 37
int1 = 15                                                               # STEP 38
avl2.insert(int2)                                                       # STEP 39
int2 = 6                                                                # STEP 40
int0 = 9                                                                # STEP 41
avl1.delete(int0)                                                       # STEP 42
int0 = 19                                                               # STEP 43
avl1.insert(int0)                                                       # STEP 44
int0 = 3                                                                # STEP 45
avl2.insert(int3)                                                       # STEP 46
avl2.delete(int1)                                                       # STEP 47
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104a94098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
192 BRANCHES COVERED
146 STATEMENTS COVERED
