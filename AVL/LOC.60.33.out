Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99764.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104c60b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 48 steps

SAVING TEST AS failure.99764.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 10                                                                # STEP 0
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int0 = 11                                                                # STEP 1
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 2
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 3
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                        # STEP 4
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                        # STEP 5
ACTION: avl2.insert(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([10]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 6
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int2 = 13                                                                # STEP 7
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([10, 13]) : <type 'set'>
==================================================
int0 = 20                                                                # STEP 9
ACTION: int0 = 20 
int0 = 11 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 10
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 11
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([13]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 12
ACTION: result = avl2.find(int2) 
int2 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 13
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([20, 13]) : <type 'set'>
==================================================
int2 = 15                                                               # STEP 14
ACTION: int2 = 15 
int2 = 13 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 15
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int0)                                                       # STEP 16
ACTION: avl2.delete(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([13]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 17
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([13, 15]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 18
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([20, 13, 15]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 19
ACTION: int3 = 17 
int3 = 10 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 6                                                                # STEP 20
ACTION: int0 = 6 
int0 = 20 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 21
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 22
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 23
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 24
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 25
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17, 20, 13]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 26
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 27
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 28
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17, 20, 13]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 29
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                       # STEP 30
ACTION: avl2.delete(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 31
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([20, 13]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 32
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 20, 13]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 33
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.inorder()                                                 # STEP 34
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.find(int2)                                                # STEP 35
ACTION: result = avl2.find(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 36
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 37
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
result = avl2.inorder()                                                 # STEP 39
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 40
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int2 = 17                                                               # STEP 41
ACTION: int2 = 17 
int2 = 15 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
result = avl2.find(int0)                                                # STEP 42
ACTION: result = avl2.find(int0) 
int0 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
int3 = 14                                                               # STEP 43
ACTION: int3 = 14 
int3 = 17 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 44
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 45
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([17, 20, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([6, 13, 15, 17, 20]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 46
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 47
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058a1908> : <type 'instance'>
avl_REF2 = set([6, 13, 15, 17, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([6, 13, 15, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058a8680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058b0c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 60 steps

SAVING TEST AS failure.99764.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 10                                                                # STEP 0
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int2 = 15                                                                # STEP 1
ACTION: int2 = 15 
int2 = None : <type 'NoneType'>
=> int2 = 15 : <type 'int'>
==================================================
int0 = 4                                                                 # STEP 2
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
int1 = 18                                                                # STEP 3
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int0)                                                 # STEP 6
ACTION: result = avl0.find(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                        # STEP 8
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
int0 = 18                                                                # STEP 9
ACTION: int0 = 18 
int0 = 4 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 10
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 11
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 18]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 13
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([10, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 15
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 16
ACTION: int0 = 1 
int0 = 18 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 17
ACTION: result = avl0.find(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 18
ACTION: result = avl0.find(int2) 
int2 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 5                                                                # STEP 19
ACTION: int2 = 5 
int2 = 15 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 17                                                               # STEP 21
ACTION: int3 = 17 
int3 = 10 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 23
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 20                                                               # STEP 25
ACTION: int0 = 20 
int0 = 1 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 26
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 20                                                               # STEP 27
ACTION: int2 = 20 
int2 = 5 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 28
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 5]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 30
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 31
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int0)                                                # STEP 32
ACTION: result = avl0.find(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 33
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 34
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 5]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 35
ACTION: int0 = 18 
int0 = 20 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 36
ACTION: int3 = 1 
int3 = 17 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 37
ACTION: avl0.delete(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 38
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 39
ACTION: int2 = 1 
int2 = 20 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 40
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 41
ACTION: avl0.insert(int1) 
int1 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([17, 18, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 42
ACTION: avl0.insert(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 43
ACTION: avl1.delete(int1) 
int1 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 10                                                               # STEP 44
ACTION: int0 = 10 
int0 = 18 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 45
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 14                                                               # STEP 46
ACTION: int3 = 14 
int3 = 1 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 47
ACTION: int1 = 6 
int1 = 18 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 48
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 49
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 18, 10, 5]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 50
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 51
ACTION: avl1.insert(int1) 
int1 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([6, 14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 52
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 53
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 6, 14]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 54
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 55
ACTION: avl0.delete(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058b0fc8> : <type 'instance'>
avl_REF0 = set([17, 18, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 10                                                               # STEP 56
ACTION: int1 = 10 
int1 = 6 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 57
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 10, 6, 14]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 58
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104b442d8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 59
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058bf998> : <type 'instance'>
avl_REF1 = set([1, 10, 6, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 6, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b44680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  14 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 20 [0:0] L
set([1, 9, 12, 14, 16, 17, 20])
  14 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 20 [0:0] L
set([1, 9, 12, 14, 16, 17, 20])
  14 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 12 [0:0] L
-- > 20 [1:1]
---- < 16 [0:0] L
set([1, 9, 12, 14, 16, 20])
  14 [2:0]
-- < 9 [1:0]
---- < 1 [0:0] L
---- > 12 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 20 [0:0] L
set([1, 9, 12, 14, 16, 17, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104eeff80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 74 steps

SAVING TEST AS failure.99764.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 10                                                                # STEP 0
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 1
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 3                                                                 # STEP 2
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
int0 = 13                                                                # STEP 3
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                        # STEP 5
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 13]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 7
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                 # STEP 8
ACTION: result = avl1.find(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int2)                                                        # STEP 9
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 3, 13]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 10
ACTION: int3 = 7 
int3 = 13 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 11
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 12
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([10, 3, 13, 7]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 13
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
int0 = 14                                                               # STEP 16
ACTION: int0 = 14 
int0 = 13 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 17
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([14, 7]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 18
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 19
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 3, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([10, 3, 13]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([10, 13]) : <type 'set'>
==================================================
int1 = 11                                                               # STEP 22
ACTION: int1 = 11 
int1 = 10 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int0 = 4                                                                # STEP 23
ACTION: int0 = 4 
int0 = 14 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 24
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([10, 11, 13]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 25
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 26
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 27
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 11, 4, 13]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 28
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 29
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11, 7]) : <type 'set'>
==================================================
avl2 == avl1                                                            # STEP 30
ACTION: avl2 == avl1 
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
avl_REF1 = set([10, 11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF1 
==================================================
avl0.delete(int2)                                                       # STEP 31
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 32
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int2 = 4                                                                # STEP 33
ACTION: int2 = 4 
int2 = 3 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int3 = 8                                                                # STEP 34
ACTION: int3 = 8 
int3 = 7 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
int1 = 15                                                               # STEP 35
ACTION: int1 = 15 
int1 = 11 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 11                                                               # STEP 36
ACTION: int0 = 11 
int0 = 4 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 38
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 39
ACTION: avl2.delete(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 40
ACTION: avl1.delete(int2) 
int2 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([10, 11, 13]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 10                                                               # STEP 42
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 43
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int1)                                                       # STEP 44
ACTION: avl2.insert(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 45
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([15, 11, 7]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 46
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([15, 11, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 47
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 17                                                               # STEP 48
ACTION: int0 = 17 
int0 = 11 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 49
ACTION: int1 = 3 
int1 = 15 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 50
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x104b25a70> : <type 'instance'>
avl_REF0 = set([15, 11, 7]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x104b13f38> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 51
ACTION: result = avl1.find(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 11, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 52
ACTION: avl2.delete(int0) 
int0 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl0.find(int2)                                                # STEP 53
ACTION: result = avl0.find(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b13f38> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 17                                                               # STEP 54
ACTION: int2 = 17 
int2 = 10 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 55
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b13f38> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 56
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 11, 13, 17]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 57
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([10, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([8, 10, 11, 13, 17]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 58
ACTION: int3 = 4 
int3 = 8 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 59
ACTION: avl2.delete(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 9                                                                # STEP 60
ACTION: int0 = 9 
int0 = 17 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 61
ACTION: int1 = 3 
int1 = 3 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 62
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([8, 10, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 63
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([8, 10, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 2                                                                # STEP 64
ACTION: int1 = 2 
int1 = 3 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 65
ACTION: int3 = 4 
int3 = 4 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 66
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b13f38> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 2]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 67
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b13f38> : <type 'instance'>
avl_REF0 = set([8, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 68
ACTION: avl2.insert(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 11, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 69
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104ad59e0> : <type 'instance'>
avl_REF1 = set([8, 10, 11, 13, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([4, 8, 10, 11, 13, 17]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 70
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([17, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 71
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b13f38> : <type 'instance'>
avl_REF0 = set([8, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 72
ACTION: avl2.insert(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([17, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 11, 4, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 73
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104b30ab8> : <type 'instance'>
avl_REF2 = set([17, 11, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([11, 4, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b4ed40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #5 STEP #0 (0:00:32.998330) Fri Apr 28 04:51:53 2017 [ 161 stmts 214 branches ]
  5 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
set([1, 2, 4, 5, 10, 11, 15])
  5 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
set([1, 2, 4, 5, 10, 11, 15])
  5 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
set([1, 2, 4, 5, 10, 11, 15])
  5 [3:-1]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [2:1]
---- < 10 [1:1]
------ < 7 [0:0] L
---- > 15 [0:0] L
set([1, 2, 4, 5, 7, 10, 11, 15])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b065f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 90 steps

SAVING TEST AS failure.99764.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 11                                                                # STEP 0
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
int2 = 10                                                                # STEP 1
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 2
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int3)                                                        # STEP 4
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                        # STEP 5
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 4                                                                 # STEP 6
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
avl1.delete(int1)                                                        # STEP 7
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int2)                                                 # STEP 8
ACTION: result = avl1.find(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.insert(int3)                                                        # STEP 9
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 10
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 13]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 11
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 12
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int2 = 5                                                                # STEP 13
ACTION: int2 = 5 
int2 = 10 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 4, 13]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 16
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 17
ACTION: avl1.delete(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 18
ACTION: avl1.delete(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([11, 13]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 19
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 20
ACTION: avl1.delete(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl1.inorder()                                                 # STEP 21
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4, 13]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 23
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 13, 5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 24
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([4, 13, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 25
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 4, 13, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 26
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([11, 4, 5]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 27
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11, 4, 13, 5]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 29
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 30
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 31
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
result = avl0.find(int3)                                                # STEP 32
ACTION: result = avl0.find(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 33
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 34
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int2)                                                       # STEP 35
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 36
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 37
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([11, 4, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([4, 13, 5]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 38
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 5]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 39
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 40
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x104eefa28> : <type 'instance'>
avl_REF1 = set([4, 13, 5]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 41
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 42
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 43
ACTION: avl1.insert(int0) 
int0 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 2                                                                # STEP 44
ACTION: int0 = 2 
int0 = 4 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 45
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 5]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 46
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 47
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 48
ACTION: avl2.delete(int3) 
int3 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 13                                                               # STEP 49
ACTION: int3 = 13 
int3 = 13 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 50
ACTION: int0 = 1 
int0 = 2 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 51
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
int1 = 15                                                               # STEP 52
ACTION: int1 = 15 
int1 = 11 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 53
ACTION: int2 = 11 
int2 = 5 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 54
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([5, 13]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 55
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([4, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 5, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 56
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([11, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([5]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 57
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 58
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([4, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11, 4, 5, 15]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 59
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 10                                                               # STEP 60
ACTION: int3 = 10 
int3 = 13 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 61
ACTION: int1 = 20 
int1 = 15 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 62
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 2                                                                # STEP 63
ACTION: int2 = 2 
int2 = 11 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 64
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([11, 4, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 65
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 66
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 67
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([11, 4, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 11, 4, 5, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 68
ACTION: avl1.insert(int3) 
int3 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 11, 4, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 4, 5, 10, 11, 15]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 69
ACTION: int0 = 10 
int0 = 1 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 70
ACTION: int1 = 2 
int1 = 20 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 71
ACTION: result = avl2.find(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 72
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 4, 5, 10, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 4, 5, 10, 11, 15]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 73
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 5]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 74
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([10, 5, 13]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 75
ACTION: int0 = 7 
int0 = 10 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 76
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([10, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.display()                                                          # STEP 77
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 10, 11, 15]) : <type 'set'>
  5 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 2, 4, 5, 10, 11, 15])
==================================================
avl1.display()                                                          # STEP 78
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 10, 11, 15]) : <type 'set'>
  5 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 2, 4, 5, 10, 11, 15])
==================================================
avl1.insert(int1)                                                       # STEP 79
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 10, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 80
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([10, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([5, 13]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 81
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 10, 11, 15]) : <type 'set'>
  5 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [1:0]
---- < 10 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 2, 4, 5, 10, 11, 15])
==================================================
avl1.insert(int0)                                                       # STEP 82
ACTION: avl1.insert(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 10, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 4, 5, 7, 10, 11, 15]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 83
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 7, 10, 11, 15]) : <type 'set'>
  5 [3:-1]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 11 [2:1]
---- < 10 [1:1]
------ < 7 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 2, 4, 5, 7, 10, 11, 15])
==================================================
avl2.insert(int0)                                                       # STEP 84
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x104ad9ab8> : <type 'instance'>
avl_REF2 = set([10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 5, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 85
ACTION: avl1.delete(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 5, 7, 10, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 4, 5, 7, 10, 11, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 86
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 11                                                               # STEP 87
ACTION: int1 = 11 
int1 = 2 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 88
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104ad9dd0> : <type 'instance'>
avl_REF0 = set([5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.delete(int1)                                                       # STEP 89
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b0a908> : <type 'instance'>
avl_REF1 = set([1, 4, 5, 7, 10, 11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 4, 5, 7, 10, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104ae1878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b026c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 44 steps

SAVING TEST AS failure.99764.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 1
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int1 = 11                                                                # STEP 2
ACTION: int1 = 11 
int1 = None : <type 'NoneType'>
=> int1 = 11 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 3
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                        # STEP 4
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
int2 = 18                                                                # STEP 5
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                        # STEP 6
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 2                                                                 # STEP 7
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 8
ACTION: int1 = 3 
int1 = 11 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                        # STEP 9
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 11]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 2, 11]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 11
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 11]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 2, 11]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 13
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
result = avl0.find(int1)                                                # STEP 14
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 15
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 16
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int2 = 4                                                                # STEP 17
ACTION: int2 = 4 
int2 = 18 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 18
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0 == avl0                                                            # STEP 19
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
result = avl0.inorder()                                                 # STEP 20
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                 # STEP 21
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 2                                                                # STEP 22
ACTION: int0 = 2 
int0 = 2 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.find(int1)                                                # STEP 24
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 25
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 26
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 2, 11]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 28
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int0)                                                # STEP 29
ACTION: result = avl0.find(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 30
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 11                                                               # STEP 31
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
int2 = 1                                                                # STEP 32
ACTION: int2 = 1 
int2 = 4 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 33
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([3, 2, 4]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 34
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([3, 2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([2, 4]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 35
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 4]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 36
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 37
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.find(int0)                                                # STEP 39
ACTION: result = avl0.find(int0) 
int0 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 2, 11, 4]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 41
ACTION: int1 = 17 
int1 = 3 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 42
ACTION: avl0.insert(int1) 
int1 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 2, 4, 11, 17]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 43
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104b0bdd0> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 11, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 4, 11, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f09908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f02758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 63 steps

SAVING TEST AS failure.99764.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 1                                                                 # STEP 0
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 6                                                                 # STEP 2
ACTION: int2 = 6 
int2 = None : <type 'NoneType'>
=> int2 = 6 : <type 'int'>
==================================================
avl1 == avl1                                                             # STEP 3
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int2)                                                        # STEP 4
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 5
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                        # STEP 6
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 7
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                        # STEP 8
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 10
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 6]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 11
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([6]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 12
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int1 = 14                                                               # STEP 13
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 14
ACTION: avl1.insert(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 16                                                               # STEP 15
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 16
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 14]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 19
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 20
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 21
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 5                                                                # STEP 22
ACTION: int1 = 5 
int1 = 14 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 23
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 24
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.find(int2)                                                # STEP 25
ACTION: result = avl1.find(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 26
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int2 = 2                                                                # STEP 27
ACTION: int2 = 2 
int2 = 6 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 28
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 29
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 30
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 31
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 12                                                               # STEP 33
ACTION: int0 = 12 
int0 = 1 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 34
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int1)                                                # STEP 35
ACTION: result = avl1.find(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int1 = 14                                                               # STEP 36
ACTION: int1 = 14 
int1 = 5 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 38
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 39
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 41
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
int1 = 1                                                                # STEP 42
ACTION: int1 = 1 
int1 = 14 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 43
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
result = avl1.inorder()                                                 # STEP 44
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 45
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2, 14]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 46
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 14]) : <type 'set'>
==================================================
int1 = 13                                                               # STEP 47
ACTION: int1 = 13 
int1 = 1 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 48
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 1, 2, 14]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 49
ACTION: int0 = 12 
int0 = 12 : <type 'int'>
==================================================
int3 = 3                                                                # STEP 50
ACTION: int3 = 3 
int3 = 16 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 51
ACTION: avl1.delete(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([16, 1, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 52
ACTION: avl1.insert(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([16, 1, 2, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 1, 2, 3, 14]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 53
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([16, 1, 2, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 54
ACTION: avl1.insert(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([16, 1, 2, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 3, 13, 14, 16]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 55
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 13, 14, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 56
ACTION: avl1.insert(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 13, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 17                                                               # STEP 57
ACTION: int1 = 17 
int1 = 13 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 58
ACTION: int3 = 6 
int3 = 3 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 59
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 13, 14, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 3, 13, 14, 16, 17]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 60
ACTION: int2 = 9 
int2 = 2 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
int1 = 3                                                                # STEP 61
ACTION: int1 = 3 
int1 = 17 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 62
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b025a8> : <type 'instance'>
avl_REF1 = set([1, 2, 3, 13, 14, 16, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 13, 14, 16, 17]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104edd7a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.58500169664 PERCENT COVERED
61.1788609028 TOTAL RUNTIME
8 EXECUTED
479 TOTAL TEST OPERATIONS
16.9305150509 TIME SPENT EXECUTING TEST OPERATIONS
0.0492227077484 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
17.0577168465 TIME SPENT CHECKING PROPERTIES
33.9882318974 TOTAL TIME SPENT RUNNING SUT
0.00446772575378 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
6 FAILED
0 REPEATS OF FAILURES
6 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 10                                                                # STEP 0
int0 = 11                                                                # STEP 1
avl2 = avl.AVLTree()                                                     # STEP 2
avl2.delete(int3)                                                        # STEP 3
avl2.delete(int0)                                                        # STEP 4
avl2.insert(int3)                                                        # STEP 5
avl2.delete(int0)                                                        # STEP 6
int2 = 13                                                                # STEP 7
avl2.insert(int2)                                                        # STEP 8
int0 = 20                                                                # STEP 9
result = avl2.inorder()                                                 # STEP 10
avl2.delete(int3)                                                       # STEP 11
result = avl2.find(int2)                                                # STEP 12
avl2.insert(int0)                                                       # STEP 13
int2 = 15                                                               # STEP 14
result = avl2.inorder()                                                 # STEP 15
avl2.delete(int0)                                                       # STEP 16
avl2.insert(int2)                                                       # STEP 17
avl2.insert(int0)                                                       # STEP 18
int3 = 17                                                               # STEP 19
int0 = 6                                                                # STEP 20
avl2.insert(int3)                                                       # STEP 21
avl2.insert(int3)                                                       # STEP 22
avl2.insert(int2)                                                       # STEP 23
avl2.insert(int2)                                                       # STEP 24
avl2.delete(int2)                                                       # STEP 25
avl2.insert(int2)                                                       # STEP 26
avl2.insert(int2)                                                       # STEP 27
avl2.delete(int2)                                                       # STEP 28
avl2.delete(int2)                                                       # STEP 29
avl2.delete(int2)                                                       # STEP 30
avl2.delete(int3)                                                       # STEP 31
avl2.insert(int3)                                                       # STEP 32
result = avl2.inorder()                                                 # STEP 33
result = avl2.inorder()                                                 # STEP 34
result = avl2.find(int2)                                                # STEP 35
avl2.insert(int2)                                                       # STEP 36
result = avl2.inorder()                                                 # STEP 37
avl2.insert(int2)                                                       # STEP 38
result = avl2.inorder()                                                 # STEP 39
avl2.insert(int3)                                                       # STEP 40
int2 = 17                                                               # STEP 41
result = avl2.find(int0)                                                # STEP 42
int3 = 14                                                               # STEP 43
avl2.delete(int3)                                                       # STEP 44
avl2.insert(int0)                                                       # STEP 45
int1 = 4                                                                # STEP 46
avl2.delete(int2)                                                       # STEP 47
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058a8680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int3 = 10                                                                # STEP 0
int2 = 15                                                                # STEP 1
int0 = 4                                                                 # STEP 2
int1 = 18                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int3)                                                        # STEP 5
result = avl0.find(int0)                                                 # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl0.insert(int3)                                                        # STEP 8
int0 = 18                                                                # STEP 9
avl0.delete(int3)                                                       # STEP 10
avl0.insert(int3)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
avl0.insert(int1)                                                       # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.delete(int0)                                                       # STEP 15
int0 = 1                                                                # STEP 16
result = avl0.find(int2)                                                # STEP 17
result = avl0.find(int2)                                                # STEP 18
int2 = 5                                                                # STEP 19
avl0.delete(int0)                                                       # STEP 20
int3 = 17                                                               # STEP 21
avl0.delete(int2)                                                       # STEP 22
avl0.insert(int2)                                                       # STEP 23
avl0.delete(int3)                                                       # STEP 24
int0 = 20                                                               # STEP 25
avl0.insert(int2)                                                       # STEP 26
int2 = 20                                                               # STEP 27
avl0.delete(int1)                                                       # STEP 28
avl0.insert(int2)                                                       # STEP 29
avl0.delete(int0)                                                       # STEP 30
avl0.delete(int1)                                                       # STEP 31
result = avl0.find(int0)                                                # STEP 32
avl0.delete(int3)                                                       # STEP 33
avl0.insert(int3)                                                       # STEP 34
int0 = 18                                                               # STEP 35
int3 = 1                                                                # STEP 36
avl0.delete(int1)                                                       # STEP 37
avl1 = avl.AVLTree()                                                    # STEP 38
int2 = 1                                                                # STEP 39
avl0.delete(int0)                                                       # STEP 40
avl0.insert(int1)                                                       # STEP 41
avl0.insert(int0)                                                       # STEP 42
avl1.delete(int1)                                                       # STEP 43
int0 = 10                                                               # STEP 44
avl0.delete(int3)                                                       # STEP 45
int3 = 14                                                               # STEP 46
int1 = 6                                                                # STEP 47
avl1.delete(int0)                                                       # STEP 48
avl0.insert(int0)                                                       # STEP 49
avl1.insert(int3)                                                       # STEP 50
avl1.insert(int1)                                                       # STEP 51
avl1.delete(int0)                                                       # STEP 52
avl1.insert(int0)                                                       # STEP 53
avl1.insert(int3)                                                       # STEP 54
avl0.delete(int1)                                                       # STEP 55
int1 = 10                                                               # STEP 56
avl1.insert(int2)                                                       # STEP 57
avl2 = avl.AVLTree()                                                    # STEP 58
avl1.delete(int1)                                                       # STEP 59
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b44680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int1 = 10                                                                # STEP 0
int3 = 13                                                                # STEP 1
int2 = 3                                                                 # STEP 2
int0 = 13                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int1)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl0 = avl.AVLTree()                                                     # STEP 7
result = avl1.find(int3)                                                 # STEP 8
avl1.insert(int2)                                                        # STEP 9
int3 = 7                                                                # STEP 10
avl0.delete(int3)                                                       # STEP 11
avl1.insert(int3)                                                       # STEP 12
avl1 == avl1                                                            # STEP 13
avl0.delete(int3)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
int0 = 14                                                               # STEP 16
avl0.insert(int0)                                                       # STEP 17
avl2 = avl.AVLTree()                                                    # STEP 18
avl1.delete(int3)                                                       # STEP 19
avl0.delete(int0)                                                       # STEP 20
avl1.delete(int2)                                                       # STEP 21
int1 = 11                                                               # STEP 22
int0 = 4                                                                # STEP 23
avl1.insert(int1)                                                       # STEP 24
avl2.delete(int1)                                                       # STEP 25
avl2.insert(int1)                                                       # STEP 26
avl1.insert(int0)                                                       # STEP 27
avl0.delete(int0)                                                       # STEP 28
avl0.insert(int1)                                                       # STEP 29
avl2 == avl1                                                            # STEP 30
avl0.delete(int2)                                                       # STEP 31
avl1.insert(int1)                                                       # STEP 32
int2 = 4                                                                # STEP 33
int3 = 8                                                                # STEP 34
int1 = 15                                                               # STEP 35
int0 = 11                                                               # STEP 36
avl0.delete(int2)                                                       # STEP 37
avl0.insert(int0)                                                       # STEP 38
avl2.delete(int2)                                                       # STEP 39
avl1.delete(int2)                                                       # STEP 40
avl2.delete(int3)                                                       # STEP 41
int2 = 10                                                               # STEP 42
result = avl0.inorder()                                                 # STEP 43
avl2.insert(int1)                                                       # STEP 44
avl0.insert(int1)                                                       # STEP 45
avl0.insert(int1)                                                       # STEP 46
result = avl2.inorder()                                                 # STEP 47
int0 = 17                                                               # STEP 48
int1 = 3                                                                # STEP 49
avl0 = avl.AVLTree()                                                    # STEP 50
result = avl1.find(int0)                                                # STEP 51
avl2.delete(int0)                                                       # STEP 52
result = avl0.find(int2)                                                # STEP 53
int2 = 17                                                               # STEP 54
avl0.insert(int3)                                                       # STEP 55
avl1.insert(int0)                                                       # STEP 56
avl1.insert(int3)                                                       # STEP 57
int3 = 4                                                                # STEP 58
avl2.delete(int1)                                                       # STEP 59
int0 = 9                                                                # STEP 60
int1 = 3                                                                # STEP 61
avl1.delete(int3)                                                       # STEP 62
avl1.delete(int1)                                                       # STEP 63
int1 = 2                                                                # STEP 64
int3 = 4                                                                # STEP 65
avl0.insert(int1)                                                       # STEP 66
avl0.delete(int2)                                                       # STEP 67
avl2.insert(int2)                                                       # STEP 68
avl1.insert(int3)                                                       # STEP 69
avl2.delete(int1)                                                       # STEP 70
avl0.delete(int1)                                                       # STEP 71
avl2.insert(int3)                                                       # STEP 72
avl2.delete(int2)                                                       # STEP 73
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b4ed40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 3
int1 = 11                                                                # STEP 0
int2 = 10                                                                # STEP 1
int3 = 13                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl1.delete(int3)                                                        # STEP 4
avl1.delete(int2)                                                        # STEP 5
int0 = 4                                                                 # STEP 6
avl1.delete(int1)                                                        # STEP 7
result = avl1.find(int2)                                                 # STEP 8
avl1.insert(int3)                                                        # STEP 9
avl1.insert(int1)                                                       # STEP 10
result = avl1.inorder()                                                 # STEP 11
avl1.insert(int3)                                                       # STEP 12
int2 = 5                                                                # STEP 13
avl1.insert(int1)                                                       # STEP 14
avl1.insert(int0)                                                       # STEP 15
avl1.insert(int3)                                                       # STEP 16
avl1.delete(int2)                                                       # STEP 17
avl1.delete(int0)                                                       # STEP 18
avl1.delete(int1)                                                       # STEP 19
avl1.delete(int0)                                                       # STEP 20
result = avl1.inorder()                                                 # STEP 21
avl1.insert(int0)                                                       # STEP 22
avl1.insert(int2)                                                       # STEP 23
result = avl1.inorder()                                                 # STEP 24
avl1.insert(int1)                                                       # STEP 25
avl1.delete(int3)                                                       # STEP 26
avl1.insert(int0)                                                       # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl2 = avl.AVLTree()                                                    # STEP 29
avl0 = avl.AVLTree()                                                    # STEP 30
avl1.insert(int0)                                                       # STEP 31
result = avl0.find(int3)                                                # STEP 32
avl2.insert(int1)                                                       # STEP 33
result = avl2.inorder()                                                 # STEP 34
avl2.delete(int2)                                                       # STEP 35
avl1.insert(int2)                                                       # STEP 36
avl1.delete(int1)                                                       # STEP 37
avl2.insert(int2)                                                       # STEP 38
avl0.delete(int1)                                                       # STEP 39
avl1 = avl.AVLTree()                                                    # STEP 40
avl1.insert(int0)                                                       # STEP 41
avl2.delete(int3)                                                       # STEP 42
avl1.insert(int0)                                                       # STEP 43
int0 = 2                                                                # STEP 44
avl1.insert(int2)                                                       # STEP 45
avl0.insert(int0)                                                       # STEP 46
avl0.delete(int0)                                                       # STEP 47
avl2.delete(int3)                                                       # STEP 48
int3 = 13                                                               # STEP 49
int0 = 1                                                                # STEP 50
avl0.insert(int2)                                                       # STEP 51
int1 = 15                                                               # STEP 52
int2 = 11                                                               # STEP 53
avl0.insert(int3)                                                       # STEP 54
avl1.insert(int1)                                                       # STEP 55
avl2.delete(int2)                                                       # STEP 56
avl0.delete(int2)                                                       # STEP 57
avl1.insert(int2)                                                       # STEP 58
avl0.insert(int3)                                                       # STEP 59
int3 = 10                                                               # STEP 60
int1 = 20                                                               # STEP 61
avl2.delete(int2)                                                       # STEP 62
int2 = 2                                                                # STEP 63
avl1.delete(int1)                                                       # STEP 64
avl2.delete(int1)                                                       # STEP 65
avl2.delete(int1)                                                       # STEP 66
avl1.insert(int0)                                                       # STEP 67
avl1.insert(int3)                                                       # STEP 68
int0 = 10                                                               # STEP 69
int1 = 2                                                                # STEP 70
result = avl2.find(int2)                                                # STEP 71
avl1.insert(int2)                                                       # STEP 72
avl2.insert(int0)                                                       # STEP 73
avl0.insert(int3)                                                       # STEP 74
int0 = 7                                                                # STEP 75
avl0.delete(int1)                                                       # STEP 76
avl1.display()                                                          # STEP 77
avl1.display()                                                          # STEP 78
avl1.insert(int1)                                                       # STEP 79
avl0.delete(int3)                                                       # STEP 80
avl1.display()                                                          # STEP 81
avl1.insert(int0)                                                       # STEP 82
avl1.display()                                                          # STEP 83
avl2.insert(int0)                                                       # STEP 84
avl1.delete(int1)                                                       # STEP 85
avl0.delete(int3)                                                       # STEP 86
int1 = 11                                                               # STEP 87
result = avl0.inorder()                                                 # STEP 88
avl1.delete(int1)                                                       # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104ae1878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 4
avl0 = avl.AVLTree()                                                     # STEP 0
result = avl0.inorder()                                                  # STEP 1
int1 = 11                                                                # STEP 2
avl0.delete(int1)                                                        # STEP 3
avl0.insert(int1)                                                        # STEP 4
int2 = 18                                                                # STEP 5
avl0.delete(int2)                                                        # STEP 6
int0 = 2                                                                 # STEP 7
int1 = 3                                                                 # STEP 8
avl0.insert(int0)                                                        # STEP 9
avl0.insert(int1)                                                       # STEP 10
avl0.delete(int1)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
avl0 == avl0                                                            # STEP 13
result = avl0.find(int1)                                                # STEP 14
avl0.insert(int1)                                                       # STEP 15
avl0.insert(int0)                                                       # STEP 16
int2 = 4                                                                # STEP 17
avl0.insert(int1)                                                       # STEP 18
avl0 == avl0                                                            # STEP 19
result = avl0.inorder()                                                 # STEP 20
result = avl0.inorder()                                                 # STEP 21
int0 = 2                                                                # STEP 22
avl0.insert(int0)                                                       # STEP 23
result = avl0.find(int1)                                                # STEP 24
avl0.insert(int2)                                                       # STEP 25
avl0.delete(int2)                                                       # STEP 26
avl0.insert(int2)                                                       # STEP 27
result = avl0.inorder()                                                 # STEP 28
result = avl0.find(int0)                                                # STEP 29
result = avl0.inorder()                                                 # STEP 30
int3 = 11                                                               # STEP 31
int2 = 1                                                                # STEP 32
avl0.delete(int3)                                                       # STEP 33
avl0.delete(int1)                                                       # STEP 34
avl0.insert(int2)                                                       # STEP 35
avl0.delete(int1)                                                       # STEP 36
avl0.insert(int0)                                                       # STEP 37
result = avl0.inorder()                                                 # STEP 38
result = avl0.find(int0)                                                # STEP 39
avl0.insert(int3)                                                       # STEP 40
int1 = 17                                                               # STEP 41
avl0.insert(int1)                                                       # STEP 42
avl0.delete(int2)                                                       # STEP 43
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f09908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 5
int0 = 1                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
int2 = 6                                                                 # STEP 2
avl1 == avl1                                                             # STEP 3
avl1.insert(int2)                                                        # STEP 4
avl1.insert(int2)                                                        # STEP 5
avl1.delete(int2)                                                        # STEP 6
avl1.delete(int2)                                                        # STEP 7
avl1.insert(int0)                                                        # STEP 8
avl1.insert(int0)                                                        # STEP 9
avl1.insert(int2)                                                       # STEP 10
avl1.delete(int0)                                                       # STEP 11
result = avl1.inorder()                                                 # STEP 12
int1 = 14                                                               # STEP 13
avl1.insert(int2)                                                       # STEP 14
int3 = 16                                                               # STEP 15
avl1.delete(int2)                                                       # STEP 16
avl1.insert(int0)                                                       # STEP 17
avl1.insert(int1)                                                       # STEP 18
avl1.insert(int1)                                                       # STEP 19
result = avl1.inorder()                                                 # STEP 20
avl1.delete(int2)                                                       # STEP 21
int1 = 5                                                                # STEP 22
avl1.insert(int0)                                                       # STEP 23
avl1.delete(int3)                                                       # STEP 24
result = avl1.find(int2)                                                # STEP 25
avl1.delete(int3)                                                       # STEP 26
int2 = 2                                                                # STEP 27
avl1.insert(int0)                                                       # STEP 28
avl1.delete(int0)                                                       # STEP 29
avl1.delete(int0)                                                       # STEP 30
avl1.delete(int3)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
int0 = 12                                                               # STEP 33
avl1.delete(int1)                                                       # STEP 34
result = avl1.find(int1)                                                # STEP 35
int1 = 14                                                               # STEP 36
avl1.insert(int2)                                                       # STEP 37
avl1.delete(int0)                                                       # STEP 38
avl1.delete(int0)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
avl1.delete(int2)                                                       # STEP 41
int1 = 1                                                                # STEP 42
avl1 == avl1                                                            # STEP 43
result = avl1.inorder()                                                 # STEP 44
avl1.insert(int2)                                                       # STEP 45
avl1.insert(int1)                                                       # STEP 46
int1 = 13                                                               # STEP 47
avl1.insert(int3)                                                       # STEP 48
int0 = 12                                                               # STEP 49
int3 = 3                                                                # STEP 50
avl1.delete(int1)                                                       # STEP 51
avl1.insert(int3)                                                       # STEP 52
result = avl1.inorder()                                                 # STEP 53
avl1.insert(int1)                                                       # STEP 54
result = avl1.inorder()                                                 # STEP 55
avl1.insert(int1)                                                       # STEP 56
int1 = 17                                                               # STEP 57
int3 = 6                                                                # STEP 58
avl1.insert(int1)                                                       # STEP 59
int2 = 9                                                                # STEP 60
int1 = 3                                                                # STEP 61
avl1.delete(int1)                                                       # STEP 62
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104edd7a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
