Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40924.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104225b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 96 steps

SAVING TEST AS failure.40924.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 5                                                                 # STEP 0
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
int3 = 3                                                                 # STEP 1
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 2
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 3
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 5
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                 # STEP 6
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 2                                                                 # STEP 7
ACTION: int2 = 2 
int2 = 5 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.insert(int0)                                                        # STEP 8
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
int0 = 18                                                                # STEP 9
ACTION: int0 = 18 
int0 = 16 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 10
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 11
ACTION: avl0.delete(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 13
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int3 = 8                                                                # STEP 14
ACTION: int3 = 8 
int3 = 3 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 3]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 14                                                               # STEP 17
ACTION: int1 = 14 
int1 = 5 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 8                                                                # STEP 19
ACTION: int3 = 8 
int3 = 8 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 20
ACTION: avl1.delete(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 18                                                               # STEP 21
ACTION: int3 = 18 
int3 = 8 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 5                                                                # STEP 23
ACTION: int0 = 5 
int0 = 18 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
int2 = 8                                                                # STEP 24
ACTION: int2 = 8 
int2 = 2 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 25
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 26
ACTION: int0 = 10 
int0 = 5 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 27
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 18, 3]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 28
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 10, 5]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 29
ACTION: result = avl1.find(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 30
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 13                                                               # STEP 32
ACTION: int3 = 13 
int3 = 18 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 33
ACTION: int2 = 12 
int2 = 8 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
int0 = 10                                                               # STEP 34
ACTION: int0 = 10 
int0 = 10 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 10, 5]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 36
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 38
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 18, 3, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 39
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 40
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 11                                                               # STEP 41
ACTION: int2 = 11 
int2 = 12 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 42
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 18, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 11, 18, 3, 14]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 43
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 44
ACTION: avl1 = avl.AVLTree() 
avl1 = <avlbug2.AVLTree instance at 0x10455dc68> : <type 'instance'>
avl_REF1 = set([16, 10, 5]) : <type 'set'>
=> avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 45
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 46
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 11, 18, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 47
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([8, 11, 18, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 8, 11, 13, 14, 18]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 48
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 49
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 50
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 51
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 14                                                               # STEP 52
ACTION: int2 = 14 
int2 = 11 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 53
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 54
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl0.find(int3)                                                # STEP 55
ACTION: result = avl0.find(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 56
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.find(int2)                                                # STEP 57
ACTION: result = avl0.find(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 58
ACTION: avl0.delete(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 8, 10, 11, 13, 18]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 59
ACTION: avl1.delete(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 60
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 61
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 62
ACTION: avl0.delete(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 63
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 64
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 7                                                                # STEP 65
ACTION: int0 = 7 
int0 = 10 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 66
ACTION: avl1.delete(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 11                                                               # STEP 67
ACTION: int1 = 11 
int1 = 14 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 68
ACTION: avl1.insert(int3) 
int3 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 69
ACTION: int3 = 4 
int3 = 13 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 70
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 3                                                                # STEP 71
ACTION: int2 = 3 
int2 = 14 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 72
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 73
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 74
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 75
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 13]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 76
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 77
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 78
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 79
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 7, 8, 10, 11, 13, 14, 18]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 80
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 81
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 4, 13]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 82
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 11                                                               # STEP 83
ACTION: int2 = 11 
int2 = 3 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 84
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([3, 13]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 85
ACTION: result = avl1.find(int3) 
int3 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 86
ACTION: result = avl0.find(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 7, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 87
ACTION: avl0.insert(int0) 
int0 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 7, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 88
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 89
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 7, 8, 10, 11, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([3, 7, 8, 10, 13, 14, 18]) : <type 'set'>
==================================================
int3 = 12                                                               # STEP 90
ACTION: int3 = 12 
int3 = 4 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 91
ACTION: int2 = 18 
int2 = 11 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 92
ACTION: avl1.insert(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 13, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 93
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 7, 8, 10, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 94
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x10445ef38> : <type 'instance'>
avl_REF1 = set([3, 13, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.delete(int2)                                                       # STEP 95
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x10455dcf8> : <type 'instance'>
avl_REF0 = set([3, 7, 8, 10, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([3, 7, 8, 10, 13, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104799680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #3 STEP #37 (0:00:30.050237) Mon May  1 02:40:26 2017 [ 134 stmts 178 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104646878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 29 steps

SAVING TEST AS failure.40924.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 10                                                                # STEP 0
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int0 = 1                                                                 # STEP 1
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int1 = 7                                                                 # STEP 2
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 3
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                        # STEP 4
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
int0 = 17                                                                # STEP 5
ACTION: int0 = 17 
int0 = 1 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                        # STEP 7
ACTION: avl0.delete(int0) 
int0 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 15                                                                # STEP 8
ACTION: int1 = 15 
int1 = 7 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 16                                                                # STEP 9
ACTION: int0 = 16 
int0 = 17 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 11
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 15                                                               # STEP 12
ACTION: int1 = 15 
int1 = 15 : <type 'int'>
==================================================
int3 = 19                                                               # STEP 13
ACTION: int3 = 19 
int3 = 10 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 14
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 18                                                               # STEP 15
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 16
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 17
ACTION: avl0.delete(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 18
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 18, 19]) : <type 'set'>
==================================================
int3 = 16                                                               # STEP 19
ACTION: int3 = 16 
int3 = 19 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 20
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 22
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 1, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([16, 1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 18, 19]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 25
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([16, 1, 18, 19]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 26
ACTION: int0 = 11 
int0 = 16 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 27
ACTION: avl0.insert(int0) 
int0 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([16, 1, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 11, 16, 18, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 28
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104646cf8> : <type 'instance'>
avl_REF0 = set([1, 11, 16, 18, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 11, 16, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104649290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 14
STOPPING TESTING DUE TO TIMEOUT
7.63234816499 PERCENT COVERED
60.2195699215 TOTAL RUNTIME
7 EXECUTED
539 TOTAL TEST OPERATIONS
23.9723548889 TIME SPENT EXECUTING TEST OPERATIONS
0.0721635818481 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.0624504089 TIME SPENT CHECKING PROPERTIES
48.0348052979 TOTAL TIME SPENT RUNNING SUT
0.00389432907104 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 5                                                                 # STEP 0
int3 = 3                                                                 # STEP 1
int2 = 5                                                                 # STEP 2
int0 = 16                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl1 = avl.AVLTree()                                                     # STEP 5
result = avl0.find(int2)                                                 # STEP 6
int2 = 2                                                                 # STEP 7
avl1.insert(int0)                                                        # STEP 8
int0 = 18                                                                # STEP 9
avl0.delete(int2)                                                       # STEP 10
avl0.delete(int3)                                                       # STEP 11
avl0.insert(int3)                                                       # STEP 12
avl0.delete(int1)                                                       # STEP 13
int3 = 8                                                                # STEP 14
avl0.insert(int3)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
int1 = 14                                                               # STEP 17
avl1.delete(int3)                                                       # STEP 18
int3 = 8                                                                # STEP 19
avl1.delete(int3)                                                       # STEP 20
int3 = 18                                                               # STEP 21
avl0.delete(int0)                                                       # STEP 22
int0 = 5                                                                # STEP 23
int2 = 8                                                                # STEP 24
avl1.insert(int0)                                                       # STEP 25
int0 = 10                                                               # STEP 26
avl0.insert(int3)                                                       # STEP 27
avl1.insert(int0)                                                       # STEP 28
result = avl1.find(int2)                                                # STEP 29
avl1.delete(int0)                                                       # STEP 30
avl1.delete(int2)                                                       # STEP 31
int3 = 13                                                               # STEP 32
int2 = 12                                                               # STEP 33
int0 = 10                                                               # STEP 34
avl1.insert(int0)                                                       # STEP 35
avl1.delete(int3)                                                       # STEP 36
avl0.delete(int2)                                                       # STEP 37
avl0.insert(int1)                                                       # STEP 38
avl1.delete(int1)                                                       # STEP 39
result = avl1.inorder()                                                 # STEP 40
int2 = 11                                                               # STEP 41
avl0.insert(int2)                                                       # STEP 42
avl1.delete(int3)                                                       # STEP 43
avl1 = avl.AVLTree()                                                    # STEP 44
avl1.delete(int2)                                                       # STEP 45
avl0.insert(int1)                                                       # STEP 46
avl0.insert(int3)                                                       # STEP 47
avl0.insert(int1)                                                       # STEP 48
avl1.delete(int0)                                                       # STEP 49
avl0.insert(int0)                                                       # STEP 50
avl1.delete(int0)                                                       # STEP 51
int2 = 14                                                               # STEP 52
avl0.insert(int1)                                                       # STEP 53
avl1.delete(int1)                                                       # STEP 54
result = avl0.find(int3)                                                # STEP 55
avl0.insert(int2)                                                       # STEP 56
result = avl0.find(int2)                                                # STEP 57
avl0.delete(int1)                                                       # STEP 58
avl1.delete(int3)                                                       # STEP 59
avl0.insert(int0)                                                       # STEP 60
avl0.delete(int2)                                                       # STEP 61
avl0.delete(int1)                                                       # STEP 62
avl0.insert(int1)                                                       # STEP 63
result = avl0.inorder()                                                 # STEP 64
int0 = 7                                                                # STEP 65
avl1.delete(int2)                                                       # STEP 66
int1 = 11                                                               # STEP 67
avl1.insert(int3)                                                       # STEP 68
int3 = 4                                                                # STEP 69
avl1.delete(int0)                                                       # STEP 70
int2 = 3                                                                # STEP 71
avl1.delete(int2)                                                       # STEP 72
avl0.delete(int3)                                                       # STEP 73
avl0.insert(int1)                                                       # STEP 74
avl1.insert(int2)                                                       # STEP 75
avl1.delete(int0)                                                       # STEP 76
avl1.delete(int3)                                                       # STEP 77
avl0.delete(int0)                                                       # STEP 78
avl0.insert(int0)                                                       # STEP 79
avl1.delete(int0)                                                       # STEP 80
avl1.insert(int3)                                                       # STEP 81
avl1.delete(int0)                                                       # STEP 82
int2 = 11                                                               # STEP 83
avl1.delete(int3)                                                       # STEP 84
result = avl1.find(int3)                                                # STEP 85
result = avl0.find(int3)                                                # STEP 86
avl0.insert(int0)                                                       # STEP 87
avl1.delete(int2)                                                       # STEP 88
avl0.delete(int1)                                                       # STEP 89
int3 = 12                                                               # STEP 90
int2 = 18                                                               # STEP 91
avl1.insert(int0)                                                       # STEP 92
avl0.insert(int2)                                                       # STEP 93
result = avl1.inorder()                                                 # STEP 94
avl0.delete(int2)                                                       # STEP 95
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104799680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int3 = 10                                                                # STEP 0
int0 = 1                                                                 # STEP 1
int1 = 7                                                                 # STEP 2
avl0 = avl.AVLTree()                                                     # STEP 3
avl0.insert(int0)                                                        # STEP 4
int0 = 17                                                                # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.delete(int0)                                                        # STEP 7
int1 = 15                                                                # STEP 8
int0 = 16                                                                # STEP 9
avl0.insert(int1)                                                       # STEP 10
avl0.delete(int3)                                                       # STEP 11
int1 = 15                                                               # STEP 12
int3 = 19                                                               # STEP 13
result = avl0.inorder()                                                 # STEP 14
int2 = 18                                                               # STEP 15
avl0.insert(int2)                                                       # STEP 16
avl0.delete(int1)                                                       # STEP 17
avl0.insert(int3)                                                       # STEP 18
int3 = 16                                                               # STEP 19
avl0.delete(int3)                                                       # STEP 20
avl0.insert(int2)                                                       # STEP 21
avl0.delete(int0)                                                       # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl0.delete(int0)                                                       # STEP 24
avl0.insert(int3)                                                       # STEP 25
int0 = 11                                                               # STEP 26
avl0.insert(int0)                                                       # STEP 27
avl0.delete(int2)                                                       # STEP 28
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104649290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
183 BRANCHES COVERED
138 STATEMENTS COVERED
