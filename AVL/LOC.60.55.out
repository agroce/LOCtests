Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.290.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10441c200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 45 steps

SAVING TEST AS failure.290.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl2 = avl.AVLTree()                                                     # STEP 0
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 18                                                                # STEP 1
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 2
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 3
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 4
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 5
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 6
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 16                                                                # STEP 7
ACTION: int3 = 16 
int3 = 18 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl2.delete(int3)                                                        # STEP 8
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                        # STEP 9
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int0 = 13                                                               # STEP 10
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 11
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 12
ACTION: avl2.delete(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 13
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 14
ACTION: avl2.insert(int3) 
int3 = 16 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([16]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 15
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int0)                                                       # STEP 16
ACTION: avl2.insert(int0) 
int0 = 13 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 13]) : <type 'set'>
==================================================
int0 = 11                                                               # STEP 17
ACTION: int0 = 11 
int0 = 13 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int3 = 10                                                               # STEP 18
ACTION: int3 = 10 
int3 = 16 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 19
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 19                                                               # STEP 20
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 21
ACTION: int2 = 10 
int2 = None : <type 'NoneType'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 22
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
result = avl2.find(int2)                                                # STEP 23
ACTION: result = avl2.find(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 24
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 11, 13]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 25
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([16, 10, 11, 13]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 26
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 10, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([16, 11, 13]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 27
ACTION: avl2.delete(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int1)                                                       # STEP 28
ACTION: avl2.insert(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 29
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 30
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 31
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 32
ACTION: avl2.delete(int3) 
int3 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.insert(int1)                                                       # STEP 33
ACTION: avl2.insert(int1) 
int1 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 34
ACTION: avl2.delete(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 35
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104126290> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 36
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104126290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 37
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104126290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 17                                                               # STEP 38
ACTION: int3 = 17 
int3 = 10 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 39
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 40
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104126290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 41
ACTION: avl2.insert(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104126290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 14                                                               # STEP 43
ACTION: int1 = 14 
int1 = 19 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 44
ACTION: avl2.delete(int0) 
int0 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1027c97a0> : <type 'instance'>
avl_REF2 = set([16, 19, 11, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([16, 19, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104128b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  7 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 13 [1:-1]
---- > 19 [0:0] L
set([1, 2, 4, 7, 13, 19])
  7 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 13 [1:-1]
---- > 19 [0:0] L
set([1, 2, 4, 7, 13, 19])
  7 [2:0]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 15 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
set([2, 4, 7, 13, 15, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046e6cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 79 steps

SAVING TEST AS failure.290.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x105910cf8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 1
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x105910cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x105910cf8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
==================================================
int0 = 13                                                                # STEP 3
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 17                                                                # STEP 4
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
int1 = 7                                                                 # STEP 7
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
result = avl1.find(int0)                                                 # STEP 8
ACTION: result = avl1.find(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int0)                                                        # STEP 9
ACTION: avl1.insert(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 9                                                                # STEP 10
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 11
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 12
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 13
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 15
ACTION: int1 = 7 
int1 = 7 : <type 'int'>
==================================================
int0 = 11                                                               # STEP 16
ACTION: int0 = 11 
int0 = 13 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 17
ACTION: int3 = 1 
int3 = 17 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 19
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 20
ACTION: avl0.delete(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int1 = 2                                                                # STEP 21
ACTION: int1 = 2 
int1 = 7 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 22
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 23
ACTION: int2 = 6 
int2 = 9 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 26
ACTION: avl0.delete(int0) 
int0 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 27
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 7]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 28
ACTION: result = avl0.find(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 30
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 19                                                               # STEP 31
ACTION: int2 = 19 
int2 = 6 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 13                                                               # STEP 32
ACTION: int1 = 13 
int1 = 2 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 33
ACTION: avl0.insert(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 13, 7]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 34
ACTION: int0 = 1 
int0 = 11 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 35
ACTION: int3 = 4 
int3 = 1 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
int1 = 12                                                               # STEP 36
ACTION: int1 = 12 
int1 = 13 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 38
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 39
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 4, 13, 7]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 41
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 12]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 42
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 43
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 12]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 44
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 2, 4, 13, 7]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 45
ACTION: result = avl0.find(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 13, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 46
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 47
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 48
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 49
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 50
ACTION: int3 = 19 
int3 = 4 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 51
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 4, 7, 13, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 52
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 19]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 53
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 7, 13, 19]) : <type 'set'>
  7 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 13 [1:-1]
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 2, 4, 7, 13, 19])
==================================================
avl0.display()                                                          # STEP 54
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 7, 13, 19]) : <type 'set'>
  7 [2:0]
-- < 2 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 13 [1:-1]
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 2, 4, 7, 13, 19])
==================================================
avl0.delete(int0)                                                       # STEP 55
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([1, 2, 4, 7, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 4, 7, 13, 19]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 56
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 4, 7, 13]) : <type 'set'>
==================================================
int0 = 15                                                               # STEP 57
ACTION: int0 = 15 
int0 = 1 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 58
ACTION: int1 = 7 
int1 = 12 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 59
ACTION: int2 = 17 
int2 = 19 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 60
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl1                                                            # STEP 61
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13]) : <type 'set'>
avl_REF1 = set([1, 2, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl1.insert(int2)                                                       # STEP 62
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 19, 17]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 63
ACTION: int2 = 1 
int2 = 17 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 64
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 4, 7, 13, 15]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 65
ACTION: int0 = 17 
int0 = 15 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 66
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([2, 4, 7, 13, 15, 19]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 67
ACTION: int3 = 13 
int3 = 19 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 68
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13, 15, 19]) : <type 'set'>
  7 [2:0]
-- < 2 [1:-1]
---- > 4 [0:0] L
-- > 15 [1:0]
---- < 13 [0:0] L
---- > 19 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 4, 7, 13, 15, 19])
==================================================
avl1.insert(int1)                                                       # STEP 69
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 19, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 19, 17, 7]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 70
ACTION: int1 = 20 
int1 = 7 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 71
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 19, 17, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
result = avl1.find(int0)                                                # STEP 72
ACTION: result = avl1.find(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 19, 17, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 73
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 19, 17, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 2, 19, 7]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 74
ACTION: int2 = 20 
int2 = 1 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 75
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 4, 7, 13, 15, 19, 20]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 76
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1.insert(int0)                                                       # STEP 77
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041289e0> : <type 'instance'>
avl_REF1 = set([1, 2, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 19, 17, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046fd368> : <type 'instance'>
avl_REF0 = set([2, 4, 7, 13, 15, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([2, 4, 7, 15, 19, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046c2248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  13 [3:1]
-- < 4 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 8 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 2, 4, 8, 13, 15, 18, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1041bd248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 46 steps

SAVING TEST AS failure.290.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 12                                                                # STEP 0
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
int0 = 7                                                                 # STEP 1
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 2
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 3
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 4                                                                 # STEP 4
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 5
ACTION: avl1.delete(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 15                                                                # STEP 6
ACTION: int0 = 15 
int0 = 7 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int1)                                                        # STEP 7
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                        # STEP 8
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                        # STEP 9
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
int3 = 3                                                                # STEP 10
ACTION: int3 = 3 
int3 = 12 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([4, 15]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 12
ACTION: int0 = 18 
int0 = 15 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 13
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 20                                                               # STEP 15
ACTION: int1 = 20 
int1 = 4 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 16
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 4, 15]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 17
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 18
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([18, 4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([4, 15]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 19
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 13, 15]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 21
ACTION: int2 = 2 
int2 = 13 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 22
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([20, 4, 13, 15]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([20, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
result = avl1.find(int1)                                                # STEP 24
ACTION: result = avl1.find(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([20, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 25
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([20, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([20, 2, 4, 13, 15]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 26
ACTION: int2 = 1 
int2 = 2 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 27
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([20, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 28
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([20, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 4, 13, 15, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 29
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 30
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int3)                                                       # STEP 31
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int3)                                                       # STEP 33
ACTION: avl1.delete(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 34
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 4, 13, 15, 20]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 35
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 36
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 37
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 2, 4, 13, 15, 18]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 38
ACTION: result = avl1.find(int3) 
int3 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 39
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 4, 13, 15, 18, 20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 40
ACTION: avl1.delete(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 13, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([2, 4, 13, 15, 18, 20]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 41
ACTION: int1 = 8 
int1 = 20 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 42
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([2, 4, 13, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 4, 8, 13, 15, 18, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 43
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([2, 4, 8, 13, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 4, 8, 13, 15, 18, 20]) : <type 'set'>
==================================================
avl1.display()                                                          # STEP 44
ACTION: avl1.display() 
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 8, 13, 15, 18, 20]) : <type 'set'>
  13 [3:1]
-- < 4 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 8 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([1, 2, 4, 8, 13, 15, 18, 20])
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10469d998> : <type 'instance'>
avl_REF1 = set([1, 2, 4, 8, 13, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([1, 2, 4, 13, 15, 18, 20]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046ba368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #4 STEP #24 (0:00:30.076632) Fri Apr 28 05:59:08 2017 [ 144 stmts 191 branches ]
  13 [2:0]
-- < 4 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 16 [1:-1]
---- > 18 [0:0] L
set([1, 4, 5, 13, 16, 18])
  13 [2:0]
-- < 4 [1:0]
---- < 1 [0:0] L
---- > 5 [0:0] L
-- > 16 [1:-1]
---- > 18 [0:0] L
set([1, 4, 5, 13, 16, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046dcdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 39 steps

SAVING TEST AS failure.290.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 3                                                                 # STEP 0
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                        # STEP 2
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                        # STEP 3
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
int1 = 14                                                                # STEP 4
ACTION: int1 = 14 
int1 = None : <type 'NoneType'>
=> int1 = 14 : <type 'int'>
==================================================
avl0.insert(int2)                                                        # STEP 5
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                        # STEP 6
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                        # STEP 7
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 8
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                        # STEP 9
ACTION: avl0.delete(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 10
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 11
ACTION: int0 = 18 
int0 = None : <type 'NoneType'>
=> int0 = 18 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 12
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 13                                                               # STEP 13
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 14
ACTION: avl0.delete(int3) 
int3 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 8                                                                # STEP 15
ACTION: int3 = 8 
int3 = 13 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 16
ACTION: avl0.insert(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 14]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 17
ACTION: int2 = 19 
int2 = 3 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 18
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int1 = 1                                                                # STEP 19
ACTION: int1 = 1 
int1 = 14 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 20
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 3, 14]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 19, 3, 14]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 3                                                                # STEP 23
ACTION: int1 = 3 
int1 = 1 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 24
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                       # STEP 25
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 26
ACTION: avl0.delete(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 19, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 3, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 27
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 20                                                               # STEP 28
ACTION: int2 = 20 
int2 = 19 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 29
ACTION: int3 = 20 
int3 = 8 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 30
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 3, 20, 14]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 31
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                       # STEP 32
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 33
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 34
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1046f6710> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 35
ACTION: int0 = 6 
int0 = 18 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 36
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1046f6710> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 37
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 38
ACTION: avl0.delete(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1046dcea8> : <type 'instance'>
avl_REF0 = set([8, 3, 20, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 20, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046ce368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 13
STOPPING TESTING DUE TO TIMEOUT
8.44927044452 PERCENT COVERED
60.2353549004 TOTAL RUNTIME
8 EXECUTED
522 TOTAL TEST OPERATIONS
21.3247973919 TIME SPENT EXECUTING TEST OPERATIONS
0.0588843822479 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
21.5103600025 TIME SPENT CHECKING PROPERTIES
42.8351573944 TOTAL TIME SPENT RUNNING SUT
0.00480818748474 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
avl2 = avl.AVLTree()                                                     # STEP 0
int3 = 18                                                                # STEP 1
avl2.insert(int3)                                                        # STEP 2
avl2.delete(int3)                                                        # STEP 3
avl2.insert(int3)                                                        # STEP 4
avl2.delete(int3)                                                        # STEP 5
avl2.delete(int3)                                                        # STEP 6
int3 = 16                                                                # STEP 7
avl2.delete(int3)                                                        # STEP 8
avl2.delete(int3)                                                        # STEP 9
int0 = 13                                                               # STEP 10
avl2.delete(int0)                                                       # STEP 11
avl2.delete(int3)                                                       # STEP 12
avl2.delete(int0)                                                       # STEP 13
avl2.insert(int3)                                                       # STEP 14
result = avl2.inorder()                                                 # STEP 15
avl2.insert(int0)                                                       # STEP 16
int0 = 11                                                               # STEP 17
int3 = 10                                                               # STEP 18
result = avl2.inorder()                                                 # STEP 19
int1 = 19                                                               # STEP 20
int2 = 10                                                               # STEP 21
result = avl2.inorder()                                                 # STEP 22
result = avl2.find(int2)                                                # STEP 23
avl2.insert(int0)                                                       # STEP 24
avl2.insert(int2)                                                       # STEP 25
avl2.delete(int3)                                                       # STEP 26
avl2.delete(int1)                                                       # STEP 27
avl2.insert(int1)                                                       # STEP 28
avl2.delete(int2)                                                       # STEP 29
avl2.insert(int0)                                                       # STEP 30
avl2.insert(int0)                                                       # STEP 31
avl2.delete(int3)                                                       # STEP 32
avl2.insert(int1)                                                       # STEP 33
avl2.delete(int2)                                                       # STEP 34
avl0 = avl.AVLTree()                                                    # STEP 35
avl0.delete(int0)                                                       # STEP 36
avl0.delete(int2)                                                       # STEP 37
int3 = 17                                                               # STEP 38
avl2.delete(int3)                                                       # STEP 39
avl0.delete(int2)                                                       # STEP 40
avl2.insert(int0)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
int1 = 14                                                               # STEP 43
avl2.delete(int0)                                                       # STEP 44
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104128b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
avl1 = avl.AVLTree()                                                     # STEP 0
result = avl1.inorder()                                                  # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
int0 = 13                                                                # STEP 3
int3 = 17                                                                # STEP 4
avl1.delete(int3)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
int1 = 7                                                                 # STEP 7
result = avl1.find(int0)                                                 # STEP 8
avl1.insert(int0)                                                        # STEP 9
int2 = 9                                                                # STEP 10
avl0 = avl.AVLTree()                                                    # STEP 11
avl1.delete(int0)                                                       # STEP 12
result = avl0.inorder()                                                 # STEP 13
avl0.insert(int1)                                                       # STEP 14
int1 = 7                                                                # STEP 15
int0 = 11                                                               # STEP 16
int3 = 1                                                                # STEP 17
avl1.insert(int1)                                                       # STEP 18
avl1.delete(int1)                                                       # STEP 19
avl0.delete(int2)                                                       # STEP 20
int1 = 2                                                                # STEP 21
avl1.insert(int1)                                                       # STEP 22
int2 = 6                                                                # STEP 23
avl0.delete(int3)                                                       # STEP 24
avl1.delete(int2)                                                       # STEP 25
avl0.delete(int0)                                                       # STEP 26
avl0.insert(int1)                                                       # STEP 27
result = avl0.find(int1)                                                # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl0.delete(int3)                                                       # STEP 30
int2 = 19                                                               # STEP 31
int1 = 13                                                               # STEP 32
avl0.insert(int1)                                                       # STEP 33
int0 = 1                                                                # STEP 34
int3 = 4                                                                # STEP 35
int1 = 12                                                               # STEP 36
avl1.delete(int3)                                                       # STEP 37
avl1.delete(int1)                                                       # STEP 38
avl0.delete(int2)                                                       # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl1.insert(int1)                                                       # STEP 41
avl1.delete(int3)                                                       # STEP 42
avl1.insert(int0)                                                       # STEP 43
avl0.insert(int0)                                                       # STEP 44
result = avl0.find(int2)                                                # STEP 45
result = avl1.inorder()                                                 # STEP 46
avl1.insert(int0)                                                       # STEP 47
avl0.insert(int0)                                                       # STEP 48
avl1.delete(int1)                                                       # STEP 49
int3 = 19                                                               # STEP 50
avl0.insert(int2)                                                       # STEP 51
avl1.insert(int2)                                                       # STEP 52
avl0.display()                                                          # STEP 53
avl0.display()                                                          # STEP 54
avl0.delete(int0)                                                       # STEP 55
avl0.delete(int2)                                                       # STEP 56
int0 = 15                                                               # STEP 57
int1 = 7                                                                # STEP 58
int2 = 17                                                               # STEP 59
avl0.delete(int2)                                                       # STEP 60
avl0 == avl1                                                            # STEP 61
avl1.insert(int2)                                                       # STEP 62
int2 = 1                                                                # STEP 63
avl0.insert(int0)                                                       # STEP 64
int0 = 17                                                               # STEP 65
avl0.insert(int3)                                                       # STEP 66
int3 = 13                                                               # STEP 67
avl0.display()                                                          # STEP 68
avl1.insert(int1)                                                       # STEP 69
int1 = 20                                                               # STEP 70
avl1.insert(int2)                                                       # STEP 71
result = avl1.find(int0)                                                # STEP 72
avl1.delete(int0)                                                       # STEP 73
int2 = 20                                                               # STEP 74
avl0.insert(int1)                                                       # STEP 75
result = avl0.inorder()                                                 # STEP 76
avl1.insert(int0)                                                       # STEP 77
avl0.delete(int3)                                                       # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046c2248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int3 = 12                                                                # STEP 0
int0 = 7                                                                 # STEP 1
avl1 = avl.AVLTree()                                                     # STEP 2
avl1.delete(int0)                                                        # STEP 3
int1 = 4                                                                 # STEP 4
avl1.delete(int3)                                                        # STEP 5
int0 = 15                                                                # STEP 6
avl1.delete(int1)                                                        # STEP 7
avl1.delete(int1)                                                        # STEP 8
avl1.insert(int1)                                                        # STEP 9
int3 = 3                                                                # STEP 10
avl1.insert(int0)                                                       # STEP 11
int0 = 18                                                               # STEP 12
result = avl1.inorder()                                                 # STEP 13
avl1.insert(int1)                                                       # STEP 14
int1 = 20                                                               # STEP 15
avl1.insert(int0)                                                       # STEP 16
int2 = 13                                                               # STEP 17
avl1.delete(int0)                                                       # STEP 18
avl1.delete(int0)                                                       # STEP 19
avl1.insert(int2)                                                       # STEP 20
int2 = 2                                                                # STEP 21
avl1.insert(int1)                                                       # STEP 22
result = avl1.inorder()                                                 # STEP 23
result = avl1.find(int1)                                                # STEP 24
avl1.insert(int2)                                                       # STEP 25
int2 = 1                                                                # STEP 26
avl1.delete(int3)                                                       # STEP 27
avl1.insert(int2)                                                       # STEP 28
avl1.delete(int1)                                                       # STEP 29
avl1.delete(int0)                                                       # STEP 30
avl1.delete(int3)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
avl1.delete(int3)                                                       # STEP 33
avl1.insert(int1)                                                       # STEP 34
avl1.delete(int1)                                                       # STEP 35
result = avl1.inorder()                                                 # STEP 36
avl1.insert(int0)                                                       # STEP 37
result = avl1.find(int3)                                                # STEP 38
avl1.insert(int1)                                                       # STEP 39
avl1.delete(int2)                                                       # STEP 40
int1 = 8                                                                # STEP 41
avl1.insert(int1)                                                       # STEP 42
avl1.insert(int2)                                                       # STEP 43
avl1.display()                                                          # STEP 44
avl1.delete(int1)                                                       # STEP 45
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046ba368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 3
int2 = 3                                                                 # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
avl0.delete(int2)                                                        # STEP 2
avl0.insert(int2)                                                        # STEP 3
int1 = 14                                                                # STEP 4
avl0.insert(int2)                                                        # STEP 5
avl0.delete(int2)                                                        # STEP 6
avl0.insert(int2)                                                        # STEP 7
result = avl0.inorder()                                                  # STEP 8
avl0.delete(int2)                                                        # STEP 9
avl0.insert(int2)                                                       # STEP 10
int0 = 18                                                               # STEP 11
result = avl0.inorder()                                                 # STEP 12
int3 = 13                                                               # STEP 13
avl0.delete(int3)                                                       # STEP 14
int3 = 8                                                                # STEP 15
avl0.insert(int1)                                                       # STEP 16
int2 = 19                                                               # STEP 17
avl0 == avl0                                                            # STEP 18
int1 = 1                                                                # STEP 19
avl0.insert(int3)                                                       # STEP 20
avl0.insert(int2)                                                       # STEP 21
avl0.delete(int1)                                                       # STEP 22
int1 = 3                                                                # STEP 23
avl0 == avl0                                                            # STEP 24
avl0.delete(int0)                                                       # STEP 25
avl0.delete(int2)                                                       # STEP 26
result = avl0.inorder()                                                 # STEP 27
int2 = 20                                                               # STEP 28
int3 = 20                                                               # STEP 29
avl0.insert(int3)                                                       # STEP 30
result = avl0.inorder()                                                 # STEP 31
avl0.insert(int3)                                                       # STEP 32
avl0.insert(int2)                                                       # STEP 33
avl2 = avl.AVLTree()                                                    # STEP 34
int0 = 6                                                                # STEP 35
avl2.insert(int1)                                                       # STEP 36
avl0.insert(int2)                                                       # STEP 37
avl0.delete(int1)                                                       # STEP 38
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046ce368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
212 BRANCHES COVERED
160 STATEMENTS COVERED
