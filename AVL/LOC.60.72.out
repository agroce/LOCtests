Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.624.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 14 [0:0] L
set([1, 3, 4, 5, 14, 18])
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 14 [0:0] L
set([1, 3, 4, 5, 14, 18])
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 14 [0:0] L
set([1, 3, 4, 5, 14, 18])
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 18 [1:1]
---- < 14 [0:0] L
set([1, 3, 4, 5, 14, 18])
  10 [3:1]
-- < 7 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([1, 2, 7, 9, 10, 12, 15])
  10 [3:1]
-- < 7 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([1, 2, 7, 9, 10, 12, 15])
  10 [3:1]
-- < 7 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([1, 2, 7, 9, 10, 12, 15])
  10 [3:1]
-- < 7 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([1, 2, 7, 9, 10, 12, 15])
  10 [3:1]
-- < 7 [2:1]
---- < 2 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 12 [1:-1]
---- > 15 [0:0] L
set([1, 2, 7, 9, 10, 12, 15])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1052277e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 47 steps

SAVING TEST AS failure.624.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 10                                                                # STEP 0
ACTION: int3 = 10 
int3 = None : <type 'NoneType'>
=> int3 = 10 : <type 'int'>
==================================================
int0 = 9                                                                 # STEP 1
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
int1 = 16                                                                # STEP 2
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
int2 = 14                                                                # STEP 3
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                 # STEP 5
ACTION: result = avl0.find(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.insert(int0)                                                        # STEP 6
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 7
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                        # STEP 8
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16, 9]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 9
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 10
ACTION: int3 = 18 
int3 = 10 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 11
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 12
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 13
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 14
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([16]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 15
ACTION: result = avl0.find(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int0 = 15                                                               # STEP 16
ACTION: int0 = 15 
int0 = 9 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 17
ACTION: result = avl0.find(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 18
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([16, 15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 20
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int2 = 8                                                                # STEP 22
ACTION: int2 = 8 
int2 = 14 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 23
ACTION: result = avl0.find(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 25
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 26
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 28
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 16, 15]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 29
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 12                                                               # STEP 30
ACTION: int2 = 12 
int2 = 8 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 31
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int1)                                                       # STEP 32
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 15]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 33
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 34
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 35
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 36
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 37
ACTION: int2 = 10 
int2 = 12 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 38
ACTION: avl0.insert(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 39
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 40
ACTION: avl0.insert(int1) 
int1 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 16, 15]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 41
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 16, 10, 15]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 42
ACTION: int2 = 5 
int2 = 10 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 10, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 16, 10, 5, 15]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 44
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 45
ACTION: result = avl0.find(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 10, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 46
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058a5290> : <type 'instance'>
avl_REF0 = set([8, 16, 10, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 16, 10, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10589e3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #5 STEP #0 (0:00:33.400386) Fri Apr 28 06:51:03 2017 [ 155 stmts 208 branches ]
  9 [2:0]
-- < 6 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:-1]
---- > 15 [0:0] L
set([2, 6, 7, 9, 14, 15])
  9 [2:0]
-- < 6 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:-1]
---- > 15 [0:0] L
set([2, 6, 7, 9, 14, 15])
  9 [3:1]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 11, 14, 15])
  9 [3:1]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 11, 14, 15])
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:1]
------ < 10 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 10, 11, 14, 15])
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:1]
------ < 10 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 10, 11, 14, 15])
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 10 [0:0] L
------ > 12 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15])
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 10 [0:0] L
------ > 12 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15])
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 10 [0:0] L
------ > 12 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15])
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 12 [1:1]
------ < 10 [0:0] L
---- > 15 [0:0] L
set([2, 5, 6, 7, 9, 10, 12, 14, 15])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10524a878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 100 steps

SAVING TEST AS failure.624.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 6                                                                 # STEP 0
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 1
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                 # STEP 2
ACTION: result = avl2.find(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int2 = 14                                                                # STEP 3
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
avl2.insert(int3)                                                        # STEP 4
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 5
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                        # STEP 6
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 7
ACTION: avl2.delete(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                        # STEP 8
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
result = avl2.inorder()                                                  # STEP 9
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 10
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 11
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 12
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
result = avl2.find(int3)                                                # STEP 13
ACTION: result = avl2.find(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
int3 = 15                                                               # STEP 14
ACTION: int3 = 15 
int3 = 6 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 15
ACTION: avl2.delete(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
result = avl2.find(int3)                                                # STEP 16
ACTION: result = avl2.find(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 17
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 18
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([14]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 19
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int2)                                                       # STEP 20
ACTION: avl2.insert(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 21
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 7                                                                # STEP 22
ACTION: int2 = 7 
int2 = 14 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 23
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 25
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 9                                                                # STEP 26
ACTION: int0 = 9 
int0 = None : <type 'NoneType'>
=> int0 = 9 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 27
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([14, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 28
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([9, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 29
ACTION: avl2.insert(int3) 
int3 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 30
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 31
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
int3 = 2                                                                # STEP 32
ACTION: int3 = 2 
int3 = 15 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 33
ACTION: avl2.insert(int1) 
int1 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.find(int3)                                                # STEP 34
ACTION: result = avl2.find(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 35
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 36
ACTION: avl2.insert(int3) 
int3 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([9, 2, 15, 14, 7]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 37
ACTION: result = avl2.find(int2) 
int2 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 2, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int1 = 11                                                               # STEP 38
ACTION: int1 = 11 
int1 = 7 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int3 = 6                                                                # STEP 39
ACTION: int3 = 6 
int3 = 2 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 40
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 2, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 41
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 2, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 42
ACTION: avl2.insert(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([9, 2, 15, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
==================================================
avl2.display()                                                          # STEP 43
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
  9 [2:0]
-- < 6 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:-1]
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 6, 7, 9, 14, 15])
==================================================
int3 = 1                                                                # STEP 44
ACTION: int3 = 1 
int3 = 6 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 45
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 5                                                                # STEP 46
ACTION: int2 = 5 
int2 = 7 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl2.display()                                                          # STEP 47
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
  9 [2:0]
-- < 6 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:-1]
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 6, 7, 9, 14, 15])
==================================================
result = avl2.find(int0)                                                # STEP 48
ACTION: result = avl2.find(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 49
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 50
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 6, 7, 9, 11, 14, 15]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 51
ACTION: int0 = 18 
int0 = 9 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 52
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 6, 7, 9, 11, 14, 15, 18]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 53
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 11, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15, 18]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 54
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int2)                                                       # STEP 55
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 56
ACTION: avl2.delete(int0) 
int0 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
==================================================
int1 = 10                                                               # STEP 57
ACTION: int1 = 10 
int1 = 11 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
avl2.display()                                                          # STEP 58
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
  9 [3:1]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 11, 14, 15])
==================================================
avl2.display()                                                          # STEP 59
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
  9 [3:1]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [1:0]
---- < 11 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 11, 14, 15])
==================================================
avl2.delete(int2)                                                       # STEP 60
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 6, 7, 9, 11, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 61
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
==================================================
result = avl2.find(int2)                                                # STEP 62
ACTION: result = avl2.find(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
int0 = 18                                                               # STEP 63
ACTION: int0 = 18 
int0 = 18 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 64
ACTION: avl2.delete(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 6, 7, 9, 11, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 65
ACTION: avl2.insert(int2) 
int2 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 66
ACTION: avl2.insert(int1) 
int1 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 14, 15]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 67
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 68
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
int1 = 3                                                                # STEP 69
ACTION: int1 = 3 
int1 = 10 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 70
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.display()                                                          # STEP 71
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 14, 15]) : <type 'set'>
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:1]
------ < 10 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 10, 11, 14, 15])
==================================================
avl2.delete(int3)                                                       # STEP 72
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 12                                                               # STEP 73
ACTION: int3 = 12 
int3 = 1 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl2.display()                                                          # STEP 74
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 14, 15]) : <type 'set'>
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:1]
------ < 10 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 10, 11, 14, 15])
==================================================
avl0.delete(int3)                                                       # STEP 75
ACTION: avl0.delete(int3) 
int3 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 5                                                                # STEP 76
ACTION: int1 = 5 
int1 = 3 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 77
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.delete(int0)                                                       # STEP 78
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 4                                                                # STEP 79
ACTION: int0 = 4 
int0 = 18 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 80
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 81
ACTION: int2 = 11 
int2 = 5 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
int3 = 17                                                               # STEP 82
ACTION: int3 = 17 
int3 = 12 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 83
ACTION: result = avl0.find(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl2.display()                                                          # STEP 84
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 10 [0:0] L
------ > 12 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15])
==================================================
avl0.delete(int0)                                                       # STEP 85
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl2.delete(int0)                                                       # STEP 86
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 19                                                               # STEP 87
ACTION: int0 = 19 
int0 = 4 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 88
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.display()                                                          # STEP 89
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 10 [0:0] L
------ > 12 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15])
==================================================
avl2.display()                                                          # STEP 90
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 11 [1:0]
------ < 10 [0:0] L
------ > 12 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15])
==================================================
avl0.insert(int1)                                                       # STEP 91
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 9                                                                # STEP 92
ACTION: int1 = 9 
int1 = 5 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 93
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 11, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 10, 12, 14, 15]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 94
ACTION: int2 = 14 
int2 = 11 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl2.display()                                                          # STEP 95
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 12, 14, 15]) : <type 'set'>
  9 [3:0]
-- < 6 [2:1]
---- < 2 [1:-1]
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 14 [2:1]
---- < 12 [1:1]
------ < 10 [0:0] L
---- > 15 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 5, 6, 7, 9, 10, 12, 14, 15])
==================================================
avl0.delete(int0)                                                       # STEP 96
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057a4638> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 14                                                               # STEP 97
ACTION: int0 = 14 
int0 = 19 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 98
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int2)                                                       # STEP 99
ACTION: avl2.delete(int2) 
int2 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1058e8f38> : <type 'instance'>
avl_REF2 = set([2, 5, 6, 7, 9, 10, 12, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([2, 5, 6, 7, 9, 10, 12, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1057bd128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
set([1, 3, 4, 5, 7, 9, 10])
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
set([1, 3, 4, 5, 7, 9, 10])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1057be998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 74 steps

SAVING TEST AS failure.624.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 19                                                                # STEP 0
ACTION: int0 = 19 
int0 = None : <type 'NoneType'>
=> int0 = 19 : <type 'int'>
==================================================
int1 = 7                                                                 # STEP 1
ACTION: int1 = 7 
int1 = None : <type 'NoneType'>
=> int1 = 7 : <type 'int'>
==================================================
int2 = 1                                                                 # STEP 2
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
int3 = 14                                                                # STEP 3
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 5
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int0)                                                        # STEP 6
ACTION: avl0.delete(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 9                                                                 # STEP 7
ACTION: int0 = 9 
int0 = 19 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 8
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([14]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 9
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 10
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 11
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 12
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 13
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 14
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 15
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 16
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 17
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 7]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 18
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 9, 7]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([9, 7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 20
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 9                                                                # STEP 21
ACTION: int0 = 9 
int0 = 9 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 22
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 9, 7]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 23
ACTION: int1 = 14 
int1 = 7 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 24
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 10                                                               # STEP 25
ACTION: int3 = 10 
int3 = 14 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
result = avl0.find(int1)                                                # STEP 26
ACTION: result = avl0.find(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 27
ACTION: avl0.delete(int1) 
int1 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 28
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int0 = 16                                                               # STEP 29
ACTION: int0 = 16 
int0 = 9 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 30
ACTION: avl0.delete(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 5                                                                # STEP 31
ACTION: int2 = 5 
int2 = 1 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
int1 = 11                                                               # STEP 32
ACTION: int1 = 11 
int1 = 14 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 33
ACTION: result = avl0.find(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                       # STEP 34
ACTION: avl0.insert(int2) 
int2 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 9, 5, 7]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 35
ACTION: int3 = 4 
int3 = 10 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 36
ACTION: result = avl0.find(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 37
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 5, 7, 9, 16]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 38
ACTION: int0 = 8 
int0 = 16 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 39
ACTION: int2 = 16 
int2 = 5 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 40
ACTION: result = avl0.find(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 41
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 8                                                                # STEP 42
ACTION: int1 = 8 
int1 = 11 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 43
ACTION: avl0.delete(int2) 
int2 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 5, 7, 9]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 44
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 7                                                                # STEP 45
ACTION: int2 = 7 
int2 = 16 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 46
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 47
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int0)                                                       # STEP 48
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 3                                                                # STEP 49
ACTION: int1 = 3 
int1 = 8 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 50
ACTION: avl0.insert(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 51
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 3, 4, 5, 7, 9]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 52
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
==================================================
result = avl0.find(int2)                                                # STEP 53
ACTION: result = avl0.find(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int3 = 4                                                                # STEP 54
ACTION: int3 = 4 
int3 = 4 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 55
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 3, 5, 7, 8, 9]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 56
ACTION: int1 = 4 
int1 = 3 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 57
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int2 = 10                                                               # STEP 58
ACTION: int2 = 10 
int2 = 7 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 59
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int1)                                                       # STEP 60
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 61
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 8, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 62
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 3, 4, 5, 7, 9]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 63
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int2)                                                       # STEP 64
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
==================================================
avl0.display()                                                          # STEP 65
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 3, 4, 5, 7, 9, 10])
==================================================
avl0.display()                                                          # STEP 66
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
  5 [2:0]
-- < 3 [1:0]
---- < 1 [0:0] L
---- > 4 [0:0] L
-- > 9 [1:0]
---- < 7 [0:0] L
---- > 10 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([1, 3, 4, 5, 7, 9, 10])
==================================================
result = avl0.inorder()                                                 # STEP 67
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 68
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
result = avl0.find(int1)                                                # STEP 69
ACTION: result = avl0.find(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
result = avl0.find(int2)                                                # STEP 70
ACTION: result = avl0.find(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int3 = 20                                                               # STEP 71
ACTION: int3 = 20 
int3 = 4 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 72
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 9, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 3, 4, 5, 7, 8, 9, 10]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 73
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1057bed88> : <type 'instance'>
avl_REF0 = set([1, 3, 4, 5, 7, 8, 9, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 3, 4, 5, 7, 8, 9]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1059301b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.58500169664 PERCENT COVERED
63.6982970238 TOTAL RUNTIME
7 EXECUTED
521 TOTAL TEST OPERATIONS
22.2282879353 TIME SPENT EXECUTING TEST OPERATIONS
0.0585107803345 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
22.2831647396 TIME SPENT CHECKING PROPERTIES
44.5114526749 TOTAL TIME SPENT RUNNING SUT
0.00434374809265 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 10                                                                # STEP 0
int0 = 9                                                                 # STEP 1
int1 = 16                                                                # STEP 2
int2 = 14                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
result = avl0.find(int2)                                                 # STEP 5
avl0.insert(int0)                                                        # STEP 6
avl0.delete(int3)                                                        # STEP 7
avl0.insert(int1)                                                        # STEP 8
avl0.delete(int0)                                                        # STEP 9
int3 = 18                                                               # STEP 10
avl0.insert(int1)                                                       # STEP 11
avl0.delete(int3)                                                       # STEP 12
avl0.delete(int1)                                                       # STEP 13
avl0.insert(int1)                                                       # STEP 14
result = avl0.find(int1)                                                # STEP 15
int0 = 15                                                               # STEP 16
result = avl0.find(int3)                                                # STEP 17
avl0.insert(int0)                                                       # STEP 18
avl0.delete(int2)                                                       # STEP 19
avl0.delete(int2)                                                       # STEP 20
avl0.insert(int0)                                                       # STEP 21
int2 = 8                                                                # STEP 22
result = avl0.find(int3)                                                # STEP 23
avl0.delete(int3)                                                       # STEP 24
result = avl0.inorder()                                                 # STEP 25
avl0.delete(int1)                                                       # STEP 26
avl0.insert(int2)                                                       # STEP 27
avl0.insert(int1)                                                       # STEP 28
avl0.delete(int3)                                                       # STEP 29
int2 = 12                                                               # STEP 30
result = avl0.inorder()                                                 # STEP 31
avl0.delete(int1)                                                       # STEP 32
avl0.delete(int2)                                                       # STEP 33
avl0.delete(int0)                                                       # STEP 34
avl0.insert(int0)                                                       # STEP 35
avl0.delete(int0)                                                       # STEP 36
int2 = 10                                                               # STEP 37
avl0.insert(int0)                                                       # STEP 38
avl0.delete(int1)                                                       # STEP 39
avl0.insert(int1)                                                       # STEP 40
avl0.insert(int2)                                                       # STEP 41
int2 = 5                                                                # STEP 42
avl0.insert(int2)                                                       # STEP 43
int1 = 7                                                                # STEP 44
result = avl0.find(int2)                                                # STEP 45
avl0.delete(int0)                                                       # STEP 46
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10589e3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int3 = 6                                                                 # STEP 0
avl2 = avl.AVLTree()                                                     # STEP 1
result = avl2.find(int3)                                                 # STEP 2
int2 = 14                                                                # STEP 3
avl2.insert(int3)                                                        # STEP 4
result = avl2.inorder()                                                  # STEP 5
avl2.delete(int3)                                                        # STEP 6
avl2.delete(int2)                                                        # STEP 7
avl2.insert(int3)                                                        # STEP 8
result = avl2.inorder()                                                  # STEP 9
avl2.delete(int3)                                                       # STEP 10
avl2.insert(int2)                                                       # STEP 11
int1 = 7                                                                # STEP 12
result = avl2.find(int3)                                                # STEP 13
int3 = 15                                                               # STEP 14
avl2.delete(int2)                                                       # STEP 15
result = avl2.find(int3)                                                # STEP 16
result = avl2.inorder()                                                 # STEP 17
avl2.insert(int2)                                                       # STEP 18
avl2.insert(int2)                                                       # STEP 19
avl2.insert(int2)                                                       # STEP 20
avl2.delete(int3)                                                       # STEP 21
int2 = 7                                                                # STEP 22
avl2.delete(int3)                                                       # STEP 23
avl2.delete(int3)                                                       # STEP 24
avl2.delete(int1)                                                       # STEP 25
int0 = 9                                                                # STEP 26
avl2.insert(int2)                                                       # STEP 27
avl2.insert(int0)                                                       # STEP 28
avl2.insert(int3)                                                       # STEP 29
avl2.insert(int0)                                                       # STEP 30
avl2.insert(int1)                                                       # STEP 31
int3 = 2                                                                # STEP 32
avl2.insert(int1)                                                       # STEP 33
result = avl2.find(int3)                                                # STEP 34
result = avl2.inorder()                                                 # STEP 35
avl2.insert(int3)                                                       # STEP 36
result = avl2.find(int2)                                                # STEP 37
int1 = 11                                                               # STEP 38
int3 = 6                                                                # STEP 39
result = avl2.inorder()                                                 # STEP 40
avl2.insert(int2)                                                       # STEP 41
avl2.insert(int3)                                                       # STEP 42
avl2.display()                                                          # STEP 43
int3 = 1                                                                # STEP 44
result = avl2.inorder()                                                 # STEP 45
int2 = 5                                                                # STEP 46
avl2.display()                                                          # STEP 47
result = avl2.find(int0)                                                # STEP 48
avl2.insert(int0)                                                       # STEP 49
avl2.insert(int1)                                                       # STEP 50
int0 = 18                                                               # STEP 51
avl2.insert(int0)                                                       # STEP 52
avl2.insert(int2)                                                       # STEP 53
avl2 == avl2                                                            # STEP 54
avl2.insert(int2)                                                       # STEP 55
avl2.delete(int0)                                                       # STEP 56
int1 = 10                                                               # STEP 57
avl2.display()                                                          # STEP 58
avl2.display()                                                          # STEP 59
avl2.delete(int2)                                                       # STEP 60
avl2.insert(int2)                                                       # STEP 61
result = avl2.find(int2)                                                # STEP 62
int0 = 18                                                               # STEP 63
avl2.delete(int2)                                                       # STEP 64
avl2.insert(int2)                                                       # STEP 65
avl2.insert(int1)                                                       # STEP 66
avl0 = avl.AVLTree()                                                    # STEP 67
avl0.insert(int2)                                                       # STEP 68
int1 = 3                                                                # STEP 69
result = avl0.find(int1)                                                # STEP 70
avl2.display()                                                          # STEP 71
avl2.delete(int3)                                                       # STEP 72
int3 = 12                                                               # STEP 73
avl2.display()                                                          # STEP 74
avl0.delete(int3)                                                       # STEP 75
int1 = 5                                                                # STEP 76
result = avl2.inorder()                                                 # STEP 77
avl0.delete(int0)                                                       # STEP 78
int0 = 4                                                                # STEP 79
avl2.insert(int3)                                                       # STEP 80
int2 = 11                                                               # STEP 81
int3 = 17                                                               # STEP 82
result = avl0.find(int0)                                                # STEP 83
avl2.display()                                                          # STEP 84
avl0.delete(int0)                                                       # STEP 85
avl2.delete(int0)                                                       # STEP 86
int0 = 19                                                               # STEP 87
result = avl2.inorder()                                                 # STEP 88
avl2.display()                                                          # STEP 89
avl2.display()                                                          # STEP 90
avl0.insert(int1)                                                       # STEP 91
int1 = 9                                                                # STEP 92
avl2.delete(int2)                                                       # STEP 93
int2 = 14                                                               # STEP 94
avl2.display()                                                          # STEP 95
avl0.delete(int0)                                                       # STEP 96
int0 = 14                                                               # STEP 97
result = avl2.inorder()                                                 # STEP 98
avl2.delete(int2)                                                       # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1057bd128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE 2
int0 = 19                                                                # STEP 0
int1 = 7                                                                 # STEP 1
int2 = 1                                                                 # STEP 2
int3 = 14                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0 == avl0                                                             # STEP 5
avl0.delete(int0)                                                        # STEP 6
int0 = 9                                                                 # STEP 7
avl0.insert(int3)                                                        # STEP 8
avl0.delete(int3)                                                        # STEP 9
avl0.insert(int1)                                                       # STEP 10
avl0.insert(int1)                                                       # STEP 11
avl0.insert(int2)                                                       # STEP 12
avl0.delete(int3)                                                       # STEP 13
avl0.insert(int2)                                                       # STEP 14
avl0.delete(int2)                                                       # STEP 15
avl0.delete(int3)                                                       # STEP 16
avl0.insert(int2)                                                       # STEP 17
avl0.insert(int0)                                                       # STEP 18
avl0.delete(int2)                                                       # STEP 19
avl0.delete(int3)                                                       # STEP 20
int0 = 9                                                                # STEP 21
avl0.insert(int2)                                                       # STEP 22
int1 = 14                                                               # STEP 23
avl0.delete(int3)                                                       # STEP 24
int3 = 10                                                               # STEP 25
result = avl0.find(int1)                                                # STEP 26
avl0.delete(int1)                                                       # STEP 27
avl0.insert(int0)                                                       # STEP 28
int0 = 16                                                               # STEP 29
avl0.delete(int3)                                                       # STEP 30
int2 = 5                                                                # STEP 31
int1 = 11                                                               # STEP 32
result = avl0.find(int3)                                                # STEP 33
avl0.insert(int2)                                                       # STEP 34
int3 = 4                                                                # STEP 35
result = avl0.find(int0)                                                # STEP 36
avl0.insert(int0)                                                       # STEP 37
int0 = 8                                                                # STEP 38
int2 = 16                                                               # STEP 39
result = avl0.find(int3)                                                # STEP 40
avl0.delete(int1)                                                       # STEP 41
int1 = 8                                                                # STEP 42
avl0.delete(int2)                                                       # STEP 43
avl0.delete(int3)                                                       # STEP 44
int2 = 7                                                                # STEP 45
avl0.delete(int1)                                                       # STEP 46
avl0.delete(int3)                                                       # STEP 47
avl0.delete(int0)                                                       # STEP 48
int1 = 3                                                                # STEP 49
avl0.insert(int1)                                                       # STEP 50
avl0.insert(int3)                                                       # STEP 51
avl0.delete(int3)                                                       # STEP 52
result = avl0.find(int2)                                                # STEP 53
int3 = 4                                                                # STEP 54
avl0.insert(int0)                                                       # STEP 55
int1 = 4                                                                # STEP 56
avl0.delete(int3)                                                       # STEP 57
int2 = 10                                                               # STEP 58
avl0.delete(int1)                                                       # STEP 59
avl0.delete(int1)                                                       # STEP 60
avl0.delete(int0)                                                       # STEP 61
avl0.insert(int1)                                                       # STEP 62
avl0 == avl0                                                            # STEP 63
avl0.insert(int2)                                                       # STEP 64
avl0.display()                                                          # STEP 65
avl0.display()                                                          # STEP 66
result = avl0.inorder()                                                 # STEP 67
avl0.insert(int2)                                                       # STEP 68
result = avl0.find(int1)                                                # STEP 69
result = avl0.find(int2)                                                # STEP 70
int3 = 20                                                               # STEP 71
avl0.insert(int0)                                                       # STEP 72
avl0.delete(int2)                                                       # STEP 73
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1059301b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
216 BRANCHES COVERED
162 STATEMENTS COVERED
