Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62059.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  8 [2:0]
-- < 1 [1:-1]
---- > 2 [0:0] L
-- > 17 [1:0]
---- < 13 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 13, 17, 20])
  8 [2:0]
-- < 1 [1:-1]
---- > 2 [0:0] L
-- > 18 [1:0]
---- < 13 [0:0] L
---- > 20 [0:0] L
set([1, 2, 8, 13, 18, 20])
  15 [2:0]
-- < 5 [1:0]
---- < 1 [0:0] L
---- > 8 [0:0] L
-- > 19 [1:1]
---- < 16 [0:0] L
set([1, 5, 8, 15, 16, 19])
  10 [3:-1]
-- < 5 [1:-1]
---- > 9 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:1]
------ < 14 [0:0] L
set([5, 9, 10, 12, 13, 14, 18])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103fba050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 77 steps

SAVING TEST AS failure.62059.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 5                                                                 # STEP 0
ACTION: int3 = 5 
int3 = None : <type 'NoneType'>
=> int3 = 5 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 1
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 2
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
int0 = 18                                                                # STEP 3
ACTION: int0 = 18 
int0 = None : <type 'NoneType'>
=> int0 = 18 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 4
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
int3 = 10                                                                # STEP 6
ACTION: int3 = 10 
int3 = 5 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 7
ACTION: avl1.delete(int3) 
int3 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int0)                                                        # STEP 8
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                        # STEP 9
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 10
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 11
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12, 5]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 12
ACTION: result = avl1.find(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
int2 = 13                                                               # STEP 13
ACTION: int2 = 13 
int2 = 19 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 14
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 12, 5]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 15
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 15                                                               # STEP 16
ACTION: int3 = 15 
int3 = 10 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 17
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.inorder()                                                 # STEP 18
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int2)                                                       # STEP 19
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 20
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int2 = 13                                                               # STEP 21
ACTION: int2 = 13 
int2 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 22
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 23
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([12, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 24
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([12, 5, 13]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 25
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 26
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 27
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 28
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 29
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 12, 5, 13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 30
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 31
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18, 15, 12, 5, 13]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 32
ACTION: int0 = 7 
int0 = 18 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 33
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 34
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 35
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([18, 15, 5, 13]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 36
ACTION: avl1.insert(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 37
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 15, 12, 5, 13]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 38
ACTION: int2 = 12 
int2 = 13 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 39
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 12, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([18, 15, 5, 13]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 40
ACTION: avl1.insert(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([18, 15, 5, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([5, 7, 13, 15, 18]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 41
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 7, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([5, 13, 15, 18]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 42
ACTION: result = avl1.find(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 43
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 44
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([5, 12, 13, 15, 18]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 45
ACTION: avl1.delete(int3) 
int3 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 15, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
==================================================
int3 = 9                                                                # STEP 46
ACTION: int3 = 9 
int3 = 15 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 47
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1 == avl1                                                            # STEP 48
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int1)                                                       # STEP 49
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int2 = 3                                                                # STEP 50
ACTION: int2 = 3 
int2 = 12 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 51
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl1.find(int2)                                                # STEP 53
ACTION: result = avl1.find(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 54
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 55
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1 == avl1                                                            # STEP 56
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
result = avl1.inorder()                                                 # STEP 57
ACTION: result = avl1.inorder() 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int2 = 3                                                                # STEP 58
ACTION: int2 = 3 
int2 = 3 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 59
ACTION: result = avl1.find(int3) 
int3 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 61
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 9                                                                # STEP 62
ACTION: int1 = 9 
int1 = 12 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int3 = 14                                                               # STEP 63
ACTION: int3 = 14 
int3 = 9 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 64
ACTION: int2 = 10 
int2 = 3 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 65
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1 == avl1                                                            # STEP 66
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int0)                                                       # STEP 67
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int2)                                                       # STEP 68
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([5, 10, 12, 13, 18]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 69
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 10, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([5, 9, 10, 12, 13, 18]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 70
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 71
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.display()                                                          # STEP 72
ACTION: avl1.display() 
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
  10 [3:-1]
-- < 5 [1:-1]
---- > 9 [0:0] L
-- > 13 [2:-1]
---- < 12 [0:0] L
---- > 18 [1:1]
------ < 14 [0:0] L
REFERENCE ACTION: print(avl_REF1) 
set([5, 9, 10, 12, 13, 14, 18])
==================================================
avl1.insert(int3)                                                       # STEP 73
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 74
ACTION: avl1.delete(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([5, 9, 10, 12, 13, 18]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 75
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 76
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1038e7050> : <type 'instance'>
avl_REF1 = set([5, 9, 10, 12, 13, 14, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([5, 10, 12, 13, 14, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e75248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #0 (0:00:36.181407) Mon May  1 17:38:28 2017 [ 160 stmts 212 branches ]
  6 [2:0]
-- < 1 [1:-1]
---- > 2 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([1, 2, 6, 14, 15, 17])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 34
STOPPING TESTING DUE TO TIMEOUT
8.21242019733 PERCENT COVERED
60.2186949253 TOTAL RUNTIME
6 EXECUTED
511 TOTAL TEST OPERATIONS
25.951716423 TIME SPENT EXECUTING TEST OPERATIONS
0.0575530529022 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.081911087 TIME SPENT CHECKING PROPERTIES
52.0336275101 TOTAL TIME SPENT RUNNING SUT
0.00399017333984 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 5                                                                 # STEP 0
int2 = 19                                                                # STEP 1
int1 = 12                                                                # STEP 2
int0 = 18                                                                # STEP 3
avl1 = avl.AVLTree()                                                     # STEP 4
avl1.insert(int3)                                                        # STEP 5
int3 = 10                                                                # STEP 6
avl1.delete(int3)                                                        # STEP 7
avl1.delete(int0)                                                        # STEP 8
avl1.delete(int2)                                                        # STEP 9
avl1.delete(int2)                                                       # STEP 10
avl1.insert(int1)                                                       # STEP 11
result = avl1.find(int2)                                                # STEP 12
int2 = 13                                                               # STEP 13
avl1.insert(int0)                                                       # STEP 14
result = avl1.inorder()                                                 # STEP 15
int3 = 15                                                               # STEP 16
avl1.insert(int1)                                                       # STEP 17
result = avl1.inorder()                                                 # STEP 18
avl1.delete(int2)                                                       # STEP 19
avl1.insert(int0)                                                       # STEP 20
int2 = 13                                                               # STEP 21
avl1.insert(int0)                                                       # STEP 22
avl1.delete(int0)                                                       # STEP 23
avl1.insert(int2)                                                       # STEP 24
avl1.delete(int3)                                                       # STEP 25
avl1.delete(int0)                                                       # STEP 26
avl1.delete(int0)                                                       # STEP 27
avl1.insert(int1)                                                       # STEP 28
avl1.insert(int0)                                                       # STEP 29
avl1.insert(int0)                                                       # STEP 30
avl1.insert(int3)                                                       # STEP 31
int0 = 7                                                                # STEP 32
result = avl1.inorder()                                                 # STEP 33
avl1.insert(int3)                                                       # STEP 34
avl1.delete(int1)                                                       # STEP 35
avl1.insert(int3)                                                       # STEP 36
avl1.insert(int1)                                                       # STEP 37
int2 = 12                                                               # STEP 38
avl1.delete(int1)                                                       # STEP 39
avl1.insert(int0)                                                       # STEP 40
avl1.delete(int0)                                                       # STEP 41
result = avl1.find(int1)                                                # STEP 42
avl1.delete(int0)                                                       # STEP 43
avl1.insert(int1)                                                       # STEP 44
avl1.delete(int3)                                                       # STEP 45
int3 = 9                                                                # STEP 46
avl1.insert(int2)                                                       # STEP 47
avl1 == avl1                                                            # STEP 48
avl1.insert(int1)                                                       # STEP 49
int2 = 3                                                                # STEP 50
avl1.delete(int2)                                                       # STEP 51
avl1.insert(int1)                                                       # STEP 52
result = avl1.find(int2)                                                # STEP 53
avl1.delete(int0)                                                       # STEP 54
avl1.delete(int0)                                                       # STEP 55
avl1 == avl1                                                            # STEP 56
result = avl1.inorder()                                                 # STEP 57
int2 = 3                                                                # STEP 58
result = avl1.find(int3)                                                # STEP 59
avl1.delete(int2)                                                       # STEP 60
avl1.delete(int0)                                                       # STEP 61
int1 = 9                                                                # STEP 62
int3 = 14                                                               # STEP 63
int2 = 10                                                               # STEP 64
avl1.delete(int1)                                                       # STEP 65
avl1 == avl1                                                            # STEP 66
avl1.delete(int0)                                                       # STEP 67
avl1.insert(int2)                                                       # STEP 68
avl1.insert(int1)                                                       # STEP 69
avl1.insert(int3)                                                       # STEP 70
avl1.delete(int0)                                                       # STEP 71
avl1.display()                                                          # STEP 72
avl1.insert(int3)                                                       # STEP 73
avl1.delete(int3)                                                       # STEP 74
avl1.insert(int3)                                                       # STEP 75
avl1.delete(int1)                                                       # STEP 76
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103e75248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
