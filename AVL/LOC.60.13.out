Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99392.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [2:0]
-- < 3 [1:1]
---- < 1 [0:0] L
-- > 18 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([1, 3, 11, 12, 18, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105315518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 67 steps

SAVING TEST AS failure.99392.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 2
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl1 == avl1                                                             # STEP 3
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int0 = 3                                                                 # STEP 4
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl0.insert(int0)                                                        # STEP 5
ACTION: avl0.insert(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 7
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int3 = 17                                                                # STEP 8
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.delete(int0)                                                        # STEP 9
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 10
ACTION: avl0.delete(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 1                                                                # STEP 11
ACTION: int0 = 1 
int0 = 3 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 3]) : <type 'set'>
==================================================
int3 = 11                                                               # STEP 13
ACTION: int3 = 11 
int3 = 17 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
int1 = 1                                                                # STEP 14
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 15
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 16
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 17
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 3, 1]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 18
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 11]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 20
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 21
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 22
ACTION: avl0.delete(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 24
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 25
ACTION: int2 = 12 
int2 = None : <type 'NoneType'>
=> int2 = 12 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 26
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([17, 3, 12, 1]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 28
ACTION: result = avl0.find(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 12, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 29
ACTION: avl1.insert(int3) 
int3 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int1)                                                       # STEP 30
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 11]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 31
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 12, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([17, 3, 1]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 33
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 14                                                               # STEP 34
ACTION: int0 = 14 
int0 = 1 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
result = avl1.find(int1)                                                # STEP 35
ACTION: result = avl1.find(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 36
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 37
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 38
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.delete(int1)                                                       # STEP 39
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 40
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([17, 3]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 41
ACTION: result = avl1.find(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 42
ACTION: avl0.insert(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17, 3, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 43
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 44
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([17, 3]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 45
ACTION: result = avl0.find(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
result = avl0.find(int2)                                                # STEP 46
ACTION: result = avl0.find(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 47
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x10532ef80> : <type 'instance'>
avl_REF0 = set([17, 3]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 48
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 49
ACTION: int3 = 18 
int3 = 11 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 50
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 51
ACTION: avl0.insert(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 11]) : <type 'set'>
==================================================
int0 = 6                                                                # STEP 52
ACTION: int0 = 6 
int0 = 14 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 53
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([1, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 18, 11]) : <type 'set'>
==================================================
int2 = 9                                                                # STEP 54
ACTION: int2 = 9 
int2 = 12 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 55
ACTION: result = avl1.find(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 56
ACTION: avl1.insert(int2) 
int2 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 11, 14]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 57
ACTION: int2 = 14 
int2 = 9 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 58
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([9, 11, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl0.insert(int2)                                                       # STEP 59
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([1, 18, 11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 18, 11, 14]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 60
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([9, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int2 = 9                                                                # STEP 61
ACTION: int2 = 9 
int2 = 14 : <type 'int'>
=> int2 = 9 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 62
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([1, 18, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([1, 11, 14]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 63
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10531cf38> : <type 'instance'>
avl_REF1 = set([9, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([1, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 18, 11, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 65
ACTION: avl0.delete(int0) 
int0 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([1, 18, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 66
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105348320> : <type 'instance'>
avl_REF0 = set([1, 18, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([18, 11, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10535c758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #5 STEP #0 (0:00:32.719291) Fri Apr 28 03:50:42 2017 [ 163 stmts 218 branches ]
  7 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 5 [0:0] L
-- > 15 [1:1]
---- < 13 [0:0] L
set([1, 3, 5, 6, 7, 13, 15])
  7 [3:1]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 5 [0:0] L
-- > 15 [1:1]
---- < 13 [0:0] L
set([1, 3, 5, 6, 7, 13, 15])
  7 [3:0]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 5 [0:0] L
-- > 13 [2:1]
---- < 10 [1:-1]
------ > 12 [0:0] L
---- > 15 [0:0] L
set([1, 3, 5, 6, 7, 10, 12, 13, 15])
  7 [3:0]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 5 [0:0] L
-- > 13 [2:1]
---- < 10 [1:-1]
------ > 12 [0:0] L
---- > 15 [0:0] L
set([1, 3, 5, 6, 7, 10, 12, 13, 15])
  7 [3:0]
-- < 3 [2:-1]
---- < 1 [0:0] L
---- > 6 [1:1]
------ < 4 [0:0] L
-- > 13 [2:1]
---- < 10 [1:-1]
------ > 12 [0:0] L
---- > 15 [0:0] L
set([1, 3, 4, 6, 7, 10, 12, 13, 15])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105679998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 35 steps

SAVING TEST AS failure.99392.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 20                                                                # STEP 0
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 1
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int0 = 1                                                                 # STEP 2
ACTION: int0 = 1 
int0 = None : <type 'NoneType'>
=> int0 = 1 : <type 'int'>
==================================================
int2 = 4                                                                 # STEP 3
ACTION: int2 = 4 
int2 = None : <type 'NoneType'>
=> int2 = 4 : <type 'int'>
==================================================
int1 = 5                                                                 # STEP 4
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
avl0.delete(int0)                                                        # STEP 5
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                        # STEP 6
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                        # STEP 7
ACTION: avl0.delete(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                        # STEP 8
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 9
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 10
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 11
ACTION: avl0.insert(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 12
ACTION: avl0.insert(int1) 
int1 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20, 5]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 13
ACTION: int0 = 8 
int0 = 1 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 14
ACTION: int1 = 4 
int1 = 5 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 15
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
int3 = 8                                                                # STEP 16
ACTION: int3 = 8 
int3 = 20 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl0 == avl0                                                            # STEP 17
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int2)                                                       # STEP 18
ACTION: avl0.delete(int2) 
int2 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 10                                                               # STEP 19
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 20
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 5]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 21
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([8, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([5]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 22
ACTION: avl0.delete(int2) 
int2 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl0                                                            # STEP 23
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                       # STEP 24
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int2 = 20                                                               # STEP 25
ACTION: int2 = 20 
int2 = 10 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 26
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 1                                                                # STEP 27
ACTION: int0 = 1 
int0 = 8 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 28
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 5]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 29
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 30
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 20, 5]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 31
ACTION: int1 = 8 
int1 = 4 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 32
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([8, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 1, 20, 5]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 33
ACTION: int3 = 20 
int3 = 8 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 34
ACTION: avl0.delete(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1056794d0> : <type 'instance'>
avl_REF0 = set([8, 1, 20, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 1, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1052b2488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  12 [2:0]
-- < 10 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 14 [0:0] L
set([2, 10, 11, 12, 14, 19])
  12 [2:0]
-- < 10 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 14 [0:0] L
set([2, 10, 11, 12, 14, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1052b67a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 73 steps

SAVING TEST AS failure.99392.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 2                                                                 # STEP 0
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
int1 = 6                                                                 # STEP 1
ACTION: int1 = 6 
int1 = None : <type 'NoneType'>
=> int1 = 6 : <type 'int'>
==================================================
int0 = 10                                                                # STEP 2
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 3
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 5
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                        # STEP 6
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 7
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int2 = 6                                                                 # STEP 8
ACTION: int2 = 6 
int2 = 2 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl2.delete(int3)                                                        # STEP 9
ACTION: avl2.delete(int3) 
int3 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 6                                                                # STEP 10
ACTION: int3 = 6 
int3 = 12 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 11
ACTION: avl2.delete(int3) 
int3 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
int3 = 7                                                                # STEP 12
ACTION: int3 = 7 
int3 = 6 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 13
ACTION: avl2.insert(int2) 
int2 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
int1 = 2                                                                # STEP 14
ACTION: int1 = 2 
int1 = 6 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 15
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 16
ACTION: int2 = 20 
int2 = 6 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 18
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl2.insert(int0)                                                       # STEP 20
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([10, 6]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 21
ACTION: avl2.insert(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 22
ACTION: avl0.insert(int0) 
int0 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 23
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([10, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([6]) : <type 'set'>
==================================================
int0 = 7                                                                # STEP 24
ACTION: int0 = 7 
int0 = 10 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 25
ACTION: result = avl0.find(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
result = avl0.find(int0)                                                # STEP 26
ACTION: result = avl0.find(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 19                                                               # STEP 27
ACTION: int0 = 19 
int0 = 7 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 28
ACTION: avl0.delete(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 29
ACTION: avl2.delete(int2) 
int2 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 30
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int1)                                                       # STEP 31
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([10, 2]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int1)                                                       # STEP 33
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 34
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([19, 6]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 35
ACTION: avl2.delete(int1) 
int1 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 11                                                               # STEP 36
ACTION: int1 = 11 
int1 = 2 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 37
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 38
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 12                                                               # STEP 39
ACTION: int2 = 12 
int2 = 20 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 40
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([19, 12, 6]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 41
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 42
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 43
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([10, 12, 2]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 44
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 45
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([10, 19, 12, 2]) : <type 'set'>
==================================================
int2 = 14                                                               # STEP 46
ACTION: int2 = 14 
int2 = 12 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 47
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int0 = 14                                                               # STEP 48
ACTION: int0 = 14 
int0 = 19 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 49
ACTION: avl2.delete(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 50
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 51
ACTION: avl0.delete(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 19, 12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.inorder()                                                 # STEP 52
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 19, 12, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int1)                                                       # STEP 53
ACTION: avl0.insert(int1) 
int1 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([10, 19, 12, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([2, 10, 11, 12, 19]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 54
ACTION: avl2.delete(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int1 = 11                                                               # STEP 55
ACTION: int1 = 11 
int1 = 11 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 56
ACTION: avl2.delete(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl0.find(int3)                                                # STEP 57
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 58
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([19, 12, 6, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 59
ACTION: avl0.insert(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([2, 10, 11, 12, 14, 19]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 60
ACTION: int2 = 12 
int2 = 14 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.display()                                                          # STEP 61
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 14, 19]) : <type 'set'>
  12 [2:0]
-- < 10 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 14 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 10, 11, 12, 14, 19])
==================================================
avl0.display()                                                          # STEP 62
ACTION: avl0.display() 
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 14, 19]) : <type 'set'>
  12 [2:0]
-- < 10 [1:0]
---- < 2 [0:0] L
---- > 11 [0:0] L
-- > 19 [1:1]
---- < 14 [0:0] L
REFERENCE ACTION: print(avl_REF0) 
set([2, 10, 11, 12, 14, 19])
==================================================
avl0.insert(int2)                                                       # STEP 63
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 14, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 64
ACTION: avl0.delete(int0) 
int0 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 14, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 10, 11, 12, 19]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 65
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([19, 12, 6, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([6, 7, 11, 12, 19]) : <type 'set'>
==================================================
result = avl2.find(int0)                                                # STEP 66
ACTION: result = avl2.find(int0) 
int0 = 14 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6, 7, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 67
ACTION: avl2.insert(int3) 
int3 = 7 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6, 7, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int1 = 9                                                                # STEP 68
ACTION: int1 = 9 
int1 = 11 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 69
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1052b66c8> : <type 'instance'>
avl_REF2 = set([6, 7, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl0.find(int3)                                                # STEP 70
ACTION: result = avl0.find(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int0 = 10                                                               # STEP 71
ACTION: int0 = 10 
int0 = 14 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 72
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x10565a758> : <type 'instance'>
avl_REF0 = set([2, 10, 11, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([2, 10, 11, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1057f7290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.6528673227 PERCENT COVERED
64.7267239094 TOTAL RUNTIME
9 EXECUTED
675 TOTAL TEST OPERATIONS
25.5036981106 TIME SPENT EXECUTING TEST OPERATIONS
0.0710628032684 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.679510355 TIME SPENT CHECKING PROPERTIES
51.1832084656 TOTAL TIME SPENT RUNNING SUT
0.00486993789673 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
avl1 = avl.AVLTree()                                                     # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
result = avl0.inorder()                                                  # STEP 2
avl1 == avl1                                                             # STEP 3
int0 = 3                                                                 # STEP 4
avl0.insert(int0)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl1.delete(int0)                                                        # STEP 7
int3 = 17                                                                # STEP 8
avl1.delete(int0)                                                        # STEP 9
avl0.delete(int3)                                                       # STEP 10
int0 = 1                                                                # STEP 11
avl0.insert(int3)                                                       # STEP 12
int3 = 11                                                               # STEP 13
int1 = 1                                                                # STEP 14
avl1.insert(int3)                                                       # STEP 15
avl1.delete(int0)                                                       # STEP 16
avl0.insert(int0)                                                       # STEP 17
avl1.insert(int3)                                                       # STEP 18
avl1.insert(int0)                                                       # STEP 19
avl1.insert(int3)                                                       # STEP 20
avl0.insert(int0)                                                       # STEP 21
avl0.delete(int3)                                                       # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl1.delete(int1)                                                       # STEP 24
int2 = 12                                                               # STEP 25
avl1.delete(int2)                                                       # STEP 26
avl0.insert(int2)                                                       # STEP 27
result = avl0.find(int1)                                                # STEP 28
avl1.insert(int3)                                                       # STEP 29
avl1.insert(int1)                                                       # STEP 30
avl1.insert(int1)                                                       # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl1.delete(int2)                                                       # STEP 33
int0 = 14                                                               # STEP 34
result = avl1.find(int1)                                                # STEP 35
avl1.insert(int1)                                                       # STEP 36
result = avl0.inorder()                                                 # STEP 37
avl0.delete(int2)                                                       # STEP 38
avl1.delete(int1)                                                       # STEP 39
avl0.delete(int1)                                                       # STEP 40
result = avl1.find(int0)                                                # STEP 41
avl0.insert(int0)                                                       # STEP 42
avl1.insert(int0)                                                       # STEP 43
avl0.delete(int0)                                                       # STEP 44
result = avl0.find(int0)                                                # STEP 45
result = avl0.find(int2)                                                # STEP 46
avl0 = avl.AVLTree()                                                    # STEP 47
avl0.insert(int3)                                                       # STEP 48
int3 = 18                                                               # STEP 49
result = avl0.inorder()                                                 # STEP 50
avl0.insert(int1)                                                       # STEP 51
int0 = 6                                                                # STEP 52
avl0.insert(int3)                                                       # STEP 53
int2 = 9                                                                # STEP 54
result = avl1.find(int3)                                                # STEP 55
avl1.insert(int2)                                                       # STEP 56
int2 = 14                                                               # STEP 57
result = avl1.inorder()                                                 # STEP 58
avl0.insert(int2)                                                       # STEP 59
avl1.insert(int2)                                                       # STEP 60
int2 = 9                                                                # STEP 61
avl0.delete(int3)                                                       # STEP 62
avl1.delete(int3)                                                       # STEP 63
avl0.insert(int3)                                                       # STEP 64
avl0.delete(int0)                                                       # STEP 65
avl0.delete(int1)                                                       # STEP 66
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10535c758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
int3 = 20                                                                # STEP 0
avl0 = avl.AVLTree()                                                     # STEP 1
int0 = 1                                                                 # STEP 2
int2 = 4                                                                 # STEP 3
int1 = 5                                                                 # STEP 4
avl0.delete(int0)                                                        # STEP 5
avl0.insert(int3)                                                        # STEP 6
avl0.delete(int1)                                                        # STEP 7
avl0.delete(int3)                                                        # STEP 8
avl0.delete(int3)                                                        # STEP 9
avl0.insert(int3)                                                       # STEP 10
avl0.insert(int3)                                                       # STEP 11
avl0.insert(int1)                                                       # STEP 12
int0 = 8                                                                # STEP 13
int1 = 4                                                                # STEP 14
avl0.delete(int3)                                                       # STEP 15
int3 = 8                                                                # STEP 16
avl0 == avl0                                                            # STEP 17
avl0.delete(int2)                                                       # STEP 18
int2 = 10                                                               # STEP 19
avl0.insert(int0)                                                       # STEP 20
avl0.delete(int0)                                                       # STEP 21
avl0.delete(int2)                                                       # STEP 22
avl0 == avl0                                                            # STEP 23
avl0.delete(int1)                                                       # STEP 24
int2 = 20                                                               # STEP 25
avl0.delete(int0)                                                       # STEP 26
int0 = 1                                                                # STEP 27
avl0.insert(int2)                                                       # STEP 28
avl0.insert(int2)                                                       # STEP 29
avl0.insert(int3)                                                       # STEP 30
int1 = 8                                                                # STEP 31
avl0.insert(int0)                                                       # STEP 32
int3 = 20                                                               # STEP 33
avl0.delete(int3)                                                       # STEP 34
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1052b2488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE 2
int2 = 2                                                                 # STEP 0
int1 = 6                                                                 # STEP 1
int0 = 10                                                                # STEP 2
int3 = 12                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int2)                                                        # STEP 5
avl2.insert(int1)                                                        # STEP 6
avl2.delete(int2)                                                        # STEP 7
int2 = 6                                                                 # STEP 8
avl2.delete(int3)                                                        # STEP 9
int3 = 6                                                                # STEP 10
avl2.delete(int3)                                                       # STEP 11
int3 = 7                                                                # STEP 12
avl2.insert(int2)                                                       # STEP 13
int1 = 2                                                                # STEP 14
avl0 = avl.AVLTree()                                                    # STEP 15
int2 = 20                                                               # STEP 16
avl0.insert(int3)                                                       # STEP 17
avl0.delete(int3)                                                       # STEP 18
avl0.delete(int3)                                                       # STEP 19
avl2.insert(int0)                                                       # STEP 20
avl2.insert(int0)                                                       # STEP 21
avl0.insert(int0)                                                       # STEP 22
avl2.delete(int0)                                                       # STEP 23
int0 = 7                                                                # STEP 24
result = avl0.find(int2)                                                # STEP 25
result = avl0.find(int0)                                                # STEP 26
int0 = 19                                                               # STEP 27
avl0.delete(int1)                                                       # STEP 28
avl2.delete(int2)                                                       # STEP 29
avl2.delete(int1)                                                       # STEP 30
avl0.insert(int1)                                                       # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl0.insert(int1)                                                       # STEP 33
avl2.insert(int0)                                                       # STEP 34
avl2.delete(int1)                                                       # STEP 35
int1 = 11                                                               # STEP 36
avl2.delete(int1)                                                       # STEP 37
result = avl0.inorder()                                                 # STEP 38
int2 = 12                                                               # STEP 39
avl2.insert(int2)                                                       # STEP 40
avl2.insert(int0)                                                       # STEP 41
avl0.delete(int1)                                                       # STEP 42
avl0.insert(int2)                                                       # STEP 43
avl2.insert(int0)                                                       # STEP 44
avl0.insert(int0)                                                       # STEP 45
int2 = 14                                                               # STEP 46
avl2.delete(int3)                                                       # STEP 47
int0 = 14                                                               # STEP 48
avl2.delete(int1)                                                       # STEP 49
avl2.delete(int0)                                                       # STEP 50
avl0.delete(int1)                                                       # STEP 51
result = avl0.inorder()                                                 # STEP 52
avl0.insert(int1)                                                       # STEP 53
avl2.delete(int3)                                                       # STEP 54
int1 = 11                                                               # STEP 55
avl2.delete(int0)                                                       # STEP 56
result = avl0.find(int3)                                                # STEP 57
avl2.insert(int3)                                                       # STEP 58
avl0.insert(int2)                                                       # STEP 59
int2 = 12                                                               # STEP 60
avl0.display()                                                          # STEP 61
avl0.display()                                                          # STEP 62
avl0.insert(int2)                                                       # STEP 63
avl0.delete(int0)                                                       # STEP 64
avl2.insert(int1)                                                       # STEP 65
result = avl2.find(int0)                                                # STEP 66
avl2.insert(int3)                                                       # STEP 67
int1 = 9                                                                # STEP 68
avl2.delete(int1)                                                       # STEP 69
result = avl0.find(int3)                                                # STEP 70
int0 = 10                                                               # STEP 71
avl0.delete(int2)                                                       # STEP 72
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1057f7290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
