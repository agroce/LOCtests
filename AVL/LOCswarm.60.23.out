Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40262.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104030ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 34 steps

SAVING TEST AS failure.40262.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 1                                                                 # STEP 1
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
result = avl0.inorder()                                                  # STEP 2
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl0.inorder()                                                  # STEP 3
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int3 = 6                                                                 # STEP 4
ACTION: int3 = 6 
int3 = None : <type 'NoneType'>
=> int3 = 6 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                        # STEP 6
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 18                                                                # STEP 7
ACTION: int2 = 18 
int2 = 1 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                        # STEP 8
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 9
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 10
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 11
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18, 6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 13
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 14
ACTION: int3 = 6 
int3 = 6 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 15
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18, 6]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 16
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 17
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.inorder()                                                 # STEP 18
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.delete(int2)                                                       # STEP 19
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 20
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18, 6]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 22
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([18]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 23
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int1 = 4                                                                # STEP 24
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 25
ACTION: avl0.insert(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 26
ACTION: int1 = 20 
int1 = 4 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 27
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([18, 4]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 28
ACTION: avl0.delete(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 29
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20, 18, 4]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 30
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([20, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([20, 18, 4, 6]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 31
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([20, 18, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 32
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([20, 18, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
avl0.delete(int2)                                                       # STEP 33
ACTION: avl0.delete(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x104067830> : <type 'instance'>
avl_REF0 = set([20, 18, 4, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([20, 4, 6]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103341758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103719368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 66 steps

SAVING TEST AS failure.40262.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl0 = avl.AVLTree()                                                     # STEP 0
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int3 = 4                                                                 # STEP 1
ACTION: int3 = 4 
int3 = None : <type 'NoneType'>
=> int3 = 4 : <type 'int'>
==================================================
int0 = 4                                                                 # STEP 2
ACTION: int0 = 4 
int0 = None : <type 'NoneType'>
=> int0 = 4 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 3
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int0)                                                        # STEP 4
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 5
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int3)                                                        # STEP 6
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int2 = 11                                                                # STEP 7
ACTION: int2 = 11 
int2 = None : <type 'NoneType'>
=> int2 = 11 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 8
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.inorder()                                                  # STEP 9
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int2)                                                       # STEP 10
ACTION: avl0.insert(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 11
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([11, 4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 12
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([11, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([11]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 13
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 14
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl0.insert(int0)                                                       # STEP 16
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 17
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 18
ACTION: avl0.insert(int0) 
int0 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 19
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 6                                                                # STEP 20
ACTION: int2 = 6 
int2 = 11 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
int0 = 2                                                                # STEP 21
ACTION: int0 = 2 
int0 = 4 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 22
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
result = avl0.find(int2)                                                # STEP 23
ACTION: result = avl0.find(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 24
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int3)                                                       # STEP 25
ACTION: avl0.insert(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
int0 = 8                                                                # STEP 26
ACTION: int0 = 8 
int0 = 2 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int3 = 18                                                               # STEP 27
ACTION: int3 = 18 
int3 = 4 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 28
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.inorder()                                                 # STEP 29
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl0.insert(int0)                                                       # STEP 30
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 4]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 31
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 32
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 33
ACTION: avl0.delete(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([4]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 34
ACTION: avl0.delete(int2) 
int2 = 6 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.delete(int3)                                                       # STEP 35
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 36
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([18, 4]) : <type 'set'>
==================================================
int2 = 20                                                               # STEP 37
ACTION: int2 = 20 
int2 = 6 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 38
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 18, 4]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 39
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
int1 = 19                                                               # STEP 40
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 41
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 42
ACTION: avl0.insert(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 18                                                               # STEP 43
ACTION: int3 = 18 
int3 = 18 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 44
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int3)                                                       # STEP 45
ACTION: avl0.delete(int3) 
int3 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 18, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 4]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 46
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 47
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
result = avl0.find(int0)                                                # STEP 48
ACTION: result = avl0.find(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 49
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 50
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                       # STEP 51
ACTION: avl0.insert(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 20, 4]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 52
ACTION: int0 = 9 
int0 = 8 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 53
ACTION: int3 = 4 
int3 = 18 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 54
ACTION: avl0.delete(int2) 
int2 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 20, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([8, 4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 55
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int0)                                                       # STEP 56
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 9, 4]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 57
ACTION: int2 = 12 
int2 = 20 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 58
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 59
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 9, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([8, 4]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 60
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([8, 12, 4]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 61
ACTION: avl0.delete(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int1)                                                       # STEP 62
ACTION: avl0.insert(int1) 
int1 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 12, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([8, 12, 19, 4]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 63
ACTION: int0 = 13 
int0 = 9 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 64
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 12, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 65
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1040479e0> : <type 'instance'>
avl_REF0 = set([8, 12, 19, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
=> avl_REF0 = set([8, 12, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036375a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #4 STEP #25 (0:00:30.068834) Mon May  1 02:11:45 2017 [ 142 stmts 188 branches ]
  9 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([3, 5, 7, 9, 18, 20])
  9 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([3, 5, 7, 9, 18, 20])
  9 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([3, 5, 7, 9, 10, 18, 20])
  9 [2:0]
-- < 5 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 10 [0:0] L
---- > 20 [0:0] L
set([3, 5, 7, 9, 10, 18, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 48
STOPPING TESTING DUE TO TIMEOUT
8.80155894771 PERCENT COVERED
60.2652950287 TOTAL RUNTIME
7 EXECUTED
548 TOTAL TEST OPERATIONS
25.2562367916 TIME SPENT EXECUTING TEST OPERATIONS
0.0582857131958 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.4034018517 TIME SPENT CHECKING PROPERTIES
50.6596386433 TOTAL TIME SPENT RUNNING SUT
0.00426626205444 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
avl0 = avl.AVLTree()                                                     # STEP 0
int2 = 1                                                                 # STEP 1
result = avl0.inorder()                                                  # STEP 2
result = avl0.inorder()                                                  # STEP 3
int3 = 6                                                                 # STEP 4
avl0.delete(int3)                                                        # STEP 5
avl0.delete(int2)                                                        # STEP 6
int2 = 18                                                                # STEP 7
avl0.insert(int3)                                                        # STEP 8
avl0.insert(int3)                                                        # STEP 9
result = avl0.inorder()                                                 # STEP 10
avl0.insert(int2)                                                       # STEP 11
avl0.insert(int3)                                                       # STEP 12
avl0.delete(int2)                                                       # STEP 13
int3 = 6                                                                # STEP 14
avl0.insert(int2)                                                       # STEP 15
avl0.delete(int2)                                                       # STEP 16
avl0.insert(int3)                                                       # STEP 17
result = avl0.inorder()                                                 # STEP 18
avl0.delete(int2)                                                       # STEP 19
avl0.delete(int2)                                                       # STEP 20
avl0.insert(int2)                                                       # STEP 21
avl0.delete(int3)                                                       # STEP 22
avl0.delete(int2)                                                       # STEP 23
int1 = 4                                                                # STEP 24
avl0.insert(int1)                                                       # STEP 25
int1 = 20                                                               # STEP 26
avl0.insert(int2)                                                       # STEP 27
avl0.delete(int3)                                                       # STEP 28
avl0.insert(int1)                                                       # STEP 29
avl0.insert(int3)                                                       # STEP 30
avl0.insert(int3)                                                       # STEP 31
avl0.insert(int1)                                                       # STEP 32
avl0.delete(int2)                                                       # STEP 33
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103341758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE 1
avl0 = avl.AVLTree()                                                     # STEP 0
int3 = 4                                                                 # STEP 1
int0 = 4                                                                 # STEP 2
avl0.delete(int3)                                                        # STEP 3
avl0.insert(int0)                                                        # STEP 4
result = avl0.inorder()                                                  # STEP 5
avl0.insert(int3)                                                        # STEP 6
int2 = 11                                                                # STEP 7
avl0.delete(int3)                                                        # STEP 8
result = avl0.inorder()                                                  # STEP 9
avl0.insert(int2)                                                       # STEP 10
avl0.insert(int3)                                                       # STEP 11
avl0.delete(int0)                                                       # STEP 12
avl0.delete(int2)                                                       # STEP 13
avl0.insert(int0)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
avl0.insert(int0)                                                       # STEP 16
avl0.delete(int2)                                                       # STEP 17
avl0.insert(int0)                                                       # STEP 18
avl0.delete(int3)                                                       # STEP 19
int2 = 6                                                                # STEP 20
int0 = 2                                                                # STEP 21
avl0.delete(int3)                                                       # STEP 22
result = avl0.find(int2)                                                # STEP 23
avl0.delete(int0)                                                       # STEP 24
avl0.insert(int3)                                                       # STEP 25
int0 = 8                                                                # STEP 26
int3 = 18                                                               # STEP 27
avl0.delete(int0)                                                       # STEP 28
result = avl0.inorder()                                                 # STEP 29
avl0.insert(int0)                                                       # STEP 30
avl0.delete(int3)                                                       # STEP 31
avl0.delete(int2)                                                       # STEP 32
avl0.delete(int0)                                                       # STEP 33
avl0.delete(int2)                                                       # STEP 34
avl0.delete(int3)                                                       # STEP 35
avl0.insert(int3)                                                       # STEP 36
int2 = 20                                                               # STEP 37
avl0.insert(int0)                                                       # STEP 38
avl0.insert(int0)                                                       # STEP 39
int1 = 19                                                               # STEP 40
avl0.delete(int2)                                                       # STEP 41
avl0.insert(int3)                                                       # STEP 42
int3 = 18                                                               # STEP 43
avl0.delete(int1)                                                       # STEP 44
avl0.delete(int3)                                                       # STEP 45
avl0.insert(int0)                                                       # STEP 46
avl0.insert(int0)                                                       # STEP 47
result = avl0.find(int0)                                                # STEP 48
avl0.insert(int0)                                                       # STEP 49
avl0.delete(int1)                                                       # STEP 50
avl0.insert(int2)                                                       # STEP 51
int0 = 9                                                                # STEP 52
int3 = 4                                                                # STEP 53
avl0.delete(int2)                                                       # STEP 54
avl0.delete(int0)                                                       # STEP 55
avl0.insert(int0)                                                       # STEP 56
int2 = 12                                                               # STEP 57
avl0.delete(int1)                                                       # STEP 58
avl0.delete(int0)                                                       # STEP 59
avl0.insert(int2)                                                       # STEP 60
avl0.delete(int0)                                                       # STEP 61
avl0.insert(int1)                                                       # STEP 62
int0 = 13                                                               # STEP 63
avl0.delete(int0)                                                       # STEP 64
avl0.delete(int3)                                                       # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036375a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
