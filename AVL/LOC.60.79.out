Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.758.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103951f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 94 steps

SAVING TEST AS failure.758.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 1                                                                 # STEP 0
ACTION: int3 = 1 
int3 = None : <type 'NoneType'>
=> int3 = 1 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int0 = 12                                                                # STEP 2
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 3
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int3)                                                        # STEP 4
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 12]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int0)                                                        # STEP 8
ACTION: avl1.insert(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 14                                                                # STEP 9
ACTION: int0 = 14 
int0 = 12 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 10
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 11
ACTION: avl1.insert(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 12, 14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 12
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 12]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 13
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 14
ACTION: avl1.delete(int0) 
int0 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 17                                                               # STEP 15
ACTION: int0 = 17 
int0 = 14 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
int2 = 19                                                               # STEP 16
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([1, 12, 17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 19                                                               # STEP 19
ACTION: int2 = 19 
int2 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 20
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 19, 12, 17]) : <type 'set'>
==================================================
int1 = 16                                                               # STEP 21
ACTION: int1 = 16 
int1 = None : <type 'NoneType'>
=> int1 = 16 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 22
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 19, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int2 = 10                                                               # STEP 23
ACTION: int2 = 10 
int2 = 19 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 24
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 19, 12, 17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([1, 19, 12]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 25
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 5                                                                # STEP 26
ACTION: int0 = 5 
int0 = 17 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 27
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 19, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 10, 12, 19]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 28
ACTION: result = avl1.find(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 10, 12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 29
ACTION: avl1.delete(int0) 
int0 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 10, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 15                                                               # STEP 30
ACTION: int0 = 15 
int0 = 5 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 31
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 10, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int3)                                                       # STEP 32
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 10, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([10, 12, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 33
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([10, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([10, 12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([12, 19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 35
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 13                                                               # STEP 36
ACTION: int2 = 13 
int2 = 10 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 37
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12, 15, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 38
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([12, 19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 39
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 40
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int2 = 16                                                               # STEP 41
ACTION: int2 = 16 
int2 = 13 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl1.find(int0)                                                # STEP 42
ACTION: result = avl1.find(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
avl1.insert(int0)                                                       # STEP 43
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([12, 15, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 44
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 10                                                               # STEP 45
ACTION: int0 = 10 
int0 = 15 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 46
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                       # STEP 47
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([10, 12, 15, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 48
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([10, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([10, 12, 15, 16, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 49
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([10, 12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([12, 15, 16, 19]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 50
ACTION: avl1.delete(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([12, 15, 19]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 51
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int3)                                                       # STEP 52
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 53
ACTION: avl1.insert(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 12, 15, 16, 19]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 54
ACTION: result = avl1.find(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 55
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 56
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 57
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 58
ACTION: avl1.insert(int1) 
int1 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 12, 15, 16, 19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 59
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 16, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 61
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([12, 15, 19]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 62
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 63
ACTION: int1 = 7 
int1 = 16 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 64
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 65
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 66
ACTION: avl0.delete(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 67
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([1, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([12, 15, 19]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 68
ACTION: int2 = 2 
int2 = 16 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
int0 = 5                                                                # STEP 69
ACTION: int0 = 5 
int0 = 10 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 70
ACTION: avl0.insert(int3) 
int3 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 71
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 7]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 72
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.insert(int0)                                                       # STEP 73
ACTION: avl0.insert(int0) 
int0 = 5 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 5, 7]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 74
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 3                                                                # STEP 75
ACTION: int0 = 3 
int0 = 5 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
int3 = 4                                                                # STEP 76
ACTION: int3 = 4 
int3 = 1 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 77
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([7, 12, 15, 19]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int1 = 1                                                                # STEP 79
ACTION: int1 = 1 
int1 = 7 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 80
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([7, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([4, 7, 12, 15, 19]) : <type 'set'>
==================================================
int3 = 20                                                               # STEP 81
ACTION: int3 = 20 
int3 = 4 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 82
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int0)                                                       # STEP 83
ACTION: avl0.delete(int0) 
int0 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 84
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 85
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 3                                                                # STEP 86
ACTION: int0 = 3 
int0 = 3 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 87
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([4, 7, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 88
ACTION: avl1.delete(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([4, 7, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl0.find(int3)                                                # STEP 89
ACTION: result = avl0.find(int3) 
int3 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x105905488> : <type 'instance'>
avl_REF0 = set([1, 5, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int2 = 5                                                                # STEP 90
ACTION: int2 = 5 
int2 = 2 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
int0 = 15                                                               # STEP 91
ACTION: int0 = 15 
int0 = 3 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 92
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([4, 7, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 93
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x103c6b908> : <type 'instance'>
avl_REF1 = set([4, 7, 12, 15, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([4, 7, 12, 19]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103881368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  3 [2:0]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 16 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 12, 16, 18])
TEST #3 STEP #65 (0:00:30.009892) Fri Apr 28 07:12:28 2017 [ 159 stmts 210 branches ]
  3 [2:0]
-- < 2 [1:1]
---- < 1 [0:0] L
-- > 16 [1:0]
---- < 12 [0:0] L
---- > 18 [0:0] L
set([1, 2, 3, 12, 16, 18])
  9 [2:0]
-- < 7 [1:0]
---- < 6 [0:0] L
---- > 8 [0:0] L
-- > 14 [1:-1]
---- > 15 [0:0] L
set([6, 7, 8, 9, 14, 15])
  9 [2:0]
-- < 7 [1:0]
---- < 6 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([6, 7, 8, 9, 14, 15, 17])
  9 [2:0]
-- < 7 [1:0]
---- < 6 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([6, 7, 8, 9, 14, 15, 17])
  9 [2:0]
-- < 7 [1:0]
---- < 6 [0:0] L
---- > 8 [0:0] L
-- > 15 [1:0]
---- < 14 [0:0] L
---- > 17 [0:0] L
set([6, 7, 8, 9, 14, 15, 17])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103884e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 72 steps

SAVING TEST AS failure.758.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 1                                                                 # STEP 0
ACTION: int1 = 1 
int1 = None : <type 'NoneType'>
=> int1 = 1 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                        # STEP 2
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
result = avl1.inorder()                                                  # STEP 3
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                        # STEP 4
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 5
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1 == avl1                                                             # STEP 6
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int0 = 16                                                                # STEP 7
ACTION: int0 = 16 
int0 = None : <type 'NoneType'>
=> int0 = 16 : <type 'int'>
==================================================
avl1.insert(int1)                                                        # STEP 8
ACTION: avl1.insert(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 9
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 11
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 12
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 13
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
result = avl1.find(int1)                                                # STEP 14
ACTION: result = avl1.find(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 15
ACTION: avl1.delete(int1) 
int1 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int3 = 17                                                               # STEP 16
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 17
ACTION: int1 = 9 
int1 = 1 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 18
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 19
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 20
ACTION: avl1.delete(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 21
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 22
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
result = avl1.inorder()                                                 # STEP 23
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int2)                                                       # STEP 24
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 25
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([9, 2]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 26
ACTION: result = avl1.find(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
result = avl1.find(int1)                                                # STEP 27
ACTION: result = avl1.find(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 28
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
int2 = 13                                                               # STEP 29
ACTION: int2 = 13 
int2 = 2 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 30
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([9, 13]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 31
ACTION: int1 = 9 
int1 = 9 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 32
ACTION: int0 = 17 
int0 = 16 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 33
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([9]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 35
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                       # STEP 36
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 37
ACTION: result = avl1.find(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
int1 = 13                                                               # STEP 38
ACTION: int1 = 13 
int1 = 9 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 39
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 40
ACTION: avl1.insert(int1) 
int1 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([13]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 41
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 42
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 43
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 13]) : <type 'set'>
==================================================
int1 = 14                                                               # STEP 44
ACTION: int1 = 14 
int1 = 13 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 45
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 46
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int3 = 4                                                                # STEP 47
ACTION: int3 = 4 
int3 = 17 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 48
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 4]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 49
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 50
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 51
ACTION: avl1.delete(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 52
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 4, 13]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 53
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([17, 4]) : <type 'set'>
==================================================
result = avl1.find(int2)                                                # STEP 54
ACTION: result = avl1.find(int2) 
int2 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 55
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([17, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 56
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 15                                                               # STEP 57
ACTION: int2 = 15 
int2 = 13 : <type 'int'>
=> int2 = 15 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 58
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 59
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 60
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int0 = 16                                                               # STEP 61
ACTION: int0 = 16 
int0 = 17 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 62
ACTION: avl1.delete(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 63
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 64
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([4, 14, 15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 65
ACTION: avl1.insert(int0) 
int0 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 4, 14, 15]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 66
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int2)                                                       # STEP 67
ACTION: avl1.insert(int2) 
int2 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 68
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 69
ACTION: avl1.insert(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 5                                                                # STEP 70
ACTION: int1 = 5 
int1 = 14 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 71
ACTION: avl1.delete(int3) 
int3 = 4 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x10384fea8> : <type 'instance'>
avl_REF1 = set([16, 4, 14, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([16, 14, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038827e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 19 [0:0] L
set([2, 5, 6, 9, 10, 13, 17, 19])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 19 [1:1]
------ < 13 [0:0] L
set([2, 5, 6, 9, 10, 13, 19])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 19 [1:1]
------ < 13 [0:0] L
set([2, 5, 6, 9, 10, 13, 19])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 19 [1:1]
------ < 13 [0:0] L
set([2, 5, 6, 9, 10, 13, 19])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 10 [2:-1]
---- < 9 [0:0] L
---- > 17 [1:0]
------ < 13 [0:0] L
------ > 19 [0:0] L
set([2, 5, 6, 9, 10, 13, 17, 19])
  6 [3:-1]
-- < 5 [1:1]
---- < 2 [0:0] L
-- > 17 [2:0]
---- < 10 [1:0]
------ < 9 [0:0] L
------ > 13 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([2, 5, 6, 9, 10, 13, 17, 19, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 88
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.2596490383 TOTAL RUNTIME
6 EXECUTED
554 TOTAL TEST OPERATIONS
23.0878865719 TIME SPENT EXECUTING TEST OPERATIONS
0.0566341876984 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
23.1971678734 TIME SPENT CHECKING PROPERTIES
46.2850544453 TOTAL TIME SPENT RUNNING SUT
0.00361394882202 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 1                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
int0 = 12                                                                # STEP 2
avl1.delete(int3)                                                        # STEP 3
avl1.delete(int3)                                                        # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl1.insert(int0)                                                        # STEP 7
avl1.insert(int0)                                                        # STEP 8
int0 = 14                                                                # STEP 9
result = avl1.inorder()                                                 # STEP 10
avl1.insert(int0)                                                       # STEP 11
avl1.delete(int0)                                                       # STEP 12
avl1.delete(int0)                                                       # STEP 13
avl1.delete(int0)                                                       # STEP 14
int0 = 17                                                               # STEP 15
int2 = 19                                                               # STEP 16
avl1.insert(int0)                                                       # STEP 17
avl1.delete(int2)                                                       # STEP 18
int2 = 19                                                               # STEP 19
avl1.insert(int2)                                                       # STEP 20
int1 = 16                                                               # STEP 21
avl1.insert(int2)                                                       # STEP 22
int2 = 10                                                               # STEP 23
avl1.delete(int0)                                                       # STEP 24
avl1.delete(int0)                                                       # STEP 25
int0 = 5                                                                # STEP 26
avl1.insert(int2)                                                       # STEP 27
result = avl1.find(int3)                                                # STEP 28
avl1.delete(int0)                                                       # STEP 29
int0 = 15                                                               # STEP 30
avl1 == avl1                                                            # STEP 31
avl1.delete(int3)                                                       # STEP 32
avl1.insert(int2)                                                       # STEP 33
avl1.delete(int2)                                                       # STEP 34
avl1.delete(int2)                                                       # STEP 35
int2 = 13                                                               # STEP 36
avl1.insert(int0)                                                       # STEP 37
avl1.delete(int0)                                                       # STEP 38
avl1.delete(int2)                                                       # STEP 39
avl1.delete(int3)                                                       # STEP 40
int2 = 16                                                               # STEP 41
result = avl1.find(int0)                                                # STEP 42
avl1.insert(int0)                                                       # STEP 43
avl1.delete(int1)                                                       # STEP 44
int0 = 10                                                               # STEP 45
avl1 == avl1                                                            # STEP 46
avl1.insert(int0)                                                       # STEP 47
avl1.insert(int2)                                                       # STEP 48
avl1.delete(int0)                                                       # STEP 49
avl1.delete(int1)                                                       # STEP 50
result = avl1.inorder()                                                 # STEP 51
avl1.insert(int3)                                                       # STEP 52
avl1.insert(int2)                                                       # STEP 53
result = avl1.find(int3)                                                # STEP 54
avl1.delete(int2)                                                       # STEP 55
avl1.delete(int0)                                                       # STEP 56
avl1.delete(int2)                                                       # STEP 57
avl1.insert(int1)                                                       # STEP 58
avl1.delete(int2)                                                       # STEP 59
avl1.delete(int2)                                                       # STEP 60
avl1.delete(int3)                                                       # STEP 61
avl1.insert(int3)                                                       # STEP 62
int1 = 7                                                                # STEP 63
avl0 = avl.AVLTree()                                                    # STEP 64
avl1.delete(int0)                                                       # STEP 65
avl0.delete(int3)                                                       # STEP 66
avl1.delete(int3)                                                       # STEP 67
int2 = 2                                                                # STEP 68
int0 = 5                                                                # STEP 69
avl0.insert(int3)                                                       # STEP 70
avl0.insert(int1)                                                       # STEP 71
avl1 == avl1                                                            # STEP 72
avl0.insert(int0)                                                       # STEP 73
result = avl0.inorder()                                                 # STEP 74
int0 = 3                                                                # STEP 75
int3 = 4                                                                # STEP 76
avl1.insert(int1)                                                       # STEP 77
avl0.delete(int3)                                                       # STEP 78
int1 = 1                                                                # STEP 79
avl1.insert(int3)                                                       # STEP 80
int3 = 20                                                               # STEP 81
avl0.delete(int0)                                                       # STEP 82
avl0.delete(int0)                                                       # STEP 83
avl0.delete(int2)                                                       # STEP 84
result = avl0.inorder()                                                 # STEP 85
int0 = 3                                                                # STEP 86
avl1.delete(int0)                                                       # STEP 87
avl1.delete(int0)                                                       # STEP 88
result = avl0.find(int3)                                                # STEP 89
int2 = 5                                                                # STEP 90
int0 = 15                                                               # STEP 91
result = avl1.inorder()                                                 # STEP 92
avl1.delete(int0)                                                       # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103881368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int1 = 1                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl1.insert(int1)                                                        # STEP 2
result = avl1.inorder()                                                  # STEP 3
avl1.delete(int1)                                                        # STEP 4
avl1.delete(int1)                                                        # STEP 5
avl1 == avl1                                                             # STEP 6
int0 = 16                                                                # STEP 7
avl1.insert(int1)                                                        # STEP 8
avl1.delete(int1)                                                        # STEP 9
avl1.delete(int1)                                                       # STEP 10
avl1.delete(int1)                                                       # STEP 11
avl1.delete(int0)                                                       # STEP 12
avl1.delete(int0)                                                       # STEP 13
result = avl1.find(int1)                                                # STEP 14
avl1.delete(int1)                                                       # STEP 15
int3 = 17                                                               # STEP 16
int1 = 9                                                                # STEP 17
avl1.insert(int0)                                                       # STEP 18
result = avl1.inorder()                                                 # STEP 19
avl1.delete(int0)                                                       # STEP 20
int2 = 2                                                                # STEP 21
avl1 == avl1                                                            # STEP 22
result = avl1.inorder()                                                 # STEP 23
avl1.insert(int2)                                                       # STEP 24
avl1.insert(int1)                                                       # STEP 25
result = avl1.find(int1)                                                # STEP 26
result = avl1.find(int1)                                                # STEP 27
avl1.delete(int2)                                                       # STEP 28
int2 = 13                                                               # STEP 29
avl1.insert(int2)                                                       # STEP 30
int1 = 9                                                                # STEP 31
int0 = 17                                                               # STEP 32
avl1.delete(int0)                                                       # STEP 33
avl1.delete(int2)                                                       # STEP 34
result = avl1.inorder()                                                 # STEP 35
avl1.delete(int1)                                                       # STEP 36
result = avl1.find(int2)                                                # STEP 37
int1 = 13                                                               # STEP 38
avl1.delete(int2)                                                       # STEP 39
avl1.insert(int1)                                                       # STEP 40
avl1.delete(int3)                                                       # STEP 41
avl1.insert(int2)                                                       # STEP 42
avl1.insert(int3)                                                       # STEP 43
int1 = 14                                                               # STEP 44
avl1.delete(int2)                                                       # STEP 45
avl1.delete(int2)                                                       # STEP 46
int3 = 4                                                                # STEP 47
avl1.insert(int3)                                                       # STEP 48
avl1.delete(int2)                                                       # STEP 49
avl1.insert(int3)                                                       # STEP 50
avl1.delete(int1)                                                       # STEP 51
avl1.insert(int2)                                                       # STEP 52
avl1.delete(int2)                                                       # STEP 53
result = avl1.find(int2)                                                # STEP 54
avl1.delete(int0)                                                       # STEP 55
avl1.delete(int0)                                                       # STEP 56
int2 = 15                                                               # STEP 57
avl1.insert(int1)                                                       # STEP 58
avl1.delete(int2)                                                       # STEP 59
avl1.delete(int2)                                                       # STEP 60
int0 = 16                                                               # STEP 61
avl1.delete(int2)                                                       # STEP 62
avl1.insert(int3)                                                       # STEP 63
avl1.insert(int2)                                                       # STEP 64
avl1.insert(int0)                                                       # STEP 65
avl1 == avl1                                                            # STEP 66
avl1.insert(int2)                                                       # STEP 67
avl1.insert(int1)                                                       # STEP 68
avl1.insert(int3)                                                       # STEP 69
int1 = 5                                                                # STEP 70
avl1.delete(int3)                                                       # STEP 71
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038827e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
