Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40536.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [3:1]
-- < 9 [2:1]
---- < 5 [1:1]
------ < 4 [0:0] L
---- > 10 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([4, 5, 9, 10, 11, 12, 14])
  11 [3:1]
-- < 9 [2:1]
---- < 5 [1:1]
------ < 4 [0:0] L
---- > 10 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([4, 5, 9, 10, 11, 12, 14])
  11 [3:1]
-- < 9 [2:1]
---- < 5 [1:1]
------ < 4 [0:0] L
---- > 10 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([4, 5, 9, 10, 11, 12, 14])
  11 [3:1]
-- < 9 [2:1]
---- < 5 [1:1]
------ < 4 [0:0] L
---- > 10 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([4, 5, 9, 10, 11, 12, 14])
  11 [3:1]
-- < 9 [2:1]
---- < 5 [1:1]
------ < 4 [0:0] L
---- > 10 [0:0] L
-- > 12 [1:-1]
---- > 14 [0:0] L
set([4, 5, 9, 10, 11, 12, 14])
  13 [2:0]
-- < 11 [1:1]
---- < 4 [0:0] L
-- > 18 [1:0]
---- < 14 [0:0] L
---- > 19 [0:0] L
set([4, 11, 13, 14, 18, 19])
  13 [2:0]
-- < 7 [1:0]
---- < 4 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:-1]
---- > 17 [0:0] L
set([4, 7, 10, 13, 14, 17])
  13 [3:1]
-- < 7 [2:1]
---- < 4 [1:1]
------ < 3 [0:0] L
---- > 10 [0:0] L
-- > 14 [1:-1]
---- > 17 [0:0] L
set([3, 4, 7, 10, 13, 14, 17])
  13 [3:1]
-- < 7 [2:0]
---- < 4 [1:1]
------ < 3 [0:0] L
---- > 10 [1:1]
------ < 9 [0:0] L
-- > 14 [1:-1]
---- > 17 [0:0] L
set([3, 4, 7, 9, 10, 13, 14, 17])
  13 [3:1]
-- < 7 [2:0]
---- < 4 [1:1]
------ < 3 [0:0] L
---- > 10 [1:1]
------ < 9 [0:0] L
-- > 14 [1:-1]
---- > 17 [0:0] L
set([3, 4, 7, 9, 10, 13, 14, 17])
  13 [2:0]
-- < 5 [1:0]
---- < 4 [0:0] L
---- > 7 [0:0] L
-- > 17 [1:1]
---- < 15 [0:0] L
set([4, 5, 7, 13, 15, 17])
  13 [2:0]
-- < 5 [1:0]
---- < 4 [0:0] L
---- > 7 [0:0] L
-- > 17 [1:1]
---- < 15 [0:0] L
set([4, 5, 7, 13, 15, 17])
TEST #4 STEP #16 (0:00:30.064445) Mon May  1 02:26:08 2017 [ 122 stmts 164 branches ]
  11 [2:0]
-- < 1 [1:-1]
---- > 6 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 6, 11, 15, 18, 20])
  11 [2:0]
-- < 1 [1:-1]
---- > 6 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 6, 11, 15, 18, 20])
  11 [2:0]
-- < 1 [1:-1]
---- > 6 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 6, 11, 15, 18, 20])
  11 [2:0]
-- < 1 [1:-1]
---- > 6 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 6, 11, 15, 18, 20])
  11 [3:-1]
-- < 6 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [2:-1]
---- < 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([3, 6, 7, 11, 14, 18, 19, 20])
  11 [3:-1]
-- < 6 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [2:-1]
---- < 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([3, 6, 7, 11, 14, 18, 19, 20])
  11 [3:-1]
-- < 6 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [2:-1]
---- < 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([3, 6, 7, 11, 14, 18, 19, 20])
  11 [3:-1]
-- < 6 [1:0]
---- < 3 [0:0] L
---- > 7 [0:0] L
-- > 18 [2:-1]
---- < 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([3, 6, 7, 11, 14, 18, 19, 20])
  11 [3:1]
-- < 6 [2:1]
---- < 1 [1:-1]
------ > 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 2, 6, 7, 11, 15, 18, 20])
  13 [3:1]
-- < 5 [2:0]
---- < 2 [1:0]
------ < 1 [0:0] L
------ > 3 [0:0] L
---- > 7 [1:-1]
------ > 10 [0:0] L
-- > 19 [1:0]
---- < 18 [0:0] L
---- > 20 [0:0] L
set([1, 2, 3, 5, 7, 10, 13, 18, 19, 20])
  11 [3:0]
-- < 6 [2:1]
---- < 3 [1:0]
------ < 2 [0:0] L
------ > 5 [0:0] L
---- > 7 [0:0] L
-- > 18 [2:-1]
---- < 14 [0:0] L
---- > 19 [1:-1]
------ > 20 [0:0] L
set([2, 3, 5, 6, 7, 11, 14, 18, 19, 20])
  13 [3:0]
-- < 5 [2:0]
---- < 2 [1:0]
------ < 1 [0:0] L
------ > 3 [0:0] L
---- > 7 [1:-1]
------ > 10 [0:0] L
-- > 19 [2:1]
---- < 18 [1:1]
------ < 14 [0:0] L
---- > 20 [0:0] L
set([1, 2, 3, 5, 7, 10, 13, 14, 18, 19, 20])
  10 [3:1]
-- < 6 [2:1]
---- < 3 [1:1]
------ < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 3, 6, 7, 10, 15, 16, 20])
  10 [3:1]
-- < 6 [2:1]
---- < 3 [1:1]
------ < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 3, 6, 7, 10, 15, 16, 20])
  10 [3:1]
-- < 6 [2:1]
---- < 3 [1:1]
------ < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 3, 6, 7, 10, 15, 16, 20])
  10 [3:1]
-- < 6 [2:1]
---- < 3 [1:1]
------ < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 3, 6, 7, 10, 15, 16, 20])
  10 [3:1]
-- < 6 [2:1]
---- < 3 [1:1]
------ < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 3, 6, 7, 10, 15, 16, 20])
  10 [3:1]
-- < 6 [2:1]
---- < 3 [1:1]
------ < 1 [0:0] L
---- > 7 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 20 [0:0] L
set([1, 3, 6, 7, 10, 15, 16, 20])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
  13 [2:0]
-- < 8 [1:1]
---- < 6 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
set([6, 8, 13, 15, 16, 19])
  12 [3:1]
-- < 10 [2:1]
---- < 3 [1:0]
------ < 1 [0:0] L
------ > 6 [0:0] L
---- > 11 [0:0] L
-- > 16 [1:-1]
---- > 19 [0:0] L
set([1, 3, 6, 10, 11, 12, 16, 19])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d7f440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
Original test has 21 steps

SAVING TEST AS failure.40536.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 16                                                                # STEP 0
ACTION: int3 = 16 
int3 = None : <type 'NoneType'>
=> int3 = 16 : <type 'int'>
==================================================
int0 = 7                                                                 # STEP 1
ACTION: int0 = 7 
int0 = None : <type 'NoneType'>
=> int0 = 7 : <type 'int'>
==================================================
int1 = 10                                                                # STEP 2
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 3
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 4
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 14                                                                # STEP 5
ACTION: int2 = 14 
int2 = None : <type 'NoneType'>
=> int2 = 14 : <type 'int'>
==================================================
avl1.insert(int2)                                                        # STEP 6
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
int2 = 10                                                                # STEP 7
ACTION: int2 = 10 
int2 = 14 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl1.delete(int2)                                                        # STEP 8
ACTION: avl1.delete(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int1)                                                        # STEP 9
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 10
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 11
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 14]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 12
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.insert(int1)                                                       # STEP 13
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 10, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 10, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 14]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 15
ACTION: avl1.insert(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([16, 14, 7]) : <type 'set'>
==================================================
int0 = 12                                                               # STEP 16
ACTION: int0 = 12 
int0 = 7 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 17
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 10, 14, 7]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 18
ACTION: avl1.insert(int1) 
int1 = 10 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 10, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int2 = 20                                                               # STEP 19
ACTION: int2 = 20 
int2 = 10 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 20
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103ff5ea8> : <type 'instance'>
avl_REF1 = set([16, 10, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([10, 14, 7]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103fd0ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 8
STOPPING TESTING DUE TO TIMEOUT
8.11951932446 PERCENT COVERED
60.2345130444 TOTAL RUNTIME
8 EXECUTED
629 TOTAL TEST OPERATIONS
28.9079406261 TIME SPENT EXECUTING TEST OPERATIONS
0.0940079689026 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.1142923832 TIME SPENT CHECKING PROPERTIES
58.0222330093 TOTAL TIME SPENT RUNNING SUT
0.00426602363586 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 16                                                                # STEP 0
int0 = 7                                                                 # STEP 1
int1 = 10                                                                # STEP 2
avl1 = avl.AVLTree()                                                     # STEP 3
avl1.delete(int0)                                                        # STEP 4
int2 = 14                                                                # STEP 5
avl1.insert(int2)                                                        # STEP 6
int2 = 10                                                                # STEP 7
avl1.delete(int2)                                                        # STEP 8
avl1.delete(int1)                                                        # STEP 9
avl1.delete(int0)                                                       # STEP 10
avl1.insert(int3)                                                       # STEP 11
avl1.delete(int0)                                                       # STEP 12
avl1.insert(int1)                                                       # STEP 13
avl1.delete(int1)                                                       # STEP 14
avl1.insert(int0)                                                       # STEP 15
int0 = 12                                                               # STEP 16
avl1.insert(int2)                                                       # STEP 17
avl1.insert(int1)                                                       # STEP 18
int2 = 20                                                               # STEP 19
avl1.delete(int3)                                                       # STEP 20
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103fd0ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7893, in check
    assert self.p_avl[1].check_balanced()
198 BRANCHES COVERED
147 STATEMENTS COVERED
