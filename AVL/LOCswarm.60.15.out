Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.39987.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #25 (0:00:30.017976) Mon May  1 02:03:36 2017 [ 119 stmts 156 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10494dea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 97 steps

SAVING TEST AS failure.39987.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int3 = 7                                                                 # STEP 0
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 12                                                                # STEP 1
ACTION: int1 = 12 
int1 = None : <type 'NoneType'>
=> int1 = 12 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 2
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 3                                                                 # STEP 3
ACTION: int2 = 3 
int2 = None : <type 'NoneType'>
=> int2 = 3 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                             # STEP 5
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.delete(int1)                                                        # STEP 6
ACTION: avl0.delete(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int2)                                                        # STEP 7
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3]) : <type 'set'>
==================================================
avl0.delete(int0)                                                        # STEP 8
ACTION: avl0.delete(int0) 
int0 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                        # STEP 9
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 10
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 11
ACTION: avl0 == avl0 
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
avl0.insert(int2)                                                       # STEP 12
ACTION: avl0.insert(int2) 
int2 = 3 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 13
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([7]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 14
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 15
ACTION: avl1.delete(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 16
ACTION: avl1.insert(int2) 
int2 = 3 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 7]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 17
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([15, 3, 7]) : <type 'set'>
==================================================
int3 = 5                                                                # STEP 18
ACTION: int3 = 5 
int3 = 7 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 19
ACTION: avl0.insert(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([3, 12]) : <type 'set'>
==================================================
int0 = 13                                                               # STEP 20
ACTION: int0 = 13 
int0 = 15 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 21
ACTION: int1 = 20 
int1 = 12 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 23
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 12, 5]) : <type 'set'>
==================================================
int2 = 4                                                                # STEP 24
ACTION: int2 = 4 
int2 = 3 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 25
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([15, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.insert(int1)                                                       # STEP 26
ACTION: avl0.insert(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20, 3, 12, 5]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 27
ACTION: avl1.insert(int2) 
int2 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([15, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([15, 3, 4, 7]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 28
ACTION: int3 = 6 
int3 = 5 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 29
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 30
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([15, 3, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([15, 20, 3, 4, 7]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 31
ACTION: avl1.insert(int3) 
int3 = 6 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([15, 20, 3, 4, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 4, 6, 7, 15, 20]) : <type 'set'>
==================================================
int3 = 14                                                               # STEP 32
ACTION: int3 = 14 
int3 = 6 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
int1 = 7                                                                # STEP 33
ACTION: int1 = 7 
int1 = 20 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 34
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([4]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 35
ACTION: int2 = 10 
int2 = 4 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.insert(int1)                                                       # STEP 36
ACTION: avl0.insert(int1) 
int1 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([20, 3, 12, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([20, 3, 12, 5, 7]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 37
ACTION: avl0.insert(int2) 
int2 = 10 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([20, 3, 12, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 5, 7, 10, 12, 20]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 38
ACTION: avl2.insert(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([4, 14]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 39
ACTION: int2 = 19 
int2 = 10 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 40
ACTION: avl0.insert(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5, 7, 10, 12, 14, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 41
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.insert(int3)                                                       # STEP 42
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([3, 4, 6, 7, 14, 15, 20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 43
ACTION: avl1.insert(int3) 
int3 = 14 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int1 = 3                                                                # STEP 44
ACTION: int1 = 3 
int1 = 7 : <type 'int'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 19                                                               # STEP 45
ACTION: int3 = 19 
int3 = 14 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 46
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([3, 4, 14]) : <type 'set'>
==================================================
int2 = 16                                                               # STEP 48
ACTION: int2 = 16 
int2 = 19 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 49
ACTION: avl2.delete(int0) 
int0 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 50
ACTION: avl0.insert(int2) 
int2 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 14, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 20]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 51
ACTION: avl2.insert(int1) 
int1 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2 == avl2                                                            # STEP 52
ACTION: avl2 == avl2 
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl0.insert(int0)                                                       # STEP 53
ACTION: avl0.insert(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 5, 7, 10, 12, 13, 14, 16, 20]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 54
ACTION: avl2.delete(int2) 
int2 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int0)                                                       # STEP 55
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 13, 14, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 20]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 56
ACTION: int2 = 18 
int2 = 16 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 57
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 19, 20]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 58
ACTION: int1 = 8 
int1 = 3 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 59
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 60
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int3 = 11                                                               # STEP 61
ACTION: int3 = 11 
int3 = 19 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 62
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 20]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 63
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 5                                                                # STEP 64
ACTION: int0 = 5 
int0 = 13 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 65
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 66
ACTION: avl2.delete(int1) 
int1 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 67
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 68
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 18, 20]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 69
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 70
ACTION: avl0.insert(int0) 
int0 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 71
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 72
ACTION: avl0.insert(int3) 
int3 = 11 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5, 7, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 73
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 74
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int0 = 8                                                                # STEP 75
ACTION: int0 = 8 
int0 = 5 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
int3 = 13                                                               # STEP 76
ACTION: int3 = 13 
int3 = 11 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 77
ACTION: avl0.delete(int1) 
int1 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 4                                                                # STEP 78
ACTION: int1 = 4 
int1 = 8 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 79
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 80
ACTION: avl0.insert(int0) 
int0 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([3, 5, 7, 8, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 81
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 82
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 4, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 14]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 83
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 20]) : <type 'set'>
==================================================
int0 = 2                                                                # STEP 84
ACTION: int0 = 2 
int0 = 8 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 85
ACTION: avl2.insert(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([18, 3, 14]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 86
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 4, 6, 7, 8, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([3, 6, 7, 8, 14, 15, 20]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 87
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 8, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 4                                                                # STEP 88
ACTION: int1 = 4 
int1 = 4 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 89
ACTION: int0 = 9 
int0 = 2 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 90
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x104334200> : <type 'instance'>
avl_REF1 = set([3, 6, 7, 8, 14, 15, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([3, 6, 7, 8, 9, 14, 15, 20]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 91
ACTION: avl0.insert(int3) 
int3 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 8, 10, 11, 12, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 19, 20]) : <type 'set'>
==================================================
avl0.insert(int2)                                                       # STEP 92
ACTION: avl0.insert(int2) 
int2 = 18 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x1046b5710> : <type 'instance'>
avl_REF0 = set([3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 19, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 18, 19, 20]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 93
ACTION: avl2.insert(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([18, 3, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 3, 13, 14]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 94
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([18, 3, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int3 = 8                                                                # STEP 95
ACTION: int3 = 8 
int3 = 13 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 96
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1046881b8> : <type 'instance'>
avl_REF2 = set([18, 3, 13, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([3, 13, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104405488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 50
STOPPING TESTING DUE TO TIMEOUT
7.93754066363 PERCENT COVERED
60.2612218857 TOTAL RUNTIME
6 EXECUTED
547 TOTAL TEST OPERATIONS
25.6339805126 TIME SPENT EXECUTING TEST OPERATIONS
0.0819997787476 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
25.743434906 TIME SPENT CHECKING PROPERTIES
51.3774154186 TOTAL TIME SPENT RUNNING SUT
0.00347495079041 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int3 = 7                                                                 # STEP 0
int1 = 12                                                                # STEP 1
int0 = 15                                                                # STEP 2
int2 = 3                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0 == avl0                                                             # STEP 5
avl0.delete(int1)                                                        # STEP 6
avl0.insert(int2)                                                        # STEP 7
avl0.delete(int0)                                                        # STEP 8
avl0.insert(int2)                                                        # STEP 9
avl1 = avl.AVLTree()                                                    # STEP 10
avl0 == avl0                                                            # STEP 11
avl0.insert(int2)                                                       # STEP 12
avl1.insert(int3)                                                       # STEP 13
avl1.delete(int0)                                                       # STEP 14
avl1.delete(int1)                                                       # STEP 15
avl1.insert(int2)                                                       # STEP 16
avl1.insert(int0)                                                       # STEP 17
int3 = 5                                                                # STEP 18
avl0.insert(int1)                                                       # STEP 19
int0 = 13                                                               # STEP 20
int1 = 20                                                               # STEP 21
avl0.delete(int1)                                                       # STEP 22
avl0.insert(int3)                                                       # STEP 23
int2 = 4                                                                # STEP 24
avl1 == avl1                                                            # STEP 25
avl0.insert(int1)                                                       # STEP 26
avl1.insert(int2)                                                       # STEP 27
int3 = 6                                                                # STEP 28
avl2 = avl.AVLTree()                                                    # STEP 29
avl1.insert(int1)                                                       # STEP 30
avl1.insert(int3)                                                       # STEP 31
int3 = 14                                                               # STEP 32
int1 = 7                                                                # STEP 33
avl2.insert(int2)                                                       # STEP 34
int2 = 10                                                               # STEP 35
avl0.insert(int1)                                                       # STEP 36
avl0.insert(int2)                                                       # STEP 37
avl2.insert(int3)                                                       # STEP 38
int2 = 19                                                               # STEP 39
avl0.insert(int3)                                                       # STEP 40
avl2.delete(int2)                                                       # STEP 41
avl1.insert(int3)                                                       # STEP 42
avl1.insert(int3)                                                       # STEP 43
int1 = 3                                                                # STEP 44
int3 = 19                                                               # STEP 45
avl1.delete(int2)                                                       # STEP 46
avl2.insert(int1)                                                       # STEP 47
int2 = 16                                                               # STEP 48
avl2.delete(int0)                                                       # STEP 49
avl0.insert(int2)                                                       # STEP 50
avl2.insert(int1)                                                       # STEP 51
avl2 == avl2                                                            # STEP 52
avl0.insert(int0)                                                       # STEP 53
avl2.delete(int2)                                                       # STEP 54
avl0.delete(int0)                                                       # STEP 55
int2 = 18                                                               # STEP 56
avl0.insert(int3)                                                       # STEP 57
int1 = 8                                                                # STEP 58
avl0.insert(int3)                                                       # STEP 59
avl2.delete(int1)                                                       # STEP 60
int3 = 11                                                               # STEP 61
avl1.insert(int1)                                                       # STEP 62
avl2.delete(int1)                                                       # STEP 63
int0 = 5                                                                # STEP 64
avl2.delete(int2)                                                       # STEP 65
avl2.delete(int1)                                                       # STEP 66
avl1.insert(int1)                                                       # STEP 67
avl1.insert(int2)                                                       # STEP 68
avl1.insert(int2)                                                       # STEP 69
avl0.insert(int0)                                                       # STEP 70
avl2.delete(int2)                                                       # STEP 71
avl0.insert(int3)                                                       # STEP 72
avl0.delete(int1)                                                       # STEP 73
avl2.delete(int3)                                                       # STEP 74
int0 = 8                                                                # STEP 75
int3 = 13                                                               # STEP 76
avl0.delete(int1)                                                       # STEP 77
int1 = 4                                                                # STEP 78
avl0.delete(int1)                                                       # STEP 79
avl0.insert(int0)                                                       # STEP 80
avl1.insert(int1)                                                       # STEP 81
avl2.delete(int1)                                                       # STEP 82
avl1.delete(int2)                                                       # STEP 83
int0 = 2                                                                # STEP 84
avl2.insert(int2)                                                       # STEP 85
avl1.delete(int1)                                                       # STEP 86
avl0.delete(int0)                                                       # STEP 87
int1 = 4                                                                # STEP 88
int0 = 9                                                                # STEP 89
avl1.insert(int0)                                                       # STEP 90
avl0.insert(int3)                                                       # STEP 91
avl0.insert(int2)                                                       # STEP 92
avl2.insert(int3)                                                       # STEP 93
avl2.delete(int1)                                                       # STEP 94
int3 = 8                                                                # STEP 95
avl2.delete(int2)                                                       # STEP 96
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104405488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
189 BRANCHES COVERED
145 STATEMENTS COVERED
