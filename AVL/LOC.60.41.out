Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99905.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104350ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 55 steps

SAVING TEST AS failure.99905.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
avl1 = avl.AVLTree()                                                     # STEP 0
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
int1 = 10                                                                # STEP 1
ACTION: int1 = 10 
int1 = None : <type 'NoneType'>
=> int1 = 10 : <type 'int'>
==================================================
avl1.delete(int1)                                                        # STEP 2
ACTION: avl1.delete(int1) 
int1 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.inorder()                                                  # STEP 3
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 2                                                                 # STEP 4
ACTION: int3 = 2 
int3 = None : <type 'NoneType'>
=> int3 = 2 : <type 'int'>
==================================================
int1 = 11                                                                # STEP 5
ACTION: int1 = 11 
int1 = 10 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 6
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int2 = 11                                                                # STEP 7
ACTION: int2 = 11 
int2 = None : <type 'NoneType'>
=> int2 = 11 : <type 'int'>
==================================================
avl1.delete(int3)                                                        # STEP 8
ACTION: avl1.delete(int3) 
int3 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                        # STEP 9
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 10
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 11
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 12
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 13
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 14
ACTION: avl1.delete(int3) 
int3 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 6                                                                # STEP 15
ACTION: int3 = 6 
int3 = 2 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 16
ACTION: avl1.insert(int1) 
int1 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 17
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 18
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 16                                                               # STEP 19
ACTION: int3 = 16 
int3 = 6 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
int1 = 8                                                                # STEP 20
ACTION: int1 = 8 
int1 = 11 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
int0 = 20                                                               # STEP 22
ACTION: int0 = 20 
int0 = 15 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 23
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 24
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
result = avl1.inorder()                                                 # STEP 25
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 26
ACTION: avl1.insert(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([11, 20]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 27
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([20]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 28
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 29
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([16, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 8, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 30
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([16, 8, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([16, 8]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 31
ACTION: result = avl1.find(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([16, 8]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 32
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([16, 8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([8]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 33
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 15                                                               # STEP 34
ACTION: int0 = 15 
int0 = 20 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 35
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.delete(int2)                                                       # STEP 36
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 37
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x1042d8fc8> : <type 'instance'>
avl_REF1 = set([8]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 38
ACTION: avl1.delete(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 39
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 40
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 41
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 15]) : <type 'set'>
==================================================
int2 = 5                                                                # STEP 42
ACTION: int2 = 5 
int2 = 11 : <type 'int'>
=> int2 = 5 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 43
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([15]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 44
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 45
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 46
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([16, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 47
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 48
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 49
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([16, 8, 15]) : <type 'set'>
==================================================
result = avl1.find(int0)                                                # STEP 50
ACTION: result = avl1.find(int0) 
int0 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 8, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int1 = 15                                                               # STEP 51
ACTION: int1 = 15 
int1 = 8 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 52
ACTION: avl1.insert(int2) 
int2 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 8, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([16, 8, 5, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 53
ACTION: avl1.insert(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 8, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 54
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058a5170> : <type 'instance'>
avl_REF1 = set([16, 8, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([16, 8, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10412ab90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #4 STEP #61 (0:00:30.059408) Fri Apr 28 05:16:17 2017 [ 149 stmts 198 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104172b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 77 steps

SAVING TEST AS failure.99905.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 10                                                                # STEP 0
ACTION: int0 = 10 
int0 = None : <type 'NoneType'>
=> int0 = 10 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int0)                                                        # STEP 2
ACTION: avl1.delete(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int1 = 3                                                                 # STEP 3
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 17                                                                # STEP 4
ACTION: int3 = 17 
int3 = None : <type 'NoneType'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.insert(int3)                                                        # STEP 5
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 6
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 10]) : <type 'set'>
==================================================
avl1.insert(int0)                                                        # STEP 7
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int1)                                                        # STEP 8
ACTION: avl1.insert(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 10, 3]) : <type 'set'>
==================================================
int0 = 10                                                                # STEP 9
ACTION: int0 = 10 
int0 = 10 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([17, 10]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 11
ACTION: avl1.delete(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 12
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 9                                                                # STEP 13
ACTION: int1 = 9 
int1 = 3 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 14
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
result = avl1.find(int1)                                                # STEP 15
ACTION: result = avl1.find(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
avl1.insert(int0)                                                       # STEP 16
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int1 = 19                                                               # STEP 17
ACTION: int1 = 19 
int1 = 9 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 18
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 10]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
int0 = 1                                                                # STEP 20
ACTION: int0 = 1 
int0 = 10 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.insert(int0)                                                       # STEP 21
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 10, 1]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 22
ACTION: avl1.delete(int1) 
int1 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 23
ACTION: avl1.insert(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.insert(int0)                                                       # STEP 24
ACTION: avl1.insert(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 25
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([17, 10]) : <type 'set'>
==================================================
int1 = 17                                                               # STEP 26
ACTION: int1 = 17 
int1 = 19 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 27
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
int3 = 20                                                               # STEP 28
ACTION: int3 = 20 
int3 = 17 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
int0 = 17                                                               # STEP 29
ACTION: int0 = 17 
int0 = 1 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 30
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 31
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 32
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 8                                                                # STEP 33
ACTION: int1 = 8 
int1 = 17 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 34
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int0)                                                       # STEP 35
ACTION: avl1.insert(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 10]) : <type 'set'>
==================================================
result = avl1.inorder()                                                 # STEP 36
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl1.inorder()                                                 # STEP 38
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int0)                                                       # STEP 39
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([17, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
int3 = 18                                                               # STEP 40
ACTION: int3 = 18 
int3 = 20 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 41
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 42
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.delete(int1)                                                       # STEP 43
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 20                                                               # STEP 44
ACTION: int2 = 20 
int2 = None : <type 'NoneType'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 45
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 46
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 47
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 3                                                                # STEP 48
ACTION: int2 = 3 
int2 = 20 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
result = avl1.find(int2)                                                # STEP 49
ACTION: result = avl1.find(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 50
ACTION: avl1.delete(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int2)                                                       # STEP 51
ACTION: avl1.delete(int2) 
int2 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 52
ACTION: avl1.insert(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([8, 10]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 53
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([8, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([10]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 54
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int0 = 18                                                               # STEP 55
ACTION: int0 = 18 
int0 = 17 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 56
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.delete(int1)                                                       # STEP 57
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int2 = 18                                                               # STEP 58
ACTION: int2 = 18 
int2 = 3 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 59
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 60
ACTION: avl1.insert(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 10]) : <type 'set'>
==================================================
int1 = 20                                                               # STEP 61
ACTION: int1 = 20 
int1 = 8 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 62
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 19                                                               # STEP 63
ACTION: int3 = 19 
int3 = 18 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 64
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 65
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 20, 10]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 66
ACTION: avl1.insert(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 20, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 67
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 20, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18, 19, 20, 10]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 68
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 19, 20, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([18, 20, 10]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 69
ACTION: avl1.insert(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 20, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18, 19, 20, 10]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 70
ACTION: avl1.delete(int1) 
int1 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 19, 20, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([18, 19, 10]) : <type 'set'>
==================================================
int0 = 9                                                                # STEP 71
ACTION: int0 = 9 
int0 = 18 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
int3 = 12                                                               # STEP 72
ACTION: int3 = 12 
int3 = 19 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 73
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 19, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 74
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 19, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 19, 9, 10]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 75
ACTION: avl1.insert(int3) 
int3 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 19, 9, 10]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18, 19, 9, 10, 12]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 76
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1041725a8> : <type 'instance'>
avl_REF1 = set([18, 19, 9, 10, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([19, 9, 10, 12]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045c5248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
  11 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 9 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([3, 4, 9, 11, 18, 20])
  11 [3:1]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 8 [1:0]
------ < 5 [0:0] L
------ > 9 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
set([3, 4, 5, 8, 9, 11, 18, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045f8b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
Original test has 87 steps

SAVING TEST AS failure.99905.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 15                                                                # STEP 0
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int1 = 18                                                                # STEP 1
ACTION: int1 = 18 
int1 = None : <type 'NoneType'>
=> int1 = 18 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 2
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 3
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.delete(int0)                                                        # STEP 4
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int0)                                                        # STEP 5
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 3                                                                 # STEP 6
ACTION: int0 = 3 
int0 = 15 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
result = avl2.find(int0)                                                 # STEP 7
ACTION: result = avl2.find(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int0) 
==================================================
avl2.delete(int1)                                                        # STEP 8
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 9
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 10
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 11
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 12
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([18]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 13
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([18, 3]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 14
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2 == avl2                                                            # STEP 15
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.insert(int1)                                                       # STEP 16
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.find(int1)                                                # STEP 17
ACTION: result = avl2.find(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 18
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 19
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 20
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int0 = 8                                                                # STEP 21
ACTION: int0 = 8 
int0 = 3 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 22
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 18, 3]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 23
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 24
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int1 = 8                                                                # STEP 25
ACTION: int1 = 8 
int1 = 18 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 26
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 27
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int2 = 11                                                               # STEP 28
ACTION: int2 = 11 
int2 = None : <type 'NoneType'>
=> int2 = 11 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 29
ACTION: int3 = 11 
int3 = None : <type 'NoneType'>
=> int3 = 11 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 30
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 31
ACTION: avl2.insert(int1) 
int1 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 32
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2 == avl2                                                            # STEP 33
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int3)                                                       # STEP 34
ACTION: avl2.delete(int3) 
int3 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 35
ACTION: avl2.delete(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([8, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([18, 3]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 36
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                       # STEP 37
ACTION: avl2.insert(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 18, 3]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 38
ACTION: int3 = 17 
int3 = 11 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 4                                                                # STEP 39
ACTION: int0 = 4 
int0 = 8 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
int1 = 4                                                                # STEP 40
ACTION: int1 = 4 
int1 = 8 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 41
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int2)                                                       # STEP 42
ACTION: avl2.delete(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([18, 3]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 43
ACTION: avl2.insert(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 18, 3]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 44
ACTION: avl2.insert(int2) 
int2 = 11 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 45
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int1)                                                       # STEP 46
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 18, 3, 4]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 47
ACTION: avl2.insert(int1) 
int1 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 48
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3, 4]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([11, 18, 3]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 49
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
int1 = 15                                                               # STEP 50
ACTION: int1 = 15 
int1 = 4 : <type 'int'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 5                                                                # STEP 51
ACTION: int3 = 5 
int3 = 17 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 52
ACTION: avl2.delete(int0) 
int0 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int2 = 2                                                                # STEP 53
ACTION: int2 = 2 
int2 = 11 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
result = avl2.inorder()                                                 # STEP 54
ACTION: result = avl2.inorder() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int1)                                                       # STEP 55
ACTION: avl2.delete(int1) 
int1 = 15 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 9                                                                # STEP 56
ACTION: int0 = 9 
int0 = 4 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
result = avl2.find(int2)                                                # STEP 57
ACTION: result = avl2.find(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF2.__contains__(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 58
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 9, 18, 3]) : <type 'set'>
==================================================
int2 = 4                                                                # STEP 59
ACTION: int2 = 4 
int2 = 2 : <type 'int'>
=> int2 = 4 : <type 'int'>
==================================================
int1 = 20                                                               # STEP 60
ACTION: int1 = 20 
int1 = 15 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 61
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 9, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 62
ACTION: avl2.delete(int3) 
int3 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 9, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 63
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 9, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([11, 18, 3]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 64
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 18, 3, 20]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 65
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 66
ACTION: avl2.insert(int2) 
int2 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 18, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([11, 4, 18, 3, 20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 67
ACTION: avl2.insert(int0) 
int0 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([11, 4, 18, 3, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 4, 9, 11, 18, 20]) : <type 'set'>
==================================================
avl2.display()                                                          # STEP 68
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 11, 18, 20]) : <type 'set'>
  11 [2:0]
-- < 4 [1:0]
---- < 3 [0:0] L
---- > 9 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([3, 4, 9, 11, 18, 20])
==================================================
int0 = 8                                                                # STEP 69
ACTION: int0 = 8 
int0 = 9 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 70
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 4, 8, 9, 11, 18, 20]) : <type 'set'>
==================================================
int2 = 2                                                                # STEP 71
ACTION: int2 = 2 
int2 = 4 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 72
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 73
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int3)                                                       # STEP 74
ACTION: avl2.insert(int3) 
int3 = 5 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 75
ACTION: int3 = 6 
int3 = 5 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 76
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int1)                                                       # STEP 77
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 78
ACTION: avl2.delete(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([3, 4, 5, 9, 11, 18, 20]) : <type 'set'>
==================================================
avl2 == avl2                                                            # STEP 79
ACTION: avl2 == avl2 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2 == avl_REF2 
==================================================
avl2.delete(int2)                                                       # STEP 80
ACTION: avl2.delete(int2) 
int2 = 2 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.insert(int0)                                                       # STEP 81
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 82
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 83
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.display()                                                          # STEP 84
ACTION: avl2.display() 
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
  11 [3:1]
-- < 4 [2:-1]
---- < 3 [0:0] L
---- > 8 [1:0]
------ < 5 [0:0] L
------ > 9 [0:0] L
-- > 18 [1:-1]
---- > 20 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([3, 4, 5, 8, 9, 11, 18, 20])
==================================================
avl2.insert(int1)                                                       # STEP 85
ACTION: avl2.insert(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 86
ACTION: avl2.delete(int1) 
int1 = 20 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x1045df0e0> : <type 'instance'>
avl_REF2 = set([3, 4, 5, 8, 9, 11, 18, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([3, 4, 5, 8, 9, 11, 18]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046b23b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 9
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.2122499943 TOTAL RUNTIME
7 EXECUTED
528 TOTAL TEST OPERATIONS
21.0963246822 TIME SPENT EXECUTING TEST OPERATIONS
0.0618855953217 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
21.1703717709 TIME SPENT CHECKING PROPERTIES
42.2666964531 TOTAL TIME SPENT RUNNING SUT
0.00414299964905 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
avl1 = avl.AVLTree()                                                     # STEP 0
int1 = 10                                                                # STEP 1
avl1.delete(int1)                                                        # STEP 2
result = avl1.inorder()                                                  # STEP 3
int3 = 2                                                                 # STEP 4
int1 = 11                                                                # STEP 5
int0 = 15                                                                # STEP 6
int2 = 11                                                                # STEP 7
avl1.delete(int3)                                                        # STEP 8
avl1.delete(int2)                                                        # STEP 9
avl1.insert(int1)                                                       # STEP 10
avl1.delete(int2)                                                       # STEP 11
avl1.insert(int2)                                                       # STEP 12
avl1.insert(int0)                                                       # STEP 13
avl1.delete(int3)                                                       # STEP 14
int3 = 6                                                                # STEP 15
avl1.insert(int1)                                                       # STEP 16
avl1.insert(int2)                                                       # STEP 17
avl1.delete(int3)                                                       # STEP 18
int3 = 16                                                               # STEP 19
int1 = 8                                                                # STEP 20
avl1.delete(int0)                                                       # STEP 21
int0 = 20                                                               # STEP 22
avl1.insert(int2)                                                       # STEP 23
avl1.insert(int2)                                                       # STEP 24
result = avl1.inorder()                                                 # STEP 25
avl1.insert(int0)                                                       # STEP 26
avl1.delete(int2)                                                       # STEP 27
avl1.insert(int3)                                                       # STEP 28
avl1.insert(int1)                                                       # STEP 29
avl1.delete(int0)                                                       # STEP 30
result = avl1.find(int3)                                                # STEP 31
avl1.delete(int3)                                                       # STEP 32
avl1.delete(int0)                                                       # STEP 33
int0 = 15                                                               # STEP 34
avl1.delete(int3)                                                       # STEP 35
avl1.delete(int2)                                                       # STEP 36
avl1 = avl.AVLTree()                                                    # STEP 37
avl1.delete(int2)                                                       # STEP 38
avl1.insert(int0)                                                       # STEP 39
avl1.delete(int1)                                                       # STEP 40
avl1.insert(int3)                                                       # STEP 41
int2 = 5                                                                # STEP 42
avl1.delete(int3)                                                       # STEP 43
avl1.insert(int0)                                                       # STEP 44
avl1.delete(int1)                                                       # STEP 45
avl1.insert(int3)                                                       # STEP 46
avl1.insert(int3)                                                       # STEP 47
avl1.delete(int1)                                                       # STEP 48
avl1.insert(int1)                                                       # STEP 49
result = avl1.find(int0)                                                # STEP 50
int1 = 15                                                               # STEP 51
avl1.insert(int2)                                                       # STEP 52
avl1.insert(int3)                                                       # STEP 53
avl1.delete(int1)                                                       # STEP 54
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10412ab90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 1
int0 = 10                                                                # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl1.delete(int0)                                                        # STEP 2
int1 = 3                                                                 # STEP 3
int3 = 17                                                                # STEP 4
avl1.insert(int3)                                                        # STEP 5
avl1.insert(int0)                                                        # STEP 6
avl1.insert(int0)                                                        # STEP 7
avl1.insert(int1)                                                        # STEP 8
int0 = 10                                                                # STEP 9
avl1.delete(int1)                                                       # STEP 10
avl1.delete(int3)                                                       # STEP 11
avl1.insert(int0)                                                       # STEP 12
int1 = 9                                                                # STEP 13
avl1.delete(int1)                                                       # STEP 14
result = avl1.find(int1)                                                # STEP 15
avl1.insert(int0)                                                       # STEP 16
int1 = 19                                                               # STEP 17
avl1.insert(int3)                                                       # STEP 18
avl1.insert(int0)                                                       # STEP 19
int0 = 1                                                                # STEP 20
avl1.insert(int0)                                                       # STEP 21
avl1.delete(int1)                                                       # STEP 22
avl1.insert(int3)                                                       # STEP 23
avl1.insert(int0)                                                       # STEP 24
avl1.delete(int0)                                                       # STEP 25
int1 = 17                                                               # STEP 26
avl1 == avl1                                                            # STEP 27
int3 = 20                                                               # STEP 28
int0 = 17                                                               # STEP 29
avl1.delete(int1)                                                       # STEP 30
avl1.delete(int1)                                                       # STEP 31
avl1.delete(int1)                                                       # STEP 32
int1 = 8                                                                # STEP 33
result = avl1.inorder()                                                 # STEP 34
avl1.insert(int0)                                                       # STEP 35
result = avl1.inorder()                                                 # STEP 36
avl1.delete(int3)                                                       # STEP 37
result = avl1.inorder()                                                 # STEP 38
avl1.delete(int0)                                                       # STEP 39
int3 = 18                                                               # STEP 40
avl1.delete(int1)                                                       # STEP 41
avl1.delete(int1)                                                       # STEP 42
avl1.delete(int1)                                                       # STEP 43
int2 = 20                                                               # STEP 44
avl1.delete(int2)                                                       # STEP 45
avl1.delete(int2)                                                       # STEP 46
avl1.delete(int0)                                                       # STEP 47
int2 = 3                                                                # STEP 48
result = avl1.find(int2)                                                # STEP 49
avl1.delete(int0)                                                       # STEP 50
avl1.delete(int2)                                                       # STEP 51
avl1.insert(int1)                                                       # STEP 52
avl1.delete(int1)                                                       # STEP 53
avl1.delete(int3)                                                       # STEP 54
int0 = 18                                                               # STEP 55
result = avl1.inorder()                                                 # STEP 56
avl1.delete(int1)                                                       # STEP 57
int2 = 18                                                               # STEP 58
avl1.delete(int2)                                                       # STEP 59
avl1.insert(int0)                                                       # STEP 60
int1 = 20                                                               # STEP 61
avl1.insert(int2)                                                       # STEP 62
int3 = 19                                                               # STEP 63
avl1.insert(int2)                                                       # STEP 64
avl1.insert(int1)                                                       # STEP 65
avl1.insert(int1)                                                       # STEP 66
avl1.insert(int3)                                                       # STEP 67
avl1.delete(int3)                                                       # STEP 68
avl1.insert(int3)                                                       # STEP 69
avl1.delete(int1)                                                       # STEP 70
int0 = 9                                                                # STEP 71
int3 = 12                                                               # STEP 72
avl1.insert(int2)                                                       # STEP 73
avl1.insert(int0)                                                       # STEP 74
avl1.insert(int3)                                                       # STEP 75
avl1.delete(int2)                                                       # STEP 76
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1045c5248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE 2
int0 = 15                                                                # STEP 0
int1 = 18                                                                # STEP 1
avl2 = avl.AVLTree()                                                     # STEP 2
avl2.insert(int1)                                                        # STEP 3
avl2.delete(int0)                                                        # STEP 4
avl2.delete(int0)                                                        # STEP 5
int0 = 3                                                                 # STEP 6
result = avl2.find(int0)                                                 # STEP 7
avl2.delete(int1)                                                        # STEP 8
avl2.insert(int0)                                                        # STEP 9
avl2.delete(int1)                                                       # STEP 10
avl2.delete(int0)                                                       # STEP 11
avl2.insert(int1)                                                       # STEP 12
avl2.insert(int0)                                                       # STEP 13
avl2.insert(int1)                                                       # STEP 14
avl2 == avl2                                                            # STEP 15
avl2.insert(int1)                                                       # STEP 16
result = avl2.find(int1)                                                # STEP 17
avl2.insert(int0)                                                       # STEP 18
avl2.insert(int0)                                                       # STEP 19
result = avl2.inorder()                                                 # STEP 20
int0 = 8                                                                # STEP 21
avl2.insert(int0)                                                       # STEP 22
avl2.insert(int0)                                                       # STEP 23
avl2.insert(int0)                                                       # STEP 24
int1 = 8                                                                # STEP 25
avl2.insert(int0)                                                       # STEP 26
result = avl2.inorder()                                                 # STEP 27
int2 = 11                                                               # STEP 28
int3 = 11                                                               # STEP 29
avl2.delete(int2)                                                       # STEP 30
avl2.insert(int1)                                                       # STEP 31
result = avl2.inorder()                                                 # STEP 32
avl2 == avl2                                                            # STEP 33
avl2.delete(int3)                                                       # STEP 34
avl2.delete(int0)                                                       # STEP 35
result = avl2.inorder()                                                 # STEP 36
avl2.insert(int2)                                                       # STEP 37
int3 = 17                                                               # STEP 38
int0 = 4                                                                # STEP 39
int1 = 4                                                                # STEP 40
avl2.delete(int3)                                                       # STEP 41
avl2.delete(int2)                                                       # STEP 42
avl2.insert(int2)                                                       # STEP 43
avl2.insert(int2)                                                       # STEP 44
avl2.delete(int0)                                                       # STEP 45
avl2.insert(int1)                                                       # STEP 46
avl2.insert(int1)                                                       # STEP 47
avl2.delete(int0)                                                       # STEP 48
avl2 == avl2                                                            # STEP 49
int1 = 15                                                               # STEP 50
int3 = 5                                                                # STEP 51
avl2.delete(int0)                                                       # STEP 52
int2 = 2                                                                # STEP 53
result = avl2.inorder()                                                 # STEP 54
avl2.delete(int1)                                                       # STEP 55
int0 = 9                                                                # STEP 56
result = avl2.find(int2)                                                # STEP 57
avl2.insert(int0)                                                       # STEP 58
int2 = 4                                                                # STEP 59
int1 = 20                                                               # STEP 60
avl2.delete(int1)                                                       # STEP 61
avl2.delete(int3)                                                       # STEP 62
avl2.delete(int0)                                                       # STEP 63
avl2.insert(int1)                                                       # STEP 64
avl2.insert(int1)                                                       # STEP 65
avl2.insert(int2)                                                       # STEP 66
avl2.insert(int0)                                                       # STEP 67
avl2.display()                                                          # STEP 68
int0 = 8                                                                # STEP 69
avl2.insert(int0)                                                       # STEP 70
int2 = 2                                                                # STEP 71
avl2.insert(int1)                                                       # STEP 72
avl2.delete(int2)                                                       # STEP 73
avl2.insert(int3)                                                       # STEP 74
int3 = 6                                                                # STEP 75
avl2.delete(int2)                                                       # STEP 76
avl2.insert(int1)                                                       # STEP 77
avl2.delete(int0)                                                       # STEP 78
avl2 == avl2                                                            # STEP 79
avl2.delete(int2)                                                       # STEP 80
avl2.insert(int0)                                                       # STEP 81
avl2.insert(int0)                                                       # STEP 82
avl2.insert(int0)                                                       # STEP 83
avl2.display()                                                          # STEP 84
avl2.insert(int1)                                                       # STEP 85
avl2.delete(int1)                                                       # STEP 86
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046b23b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7894, in check
    assert self.p_avl[2].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
