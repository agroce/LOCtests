Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.46116.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  7 [2:0]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 5 [0:0] L
-- > 15 [1:1]
---- < 13 [0:0] L
set([2, 4, 5, 7, 13, 15])
  7 [2:0]
-- < 4 [1:0]
---- < 2 [0:0] L
---- > 5 [0:0] L
-- > 15 [1:1]
---- < 13 [0:0] L
set([2, 4, 5, 7, 13, 15])
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([2, 3, 7, 13, 17, 18])
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
set([2, 3, 7, 13, 17, 18])
TEST #4 STEP #39 (0:00:30.027645) Mon May  1 03:15:00 2017 [ 145 stmts 195 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103796e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 89 steps

SAVING TEST AS failure.46116.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 2                                                                 # STEP 0
ACTION: int1 = 2 
int1 = None : <type 'NoneType'>
=> int1 = 2 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 1
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
int3 = 13                                                                # STEP 2
ACTION: int3 = 13 
int3 = None : <type 'NoneType'>
=> int3 = 13 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 3
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 5
ACTION: avl2.insert(int1) 
int1 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
int1 = 18                                                                # STEP 6
ACTION: int1 = 18 
int1 = 2 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl2.insert(int0)                                                        # STEP 7
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 15]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 8
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int2)                                                        # STEP 9
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 10
ACTION: avl2.delete(int1) 
int1 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 4                                                                # STEP 11
ACTION: int1 = 4 
int1 = 18 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 12
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 13
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([2, 13]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 14
ACTION: avl2.delete(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 18                                                               # STEP 15
ACTION: int0 = 18 
int0 = 15 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
int2 = 3                                                                # STEP 16
ACTION: int2 = 3 
int2 = 13 : <type 'int'>
=> int2 = 3 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 17
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 18, 13]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 18
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int0)                                                       # STEP 19
ACTION: avl2.insert(int0) 
int0 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 20
ACTION: avl2.insert(int3) 
int3 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
int3 = 2                                                                # STEP 21
ACTION: int3 = 2 
int3 = 13 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
int0 = 7                                                                # STEP 22
ACTION: int0 = 7 
int0 = 18 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 23
ACTION: avl2.insert(int0) 
int0 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 18, 13, 7]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 24
ACTION: avl2.delete(int3) 
int3 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([18, 13, 7]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 25
ACTION: avl2.delete(int1) 
int1 = 4 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int0 = 6                                                                # STEP 26
ACTION: int0 = 6 
int0 = 7 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 27
ACTION: avl2.insert(int2) 
int2 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([3, 18, 13, 7]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 28
ACTION: int2 = 7 
int2 = 3 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 29
ACTION: avl2.insert(int3) 
int3 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([3, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([3, 2, 18, 13, 7]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 30
ACTION: int3 = 17 
int3 = 2 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl2.insert(int3)                                                       # STEP 31
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([3, 2, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([2, 3, 7, 13, 17, 18]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 32
ACTION: avl2.delete(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 7, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 33
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 7, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int1 = 5                                                                # STEP 34
ACTION: int1 = 5 
int1 = 4 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl2.display()                                                          # STEP 35
ACTION: avl2.display() 
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 7, 13, 17, 18]) : <type 'set'>
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 3, 7, 13, 17, 18])
==================================================
avl2.display()                                                          # STEP 36
ACTION: avl2.display() 
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 7, 13, 17, 18]) : <type 'set'>
  13 [2:0]
-- < 3 [1:0]
---- < 2 [0:0] L
---- > 7 [0:0] L
-- > 18 [1:1]
---- < 17 [0:0] L
REFERENCE ACTION: print(avl_REF2) 
set([2, 3, 7, 13, 17, 18])
==================================================
avl2.delete(int3)                                                       # STEP 37
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 7, 13, 17, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([2, 3, 7, 13, 18]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 38
ACTION: avl2.insert(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 7, 13, 18]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2, 3, 6, 7, 13, 18]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 39
ACTION: avl2 = avl.AVLTree() 
avl2 = <avlbug2.AVLTree instance at 0x10590ccb0> : <type 'instance'>
avl_REF2 = set([2, 3, 6, 7, 13, 18]) : <type 'set'>
=> avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 40
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 41
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 42
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.delete(int1)                                                       # STEP 43
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 16                                                               # STEP 44
ACTION: int1 = 16 
int1 = 5 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 45
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int2)                                                       # STEP 46
ACTION: avl2.insert(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 7]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 47
ACTION: avl2.delete(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([7]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 48
ACTION: avl2.delete(int0) 
int0 = 6 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int2)                                                       # STEP 49
ACTION: avl2.delete(int2) 
int2 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 50
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 13                                                               # STEP 51
ACTION: int2 = 13 
int2 = 7 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 52
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 53
ACTION: avl2.insert(int3) 
int3 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.insert(int2)                                                       # STEP 54
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 13]) : <type 'set'>
==================================================
int0 = 10                                                               # STEP 55
ACTION: int0 = 10 
int0 = 6 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int3 = 1                                                                # STEP 56
ACTION: int3 = 1 
int3 = 17 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 57
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 58
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int2 = 8                                                                # STEP 59
ACTION: int2 = 8 
int2 = 13 : <type 'int'>
=> int2 = 8 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 60
ACTION: avl2.delete(int0) 
int0 = 10 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 61
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 62
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 63
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
int0 = 5                                                                # STEP 64
ACTION: int0 = 5 
int0 = 10 : <type 'int'>
=> int0 = 5 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 65
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 17, 13]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 66
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([16, 17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
=> avl_REF2 = set([17, 13]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 67
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int0)                                                       # STEP 68
ACTION: avl2.delete(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
result = avl2.inorder()                                                 # STEP 69
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int1)                                                       # STEP 70
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 71
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 72
ACTION: avl2.delete(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl2.inorder()                                                 # STEP 73
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.delete(int3)                                                       # STEP 74
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 18                                                               # STEP 75
ACTION: int3 = 18 
int3 = 1 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 76
ACTION: avl2.delete(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 77
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([17, 18, 13]) : <type 'set'>
==================================================
result = avl2.inorder()                                                 # STEP 78
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int3)                                                       # STEP 79
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
avl2.insert(int2)                                                       # STEP 80
ACTION: avl2.insert(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 17, 18, 13]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 81
ACTION: avl2.delete(int2) 
int2 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([8, 17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([17, 18, 13]) : <type 'set'>
==================================================
avl2.insert(int3)                                                       # STEP 82
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 83
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int1)                                                       # STEP 84
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([16, 17, 18, 13]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 85
ACTION: avl2.insert(int1) 
int1 = 16 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([16, 17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 86
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([16, 17, 18, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([16, 17, 18, 13, 5]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 87
ACTION: avl2.insert(int0) 
int0 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([16, 17, 18, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl2.delete(int3)                                                       # STEP 88
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103674170> : <type 'instance'>
avl_REF2 = set([16, 17, 18, 13, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
=> avl_REF2 = set([16, 17, 13, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103672488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10369df38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 67 steps

SAVING TEST AS failure.46116.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 2                                                                 # STEP 0
ACTION: int2 = 2 
int2 = None : <type 'NoneType'>
=> int2 = 2 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 1
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 2
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                        # STEP 3
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl1.delete(int2)                                                        # STEP 4
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 5
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([2]) : <type 'set'>
==================================================
avl1.insert(int2)                                                        # STEP 6
ACTION: avl1.insert(int2) 
int2 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int3 = 18                                                                # STEP 7
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
int1 = 15                                                                # STEP 8
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int0 = 5                                                                 # STEP 9
ACTION: int0 = 5 
int0 = None : <type 'NoneType'>
=> int0 = 5 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 10
ACTION: int2 = 16 
int2 = 2 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 11
ACTION: avl1 == avl1 
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.insert(int0)                                                       # STEP 12
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([2, 5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 13
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 14
ACTION: avl1.insert(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([2, 5, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 15
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 18, 5, 15]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 16
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int2 = 20                                                               # STEP 17
ACTION: int2 = 20 
int2 = 16 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 18
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([2, 18, 5]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 19
ACTION: avl1.insert(int0) 
int0 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.insert(int3)                                                       # STEP 20
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int1)                                                       # STEP 21
ACTION: avl1.delete(int1) 
int1 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 8                                                                # STEP 22
ACTION: int1 = 8 
int1 = 15 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 23
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int0 = 15                                                               # STEP 24
ACTION: int0 = 15 
int0 = 5 : <type 'int'>
=> int0 = 15 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 13                                                               # STEP 26
ACTION: int2 = 13 
int2 = 20 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 27
ACTION: int3 = 7 
int3 = 18 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 28
ACTION: avl1.delete(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int1 = 5                                                                # STEP 29
ACTION: int1 = 5 
int1 = 8 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 30
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 18, 5, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 31
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 32
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([2, 18, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([15, 2, 18, 5, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 33
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 34
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 35
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 36
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 37
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 38
ACTION: avl1.insert(int3) 
int3 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
int3 = 18                                                               # STEP 39
ACTION: int3 = 18 
int3 = 7 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 40
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 41
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int0)                                                       # STEP 42
ACTION: avl1.insert(int0) 
int0 = 15 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 43
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 44
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 45
ACTION: avl1.insert(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 46
ACTION: avl2.insert(int0) 
int0 = 15 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([15]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 47
ACTION: int0 = 19 
int0 = 15 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 48
ACTION: avl2.delete(int1) 
int1 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 49
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 50
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([15, 2, 13, 7]) : <type 'set'>
==================================================
avl2.delete(int2)                                                       # STEP 51
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 52
ACTION: avl2.delete(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int2 = 11                                                               # STEP 53
ACTION: int2 = 11 
int2 = 13 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 54
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.insert(int0)                                                       # STEP 55
ACTION: avl2.insert(int0) 
int0 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([19, 15]) : <type 'set'>
==================================================
int1 = 5                                                                # STEP 56
ACTION: int1 = 5 
int1 = 5 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 57
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int3)                                                       # STEP 58
ACTION: avl2.insert(int3) 
int3 = 18 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([18, 19, 15]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 59
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 11                                                               # STEP 60
ACTION: int1 = 11 
int1 = 5 : <type 'int'>
=> int1 = 11 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 61
ACTION: avl2.insert(int1) 
int1 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([11, 18, 19, 15]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 62
ACTION: avl1.delete(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 63
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 64
ACTION: avl1.delete(int1) 
int1 = 11 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int3)                                                       # STEP 65
ACTION: avl1.insert(int3) 
int3 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103663ab8> : <type 'instance'>
avl_REF1 = set([15, 2, 18, 13, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 66
ACTION: avl2.delete(int0) 
int0 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103472cb0> : <type 'instance'>
avl_REF2 = set([11, 18, 19, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([11, 18, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103450128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
8.9314712569 PERCENT COVERED
63.2973330021 TOTAL RUNTIME
7 EXECUTED
556 TOTAL TEST OPERATIONS
24.58791852 TIME SPENT EXECUTING TEST OPERATIONS
0.0697259902954 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
24.7505996227 TIME SPENT CHECKING PROPERTIES
49.3385181427 TOTAL TIME SPENT RUNNING SUT
0.0038161277771 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 2                                                                 # STEP 0
int0 = 15                                                                # STEP 1
int3 = 13                                                                # STEP 2
int2 = 13                                                                # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int1)                                                        # STEP 5
int1 = 18                                                                # STEP 6
avl2.insert(int0)                                                        # STEP 7
avl2.delete(int2)                                                        # STEP 8
avl2.delete(int2)                                                        # STEP 9
avl2.delete(int1)                                                       # STEP 10
int1 = 4                                                                # STEP 11
avl2.delete(int0)                                                       # STEP 12
avl2.insert(int2)                                                       # STEP 13
avl2.delete(int0)                                                       # STEP 14
int0 = 18                                                               # STEP 15
int2 = 3                                                                # STEP 16
avl2.insert(int0)                                                       # STEP 17
avl2.insert(int0)                                                       # STEP 18
avl2.insert(int0)                                                       # STEP 19
avl2.insert(int3)                                                       # STEP 20
int3 = 2                                                                # STEP 21
int0 = 7                                                                # STEP 22
avl2.insert(int0)                                                       # STEP 23
avl2.delete(int3)                                                       # STEP 24
avl2.delete(int1)                                                       # STEP 25
int0 = 6                                                                # STEP 26
avl2.insert(int2)                                                       # STEP 27
int2 = 7                                                                # STEP 28
avl2.insert(int3)                                                       # STEP 29
int3 = 17                                                               # STEP 30
avl2.insert(int3)                                                       # STEP 31
avl2.delete(int0)                                                       # STEP 32
result = avl2.inorder()                                                 # STEP 33
int1 = 5                                                                # STEP 34
avl2.display()                                                          # STEP 35
avl2.display()                                                          # STEP 36
avl2.delete(int3)                                                       # STEP 37
avl2.insert(int0)                                                       # STEP 38
avl2 = avl.AVLTree()                                                    # STEP 39
avl2.insert(int3)                                                       # STEP 40
result = avl2.inorder()                                                 # STEP 41
avl2.insert(int3)                                                       # STEP 42
avl2.delete(int1)                                                       # STEP 43
int1 = 16                                                               # STEP 44
avl2.delete(int1)                                                       # STEP 45
avl2.insert(int2)                                                       # STEP 46
avl2.delete(int3)                                                       # STEP 47
avl2.delete(int0)                                                       # STEP 48
avl2.delete(int2)                                                       # STEP 49
avl2.delete(int1)                                                       # STEP 50
int2 = 13                                                               # STEP 51
avl2.delete(int1)                                                       # STEP 52
avl2.insert(int3)                                                       # STEP 53
avl2.insert(int2)                                                       # STEP 54
int0 = 10                                                               # STEP 55
int3 = 1                                                                # STEP 56
avl2.delete(int1)                                                       # STEP 57
avl2.delete(int1)                                                       # STEP 58
int2 = 8                                                                # STEP 59
avl2.delete(int0)                                                       # STEP 60
avl2.delete(int1)                                                       # STEP 61
avl2.delete(int1)                                                       # STEP 62
avl2.delete(int2)                                                       # STEP 63
int0 = 5                                                                # STEP 64
avl2.insert(int1)                                                       # STEP 65
avl2.delete(int1)                                                       # STEP 66
avl2.delete(int1)                                                       # STEP 67
avl2.delete(int0)                                                       # STEP 68
result = avl2.inorder()                                                 # STEP 69
avl2.delete(int1)                                                       # STEP 70
avl2.delete(int1)                                                       # STEP 71
avl2.delete(int1)                                                       # STEP 72
result = avl2.inorder()                                                 # STEP 73
avl2.delete(int3)                                                       # STEP 74
int3 = 18                                                               # STEP 75
avl2.delete(int0)                                                       # STEP 76
avl2.insert(int3)                                                       # STEP 77
result = avl2.inorder()                                                 # STEP 78
avl2.insert(int3)                                                       # STEP 79
avl2.insert(int2)                                                       # STEP 80
avl2.delete(int2)                                                       # STEP 81
avl2.insert(int3)                                                       # STEP 82
result = avl2.inorder()                                                 # STEP 83
avl2.insert(int1)                                                       # STEP 84
avl2.insert(int1)                                                       # STEP 85
avl2.insert(int0)                                                       # STEP 86
avl2.insert(int0)                                                       # STEP 87
avl2.delete(int3)                                                       # STEP 88
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103672488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int2 = 2                                                                 # STEP 0
avl1 = avl.AVLTree()                                                     # STEP 1
avl1.delete(int2)                                                        # STEP 2
avl1.insert(int2)                                                        # STEP 3
avl1.delete(int2)                                                        # STEP 4
avl1.insert(int2)                                                        # STEP 5
avl1.insert(int2)                                                        # STEP 6
int3 = 18                                                                # STEP 7
int1 = 15                                                                # STEP 8
int0 = 5                                                                 # STEP 9
int2 = 16                                                               # STEP 10
avl1 == avl1                                                            # STEP 11
avl1.insert(int0)                                                       # STEP 12
avl1.delete(int2)                                                       # STEP 13
avl1.insert(int1)                                                       # STEP 14
avl1.insert(int3)                                                       # STEP 15
avl1.insert(int3)                                                       # STEP 16
int2 = 20                                                               # STEP 17
avl1.delete(int1)                                                       # STEP 18
avl1.insert(int0)                                                       # STEP 19
avl1.insert(int3)                                                       # STEP 20
avl1.delete(int1)                                                       # STEP 21
int1 = 8                                                                # STEP 22
avl1.delete(int1)                                                       # STEP 23
int0 = 15                                                               # STEP 24
avl1.delete(int2)                                                       # STEP 25
int2 = 13                                                               # STEP 26
int3 = 7                                                                # STEP 27
avl1.delete(int3)                                                       # STEP 28
int1 = 5                                                                # STEP 29
avl1.insert(int3)                                                       # STEP 30
avl1.delete(int2)                                                       # STEP 31
avl1.insert(int0)                                                       # STEP 32
avl1.delete(int1)                                                       # STEP 33
avl1.delete(int2)                                                       # STEP 34
avl1.insert(int2)                                                       # STEP 35
avl1.delete(int2)                                                       # STEP 36
avl2 = avl.AVLTree()                                                    # STEP 37
avl1.insert(int3)                                                       # STEP 38
int3 = 18                                                               # STEP 39
avl2.delete(int1)                                                       # STEP 40
avl1.delete(int2)                                                       # STEP 41
avl1.insert(int0)                                                       # STEP 42
avl1.delete(int1)                                                       # STEP 43
avl2.delete(int1)                                                       # STEP 44
avl1.insert(int2)                                                       # STEP 45
avl2.insert(int0)                                                       # STEP 46
int0 = 19                                                               # STEP 47
avl2.delete(int1)                                                       # STEP 48
avl2.delete(int3)                                                       # STEP 49
avl1.delete(int3)                                                       # STEP 50
avl2.delete(int2)                                                       # STEP 51
avl2.delete(int3)                                                       # STEP 52
int2 = 11                                                               # STEP 53
avl1.delete(int1)                                                       # STEP 54
avl2.insert(int0)                                                       # STEP 55
int1 = 5                                                                # STEP 56
avl1.delete(int0)                                                       # STEP 57
avl2.insert(int3)                                                       # STEP 58
avl1.delete(int1)                                                       # STEP 59
int1 = 11                                                               # STEP 60
avl2.insert(int1)                                                       # STEP 61
avl1.delete(int3)                                                       # STEP 62
avl1.insert(int3)                                                       # STEP 63
avl1.delete(int1)                                                       # STEP 64
avl1.insert(int3)                                                       # STEP 65
avl2.delete(int0)                                                       # STEP 66
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103450128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
218 BRANCHES COVERED
163 STATEMENTS COVERED
