Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.41111.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d60a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
Original test has 10 steps

SAVING TEST AS failure.41111.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 17                                                                # STEP 0
ACTION: int1 = 17 
int1 = None : <type 'NoneType'>
=> int1 = 17 : <type 'int'>
==================================================
int2 = 9                                                                 # STEP 1
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
int3 = 8                                                                 # STEP 2
ACTION: int3 = 8 
int3 = None : <type 'NoneType'>
=> int3 = 8 : <type 'int'>
==================================================
int0 = 3                                                                 # STEP 3
ACTION: int0 = 3 
int0 = None : <type 'NoneType'>
=> int0 = 3 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1039ac1b8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.insert(int1)                                                        # STEP 5
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1039ac1b8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17]) : <type 'set'>
==================================================
avl2.insert(int2)                                                        # STEP 6
ACTION: avl2.insert(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1039ac1b8> : <type 'instance'>
avl_REF2 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 9]) : <type 'set'>
==================================================
avl2.insert(int3)                                                        # STEP 7
ACTION: avl2.insert(int3) 
int3 = 8 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1039ac1b8> : <type 'instance'>
avl_REF2 = set([17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([8, 17, 9]) : <type 'set'>
==================================================
avl2.insert(int0)                                                        # STEP 8
ACTION: avl2.insert(int0) 
int0 = 3 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1039ac1b8> : <type 'instance'>
avl_REF2 = set([8, 17, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8, 17, 3, 9]) : <type 'set'>
==================================================
avl2.delete(int2)                                                        # STEP 9
ACTION: avl2.delete(int2) 
int2 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1039ac1b8> : <type 'instance'>
avl_REF2 = set([8, 17, 3, 9]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([8, 17, 3]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d35e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #5 STEP #20 (0:00:30.034401) Mon May  1 02:41:27 2017 [ 110 stmts 144 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103da49e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 92 steps

SAVING TEST AS failure.41111.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 2                                                                 # STEP 0
ACTION: int0 = 2 
int0 = None : <type 'NoneType'>
=> int0 = 2 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 1
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
int3 = 9                                                                 # STEP 2
ACTION: int3 = 9 
int3 = None : <type 'NoneType'>
=> int3 = 9 : <type 'int'>
==================================================
int1 = 4                                                                 # STEP 3
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                     # STEP 4
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                        # STEP 5
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl2.delete(int2)                                                        # STEP 6
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
result = avl2.inorder()                                                  # STEP 7
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl2.insert(int2)                                                        # STEP 8
ACTION: avl2.insert(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([13]) : <type 'set'>
==================================================
int2 = 13                                                                # STEP 9
ACTION: int2 = 13 
int2 = 13 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 10
ACTION: avl2.delete(int2) 
int2 = 13 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([13]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 11
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 12
ACTION: int2 = 12 
int2 = 13 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 13
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 14
ACTION: avl0.insert(int3) 
int3 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([9, 2]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 15
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([2]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 16
ACTION: avl0.delete(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([9, 2]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([9]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 17
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 18
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 19
ACTION: avl1.insert(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([4]) : <type 'set'>
==================================================
int3 = 1                                                                # STEP 20
ACTION: int3 = 1 
int3 = 9 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 21
ACTION: avl0.insert(int2) 
int2 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([9]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([9, 12]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 22
ACTION: avl1.delete(int1) 
int1 = 4 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([4]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 23
ACTION: avl2.insert(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
==================================================
int2 = 19                                                               # STEP 24
ACTION: int2 = 19 
int2 = 12 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 25
ACTION: int1 = 9 
int1 = 4 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 26
ACTION: avl2.delete(int2) 
int2 = 19 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int1)                                                       # STEP 27
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([9, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([12]) : <type 'set'>
==================================================
int2 = 19                                                               # STEP 28
ACTION: int2 = 19 
int2 = 19 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 29
ACTION: avl2.delete(int0) 
int0 = 2 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([2]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int3)                                                       # STEP 30
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.delete(int3)                                                       # STEP 31
ACTION: avl1.delete(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
result = avl2.inorder()                                                 # STEP 32
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
int3 = 1                                                                # STEP 33
ACTION: int3 = 1 
int3 = 1 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 34
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 35
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([2, 12]) : <type 'set'>
==================================================
int2 = 17                                                               # STEP 36
ACTION: int2 = 17 
int2 = 19 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
int1 = 9                                                                # STEP 37
ACTION: int1 = 9 
int1 = 9 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 38
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 39
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17, 19]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 40
ACTION: avl0.insert(int0) 
int0 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
==================================================
avl1.delete(int1)                                                       # STEP 41
ACTION: avl1.delete(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl2.delete(int3)                                                       # STEP 42
ACTION: avl2.delete(int3) 
int3 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 43
ACTION: avl1.insert(int3) 
int3 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([17, 19, 1]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 44
ACTION: avl1.insert(int0) 
int0 = 2 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 19, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
==================================================
result = avl0.inorder()                                                 # STEP 45
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int2)                                                       # STEP 46
ACTION: avl2.delete(int2) 
int2 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int1)                                                       # STEP 47
ACTION: avl2.delete(int1) 
int1 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
result = avl1.find(int1)                                                # STEP 48
ACTION: result = avl1.find(int1) 
int1 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int1 = 1                                                                # STEP 49
ACTION: int1 = 1 
int1 = 9 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 5                                                                # STEP 50
ACTION: int3 = 5 
int3 = 1 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 51
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 52
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int0 = 7                                                                # STEP 53
ACTION: int0 = 7 
int0 = 2 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
avl2.delete(int3)                                                       # STEP 54
ACTION: avl2.delete(int3) 
int3 = 5 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
avl0.delete(int3)                                                       # STEP 55
ACTION: avl0.delete(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int2)                                                       # STEP 56
ACTION: avl0.delete(int2) 
int2 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int3 = 14                                                               # STEP 57
ACTION: int3 = 14 
int3 = 5 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 58
ACTION: avl2 = avl.AVLTree() 
avl2 = <avlbug2.AVLTree instance at 0x103da4c68> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
=> avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
==================================================
avl2.delete(int3)                                                       # STEP 59
ACTION: avl2.delete(int3) 
int3 = 14 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 12                                                               # STEP 60
ACTION: int3 = 12 
int3 = 14 : <type 'int'>
=> int3 = 12 : <type 'int'>
==================================================
int2 = 18                                                               # STEP 61
ACTION: int2 = 18 
int2 = 17 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
result = avl1.find(int3)                                                # STEP 62
ACTION: result = avl1.find(int3) 
int3 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl2.insert(int3)                                                       # STEP 63
ACTION: avl2.insert(int3) 
int3 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([12]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 64
ACTION: avl1.delete(int0) 
int0 = 7 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 5                                                                # STEP 65
ACTION: int3 = 5 
int3 = 12 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int0 = 1                                                                # STEP 66
ACTION: int0 = 1 
int0 = 7 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 67
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 68
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.delete(int2)                                                       # STEP 69
ACTION: avl1.delete(int2) 
int2 = 18 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
result = avl0.inorder()                                                 # STEP 70
ACTION: result = avl0.inorder() 
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int2 = 13                                                               # STEP 71
ACTION: int2 = 13 
int2 = 18 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 72
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([17, 2, 19]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 73
ACTION: int1 = 7 
int1 = 1 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 74
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int3 = 8                                                                # STEP 75
ACTION: int3 = 8 
int3 = 5 : <type 'int'>
=> int3 = 8 : <type 'int'>
==================================================
avl0.delete(int3)                                                       # STEP 76
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 77
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([17, 2, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([2, 8, 17, 19]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 78
ACTION: avl2.delete(int1) 
int1 = 7 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 79
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 2, 12]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 80
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([1, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.delete(int2)                                                       # STEP 81
ACTION: avl1.delete(int2) 
int2 = 13 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([2, 8, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int1 = 16                                                               # STEP 82
ACTION: int1 = 16 
int1 = 7 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
avl2.delete(int0)                                                       # STEP 83
ACTION: avl2.delete(int0) 
int0 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 84
ACTION: avl0.delete(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([1, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0 == avl1                                                            # STEP 85
ACTION: avl0 == avl1 
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF0 = set([1, 2, 12]) : <type 'set'>
avl_REF1 = set([2, 8, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
result = avl2.inorder()                                                 # STEP 86
ACTION: result = avl2.inorder() 
avl2 = <avlbug2.AVLTree instance at 0x10488e368> : <type 'instance'>
avl_REF2 = set([12]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF2) 
==================================================
avl0.insert(int2)                                                       # STEP 87
ACTION: avl0.insert(int2) 
int2 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([1, 2, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1, 2, 12, 13]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 88
ACTION: avl1.insert(int3) 
int3 = 8 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([2, 8, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
==================================================
avl1.delete(int0)                                                       # STEP 89
ACTION: avl1.delete(int0) 
int0 = 1 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x103fd5320> : <type 'instance'>
avl_REF1 = set([2, 8, 17, 19]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 90
ACTION: avl0.delete(int1) 
int1 = 16 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([1, 2, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 91
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x103b77ea8> : <type 'instance'>
avl_REF0 = set([1, 2, 12, 13]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([2, 12, 13]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1048a03b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
6.98278661903 PERCENT COVERED
62.2502198219 TOTAL RUNTIME
8 EXECUTED
602 TOTAL TEST OPERATIONS
26.2138903141 TIME SPENT EXECUTING TEST OPERATIONS
0.0781679153442 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.2293200493 TIME SPENT CHECKING PROPERTIES
52.4432103634 TOTAL TIME SPENT RUNNING SUT
0.00422668457031 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 17                                                                # STEP 0
int2 = 9                                                                 # STEP 1
int3 = 8                                                                 # STEP 2
int0 = 3                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.insert(int1)                                                        # STEP 5
avl2.insert(int2)                                                        # STEP 6
avl2.insert(int3)                                                        # STEP 7
avl2.insert(int0)                                                        # STEP 8
avl2.delete(int2)                                                        # STEP 9
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d35e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7895, in check
    assert self.p_avl[2].check_balanced()
FAILURE 1
int0 = 2                                                                 # STEP 0
int2 = 13                                                                # STEP 1
int3 = 9                                                                 # STEP 2
int1 = 4                                                                 # STEP 3
avl2 = avl.AVLTree()                                                     # STEP 4
avl2.delete(int3)                                                        # STEP 5
avl2.delete(int2)                                                        # STEP 6
result = avl2.inorder()                                                  # STEP 7
avl2.insert(int2)                                                        # STEP 8
int2 = 13                                                                # STEP 9
avl2.delete(int2)                                                       # STEP 10
avl0 = avl.AVLTree()                                                    # STEP 11
int2 = 12                                                               # STEP 12
avl0.insert(int0)                                                       # STEP 13
avl0.insert(int3)                                                       # STEP 14
avl2.insert(int0)                                                       # STEP 15
avl0.delete(int0)                                                       # STEP 16
avl2.insert(int0)                                                       # STEP 17
avl1 = avl.AVLTree()                                                    # STEP 18
avl1.insert(int1)                                                       # STEP 19
int3 = 1                                                                # STEP 20
avl0.insert(int2)                                                       # STEP 21
avl1.delete(int1)                                                       # STEP 22
avl2.insert(int0)                                                       # STEP 23
int2 = 19                                                               # STEP 24
int1 = 9                                                                # STEP 25
avl2.delete(int2)                                                       # STEP 26
avl0.delete(int1)                                                       # STEP 27
int2 = 19                                                               # STEP 28
avl2.delete(int0)                                                       # STEP 29
avl2.delete(int3)                                                       # STEP 30
avl1.delete(int3)                                                       # STEP 31
result = avl2.inorder()                                                 # STEP 32
int3 = 1                                                                # STEP 33
avl1.insert(int2)                                                       # STEP 34
avl0.insert(int0)                                                       # STEP 35
int2 = 17                                                               # STEP 36
int1 = 9                                                                # STEP 37
avl1.delete(int2)                                                       # STEP 38
avl1.insert(int2)                                                       # STEP 39
avl0.insert(int0)                                                       # STEP 40
avl1.delete(int1)                                                       # STEP 41
avl2.delete(int3)                                                       # STEP 42
avl1.insert(int3)                                                       # STEP 43
avl1.insert(int0)                                                       # STEP 44
result = avl0.inorder()                                                 # STEP 45
avl2.delete(int2)                                                       # STEP 46
avl2.delete(int1)                                                       # STEP 47
result = avl1.find(int1)                                                # STEP 48
int1 = 1                                                                # STEP 49
int3 = 5                                                                # STEP 50
avl1.delete(int3)                                                       # STEP 51
avl0.delete(int2)                                                       # STEP 52
int0 = 7                                                                # STEP 53
avl2.delete(int3)                                                       # STEP 54
avl0.delete(int3)                                                       # STEP 55
avl0.delete(int2)                                                       # STEP 56
int3 = 14                                                               # STEP 57
avl2 = avl.AVLTree()                                                    # STEP 58
avl2.delete(int3)                                                       # STEP 59
int3 = 12                                                               # STEP 60
int2 = 18                                                               # STEP 61
result = avl1.find(int3)                                                # STEP 62
avl2.insert(int3)                                                       # STEP 63
avl1.delete(int0)                                                       # STEP 64
int3 = 5                                                                # STEP 65
int0 = 1                                                                # STEP 66
avl1.delete(int3)                                                       # STEP 67
avl0.delete(int1)                                                       # STEP 68
avl1.delete(int2)                                                       # STEP 69
result = avl0.inorder()                                                 # STEP 70
int2 = 13                                                               # STEP 71
avl1.delete(int0)                                                       # STEP 72
int1 = 7                                                                # STEP 73
avl2.delete(int0)                                                       # STEP 74
int3 = 8                                                                # STEP 75
avl0.delete(int3)                                                       # STEP 76
avl1.insert(int3)                                                       # STEP 77
avl2.delete(int1)                                                       # STEP 78
avl0.insert(int0)                                                       # STEP 79
avl0.delete(int2)                                                       # STEP 80
avl1.delete(int2)                                                       # STEP 81
int1 = 16                                                               # STEP 82
avl2.delete(int0)                                                       # STEP 83
avl0.delete(int2)                                                       # STEP 84
avl0 == avl1                                                            # STEP 85
result = avl2.inorder()                                                 # STEP 86
avl0.insert(int2)                                                       # STEP 87
avl1.insert(int3)                                                       # STEP 88
avl1.delete(int0)                                                       # STEP 89
avl0.delete(int1)                                                       # STEP 90
avl0.delete(int0)                                                       # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1048a03b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
163 BRANCHES COVERED
122 STATEMENTS COVERED
