Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99549.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  13 [2:0]
-- < 8 [1:0]
---- < 3 [0:0] L
---- > 10 [0:0] L
-- > 16 [1:0]
---- < 15 [0:0] L
---- > 18 [0:0] L
set([3, 8, 10, 13, 15, 16, 18])
  14 [3:1]
-- < 8 [2:-1]
---- < 6 [0:0] L
---- > 12 [1:1]
------ < 10 [0:0] L
-- > 17 [1:0]
---- < 16 [0:0] L
---- > 18 [0:0] L
set([6, 8, 10, 12, 14, 16, 17, 18])
TEST #4 STEP #91 (0:00:30.000411) Fri Apr 28 04:17:22 2017 [ 147 stmts 198 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b15518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 94 steps

SAVING TEST AS failure.99549.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int2 = 17                                                                # STEP 0
ACTION: int2 = 17 
int2 = None : <type 'NoneType'>
=> int2 = 17 : <type 'int'>
==================================================
int0 = 19                                                                # STEP 1
ACTION: int0 = 19 
int0 = None : <type 'NoneType'>
=> int0 = 19 : <type 'int'>
==================================================
int1 = 5                                                                 # STEP 2
ACTION: int1 = 5 
int1 = None : <type 'NoneType'>
=> int1 = 5 : <type 'int'>
==================================================
int3 = 7                                                                 # STEP 3
ACTION: int3 = 7 
int3 = None : <type 'NoneType'>
=> int3 = 7 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int3)                                                        # STEP 5
ACTION: avl0.insert(int3) 
int3 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([7]) : <type 'set'>
==================================================
avl1 = avl.AVLTree()                                                     # STEP 6
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                        # STEP 7
ACTION: avl1.delete(int1) 
int1 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
int1 = 7                                                                 # STEP 8
ACTION: int1 = 7 
int1 = 5 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int3 = 17                                                                # STEP 9
ACTION: int3 = 17 
int3 = 7 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 10
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 11
ACTION: avl0.insert(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([19, 7]) : <type 'set'>
==================================================
int0 = 18                                                               # STEP 12
ACTION: int0 = 18 
int0 = 19 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 13
ACTION: avl1.insert(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([17]) : <type 'set'>
==================================================
int1 = 8                                                                # STEP 14
ACTION: int1 = 8 
int1 = 7 : <type 'int'>
=> int1 = 8 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 15
ACTION: int2 = 17 
int2 = 17 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([17, 19, 7]) : <type 'set'>
==================================================
int3 = 19                                                               # STEP 17
ACTION: int3 = 19 
int3 = 17 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 18
ACTION: avl1.delete(int2) 
int2 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl1.delete(int1)                                                       # STEP 19
ACTION: avl1.delete(int1) 
int1 = 8 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl0.delete(int0)                                                       # STEP 20
ACTION: avl0.delete(int0) 
int0 = 18 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int2 = 7                                                                # STEP 22
ACTION: int2 = 7 
int2 = 17 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
int0 = 3                                                                # STEP 23
ACTION: int0 = 3 
int0 = 18 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
int1 = 6                                                                # STEP 24
ACTION: int1 = 6 
int1 = 8 : <type 'int'>
=> int1 = 6 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 26
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int2 = 14                                                               # STEP 27
ACTION: int2 = 14 
int2 = 7 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 28
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
avl2 = avl.AVLTree()                                                    # STEP 29
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int0)                                                       # STEP 30
ACTION: avl2.delete(int0) 
int0 = 3 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 8                                                                # STEP 31
ACTION: int0 = 8 
int0 = 3 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
avl2.insert(int0)                                                       # STEP 32
ACTION: avl2.insert(int0) 
int0 = 8 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([8]) : <type 'set'>
==================================================
int0 = 1                                                                # STEP 33
ACTION: int0 = 1 
int0 = 8 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 34
ACTION: avl0.delete(int2) 
int2 = 14 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl0.insert(int3)                                                       # STEP 35
ACTION: avl0.insert(int3) 
int3 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
int3 = 15                                                               # STEP 36
ACTION: int3 = 15 
int3 = 19 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 37
ACTION: avl1.insert(int2) 
int2 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([14]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 38
ACTION: int2 = 18 
int2 = 14 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 39
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 40
ACTION: avl0.delete(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int3 = 9                                                                # STEP 41
ACTION: int3 = 9 
int3 = 15 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
int0 = 13                                                               # STEP 42
ACTION: int0 = 13 
int0 = 1 : <type 'int'>
=> int0 = 13 : <type 'int'>
==================================================
avl2.delete(int2)                                                       # STEP 43
ACTION: avl2.delete(int2) 
int2 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl2.delete(int3)                                                       # STEP 44
ACTION: avl2.delete(int3) 
int3 = 9 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 4                                                                # STEP 45
ACTION: int3 = 4 
int3 = 9 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
int2 = 1                                                                # STEP 46
ACTION: int2 = 1 
int2 = 18 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 47
ACTION: avl1.delete(int0) 
int0 = 13 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 12                                                               # STEP 48
ACTION: int0 = 12 
int0 = 13 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 49
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.delete(int3)                                                       # STEP 50
ACTION: avl2.delete(int3) 
int3 = 4 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int3) 
==================================================
int3 = 16                                                               # STEP 51
ACTION: int3 = 16 
int3 = 4 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 52
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl2.delete(int0)                                                       # STEP 53
ACTION: avl2.delete(int0) 
int0 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
int0 = 4                                                                # STEP 54
ACTION: int0 = 4 
int0 = 12 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 55
ACTION: avl2.insert(int1) 
int1 = 6 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 6]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 56
ACTION: avl0.delete(int1) 
int1 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 57
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 14]) : <type 'set'>
==================================================
int1 = 13                                                               # STEP 58
ACTION: int1 = 13 
int1 = 6 : <type 'int'>
=> int1 = 13 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 59
ACTION: int2 = 16 
int2 = 1 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 60
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
result = avl1.inorder()                                                 # STEP 61
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1 = avl.AVLTree()                                                    # STEP 62
ACTION: avl1 = avl.AVLTree() 
avl1 = <avl.AVLTree instance at 0x104a39248> : <type 'instance'>
avl_REF1 = set([1, 14]) : <type 'set'>
=> avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                       # STEP 63
ACTION: avl0.delete(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 64
ACTION: avl0.insert(int3) 
int3 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([15, 17, 19, 16, 7]) : <type 'set'>
==================================================
int3 = 6                                                                # STEP 65
ACTION: int3 = 6 
int3 = 16 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 66
ACTION: avl1.delete(int2) 
int2 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
int2 = 12                                                               # STEP 67
ACTION: int2 = 12 
int2 = 16 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl2.insert(int2)                                                       # STEP 68
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 12, 6]) : <type 'set'>
==================================================
int2 = 18                                                               # STEP 69
ACTION: int2 = 18 
int2 = 12 : <type 'int'>
=> int2 = 18 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 70
ACTION: avl0.delete(int0) 
int0 = 4 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 16, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 71
ACTION: avl0.delete(int1) 
int1 = 13 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 16, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
int1 = 7                                                                # STEP 72
ACTION: int1 = 7 
int1 = 13 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 73
ACTION: avl1.insert(int2) 
int2 = 18 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([18]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 74
ACTION: avl0.insert(int3) 
int3 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([15, 17, 19, 16, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([6, 7, 15, 16, 17, 19]) : <type 'set'>
==================================================
avl1.delete(int3)                                                       # STEP 75
ACTION: avl1.delete(int3) 
int3 = 6 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0 = avl.AVLTree()                                                    # STEP 76
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x104f1bb90> : <type 'instance'>
avl_REF0 = set([6, 7, 15, 16, 17, 19]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x104f3c2d8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 77
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([18, 7]) : <type 'set'>
==================================================
int2 = 10                                                               # STEP 78
ACTION: int2 = 10 
int2 = 18 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 79
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
int3 = 5                                                                # STEP 80
ACTION: int3 = 5 
int3 = 6 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
int0 = 3                                                                # STEP 81
ACTION: int0 = 3 
int0 = 4 : <type 'int'>
=> int0 = 3 : <type 'int'>
==================================================
int1 = 18                                                               # STEP 82
ACTION: int1 = 18 
int1 = 7 : <type 'int'>
=> int1 = 18 : <type 'int'>
==================================================
avl2.insert(int1)                                                       # STEP 83
ACTION: avl2.insert(int1) 
int1 = 18 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([8, 18, 12, 6]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 84
ACTION: avl1.insert(int0) 
int0 = 3 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([18, 3, 7]) : <type 'set'>
==================================================
int1 = 7                                                                # STEP 85
ACTION: int1 = 7 
int1 = 18 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
int0 = 12                                                               # STEP 86
ACTION: int0 = 12 
int0 = 3 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 87
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl1.insert(int3)                                                       # STEP 88
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18, 3, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([18, 3, 5, 7]) : <type 'set'>
==================================================
int3 = 13                                                               # STEP 89
ACTION: int3 = 13 
int3 = 5 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 90
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x104f3c2d8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
avl2.insert(int2)                                                       # STEP 91
ACTION: avl2.insert(int2) 
int2 = 10 : <type 'int'>
avl2 = <avl.AVLTree instance at 0x105862f38> : <type 'instance'>
avl_REF2 = set([8, 18, 12, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([8, 18, 12, 10, 6]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 92
ACTION: int2 = 7 
int2 = 10 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 93
ACTION: avl1.delete(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x104b46908> : <type 'instance'>
avl_REF1 = set([18, 3, 5, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
=> avl_REF1 = set([18, 3, 5]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f3b440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 90
STOPPING TESTING DUE TO TIMEOUT
8.51713607058 PERCENT COVERED
60.1649961472 TOTAL RUNTIME
7 EXECUTED
684 TOTAL TEST OPERATIONS
26.2786495686 TIME SPENT EXECUTING TEST OPERATIONS
0.0259213447571 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.5222215652 TIME SPENT CHECKING PROPERTIES
52.8008711338 TOTAL TIME SPENT RUNNING SUT
0.00428104400635 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int2 = 17                                                                # STEP 0
int0 = 19                                                                # STEP 1
int1 = 5                                                                 # STEP 2
int3 = 7                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.insert(int3)                                                        # STEP 5
avl1 = avl.AVLTree()                                                     # STEP 6
avl1.delete(int1)                                                        # STEP 7
int1 = 7                                                                 # STEP 8
int3 = 17                                                                # STEP 9
avl1.delete(int1)                                                       # STEP 10
avl0.insert(int0)                                                       # STEP 11
int0 = 18                                                               # STEP 12
avl1.insert(int2)                                                       # STEP 13
int1 = 8                                                                # STEP 14
int2 = 17                                                               # STEP 15
avl0.insert(int3)                                                       # STEP 16
int3 = 19                                                               # STEP 17
avl1.delete(int2)                                                       # STEP 18
avl1.delete(int1)                                                       # STEP 19
avl0.delete(int0)                                                       # STEP 20
avl1.delete(int0)                                                       # STEP 21
int2 = 7                                                                # STEP 22
int0 = 3                                                                # STEP 23
int1 = 6                                                                # STEP 24
avl1.delete(int2)                                                       # STEP 25
avl0.insert(int3)                                                       # STEP 26
int2 = 14                                                               # STEP 27
avl0.insert(int3)                                                       # STEP 28
avl2 = avl.AVLTree()                                                    # STEP 29
avl2.delete(int0)                                                       # STEP 30
int0 = 8                                                                # STEP 31
avl2.insert(int0)                                                       # STEP 32
int0 = 1                                                                # STEP 33
avl0.delete(int2)                                                       # STEP 34
avl0.insert(int3)                                                       # STEP 35
int3 = 15                                                               # STEP 36
avl1.insert(int2)                                                       # STEP 37
int2 = 18                                                               # STEP 38
avl0.insert(int3)                                                       # STEP 39
avl0.delete(int0)                                                       # STEP 40
int3 = 9                                                                # STEP 41
int0 = 13                                                               # STEP 42
avl2.delete(int2)                                                       # STEP 43
avl2.delete(int3)                                                       # STEP 44
int3 = 4                                                                # STEP 45
int2 = 1                                                                # STEP 46
avl1.delete(int0)                                                       # STEP 47
int0 = 12                                                               # STEP 48
result = avl0.inorder()                                                 # STEP 49
avl2.delete(int3)                                                       # STEP 50
int3 = 16                                                               # STEP 51
avl0.delete(int2)                                                       # STEP 52
avl2.delete(int0)                                                       # STEP 53
int0 = 4                                                                # STEP 54
avl2.insert(int1)                                                       # STEP 55
avl0.delete(int1)                                                       # STEP 56
avl1.insert(int2)                                                       # STEP 57
int1 = 13                                                               # STEP 58
int2 = 16                                                               # STEP 59
result = avl0.inorder()                                                 # STEP 60
result = avl1.inorder()                                                 # STEP 61
avl1 = avl.AVLTree()                                                    # STEP 62
avl0.delete(int3)                                                       # STEP 63
avl0.insert(int3)                                                       # STEP 64
int3 = 6                                                                # STEP 65
avl1.delete(int2)                                                       # STEP 66
int2 = 12                                                               # STEP 67
avl2.insert(int2)                                                       # STEP 68
int2 = 18                                                               # STEP 69
avl0.delete(int0)                                                       # STEP 70
avl0.delete(int1)                                                       # STEP 71
int1 = 7                                                                # STEP 72
avl1.insert(int2)                                                       # STEP 73
avl0.insert(int3)                                                       # STEP 74
avl1.delete(int3)                                                       # STEP 75
avl0 = avl.AVLTree()                                                    # STEP 76
avl1.insert(int1)                                                       # STEP 77
int2 = 10                                                               # STEP 78
result = avl1.inorder()                                                 # STEP 79
int3 = 5                                                                # STEP 80
int0 = 3                                                                # STEP 81
int1 = 18                                                               # STEP 82
avl2.insert(int1)                                                       # STEP 83
avl1.insert(int0)                                                       # STEP 84
int1 = 7                                                                # STEP 85
int0 = 12                                                               # STEP 86
avl1.delete(int3)                                                       # STEP 87
avl1.insert(int3)                                                       # STEP 88
int3 = 13                                                               # STEP 89
result = avl0.inorder()                                                 # STEP 90
avl2.insert(int2)                                                       # STEP 91
int2 = 7                                                                # STEP 92
avl1.delete(int1)                                                       # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104f3b440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
214 BRANCHES COVERED
161 STATEMENTS COVERED
