Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.99586.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  14 [2:0]
-- < 10 [1:0]
---- < 8 [0:0] L
---- > 13 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
set([8, 10, 13, 14, 15, 18, 19])
  14 [3:1]
-- < 10 [2:1]
---- < 8 [1:1]
------ < 3 [0:0] L
---- > 13 [0:0] L
-- > 18 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
set([3, 8, 10, 13, 14, 15, 18, 19])
TEST #4 STEP #90 (0:00:30.021359) Fri Apr 28 04:22:25 2017 [ 149 stmts 200 branches ]
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058c9d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
Original test has 75 steps

SAVING TEST AS failure.99586.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 19                                                                # STEP 0
ACTION: int1 = 19 
int1 = None : <type 'NoneType'>
=> int1 = 19 : <type 'int'>
==================================================
int0 = 20                                                                # STEP 1
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
int2 = 19                                                                # STEP 2
ACTION: int2 = 19 
int2 = None : <type 'NoneType'>
=> int2 = 19 : <type 'int'>
==================================================
int3 = 12                                                                # STEP 3
ACTION: int3 = 12 
int3 = None : <type 'NoneType'>
=> int3 = 12 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
result = avl0.find(int3)                                                 # STEP 5
ACTION: result = avl0.find(int3) 
int3 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int3 = 3                                                                 # STEP 6
ACTION: int3 = 3 
int3 = 12 : <type 'int'>
=> int3 = 3 : <type 'int'>
==================================================
avl0.delete(int0)                                                        # STEP 7
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
result = avl0.find(int3)                                                 # STEP 8
ACTION: result = avl0.find(int3) 
int3 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int2)                                                        # STEP 9
ACTION: avl0.insert(int2) 
int2 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([19]) : <type 'set'>
==================================================
int3 = 17                                                               # STEP 10
ACTION: int3 = 17 
int3 = 3 : <type 'int'>
=> int3 = 17 : <type 'int'>
==================================================
int0 = 20                                                               # STEP 11
ACTION: int0 = 20 
int0 = 20 : <type 'int'>
==================================================
int2 = 11                                                               # STEP 12
ACTION: int2 = 11 
int2 = 19 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 13
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 14
ACTION: result = avl1.find(int3) 
int3 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
int3 = 19                                                               # STEP 15
ACTION: int3 = 19 
int3 = 17 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
avl1 == avl1                                                            # STEP 16
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl1.delete(int3)                                                       # STEP 17
ACTION: avl1.delete(int3) 
int3 = 19 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 5                                                                # STEP 18
ACTION: int3 = 5 
int3 = 19 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 19
ACTION: avl1.insert(int2) 
int2 = 11 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 20
ACTION: int2 = 7 
int2 = 11 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 21
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int1)                                                       # STEP 22
ACTION: avl0.delete(int1) 
int1 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([19]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.insert(int0)                                                       # STEP 23
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 24
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int1 = 14                                                               # STEP 25
ACTION: int1 = 14 
int1 = 19 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 26
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 16                                                               # STEP 27
ACTION: int3 = 16 
int3 = 5 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
result = avl0.inorder()                                                 # STEP 28
ACTION: result = avl0.inorder() 
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF0) 
==================================================
int0 = 7                                                                # STEP 29
ACTION: int0 = 7 
int0 = 20 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
result = avl1.inorder()                                                 # STEP 30
ACTION: result = avl1.inorder() 
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: result_REF = items(avl_REF1) 
==================================================
avl1.insert(int1)                                                       # STEP 31
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([11, 14]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 32
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
avl0.insert(int2)                                                       # STEP 33
ACTION: avl0.insert(int2) 
int2 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 7]) : <type 'set'>
==================================================
avl1.insert(int2)                                                       # STEP 34
ACTION: avl1.insert(int2) 
int2 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([11, 14, 7]) : <type 'set'>
==================================================
result = avl1.find(int1)                                                # STEP 35
ACTION: result = avl1.find(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11, 14, 7]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int1) 
==================================================
int1 = 7                                                                # STEP 36
ACTION: int1 = 7 
int1 = 14 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 37
ACTION: avl1.delete(int3) 
int3 = 16 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
int3 = 2                                                                # STEP 38
ACTION: int3 = 2 
int3 = 16 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
int2 = 12                                                               # STEP 39
ACTION: int2 = 12 
int2 = 7 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
avl0.delete(int0)                                                       # STEP 40
ACTION: avl0.delete(int0) 
int0 = 7 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
=> avl_REF0 = set([20]) : <type 'set'>
==================================================
int0 = 17                                                               # STEP 41
ACTION: int0 = 17 
int0 = 7 : <type 'int'>
=> int0 = 17 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 42
ACTION: avl0.delete(int2) 
int2 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 6                                                                # STEP 43
ACTION: int2 = 6 
int2 = 12 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 44
ACTION: avl0.insert(int2) 
int2 = 6 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([20, 6]) : <type 'set'>
==================================================
int2 = 1                                                                # STEP 45
ACTION: int2 = 1 
int2 = 6 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0 == avl1                                                            # STEP 46
ACTION: avl0 == avl1 
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
avl_REF1 = set([11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF1 
==================================================
avl1.insert(int1)                                                       # STEP 47
ACTION: avl1.insert(int1) 
int1 = 7 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 14                                                               # STEP 48
ACTION: int1 = 14 
int1 = 7 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
avl0.delete(int2)                                                       # STEP 49
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
avl1.insert(int1)                                                       # STEP 50
ACTION: avl1.insert(int1) 
int1 = 14 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 51
ACTION: avl1.insert(int2) 
int2 = 1 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 11, 14, 7]) : <type 'set'>
==================================================
avl1.insert(int3)                                                       # STEP 52
ACTION: avl1.insert(int3) 
int3 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([1, 2, 11, 14, 7]) : <type 'set'>
==================================================
int1 = 9                                                                # STEP 53
ACTION: int1 = 9 
int1 = 14 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
int3 = 19                                                               # STEP 54
ACTION: int3 = 19 
int3 = 2 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
int2 = 10                                                               # STEP 55
ACTION: int2 = 10 
int2 = 1 : <type 'int'>
=> int2 = 10 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 56
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl1.insert(int2)                                                       # STEP 57
ACTION: avl1.insert(int2) 
int2 = 10 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 11, 14, 7]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([1, 2, 7, 10, 11, 14]) : <type 'set'>
==================================================
int2 = 11                                                               # STEP 58
ACTION: int2 = 11 
int2 = 10 : <type 'int'>
=> int2 = 11 : <type 'int'>
==================================================
result = avl1.find(int0)                                                # STEP 59
ACTION: result = avl1.find(int0) 
int0 = 17 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 7, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int0) 
==================================================
int0 = 17                                                               # STEP 60
ACTION: int0 = 17 
int0 = 17 : <type 'int'>
==================================================
avl1.insert(int1)                                                       # STEP 61
ACTION: avl1.insert(int1) 
int1 = 9 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 7, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([1, 2, 7, 9, 10, 11, 14]) : <type 'set'>
==================================================
avl0 = avl.AVLTree()                                                    # STEP 62
ACTION: avl0 = avl.AVLTree() 
avl0 = <avl.AVLTree instance at 0x1058ba518> : <type 'instance'>
avl_REF0 = set([20, 6]) : <type 'set'>
=> avl0 = <avl.AVLTree instance at 0x1045e23f8> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl1 == avl1                                                            # STEP 63
ACTION: avl1 == avl1 
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 7, 9, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1 == avl_REF1 
==================================================
avl0.delete(int1)                                                       # STEP 64
ACTION: avl0.delete(int1) 
int1 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045e23f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int0)                                                       # STEP 65
ACTION: avl0.insert(int0) 
int0 = 17 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045e23f8> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([17]) : <type 'set'>
==================================================
avl0 == avl0                                                            # STEP 66
ACTION: avl0 == avl0 
avl0 = <avl.AVLTree instance at 0x1045e23f8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0 == avl_REF0 
==================================================
int0 = 12                                                               # STEP 67
ACTION: int0 = 12 
int0 = 17 : <type 'int'>
=> int0 = 12 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 68
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 7, 9, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 69
ACTION: avl1.delete(int0) 
int0 = 12 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 7, 9, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl0.delete(int2)                                                       # STEP 70
ACTION: avl0.delete(int2) 
int2 = 11 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045e23f8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 2                                                                # STEP 71
ACTION: int2 = 2 
int2 = 11 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 72
ACTION: result = avl0.find(int0) 
int0 = 12 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x1045e23f8> : <type 'instance'>
avl_REF0 = set([17]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int1 = 5                                                                # STEP 73
ACTION: int1 = 5 
int1 = 9 : <type 'int'>
=> int1 = 5 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 74
ACTION: avl1.delete(int2) 
int2 = 2 : <type 'int'>
avl1 = <avl.AVLTree instance at 0x1058c2d40> : <type 'instance'>
avl_REF1 = set([1, 2, 7, 9, 10, 11, 14]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
=> avl_REF1 = set([1, 7, 9, 10, 11, 14]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10472b098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 62
STOPPING TESTING DUE TO TIMEOUT
8.00814387513 PERCENT COVERED
60.2002120018 TOTAL RUNTIME
8 EXECUTED
737 TOTAL TEST OPERATIONS
27.2951993942 TIME SPENT EXECUTING TEST OPERATIONS
0.0252404212952 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
27.5612139702 TIME SPENT CHECKING PROPERTIES
54.8564133644 TOTAL TIME SPENT RUNNING SUT
0.00456070899963 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 19                                                                # STEP 0
int0 = 20                                                                # STEP 1
int2 = 19                                                                # STEP 2
int3 = 12                                                                # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
result = avl0.find(int3)                                                 # STEP 5
int3 = 3                                                                 # STEP 6
avl0.delete(int0)                                                        # STEP 7
result = avl0.find(int3)                                                 # STEP 8
avl0.insert(int2)                                                        # STEP 9
int3 = 17                                                               # STEP 10
int0 = 20                                                               # STEP 11
int2 = 11                                                               # STEP 12
avl1 = avl.AVLTree()                                                    # STEP 13
result = avl1.find(int3)                                                # STEP 14
int3 = 19                                                               # STEP 15
avl1 == avl1                                                            # STEP 16
avl1.delete(int3)                                                       # STEP 17
int3 = 5                                                                # STEP 18
avl1.insert(int2)                                                       # STEP 19
int2 = 7                                                                # STEP 20
avl1.delete(int0)                                                       # STEP 21
avl0.delete(int1)                                                       # STEP 22
avl0.insert(int0)                                                       # STEP 23
avl0 == avl0                                                            # STEP 24
int1 = 14                                                               # STEP 25
avl1.delete(int3)                                                       # STEP 26
int3 = 16                                                               # STEP 27
result = avl0.inorder()                                                 # STEP 28
int0 = 7                                                                # STEP 29
result = avl1.inorder()                                                 # STEP 30
avl1.insert(int1)                                                       # STEP 31
avl0.delete(int0)                                                       # STEP 32
avl0.insert(int2)                                                       # STEP 33
avl1.insert(int2)                                                       # STEP 34
result = avl1.find(int1)                                                # STEP 35
int1 = 7                                                                # STEP 36
avl1.delete(int3)                                                       # STEP 37
int3 = 2                                                                # STEP 38
int2 = 12                                                               # STEP 39
avl0.delete(int0)                                                       # STEP 40
int0 = 17                                                               # STEP 41
avl0.delete(int2)                                                       # STEP 42
int2 = 6                                                                # STEP 43
avl0.insert(int2)                                                       # STEP 44
int2 = 1                                                                # STEP 45
avl0 == avl1                                                            # STEP 46
avl1.insert(int1)                                                       # STEP 47
int1 = 14                                                               # STEP 48
avl0.delete(int2)                                                       # STEP 49
avl1.insert(int1)                                                       # STEP 50
avl1.insert(int2)                                                       # STEP 51
avl1.insert(int3)                                                       # STEP 52
int1 = 9                                                                # STEP 53
int3 = 19                                                               # STEP 54
int2 = 10                                                               # STEP 55
avl0.delete(int1)                                                       # STEP 56
avl1.insert(int2)                                                       # STEP 57
int2 = 11                                                               # STEP 58
result = avl1.find(int0)                                                # STEP 59
int0 = 17                                                               # STEP 60
avl1.insert(int1)                                                       # STEP 61
avl0 = avl.AVLTree()                                                    # STEP 62
avl1 == avl1                                                            # STEP 63
avl0.delete(int1)                                                       # STEP 64
avl0.insert(int0)                                                       # STEP 65
avl0 == avl0                                                            # STEP 66
int0 = 12                                                               # STEP 67
avl1.delete(int0)                                                       # STEP 68
avl1.delete(int0)                                                       # STEP 69
avl0.delete(int2)                                                       # STEP 70
int2 = 2                                                                # STEP 71
result = avl0.find(int0)                                                # STEP 72
int1 = 5                                                                # STEP 73
avl1.delete(int2)                                                       # STEP 74
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10472b098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7892, in check
    assert self.p_avl[1].check_balanced()
202 BRANCHES COVERED
150 STATEMENTS COVERED
