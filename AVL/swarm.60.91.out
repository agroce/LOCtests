Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.983.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #4 STEP #66 (0:00:30.008117) Fri Apr 28 07:51:11 2017 [ 151 stmts 202 branches ]
WARNING: DEADLOCK (NO ENABLED ACTIONS)
TERMINATING TEST DUE TO NO ENABLED ACTIONS
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104433a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
Original test has 28 steps

SAVING TEST AS failure.983.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 20                                                                # STEP 0
ACTION: int0 = 20 
int0 = None : <type 'NoneType'>
=> int0 = 20 : <type 'int'>
==================================================
int1 = 3                                                                 # STEP 1
ACTION: int1 = 3 
int1 = None : <type 'NoneType'>
=> int1 = 3 : <type 'int'>
==================================================
int3 = 8                                                                 # STEP 2
ACTION: int3 = 8 
int3 = None : <type 'NoneType'>
=> int3 = 8 : <type 'int'>
==================================================
int2 = 9                                                                 # STEP 3
ACTION: int2 = 9 
int2 = None : <type 'NoneType'>
=> int2 = 9 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 4
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
avl0.delete(int3)                                                        # STEP 5
ACTION: avl0.delete(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int3 = 8                                                                 # STEP 6
ACTION: int3 = 8 
int3 = 8 : <type 'int'>
==================================================
result = avl0.find(int2)                                                 # STEP 7
ACTION: result = avl0.find(int2) 
int2 = 9 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
int2 = 14                                                                # STEP 8
ACTION: int2 = 14 
int2 = 9 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
avl0.delete(int0)                                                        # STEP 9
ACTION: avl0.delete(int0) 
int0 = 20 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int0 = 1                                                                # STEP 10
ACTION: int0 = 1 
int0 = 20 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
result = avl0.find(int3)                                                # STEP 11
ACTION: result = avl0.find(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int3)                                                       # STEP 12
ACTION: avl0.insert(int3) 
int3 = 8 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8]) : <type 'set'>
==================================================
int3 = 10                                                               # STEP 13
ACTION: int3 = 10 
int3 = 8 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 14
ACTION: avl0.insert(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 1]) : <type 'set'>
==================================================
result = avl0.find(int0)                                                # STEP 15
ACTION: result = avl0.find(int0) 
int0 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 16                                                               # STEP 16
ACTION: int0 = 16 
int0 = 1 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 17
ACTION: avl0.insert(int0) 
int0 = 16 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([8, 1, 16]) : <type 'set'>
==================================================
int0 = 19                                                               # STEP 18
ACTION: int0 = 19 
int0 = 16 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 19
ACTION: avl0.insert(int3) 
int3 = 10 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 1, 10, 16]) : <type 'set'>
==================================================
int3 = 15                                                               # STEP 20
ACTION: int3 = 15 
int3 = 10 : <type 'int'>
=> int3 = 15 : <type 'int'>
==================================================
result = avl0.find(int0)                                                # STEP 21
ACTION: result = avl0.find(int0) 
int0 = 19 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1, 10, 16]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int0) 
==================================================
int0 = 10                                                               # STEP 22
ACTION: int0 = 10 
int0 = 19 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
avl0.insert(int3)                                                       # STEP 23
ACTION: avl0.insert(int3) 
int3 = 15 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1, 10, 16]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([8, 1, 10, 16, 15]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 24
ACTION: result = avl0.find(int1) 
int1 = 3 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1, 10, 16, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
int1 = 1                                                                # STEP 25
ACTION: int1 = 1 
int1 = 3 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
int3 = 14                                                               # STEP 26
ACTION: int3 = 14 
int3 = 15 : <type 'int'>
=> int3 = 14 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 27
ACTION: avl0.delete(int1) 
int1 = 1 : <type 'int'>
avl0 = <avl.AVLTree instance at 0x104105518> : <type 'instance'>
avl_REF0 = set([8, 1, 10, 16, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([8, 10, 16, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058aa560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 53
STOPPING TESTING DUE TO TIMEOUT
8.04207668816 PERCENT COVERED
60.1677620411 TOTAL RUNTIME
9 EXECUTED
684 TOTAL TEST OPERATIONS
28.6433579922 TIME SPENT EXECUTING TEST OPERATIONS
0.0241892337799 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
28.8505516052 TIME SPENT CHECKING PROPERTIES
57.4939095974 TOTAL TIME SPENT RUNNING SUT
0.00521183013916 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 20                                                                # STEP 0
int1 = 3                                                                 # STEP 1
int3 = 8                                                                 # STEP 2
int2 = 9                                                                 # STEP 3
avl0 = avl.AVLTree()                                                     # STEP 4
avl0.delete(int3)                                                        # STEP 5
int3 = 8                                                                 # STEP 6
result = avl0.find(int2)                                                 # STEP 7
int2 = 14                                                                # STEP 8
avl0.delete(int0)                                                        # STEP 9
int0 = 1                                                                # STEP 10
result = avl0.find(int3)                                                # STEP 11
avl0.insert(int3)                                                       # STEP 12
int3 = 10                                                               # STEP 13
avl0.insert(int0)                                                       # STEP 14
result = avl0.find(int0)                                                # STEP 15
int0 = 16                                                               # STEP 16
avl0.insert(int0)                                                       # STEP 17
int0 = 19                                                               # STEP 18
avl0.insert(int3)                                                       # STEP 19
int3 = 15                                                               # STEP 20
result = avl0.find(int0)                                                # STEP 21
int0 = 10                                                               # STEP 22
avl0.insert(int3)                                                       # STEP 23
result = avl0.find(int1)                                                # STEP 24
int1 = 1                                                                # STEP 25
int3 = 14                                                               # STEP 26
avl0.delete(int1)                                                       # STEP 27
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058aa560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7890, in check
    assert self.p_avl[0].check_balanced()
202 BRANCHES COVERED
151 STATEMENTS COVERED
