Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.40488.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
  11 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([2, 5, 8, 11, 17, 20])
  11 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([2, 5, 8, 11, 17, 20])
  11 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([2, 5, 8, 11, 17, 20])
  11 [2:0]
-- < 5 [1:0]
---- < 2 [0:0] L
---- > 8 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([2, 5, 8, 11, 17, 20])
  8 [2:0]
-- < 7 [1:1]
---- < 2 [0:0] L
-- > 18 [1:0]
---- < 13 [0:0] L
---- > 20 [0:0] L
set([2, 7, 8, 13, 18, 20])
PROPERLY VIOLATION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035a3d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
Original test has 82 steps

SAVING TEST AS failure.40488.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 15                                                                # STEP 0
ACTION: int1 = 15 
int1 = None : <type 'NoneType'>
=> int1 = 15 : <type 'int'>
==================================================
int3 = 14                                                                # STEP 1
ACTION: int3 = 14 
int3 = None : <type 'NoneType'>
=> int3 = 14 : <type 'int'>
==================================================
avl0 = avl.AVLTree()                                                     # STEP 2
ACTION: avl0 = avl.AVLTree() 
avl0 = None : <type 'NoneType'>
avl_REF0 = None : <type 'NoneType'>
=> avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
REFERENCE ACTION: avl_REF0 = set() 
=> avl_REF0 = set([]) : <type 'set'>
==================================================
int2 = 1                                                                 # STEP 3
ACTION: int2 = 1 
int2 = None : <type 'NoneType'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int2)                                                        # STEP 4
ACTION: avl0.insert(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
=> avl_REF0 = set([1]) : <type 'set'>
==================================================
int2 = 19                                                                # STEP 5
ACTION: int2 = 19 
int2 = 1 : <type 'int'>
=> int2 = 19 : <type 'int'>
==================================================
avl0.delete(int3)                                                        # STEP 6
ACTION: avl0.delete(int3) 
int3 = 14 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
int0 = 13                                                                # STEP 7
ACTION: int0 = 13 
int0 = None : <type 'NoneType'>
=> int0 = 13 : <type 'int'>
==================================================
int3 = 5                                                                 # STEP 8
ACTION: int3 = 5 
int3 = 14 : <type 'int'>
=> int3 = 5 : <type 'int'>
==================================================
result = avl0.find(int1)                                                 # STEP 9
ACTION: result = avl0.find(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
result = avl0.find(int3)                                                # STEP 10
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl0.insert(int1)                                                       # STEP 11
ACTION: avl0.insert(int1) 
int1 = 15 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 15]) : <type 'set'>
==================================================
avl0.delete(int0)                                                       # STEP 12
ACTION: avl0.delete(int0) 
int0 = 13 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int0) 
==================================================
int1 = 4                                                                # STEP 13
ACTION: int1 = 4 
int1 = 15 : <type 'int'>
=> int1 = 4 : <type 'int'>
==================================================
avl0.delete(int1)                                                       # STEP 14
ACTION: avl0.delete(int1) 
int1 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl0.insert(int3)                                                       # STEP 15
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
=> avl_REF0 = set([1, 5, 15]) : <type 'set'>
==================================================
avl0.insert(int3)                                                       # STEP 16
ACTION: avl0.insert(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int3) 
==================================================
result = avl0.find(int3)                                                # STEP 17
ACTION: result = avl0.find(int3) 
int3 = 5 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
int0 = 19                                                               # STEP 18
ACTION: int0 = 19 
int0 = 13 : <type 'int'>
=> int0 = 19 : <type 'int'>
==================================================
int1 = 2                                                                # STEP 19
ACTION: int1 = 2 
int1 = 4 : <type 'int'>
=> int1 = 2 : <type 'int'>
==================================================
avl1 = avl.AVLTree()                                                    # STEP 20
ACTION: avl1 = avl.AVLTree() 
avl1 = None : <type 'NoneType'>
avl_REF1 = None : <type 'NoneType'>
=> avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
REFERENCE ACTION: avl_REF1 = set() 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 21
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
=> avl_REF0 = set([1, 2, 5, 15]) : <type 'set'>
==================================================
avl0.insert(int1)                                                       # STEP 22
ACTION: avl0.insert(int1) 
int1 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int1) 
==================================================
int1 = 1                                                                # STEP 23
ACTION: int1 = 1 
int1 = 2 : <type 'int'>
=> int1 = 1 : <type 'int'>
==================================================
avl1.insert(int3)                                                       # STEP 24
ACTION: avl1.insert(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int3) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
avl1.delete(int2)                                                       # STEP 25
ACTION: avl1.delete(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl1.insert(int2)                                                       # STEP 26
ACTION: avl1.insert(int2) 
int2 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
=> avl_REF1 = set([19, 5]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 27
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([19, 5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
=> avl_REF1 = set([5]) : <type 'set'>
==================================================
int2 = 7                                                                # STEP 28
ACTION: int2 = 7 
int2 = 19 : <type 'int'>
=> int2 = 7 : <type 'int'>
==================================================
avl1.delete(int3)                                                       # STEP 29
ACTION: avl1.delete(int3) 
int3 = 5 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([5]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
=> avl_REF1 = set([]) : <type 'set'>
==================================================
avl0.delete(int2)                                                       # STEP 30
ACTION: avl0.delete(int2) 
int2 = 7 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
==================================================
int2 = 2                                                                # STEP 31
ACTION: int2 = 2 
int2 = 7 : <type 'int'>
=> int2 = 2 : <type 'int'>
==================================================
avl0.insert(int2)                                                       # STEP 32
ACTION: avl0.insert(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int2) 
==================================================
int2 = 2                                                                # STEP 33
ACTION: int2 = 2 
int2 = 2 : <type 'int'>
==================================================
result = avl0.find(int2)                                                # STEP 34
ACTION: result = avl0.find(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 35
ACTION: avl0.delete(int2) 
int2 = 2 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 2, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([1, 5, 15]) : <type 'set'>
==================================================
int2 = 12                                                               # STEP 36
ACTION: int2 = 12 
int2 = 2 : <type 'int'>
=> int2 = 12 : <type 'int'>
==================================================
int3 = 11                                                               # STEP 37
ACTION: int3 = 11 
int3 = 5 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
avl1.delete(int0)                                                       # STEP 38
ACTION: avl1.delete(int0) 
int0 = 19 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int0 = 20                                                               # STEP 39
ACTION: int0 = 20 
int0 = 19 : <type 'int'>
=> int0 = 20 : <type 'int'>
==================================================
avl2 = avl.AVLTree()                                                    # STEP 40
ACTION: avl2 = avl.AVLTree() 
avl2 = None : <type 'NoneType'>
avl_REF2 = None : <type 'NoneType'>
=> avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
REFERENCE ACTION: avl_REF2 = set() 
=> avl_REF2 = set([]) : <type 'set'>
==================================================
avl2.delete(int1)                                                       # STEP 41
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.delete(int1)                                                       # STEP 42
ACTION: avl2.delete(int1) 
int1 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
int1 = 12                                                               # STEP 43
ACTION: int1 = 12 
int1 = 1 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
avl2.delete(int1)                                                       # STEP 44
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl2.insert(int3)                                                       # STEP 45
ACTION: avl2.insert(int3) 
int3 = 11 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int3) 
=> avl_REF2 = set([11]) : <type 'set'>
==================================================
result = avl0.find(int1)                                                # STEP 46
ACTION: result = avl0.find(int1) 
int1 = 12 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 47
ACTION: avl2.delete(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl1.delete(int0)                                                       # STEP 48
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.delete(int1)                                                       # STEP 49
ACTION: avl2.delete(int1) 
int1 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int1) 
==================================================
avl1.delete(int0)                                                       # STEP 50
ACTION: avl1.delete(int0) 
int0 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
int3 = 20                                                               # STEP 51
ACTION: int3 = 20 
int3 = 11 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
avl1.delete(int2)                                                       # STEP 52
ACTION: avl1.delete(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int2) 
==================================================
avl0.insert(int0)                                                       # STEP 53
ACTION: avl0.insert(int0) 
int0 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 20, 5, 15]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 54
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([12]) : <type 'set'>
==================================================
avl2.insert(int0)                                                       # STEP 55
ACTION: avl2.insert(int0) 
int0 = 20 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([11]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int0) 
=> avl_REF2 = set([11, 20]) : <type 'set'>
==================================================
avl1.insert(int1)                                                       # STEP 56
ACTION: avl1.insert(int1) 
int1 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
==================================================
int1 = 20                                                               # STEP 57
ACTION: int1 = 20 
int1 = 12 : <type 'int'>
=> int1 = 20 : <type 'int'>
==================================================
int0 = 9                                                                # STEP 58
ACTION: int0 = 9 
int0 = 20 : <type 'int'>
=> int0 = 9 : <type 'int'>
==================================================
avl1.insert(int2)                                                       # STEP 59
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
avl1.delete(int3)                                                       # STEP 60
ACTION: avl1.delete(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 61
ACTION: avl0.delete(int1) 
int1 = 20 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 20, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
=> avl_REF0 = set([1, 5, 15]) : <type 'set'>
==================================================
result = avl1.find(int3)                                                # STEP 62
ACTION: result = avl1.find(int3) 
int3 = 20 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF1.__contains__(int3) 
==================================================
avl1.insert(int2)                                                       # STEP 63
ACTION: avl1.insert(int2) 
int2 = 12 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int2) 
==================================================
int1 = 17                                                               # STEP 64
ACTION: int1 = 17 
int1 = 20 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
avl1.delete(int1)                                                       # STEP 65
ACTION: avl1.delete(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int1) 
==================================================
avl1.insert(int1)                                                       # STEP 66
ACTION: avl1.insert(int1) 
int1 = 17 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int1) 
=> avl_REF1 = set([17, 12]) : <type 'set'>
==================================================
avl2.insert(int1)                                                       # STEP 67
ACTION: avl2.insert(int1) 
int1 = 17 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int1) 
=> avl_REF2 = set([17, 11, 20]) : <type 'set'>
==================================================
avl1.delete(int0)                                                       # STEP 68
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl1.delete(int0)                                                       # STEP 69
ACTION: avl1.delete(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.discard(int0) 
==================================================
avl2.insert(int2)                                                       # STEP 70
ACTION: avl2.insert(int2) 
int2 = 12 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([17, 11, 20]) : <type 'set'>
REFERENCE ACTION: avl_REF2.add(int2) 
=> avl_REF2 = set([17, 11, 20, 12]) : <type 'set'>
==================================================
avl1.insert(int0)                                                       # STEP 71
ACTION: avl1.insert(int0) 
int0 = 9 : <type 'int'>
avl1 = <avlbug2.AVLTree instance at 0x1033dbc68> : <type 'instance'>
avl_REF1 = set([17, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF1.add(int0) 
=> avl_REF1 = set([17, 12, 9]) : <type 'set'>
==================================================
int3 = 4                                                                # STEP 72
ACTION: int3 = 4 
int3 = 20 : <type 'int'>
=> int3 = 4 : <type 'int'>
==================================================
int2 = 1                                                                # STEP 73
ACTION: int2 = 1 
int2 = 12 : <type 'int'>
=> int2 = 1 : <type 'int'>
==================================================
avl0.insert(int0)                                                       # STEP 74
ACTION: avl0.insert(int0) 
int0 = 9 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.add(int0) 
=> avl_REF0 = set([1, 9, 5, 15]) : <type 'set'>
==================================================
avl0.delete(int1)                                                       # STEP 75
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
result = avl0.find(int3)                                                # STEP 76
ACTION: result = avl0.find(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 15]) : <type 'set'>
REFERENCE ACTION: result_REF = avl_REF0.__contains__(int3) 
==================================================
avl2.delete(int0)                                                       # STEP 77
ACTION: avl2.delete(int0) 
int0 = 9 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([17, 11, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int0) 
==================================================
avl0.delete(int3)                                                       # STEP 78
ACTION: avl0.delete(int3) 
int3 = 4 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int3) 
==================================================
avl0.delete(int1)                                                       # STEP 79
ACTION: avl0.delete(int1) 
int1 = 17 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int1) 
==================================================
avl2.delete(int2)                                                       # STEP 80
ACTION: avl2.delete(int2) 
int2 = 1 : <type 'int'>
avl2 = <avlbug2.AVLTree instance at 0x1034405a8> : <type 'instance'>
avl_REF2 = set([17, 11, 20, 12]) : <type 'set'>
REFERENCE ACTION: avl_REF2.discard(int2) 
==================================================
avl0.delete(int2)                                                       # STEP 81
ACTION: avl0.delete(int2) 
int2 = 1 : <type 'int'>
avl0 = <avlbug2.AVLTree instance at 0x101fb97a0> : <type 'instance'>
avl_REF0 = set([1, 9, 5, 15]) : <type 'set'>
REFERENCE ACTION: avl_REF0.discard(int2) 
=> avl_REF0 = set([9, 5, 15]) : <type 'set'>
==================================================
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10357b2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
  12 [2:0]
-- < 7 [1:0]
---- < 5 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 15 [1:-1]
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 19])
  12 [3:1]
-- < 7 [2:1]
---- < 5 [1:1]
------ < 1 [0:0] L
---- > 9 [0:0] L
-- > 17 [1:0]
---- < 15 [0:0] L
---- > 19 [0:0] L
set([1, 5, 7, 9, 12, 15, 17, 19])
  8 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 4, 8, 12, 17, 19])
  8 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 4, 8, 12, 17, 19])
TEST #3 STEP #66 (0:00:30.017163) Mon May  1 02:23:01 2017 [ 159 stmts 210 branches ]
  8 [2:0]
-- < 3 [1:-1]
---- > 4 [0:0] L
-- > 17 [1:0]
---- < 12 [0:0] L
---- > 19 [0:0] L
set([3, 4, 8, 12, 17, 19])
  15 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 3 [1:-1]
------ > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([1, 2, 3, 12, 15, 17, 20])
  15 [3:1]
-- < 2 [2:-1]
---- < 1 [0:0] L
---- > 3 [1:-1]
------ > 12 [0:0] L
-- > 17 [1:-1]
---- > 20 [0:0] L
set([1, 2, 3, 12, 15, 17, 20])
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 95
STOPPING TESTING DUE TO TIMEOUT
8.67164663852 PERCENT COVERED
60.2950658798 TOTAL RUNTIME
6 EXECUTED
577 TOTAL TEST OPERATIONS
26.137090683 TIME SPENT EXECUTING TEST OPERATIONS
0.0695331096649 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
26.2574882507 TIME SPENT CHECKING PROPERTIES
52.3945789337 TOTAL TIME SPENT RUNNING SUT
0.00360321998596 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 15                                                                # STEP 0
int3 = 14                                                                # STEP 1
avl0 = avl.AVLTree()                                                     # STEP 2
int2 = 1                                                                 # STEP 3
avl0.insert(int2)                                                        # STEP 4
int2 = 19                                                                # STEP 5
avl0.delete(int3)                                                        # STEP 6
int0 = 13                                                                # STEP 7
int3 = 5                                                                 # STEP 8
result = avl0.find(int1)                                                 # STEP 9
result = avl0.find(int3)                                                # STEP 10
avl0.insert(int1)                                                       # STEP 11
avl0.delete(int0)                                                       # STEP 12
int1 = 4                                                                # STEP 13
avl0.delete(int1)                                                       # STEP 14
avl0.insert(int3)                                                       # STEP 15
avl0.insert(int3)                                                       # STEP 16
result = avl0.find(int3)                                                # STEP 17
int0 = 19                                                               # STEP 18
int1 = 2                                                                # STEP 19
avl1 = avl.AVLTree()                                                    # STEP 20
avl0.insert(int1)                                                       # STEP 21
avl0.insert(int1)                                                       # STEP 22
int1 = 1                                                                # STEP 23
avl1.insert(int3)                                                       # STEP 24
avl1.delete(int2)                                                       # STEP 25
avl1.insert(int2)                                                       # STEP 26
avl1.delete(int0)                                                       # STEP 27
int2 = 7                                                                # STEP 28
avl1.delete(int3)                                                       # STEP 29
avl0.delete(int2)                                                       # STEP 30
int2 = 2                                                                # STEP 31
avl0.insert(int2)                                                       # STEP 32
int2 = 2                                                                # STEP 33
result = avl0.find(int2)                                                # STEP 34
avl0.delete(int2)                                                       # STEP 35
int2 = 12                                                               # STEP 36
int3 = 11                                                               # STEP 37
avl1.delete(int0)                                                       # STEP 38
int0 = 20                                                               # STEP 39
avl2 = avl.AVLTree()                                                    # STEP 40
avl2.delete(int1)                                                       # STEP 41
avl2.delete(int1)                                                       # STEP 42
int1 = 12                                                               # STEP 43
avl2.delete(int1)                                                       # STEP 44
avl2.insert(int3)                                                       # STEP 45
result = avl0.find(int1)                                                # STEP 46
avl2.delete(int2)                                                       # STEP 47
avl1.delete(int0)                                                       # STEP 48
avl2.delete(int1)                                                       # STEP 49
avl1.delete(int0)                                                       # STEP 50
int3 = 20                                                               # STEP 51
avl1.delete(int2)                                                       # STEP 52
avl0.insert(int0)                                                       # STEP 53
avl1.insert(int1)                                                       # STEP 54
avl2.insert(int0)                                                       # STEP 55
avl1.insert(int1)                                                       # STEP 56
int1 = 20                                                               # STEP 57
int0 = 9                                                                # STEP 58
avl1.insert(int2)                                                       # STEP 59
avl1.delete(int3)                                                       # STEP 60
avl0.delete(int1)                                                       # STEP 61
result = avl1.find(int3)                                                # STEP 62
avl1.insert(int2)                                                       # STEP 63
int1 = 17                                                               # STEP 64
avl1.delete(int1)                                                       # STEP 65
avl1.insert(int1)                                                       # STEP 66
avl2.insert(int1)                                                       # STEP 67
avl1.delete(int0)                                                       # STEP 68
avl1.delete(int0)                                                       # STEP 69
avl2.insert(int2)                                                       # STEP 70
avl1.insert(int0)                                                       # STEP 71
int3 = 4                                                                # STEP 72
int2 = 1                                                                # STEP 73
avl0.insert(int0)                                                       # STEP 74
avl0.delete(int1)                                                       # STEP 75
result = avl0.find(int3)                                                # STEP 76
avl2.delete(int0)                                                       # STEP 77
avl0.delete(int3)                                                       # STEP 78
avl0.delete(int1)                                                       # STEP 79
avl2.delete(int2)                                                       # STEP 80
avl0.delete(int2)                                                       # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10357b2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/AVL/sut.py", line 7891, in check
    assert self.p_avl[0].check_balanced()
210 BRANCHES COVERED
159 STATEMENTS COVERED
