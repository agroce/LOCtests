Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.872.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103cce320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5170, in act150
    assert (min(self.p_heap[2]) == heaps.heappop(self.p_heap[2]))
Original test has 100 steps

SAVING TEST AS failure.872.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 12                                                                # STEP 0
ACTION: int0 = 12 
int0 = None : <type 'NoneType'>
=> int0 = 12 : <type 'int'>
==================================================
int1 = 8                                                                 # STEP 1
ACTION: int1 = 8 
int1 = None : <type 'NoneType'>
=> int1 = 8 : <type 'int'>
==================================================
int3 = 3                                                                 # STEP 2
ACTION: int3 = 3 
int3 = None : <type 'NoneType'>
=> int3 = 3 : <type 'int'>
==================================================
int4 = 1                                                                 # STEP 3
ACTION: int4 = 1 
int4 = None : <type 'NoneType'>
=> int4 = 1 : <type 'int'>
==================================================
int2 = 7                                                                 # STEP 4
ACTION: int2 = 7 
int2 = None : <type 'NoneType'>
=> int2 = 7 : <type 'int'>
==================================================
heap2 = heaps.heapnew()                                                  # STEP 5
ACTION: heap2 = heaps.heapnew() 
heap2 = None : <type 'NoneType'>
=> heap2 = [] : <type 'list'>
==================================================
heaps.heappush(heap2,int4)                                               # STEP 6
ACTION: heaps.heappush(heap2,int4) 
int4 = 1 : <type 'int'>
heap2 = [] : <type 'list'>
=> heap2 = [1] : <type 'list'>
==================================================
int4 = 8                                                                 # STEP 7
ACTION: int4 = 8 
int4 = 1 : <type 'int'>
=> int4 = 8 : <type 'int'>
==================================================
heaps.heappush(heap2,int2)                                               # STEP 8
ACTION: heaps.heappush(heap2,int2) 
int2 = 7 : <type 'int'>
heap2 = [1] : <type 'list'>
=> heap2 = [1, 7] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                              # STEP 9
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [1, 7] : <type 'list'>
=> heap2 = [7] : <type 'list'>
==================================================
int2 = 14                                                               # STEP 10
ACTION: int2 = 14 
int2 = 7 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 11
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [7] : <type 'list'>
=> heap2 = [] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 12
ACTION: heaps.heappop(heap2) 
heap2 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 13
ACTION: heap0 = heaps.heapmerge(heap2,heap2) 
heap2 = [] : <type 'list'>
heap0 = None : <type 'NoneType'>
=> heap0 = [] : <type 'list'>
==================================================
heaps.heappush(heap0,int3)                                              # STEP 14
ACTION: heaps.heappush(heap0,int3) 
int3 = 3 : <type 'int'>
heap0 = [] : <type 'list'>
=> heap0 = [3] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 15
ACTION: heap2 = heaps.heapmerge(heap2,heap0) 
heap2 = [] : <type 'list'>
heap0 = [3] : <type 'list'>
=> heap2 = [3] : <type 'list'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 16
ACTION: heaps.heappush(heap2,int3) 
int3 = 3 : <type 'int'>
heap2 = [3] : <type 'list'>
=> heap2 = [3, 3] : <type 'list'>
==================================================
heaps.heappush(heap2,int1)                                              # STEP 17
ACTION: heaps.heappush(heap2,int1) 
int1 = 8 : <type 'int'>
heap2 = [3, 3] : <type 'list'>
=> heap2 = [3, 3, 8] : <type 'list'>
==================================================
int3 = 10                                                               # STEP 18
ACTION: int3 = 10 
int3 = 3 : <type 'int'>
=> int3 = 10 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 19
ACTION: heap0 = heaps.heapmerge(heap0,heap2) 
heap0 = [3] : <type 'list'>
heap2 = [3, 3, 8] : <type 'list'>
=> heap0 = [3, 3, 3, 8] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 20
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [3, 3, 3, 8] : <type 'list'>
heap2 = [3, 3, 8] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 8, 8] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap0,heap0)                                    # STEP 21
ACTION: heap0 = heaps.heapmerge(heap0,heap0) 
heap0 = [3, 3, 3, 8] : <type 'list'>
=> heap0 = [3, 3, 3, 3, 3, 3, 8, 8] : <type 'list'>
==================================================
int1 = 7                                                                # STEP 22
ACTION: int1 = 7 
int1 = 8 : <type 'int'>
=> int1 = 7 : <type 'int'>
==================================================
heaps.heappush(heap0,int4)                                              # STEP 23
ACTION: heaps.heappush(heap0,int4) 
int4 = 8 : <type 'int'>
heap0 = [3, 3, 3, 3, 3, 3, 8, 8] : <type 'list'>
=> heap0 = [3, 3, 3, 3, 3, 3, 8, 8, 8] : <type 'list'>
==================================================
heaps.heappush(heap2,int0)                                              # STEP 24
ACTION: heaps.heappush(heap2,int0) 
int0 = 12 : <type 'int'>
heap2 = [3, 3, 3, 3, 3, 3, 8, 8] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 8, 8, 12] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap2)                                    # STEP 25
ACTION: heap2 = heaps.heapmerge(heap2,heap2) 
heap2 = [3, 3, 3, 3, 3, 3, 8, 8, 12] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 12, 12] : <type 'list'>
==================================================
int0 = 16                                                               # STEP 26
ACTION: int0 = 16 
int0 = 12 : <type 'int'>
=> int0 = 16 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap0,heap0)                                    # STEP 27
ACTION: heap0 = heaps.heapmerge(heap0,heap0) 
heap0 = [3, 3, 3, 3, 3, 3, 8, 8, 8] : <type 'list'>
=> heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8] : <type 'list'>
==================================================
heaps.heappush(heap0,int3)                                              # STEP 28
ACTION: heaps.heappush(heap0,int3) 
int3 = 10 : <type 'int'>
heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8] : <type 'list'>
=> heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10] : <type 'list'>
==================================================
int3 = 11                                                               # STEP 29
ACTION: int3 = 11 
int3 = 10 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
heaps.heappush(heap2,int0)                                              # STEP 30
ACTION: heaps.heappush(heap2,int0) 
int0 = 16 : <type 'int'>
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 12, 12] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 12, 12, 16] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 31
ACTION: heap1 = heaps.heapmerge(heap0,heap2) 
heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10] : <type 'list'>
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 12, 12, 16] : <type 'list'>
heap1 = None : <type 'NoneType'>
=> heap1 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 12, 16] : <type 'list'>
==================================================
int0 = 11                                                               # STEP 32
ACTION: int0 = 11 
int0 = 16 : <type 'int'>
=> int0 = 11 : <type 'int'>
==================================================
int4 = 16                                                               # STEP 33
ACTION: int4 = 16 
int4 = 8 : <type 'int'>
=> int4 = 16 : <type 'int'>
==================================================
heaps.heappush(heap0,int2)                                              # STEP 34
ACTION: heaps.heappush(heap0,int2) 
int2 = 14 : <type 'int'>
heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10] : <type 'list'>
=> heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10, 14] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 35
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10, 14] : <type 'list'>
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 12, 12, 16] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14] : <type 'list'>
==================================================
int2 = 20                                                               # STEP 36
ACTION: int2 = 20 
int2 = 14 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
heaps.heappush(heap1,int2)                                              # STEP 37
ACTION: heaps.heappush(heap1,int2) 
int2 = 20 : <type 'int'>
heap1 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 12, 16] : <type 'list'>
=> heap1 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 12, 16, 20] : <type 'list'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 38
ACTION: heaps.heappush(heap2,int2) 
int2 = 20 : <type 'int'>
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 20] : <type 'list'>
==================================================
int2 = 17                                                               # STEP 39
ACTION: int2 = 17 
int2 = 20 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
heaps.heappop(heap1)                                                    # STEP 40
ACTION: heaps.heappop(heap1) 
heap1 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 12, 16, 20] : <type 'list'>
=> heap1 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 20, 8, 8, 10, 12, 12, 16] : <type 'list'>
==================================================
heaps.heappush(heap0,int0)                                              # STEP 41
ACTION: heaps.heappush(heap0,int0) 
int0 = 11 : <type 'int'>
heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10, 14] : <type 'list'>
=> heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10, 14, 11] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 42
ACTION: heap0 = heaps.heapnew() 
heap0 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 10, 14, 11] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
heap1 = heaps.heapnew()                                                 # STEP 43
ACTION: heap1 = heaps.heapnew() 
heap1 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 20, 8, 8, 10, 12, 12, 16] : <type 'list'>
=> heap1 = [] : <type 'list'>
==================================================
int0 = 6                                                                # STEP 44
ACTION: int0 = 6 
int0 = 11 : <type 'int'>
=> int0 = 6 : <type 'int'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 45
ACTION: heaps.heappush(heap1,int3) 
int3 = 11 : <type 'int'>
heap1 = [] : <type 'list'>
=> heap1 = [11] : <type 'list'>
==================================================
heaps.heappush(heap1,int4)                                              # STEP 46
ACTION: heaps.heappush(heap1,int4) 
int4 = 16 : <type 'int'>
heap1 = [11] : <type 'list'>
=> heap1 = [11, 16] : <type 'list'>
==================================================
int4 = 20                                                               # STEP 47
ACTION: int4 = 20 
int4 = 16 : <type 'int'>
=> int4 = 20 : <type 'int'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 48
ACTION: heaps.heappush(heap2,int3) 
int3 = 11 : <type 'int'>
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 20] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 20, 11] : <type 'list'>
==================================================
int3 = 1                                                                # STEP 49
ACTION: int3 = 1 
int3 = 11 : <type 'int'>
=> int3 = 1 : <type 'int'>
==================================================
heaps.heappop(heap2)                                                    # STEP 50
ACTION: heaps.heappop(heap2) 
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 20, 11] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 11, 8, 8, 8, 8, 10, 10, 14, 14, 20] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 51
ACTION: heap2 = heaps.heapmerge(heap2,heap0) 
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 11, 8, 8, 8, 8, 10, 10, 14, 14, 20] : <type 'list'>
heap0 = [] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 52
ACTION: heaps.heappop(heap1) 
heap1 = [11, 16] : <type 'list'>
=> heap1 = [16] : <type 'list'>
==================================================
heaps.heappush(heap2,int1)                                              # STEP 53
ACTION: heaps.heappush(heap2,int1) 
int1 = 7 : <type 'int'>
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 11, 8, 8, 8, 8, 10, 10, 14, 14, 20] : <type 'list'>
=> heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 11, 8, 8, 8, 8, 10, 10, 14, 14, 20, 7] : <type 'list'>
==================================================
int1 = 7                                                                # STEP 54
ACTION: int1 = 7 
int1 = 7 : <type 'int'>
==================================================
heap1 = heaps.heapmerge(heap1,heap0)                                    # STEP 55
ACTION: heap1 = heaps.heapmerge(heap1,heap0) 
heap1 = [16] : <type 'list'>
heap0 = [] : <type 'list'>
==================================================
heap2 = heaps.heapnew()                                                 # STEP 56
ACTION: heap2 = heaps.heapnew() 
heap2 = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 11, 8, 8, 8, 8, 10, 10, 14, 14, 20, 7] : <type 'list'>
=> heap2 = [] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap1,heap2)                                    # STEP 57
ACTION: heap0 = heaps.heapmerge(heap1,heap2) 
heap1 = [16] : <type 'list'>
heap2 = [] : <type 'list'>
heap0 = [] : <type 'list'>
=> heap0 = [16] : <type 'list'>
==================================================
heaps.heappush(heap1,int0)                                              # STEP 58
ACTION: heaps.heappush(heap1,int0) 
int0 = 6 : <type 'int'>
heap1 = [16] : <type 'list'>
=> heap1 = [6, 16] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 59
ACTION: heap1 = heaps.heapmerge(heap1,heap1) 
heap1 = [6, 16] : <type 'list'>
=> heap1 = [6, 6, 16, 16] : <type 'list'>
==================================================
heaps.heappush(heap2,int4)                                              # STEP 60
ACTION: heaps.heappush(heap2,int4) 
int4 = 20 : <type 'int'>
heap2 = [] : <type 'list'>
=> heap2 = [20] : <type 'list'>
==================================================
heaps.heappush(heap0,int1)                                              # STEP 61
ACTION: heaps.heappush(heap0,int1) 
int1 = 7 : <type 'int'>
heap0 = [16] : <type 'list'>
=> heap0 = [7, 16] : <type 'list'>
==================================================
int0 = 18                                                               # STEP 62
ACTION: int0 = 18 
int0 = 6 : <type 'int'>
=> int0 = 18 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap0,heap1)                                    # STEP 63
ACTION: heap0 = heaps.heapmerge(heap0,heap1) 
heap0 = [7, 16] : <type 'list'>
heap1 = [6, 6, 16, 16] : <type 'list'>
=> heap0 = [6, 6, 7, 16, 16, 16] : <type 'list'>
==================================================
int1 = 10                                                               # STEP 64
ACTION: int1 = 10 
int1 = 7 : <type 'int'>
=> int1 = 10 : <type 'int'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 65
ACTION: heaps.heappush(heap1,int3) 
int3 = 1 : <type 'int'>
heap1 = [6, 6, 16, 16] : <type 'list'>
=> heap1 = [1, 6, 16, 16, 6] : <type 'list'>
==================================================
int3 = 9                                                                # STEP 66
ACTION: int3 = 9 
int3 = 1 : <type 'int'>
=> int3 = 9 : <type 'int'>
==================================================
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 67
ACTION: heap1 = heaps.heapmerge(heap0,heap2) 
heap0 = [6, 6, 7, 16, 16, 16] : <type 'list'>
heap2 = [20] : <type 'list'>
heap1 = [1, 6, 16, 16, 6] : <type 'list'>
=> heap1 = [6, 6, 7, 16, 16, 16, 20] : <type 'list'>
==================================================
int4 = 6                                                                # STEP 68
ACTION: int4 = 6 
int4 = 20 : <type 'int'>
=> int4 = 6 : <type 'int'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 69
ACTION: heaps.heappush(heap2,int3) 
int3 = 9 : <type 'int'>
heap2 = [20] : <type 'list'>
=> heap2 = [9, 20] : <type 'list'>
==================================================
heaps.heappush(heap2,int0)                                              # STEP 70
ACTION: heaps.heappush(heap2,int0) 
int0 = 18 : <type 'int'>
heap2 = [9, 20] : <type 'list'>
=> heap2 = [9, 20, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 71
ACTION: heaps.heappop(heap1) 
heap1 = [6, 6, 7, 16, 16, 16, 20] : <type 'list'>
=> heap1 = [6, 16, 7, 20, 16, 16] : <type 'list'>
==================================================
int0 = 14                                                               # STEP 72
ACTION: int0 = 14 
int0 = 18 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
int3 = 7                                                                # STEP 73
ACTION: int3 = 7 
int3 = 9 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
heap2 = heaps.heapmerge(heap1,heap2)                                    # STEP 74
ACTION: heap2 = heaps.heapmerge(heap1,heap2) 
heap1 = [6, 16, 7, 20, 16, 16] : <type 'list'>
heap2 = [9, 20, 18] : <type 'list'>
=> heap2 = [6, 9, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap2)                                    # STEP 75
ACTION: heap1 = heaps.heapmerge(heap1,heap2) 
heap1 = [6, 16, 7, 20, 16, 16] : <type 'list'>
heap2 = [6, 9, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
=> heap1 = [6, 6, 9, 16, 7, 16, 7, 20, 16, 16, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 76
ACTION: heaps.heappop(heap2) 
heap2 = [6, 9, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
=> heap2 = [9, 7, 16, 18, 20, 16, 16, 20] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 77
ACTION: heap0 = heaps.heapnew() 
heap0 = [6, 6, 7, 16, 16, 16] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 78
ACTION: heaps.heappush(heap2,int3) 
int3 = 7 : <type 'int'>
heap2 = [9, 7, 16, 18, 20, 16, 16, 20] : <type 'list'>
=> heap2 = [9, 7, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap2)                                    # STEP 79
ACTION: heap2 = heaps.heapmerge(heap0,heap2) 
heap0 = [] : <type 'list'>
heap2 = [9, 7, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
int3 = 11                                                               # STEP 80
ACTION: int3 = 11 
int3 = 7 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 81
ACTION: heap0 = heaps.heapmerge(heap2,heap2) 
heap2 = [9, 7, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
heap0 = [] : <type 'list'>
=> heap0 = [9, 7, 9, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 82
ACTION: heaps.heappush(heap1,int3) 
int3 = 11 : <type 'int'>
heap1 = [6, 6, 9, 16, 7, 16, 7, 20, 16, 16, 20, 16, 16, 20, 18] : <type 'list'>
=> heap1 = [6, 6, 9, 11, 7, 16, 7, 16, 16, 16, 20, 16, 16, 20, 18, 20] : <type 'list'>
==================================================
int3 = 16                                                               # STEP 83
ACTION: int3 = 16 
int3 = 11 : <type 'int'>
=> int3 = 16 : <type 'int'>
==================================================
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 84
ACTION: heap1 = heaps.heapmerge(heap0,heap2) 
heap0 = [9, 7, 9, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
heap2 = [9, 7, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
heap1 = [6, 6, 9, 11, 7, 16, 7, 16, 16, 16, 20, 16, 16, 20, 18, 20] : <type 'list'>
=> heap1 = [9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heaps.heappush(heap2,int1)                                              # STEP 85
ACTION: heaps.heappush(heap2,int1) 
int1 = 10 : <type 'int'>
heap2 = [9, 7, 16, 7, 20, 16, 16, 20, 18] : <type 'list'>
=> heap2 = [9, 7, 16, 7, 10, 16, 16, 20, 18, 20] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap1,heap1)                                    # STEP 86
ACTION: heap0 = heaps.heapmerge(heap1,heap1) 
heap1 = [9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
heap0 = [9, 7, 9, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
=> heap0 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 87
ACTION: heaps.heappop(heap1) 
heap1 = [9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
=> heap1 = [7, 7, 9, 7, 9, 7, 16, 18, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20] : <type 'list'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 88
ACTION: heaps.heappush(heap2,int3) 
int3 = 16 : <type 'int'>
heap2 = [9, 7, 16, 7, 10, 16, 16, 20, 18, 20] : <type 'list'>
=> heap2 = [9, 7, 16, 7, 10, 16, 16, 20, 18, 20, 16] : <type 'list'>
==================================================
int3 = 7                                                                # STEP 89
ACTION: int3 = 7 
int3 = 16 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
int1 = 17                                                               # STEP 90
ACTION: int1 = 17 
int1 = 10 : <type 'int'>
=> int1 = 17 : <type 'int'>
==================================================
heaps.heappush(heap1,int4)                                              # STEP 91
ACTION: heaps.heappush(heap1,int4) 
int4 = 6 : <type 'int'>
heap1 = [7, 7, 9, 7, 9, 7, 16, 18, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20] : <type 'list'>
=> heap1 = [6, 7, 7, 7, 9, 9, 16, 18, 16, 7, 16, 7, 7, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 20] : <type 'list'>
==================================================
int4 = 7                                                                # STEP 92
ACTION: int4 = 7 
int4 = 6 : <type 'int'>
=> int4 = 7 : <type 'int'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 93
ACTION: heaps.heappush(heap2,int2) 
int2 = 17 : <type 'int'>
heap2 = [9, 7, 16, 7, 10, 16, 16, 20, 18, 20, 16] : <type 'list'>
=> heap2 = [9, 7, 16, 7, 10, 16, 16, 20, 18, 20, 16, 17] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap0)                                    # STEP 94
ACTION: heap1 = heaps.heapmerge(heap0,heap0) 
heap0 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
heap1 = [6, 7, 7, 7, 9, 9, 16, 18, 16, 7, 16, 7, 7, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 20] : <type 'list'>
=> heap1 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 95
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
heap2 = [9, 7, 16, 7, 10, 16, 16, 20, 18, 20, 16, 17] : <type 'list'>
=> heap2 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap0,heap1)                                    # STEP 96
ACTION: heap0 = heaps.heapmerge(heap0,heap1) 
heap0 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
heap1 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
=> heap0 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 97
ACTION: heaps.heappop(heap1) 
heap1 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
=> heap1 = [7, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 16, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 18, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20] : <type 'list'>
==================================================
int2 = 13                                                               # STEP 98
ACTION: int2 = 13 
int2 = 17 : <type 'int'>
=> int2 = 13 : <type 'int'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 99
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
=> heap2 = [7, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 9, 7, 16, 7, 16, 7, 16, 7, 16, 16, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 16, 7, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 18, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20, 18, 20, 16, 16, 20] : <type 'list'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103cda1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5170, in act150
    assert (min(self.p_heap[2]) == heaps.heappop(self.p_heap[2]))
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #12 STEP #27 (0:00:30.006179) Fri Apr 28 07:32:04 2017 [ 41 stmts 58 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 11
STOPPING TESTING DUE TO TIMEOUT
16.3120567376 PERCENT COVERED
60.0482289791 TOTAL RUNTIME
24 EXECUTED
2311 TOTAL TEST OPERATIONS
30.0450999737 TIME SPENT EXECUTING TEST OPERATIONS
0.0795903205872 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
28.5269434452 TIME SPENT CHECKING PROPERTIES
58.5720434189 TOTAL TIME SPENT RUNNING SUT
0.0144367218018 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 12                                                                # STEP 0
int1 = 8                                                                 # STEP 1
int3 = 3                                                                 # STEP 2
int4 = 1                                                                 # STEP 3
int2 = 7                                                                 # STEP 4
heap2 = heaps.heapnew()                                                  # STEP 5
heaps.heappush(heap2,int4)                                               # STEP 6
int4 = 8                                                                 # STEP 7
heaps.heappush(heap2,int2)                                               # STEP 8
assert (min(heap2) == heaps.heappop(heap2))                              # STEP 9
int2 = 14                                                               # STEP 10
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 11
heaps.heappop(heap2)                                                    # STEP 12
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 13
heaps.heappush(heap0,int3)                                              # STEP 14
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 15
heaps.heappush(heap2,int3)                                              # STEP 16
heaps.heappush(heap2,int1)                                              # STEP 17
int3 = 10                                                               # STEP 18
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 19
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 20
heap0 = heaps.heapmerge(heap0,heap0)                                    # STEP 21
int1 = 7                                                                # STEP 22
heaps.heappush(heap0,int4)                                              # STEP 23
heaps.heappush(heap2,int0)                                              # STEP 24
heap2 = heaps.heapmerge(heap2,heap2)                                    # STEP 25
int0 = 16                                                               # STEP 26
heap0 = heaps.heapmerge(heap0,heap0)                                    # STEP 27
heaps.heappush(heap0,int3)                                              # STEP 28
int3 = 11                                                               # STEP 29
heaps.heappush(heap2,int0)                                              # STEP 30
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 31
int0 = 11                                                               # STEP 32
int4 = 16                                                               # STEP 33
heaps.heappush(heap0,int2)                                              # STEP 34
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 35
int2 = 20                                                               # STEP 36
heaps.heappush(heap1,int2)                                              # STEP 37
heaps.heappush(heap2,int2)                                              # STEP 38
int2 = 17                                                               # STEP 39
heaps.heappop(heap1)                                                    # STEP 40
heaps.heappush(heap0,int0)                                              # STEP 41
heap0 = heaps.heapnew()                                                 # STEP 42
heap1 = heaps.heapnew()                                                 # STEP 43
int0 = 6                                                                # STEP 44
heaps.heappush(heap1,int3)                                              # STEP 45
heaps.heappush(heap1,int4)                                              # STEP 46
int4 = 20                                                               # STEP 47
heaps.heappush(heap2,int3)                                              # STEP 48
int3 = 1                                                                # STEP 49
heaps.heappop(heap2)                                                    # STEP 50
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 51
heaps.heappop(heap1)                                                    # STEP 52
heaps.heappush(heap2,int1)                                              # STEP 53
int1 = 7                                                                # STEP 54
heap1 = heaps.heapmerge(heap1,heap0)                                    # STEP 55
heap2 = heaps.heapnew()                                                 # STEP 56
heap0 = heaps.heapmerge(heap1,heap2)                                    # STEP 57
heaps.heappush(heap1,int0)                                              # STEP 58
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 59
heaps.heappush(heap2,int4)                                              # STEP 60
heaps.heappush(heap0,int1)                                              # STEP 61
int0 = 18                                                               # STEP 62
heap0 = heaps.heapmerge(heap0,heap1)                                    # STEP 63
int1 = 10                                                               # STEP 64
heaps.heappush(heap1,int3)                                              # STEP 65
int3 = 9                                                                # STEP 66
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 67
int4 = 6                                                                # STEP 68
heaps.heappush(heap2,int3)                                              # STEP 69
heaps.heappush(heap2,int0)                                              # STEP 70
heaps.heappop(heap1)                                                    # STEP 71
int0 = 14                                                               # STEP 72
int3 = 7                                                                # STEP 73
heap2 = heaps.heapmerge(heap1,heap2)                                    # STEP 74
heap1 = heaps.heapmerge(heap1,heap2)                                    # STEP 75
heaps.heappop(heap2)                                                    # STEP 76
heap0 = heaps.heapnew()                                                 # STEP 77
heaps.heappush(heap2,int3)                                              # STEP 78
heap2 = heaps.heapmerge(heap0,heap2)                                    # STEP 79
int3 = 11                                                               # STEP 80
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 81
heaps.heappush(heap1,int3)                                              # STEP 82
int3 = 16                                                               # STEP 83
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 84
heaps.heappush(heap2,int1)                                              # STEP 85
heap0 = heaps.heapmerge(heap1,heap1)                                    # STEP 86
heaps.heappop(heap1)                                                    # STEP 87
heaps.heappush(heap2,int3)                                              # STEP 88
int3 = 7                                                                # STEP 89
int1 = 17                                                               # STEP 90
heaps.heappush(heap1,int4)                                              # STEP 91
int4 = 7                                                                # STEP 92
heaps.heappush(heap2,int2)                                              # STEP 93
heap1 = heaps.heapmerge(heap0,heap0)                                    # STEP 94
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 95
heap0 = heaps.heapmerge(heap0,heap1)                                    # STEP 96
heaps.heappop(heap1)                                                    # STEP 97
int2 = 13                                                               # STEP 98
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103cda1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5170, in act150
    assert (min(self.p_heap[2]) == heaps.heappop(self.p_heap[2]))
58 BRANCHES COVERED
41 STATEMENTS COVERED
