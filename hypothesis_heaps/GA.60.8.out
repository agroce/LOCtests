Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.13821.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d4c320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5170, in act150
    assert (min(self.p_heap[2]) == heaps.heappop(self.p_heap[2]))
Original test has 81 steps

SAVING TEST AS failure.13821.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int0 = 11                                                                # STEP 0
ACTION: int0 = 11 
int0 = None : <type 'NoneType'>
=> int0 = 11 : <type 'int'>
==================================================
int2 = 18                                                                # STEP 1
ACTION: int2 = 18 
int2 = None : <type 'NoneType'>
=> int2 = 18 : <type 'int'>
==================================================
int1 = 17                                                                # STEP 2
ACTION: int1 = 17 
int1 = None : <type 'NoneType'>
=> int1 = 17 : <type 'int'>
==================================================
int4 = 4                                                                 # STEP 3
ACTION: int4 = 4 
int4 = None : <type 'NoneType'>
=> int4 = 4 : <type 'int'>
==================================================
int3 = 20                                                                # STEP 4
ACTION: int3 = 20 
int3 = None : <type 'NoneType'>
=> int3 = 20 : <type 'int'>
==================================================
heap0 = heaps.heapnew()                                                  # STEP 5
ACTION: heap0 = heaps.heapnew() 
heap0 = None : <type 'NoneType'>
=> heap0 = [] : <type 'list'>
==================================================
heap2 = heaps.heapnew()                                                  # STEP 6
ACTION: heap2 = heaps.heapnew() 
heap2 = None : <type 'NoneType'>
=> heap2 = [] : <type 'list'>
==================================================
heaps.heappush(heap0,int0)                                               # STEP 7
ACTION: heaps.heappush(heap0,int0) 
int0 = 11 : <type 'int'>
heap0 = [] : <type 'list'>
=> heap0 = [11] : <type 'list'>
==================================================
int0 = 4                                                                 # STEP 8
ACTION: int0 = 4 
int0 = 11 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
heaps.heappush(heap0,int0)                                               # STEP 9
ACTION: heaps.heappush(heap0,int0) 
int0 = 4 : <type 'int'>
heap0 = [11] : <type 'list'>
=> heap0 = [4, 11] : <type 'list'>
==================================================
int0 = 14                                                               # STEP 10
ACTION: int0 = 14 
int0 = 4 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 11
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [4, 11] : <type 'list'>
=> heap0 = [11] : <type 'list'>
==================================================
heaps.heappush(heap0,int0)                                              # STEP 12
ACTION: heaps.heappush(heap0,int0) 
int0 = 14 : <type 'int'>
heap0 = [11] : <type 'list'>
=> heap0 = [11, 14] : <type 'list'>
==================================================
int0 = 8                                                                # STEP 13
ACTION: int0 = 8 
int0 = 14 : <type 'int'>
=> int0 = 8 : <type 'int'>
==================================================
heap1 = heaps.heapmerge(heap2,heap2)                                    # STEP 14
ACTION: heap1 = heaps.heapmerge(heap2,heap2) 
heap2 = [] : <type 'list'>
heap1 = None : <type 'NoneType'>
=> heap1 = [] : <type 'list'>
==================================================
heaps.heappush(heap0,int3)                                              # STEP 15
ACTION: heaps.heappush(heap0,int3) 
int3 = 20 : <type 'int'>
heap0 = [11, 14] : <type 'list'>
=> heap0 = [11, 14, 20] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 16
ACTION: heap2 = heaps.heapmerge(heap0,heap1) 
heap0 = [11, 14, 20] : <type 'list'>
heap1 = [] : <type 'list'>
heap2 = [] : <type 'list'>
=> heap2 = [11, 14, 20] : <type 'list'>
==================================================
int3 = 19                                                               # STEP 17
ACTION: int3 = 19 
int3 = 20 : <type 'int'>
=> int3 = 19 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 18
ACTION: heap0 = heaps.heapmerge(heap0,heap2) 
heap0 = [11, 14, 20] : <type 'list'>
heap2 = [11, 14, 20] : <type 'list'>
=> heap0 = [11, 11, 14, 14, 20, 20] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 19
ACTION: heaps.heappop(heap2) 
heap2 = [11, 14, 20] : <type 'list'>
=> heap2 = [14, 20] : <type 'list'>
==================================================
heap1 = heaps.heapnew()                                                 # STEP 20
ACTION: heap1 = heaps.heapnew() 
heap1 = [] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 21
ACTION: heaps.heappop(heap0) 
heap0 = [11, 11, 14, 14, 20, 20] : <type 'list'>
=> heap0 = [11, 14, 14, 20, 20] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 22
ACTION: heap2 = heaps.heapmerge(heap2,heap0) 
heap2 = [14, 20] : <type 'list'>
heap0 = [11, 14, 14, 20, 20] : <type 'list'>
=> heap2 = [11, 14, 14, 14, 20, 20, 20] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 23
ACTION: heaps.heappop(heap2) 
heap2 = [11, 14, 14, 14, 20, 20, 20] : <type 'list'>
=> heap2 = [14, 14, 14, 20, 20, 20] : <type 'list'>
==================================================
heaps.heappush(heap1,int0)                                              # STEP 24
ACTION: heaps.heappush(heap1,int0) 
int0 = 8 : <type 'int'>
heap1 = [] : <type 'list'>
=> heap1 = [8] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 25
ACTION: heap1 = heaps.heapmerge(heap1,heap1) 
heap1 = [8] : <type 'list'>
=> heap1 = [8, 8] : <type 'list'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 26
ACTION: heaps.heappush(heap2,int2) 
int2 = 18 : <type 'int'>
heap2 = [14, 14, 14, 20, 20, 20] : <type 'list'>
=> heap2 = [14, 14, 14, 20, 20, 20, 18] : <type 'list'>
==================================================
int0 = 10                                                               # STEP 27
ACTION: int0 = 10 
int0 = 8 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
int2 = 17                                                               # STEP 28
ACTION: int2 = 17 
int2 = 18 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 29
ACTION: heap0 = heaps.heapmerge(heap2,heap0) 
heap2 = [14, 14, 14, 20, 20, 20, 18] : <type 'list'>
heap0 = [11, 14, 14, 20, 20] : <type 'list'>
=> heap0 = [11, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20] : <type 'list'>
==================================================
heaps.heappush(heap1,int2)                                              # STEP 30
ACTION: heaps.heappush(heap1,int2) 
int2 = 17 : <type 'int'>
heap1 = [8, 8] : <type 'list'>
=> heap1 = [8, 8, 17] : <type 'list'>
==================================================
int2 = 6                                                                # STEP 31
ACTION: int2 = 6 
int2 = 17 : <type 'int'>
=> int2 = 6 : <type 'int'>
==================================================
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 32
ACTION: heap1 = heaps.heapmerge(heap1,heap1) 
heap1 = [8, 8, 17] : <type 'list'>
=> heap1 = [8, 8, 8, 8, 17, 17] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 33
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [11, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20] : <type 'list'>
heap2 = [14, 14, 14, 20, 20, 20, 18] : <type 'list'>
=> heap2 = [11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 34
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [8, 8, 8, 8, 17, 17] : <type 'list'>
=> heap1 = [8, 8, 8, 17, 17] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 35
ACTION: heap1 = heaps.heapmerge(heap0,heap1) 
heap0 = [11, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20] : <type 'list'>
heap1 = [8, 8, 8, 17, 17] : <type 'list'>
=> heap1 = [8, 8, 8, 11, 14, 14, 14, 14, 14, 17, 17, 20, 20, 20, 18, 20, 20] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 36
ACTION: heap0 = heaps.heapnew() 
heap0 = [11, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
heaps.heappush(heap1,int4)                                              # STEP 37
ACTION: heaps.heappush(heap1,int4) 
int4 = 4 : <type 'int'>
heap1 = [8, 8, 8, 11, 14, 14, 14, 14, 14, 17, 17, 20, 20, 20, 18, 20, 20] : <type 'list'>
=> heap1 = [4, 8, 8, 8, 14, 14, 14, 14, 11, 17, 17, 20, 20, 20, 18, 20, 20, 14] : <type 'list'>
==================================================
heaps.heappush(heap1,int2)                                              # STEP 38
ACTION: heaps.heappush(heap1,int2) 
int2 = 6 : <type 'int'>
heap1 = [4, 8, 8, 8, 14, 14, 14, 14, 11, 17, 17, 20, 20, 20, 18, 20, 20, 14] : <type 'list'>
=> heap1 = [4, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 39
ACTION: heap1 = heaps.heapmerge(heap0,heap1) 
heap0 = [] : <type 'list'>
heap1 = [4, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11] : <type 'list'>
==================================================
heaps.heappush(heap2,int4)                                              # STEP 40
ACTION: heaps.heappush(heap2,int4) 
int4 = 4 : <type 'int'>
heap2 = [11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20] : <type 'list'>
=> heap2 = [4, 11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14] : <type 'list'>
==================================================
heaps.heappush(heap2,int4)                                              # STEP 41
ACTION: heaps.heappush(heap2,int4) 
int4 = 4 : <type 'int'>
heap2 = [4, 11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14] : <type 'list'>
=> heap2 = [4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
==================================================
heaps.heappush(heap1,int2)                                              # STEP 42
ACTION: heaps.heappush(heap1,int2) 
int2 = 6 : <type 'int'>
heap1 = [4, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11] : <type 'list'>
=> heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17] : <type 'list'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 43
ACTION: heaps.heappush(heap1,int3) 
int3 = 19 : <type 'int'>
heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17] : <type 'list'>
=> heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 44
ACTION: heap0 = heaps.heapmerge(heap2,heap2) 
heap2 = [4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
heap0 = [] : <type 'list'>
=> heap0 = [4, 4, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 45
ACTION: heaps.heappop(heap2) 
heap2 = [4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
=> heap2 = [4, 11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 20] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 46
ACTION: heap2 = heaps.heapmerge(heap0,heap1) 
heap0 = [4, 4, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19] : <type 'list'>
heap2 = [4, 11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 20] : <type 'list'>
=> heap2 = [4, 4, 4, 6, 8, 8, 6, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19] : <type 'list'>
==================================================
int4 = 1                                                                # STEP 47
ACTION: int4 = 1 
int4 = 4 : <type 'int'>
=> int4 = 1 : <type 'int'>
==================================================
int2 = 16                                                               # STEP 48
ACTION: int2 = 16 
int2 = 6 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int3 = 20                                                               # STEP 49
ACTION: int3 = 20 
int3 = 19 : <type 'int'>
=> int3 = 20 : <type 'int'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 50
ACTION: heaps.heappush(heap1,int3) 
int3 = 20 : <type 'int'>
heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19] : <type 'list'>
=> heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19, 20] : <type 'list'>
==================================================
int3 = 18                                                               # STEP 51
ACTION: int3 = 18 
int3 = 20 : <type 'int'>
=> int3 = 18 : <type 'int'>
==================================================
heaps.heappop(heap1)                                                    # STEP 52
ACTION: heaps.heappop(heap1) 
heap1 = [4, 6, 8, 8, 6, 14, 14, 14, 8, 14, 17, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19, 20] : <type 'list'>
=> heap1 = [6, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19] : <type 'list'>
==================================================
heaps.heappush(heap0,int1)                                              # STEP 53
ACTION: heaps.heappush(heap0,int1) 
int1 = 17 : <type 'int'>
heap0 = [4, 4, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
=> heap0 = [4, 4, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 17] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 54
ACTION: heaps.heappop(heap0) 
heap0 = [4, 4, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 17] : <type 'list'>
=> heap0 = [4, 4, 11, 11, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 17, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 55
ACTION: heaps.heappush(heap2,int3) 
int3 = 18 : <type 'int'>
heap2 = [4, 4, 4, 6, 8, 8, 6, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19] : <type 'list'>
=> heap2 = [4, 4, 4, 6, 8, 8, 6, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19, 18] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 56
ACTION: heap0 = heaps.heapnew() 
heap0 = [4, 4, 11, 11, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 17, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 57
ACTION: heaps.heappop(heap2) 
heap2 = [4, 4, 4, 6, 8, 8, 6, 11, 4, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 17, 19, 18] : <type 'list'>
=> heap2 = [4, 6, 4, 4, 8, 8, 6, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 19] : <type 'list'>
==================================================
int3 = 6                                                                # STEP 58
ACTION: int3 = 6 
int3 = 18 : <type 'int'>
=> int3 = 6 : <type 'int'>
==================================================
heaps.heappush(heap0,int2)                                              # STEP 59
ACTION: heaps.heappush(heap0,int2) 
int2 = 16 : <type 'int'>
heap0 = [] : <type 'list'>
=> heap0 = [16] : <type 'list'>
==================================================
int2 = 17                                                               # STEP 60
ACTION: int2 = 17 
int2 = 16 : <type 'int'>
=> int2 = 17 : <type 'int'>
==================================================
heaps.heappush(heap1,int1)                                              # STEP 61
ACTION: heaps.heappush(heap1,int1) 
int1 = 17 : <type 'int'>
heap1 = [6, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19] : <type 'list'>
=> heap1 = [6, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17] : <type 'list'>
==================================================
heaps.heappush(heap1,int0)                                              # STEP 62
ACTION: heaps.heappush(heap1,int0) 
int0 = 10 : <type 'int'>
heap1 = [6, 6, 8, 8, 14, 14, 14, 14, 8, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17] : <type 'list'>
=> heap1 = [6, 6, 8, 8, 10, 14, 14, 14, 8, 17, 14, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17] : <type 'list'>
==================================================
heaps.heappush(heap0,int3)                                              # STEP 63
ACTION: heaps.heappush(heap0,int3) 
int3 = 6 : <type 'int'>
heap0 = [16] : <type 'list'>
=> heap0 = [6, 16] : <type 'list'>
==================================================
int3 = 13                                                               # STEP 64
ACTION: int3 = 13 
int3 = 6 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
heap2 = heaps.heapmerge(heap0,heap2)                                    # STEP 65
ACTION: heap2 = heaps.heapmerge(heap0,heap2) 
heap0 = [6, 16] : <type 'list'>
heap2 = [4, 6, 4, 4, 8, 8, 6, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 19] : <type 'list'>
=> heap2 = [4, 6, 6, 4, 4, 8, 8, 6, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 19] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 66
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [4, 6, 6, 4, 4, 8, 8, 6, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 19] : <type 'list'>
=> heap2 = [6, 4, 6, 6, 4, 8, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap2)                                    # STEP 67
ACTION: heap1 = heaps.heapmerge(heap1,heap2) 
heap1 = [6, 6, 8, 8, 10, 14, 14, 14, 8, 17, 14, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17] : <type 'list'>
heap2 = [6, 4, 6, 6, 4, 8, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap1 = [6, 6, 6, 4, 6, 6, 4, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
int1 = 12                                                               # STEP 68
ACTION: int1 = 12 
int1 = 17 : <type 'int'>
=> int1 = 12 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap1,heap0)                                    # STEP 69
ACTION: heap0 = heaps.heapmerge(heap1,heap0) 
heap1 = [6, 6, 6, 4, 6, 6, 4, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
heap0 = [6, 16] : <type 'list'>
=> heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap0)                                    # STEP 70
ACTION: heap1 = heaps.heapmerge(heap0,heap0) 
heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
heap1 = [6, 6, 6, 4, 6, 6, 4, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap1 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 71
ACTION: heap2 = heaps.heapmerge(heap0,heap1) 
heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
heap1 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
heap2 = [6, 4, 6, 6, 4, 8, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap2 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
int0 = 4                                                                # STEP 72
ACTION: int0 = 4 
int0 = 10 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
heaps.heappush(heap0,int1)                                              # STEP 73
ACTION: heaps.heappush(heap0,int1) 
int1 = 12 : <type 'int'>
heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 17, 12, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 14] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 74
ACTION: heap0 = heaps.heapmerge(heap2,heap2) 
heap2 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 17, 12, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 14] : <type 'list'>
=> heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 75
ACTION: heap2 = heaps.heapmerge(heap2,heap0) 
heap2 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap2 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
==================================================
heaps.heappush(heap1,int4)                                              # STEP 76
ACTION: heaps.heappush(heap1,int4) 
int4 = 1 : <type 'int'>
heap1 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap1 = [1, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 4, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 8, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 17, 14, 14, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 17] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 77
ACTION: heap0 = heaps.heapnew() 
heap0 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 78
ACTION: heap1 = heaps.heapmerge(heap1,heap1) 
heap1 = [1, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 4, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 8, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 17, 14, 14, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 17] : <type 'list'>
=> heap1 = [1, 1, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 4, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 4, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 8, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 8, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 14, 17, 17, 14, 17, 17, 17, 14, 14, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 17] : <type 'list'>
==================================================
int1 = 14                                                               # STEP 79
ACTION: int1 = 14 
int1 = 12 : <type 'int'>
=> int1 = 14 : <type 'int'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 80
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
=> heap2 = [6, 4, 6, 6, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 6, 6, 6, 6, 4, 6, 6, 4, 11, 6, 6, 6, 4, 6, 6, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 18, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 8, 14, 11, 14, 11, 4, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 17, 14, 17, 17, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11, 18, 20, 20, 20, 18, 20, 20, 14, 11, 20, 19, 17, 17, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 14, 20, 20, 20, 18, 20, 20, 20, 20, 20, 18, 20, 20, 19, 20, 20, 20, 20, 18, 20, 20, 14, 11] : <type 'list'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d63a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5170, in act150
    assert (min(self.p_heap[2]) == heaps.heappop(self.p_heap[2]))
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #10 STEP #48 (0:00:30.010259) Sun Apr 30 02:37:56 2017 [ 41 stmts 58 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 20
STOPPING TESTING DUE TO TIMEOUT
15.6186612576 PERCENT COVERED
60.081638813 TOTAL RUNTIME
20 EXECUTED
1901 TOTAL TEST OPERATIONS
29.5337462425 TIME SPENT EXECUTING TEST OPERATIONS
0.0745940208435 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.1025145054 TIME SPENT CHECKING PROPERTIES
58.6362607479 TOTAL TIME SPENT RUNNING SUT
0.0129516124725 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int0 = 11                                                                # STEP 0
int2 = 18                                                                # STEP 1
int1 = 17                                                                # STEP 2
int4 = 4                                                                 # STEP 3
int3 = 20                                                                # STEP 4
heap0 = heaps.heapnew()                                                  # STEP 5
heap2 = heaps.heapnew()                                                  # STEP 6
heaps.heappush(heap0,int0)                                               # STEP 7
int0 = 4                                                                 # STEP 8
heaps.heappush(heap0,int0)                                               # STEP 9
int0 = 14                                                               # STEP 10
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 11
heaps.heappush(heap0,int0)                                              # STEP 12
int0 = 8                                                                # STEP 13
heap1 = heaps.heapmerge(heap2,heap2)                                    # STEP 14
heaps.heappush(heap0,int3)                                              # STEP 15
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 16
int3 = 19                                                               # STEP 17
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 18
heaps.heappop(heap2)                                                    # STEP 19
heap1 = heaps.heapnew()                                                 # STEP 20
heaps.heappop(heap0)                                                    # STEP 21
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 22
heaps.heappop(heap2)                                                    # STEP 23
heaps.heappush(heap1,int0)                                              # STEP 24
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 25
heaps.heappush(heap2,int2)                                              # STEP 26
int0 = 10                                                               # STEP 27
int2 = 17                                                               # STEP 28
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 29
heaps.heappush(heap1,int2)                                              # STEP 30
int2 = 6                                                                # STEP 31
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 32
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 33
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 34
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 35
heap0 = heaps.heapnew()                                                 # STEP 36
heaps.heappush(heap1,int4)                                              # STEP 37
heaps.heappush(heap1,int2)                                              # STEP 38
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 39
heaps.heappush(heap2,int4)                                              # STEP 40
heaps.heappush(heap2,int4)                                              # STEP 41
heaps.heappush(heap1,int2)                                              # STEP 42
heaps.heappush(heap1,int3)                                              # STEP 43
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 44
heaps.heappop(heap2)                                                    # STEP 45
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 46
int4 = 1                                                                # STEP 47
int2 = 16                                                               # STEP 48
int3 = 20                                                               # STEP 49
heaps.heappush(heap1,int3)                                              # STEP 50
int3 = 18                                                               # STEP 51
heaps.heappop(heap1)                                                    # STEP 52
heaps.heappush(heap0,int1)                                              # STEP 53
heaps.heappop(heap0)                                                    # STEP 54
heaps.heappush(heap2,int3)                                              # STEP 55
heap0 = heaps.heapnew()                                                 # STEP 56
heaps.heappop(heap2)                                                    # STEP 57
int3 = 6                                                                # STEP 58
heaps.heappush(heap0,int2)                                              # STEP 59
int2 = 17                                                               # STEP 60
heaps.heappush(heap1,int1)                                              # STEP 61
heaps.heappush(heap1,int0)                                              # STEP 62
heaps.heappush(heap0,int3)                                              # STEP 63
int3 = 13                                                               # STEP 64
heap2 = heaps.heapmerge(heap0,heap2)                                    # STEP 65
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 66
heap1 = heaps.heapmerge(heap1,heap2)                                    # STEP 67
int1 = 12                                                               # STEP 68
heap0 = heaps.heapmerge(heap1,heap0)                                    # STEP 69
heap1 = heaps.heapmerge(heap0,heap0)                                    # STEP 70
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 71
int0 = 4                                                                # STEP 72
heaps.heappush(heap0,int1)                                              # STEP 73
heap0 = heaps.heapmerge(heap2,heap2)                                    # STEP 74
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 75
heaps.heappush(heap1,int4)                                              # STEP 76
heap0 = heaps.heapnew()                                                 # STEP 77
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 78
int1 = 14                                                               # STEP 79
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 80
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d63a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5170, in act150
    assert (min(self.p_heap[2]) == heaps.heappop(self.p_heap[2]))
58 BRANCHES COVERED
41 STATEMENTS COVERED
