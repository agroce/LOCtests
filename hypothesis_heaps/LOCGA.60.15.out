Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.69290.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103bbef38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5100, in act148
    assert (min(self.p_heap[0]) == heaps.heappop(self.p_heap[0]))
Original test has 77 steps

SAVING TEST AS failure.69290.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
int1 = 4                                                                 # STEP 0
ACTION: int1 = 4 
int1 = None : <type 'NoneType'>
=> int1 = 4 : <type 'int'>
==================================================
int3 = 19                                                                # STEP 1
ACTION: int3 = 19 
int3 = None : <type 'NoneType'>
=> int3 = 19 : <type 'int'>
==================================================
int0 = 18                                                                # STEP 2
ACTION: int0 = 18 
int0 = None : <type 'NoneType'>
=> int0 = 18 : <type 'int'>
==================================================
int4 = 15                                                                # STEP 3
ACTION: int4 = 15 
int4 = None : <type 'NoneType'>
=> int4 = 15 : <type 'int'>
==================================================
int2 = 5                                                                 # STEP 4
ACTION: int2 = 5 
int2 = None : <type 'NoneType'>
=> int2 = 5 : <type 'int'>
==================================================
heap0 = heaps.heapnew()                                                  # STEP 5
ACTION: heap0 = heaps.heapnew() 
heap0 = None : <type 'NoneType'>
=> heap0 = [] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                     # STEP 6
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heap0 = heaps.heapmerge(heap0,heap0)                                     # STEP 7
ACTION: heap0 = heaps.heapmerge(heap0,heap0) 
heap0 = [] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                     # STEP 8
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heaps.heappop(heap0)                                                     # STEP 9
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heaps.heappop(heap0)                                                    # STEP 10
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heaps.heappop(heap0)                                                    # STEP 11
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heaps.heappop(heap0)                                                    # STEP 12
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
heaps.heappush(heap0,int4)                                              # STEP 13
ACTION: heaps.heappush(heap0,int4) 
int4 = 15 : <type 'int'>
heap0 = [] : <type 'list'>
=> heap0 = [15] : <type 'list'>
==================================================
int4 = 7                                                                # STEP 14
ACTION: int4 = 7 
int4 = 15 : <type 'int'>
=> int4 = 7 : <type 'int'>
==================================================
heaps.heappush(heap0,int0)                                              # STEP 15
ACTION: heaps.heappush(heap0,int0) 
int0 = 18 : <type 'int'>
heap0 = [15] : <type 'list'>
=> heap0 = [15, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap0,heap0)                                    # STEP 16
ACTION: heap0 = heaps.heapmerge(heap0,heap0) 
heap0 = [15, 18] : <type 'list'>
=> heap0 = [15, 15, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 17
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 18, 18] : <type 'list'>
=> heap0 = [15, 18, 18] : <type 'list'>
==================================================
int0 = 14                                                               # STEP 18
ACTION: int0 = 14 
int0 = 18 : <type 'int'>
=> int0 = 14 : <type 'int'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 19
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 18, 18] : <type 'list'>
=> heap0 = [18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 20
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [18, 18] : <type 'list'>
heap2 = None : <type 'NoneType'>
=> heap2 = [18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap2,int0)                                              # STEP 21
ACTION: heaps.heappush(heap2,int0) 
int0 = 14 : <type 'int'>
heap2 = [18, 18, 18, 18] : <type 'list'>
=> heap2 = [14, 18, 18, 18, 18] : <type 'list'>
==================================================
int0 = 1                                                                # STEP 22
ACTION: int0 = 1 
int0 = 14 : <type 'int'>
=> int0 = 1 : <type 'int'>
==================================================
heaps.heappush(heap2,int0)                                              # STEP 23
ACTION: heaps.heappush(heap2,int0) 
int0 = 1 : <type 'int'>
heap2 = [14, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [1, 18, 14, 18, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap2)                                    # STEP 24
ACTION: heap2 = heaps.heapmerge(heap2,heap2) 
heap2 = [1, 18, 14, 18, 18, 18] : <type 'list'>
=> heap2 = [1, 1, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 25
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [18, 18] : <type 'list'>
=> heap0 = [18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 26
ACTION: heap0 = heaps.heapmerge(heap0,heap2) 
heap0 = [18] : <type 'list'>
heap2 = [1, 1, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18] : <type 'list'>
=> heap0 = [1, 1, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 27
ACTION: heaps.heappush(heap2,int3) 
int3 = 19 : <type 'int'>
heap2 = [1, 1, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18] : <type 'list'>
=> heap2 = [1, 1, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 19] : <type 'list'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 28
ACTION: heaps.heappush(heap2,int2) 
int2 = 5 : <type 'int'>
heap2 = [1, 1, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 19] : <type 'list'>
=> heap2 = [1, 1, 5, 14, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
int2 = 20                                                               # STEP 29
ACTION: int2 = 20 
int2 = 5 : <type 'int'>
=> int2 = 20 : <type 'int'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 30
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [1, 1, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18] : <type 'list'>
=> heap0 = [1, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 31
ACTION: heap1 = heaps.heapmerge(heap0,heap2) 
heap0 = [1, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
heap2 = [1, 1, 5, 14, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
heap1 = None : <type 'NoneType'>
=> heap1 = [1, 1, 1, 5, 14, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
int0 = 4                                                                # STEP 32
ACTION: int0 = 4 
int0 = 1 : <type 'int'>
=> int0 = 4 : <type 'int'>
==================================================
heaps.heappop(heap0)                                                    # STEP 33
ACTION: heaps.heappop(heap0) 
heap0 = [1, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [14, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 34
ACTION: heap0 = heaps.heapmerge(heap2,heap0) 
heap2 = [1, 1, 5, 14, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
heap0 = [14, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [1, 1, 5, 14, 14, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 35
ACTION: heaps.heappop(heap2) 
heap2 = [1, 1, 5, 14, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
=> heap2 = [1, 14, 5, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 36
ACTION: heaps.heappop(heap2) 
heap2 = [1, 14, 5, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
=> heap2 = [5, 14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap1)                                    # STEP 37
ACTION: heap2 = heaps.heapmerge(heap2,heap1) 
heap2 = [5, 14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
heap1 = [1, 1, 1, 5, 14, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
=> heap2 = [1, 1, 1, 5, 5, 14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 19, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 38
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [1, 1, 5, 14, 14, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
=> heap0 = [1, 14, 5, 18, 14, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 39
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [1, 14, 5, 18, 14, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
=> heap0 = [5, 14, 14, 18, 14, 18, 18, 18, 18, 18, 14, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 40
ACTION: heaps.heappush(heap2,int2) 
int2 = 20 : <type 'int'>
heap2 = [1, 1, 1, 5, 5, 14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 19, 18] : <type 'list'>
=> heap2 = [1, 1, 1, 5, 5, 14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 19, 18, 20] : <type 'list'>
==================================================
heaps.heappush(heap0,int3)                                              # STEP 41
ACTION: heaps.heappush(heap0,int3) 
int3 = 19 : <type 'int'>
heap0 = [5, 14, 14, 18, 14, 18, 18, 18, 18, 18, 14, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [5, 14, 14, 18, 14, 18, 18, 18, 18, 18, 14, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
heaps.heappush(heap1,int0)                                              # STEP 42
ACTION: heaps.heappush(heap1,int0) 
int0 = 4 : <type 'int'>
heap1 = [1, 1, 1, 5, 14, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
=> heap1 = [1, 1, 1, 5, 14, 4, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 43
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [1, 1, 1, 5, 14, 4, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18] : <type 'list'>
=> heap1 = [1, 5, 1, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 44
ACTION: heaps.heappop(heap0) 
heap0 = [5, 14, 14, 18, 14, 18, 18, 18, 18, 18, 14, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
=> heap0 = [14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
int3 = 11                                                               # STEP 45
ACTION: int3 = 11 
int3 = 19 : <type 'int'>
=> int3 = 11 : <type 'int'>
==================================================
heaps.heappop(heap2)                                                    # STEP 46
ACTION: heaps.heappop(heap2) 
heap2 = [1, 1, 1, 5, 5, 14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 19, 18, 20] : <type 'list'>
=> heap2 = [1, 5, 1, 14, 5, 14, 14, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 20, 18, 18, 18, 19, 19, 18] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 47
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [1, 5, 1, 14, 5, 14, 14, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 20, 18, 18, 18, 19, 19, 18] : <type 'list'>
=> heap2 = [1, 5, 14, 14, 5, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 20, 18, 18, 18, 19, 19] : <type 'list'>
==================================================
int2 = 14                                                               # STEP 48
ACTION: int2 = 14 
int2 = 20 : <type 'int'>
=> int2 = 14 : <type 'int'>
==================================================
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 49
ACTION: heap2 = heaps.heapmerge(heap2,heap0) 
heap2 = [1, 5, 14, 14, 5, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 20, 18, 18, 18, 19, 19] : <type 'list'>
heap0 = [14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
=> heap2 = [1, 5, 14, 14, 5, 14, 14, 14, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 19, 19] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 50
ACTION: heaps.heappop(heap2) 
heap2 = [1, 5, 14, 14, 5, 14, 14, 14, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 19, 19] : <type 'list'>
=> heap2 = [5, 5, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 19] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 51
ACTION: heaps.heappop(heap0) 
heap0 = [14, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
=> heap0 = [14, 14, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 52
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [5, 5, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 19] : <type 'list'>
=> heap2 = [5, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap0,int1)                                              # STEP 53
ACTION: heaps.heappush(heap0,int1) 
int1 = 4 : <type 'int'>
heap0 = [14, 14, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
=> heap0 = [4, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap2)                                    # STEP 54
ACTION: heap2 = heaps.heapmerge(heap2,heap2) 
heap2 = [5, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18] : <type 'list'>
=> heap2 = [5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 55
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [4, 14, 14, 18, 14, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
=> heap0 = [14, 14, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 56
ACTION: heaps.heappop(heap0) 
heap0 = [14, 14, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
=> heap0 = [14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 57
ACTION: heap1 = heaps.heapmerge(heap0,heap1) 
heap0 = [14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18] : <type 'list'>
heap1 = [1, 5, 1, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18] : <type 'list'>
=> heap1 = [1, 5, 1, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap1)                                    # STEP 58
ACTION: heap0 = heaps.heapmerge(heap2,heap1) 
heap2 = [5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
heap1 = [1, 5, 1, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
heap0 = [14, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [1, 5, 5, 5, 1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 59
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [1, 5, 5, 5, 1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
=> heap0 = [5, 1, 5, 5, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 60
ACTION: heap2 = heaps.heapmerge(heap0,heap1) 
heap0 = [5, 1, 5, 5, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
heap1 = [1, 5, 1, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
heap2 = [5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
=> heap2 = [1, 5, 1, 5, 5, 5, 1, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap1,int2)                                              # STEP 61
ACTION: heaps.heappush(heap1,int2) 
int2 = 14 : <type 'int'>
heap1 = [1, 5, 1, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18] : <type 'list'>
=> heap1 = [1, 5, 1, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 14] : <type 'list'>
==================================================
heaps.heappush(heap0,int1)                                              # STEP 62
ACTION: heaps.heappush(heap0,int1) 
int1 = 4 : <type 'int'>
heap0 = [5, 1, 5, 5, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
=> heap0 = [5, 1, 5, 5, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 63
ACTION: heaps.heappop(heap2) 
heap2 = [1, 5, 1, 5, 5, 5, 1, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
=> heap2 = [1, 5, 1, 5, 5, 5, 14, 14, 14, 14, 14, 14, 4, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18] : <type 'list'>
==================================================
int2 = 16                                                               # STEP 64
ACTION: int2 = 16 
int2 = 14 : <type 'int'>
=> int2 = 16 : <type 'int'>
==================================================
int1 = 16                                                               # STEP 65
ACTION: int1 = 16 
int1 = 4 : <type 'int'>
=> int1 = 16 : <type 'int'>
==================================================
heap1 = heaps.heapmerge(heap1,heap0)                                    # STEP 66
ACTION: heap1 = heaps.heapmerge(heap1,heap0) 
heap1 = [1, 5, 1, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 14] : <type 'list'>
heap0 = [5, 1, 5, 5, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
=> heap1 = [1, 5, 1, 5, 1, 5, 5, 14, 14, 14, 4, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 14, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 67
ACTION: heaps.heappop(heap2) 
heap2 = [1, 5, 1, 5, 5, 5, 14, 14, 14, 14, 14, 14, 4, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18] : <type 'list'>
=> heap2 = [1, 5, 5, 5, 5, 4, 14, 14, 14, 14, 14, 14, 4, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20] : <type 'list'>
==================================================
int0 = 2                                                                # STEP 68
ACTION: int0 = 2 
int0 = 4 : <type 'int'>
=> int0 = 2 : <type 'int'>
==================================================
heaps.heappop(heap0)                                                    # STEP 69
ACTION: heaps.heappop(heap0) 
heap0 = [5, 1, 5, 5, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
=> heap0 = [1, 5, 5, 14, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 70
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [1, 5, 5, 5, 5, 4, 14, 14, 14, 14, 14, 14, 4, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20] : <type 'list'>
=> heap2 = [5, 5, 5, 14, 5, 4, 14, 14, 14, 14, 14, 14, 4, 18, 14, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 20, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 71
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [1, 5, 1, 5, 1, 5, 5, 14, 14, 14, 4, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 14, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18, 18] : <type 'list'>
=> heap1 = [1, 5, 5, 5, 1, 14, 5, 14, 14, 14, 4, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 18, 14, 14, 4, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 14, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 72
ACTION: heaps.heappop(heap0) 
heap0 = [1, 5, 5, 14, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
=> heap0 = [5, 14, 5, 14, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 18, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18] : <type 'list'>
==================================================
heaps.heappush(heap0,int0)                                              # STEP 73
ACTION: heaps.heappush(heap0,int0) 
int0 = 2 : <type 'int'>
heap0 = [5, 14, 5, 14, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 18, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18] : <type 'list'>
=> heap0 = [2, 5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 4, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapnew()                                                 # STEP 74
ACTION: heap2 = heaps.heapnew() 
heap2 = [5, 5, 5, 14, 5, 4, 14, 14, 14, 14, 14, 14, 4, 18, 14, 18, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 14, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 20, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18] : <type 'list'>
=> heap2 = [] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 75
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [2, 5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 14, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 4, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18, 18] : <type 'list'>
=> heap0 = [5, 14, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 4, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 76
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [5, 14, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 18, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 4, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20, 18] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
=> heap0 = [5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 18, 14, 14, 14, 18, 18, 14, 14, 4, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 4, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 14, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 18, 14, 18, 18, 18, 18, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 14, 18, 18, 18, 19, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 19, 18, 18, 18, 18, 18, 19, 18, 20, 18, 18, 18, 20] : <type 'list'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103be3c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5100, in act148
    assert (min(self.p_heap[0]) == heaps.heappop(self.p_heap[0]))
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #10 STEP #70 (0:00:30.034220) Tue May  2 19:06:08 2017 [ 41 stmts 58 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 68
STOPPING TESTING DUE TO TIMEOUT
16.8053244592 PERCENT COVERED
60.065541029 TOTAL RUNTIME
20 EXECUTED
1945 TOTAL TEST OPERATIONS
29.25628829 TIME SPENT EXECUTING TEST OPERATIONS
0.263598442078 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.2770910263 TIME SPENT CHECKING PROPERTIES
58.5333793163 TOTAL TIME SPENT RUNNING SUT
0.0117976665497 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
int1 = 4                                                                 # STEP 0
int3 = 19                                                                # STEP 1
int0 = 18                                                                # STEP 2
int4 = 15                                                                # STEP 3
int2 = 5                                                                 # STEP 4
heap0 = heaps.heapnew()                                                  # STEP 5
heaps.heappop(heap0)                                                     # STEP 6
heap0 = heaps.heapmerge(heap0,heap0)                                     # STEP 7
heaps.heappop(heap0)                                                     # STEP 8
heaps.heappop(heap0)                                                     # STEP 9
heaps.heappop(heap0)                                                    # STEP 10
heaps.heappop(heap0)                                                    # STEP 11
heaps.heappop(heap0)                                                    # STEP 12
heaps.heappush(heap0,int4)                                              # STEP 13
int4 = 7                                                                # STEP 14
heaps.heappush(heap0,int0)                                              # STEP 15
heap0 = heaps.heapmerge(heap0,heap0)                                    # STEP 16
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 17
int0 = 14                                                               # STEP 18
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 19
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 20
heaps.heappush(heap2,int0)                                              # STEP 21
int0 = 1                                                                # STEP 22
heaps.heappush(heap2,int0)                                              # STEP 23
heap2 = heaps.heapmerge(heap2,heap2)                                    # STEP 24
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 25
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 26
heaps.heappush(heap2,int3)                                              # STEP 27
heaps.heappush(heap2,int2)                                              # STEP 28
int2 = 20                                                               # STEP 29
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 30
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 31
int0 = 4                                                                # STEP 32
heaps.heappop(heap0)                                                    # STEP 33
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 34
heaps.heappop(heap2)                                                    # STEP 35
heaps.heappop(heap2)                                                    # STEP 36
heap2 = heaps.heapmerge(heap2,heap1)                                    # STEP 37
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 38
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 39
heaps.heappush(heap2,int2)                                              # STEP 40
heaps.heappush(heap0,int3)                                              # STEP 41
heaps.heappush(heap1,int0)                                              # STEP 42
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 43
heaps.heappop(heap0)                                                    # STEP 44
int3 = 11                                                               # STEP 45
heaps.heappop(heap2)                                                    # STEP 46
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 47
int2 = 14                                                               # STEP 48
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 49
heaps.heappop(heap2)                                                    # STEP 50
heaps.heappop(heap0)                                                    # STEP 51
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 52
heaps.heappush(heap0,int1)                                              # STEP 53
heap2 = heaps.heapmerge(heap2,heap2)                                    # STEP 54
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 55
heaps.heappop(heap0)                                                    # STEP 56
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 57
heap0 = heaps.heapmerge(heap2,heap1)                                    # STEP 58
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 59
heap2 = heaps.heapmerge(heap0,heap1)                                    # STEP 60
heaps.heappush(heap1,int2)                                              # STEP 61
heaps.heappush(heap0,int1)                                              # STEP 62
heaps.heappop(heap2)                                                    # STEP 63
int2 = 16                                                               # STEP 64
int1 = 16                                                               # STEP 65
heap1 = heaps.heapmerge(heap1,heap0)                                    # STEP 66
heaps.heappop(heap2)                                                    # STEP 67
int0 = 2                                                                # STEP 68
heaps.heappop(heap0)                                                    # STEP 69
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 70
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 71
heaps.heappop(heap0)                                                    # STEP 72
heaps.heappush(heap0,int0)                                              # STEP 73
heap2 = heaps.heapnew()                                                 # STEP 74
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 75
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 76
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103be3c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5100, in act148
    assert (min(self.p_heap[0]) == heaps.heappop(self.p_heap[0]))
58 BRANCHES COVERED
41 STATEMENTS COVERED
