Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=True, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.46708.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, noReassign=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, keep=False, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #11 STEP #90 (0:00:30.015636) Mon May  1 03:19:23 2017 [ 41 stmts 58 branches ]
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102727e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5135, in act149
    assert (min(self.p_heap[1]) == heaps.heappop(self.p_heap[1]))
Original test has 99 steps

SAVING TEST AS failure.46708.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
heap2 = heaps.heapnew()                                                  # STEP 0
ACTION: heap2 = heaps.heapnew() 
heap2 = None : <type 'NoneType'>
=> heap2 = [] : <type 'list'>
==================================================
int3 = 18                                                                # STEP 1
ACTION: int3 = 18 
int3 = None : <type 'NoneType'>
=> int3 = 18 : <type 'int'>
==================================================
int2 = 13                                                                # STEP 2
ACTION: int2 = 13 
int2 = None : <type 'NoneType'>
=> int2 = 13 : <type 'int'>
==================================================
heaps.heappush(heap2,int3)                                               # STEP 3
ACTION: heaps.heappush(heap2,int3) 
int3 = 18 : <type 'int'>
heap2 = [] : <type 'list'>
=> heap2 = [18] : <type 'list'>
==================================================
int4 = 18                                                                # STEP 4
ACTION: int4 = 18 
int4 = None : <type 'NoneType'>
=> int4 = 18 : <type 'int'>
==================================================
int0 = 15                                                                # STEP 5
ACTION: int0 = 15 
int0 = None : <type 'NoneType'>
=> int0 = 15 : <type 'int'>
==================================================
heaps.heappush(heap2,int0)                                               # STEP 6
ACTION: heaps.heappush(heap2,int0) 
int0 = 15 : <type 'int'>
heap2 = [18] : <type 'list'>
=> heap2 = [15, 18] : <type 'list'>
==================================================
int3 = 7                                                                 # STEP 7
ACTION: int3 = 7 
int3 = 18 : <type 'int'>
=> int3 = 7 : <type 'int'>
==================================================
heaps.heappush(heap2,int0)                                               # STEP 8
ACTION: heaps.heappush(heap2,int0) 
int0 = 15 : <type 'int'>
heap2 = [15, 18] : <type 'list'>
=> heap2 = [15, 18, 15] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap2)                                     # STEP 9
ACTION: heap0 = heaps.heapmerge(heap2,heap2) 
heap2 = [15, 18, 15] : <type 'list'>
heap0 = None : <type 'NoneType'>
=> heap0 = [15, 15, 18, 15, 18, 15] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 10
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [15, 15, 18, 15, 18, 15] : <type 'list'>
heap2 = [15, 18, 15] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 11
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 18, 15, 18, 15] : <type 'list'>
=> heap0 = [15, 15, 18, 15, 18] : <type 'list'>
==================================================
int1 = 13                                                               # STEP 12
ACTION: int1 = 13 
int1 = None : <type 'NoneType'>
=> int1 = 13 : <type 'int'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 13
ACTION: heaps.heappush(heap2,int3) 
int3 = 7 : <type 'int'>
heap2 = [15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15] : <type 'list'>
=> heap2 = [7, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 15] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 14
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [7, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 15] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 15
ACTION: heaps.heappop(heap2) 
heap2 = [15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 16
ACTION: heaps.heappop(heap2) 
heap2 = [15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18, 15] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 17
ACTION: heap1 = heaps.heapmerge(heap0,heap2) 
heap0 = [15, 15, 18, 15, 18] : <type 'list'>
heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18, 15] : <type 'list'>
heap1 = None : <type 'NoneType'>
=> heap1 = [15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 15, 18, 18, 18, 15] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 18
ACTION: heaps.heappop(heap0) 
heap0 = [15, 15, 18, 15, 18] : <type 'list'>
=> heap0 = [15, 15, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 19
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 18, 18] : <type 'list'>
=> heap0 = [15, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 20
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 15, 18, 18, 18, 15] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 15, 18, 18, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap2,heap1)                                    # STEP 21
ACTION: heap1 = heaps.heapmerge(heap2,heap1) 
heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18, 15] : <type 'list'>
heap1 = [15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 15, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 15, 18, 15, 18, 18, 15, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 22
ACTION: heaps.heappop(heap2) 
heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18, 15] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 23
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 18, 18] : <type 'list'>
=> heap0 = [18, 18] : <type 'list'>
==================================================
int3 = 2                                                                # STEP 24
ACTION: int3 = 2 
int3 = 7 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
heaps.heappop(heap1)                                                    # STEP 25
ACTION: heaps.heappop(heap1) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 15, 18, 15, 18, 18, 15, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap1)                                    # STEP 26
ACTION: heap0 = heaps.heapmerge(heap2,heap1) 
heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18] : <type 'list'>
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
heap0 = [18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 27
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 28
ACTION: heaps.heappop(heap0) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15] : <type 'list'>
==================================================
int0 = 7                                                                # STEP 29
ACTION: int0 = 7 
int0 = 15 : <type 'int'>
=> int0 = 7 : <type 'int'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 30
ACTION: heaps.heappush(heap1,int3) 
int3 = 2 : <type 'int'>
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
=> heap1 = [2, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18, 15] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 31
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 32
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [2, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18, 15] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 33
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 34
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 35
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [15, 15, 15, 15, 18, 15, 18, 18, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 18, 18, 15, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 36
ACTION: heaps.heappop(heap0) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15] : <type 'list'>
==================================================
int3 = 13                                                               # STEP 37
ACTION: int3 = 13 
int3 = 2 : <type 'int'>
=> int3 = 13 : <type 'int'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 38
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 15] : <type 'list'>
=> heap0 = [15, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 39
ACTION: heaps.heappop(heap0) 
heap0 = [15, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 40
ACTION: heap0 = heaps.heapnew() 
heap0 = [15, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 41
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap1,heap0)                                    # STEP 42
ACTION: heap2 = heaps.heapmerge(heap1,heap0) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
heap0 = [] : <type 'list'>
heap2 = [15, 15, 15, 18, 18, 15, 18, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 43
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 44
ACTION: heap1 = heaps.heapmerge(heap0,heap1) 
heap0 = [] : <type 'list'>
heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 45
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 46
ACTION: heaps.heappop(heap1) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap0,int4)                                              # STEP 47
ACTION: heaps.heappush(heap0,int4) 
int4 = 18 : <type 'int'>
heap0 = [] : <type 'list'>
=> heap0 = [18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 48
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [18] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
int4 = 3                                                                # STEP 49
ACTION: int4 = 3 
int4 = 18 : <type 'int'>
=> int4 = 3 : <type 'int'>
==================================================
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 50
ACTION: heap0 = heaps.heapmerge(heap2,heap0) 
heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
heap0 = [] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 51
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 52
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap2)                                    # STEP 53
ACTION: heap1 = heaps.heapmerge(heap1,heap2) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 54
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap0,int1)                                              # STEP 55
ACTION: heaps.heappush(heap0,int1) 
int1 = 13 : <type 'int'>
heap0 = [15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [13, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 56
ACTION: heaps.heappop(heap1) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 57
ACTION: heap2 = heaps.heapmerge(heap0,heap0) 
heap0 = [13, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
==================================================
int1 = 19                                                               # STEP 58
ACTION: int1 = 19 
int1 = 13 : <type 'int'>
=> int1 = 19 : <type 'int'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 59
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
=> heap2 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 60
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 61
ACTION: heap0 = heaps.heapmerge(heap0,heap2) 
heap0 = [13, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15] : <type 'list'>
heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 62
ACTION: heaps.heappop(heap0) 
heap0 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 63
ACTION: assert (min(heap0) == heaps.heappop(heap0)) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 64
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 65
ACTION: heaps.heappop(heap2) 
heap2 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapnew()                                                 # STEP 66
ACTION: heap2 = heaps.heapnew() 
heap2 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [] : <type 'list'>
==================================================
heaps.heappush(heap1,int3)                                              # STEP 67
ACTION: heaps.heappush(heap1,int3) 
int3 = 13 : <type 'int'>
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappush(heap2,int0)                                              # STEP 68
ACTION: heaps.heappush(heap2,int0) 
int0 = 7 : <type 'int'>
heap2 = [] : <type 'list'>
=> heap2 = [7] : <type 'list'>
==================================================
int3 = 2                                                                # STEP 69
ACTION: int3 = 2 
int3 = 13 : <type 'int'>
=> int3 = 2 : <type 'int'>
==================================================
heaps.heappop(heap0)                                                    # STEP 70
ACTION: heaps.heappop(heap0) 
heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18] : <type 'list'>
==================================================
int0 = 10                                                               # STEP 71
ACTION: int0 = 10 
int0 = 7 : <type 'int'>
=> int0 = 10 : <type 'int'>
==================================================
heaps.heappush(heap2,int1)                                              # STEP 72
ACTION: heaps.heappush(heap2,int1) 
int1 = 19 : <type 'int'>
heap2 = [7] : <type 'list'>
=> heap2 = [7, 19] : <type 'list'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 73
ACTION: heaps.heappush(heap2,int2) 
int2 = 13 : <type 'int'>
heap2 = [7, 19] : <type 'list'>
=> heap2 = [7, 19, 13] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 74
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 75
ACTION: heap0 = heaps.heapmerge(heap2,heap0) 
heap2 = [7, 19, 13] : <type 'list'>
heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18] : <type 'list'>
=> heap0 = [7, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 13] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 76
ACTION: heaps.heappop(heap0) 
heap0 = [7, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 13] : <type 'list'>
=> heap0 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19] : <type 'list'>
==================================================
heaps.heappush(heap0,int4)                                              # STEP 77
ACTION: heaps.heappush(heap0,int4) 
int4 = 3 : <type 'int'>
heap0 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19] : <type 'list'>
=> heap0 = [3, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
heaps.heappush(heap0,int0)                                              # STEP 78
ACTION: heaps.heappush(heap0,int0) 
int0 = 10 : <type 'int'>
heap0 = [3, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 18] : <type 'list'>
=> heap0 = [3, 15, 10, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 18, 15] : <type 'list'>
==================================================
int4 = 18                                                               # STEP 79
ACTION: int4 = 18 
int4 = 3 : <type 'int'>
=> int4 = 18 : <type 'int'>
==================================================
heaps.heappop(heap0)                                                    # STEP 80
ACTION: heaps.heappop(heap0) 
heap0 = [3, 15, 10, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 18, 15] : <type 'list'>
=> heap0 = [10, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 18] : <type 'list'>
==================================================
heaps.heappush(heap2,int2)                                              # STEP 81
ACTION: heaps.heappush(heap2,int2) 
int2 = 13 : <type 'int'>
heap2 = [7, 19, 13] : <type 'list'>
=> heap2 = [7, 13, 13, 19] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap2,heap1)                                    # STEP 82
ACTION: heap1 = heaps.heapmerge(heap2,heap1) 
heap2 = [7, 13, 13, 19] : <type 'list'>
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [7, 13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
==================================================
heap0 = heaps.heapnew()                                                 # STEP 83
ACTION: heap0 = heaps.heapnew() 
heap0 = [10, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 18, 15, 18, 15, 18, 18, 18, 19, 18] : <type 'list'>
=> heap0 = [] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 84
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [7, 13, 13, 19] : <type 'list'>
=> heap2 = [13, 19, 13] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 85
ACTION: heaps.heappop(heap1) 
heap1 = [7, 13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19] : <type 'list'>
=> heap1 = [13, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
int1 = 9                                                                # STEP 86
ACTION: int1 = 9 
int1 = 19 : <type 'int'>
=> int1 = 9 : <type 'int'>
==================================================
heaps.heappush(heap2,int3)                                              # STEP 87
ACTION: heaps.heappush(heap2,int3) 
int3 = 2 : <type 'int'>
heap2 = [13, 19, 13] : <type 'list'>
=> heap2 = [2, 13, 13, 19] : <type 'list'>
==================================================
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 88
ACTION: assert (min(heap2) == heaps.heappop(heap2)) 
heap2 = [2, 13, 13, 19] : <type 'list'>
=> heap2 = [13, 19, 13] : <type 'list'>
==================================================
heaps.heappop(heap2)                                                    # STEP 89
ACTION: heaps.heappop(heap2) 
heap2 = [13, 19, 13] : <type 'list'>
=> heap2 = [13, 19] : <type 'list'>
==================================================
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 90
ACTION: heap1 = heaps.heapmerge(heap1,heap1) 
heap1 = [13, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [13, 13, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap0)                                                    # STEP 91
ACTION: heaps.heappop(heap0) 
heap0 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.ValueError'> Empty heap
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 92
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [13, 13, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 93
ACTION: heaps.heappop(heap1) 
heap1 = [13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 94
ACTION: heaps.heappop(heap1) 
heap1 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18] : <type 'list'>
==================================================
heap0 = heaps.heapmerge(heap1,heap1)                                    # STEP 95
ACTION: heap0 = heaps.heapmerge(heap1,heap1) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18] : <type 'list'>
heap0 = [] : <type 'list'>
=> heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18] : <type 'list'>
==================================================
heaps.heappop(heap1)                                                    # STEP 96
ACTION: heaps.heappop(heap1) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18] : <type 'list'>
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18] : <type 'list'>
==================================================
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 97
ACTION: heap2 = heaps.heapmerge(heap2,heap0) 
heap2 = [13, 19] : <type 'list'>
heap0 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18] : <type 'list'>
=> heap2 = [13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18] : <type 'list'>
==================================================
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 98
ACTION: assert (min(heap1) == heaps.heappop(heap1)) 
heap1 = [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
=> heap1 = [15, 15, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 15, 15, 18, 18, 13, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 18, 18, 15, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 15, 18, 18] : <type 'list'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102715c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5135, in act149
    assert (min(self.p_heap[1]) == heaps.heappop(self.p_heap[1]))
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 14
STOPPING TESTING DUE TO TIMEOUT
16.1524500907 PERCENT COVERED
60.0498330593 TOTAL RUNTIME
22 EXECUTED
2113 TOTAL TEST OPERATIONS
29.2023675442 TIME SPENT EXECUTING TEST OPERATIONS
0.3042345047 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
29.0422430038 TIME SPENT CHECKING PROPERTIES
58.244610548 TOTAL TIME SPENT RUNNING SUT
0.0106580257416 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
heap2 = heaps.heapnew()                                                  # STEP 0
int3 = 18                                                                # STEP 1
int2 = 13                                                                # STEP 2
heaps.heappush(heap2,int3)                                               # STEP 3
int4 = 18                                                                # STEP 4
int0 = 15                                                                # STEP 5
heaps.heappush(heap2,int0)                                               # STEP 6
int3 = 7                                                                 # STEP 7
heaps.heappush(heap2,int0)                                               # STEP 8
heap0 = heaps.heapmerge(heap2,heap2)                                     # STEP 9
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 10
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 11
int1 = 13                                                               # STEP 12
heaps.heappush(heap2,int3)                                              # STEP 13
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 14
heaps.heappop(heap2)                                                    # STEP 15
heaps.heappop(heap2)                                                    # STEP 16
heap1 = heaps.heapmerge(heap0,heap2)                                    # STEP 17
heaps.heappop(heap0)                                                    # STEP 18
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 19
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 20
heap1 = heaps.heapmerge(heap2,heap1)                                    # STEP 21
heaps.heappop(heap2)                                                    # STEP 22
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 23
int3 = 2                                                                # STEP 24
heaps.heappop(heap1)                                                    # STEP 25
heap0 = heaps.heapmerge(heap2,heap1)                                    # STEP 26
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 27
heaps.heappop(heap0)                                                    # STEP 28
int0 = 7                                                                # STEP 29
heaps.heappush(heap1,int3)                                              # STEP 30
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 31
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 32
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 33
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 34
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 35
heaps.heappop(heap0)                                                    # STEP 36
int3 = 13                                                               # STEP 37
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 38
heaps.heappop(heap0)                                                    # STEP 39
heap0 = heaps.heapnew()                                                 # STEP 40
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 41
heap2 = heaps.heapmerge(heap1,heap0)                                    # STEP 42
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 43
heap1 = heaps.heapmerge(heap0,heap1)                                    # STEP 44
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 45
heaps.heappop(heap1)                                                    # STEP 46
heaps.heappush(heap0,int4)                                              # STEP 47
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 48
int4 = 3                                                                # STEP 49
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 50
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 51
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 52
heap1 = heaps.heapmerge(heap1,heap2)                                    # STEP 53
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 54
heaps.heappush(heap0,int1)                                              # STEP 55
heaps.heappop(heap1)                                                    # STEP 56
heap2 = heaps.heapmerge(heap0,heap0)                                    # STEP 57
int1 = 19                                                               # STEP 58
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 59
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 60
heap0 = heaps.heapmerge(heap0,heap2)                                    # STEP 61
heaps.heappop(heap0)                                                    # STEP 62
assert (min(heap0) == heaps.heappop(heap0))                             # STEP 63
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 64
heaps.heappop(heap2)                                                    # STEP 65
heap2 = heaps.heapnew()                                                 # STEP 66
heaps.heappush(heap1,int3)                                              # STEP 67
heaps.heappush(heap2,int0)                                              # STEP 68
int3 = 2                                                                # STEP 69
heaps.heappop(heap0)                                                    # STEP 70
int0 = 10                                                               # STEP 71
heaps.heappush(heap2,int1)                                              # STEP 72
heaps.heappush(heap2,int2)                                              # STEP 73
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 74
heap0 = heaps.heapmerge(heap2,heap0)                                    # STEP 75
heaps.heappop(heap0)                                                    # STEP 76
heaps.heappush(heap0,int4)                                              # STEP 77
heaps.heappush(heap0,int0)                                              # STEP 78
int4 = 18                                                               # STEP 79
heaps.heappop(heap0)                                                    # STEP 80
heaps.heappush(heap2,int2)                                              # STEP 81
heap1 = heaps.heapmerge(heap2,heap1)                                    # STEP 82
heap0 = heaps.heapnew()                                                 # STEP 83
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 84
heaps.heappop(heap1)                                                    # STEP 85
int1 = 9                                                                # STEP 86
heaps.heappush(heap2,int3)                                              # STEP 87
assert (min(heap2) == heaps.heappop(heap2))                             # STEP 88
heaps.heappop(heap2)                                                    # STEP 89
heap1 = heaps.heapmerge(heap1,heap1)                                    # STEP 90
heaps.heappop(heap0)                                                    # STEP 91
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 92
heaps.heappop(heap1)                                                    # STEP 93
heaps.heappop(heap1)                                                    # STEP 94
heap0 = heaps.heapmerge(heap1,heap1)                                    # STEP 95
heaps.heappop(heap1)                                                    # STEP 96
heap2 = heaps.heapmerge(heap2,heap0)                                    # STEP 97
assert (min(heap1) == heaps.heappop(heap1))                             # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102715c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 7453, in safely
    act[2]()
  File "/Users/alex/tstl/examples/hypothesis_heaps/sut.py", line 5135, in act149
    assert (min(self.p_heap[1]) == heaps.heappop(self.p_heap[1]))
58 BRANCHES COVERED
41 STATEMENTS COVERED
