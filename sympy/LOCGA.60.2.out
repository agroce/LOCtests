Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, internal=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, profile=False, LOCBaseline=0.2, full=True, multiple=True, timedProgress=30, silentFail=False, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.72888.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<class 'sympy.polys.polyerrors.NotAlgebraic'>, NotAlgebraic("exp(2) doesn't seem to be an algebraic element",), <traceback object at 0x1076925a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/sympy/sut.py", line 239573, in safely
    act[2]()
  File "/Users/alex/tstl/examples/sympy/sut.py", line 194150, in act3546
    self.p_expr[1] = sympy.apart(self.p_expr[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/utilities/decorator.py", line 37, in threaded_func
    return func(expr, *args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/partfrac.py", line 83, in apart
    (P, Q), opt = parallel_poly_from_expr((P, Q), x, **options)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/polytools.py", line 4168, in parallel_poly_from_expr
    return _parallel_poly_from_expr(exprs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/polytools.py", line 4246, in _parallel_poly_from_expr
    opt.domain, coeffs_list = construct_domain(coeffs_list, opt=opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 238, in construct_domain
    result = _construct_simple(coeffs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 45, in _construct_simple
    domain, result = _construct_algebraic(coeffs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 93, in _construct_algebraic
    g, span, H = primitive_element(exts, ex=True, polys=True)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 857, in primitive_element
    f = minpoly(ext, y)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 657, in minimal_polynomial
    result = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 568, in _minpoly_compose
    res = _minpoly_pow(ex.base, ex.exp, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 349, in _minpoly_pow
    mp = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 546, in _minpoly_compose
    res = _minpoly_add(x, dom, *ex.args)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 374, in _minpoly_add
    mp = _minpoly_op_algebraic_element(Add, a[0], a[1], x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 256, in _minpoly_op_algebraic_element
    mp2 = _minpoly_compose(ex2, y, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 557, in _minpoly_compose
    mp1 = minimal_polynomial(ex1, x)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 657, in minimal_polynomial
    result = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 574, in _minpoly_compose
    res = _minpoly_exp(ex, x)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 498, in _minpoly_exp
    raise NotAlgebraic("%s doesn't seem to be an algebraic element" % ex)
Original test has 14 steps

SAVING TEST AS failure.72888.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
expr3 = sympy.E                                                          # STEP 0
ACTION: expr3 = sympy.E 
expr3 = None : <type 'NoneType'>
=> expr3 = E : <class 'sympy.core.numbers.Exp1'>
==================================================
expr1 = sympy.asin(expr3)                                                # STEP 1
ACTION: expr1 = sympy.asin(expr3) 
expr3 = E : <class 'sympy.core.numbers.Exp1'>
expr1 = None : <type 'NoneType'>
=> expr1 = asin(E) : asin
==================================================
expr3 = sympy.trigsimp(expr1)                                            # STEP 2
ACTION: expr3 = sympy.trigsimp(expr1) 
expr1 = asin(E) : asin
expr3 = E : <class 'sympy.core.numbers.Exp1'>
=> expr3 = asin(E) : asin
==================================================
expr1 = sympy.I                                                          # STEP 3
ACTION: expr1 = sympy.I 
expr1 = asin(E) : asin
=> expr1 = I : <class 'sympy.core.numbers.ImaginaryUnit'>
==================================================
expr2 = sympy.tan(expr3)                                                 # STEP 4
ACTION: expr2 = sympy.tan(expr3) 
expr3 = asin(E) : asin
expr2 = None : <type 'NoneType'>
=> expr2 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
==================================================
expr0 = sympy.tan(expr2)                                                 # STEP 5
ACTION: expr0 = sympy.tan(expr2) 
expr2 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
expr0 = None : <type 'NoneType'>
=> expr0 = tan(E/sqrt(-exp(2) + 1)) : tan
==================================================
expr0.evalf()                                                            # STEP 6
ACTION: expr0.evalf() 
expr0 = tan(E/sqrt(-exp(2) + 1)) : tan
==================================================
expr0 = sympy.trigsimp(expr2)                                            # STEP 7
ACTION: expr0 = sympy.trigsimp(expr2) 
expr2 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
expr0 = tan(E/sqrt(-exp(2) + 1)) : tan
=> expr0 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
==================================================
expr2 = sympy.expand(expr2)                                              # STEP 8
ACTION: expr2 = sympy.expand(expr2) 
expr2 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
==================================================
expr3 = sympy.tan(expr3)                                                 # STEP 9
ACTION: expr3 = sympy.tan(expr3) 
expr3 = asin(E) : asin
=> expr3 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
==================================================
expr3.evalf()                                                           # STEP 10
ACTION: expr3.evalf() 
expr3 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
==================================================
expr3 = expr0 / expr0                                                   # STEP 11
ACTION: expr3 = expr0 / expr0 
expr0 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
expr3 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
=> expr3 = 1 : <class 'sympy.core.numbers.One'>
==================================================
expr0 = sympy.factor(expr1)                                             # STEP 12
ACTION: expr0 = sympy.factor(expr1) 
expr1 = I : <class 'sympy.core.numbers.ImaginaryUnit'>
expr0 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
=> expr0 = I : <class 'sympy.core.numbers.ImaginaryUnit'>
==================================================
expr1 = sympy.apart(expr2)                                              # STEP 13
ACTION: expr1 = sympy.apart(expr2) 
expr2 = E/sqrt(-exp(2) + 1) : <class 'sympy.core.mul.Mul'>
expr1 = I : <class 'sympy.core.numbers.ImaginaryUnit'>
RAISED EXCEPTION: <class 'sympy.polys.polyerrors.NotAlgebraic'> exp(2) doesn't seem to be an algebraic element
ERROR: (<class 'sympy.polys.polyerrors.NotAlgebraic'>, NotAlgebraic("exp(2) doesn't seem to be an algebraic element",), <traceback object at 0x10a5e07e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/sympy/sut.py", line 239573, in safely
    act[2]()
  File "/Users/alex/tstl/examples/sympy/sut.py", line 194150, in act3546
    self.p_expr[1] = sympy.apart(self.p_expr[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/utilities/decorator.py", line 37, in threaded_func
    return func(expr, *args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/partfrac.py", line 83, in apart
    (P, Q), opt = parallel_poly_from_expr((P, Q), x, **options)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/polytools.py", line 4168, in parallel_poly_from_expr
    return _parallel_poly_from_expr(exprs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/polytools.py", line 4246, in _parallel_poly_from_expr
    opt.domain, coeffs_list = construct_domain(coeffs_list, opt=opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 238, in construct_domain
    result = _construct_simple(coeffs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 45, in _construct_simple
    domain, result = _construct_algebraic(coeffs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 93, in _construct_algebraic
    g, span, H = primitive_element(exts, ex=True, polys=True)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 857, in primitive_element
    f = minpoly(ext, y)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 657, in minimal_polynomial
    result = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 568, in _minpoly_compose
    res = _minpoly_pow(ex.base, ex.exp, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 349, in _minpoly_pow
    mp = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 546, in _minpoly_compose
    res = _minpoly_add(x, dom, *ex.args)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 374, in _minpoly_add
    mp = _minpoly_op_algebraic_element(Add, a[0], a[1], x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 256, in _minpoly_op_algebraic_element
    mp2 = _minpoly_compose(ex2, y, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 557, in _minpoly_compose
    mp1 = minimal_polynomial(ex1, x)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 657, in minimal_polynomial
    result = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 574, in _minpoly_compose
    res = _minpoly_exp(ex, x)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 498, in _minpoly_exp
    raise NotAlgebraic("%s doesn't seem to be an algebraic element" % ex)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #2 STEP #45 (0:00:30.366037) Wed May  3 01:44:06 2017 [ 6048 stmts 8105 branches ]
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 64
STOPPING TESTING DUE TO TIMEOUT
4.2341379876 PERCENT COVERED
85.2752399445 TOTAL RUNTIME
2 EXECUTED
78 TOTAL TEST OPERATIONS
2.73615813255 TIME SPENT EXECUTING TEST OPERATIONS
0.589592933655 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
56.2654988766 TIME SPENT CHECKING PROPERTIES
59.0016570091 TOTAL TIME SPENT RUNNING SUT
0.00559115409851 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
expr3 = sympy.E                                                          # STEP 0
expr1 = sympy.asin(expr3)                                                # STEP 1
expr3 = sympy.trigsimp(expr1)                                            # STEP 2
expr1 = sympy.I                                                          # STEP 3
expr2 = sympy.tan(expr3)                                                 # STEP 4
expr0 = sympy.tan(expr2)                                                 # STEP 5
expr0.evalf()                                                            # STEP 6
expr0 = sympy.trigsimp(expr2)                                            # STEP 7
expr2 = sympy.expand(expr2)                                              # STEP 8
expr3 = sympy.tan(expr3)                                                 # STEP 9
expr3.evalf()                                                           # STEP 10
expr3 = expr0 / expr0                                                   # STEP 11
expr0 = sympy.factor(expr1)                                             # STEP 12
expr1 = sympy.apart(expr2)                                              # STEP 13
ERROR: (<class 'sympy.polys.polyerrors.NotAlgebraic'>, NotAlgebraic("exp(2) doesn't seem to be an algebraic element",), <traceback object at 0x10a5e07e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/sympy/sut.py", line 239573, in safely
    act[2]()
  File "/Users/alex/tstl/examples/sympy/sut.py", line 194150, in act3546
    self.p_expr[1] = sympy.apart(self.p_expr[2])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/utilities/decorator.py", line 37, in threaded_func
    return func(expr, *args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/partfrac.py", line 83, in apart
    (P, Q), opt = parallel_poly_from_expr((P, Q), x, **options)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/polytools.py", line 4168, in parallel_poly_from_expr
    return _parallel_poly_from_expr(exprs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/polytools.py", line 4246, in _parallel_poly_from_expr
    opt.domain, coeffs_list = construct_domain(coeffs_list, opt=opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 238, in construct_domain
    result = _construct_simple(coeffs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 45, in _construct_simple
    domain, result = _construct_algebraic(coeffs, opt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/constructor.py", line 93, in _construct_algebraic
    g, span, H = primitive_element(exts, ex=True, polys=True)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 857, in primitive_element
    f = minpoly(ext, y)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 657, in minimal_polynomial
    result = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 568, in _minpoly_compose
    res = _minpoly_pow(ex.base, ex.exp, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 349, in _minpoly_pow
    mp = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 546, in _minpoly_compose
    res = _minpoly_add(x, dom, *ex.args)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 374, in _minpoly_add
    mp = _minpoly_op_algebraic_element(Add, a[0], a[1], x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 256, in _minpoly_op_algebraic_element
    mp2 = _minpoly_compose(ex2, y, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 557, in _minpoly_compose
    mp1 = minimal_polynomial(ex1, x)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 657, in minimal_polynomial
    result = _minpoly_compose(ex, x, dom)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 574, in _minpoly_compose
    res = _minpoly_exp(ex, x)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sympy/polys/numberfields.py", line 498, in _minpoly_exp
    raise NotAlgebraic("%s doesn't seem to be an algebraic element" % ex)
9515 BRANCHES COVERED
7105 STATEMENTS COVERED
