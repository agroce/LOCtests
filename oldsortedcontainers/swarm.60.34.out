Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.10164.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x11f635b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 703164, in act11970
    self.p_list[4].extend(self.p_list[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
Original test has 88 steps

SAVING TEST AS failure.10164.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
sval0 = 'N'                                                              # STEP 0
ACTION: sval0 = 'N' 
sval0 = None : <type 'NoneType'>
=> sval0 = 'N' : <type 'str'>
==================================================
ival6 = 17                                                               # STEP 1
ACTION: ival6 = 17 
ival6 = None : <type 'NoneType'>
=> ival6 = 17 : <type 'int'>
==================================================
ival5 = 3                                                                # STEP 2
ACTION: ival5 = 3 
ival5 = None : <type 'NoneType'>
=> ival5 = 3 : <type 'int'>
==================================================
ival3 = 13                                                               # STEP 3
ACTION: ival3 = 13 
ival3 = None : <type 'NoneType'>
=> ival3 = 13 : <type 'int'>
==================================================
sval7 = 'n'                                                              # STEP 4
ACTION: sval7 = 'n' 
sval7 = None : <type 'NoneType'>
=> sval7 = 'n' : <type 'str'>
==================================================
ival1 = 6                                                                # STEP 5
ACTION: ival1 = 6 
ival1 = None : <type 'NoneType'>
=> ival1 = 6 : <type 'int'>
==================================================
sval9 = 't'                                                              # STEP 6
ACTION: sval9 = 't' 
sval9 = None : <type 'NoneType'>
=> sval9 = 't' : <type 'str'>
==================================================
sval6 = 'z'                                                              # STEP 7
ACTION: sval6 = 'z' 
sval6 = None : <type 'NoneType'>
=> sval6 = 'z' : <type 'str'>
==================================================
sval4 = 'e'                                                              # STEP 8
ACTION: sval4 = 'e' 
sval4 = None : <type 'NoneType'>
=> sval4 = 'e' : <type 'str'>
==================================================
ival4 = 14                                                               # STEP 9
ACTION: ival4 = 14 
ival4 = None : <type 'NoneType'>
=> ival4 = 14 : <type 'int'>
==================================================
val6 = sval0                                                            # STEP 10
ACTION: val6 = sval0 
sval0 = 'N' : <type 'str'>
val6 = None : <type 'NoneType'>
=> val6 = 'N' : <type 'str'>
==================================================
val7 = sval6                                                            # STEP 11
ACTION: val7 = sval6 
sval6 = 'z' : <type 'str'>
val7 = None : <type 'NoneType'>
=> val7 = 'z' : <type 'str'>
==================================================
ival8 = ival1 - ival1                                                   # STEP 12
ACTION: ival8 = ival1 - ival1 
ival1 = 6 : <type 'int'>
ival8 = None : <type 'NoneType'>
=> ival8 = 0 : <type 'int'>
==================================================
sval6 = 'H'                                                             # STEP 13
ACTION: sval6 = 'H' 
sval6 = 'z' : <type 'str'>
=> sval6 = 'H' : <type 'str'>
==================================================
sval2 = 'G'                                                             # STEP 14
ACTION: sval2 = 'G' 
sval2 = None : <type 'NoneType'>
=> sval2 = 'G' : <type 'str'>
==================================================
sval8 = sval4 + sval7                                                   # STEP 15
ACTION: sval8 = sval4 + sval7 
sval4 = 'e' : <type 'str'>
sval7 = 'n' : <type 'str'>
sval8 = None : <type 'NoneType'>
=> sval8 = 'en' : <type 'str'>
==================================================
sval5 = sval9 + sval9                                                   # STEP 16
ACTION: sval5 = sval9 + sval9 
sval9 = 't' : <type 'str'>
sval5 = None : <type 'NoneType'>
=> sval5 = 'tt' : <type 'str'>
==================================================
sval4 = sval5 + sval5                                                   # STEP 17
ACTION: sval4 = sval5 + sval5 
sval5 = 'tt' : <type 'str'>
sval4 = 'e' : <type 'str'>
=> sval4 = 'tttt' : <type 'str'>
==================================================
sval1 = sval9 + sval2                                                   # STEP 18
ACTION: sval1 = sval9 + sval2 
sval9 = 't' : <type 'str'>
sval2 = 'G' : <type 'str'>
sval1 = None : <type 'NoneType'>
=> sval1 = 'tG' : <type 'str'>
==================================================
sval3 = sval1 + sval7                                                   # STEP 19
ACTION: sval3 = sval1 + sval7 
sval1 = 'tG' : <type 'str'>
sval7 = 'n' : <type 'str'>
sval3 = None : <type 'NoneType'>
=> sval3 = 'tGn' : <type 'str'>
==================================================
sval5 = sval0 + sval2                                                   # STEP 20
ACTION: sval5 = sval0 + sval2 
sval0 = 'N' : <type 'str'>
sval2 = 'G' : <type 'str'>
sval5 = 'tt' : <type 'str'>
=> sval5 = 'NG' : <type 'str'>
==================================================
sval2 = sval9 + sval2                                                   # STEP 21
ACTION: sval2 = sval9 + sval2 
sval9 = 't' : <type 'str'>
sval2 = 'G' : <type 'str'>
=> sval2 = 'tG' : <type 'str'>
==================================================
sval9 = sval4 + sval4                                                   # STEP 22
ACTION: sval9 = sval4 + sval4 
sval4 = 'tttt' : <type 'str'>
sval9 = 't' : <type 'str'>
=> sval9 = 'tttttttt' : <type 'str'>
==================================================
ival1 = ival8 - ival4                                                   # STEP 23
ACTION: ival1 = ival8 - ival4 
ival8 = 0 : <type 'int'>
ival4 = 14 : <type 'int'>
ival1 = 6 : <type 'int'>
=> ival1 = -14 : <type 'int'>
==================================================
ival8 = ival3 - ival1                                                   # STEP 24
ACTION: ival8 = ival3 - ival1 
ival3 = 13 : <type 'int'>
ival1 = -14 : <type 'int'>
ival8 = 0 : <type 'int'>
=> ival8 = 27 : <type 'int'>
==================================================
sval7 = sval6 + sval2                                                   # STEP 25
ACTION: sval7 = sval6 + sval2 
sval6 = 'H' : <type 'str'>
sval2 = 'tG' : <type 'str'>
sval7 = 'n' : <type 'str'>
=> sval7 = 'HtG' : <type 'str'>
==================================================
sval1 = sval4 + sval0                                                   # STEP 26
ACTION: sval1 = sval4 + sval0 
sval4 = 'tttt' : <type 'str'>
sval0 = 'N' : <type 'str'>
sval1 = 'tG' : <type 'str'>
=> sval1 = 'ttttN' : <type 'str'>
==================================================
ival2 = ival6 - ival3                                                   # STEP 27
ACTION: ival2 = ival6 - ival3 
ival6 = 17 : <type 'int'>
ival3 = 13 : <type 'int'>
ival2 = None : <type 'NoneType'>
=> ival2 = 4 : <type 'int'>
==================================================
ival1 = ival4 - ival3                                                   # STEP 28
ACTION: ival1 = ival4 - ival3 
ival4 = 14 : <type 'int'>
ival3 = 13 : <type 'int'>
ival1 = -14 : <type 'int'>
=> ival1 = 1 : <type 'int'>
==================================================
ival3 = ival6 - ival2                                                   # STEP 29
ACTION: ival3 = ival6 - ival2 
ival6 = 17 : <type 'int'>
ival2 = 4 : <type 'int'>
ival3 = 13 : <type 'int'>
==================================================
ival7 = ival2 - ival6                                                   # STEP 30
ACTION: ival7 = ival2 - ival6 
ival2 = 4 : <type 'int'>
ival6 = 17 : <type 'int'>
ival7 = None : <type 'NoneType'>
=> ival7 = -13 : <type 'int'>
==================================================
sval4 = sval5 + sval1                                                   # STEP 31
ACTION: sval4 = sval5 + sval1 
sval5 = 'NG' : <type 'str'>
sval1 = 'ttttN' : <type 'str'>
sval4 = 'tttt' : <type 'str'>
=> sval4 = 'NGttttN' : <type 'str'>
==================================================
ival2 = 6                                                               # STEP 32
ACTION: ival2 = 6 
ival2 = 4 : <type 'int'>
=> ival2 = 6 : <type 'int'>
==================================================
sval5 = 'P'                                                             # STEP 33
ACTION: sval5 = 'P' 
sval5 = 'NG' : <type 'str'>
=> sval5 = 'P' : <type 'str'>
==================================================
ival0 = 20                                                              # STEP 34
ACTION: ival0 = 20 
ival0 = None : <type 'NoneType'>
=> ival0 = 20 : <type 'int'>
==================================================
sval1 = sval0 + sval2                                                   # STEP 35
ACTION: sval1 = sval0 + sval2 
sval0 = 'N' : <type 'str'>
sval2 = 'tG' : <type 'str'>
sval1 = 'ttttN' : <type 'str'>
=> sval1 = 'NtG' : <type 'str'>
==================================================
sval2 = sval5 + sval9                                                   # STEP 36
ACTION: sval2 = sval5 + sval9 
sval5 = 'P' : <type 'str'>
sval9 = 'tttttttt' : <type 'str'>
sval2 = 'tG' : <type 'str'>
=> sval2 = 'Ptttttttt' : <type 'str'>
==================================================
sval5 = sval3 + sval9                                                   # STEP 37
ACTION: sval5 = sval3 + sval9 
sval3 = 'tGn' : <type 'str'>
sval9 = 'tttttttt' : <type 'str'>
sval5 = 'P' : <type 'str'>
=> sval5 = 'tGntttttttt' : <type 'str'>
==================================================
val9 = sval0                                                            # STEP 38
ACTION: val9 = sval0 
sval0 = 'N' : <type 'str'>
val9 = None : <type 'NoneType'>
=> val9 = 'N' : <type 'str'>
==================================================
sval9 = sval3 + sval8                                                   # STEP 39
ACTION: sval9 = sval3 + sval8 
sval3 = 'tGn' : <type 'str'>
sval8 = 'en' : <type 'str'>
sval9 = 'tttttttt' : <type 'str'>
=> sval9 = 'tGnen' : <type 'str'>
==================================================
sval0 = sval1 + sval4                                                   # STEP 40
ACTION: sval0 = sval1 + sval4 
sval1 = 'NtG' : <type 'str'>
sval4 = 'NGttttN' : <type 'str'>
sval0 = 'N' : <type 'str'>
=> sval0 = 'NtGNGttttN' : <type 'str'>
==================================================
sval1 = 'R'                                                             # STEP 41
ACTION: sval1 = 'R' 
sval1 = 'NtG' : <type 'str'>
=> sval1 = 'R' : <type 'str'>
==================================================
sval8 = sval2 + sval8                                                   # STEP 42
ACTION: sval8 = sval2 + sval8 
sval2 = 'Ptttttttt' : <type 'str'>
sval8 = 'en' : <type 'str'>
=> sval8 = 'Ptttttttten' : <type 'str'>
==================================================
val4 = sval2                                                            # STEP 43
ACTION: val4 = sval2 
sval2 = 'Ptttttttt' : <type 'str'>
val4 = None : <type 'NoneType'>
=> val4 = 'Ptttttttt' : <type 'str'>
==================================================
sval2 = 'm'                                                             # STEP 44
ACTION: sval2 = 'm' 
sval2 = 'Ptttttttt' : <type 'str'>
=> sval2 = 'm' : <type 'str'>
==================================================
sval4 = 'M'                                                             # STEP 45
ACTION: sval4 = 'M' 
sval4 = 'NGttttN' : <type 'str'>
=> sval4 = 'M' : <type 'str'>
==================================================
sval3 = 'F'                                                             # STEP 46
ACTION: sval3 = 'F' 
sval3 = 'tGn' : <type 'str'>
=> sval3 = 'F' : <type 'str'>
==================================================
sval6 = 'e'                                                             # STEP 47
ACTION: sval6 = 'e' 
sval6 = 'H' : <type 'str'>
=> sval6 = 'e' : <type 'str'>
==================================================
ival6 = ival8 - ival6                                                   # STEP 48
ACTION: ival6 = ival8 - ival6 
ival8 = 27 : <type 'int'>
ival6 = 17 : <type 'int'>
=> ival6 = 10 : <type 'int'>
==================================================
list4 = sortedcontainers.SortedList()                                   # STEP 49
ACTION: list4 = sortedcontainers.SortedList() 
list4 = None : <type 'NoneType'>
list_REF4 = None : <type 'NoneType'>
=> list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF4 = [] 
=> list_REF4 = [] : <type 'list'>
==================================================
list4.irange(minimum=val4,maximum=val6,inclusive=(False,True),reverse=True)  # STEP 50
ACTION: list4.irange(minimum=val4,maximum=val6,inclusive=(False,True),reverse=True) 
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val4 = 'Ptttttttt' : <type 'str'>
val6 = 'N' : <type 'str'>
list_REF4 = [] : <type 'list'>
REFERENCE ACTION: list_REF4.irange(minimum=val4,maximum=val6,inclusive=(False,True),reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'irange'
==================================================
val6 = sval2                                                            # STEP 51
ACTION: val6 = sval2 
sval2 = 'm' : <type 'str'>
val6 = 'N' : <type 'str'>
=> val6 = 'm' : <type 'str'>
==================================================
plist3 = list4 [ival3 : ival6]                                          # STEP 52
ACTION: plist3 = list4 [ival3 : ival6] 
ival3 = 13 : <type 'int'>
ival6 = 10 : <type 'int'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist3 = None : <type 'NoneType'>
list_REF4 = [] : <type 'list'>
=> plist3 = [] : <type 'list'>
REFERENCE ACTION: plist3 = list_REF4 [ival3 : ival6] 
==================================================
plist1 = list4 [ival6 : ival8]                                          # STEP 53
ACTION: plist1 = list4 [ival6 : ival8] 
ival6 = 10 : <type 'int'>
ival8 = 27 : <type 'int'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist1 = None : <type 'NoneType'>
list_REF4 = [] : <type 'list'>
=> plist1 = [] : <type 'list'>
REFERENCE ACTION: plist1 = list_REF4 [ival6 : ival8] 
==================================================
list4.islice(start=ival4,stop=ival0,reverse=True)                       # STEP 54
ACTION: list4.islice(start=ival4,stop=ival0,reverse=True) 
ival4 = 14 : <type 'int'>
ival0 = 20 : <type 'int'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = [] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival4,stop=ival0,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival6 = 3                                                               # STEP 55
ACTION: ival6 = 3 
ival6 = 10 : <type 'int'>
=> ival6 = 3 : <type 'int'>
==================================================
ival3 = ival7 - ival3                                                   # STEP 56
ACTION: ival3 = ival7 - ival3 
ival7 = -13 : <type 'int'>
ival3 = 13 : <type 'int'>
=> ival3 = -26 : <type 'int'>
==================================================
plist2 = list4 [ival5 : ival7]                                          # STEP 57
ACTION: plist2 = list4 [ival5 : ival7] 
ival5 = 3 : <type 'int'>
ival7 = -13 : <type 'int'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist2 = None : <type 'NoneType'>
list_REF4 = [] : <type 'list'>
=> plist2 = [] : <type 'list'>
REFERENCE ACTION: plist2 = list_REF4 [ival5 : ival7] 
==================================================
ival9 = ival2 - ival1                                                   # STEP 58
ACTION: ival9 = ival2 - ival1 
ival2 = 6 : <type 'int'>
ival1 = 1 : <type 'int'>
ival9 = None : <type 'NoneType'>
=> ival9 = 5 : <type 'int'>
==================================================
ival2 = 1                                                               # STEP 59
ACTION: ival2 = 1 
ival2 = 6 : <type 'int'>
=> ival2 = 1 : <type 'int'>
==================================================
ival4 = ival3 - ival8                                                   # STEP 60
ACTION: ival4 = ival3 - ival8 
ival3 = -26 : <type 'int'>
ival8 = 27 : <type 'int'>
ival4 = 14 : <type 'int'>
=> ival4 = -53 : <type 'int'>
==================================================
ival8 = ival2 - ival4                                                   # STEP 61
ACTION: ival8 = ival2 - ival4 
ival2 = 1 : <type 'int'>
ival4 = -53 : <type 'int'>
ival8 = 27 : <type 'int'>
=> ival8 = 54 : <type 'int'>
==================================================
ival7 = ival5 - ival8                                                   # STEP 62
ACTION: ival7 = ival5 - ival8 
ival5 = 3 : <type 'int'>
ival8 = 54 : <type 'int'>
ival7 = -13 : <type 'int'>
=> ival7 = -51 : <type 'int'>
==================================================
list4.islice(start=ival9,stop=ival5,reverse=True)                       # STEP 63
ACTION: list4.islice(start=ival9,stop=ival5,reverse=True) 
ival9 = 5 : <type 'int'>
ival5 = 3 : <type 'int'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = [] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival9,stop=ival5,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival4 = ival9 - ival7                                                   # STEP 64
ACTION: ival4 = ival9 - ival7 
ival9 = 5 : <type 'int'>
ival7 = -51 : <type 'int'>
ival4 = -53 : <type 'int'>
=> ival4 = 56 : <type 'int'>
==================================================
ival3 = ival2 - ival2                                                   # STEP 65
ACTION: ival3 = ival2 - ival2 
ival2 = 1 : <type 'int'>
ival3 = -26 : <type 'int'>
=> ival3 = 0 : <type 'int'>
==================================================
list4.append(val7)                                                      # STEP 66
ACTION: list4.append(val7) 
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val7 = 'z' : <type 'str'>
list_REF4 = [] : <type 'list'>
=> list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: sortListAppend(list_REF4,val7) 
=> list_REF4 = ['z'] : <type 'list'>
==================================================
ival0 = ival8 - ival0                                                   # STEP 67
ACTION: ival0 = ival8 - ival0 
ival8 = 54 : <type 'int'>
ival0 = 20 : <type 'int'>
=> ival0 = 34 : <type 'int'>
==================================================
plist0 = list4 [ival9 : ival4]                                          # STEP 68
ACTION: plist0 = list4 [ival9 : ival4] 
ival9 = 5 : <type 'int'>
ival4 = 56 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist0 = None : <type 'NoneType'>
list_REF4 = ['z'] : <type 'list'>
=> plist0 = [] : <type 'list'>
REFERENCE ACTION: plist0 = list_REF4 [ival9 : ival4] 
==================================================
ival9 = ival3 - ival0                                                   # STEP 69
ACTION: ival9 = ival3 - ival0 
ival3 = 0 : <type 'int'>
ival0 = 34 : <type 'int'>
ival9 = 5 : <type 'int'>
=> ival9 = -34 : <type 'int'>
==================================================
ival5 = ival3 - ival6                                                   # STEP 70
ACTION: ival5 = ival3 - ival6 
ival3 = 0 : <type 'int'>
ival6 = 3 : <type 'int'>
ival5 = 3 : <type 'int'>
=> ival5 = -3 : <type 'int'>
==================================================
list4.islice(start=ival5,stop=ival6)                                    # STEP 71
ACTION: list4.islice(start=ival5,stop=ival6) 
ival5 = -3 : <type 'int'>
ival6 = 3 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival5,stop=ival6) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
sval2 = sval6 + sval3                                                   # STEP 72
ACTION: sval2 = sval6 + sval3 
sval6 = 'e' : <type 'str'>
sval3 = 'F' : <type 'str'>
sval2 = 'm' : <type 'str'>
=> sval2 = 'eF' : <type 'str'>
==================================================
ival8 = ival6 - ival9                                                   # STEP 73
ACTION: ival8 = ival6 - ival9 
ival6 = 3 : <type 'int'>
ival9 = -34 : <type 'int'>
ival8 = 54 : <type 'int'>
=> ival8 = 37 : <type 'int'>
==================================================
plist4 = list4 [ival8 : ival9]                                          # STEP 74
ACTION: plist4 = list4 [ival8 : ival9] 
ival8 = 37 : <type 'int'>
ival9 = -34 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist4 = None : <type 'NoneType'>
list_REF4 = ['z'] : <type 'list'>
=> plist4 = [] : <type 'list'>
REFERENCE ACTION: plist4 = list_REF4 [ival8 : ival9] 
==================================================
list4.islice(start=ival3,stop=ival1,reverse=True)                       # STEP 75
ACTION: list4.islice(start=ival3,stop=ival1,reverse=True) 
ival3 = 0 : <type 'int'>
ival1 = 1 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival3,stop=ival1,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list4.islice(start=ival7,stop=ival1,reverse=True)                       # STEP 76
ACTION: list4.islice(start=ival7,stop=ival1,reverse=True) 
ival7 = -51 : <type 'int'>
ival1 = 1 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival7,stop=ival1,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list0 = sortedcontainers.SortedList()                                   # STEP 77
ACTION: list0 = sortedcontainers.SortedList() 
list0 = None : <type 'NoneType'>
list_REF0 = None : <type 'NoneType'>
=> list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF0 = [] 
=> list_REF0 = [] : <type 'list'>
==================================================
list4.islice(start=ival0,stop=ival6,reverse=True)                       # STEP 78
ACTION: list4.islice(start=ival0,stop=ival6,reverse=True) 
ival0 = 34 : <type 'int'>
ival6 = 3 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival0,stop=ival6,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list4.islice(start=ival8,stop=ival7,reverse=True)                       # STEP 79
ACTION: list4.islice(start=ival8,stop=ival7,reverse=True) 
ival8 = 37 : <type 'int'>
ival7 = -51 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival8,stop=ival7,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list4.islice(start=ival7,stop=ival4,reverse=True)                       # STEP 80
ACTION: list4.islice(start=ival7,stop=ival4,reverse=True) 
ival7 = -51 : <type 'int'>
ival4 = 56 : <type 'int'>
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.islice(start=ival7,stop=ival4,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list4.irange(minimum=val9,maximum=val7,inclusive=(False,True))          # STEP 81
ACTION: list4.irange(minimum=val9,maximum=val7,inclusive=(False,True)) 
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val9 = 'N' : <type 'str'>
val7 = 'z' : <type 'str'>
list_REF4 = ['z'] : <type 'list'>
REFERENCE ACTION: list_REF4.irange(minimum=val9,maximum=val7,inclusive=(False,True)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'irange'
==================================================
sval6 = sval4 + sval4                                                   # STEP 82
ACTION: sval6 = sval4 + sval4 
sval4 = 'M' : <type 'str'>
sval6 = 'e' : <type 'str'>
=> sval6 = 'MM' : <type 'str'>
==================================================
ival0 = ival2 - ival0                                                   # STEP 83
ACTION: ival0 = ival2 - ival0 
ival2 = 1 : <type 'int'>
ival0 = 34 : <type 'int'>
=> ival0 = -33 : <type 'int'>
==================================================
sval3 = sval3 + sval7                                                   # STEP 84
ACTION: sval3 = sval3 + sval7 
sval3 = 'F' : <type 'str'>
sval7 = 'HtG' : <type 'str'>
=> sval3 = 'FHtG' : <type 'str'>
==================================================
list0.irange(minimum=val9,maximum=val9,inclusive=(False,True),reverse=True)  # STEP 85
ACTION: list0.irange(minimum=val9,maximum=val9,inclusive=(False,True),reverse=True) 
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val9 = 'N' : <type 'str'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.irange(minimum=val9,maximum=val9,inclusive=(False,True),reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'irange'
==================================================
list0.islice(start=ival9,stop=ival1,reverse=True)                       # STEP 86
ACTION: list0.islice(start=ival9,stop=ival1,reverse=True) 
ival9 = -34 : <type 'int'>
ival1 = 1 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival9,stop=ival1,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list4.extend(list0)                                                     # STEP 87
ACTION: list4.extend(list0) 
list4 = SortedList(['z'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF4 = ['z'] : <type 'list'>
list_REF0 = [] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.IndexError'> list index out of range
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x11f6c2b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 703164, in act11970
    self.p_list[4].extend(self.p_list[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #64 STEP #69 (0:00:30.007064) Mon Nov 20 15:29:21 2017 [ 396 stmts 523 branches ] (no cov+ for 3 tests) 6357 TOTAL ACTIONS (211.850117308/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 56
STOPPING TESTING DUE TO TIMEOUT
22.3342380768 PERCENT COVERED
60.2141449451 TOTAL RUNTIME
124 EXECUTED
12344 TOTAL TEST OPERATIONS
4.37640547752 TIME SPENT EXECUTING TEST OPERATIONS
47.6400949955 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.24287009239 TIME SPENT CHECKING PROPERTIES
7.61927556992 TOTAL TIME SPENT RUNNING SUT
0.540742397308 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
sval0 = 'N'                                                              # STEP 0
ival6 = 17                                                               # STEP 1
ival5 = 3                                                                # STEP 2
ival3 = 13                                                               # STEP 3
sval7 = 'n'                                                              # STEP 4
ival1 = 6                                                                # STEP 5
sval9 = 't'                                                              # STEP 6
sval6 = 'z'                                                              # STEP 7
sval4 = 'e'                                                              # STEP 8
ival4 = 14                                                               # STEP 9
val6 = sval0                                                            # STEP 10
val7 = sval6                                                            # STEP 11
ival8 = ival1 - ival1                                                   # STEP 12
sval6 = 'H'                                                             # STEP 13
sval2 = 'G'                                                             # STEP 14
sval8 = sval4 + sval7                                                   # STEP 15
sval5 = sval9 + sval9                                                   # STEP 16
sval4 = sval5 + sval5                                                   # STEP 17
sval1 = sval9 + sval2                                                   # STEP 18
sval3 = sval1 + sval7                                                   # STEP 19
sval5 = sval0 + sval2                                                   # STEP 20
sval2 = sval9 + sval2                                                   # STEP 21
sval9 = sval4 + sval4                                                   # STEP 22
ival1 = ival8 - ival4                                                   # STEP 23
ival8 = ival3 - ival1                                                   # STEP 24
sval7 = sval6 + sval2                                                   # STEP 25
sval1 = sval4 + sval0                                                   # STEP 26
ival2 = ival6 - ival3                                                   # STEP 27
ival1 = ival4 - ival3                                                   # STEP 28
ival3 = ival6 - ival2                                                   # STEP 29
ival7 = ival2 - ival6                                                   # STEP 30
sval4 = sval5 + sval1                                                   # STEP 31
ival2 = 6                                                               # STEP 32
sval5 = 'P'                                                             # STEP 33
ival0 = 20                                                              # STEP 34
sval1 = sval0 + sval2                                                   # STEP 35
sval2 = sval5 + sval9                                                   # STEP 36
sval5 = sval3 + sval9                                                   # STEP 37
val9 = sval0                                                            # STEP 38
sval9 = sval3 + sval8                                                   # STEP 39
sval0 = sval1 + sval4                                                   # STEP 40
sval1 = 'R'                                                             # STEP 41
sval8 = sval2 + sval8                                                   # STEP 42
val4 = sval2                                                            # STEP 43
sval2 = 'm'                                                             # STEP 44
sval4 = 'M'                                                             # STEP 45
sval3 = 'F'                                                             # STEP 46
sval6 = 'e'                                                             # STEP 47
ival6 = ival8 - ival6                                                   # STEP 48
list4 = sortedcontainers.SortedList()                                   # STEP 49
list4.irange(minimum=val4,maximum=val6,inclusive=(False,True),reverse=True)  # STEP 50
val6 = sval2                                                            # STEP 51
plist3 = list4 [ival3 : ival6]                                          # STEP 52
plist1 = list4 [ival6 : ival8]                                          # STEP 53
list4.islice(start=ival4,stop=ival0,reverse=True)                       # STEP 54
ival6 = 3                                                               # STEP 55
ival3 = ival7 - ival3                                                   # STEP 56
plist2 = list4 [ival5 : ival7]                                          # STEP 57
ival9 = ival2 - ival1                                                   # STEP 58
ival2 = 1                                                               # STEP 59
ival4 = ival3 - ival8                                                   # STEP 60
ival8 = ival2 - ival4                                                   # STEP 61
ival7 = ival5 - ival8                                                   # STEP 62
list4.islice(start=ival9,stop=ival5,reverse=True)                       # STEP 63
ival4 = ival9 - ival7                                                   # STEP 64
ival3 = ival2 - ival2                                                   # STEP 65
list4.append(val7)                                                      # STEP 66
ival0 = ival8 - ival0                                                   # STEP 67
plist0 = list4 [ival9 : ival4]                                          # STEP 68
ival9 = ival3 - ival0                                                   # STEP 69
ival5 = ival3 - ival6                                                   # STEP 70
list4.islice(start=ival5,stop=ival6)                                    # STEP 71
sval2 = sval6 + sval3                                                   # STEP 72
ival8 = ival6 - ival9                                                   # STEP 73
plist4 = list4 [ival8 : ival9]                                          # STEP 74
list4.islice(start=ival3,stop=ival1,reverse=True)                       # STEP 75
list4.islice(start=ival7,stop=ival1,reverse=True)                       # STEP 76
list0 = sortedcontainers.SortedList()                                   # STEP 77
list4.islice(start=ival0,stop=ival6,reverse=True)                       # STEP 78
list4.islice(start=ival8,stop=ival7,reverse=True)                       # STEP 79
list4.islice(start=ival7,stop=ival4,reverse=True)                       # STEP 80
list4.irange(minimum=val9,maximum=val7,inclusive=(False,True))          # STEP 81
sval6 = sval4 + sval4                                                   # STEP 82
ival0 = ival2 - ival0                                                   # STEP 83
sval3 = sval3 + sval7                                                   # STEP 84
list0.irange(minimum=val9,maximum=val9,inclusive=(False,True),reverse=True)  # STEP 85
list0.islice(start=ival9,stop=ival1,reverse=True)                       # STEP 86
list4.extend(list0)                                                     # STEP 87
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x11f6c2b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 703164, in act11970
    self.p_list[4].extend(self.p_list[0])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
568 BRANCHES COVERED
429 STATEMENTS COVERED
