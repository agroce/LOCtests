Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.11111.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x120d9bc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 702811, in act11964
    self.p_list[2].extend(self.p_list[4])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
Original test has 67 steps

SAVING TEST AS failure.11111.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
ival0 = 8                                                                # STEP 0
ACTION: ival0 = 8 
ival0 = None : <type 'NoneType'>
=> ival0 = 8 : <type 'int'>
==================================================
sval6 = 'U'                                                              # STEP 1
ACTION: sval6 = 'U' 
sval6 = None : <type 'NoneType'>
=> sval6 = 'U' : <type 'str'>
==================================================
sval7 = 'E'                                                              # STEP 2
ACTION: sval7 = 'E' 
sval7 = None : <type 'NoneType'>
=> sval7 = 'E' : <type 'str'>
==================================================
list2 = sortedcontainers.SortedList()                                    # STEP 3
ACTION: list2 = sortedcontainers.SortedList() 
list2 = None : <type 'NoneType'>
list_REF2 = None : <type 'NoneType'>
=> list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF2 = [] 
=> list_REF2 = [] : <type 'list'>
==================================================
ival2 = 5                                                                # STEP 4
ACTION: ival2 = 5 
ival2 = None : <type 'NoneType'>
=> ival2 = 5 : <type 'int'>
==================================================
sval5 = 'X'                                                              # STEP 5
ACTION: sval5 = 'X' 
sval5 = None : <type 'NoneType'>
=> sval5 = 'X' : <type 'str'>
==================================================
plist1 = list2 [ival2 : ival0]                                           # STEP 6
ACTION: plist1 = list2 [ival2 : ival0] 
ival2 = 5 : <type 'int'>
ival0 = 8 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist1 = None : <type 'NoneType'>
list_REF2 = [] : <type 'list'>
=> plist1 = [] : <type 'list'>
REFERENCE ACTION: plist1 = list_REF2 [ival2 : ival0] 
==================================================
val2 = sval5                                                             # STEP 7
ACTION: val2 = sval5 
sval5 = 'X' : <type 'str'>
val2 = None : <type 'NoneType'>
=> val2 = 'X' : <type 'str'>
==================================================
sval1 = 'W'                                                              # STEP 8
ACTION: sval1 = 'W' 
sval1 = None : <type 'NoneType'>
=> sval1 = 'W' : <type 'str'>
==================================================
ival7 = ival2 * ival0                                                    # STEP 9
ACTION: ival7 = ival2 * ival0 
ival2 = 5 : <type 'int'>
ival0 = 8 : <type 'int'>
ival7 = None : <type 'NoneType'>
=> ival7 = 40 : <type 'int'>
==================================================
ival3 = 4                                                               # STEP 10
ACTION: ival3 = 4 
ival3 = None : <type 'NoneType'>
=> ival3 = 4 : <type 'int'>
==================================================
plist0 = list2 [ival3 : ival2]                                          # STEP 11
ACTION: plist0 = list2 [ival3 : ival2] 
ival3 = 4 : <type 'int'>
ival2 = 5 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist0 = None : <type 'NoneType'>
list_REF2 = [] : <type 'list'>
=> plist0 = [] : <type 'list'>
REFERENCE ACTION: plist0 = list_REF2 [ival3 : ival2] 
==================================================
ival0 = ival0 * ival3                                                   # STEP 12
ACTION: ival0 = ival0 * ival3 
ival0 = 8 : <type 'int'>
ival3 = 4 : <type 'int'>
=> ival0 = 32 : <type 'int'>
==================================================
sval0 = 'R'                                                             # STEP 13
ACTION: sval0 = 'R' 
sval0 = None : <type 'NoneType'>
=> sval0 = 'R' : <type 'str'>
==================================================
plist4 = list2 [ival3 : ival3]                                          # STEP 14
ACTION: plist4 = list2 [ival3 : ival3] 
ival3 = 4 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist4 = None : <type 'NoneType'>
list_REF2 = [] : <type 'list'>
=> plist4 = [] : <type 'list'>
REFERENCE ACTION: plist4 = list_REF2 [ival3 : ival3] 
==================================================
list3 = sortedcontainers.SortedList(plist0)                             # STEP 15
ACTION: list3 = sortedcontainers.SortedList(plist0) 
list3 = None : <type 'NoneType'>
plist0 = [] : <type 'list'>
list_REF3 = None : <type 'NoneType'>
=> list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF3 = list(plist0) 
=> list_REF3 = [] : <type 'list'>
==================================================
ival4 = ival0 * ival7                                                   # STEP 16
ACTION: ival4 = ival0 * ival7 
ival0 = 32 : <type 'int'>
ival7 = 40 : <type 'int'>
ival4 = None : <type 'NoneType'>
=> ival4 = 1280 : <type 'int'>
==================================================
sval4 = 'N'                                                             # STEP 17
ACTION: sval4 = 'N' 
sval4 = None : <type 'NoneType'>
=> sval4 = 'N' : <type 'str'>
==================================================
sval9 = 'G'                                                             # STEP 18
ACTION: sval9 = 'G' 
sval9 = None : <type 'NoneType'>
=> sval9 = 'G' : <type 'str'>
==================================================
sval8 = 'P'                                                             # STEP 19
ACTION: sval8 = 'P' 
sval8 = None : <type 'NoneType'>
=> sval8 = 'P' : <type 'str'>
==================================================
sval2 = 'C'                                                             # STEP 20
ACTION: sval2 = 'C' 
sval2 = None : <type 'NoneType'>
=> sval2 = 'C' : <type 'str'>
==================================================
result = list3.pop(ival3)                                               # STEP 21
ACTION: result = list3.pop(ival3) 
ival3 = 4 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IndexError'> pop index out of range
REFERENCE ACTION: result_REF = list_REF3.pop(ival3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.IndexError'> pop from empty list
==================================================
val9 = sval7                                                            # STEP 22
ACTION: val9 = sval7 
sval7 = 'E' : <type 'str'>
val9 = None : <type 'NoneType'>
=> val9 = 'E' : <type 'str'>
==================================================
ival1 = ival4 * ival0                                                   # STEP 23
ACTION: ival1 = ival4 * ival0 
ival4 = 1280 : <type 'int'>
ival0 = 32 : <type 'int'>
ival1 = None : <type 'NoneType'>
=> ival1 = 40960 : <type 'int'>
==================================================
ival2 = 12                                                              # STEP 24
ACTION: ival2 = 12 
ival2 = 5 : <type 'int'>
=> ival2 = 12 : <type 'int'>
==================================================
list2.islice(start=ival3,stop=ival3)                                    # STEP 25
ACTION: list2.islice(start=ival3,stop=ival3) 
ival3 = 4 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF2 = [] : <type 'list'>
REFERENCE ACTION: list_REF2.islice(start=ival3,stop=ival3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival6 = ival3 * ival7                                                   # STEP 26
ACTION: ival6 = ival3 * ival7 
ival3 = 4 : <type 'int'>
ival7 = 40 : <type 'int'>
ival6 = None : <type 'NoneType'>
=> ival6 = 160 : <type 'int'>
==================================================
plist0 = list3 [ival2 : ival2]                                          # STEP 27
ACTION: plist0 = list3 [ival2 : ival2] 
ival2 = 12 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist0 = [] : <type 'list'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: plist0 = list_REF3 [ival2 : ival2] 
==================================================
plist2 = list3 [ival4 : ival6]                                          # STEP 28
ACTION: plist2 = list3 [ival4 : ival6] 
ival4 = 1280 : <type 'int'>
ival6 = 160 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist2 = None : <type 'NoneType'>
list_REF3 = [] : <type 'list'>
=> plist2 = [] : <type 'list'>
REFERENCE ACTION: plist2 = list_REF3 [ival4 : ival6] 
==================================================
list3.insert(ival0,val2)                                                # STEP 29
ACTION: list3.insert(ival0,val2) 
ival0 = 32 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val2 = 'X' : <type 'str'>
list_REF3 = [] : <type 'list'>
=> list3 = SortedList(['X'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: sortListInsert(list_REF3,ival0,val2) 
=> list_REF3 = ['X'] : <type 'list'>
==================================================
ival4 = ival4 * ival2                                                   # STEP 30
ACTION: ival4 = ival4 * ival2 
ival4 = 1280 : <type 'int'>
ival2 = 12 : <type 'int'>
=> ival4 = 15360 : <type 'int'>
==================================================
ival9 = 5                                                               # STEP 31
ACTION: ival9 = 5 
ival9 = None : <type 'NoneType'>
=> ival9 = 5 : <type 'int'>
==================================================
ival0 = ival1 * ival0                                                   # STEP 32
ACTION: ival0 = ival1 * ival0 
ival1 = 40960 : <type 'int'>
ival0 = 32 : <type 'int'>
=> ival0 = 1310720 : <type 'int'>
==================================================
plist3 = list2 [ival2 : ival6]                                          # STEP 33
ACTION: plist3 = list2 [ival2 : ival6] 
ival2 = 12 : <type 'int'>
ival6 = 160 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist3 = None : <type 'NoneType'>
list_REF2 = [] : <type 'list'>
=> plist3 = [] : <type 'list'>
REFERENCE ACTION: plist3 = list_REF2 [ival2 : ival6] 
==================================================
ival2 = 2                                                               # STEP 34
ACTION: ival2 = 2 
ival2 = 12 : <type 'int'>
=> ival2 = 2 : <type 'int'>
==================================================
setList(list3,ival0,val9)                                               # STEP 35
ACTION: setList(list3,ival0,val9) 
ival0 = 1310720 : <type 'int'>
list3 = SortedList(['X'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val9 = 'E' : <type 'str'>
list_REF3 = ['X'] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IndexError'> list index out of range
REFERENCE ACTION: sortListSet(list_REF3,ival0,val9) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.IndexError'> list assignment index out of range
==================================================
ival0 = ival6 * ival6                                                   # STEP 36
ACTION: ival0 = ival6 * ival6 
ival6 = 160 : <type 'int'>
ival0 = 1310720 : <type 'int'>
=> ival0 = 25600 : <type 'int'>
==================================================
ival7 = 13                                                              # STEP 37
ACTION: ival7 = 13 
ival7 = 40 : <type 'int'>
=> ival7 = 13 : <type 'int'>
==================================================
list2.islice(start=ival4,stop=ival0)                                    # STEP 38
ACTION: list2.islice(start=ival4,stop=ival0) 
ival4 = 15360 : <type 'int'>
ival0 = 25600 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF2 = [] : <type 'list'>
REFERENCE ACTION: list_REF2.islice(start=ival4,stop=ival0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival0 = ival6 * ival4                                                   # STEP 39
ACTION: ival0 = ival6 * ival4 
ival6 = 160 : <type 'int'>
ival4 = 15360 : <type 'int'>
ival0 = 25600 : <type 'int'>
=> ival0 = 2457600 : <type 'int'>
==================================================
val5 = sval4                                                            # STEP 40
ACTION: val5 = sval4 
sval4 = 'N' : <type 'str'>
val5 = None : <type 'NoneType'>
=> val5 = 'N' : <type 'str'>
==================================================
list2.islice(start=ival0,stop=ival3)                                    # STEP 41
ACTION: list2.islice(start=ival0,stop=ival3) 
ival0 = 2457600 : <type 'int'>
ival3 = 4 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF2 = [] : <type 'list'>
REFERENCE ACTION: list_REF2.islice(start=ival0,stop=ival3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival6 = ival4 * ival9                                                   # STEP 42
ACTION: ival6 = ival4 * ival9 
ival4 = 15360 : <type 'int'>
ival9 = 5 : <type 'int'>
ival6 = 160 : <type 'int'>
=> ival6 = 76800 : <type 'int'>
==================================================
ival0 = ival9 * ival9                                                   # STEP 43
ACTION: ival0 = ival9 * ival9 
ival9 = 5 : <type 'int'>
ival0 = 2457600 : <type 'int'>
=> ival0 = 25 : <type 'int'>
==================================================
list2.islice(start=ival9,stop=ival0)                                    # STEP 44
ACTION: list2.islice(start=ival9,stop=ival0) 
ival9 = 5 : <type 'int'>
ival0 = 25 : <type 'int'>
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF2 = [] : <type 'list'>
REFERENCE ACTION: list_REF2.islice(start=ival9,stop=ival0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
sval5 = 'R'                                                             # STEP 45
ACTION: sval5 = 'R' 
sval5 = 'X' : <type 'str'>
=> sval5 = 'R' : <type 'str'>
==================================================
val9 = sval5                                                            # STEP 46
ACTION: val9 = sval5 
sval5 = 'R' : <type 'str'>
val9 = 'E' : <type 'str'>
=> val9 = 'R' : <type 'str'>
==================================================
ival3 = ival6 * ival4                                                   # STEP 47
ACTION: ival3 = ival6 * ival4 
ival6 = 76800 : <type 'int'>
ival4 = 15360 : <type 'int'>
ival3 = 4 : <type 'int'>
=> ival3 = 1179648000 : <type 'int'>
==================================================
ival0 = ival1 * ival1                                                   # STEP 48
ACTION: ival0 = ival1 * ival1 
ival1 = 40960 : <type 'int'>
ival0 = 25 : <type 'int'>
=> ival0 = 1677721600 : <type 'int'>
==================================================
sval4 = 'E'                                                             # STEP 49
ACTION: sval4 = 'E' 
sval4 = 'N' : <type 'str'>
=> sval4 = 'E' : <type 'str'>
==================================================
val1 = sval9                                                            # STEP 50
ACTION: val1 = sval9 
sval9 = 'G' : <type 'str'>
val1 = None : <type 'NoneType'>
=> val1 = 'G' : <type 'str'>
==================================================
ival6 = ival3 * ival6                                                   # STEP 51
ACTION: ival6 = ival3 * ival6 
ival3 = 1179648000 : <type 'int'>
ival6 = 76800 : <type 'int'>
=> ival6 = 90596966400000 : <type 'int'>
==================================================
sval7 = 'M'                                                             # STEP 52
ACTION: sval7 = 'M' 
sval7 = 'E' : <type 'str'>
=> sval7 = 'M' : <type 'str'>
==================================================
list4 = sortedcontainers.SortedList(plist0)                             # STEP 53
ACTION: list4 = sortedcontainers.SortedList(plist0) 
list4 = None : <type 'NoneType'>
plist0 = [] : <type 'list'>
list_REF4 = None : <type 'NoneType'>
=> list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF4 = list(plist0) 
=> list_REF4 = [] : <type 'list'>
==================================================
list2.append(val9)                                                      # STEP 54
ACTION: list2.append(val9) 
list2 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val9 = 'R' : <type 'str'>
list_REF2 = [] : <type 'list'>
=> list2 = SortedList(['R'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: sortListAppend(list_REF2,val9) 
=> list_REF2 = ['R'] : <type 'list'>
==================================================
ival1 = ival2 * ival7                                                   # STEP 55
ACTION: ival1 = ival2 * ival7 
ival2 = 2 : <type 'int'>
ival7 = 13 : <type 'int'>
ival1 = 40960 : <type 'int'>
=> ival1 = 26 : <type 'int'>
==================================================
plist0 = list4 [ival0 : ival0]                                          # STEP 56
ACTION: plist0 = list4 [ival0 : ival0] 
ival0 = 1677721600 : <type 'int'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist0 = [] : <type 'list'>
list_REF4 = [] : <type 'list'>
REFERENCE ACTION: plist0 = list_REF4 [ival0 : ival0] 
==================================================
setList(list3,ival1,val5)                                               # STEP 57
ACTION: setList(list3,ival1,val5) 
ival1 = 26 : <type 'int'>
list3 = SortedList(['X'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val5 = 'N' : <type 'str'>
list_REF3 = ['X'] : <type 'list'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IndexError'> list index out of range
REFERENCE ACTION: sortListSet(list_REF3,ival1,val5) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.IndexError'> list assignment index out of range
==================================================
list3.islice(start=ival1,stop=ival4)                                    # STEP 58
ACTION: list3.islice(start=ival1,stop=ival4) 
ival1 = 26 : <type 'int'>
ival4 = 15360 : <type 'int'>
list3 = SortedList(['X'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = ['X'] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival1,stop=ival4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival1 = 20                                                              # STEP 59
ACTION: ival1 = 20 
ival1 = 26 : <type 'int'>
=> ival1 = 20 : <type 'int'>
==================================================
ival8 = ival1 * ival4                                                   # STEP 60
ACTION: ival8 = ival1 * ival4 
ival1 = 20 : <type 'int'>
ival4 = 15360 : <type 'int'>
ival8 = None : <type 'NoneType'>
=> ival8 = 307200 : <type 'int'>
==================================================
list2.append(val2)                                                      # STEP 61
ACTION: list2.append(val2) 
list2 = SortedList(['R'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val2 = 'X' : <type 'str'>
list_REF2 = ['R'] : <type 'list'>
=> list2 = SortedList(['R', 'X'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: sortListAppend(list_REF2,val2) 
=> list_REF2 = ['R', 'X'] : <type 'list'>
==================================================
ival5 = ival4 * ival2                                                   # STEP 62
ACTION: ival5 = ival4 * ival2 
ival4 = 15360 : <type 'int'>
ival2 = 2 : <type 'int'>
ival5 = None : <type 'NoneType'>
=> ival5 = 30720 : <type 'int'>
==================================================
ival2 = 7                                                               # STEP 63
ACTION: ival2 = 7 
ival2 = 2 : <type 'int'>
=> ival2 = 7 : <type 'int'>
==================================================
ival3 = ival6 * ival9                                                   # STEP 64
ACTION: ival3 = ival6 * ival9 
ival6 = 90596966400000 : <type 'int'>
ival9 = 5 : <type 'int'>
ival3 = 1179648000 : <type 'int'>
=> ival3 = 452984832000000 : <type 'int'>
==================================================
ival0 = ival9 * ival2                                                   # STEP 65
ACTION: ival0 = ival9 * ival2 
ival9 = 5 : <type 'int'>
ival2 = 7 : <type 'int'>
ival0 = 1677721600 : <type 'int'>
=> ival0 = 35 : <type 'int'>
==================================================
list2.extend(list4)                                                     # STEP 66
ACTION: list2.extend(list4) 
list2 = SortedList(['R', 'X'], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list4 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF2 = ['R', 'X'] : <type 'list'>
list_REF4 = [] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.IndexError'> list index out of range
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x120d9bb00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 702811, in act11964
    self.p_list[2].extend(self.p_list[4])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #69 STEP #22 (0:00:30.001566) Mon Nov 20 20:24:04 2017 [ 376 stmts 498 branches ] (no cov+ for 2 tests) 6789 TOTAL ACTIONS (226.28818826/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 2
STOPPING TESTING DUE TO TIMEOUT
25.6300891819 PERCENT COVERED
60.2169511318 TOTAL RUNTIME
133 EXECUTED
13169 TOTAL TEST OPERATIONS
4.66560864449 TIME SPENT EXECUTING TEST OPERATIONS
46.6811027527 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.65422749519 TIME SPENT CHECKING PROPERTIES
8.31983613968 TOTAL TIME SPENT RUNNING SUT
0.5417137146 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
ival0 = 8                                                                # STEP 0
sval6 = 'U'                                                              # STEP 1
sval7 = 'E'                                                              # STEP 2
list2 = sortedcontainers.SortedList()                                    # STEP 3
ival2 = 5                                                                # STEP 4
sval5 = 'X'                                                              # STEP 5
plist1 = list2 [ival2 : ival0]                                           # STEP 6
val2 = sval5                                                             # STEP 7
sval1 = 'W'                                                              # STEP 8
ival7 = ival2 * ival0                                                    # STEP 9
ival3 = 4                                                               # STEP 10
plist0 = list2 [ival3 : ival2]                                          # STEP 11
ival0 = ival0 * ival3                                                   # STEP 12
sval0 = 'R'                                                             # STEP 13
plist4 = list2 [ival3 : ival3]                                          # STEP 14
list3 = sortedcontainers.SortedList(plist0)                             # STEP 15
ival4 = ival0 * ival7                                                   # STEP 16
sval4 = 'N'                                                             # STEP 17
sval9 = 'G'                                                             # STEP 18
sval8 = 'P'                                                             # STEP 19
sval2 = 'C'                                                             # STEP 20
result = list3.pop(ival3)                                               # STEP 21
val9 = sval7                                                            # STEP 22
ival1 = ival4 * ival0                                                   # STEP 23
ival2 = 12                                                              # STEP 24
list2.islice(start=ival3,stop=ival3)                                    # STEP 25
ival6 = ival3 * ival7                                                   # STEP 26
plist0 = list3 [ival2 : ival2]                                          # STEP 27
plist2 = list3 [ival4 : ival6]                                          # STEP 28
list3.insert(ival0,val2)                                                # STEP 29
ival4 = ival4 * ival2                                                   # STEP 30
ival9 = 5                                                               # STEP 31
ival0 = ival1 * ival0                                                   # STEP 32
plist3 = list2 [ival2 : ival6]                                          # STEP 33
ival2 = 2                                                               # STEP 34
setList(list3,ival0,val9)                                               # STEP 35
ival0 = ival6 * ival6                                                   # STEP 36
ival7 = 13                                                              # STEP 37
list2.islice(start=ival4,stop=ival0)                                    # STEP 38
ival0 = ival6 * ival4                                                   # STEP 39
val5 = sval4                                                            # STEP 40
list2.islice(start=ival0,stop=ival3)                                    # STEP 41
ival6 = ival4 * ival9                                                   # STEP 42
ival0 = ival9 * ival9                                                   # STEP 43
list2.islice(start=ival9,stop=ival0)                                    # STEP 44
sval5 = 'R'                                                             # STEP 45
val9 = sval5                                                            # STEP 46
ival3 = ival6 * ival4                                                   # STEP 47
ival0 = ival1 * ival1                                                   # STEP 48
sval4 = 'E'                                                             # STEP 49
val1 = sval9                                                            # STEP 50
ival6 = ival3 * ival6                                                   # STEP 51
sval7 = 'M'                                                             # STEP 52
list4 = sortedcontainers.SortedList(plist0)                             # STEP 53
list2.append(val9)                                                      # STEP 54
ival1 = ival2 * ival7                                                   # STEP 55
plist0 = list4 [ival0 : ival0]                                          # STEP 56
setList(list3,ival1,val5)                                               # STEP 57
list3.islice(start=ival1,stop=ival4)                                    # STEP 58
ival1 = 20                                                              # STEP 59
ival8 = ival1 * ival4                                                   # STEP 60
list2.append(val2)                                                      # STEP 61
ival5 = ival4 * ival2                                                   # STEP 62
ival2 = 7                                                               # STEP 63
ival3 = ival6 * ival9                                                   # STEP 64
ival0 = ival9 * ival2                                                   # STEP 65
list2.extend(list4)                                                     # STEP 66
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x120d9bb00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 702811, in act11964
    self.p_list[2].extend(self.p_list[4])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
635 BRANCHES COVERED
484 STATEMENTS COVERED
