Random testing using config=Config(noExceptionMatch=False, generalize=False, localize=False, speed='FAST', probs=None, LOCBaseline=0.2, noAlphaConvert=False, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, html=None, keepLast=False, stopWhenNoCoverage=None, generateLOC=None, computeFeatureStats=False, Pmutate=0.0, timeout=60, output='failure.11323.test', markov=None, noSwarmDependencies=False, startExploit=0.0, maxMustHitBranch=None, useHints=False, silentFail=False, highLowSwarm=None, maxMustHitStatement=None, progress=False, postCover=False, swarmLength=None, noCover=False, noEnumerateEnabled=False, full=True, swarmP=0.5, coverFile='coverage.out', markovP=1.0, swarmProbs=None, genDepth=None, exploitCeiling=0.1, logging=None, noCheck=False, throughput=False, uncaught=False, swarmSwitch=None, verbose=False, reducePool=False, exploit=None, fastQuickAnalysis=False, total=False, verboseExploit=False, swarm=True, sequenceP=1.0, biasLOC=None, timedProgress=30, relax=False, ddmin=False, stutter=None, readQuick=False, verboseActions=False, quickAnalysis=False, noReassign=False, sequenceSize=3, LOCProbs=False, sequencesFromTests=None, maxTests=-1, trackMaxCoverage=None, useQuickSequences=False, exploitBestHint=1, failedLogging=None, stopWhenStatements=None, greedyStutter=False, seed=None, stopWhenHitStatement=None, uniqueValuesAnalysis=False, normalize=False, startExploitStall=0, enumerateEnabled=False, internal=False, profile=False, multiple=True, stopWhenBranches=None, running=False, compareFails=False, Pcrossover=0.2, stopWhenHitBranch=None, depth=100, showActions=False)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x120c41758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 702933, in act11966
    self.p_list[3].extend(self.p_list[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
Original test has 76 steps

SAVING TEST AS failure.11323.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
sval9 = 'a'                                                              # STEP 0
ACTION: sval9 = 'a' 
sval9 = None : <type 'NoneType'>
=> sval9 = 'a' : <type 'str'>
==================================================
ival6 = 15                                                               # STEP 1
ACTION: ival6 = 15 
ival6 = None : <type 'NoneType'>
=> ival6 = 15 : <type 'int'>
==================================================
ival1 = 2                                                                # STEP 2
ACTION: ival1 = 2 
ival1 = None : <type 'NoneType'>
=> ival1 = 2 : <type 'int'>
==================================================
ival9 = ival6 - ival1                                                    # STEP 3
ACTION: ival9 = ival6 - ival1 
ival6 = 15 : <type 'int'>
ival1 = 2 : <type 'int'>
ival9 = None : <type 'NoneType'>
=> ival9 = 13 : <type 'int'>
==================================================
list3 = sortedcontainers.SortedList()                                    # STEP 4
ACTION: list3 = sortedcontainers.SortedList() 
list3 = None : <type 'NoneType'>
list_REF3 = None : <type 'NoneType'>
=> list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF3 = [] 
=> list_REF3 = [] : <type 'list'>
==================================================
ival7 = 10                                                               # STEP 5
ACTION: ival7 = 10 
ival7 = None : <type 'NoneType'>
=> ival7 = 10 : <type 'int'>
==================================================
ival2 = 15                                                               # STEP 6
ACTION: ival2 = 15 
ival2 = None : <type 'NoneType'>
=> ival2 = 15 : <type 'int'>
==================================================
plist4 = list3 [ival2 : ival7]                                           # STEP 7
ACTION: plist4 = list3 [ival2 : ival7] 
ival2 = 15 : <type 'int'>
ival7 = 10 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist4 = None : <type 'NoneType'>
list_REF3 = [] : <type 'list'>
=> plist4 = [] : <type 'list'>
REFERENCE ACTION: plist4 = list_REF3 [ival2 : ival7] 
==================================================
sval2 = 'v'                                                              # STEP 8
ACTION: sval2 = 'v' 
sval2 = None : <type 'NoneType'>
=> sval2 = 'v' : <type 'str'>
==================================================
sval3 = 'b'                                                              # STEP 9
ACTION: sval3 = 'b' 
sval3 = None : <type 'NoneType'>
=> sval3 = 'b' : <type 'str'>
==================================================
dict1 = sortedcontainers.SortedDict()                                   # STEP 10
ACTION: dict1 = sortedcontainers.SortedDict() 
dict1 = None : <type 'NoneType'>
dict_REF1 = None : <type 'NoneType'>
=> dict1 = SortedDict(None, 1000, {}) : <class 'sortedcontainers.sorteddict.SortedDict'>
REFERENCE ACTION: dict_REF1 = {} 
=> dict_REF1 = {} : <type 'dict'>
==================================================
ival4 = 1                                                               # STEP 11
ACTION: ival4 = 1 
ival4 = None : <type 'NoneType'>
=> ival4 = 1 : <type 'int'>
==================================================
list3.islice(start=ival4,stop=ival2,reverse=True)                       # STEP 12
ACTION: list3.islice(start=ival4,stop=ival2,reverse=True) 
ival4 = 1 : <type 'int'>
ival2 = 15 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival4,stop=ival2,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list3.islice(start=ival7,stop=ival9,reverse=True)                       # STEP 13
ACTION: list3.islice(start=ival7,stop=ival9,reverse=True) 
ival7 = 10 : <type 'int'>
ival9 = 13 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival7,stop=ival9,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival1 = 8                                                               # STEP 14
ACTION: ival1 = 8 
ival1 = 2 : <type 'int'>
=> ival1 = 8 : <type 'int'>
==================================================
ival8 = ival7 - ival1                                                   # STEP 15
ACTION: ival8 = ival7 - ival1 
ival7 = 10 : <type 'int'>
ival1 = 8 : <type 'int'>
ival8 = None : <type 'NoneType'>
=> ival8 = 2 : <type 'int'>
==================================================
plist2 = list3 [ival9 : ival1]                                          # STEP 16
ACTION: plist2 = list3 [ival9 : ival1] 
ival9 = 13 : <type 'int'>
ival1 = 8 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist2 = None : <type 'NoneType'>
list_REF3 = [] : <type 'list'>
=> plist2 = [] : <type 'list'>
REFERENCE ACTION: plist2 = list_REF3 [ival9 : ival1] 
==================================================
ival0 = 1                                                               # STEP 17
ACTION: ival0 = 1 
ival0 = None : <type 'NoneType'>
=> ival0 = 1 : <type 'int'>
==================================================
ival9 = 4                                                               # STEP 18
ACTION: ival9 = 4 
ival9 = 13 : <type 'int'>
=> ival9 = 4 : <type 'int'>
==================================================
list3.islice(start=ival6,stop=ival8,reverse=True)                       # STEP 19
ACTION: list3.islice(start=ival6,stop=ival8,reverse=True) 
ival6 = 15 : <type 'int'>
ival8 = 2 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival6,stop=ival8,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival8 = ival2 - ival1                                                   # STEP 20
ACTION: ival8 = ival2 - ival1 
ival2 = 15 : <type 'int'>
ival1 = 8 : <type 'int'>
ival8 = 2 : <type 'int'>
=> ival8 = 7 : <type 'int'>
==================================================
ival3 = 7                                                               # STEP 21
ACTION: ival3 = 7 
ival3 = None : <type 'NoneType'>
=> ival3 = 7 : <type 'int'>
==================================================
ival2 = ival8 - ival7                                                   # STEP 22
ACTION: ival2 = ival8 - ival7 
ival8 = 7 : <type 'int'>
ival7 = 10 : <type 'int'>
ival2 = 15 : <type 'int'>
=> ival2 = -3 : <type 'int'>
==================================================
sval8 = 'i'                                                             # STEP 23
ACTION: sval8 = 'i' 
sval8 = None : <type 'NoneType'>
=> sval8 = 'i' : <type 'str'>
==================================================
plist0 = list3 [ival8 : ival9]                                          # STEP 24
ACTION: plist0 = list3 [ival8 : ival9] 
ival8 = 7 : <type 'int'>
ival9 = 4 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist0 = None : <type 'NoneType'>
list_REF3 = [] : <type 'list'>
=> plist0 = [] : <type 'list'>
REFERENCE ACTION: plist0 = list_REF3 [ival8 : ival9] 
==================================================
ival9 = ival9 - ival2                                                   # STEP 25
ACTION: ival9 = ival9 - ival2 
ival9 = 4 : <type 'int'>
ival2 = -3 : <type 'int'>
=> ival9 = 7 : <type 'int'>
==================================================
val7 = ival7                                                            # STEP 26
ACTION: val7 = ival7 
ival7 = 10 : <type 'int'>
val7 = None : <type 'NoneType'>
=> val7 = 10 : <type 'int'>
==================================================
sval1 = 'p'                                                             # STEP 27
ACTION: sval1 = 'p' 
sval1 = None : <type 'NoneType'>
=> sval1 = 'p' : <type 'str'>
==================================================
plist3 = list3 [ival1 : ival3]                                          # STEP 28
ACTION: plist3 = list3 [ival1 : ival3] 
ival1 = 8 : <type 'int'>
ival3 = 7 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist3 = None : <type 'NoneType'>
list_REF3 = [] : <type 'list'>
=> plist3 = [] : <type 'list'>
REFERENCE ACTION: plist3 = list_REF3 [ival1 : ival3] 
==================================================
sval4 = 'h'                                                             # STEP 29
ACTION: sval4 = 'h' 
sval4 = None : <type 'NoneType'>
=> sval4 = 'h' : <type 'str'>
==================================================
dict1.islice(start=ival3,stop=ival8,reverse=True)                       # STEP 30
ACTION: dict1.islice(start=ival3,stop=ival8,reverse=True) 
ival3 = 7 : <type 'int'>
ival8 = 7 : <type 'int'>
dict1 = SortedDict(None, 1000, {}) : <class 'sortedcontainers.sorteddict.SortedDict'>
dict_REF1 = {} : <type 'dict'>
REFERENCE ACTION: dict_REF1.islice(start=ival3,stop=ival8,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'dict' object has no attribute 'islice'
==================================================
ival2 = ival2 - ival1                                                   # STEP 31
ACTION: ival2 = ival2 - ival1 
ival2 = -3 : <type 'int'>
ival1 = 8 : <type 'int'>
=> ival2 = -11 : <type 'int'>
==================================================
ival3 = ival2 - ival7                                                   # STEP 32
ACTION: ival3 = ival2 - ival7 
ival2 = -11 : <type 'int'>
ival7 = 10 : <type 'int'>
ival3 = 7 : <type 'int'>
=> ival3 = -21 : <type 'int'>
==================================================
ival1 = 17                                                              # STEP 33
ACTION: ival1 = 17 
ival1 = 8 : <type 'int'>
=> ival1 = 17 : <type 'int'>
==================================================
ival2 = ival9 - ival0                                                   # STEP 34
ACTION: ival2 = ival9 - ival0 
ival9 = 7 : <type 'int'>
ival0 = 1 : <type 'int'>
ival2 = -11 : <type 'int'>
=> ival2 = 6 : <type 'int'>
==================================================
plist1 = list3 [ival7 : ival1]                                          # STEP 35
ACTION: plist1 = list3 [ival7 : ival1] 
ival7 = 10 : <type 'int'>
ival1 = 17 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist1 = None : <type 'NoneType'>
list_REF3 = [] : <type 'list'>
=> plist1 = [] : <type 'list'>
REFERENCE ACTION: plist1 = list_REF3 [ival7 : ival1] 
==================================================
list3.islice(start=ival6,stop=ival3,reverse=True)                       # STEP 36
ACTION: list3.islice(start=ival6,stop=ival3,reverse=True) 
ival6 = 15 : <type 'int'>
ival3 = -21 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival6,stop=ival3,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list3 = sortedcontainers.SortedList(plist2)                             # STEP 37
ACTION: list3 = sortedcontainers.SortedList(plist2) 
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist2 = [] : <type 'list'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: list_REF3 = list(plist2) 
==================================================
list0 = sortedcontainers.SortedList(plist3)                             # STEP 38
ACTION: list0 = sortedcontainers.SortedList(plist3) 
list0 = None : <type 'NoneType'>
plist3 = [] : <type 'list'>
list_REF0 = None : <type 'NoneType'>
=> list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF0 = list(plist3) 
=> list_REF0 = [] : <type 'list'>
==================================================
sval5 = sval3 + sval4                                                   # STEP 39
ACTION: sval5 = sval3 + sval4 
sval3 = 'b' : <type 'str'>
sval4 = 'h' : <type 'str'>
sval5 = None : <type 'NoneType'>
=> sval5 = 'bh' : <type 'str'>
==================================================
ival3 = 8                                                               # STEP 40
ACTION: ival3 = 8 
ival3 = -21 : <type 'int'>
=> ival3 = 8 : <type 'int'>
==================================================
sval7 = sval3 + sval3                                                   # STEP 41
ACTION: sval7 = sval3 + sval3 
sval3 = 'b' : <type 'str'>
sval7 = None : <type 'NoneType'>
=> sval7 = 'bb' : <type 'str'>
==================================================
sval0 = 'n'                                                             # STEP 42
ACTION: sval0 = 'n' 
sval0 = None : <type 'NoneType'>
=> sval0 = 'n' : <type 'str'>
==================================================
list0.islice(start=ival6,stop=ival9,reverse=True)                       # STEP 43
ACTION: list0.islice(start=ival6,stop=ival9,reverse=True) 
ival6 = 15 : <type 'int'>
ival9 = 7 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival6,stop=ival9,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
plist3 = list3 [ival6 : ival8]                                          # STEP 44
ACTION: plist3 = list3 [ival6 : ival8] 
ival6 = 15 : <type 'int'>
ival8 = 7 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist3 = [] : <type 'list'>
list_REF3 = [] : <type 'list'>
REFERENCE ACTION: plist3 = list_REF3 [ival6 : ival8] 
==================================================
ival1 = ival0 - ival4                                                   # STEP 45
ACTION: ival1 = ival0 - ival4 
ival0 = 1 : <type 'int'>
ival4 = 1 : <type 'int'>
ival1 = 17 : <type 'int'>
=> ival1 = 0 : <type 'int'>
==================================================
ival7 = ival0 - ival1                                                   # STEP 46
ACTION: ival7 = ival0 - ival1 
ival0 = 1 : <type 'int'>
ival1 = 0 : <type 'int'>
ival7 = 10 : <type 'int'>
=> ival7 = 1 : <type 'int'>
==================================================
ival6 = ival2 - ival4                                                   # STEP 47
ACTION: ival6 = ival2 - ival4 
ival2 = 6 : <type 'int'>
ival4 = 1 : <type 'int'>
ival6 = 15 : <type 'int'>
=> ival6 = 5 : <type 'int'>
==================================================
list0.islice(start=ival3,stop=ival4,reverse=True)                       # STEP 48
ACTION: list0.islice(start=ival3,stop=ival4,reverse=True) 
ival3 = 8 : <type 'int'>
ival4 = 1 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival3,stop=ival4,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
sval3 = 'b'                                                             # STEP 49
ACTION: sval3 = 'b' 
sval3 = 'b' : <type 'str'>
==================================================
list0.islice(start=ival4,stop=ival3,reverse=True)                       # STEP 50
ACTION: list0.islice(start=ival4,stop=ival3,reverse=True) 
ival4 = 1 : <type 'int'>
ival3 = 8 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival4,stop=ival3,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival0 = ival1 - ival4                                                   # STEP 51
ACTION: ival0 = ival1 - ival4 
ival1 = 0 : <type 'int'>
ival4 = 1 : <type 'int'>
ival0 = 1 : <type 'int'>
=> ival0 = -1 : <type 'int'>
==================================================
list1 = sortedcontainers.SortedList(plist1)                             # STEP 52
ACTION: list1 = sortedcontainers.SortedList(plist1) 
list1 = None : <type 'NoneType'>
plist1 = [] : <type 'list'>
list_REF1 = None : <type 'NoneType'>
=> list1 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: list_REF1 = list(plist1) 
=> list_REF1 = [] : <type 'list'>
==================================================
sval6 = 'l'                                                             # STEP 53
ACTION: sval6 = 'l' 
sval6 = None : <type 'NoneType'>
=> sval6 = 'l' : <type 'str'>
==================================================
list3.insert(ival7,val7)                                                # STEP 54
ACTION: list3.insert(ival7,val7) 
ival7 = 1 : <type 'int'>
list3 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val7 = 10 : <type 'int'>
list_REF3 = [] : <type 'list'>
=> list3 = SortedList([10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: sortListInsert(list_REF3,ival7,val7) 
=> list_REF3 = [10] : <type 'list'>
==================================================
list3.islice(start=ival0,stop=ival8,reverse=True)                       # STEP 55
ACTION: list3.islice(start=ival0,stop=ival8,reverse=True) 
ival0 = -1 : <type 'int'>
ival8 = 7 : <type 'int'>
list3 = SortedList([10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [10] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival0,stop=ival8,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival7 = ival2 - ival1                                                   # STEP 56
ACTION: ival7 = ival2 - ival1 
ival2 = 6 : <type 'int'>
ival1 = 0 : <type 'int'>
ival7 = 1 : <type 'int'>
=> ival7 = 6 : <type 'int'>
==================================================
list3.islice(start=ival0,stop=ival1,reverse=True)                       # STEP 57
ACTION: list3.islice(start=ival0,stop=ival1,reverse=True) 
ival0 = -1 : <type 'int'>
ival1 = 0 : <type 'int'>
list3 = SortedList([10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [10] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival0,stop=ival1,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival3 = ival7 - ival8                                                   # STEP 58
ACTION: ival3 = ival7 - ival8 
ival7 = 6 : <type 'int'>
ival8 = 7 : <type 'int'>
ival3 = 8 : <type 'int'>
=> ival3 = -1 : <type 'int'>
==================================================
ival9 = 8                                                               # STEP 59
ACTION: ival9 = 8 
ival9 = 7 : <type 'int'>
=> ival9 = 8 : <type 'int'>
==================================================
list0.islice(start=ival0,stop=ival0,reverse=True)                       # STEP 60
ACTION: list0.islice(start=ival0,stop=ival0,reverse=True) 
ival0 = -1 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival0,stop=ival0,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list3.insert(ival8,val7)                                                # STEP 61
ACTION: list3.insert(ival8,val7) 
ival8 = 7 : <type 'int'>
list3 = SortedList([10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
val7 = 10 : <type 'int'>
list_REF3 = [10] : <type 'list'>
=> list3 = SortedList([10, 10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
REFERENCE ACTION: sortListInsert(list_REF3,ival8,val7) 
=> list_REF3 = [10, 10] : <type 'list'>
==================================================
plist1 = list0 [ival9 : ival0]                                          # STEP 62
ACTION: plist1 = list0 [ival9 : ival0] 
ival9 = 8 : <type 'int'>
ival0 = -1 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
plist1 = [] : <type 'list'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: plist1 = list_REF0 [ival9 : ival0] 
==================================================
list0.islice(start=ival1,stop=ival7,reverse=True)                       # STEP 63
ACTION: list0.islice(start=ival1,stop=ival7,reverse=True) 
ival1 = 0 : <type 'int'>
ival7 = 6 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival1,stop=ival7,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival8 = ival9 - ival9                                                   # STEP 64
ACTION: ival8 = ival9 - ival9 
ival9 = 8 : <type 'int'>
ival8 = 7 : <type 'int'>
=> ival8 = 0 : <type 'int'>
==================================================
list0.islice(start=ival7,stop=ival4,reverse=True)                       # STEP 65
ACTION: list0.islice(start=ival7,stop=ival4,reverse=True) 
ival7 = 6 : <type 'int'>
ival4 = 1 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival7,stop=ival4,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
ival9 = ival9 - ival4                                                   # STEP 66
ACTION: ival9 = ival9 - ival4 
ival9 = 8 : <type 'int'>
ival4 = 1 : <type 'int'>
=> ival9 = 7 : <type 'int'>
==================================================
list3.islice(start=ival1,stop=ival7,reverse=True)                       # STEP 67
ACTION: list3.islice(start=ival1,stop=ival7,reverse=True) 
ival1 = 0 : <type 'int'>
ival7 = 6 : <type 'int'>
list3 = SortedList([10, 10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [10, 10] : <type 'list'>
REFERENCE ACTION: list_REF3.islice(start=ival1,stop=ival7,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
val2 = ival9                                                            # STEP 68
ACTION: val2 = ival9 
ival9 = 7 : <type 'int'>
val2 = None : <type 'NoneType'>
=> val2 = 7 : <type 'int'>
==================================================
sval4 = sval6 + sval5                                                   # STEP 69
ACTION: sval4 = sval6 + sval5 
sval6 = 'l' : <type 'str'>
sval5 = 'bh' : <type 'str'>
sval4 = 'h' : <type 'str'>
=> sval4 = 'lbh' : <type 'str'>
==================================================
ival7 = ival0 - ival7                                                   # STEP 70
ACTION: ival7 = ival0 - ival7 
ival0 = -1 : <type 'int'>
ival7 = 6 : <type 'int'>
=> ival7 = -7 : <type 'int'>
==================================================
val5 = ival8                                                            # STEP 71
ACTION: val5 = ival8 
ival8 = 0 : <type 'int'>
val5 = None : <type 'NoneType'>
=> val5 = 0 : <type 'int'>
==================================================
sval5 = sval2 + sval0                                                   # STEP 72
ACTION: sval5 = sval2 + sval0 
sval2 = 'v' : <type 'str'>
sval0 = 'n' : <type 'str'>
sval5 = 'bh' : <type 'str'>
=> sval5 = 'vn' : <type 'str'>
==================================================
ival1 = ival8 - ival1                                                   # STEP 73
ACTION: ival1 = ival8 - ival1 
ival8 = 0 : <type 'int'>
ival1 = 0 : <type 'int'>
==================================================
list0.islice(start=ival6,stop=ival3,reverse=True)                       # STEP 74
ACTION: list0.islice(start=ival6,stop=ival3,reverse=True) 
ival6 = 5 : <type 'int'>
ival3 = -1 : <type 'int'>
list0 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF0 = [] : <type 'list'>
REFERENCE ACTION: list_REF0.islice(start=ival6,stop=ival3,reverse=True) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'list' object has no attribute 'islice'
==================================================
list3.extend(list1)                                                     # STEP 75
ACTION: list3.extend(list1) 
list3 = SortedList([10, 10], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list1 = SortedList([], load=1000) : <class 'sortedcontainers.sortedlist.SortedList'>
list_REF3 = [10, 10] : <type 'list'>
list_REF1 = [] : <type 'list'>
RAISED EXCEPTION: <type 'exceptions.IndexError'> list index out of range
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x120c415f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 702933, in act11966
    self.p_list[3].extend(self.p_list[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #62 STEP #99 (0:00:30.000918) Mon Nov 20 21:31:36 2017 [ 440 stmts 578 branches ] (no cov+ for 9 tests) 6175 TOTAL ACTIONS (205.827033997/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 0
STOPPING TESTING DUE TO TIMEOUT
24.4668476154 PERCENT COVERED
60.221198082 TOTAL RUNTIME
125 EXECUTED
12376 TOTAL TEST OPERATIONS
4.54827308655 TIME SPENT EXECUTING TEST OPERATIONS
46.9667441845 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.63302516937 TIME SPENT CHECKING PROPERTIES
8.18129825592 TOTAL TIME SPENT RUNNING SUT
0.615694046021 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
sval9 = 'a'                                                              # STEP 0
ival6 = 15                                                               # STEP 1
ival1 = 2                                                                # STEP 2
ival9 = ival6 - ival1                                                    # STEP 3
list3 = sortedcontainers.SortedList()                                    # STEP 4
ival7 = 10                                                               # STEP 5
ival2 = 15                                                               # STEP 6
plist4 = list3 [ival2 : ival7]                                           # STEP 7
sval2 = 'v'                                                              # STEP 8
sval3 = 'b'                                                              # STEP 9
dict1 = sortedcontainers.SortedDict()                                   # STEP 10
ival4 = 1                                                               # STEP 11
list3.islice(start=ival4,stop=ival2,reverse=True)                       # STEP 12
list3.islice(start=ival7,stop=ival9,reverse=True)                       # STEP 13
ival1 = 8                                                               # STEP 14
ival8 = ival7 - ival1                                                   # STEP 15
plist2 = list3 [ival9 : ival1]                                          # STEP 16
ival0 = 1                                                               # STEP 17
ival9 = 4                                                               # STEP 18
list3.islice(start=ival6,stop=ival8,reverse=True)                       # STEP 19
ival8 = ival2 - ival1                                                   # STEP 20
ival3 = 7                                                               # STEP 21
ival2 = ival8 - ival7                                                   # STEP 22
sval8 = 'i'                                                             # STEP 23
plist0 = list3 [ival8 : ival9]                                          # STEP 24
ival9 = ival9 - ival2                                                   # STEP 25
val7 = ival7                                                            # STEP 26
sval1 = 'p'                                                             # STEP 27
plist3 = list3 [ival1 : ival3]                                          # STEP 28
sval4 = 'h'                                                             # STEP 29
dict1.islice(start=ival3,stop=ival8,reverse=True)                       # STEP 30
ival2 = ival2 - ival1                                                   # STEP 31
ival3 = ival2 - ival7                                                   # STEP 32
ival1 = 17                                                              # STEP 33
ival2 = ival9 - ival0                                                   # STEP 34
plist1 = list3 [ival7 : ival1]                                          # STEP 35
list3.islice(start=ival6,stop=ival3,reverse=True)                       # STEP 36
list3 = sortedcontainers.SortedList(plist2)                             # STEP 37
list0 = sortedcontainers.SortedList(plist3)                             # STEP 38
sval5 = sval3 + sval4                                                   # STEP 39
ival3 = 8                                                               # STEP 40
sval7 = sval3 + sval3                                                   # STEP 41
sval0 = 'n'                                                             # STEP 42
list0.islice(start=ival6,stop=ival9,reverse=True)                       # STEP 43
plist3 = list3 [ival6 : ival8]                                          # STEP 44
ival1 = ival0 - ival4                                                   # STEP 45
ival7 = ival0 - ival1                                                   # STEP 46
ival6 = ival2 - ival4                                                   # STEP 47
list0.islice(start=ival3,stop=ival4,reverse=True)                       # STEP 48
sval3 = 'b'                                                             # STEP 49
list0.islice(start=ival4,stop=ival3,reverse=True)                       # STEP 50
ival0 = ival1 - ival4                                                   # STEP 51
list1 = sortedcontainers.SortedList(plist1)                             # STEP 52
sval6 = 'l'                                                             # STEP 53
list3.insert(ival7,val7)                                                # STEP 54
list3.islice(start=ival0,stop=ival8,reverse=True)                       # STEP 55
ival7 = ival2 - ival1                                                   # STEP 56
list3.islice(start=ival0,stop=ival1,reverse=True)                       # STEP 57
ival3 = ival7 - ival8                                                   # STEP 58
ival9 = 8                                                               # STEP 59
list0.islice(start=ival0,stop=ival0,reverse=True)                       # STEP 60
list3.insert(ival8,val7)                                                # STEP 61
plist1 = list0 [ival9 : ival0]                                          # STEP 62
list0.islice(start=ival1,stop=ival7,reverse=True)                       # STEP 63
ival8 = ival9 - ival9                                                   # STEP 64
list0.islice(start=ival7,stop=ival4,reverse=True)                       # STEP 65
ival9 = ival9 - ival4                                                   # STEP 66
list3.islice(start=ival1,stop=ival7,reverse=True)                       # STEP 67
val2 = ival9                                                            # STEP 68
sval4 = sval6 + sval5                                                   # STEP 69
ival7 = ival0 - ival7                                                   # STEP 70
val5 = ival8                                                            # STEP 71
sval5 = sval2 + sval0                                                   # STEP 72
ival1 = ival8 - ival1                                                   # STEP 73
list0.islice(start=ival6,stop=ival3,reverse=True)                       # STEP 74
list3.extend(list1)                                                     # STEP 75
ERROR: (<type 'exceptions.IndexError'>, IndexError('list index out of range',), <traceback object at 0x120c415f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 2306941, in safely
    act[2]()
  File "/Users/alex/tstl/examples/oldsortedcontainers/sut.py", line 702933, in act11966
    self.p_list[3].extend(self.p_list[1])
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sortedcontainers/sortedlist.py", line 1083, in extend
    if values[0] < _lists[-1][-1]:
614 BRANCHES COVERED
464 STATEMENTS COVERED
