Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5611.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10892ffc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 83 steps

SAVING TEST AS failure.5611.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes0 = 0                                                               # STEP 0
component1 = "d"                                                         # STEP 1
component2 = "phi"                                                       # STEP 2
component0 = "d"                                                         # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
component4 = "e"                                                         # STEP 5
str4 = ""                                                                # STEP 6
str4 += " "                                                              # STEP 7
component3 = "d"                                                         # STEP 8
str1 = ""                                                                # STEP 9
bytes4 = 0                                                              # STEP 10
path4 += "/" + component4                                               # STEP 11
path0 = "/Volumes/ramdisk/test"                                         # STEP 12
component4 = "d"                                                        # STEP 13
os0 = newFakeOS()                                                       # STEP 14
bytes4 += 1                                                             # STEP 15
stat0 = os0.lstat(path4)                                                # STEP 16
stat0 = os0.stat(path4)                                                 # STEP 17
path0 += "/" + component2                                               # STEP 18
result = sorted(os0.listdir(path4))                                     # STEP 19
stat1 = os0.lstat(path4)                                                # STEP 20
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 21
os0.close(fd0)                                                          # STEP 22
str2 = ""                                                               # STEP 23
path0 += "/" + component2                                               # STEP 24
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 25
bytes1 = 0                                                              # STEP 26
result = os0.path.isdir(path0)                                          # STEP 27
os0.link(path4,path4)                                                   # STEP 28
os0.rename(path4,path0)                                                 # STEP 29
result = os0.path.exists(path0)                                         # STEP 30
result = os0.readlink(path0)                                            # STEP 31
stat4 = os0.stat(path4)                                                 # STEP 32
result = os0.path.isabs(path0)                                          # STEP 33
stat3 = os0.fstat(fd0)                                                  # STEP 34
result = os0.read(fd0,bytes4)                                           # STEP 35
result = stat4.st_size                                                  # STEP 36
os0.link(path4,path0)                                                   # STEP 37
result = os0.path.isabs(path0)                                          # STEP 38
bytes0 += 1                                                             # STEP 39
bytes3 = 0                                                              # STEP 40
stat1 = os0.fstat(fd0)                                                  # STEP 41
os0.rename(path0,path4)                                                 # STEP 42
component2 = "alpha"                                                    # STEP 43
os0.rename(path4,path0)                                                 # STEP 44
os0.write(fd0,str2)                                                     # STEP 45
str2 += " "                                                             # STEP 46
result = os0.readlink(path0)                                            # STEP 47
path4 = "/Volumes/ramdisk/test"                                         # STEP 48
result = os0.path.islink(path4)                                         # STEP 49
result = sorted(os0.listdir(path4))                                     # STEP 50
result = os0.path.islink(path0)                                         # STEP 51
os0.remove(path0)                                                       # STEP 52
stat1 = os0.stat(path0)                                                 # STEP 53
path0 += "/" + component1                                               # STEP 54
opener0 = newFakeOpener(os0)                                            # STEP 55
os0.write(fd0,str1)                                                     # STEP 56
path4 += "/" + component4                                               # STEP 57
stat2 = os0.stat(path0)                                                 # STEP 58
str4 = ""                                                               # STEP 59
bytes3 += 1                                                             # STEP 60
component4 = "lambda"                                                   # STEP 61
os0.link(path0,path0)                                                   # STEP 62
result = os0.path.exists(path4)                                         # STEP 63
component1 = "gamma"                                                    # STEP 64
stat1 = os0.stat(path0)                                                 # STEP 65
result = sorted(os0.listdir(path0))                                     # STEP 66
result = os0.path.isdir(path0)                                          # STEP 67
stat4 = os0.lstat(path4)                                                # STEP 68
bytes2 = 0                                                              # STEP 69
stat1 = os0.lstat(path4)                                                # STEP 70
stat2 = os0.lstat(path0)                                                # STEP 71
stat2 = os0.stat(path0)                                                 # STEP 72
stat1 = os0.fstat(fd0)                                                  # STEP 73
file0 = opener0(path4,'w')                                              # STEP 74
os0.write(fd0,str1)                                                     # STEP 75
path0 += "/" + component2                                               # STEP 76
stat0 = os0.stat(path4)                                                 # STEP 77
result = sorted(os0.listdir(path4))                                     # STEP 78
os0.link(path0,path4)                                                   # STEP 79
result = os0.path.isdir(path4)                                          # STEP 80
result = os0.path.exists(path0)                                         # STEP 81
result = file0.read(bytes3)                                             # STEP 82
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1078546c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #389 STEP #94 (0:00:30.000463) Sat Jul 22 06:48:18 2017 [ 890 stmts 1158 branches ] 38877 TOTAL ACTIONS (1295.87999987/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 20
STOPPING TESTING DUE TO TIMEOUT
42.1033073207 PERCENT COVERED
60.3187599182 TOTAL RUNTIME
759 EXECUTED
75803 TOTAL TEST OPERATIONS
53.9505167007 TIME SPENT EXECUTING TEST OPERATIONS
2.39462256432 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0477817058563 TIME SPENT CHECKING PROPERTIES
53.9982984066 TOTAL TIME SPENT RUNNING SUT
2.264929533 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes0 = 0                                                               # STEP 0
component1 = "d"                                                         # STEP 1
component2 = "phi"                                                       # STEP 2
component0 = "d"                                                         # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
component4 = "e"                                                         # STEP 5
str4 = ""                                                                # STEP 6
str4 += " "                                                              # STEP 7
component3 = "d"                                                         # STEP 8
str1 = ""                                                                # STEP 9
bytes4 = 0                                                              # STEP 10
path4 += "/" + component4                                               # STEP 11
path0 = "/Volumes/ramdisk/test"                                         # STEP 12
component4 = "d"                                                        # STEP 13
os0 = newFakeOS()                                                       # STEP 14
bytes4 += 1                                                             # STEP 15
stat0 = os0.lstat(path4)                                                # STEP 16
stat0 = os0.stat(path4)                                                 # STEP 17
path0 += "/" + component2                                               # STEP 18
result = sorted(os0.listdir(path4))                                     # STEP 19
stat1 = os0.lstat(path4)                                                # STEP 20
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 21
os0.close(fd0)                                                          # STEP 22
str2 = ""                                                               # STEP 23
path0 += "/" + component2                                               # STEP 24
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 25
bytes1 = 0                                                              # STEP 26
result = os0.path.isdir(path0)                                          # STEP 27
os0.link(path4,path4)                                                   # STEP 28
os0.rename(path4,path0)                                                 # STEP 29
result = os0.path.exists(path0)                                         # STEP 30
result = os0.readlink(path0)                                            # STEP 31
stat4 = os0.stat(path4)                                                 # STEP 32
result = os0.path.isabs(path0)                                          # STEP 33
stat3 = os0.fstat(fd0)                                                  # STEP 34
result = os0.read(fd0,bytes4)                                           # STEP 35
result = stat4.st_size                                                  # STEP 36
os0.link(path4,path0)                                                   # STEP 37
result = os0.path.isabs(path0)                                          # STEP 38
bytes0 += 1                                                             # STEP 39
bytes3 = 0                                                              # STEP 40
stat1 = os0.fstat(fd0)                                                  # STEP 41
os0.rename(path0,path4)                                                 # STEP 42
component2 = "alpha"                                                    # STEP 43
os0.rename(path4,path0)                                                 # STEP 44
os0.write(fd0,str2)                                                     # STEP 45
str2 += " "                                                             # STEP 46
result = os0.readlink(path0)                                            # STEP 47
path4 = "/Volumes/ramdisk/test"                                         # STEP 48
result = os0.path.islink(path4)                                         # STEP 49
result = sorted(os0.listdir(path4))                                     # STEP 50
result = os0.path.islink(path0)                                         # STEP 51
os0.remove(path0)                                                       # STEP 52
stat1 = os0.stat(path0)                                                 # STEP 53
path0 += "/" + component1                                               # STEP 54
opener0 = newFakeOpener(os0)                                            # STEP 55
os0.write(fd0,str1)                                                     # STEP 56
path4 += "/" + component4                                               # STEP 57
stat2 = os0.stat(path0)                                                 # STEP 58
str4 = ""                                                               # STEP 59
bytes3 += 1                                                             # STEP 60
component4 = "lambda"                                                   # STEP 61
os0.link(path0,path0)                                                   # STEP 62
result = os0.path.exists(path4)                                         # STEP 63
component1 = "gamma"                                                    # STEP 64
stat1 = os0.stat(path0)                                                 # STEP 65
result = sorted(os0.listdir(path0))                                     # STEP 66
result = os0.path.isdir(path0)                                          # STEP 67
stat4 = os0.lstat(path4)                                                # STEP 68
bytes2 = 0                                                              # STEP 69
stat1 = os0.lstat(path4)                                                # STEP 70
stat2 = os0.lstat(path0)                                                # STEP 71
stat2 = os0.stat(path0)                                                 # STEP 72
stat1 = os0.fstat(fd0)                                                  # STEP 73
file0 = opener0(path4,'w')                                              # STEP 74
os0.write(fd0,str1)                                                     # STEP 75
path0 += "/" + component2                                               # STEP 76
stat0 = os0.stat(path4)                                                 # STEP 77
result = sorted(os0.listdir(path4))                                     # STEP 78
os0.link(path0,path4)                                                   # STEP 79
result = os0.path.isdir(path4)                                          # STEP 80
result = os0.path.exists(path0)                                         # STEP 81
result = file0.read(bytes3)                                             # STEP 82
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1078546c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1165 BRANCHES COVERED
893 STATEMENTS COVERED
