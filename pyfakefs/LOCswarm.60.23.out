Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4385.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['kz']) == ([]) ",), <traceback object at 0x1030b35f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 51 steps

SAVING TEST AS failure.4385.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
component2 = "c"                                                         # STEP 1
bytes2 = 0                                                               # STEP 2
os0 = newFakeOS()                                                        # STEP 3
path4 += "/" + component2                                                # STEP 4
str0 = ""                                                                # STEP 5
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)             # STEP 6
result = os0.path.isdir(path4)                                           # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
bytes4 = 0                                                               # STEP 9
result = os0.path.exists(path4)                                         # STEP 10
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
str0 += 'k'                                                             # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
result = os0.read(fd0,bytes4)                                           # STEP 14
os0.makedirs(path4)                                                     # STEP 15
os0.rmdir(path4)                                                        # STEP 16
os0.rmdir(path4)                                                        # STEP 17
result = os0.path.isabs(path1)                                          # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
path1 += "/" + component2                                               # STEP 20
result = os0.path.isdir(path1)                                          # STEP 21
os0.rmdir(path4)                                                        # STEP 22
stat4 = os0.lstat(path1)                                                # STEP 23
result = os0.readlink(path1)                                            # STEP 24
result = stat4.st_nlink                                                 # STEP 25
result = os0.read(fd0,bytes2)                                           # STEP 26
result = os0.read(fd0,bytes4)                                           # STEP 27
file0 = opener0(path1,'r')                                              # STEP 28
result = os0.path.isabs(path4)                                          # STEP 29
bytes0 = 0                                                              # STEP 30
stat1 = os0.lstat(path4)                                                # STEP 31
result = os0.path.isabs(path4)                                          # STEP 32
component3 = "omega"                                                    # STEP 33
result = os0.read(fd0,bytes0)                                           # STEP 34
result = os0.path.exists(path4)                                         # STEP 35
os0.write(fd0,str0)                                                     # STEP 36
result = os0.readlink(path4)                                            # STEP 37
result = os0.path.lexists(path1)                                        # STEP 38
result = stat4.st_nlink                                                 # STEP 39
os0.rmdir(path4)                                                        # STEP 40
str0 += 'z'                                                             # STEP 41
os0.rmdir(path1)                                                        # STEP 42
result = os0.path.lexists(path4)                                        # STEP 43
result = os0.path.exists(path1)                                         # STEP 44
result = os0.read(fd0,bytes4)                                           # STEP 45
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
file0.truncate()                                                        # STEP 47
result = file0.readlines()                                              # STEP 48
os0.write(fd0,str0)                                                     # STEP 49
result = file0.readlines()                                              # STEP 50
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['kz']) == ([]) ",), <traceback object at 0x105124ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a78ec68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 97 steps

SAVING TEST AS failure.4385.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
result = sorted(os0.listdir(path4))                                      # STEP 3
os0.symlink(path3,path3)                                                 # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
bytes1 = 0                                                               # STEP 7
os0.symlink(path3,path4)                                                 # STEP 8
os0.symlink(path3,path2)                                                 # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.abspath(path3)                                        # STEP 11
file0 = opener0(path4,'w')                                              # STEP 12
result = sorted(os0.listdir(path2))                                     # STEP 13
component1 = "lambda"                                                   # STEP 14
result = os0.path.abspath(path2)                                        # STEP 15
path3 += "/" + component1                                               # STEP 16
result = os0.path.abspath(path3)                                        # STEP 17
result = sorted(os0.listdir(path4))                                     # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.rmdir(path3)                                                        # STEP 20
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 21
os0.close(fd0)                                                          # STEP 22
bytes1 += 1                                                             # STEP 23
result = os0.read(fd0,bytes1)                                           # STEP 24
bytes1 += 1                                                             # STEP 25
result = os0.path.abspath(path0)                                        # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 27
file0 = opener0(path0,'w')                                              # STEP 28
result = sorted(os0.listdir(path2))                                     # STEP 29
bytes0 = 0                                                              # STEP 30
bytes1 += 1                                                             # STEP 31
path3 = "/Volumes/ramdisk/test"                                         # STEP 32
str2 = ""                                                               # STEP 33
result = os0.path.abspath(path3)                                        # STEP 34
result = sorted(os0.listdir(path3))                                     # STEP 35
path4 += "/" + component1                                               # STEP 36
os0.path.getsize(path4)                                                 # STEP 37
file0 = opener0(path3,'w')                                              # STEP 38
str2 += 'j'                                                             # STEP 39
str1 = ""                                                               # STEP 40
os0.symlink(path2,path3)                                                # STEP 41
file0 = opener0(path2,'w')                                              # STEP 42
stat3 = os0.lstat(path4)                                                # STEP 43
result = sorted(os0.listdir(path2))                                     # STEP 44
str3 = ""                                                               # STEP 45
result = stat3.st_size                                                  # STEP 46
bytes4 = 0                                                              # STEP 47
os0.path.getsize(path4)                                                 # STEP 48
str0 = ""                                                               # STEP 49
result = sorted(os0.listdir(path4))                                     # STEP 50
bytes1 += 1                                                             # STEP 51
bytes1 += 1                                                             # STEP 52
path2 += "/" + component1                                               # STEP 53
os0.symlink(path3,path3)                                                # STEP 54
file0 = opener0(path4,'w')                                              # STEP 55
result = os0.read(fd0,bytes4)                                           # STEP 56
file0.seek(bytes1)                                                      # STEP 57
file0.seek(bytes0)                                                      # STEP 58
str4 = ""                                                               # STEP 59
str2 = ""                                                               # STEP 60
component4 = "h"                                                        # STEP 61
os0.rmdir(path2)                                                        # STEP 62
stat1 = os0.lstat(path2)                                                # STEP 63
stat3 = os0.lstat(path4)                                                # STEP 64
bytes4 += 1                                                             # STEP 65
bytes1 += 1                                                             # STEP 66
os0.rmdir(path4)                                                        # STEP 67
os0.symlink(path4,path2)                                                # STEP 68
result = os0.read(fd0,bytes0)                                           # STEP 69
str0 += 'f'                                                             # STEP 70
os0.symlink(path2,path0)                                                # STEP 71
result = os0.path.abspath(path3)                                        # STEP 72
os0.close(fd0)                                                          # STEP 73
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 74
result = sorted(os0.listdir(path0))                                     # STEP 75
stat4 = os0.lstat(path4)                                                # STEP 76
os0.symlink(path2,path0)                                                # STEP 77
os0.path.getsize(path4)                                                 # STEP 78
str0 = ""                                                               # STEP 79
file0.seek(bytes0)                                                      # STEP 80
result = stat3.st_size                                                  # STEP 81
bytes1 = 0                                                              # STEP 82
os0.symlink(path4,path3)                                                # STEP 83
result = os0.read(fd0,bytes1)                                           # STEP 84
result = stat1.st_size                                                  # STEP 85
stat1 = os0.lstat(path4)                                                # STEP 86
result = sorted(os0.listdir(path4))                                     # STEP 87
path0 = "/Volumes/ramdisk/test"                                         # STEP 88
bytes2 = 0                                                              # STEP 89
result = os0.path.abspath(path0)                                        # STEP 90
path2 += "/" + component4                                               # STEP 91
os0.rmdir(path4)                                                        # STEP 92
path2 += "/" + component4                                               # STEP 93
result = os0.path.abspath(path4)                                        # STEP 94
os0.path.getsize(path2)                                                 # STEP 95
result = file0.readline(bytes4)                                         # STEP 96
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104ad78c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #181 STEP #5 (0:00:30.000632) Sat Jul 22 00:37:45 2017 [ 902 stmts 1174 branches ] 17953 TOTAL ACTIONS (598.420730409/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x101ff5a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 55 steps

SAVING TEST AS failure.4385.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str0 = ""                                                                # STEP 1
str0 += 'k'                                                              # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
bytes2 = 0                                                               # STEP 4
result = os0.path.isabs(path0)                                           # STEP 5
str1 = ""                                                                # STEP 6
result = os0.path.isabs(path0)                                           # STEP 7
component3 = "omega"                                                     # STEP 8
str0 += 'k'                                                              # STEP 9
os0.symlink(path0,path0)                                                # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.path.dirname(path0)                                        # STEP 12
str1 += " "                                                             # STEP 13
bytes1 = 0                                                              # STEP 14
result = os0.path.isabs(path0)                                          # STEP 15
str3 = ""                                                               # STEP 16
file0 = opener0(path0,'w')                                              # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
result = os0.path.isabs(path3)                                          # STEP 19
path0 += "/" + component3                                               # STEP 20
bytes3 = 0                                                              # STEP 21
str4 = ""                                                               # STEP 22
result = os0.path.isabs(path0)                                          # STEP 23
stat4 = os0.stat(path0)                                                 # STEP 24
os0.path.getsize(path0)                                                 # STEP 25
result = os0.path.exists(path3)                                         # STEP 26
os0.path.getsize(path0)                                                 # STEP 27
bytes0 = 0                                                              # STEP 28
result = os0.path.isabs(path3)                                          # STEP 29
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 30
os0.symlink(path3,path0)                                                # STEP 31
os0.close(fd0)                                                          # STEP 32
os0.rename(path0,path3)                                                 # STEP 33
file0 = opener0(path0,'r')                                              # STEP 34
file0.write(str1)                                                       # STEP 35
path0 = "/Volumes/ramdisk/test"                                         # STEP 36
component0 = "gamma"                                                    # STEP 37
result = os0.path.exists(path0)                                         # STEP 38
result = os0.path.dirname(path0)                                        # STEP 39
result = os0.path.isabs(path3)                                          # STEP 40
str3 += 'z'                                                             # STEP 41
result = os0.path.exists(path3)                                         # STEP 42
bytes4 = 0                                                              # STEP 43
str1 = ""                                                               # STEP 44
str3 += 'e'                                                             # STEP 45
result = os0.path.isabs(path3)                                          # STEP 46
path0 = "/Volumes/ramdisk/test"                                         # STEP 47
result = file0.readlines()                                              # STEP 48
component2 = "f"                                                        # STEP 49
str3 += 'z'                                                             # STEP 50
os0.write(fd0,str0)                                                     # STEP 51
result = os0.path.exists(path0)                                         # STEP 52
file0.write(str3)                                                       # STEP 53
file0.truncate()                                                        # STEP 54
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x107c58b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1093d9200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 63 steps

SAVING TEST AS failure.4385.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes1 = 0                                                               # STEP 2
component2 = "a"                                                         # STEP 3
path2 += "/" + component2                                                # STEP 4
os0 = newFakeOS()                                                        # STEP 5
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 6
result = os0.read(fd0,bytes1)                                            # STEP 7
os0.remove(path3)                                                        # STEP 8
stat2 = os0.lstat(path2)                                                 # STEP 9
os0.remove(path2)                                                       # STEP 10
path2 += "/" + component2                                               # STEP 11
bytes4 = 0                                                              # STEP 12
stat4 = os0.fstat(fd0)                                                  # STEP 13
path2 += "/" + component2                                               # STEP 14
result = os0.path.isdir(path2)                                          # STEP 15
result = os0.path.isdir(path2)                                          # STEP 16
result = stat2.st_nlink                                                 # STEP 17
result = os0.path.islink(path3)                                         # STEP 18
result = os0.read(fd0,bytes1)                                           # STEP 19
os0.close(fd0)                                                          # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
component0 = "e"                                                        # STEP 22
component4 = "a"                                                        # STEP 23
result = os0.path.exists(path3)                                         # STEP 24
path2 += "/" + component4                                               # STEP 25
result = os0.path.isdir(path3)                                          # STEP 26
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 27
os0.close(fd0)                                                          # STEP 28
path3 += "/" + component2                                               # STEP 29
result = os0.path.islink(path2)                                         # STEP 30
path2 += "/" + component2                                               # STEP 31
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 32
stat3 = os0.lstat(path2)                                                # STEP 33
str3 = ""                                                               # STEP 34
component3 = "e"                                                        # STEP 35
os0.remove(path2)                                                       # STEP 36
result = os0.path.exists(path2)                                         # STEP 37
bytes2 = 0                                                              # STEP 38
result = stat2.st_nlink                                                 # STEP 39
result = os0.path.isdir(path2)                                          # STEP 40
str0 = ""                                                               # STEP 41
result = os0.read(fd0,bytes2)                                           # STEP 42
os0.remove(path2)                                                       # STEP 43
result = stat4.st_nlink                                                 # STEP 44
file0 = opener0(path3,'w')                                              # STEP 45
stat0 = os0.lstat(path3)                                                # STEP 46
result = os0.read(fd0,bytes2)                                           # STEP 47
component1 = "phi"                                                      # STEP 48
file0.write(str0)                                                       # STEP 49
result = os0.path.lexists(path3)                                        # STEP 50
result = os0.path.islink(path3)                                         # STEP 51
stat1 = os0.lstat(path3)                                                # STEP 52
stat3 = os0.lstat(path3)                                                # STEP 53
os0.close(fd0)                                                          # STEP 54
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 55
str1 = ""                                                               # STEP 56
os0.makedirs(path3)                                                     # STEP 57
os0.makedirs(path3)                                                     # STEP 58
file0.flush()                                                           # STEP 59
result = stat4.st_nlink                                                 # STEP 60
os0.remove(path3)                                                       # STEP 61
result = file0.readlines()                                              # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103fa9998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 98
STOPPING TESTING DUE TO TIMEOUT
42.9951690821 PERCENT COVERED
60.3223149776 TOTAL RUNTIME
359 EXECUTED
35764 TOTAL TEST OPERATIONS
42.1305480003 TIME SPENT EXECUTING TEST OPERATIONS
15.8161199093 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0254747867584 TIME SPENT CHECKING PROPERTIES
42.1560227871 TOTAL TIME SPENT RUNNING SUT
1.08324718475 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
component2 = "c"                                                         # STEP 1
bytes2 = 0                                                               # STEP 2
os0 = newFakeOS()                                                        # STEP 3
path4 += "/" + component2                                                # STEP 4
str0 = ""                                                                # STEP 5
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)             # STEP 6
result = os0.path.isdir(path4)                                           # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
bytes4 = 0                                                               # STEP 9
result = os0.path.exists(path4)                                         # STEP 10
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
str0 += 'k'                                                             # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
result = os0.read(fd0,bytes4)                                           # STEP 14
os0.makedirs(path4)                                                     # STEP 15
os0.rmdir(path4)                                                        # STEP 16
os0.rmdir(path4)                                                        # STEP 17
result = os0.path.isabs(path1)                                          # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
path1 += "/" + component2                                               # STEP 20
result = os0.path.isdir(path1)                                          # STEP 21
os0.rmdir(path4)                                                        # STEP 22
stat4 = os0.lstat(path1)                                                # STEP 23
result = os0.readlink(path1)                                            # STEP 24
result = stat4.st_nlink                                                 # STEP 25
result = os0.read(fd0,bytes2)                                           # STEP 26
result = os0.read(fd0,bytes4)                                           # STEP 27
file0 = opener0(path1,'r')                                              # STEP 28
result = os0.path.isabs(path4)                                          # STEP 29
bytes0 = 0                                                              # STEP 30
stat1 = os0.lstat(path4)                                                # STEP 31
result = os0.path.isabs(path4)                                          # STEP 32
component3 = "omega"                                                    # STEP 33
result = os0.read(fd0,bytes0)                                           # STEP 34
result = os0.path.exists(path4)                                         # STEP 35
os0.write(fd0,str0)                                                     # STEP 36
result = os0.readlink(path4)                                            # STEP 37
result = os0.path.lexists(path1)                                        # STEP 38
result = stat4.st_nlink                                                 # STEP 39
os0.rmdir(path4)                                                        # STEP 40
str0 += 'z'                                                             # STEP 41
os0.rmdir(path1)                                                        # STEP 42
result = os0.path.lexists(path4)                                        # STEP 43
result = os0.path.exists(path1)                                         # STEP 44
result = os0.read(fd0,bytes4)                                           # STEP 45
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
file0.truncate()                                                        # STEP 47
result = file0.readlines()                                              # STEP 48
os0.write(fd0,str0)                                                     # STEP 49
result = file0.readlines()                                              # STEP 50
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['kz']) == ([]) ",), <traceback object at 0x105124ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
result = sorted(os0.listdir(path4))                                      # STEP 3
os0.symlink(path3,path3)                                                 # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
bytes1 = 0                                                               # STEP 7
os0.symlink(path3,path4)                                                 # STEP 8
os0.symlink(path3,path2)                                                 # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.abspath(path3)                                        # STEP 11
file0 = opener0(path4,'w')                                              # STEP 12
result = sorted(os0.listdir(path2))                                     # STEP 13
component1 = "lambda"                                                   # STEP 14
result = os0.path.abspath(path2)                                        # STEP 15
path3 += "/" + component1                                               # STEP 16
result = os0.path.abspath(path3)                                        # STEP 17
result = sorted(os0.listdir(path4))                                     # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.rmdir(path3)                                                        # STEP 20
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 21
os0.close(fd0)                                                          # STEP 22
bytes1 += 1                                                             # STEP 23
result = os0.read(fd0,bytes1)                                           # STEP 24
bytes1 += 1                                                             # STEP 25
result = os0.path.abspath(path0)                                        # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 27
file0 = opener0(path0,'w')                                              # STEP 28
result = sorted(os0.listdir(path2))                                     # STEP 29
bytes0 = 0                                                              # STEP 30
bytes1 += 1                                                             # STEP 31
path3 = "/Volumes/ramdisk/test"                                         # STEP 32
str2 = ""                                                               # STEP 33
result = os0.path.abspath(path3)                                        # STEP 34
result = sorted(os0.listdir(path3))                                     # STEP 35
path4 += "/" + component1                                               # STEP 36
os0.path.getsize(path4)                                                 # STEP 37
file0 = opener0(path3,'w')                                              # STEP 38
str2 += 'j'                                                             # STEP 39
str1 = ""                                                               # STEP 40
os0.symlink(path2,path3)                                                # STEP 41
file0 = opener0(path2,'w')                                              # STEP 42
stat3 = os0.lstat(path4)                                                # STEP 43
result = sorted(os0.listdir(path2))                                     # STEP 44
str3 = ""                                                               # STEP 45
result = stat3.st_size                                                  # STEP 46
bytes4 = 0                                                              # STEP 47
os0.path.getsize(path4)                                                 # STEP 48
str0 = ""                                                               # STEP 49
result = sorted(os0.listdir(path4))                                     # STEP 50
bytes1 += 1                                                             # STEP 51
bytes1 += 1                                                             # STEP 52
path2 += "/" + component1                                               # STEP 53
os0.symlink(path3,path3)                                                # STEP 54
file0 = opener0(path4,'w')                                              # STEP 55
result = os0.read(fd0,bytes4)                                           # STEP 56
file0.seek(bytes1)                                                      # STEP 57
file0.seek(bytes0)                                                      # STEP 58
str4 = ""                                                               # STEP 59
str2 = ""                                                               # STEP 60
component4 = "h"                                                        # STEP 61
os0.rmdir(path2)                                                        # STEP 62
stat1 = os0.lstat(path2)                                                # STEP 63
stat3 = os0.lstat(path4)                                                # STEP 64
bytes4 += 1                                                             # STEP 65
bytes1 += 1                                                             # STEP 66
os0.rmdir(path4)                                                        # STEP 67
os0.symlink(path4,path2)                                                # STEP 68
result = os0.read(fd0,bytes0)                                           # STEP 69
str0 += 'f'                                                             # STEP 70
os0.symlink(path2,path0)                                                # STEP 71
result = os0.path.abspath(path3)                                        # STEP 72
os0.close(fd0)                                                          # STEP 73
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 74
result = sorted(os0.listdir(path0))                                     # STEP 75
stat4 = os0.lstat(path4)                                                # STEP 76
os0.symlink(path2,path0)                                                # STEP 77
os0.path.getsize(path4)                                                 # STEP 78
str0 = ""                                                               # STEP 79
file0.seek(bytes0)                                                      # STEP 80
result = stat3.st_size                                                  # STEP 81
bytes1 = 0                                                              # STEP 82
os0.symlink(path4,path3)                                                # STEP 83
result = os0.read(fd0,bytes1)                                           # STEP 84
result = stat1.st_size                                                  # STEP 85
stat1 = os0.lstat(path4)                                                # STEP 86
result = sorted(os0.listdir(path4))                                     # STEP 87
path0 = "/Volumes/ramdisk/test"                                         # STEP 88
bytes2 = 0                                                              # STEP 89
result = os0.path.abspath(path0)                                        # STEP 90
path2 += "/" + component4                                               # STEP 91
os0.rmdir(path4)                                                        # STEP 92
path2 += "/" + component4                                               # STEP 93
result = os0.path.abspath(path4)                                        # STEP 94
os0.path.getsize(path2)                                                 # STEP 95
result = file0.readline(bytes4)                                         # STEP 96
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104ad78c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
str0 = ""                                                                # STEP 1
str0 += 'k'                                                              # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
bytes2 = 0                                                               # STEP 4
result = os0.path.isabs(path0)                                           # STEP 5
str1 = ""                                                                # STEP 6
result = os0.path.isabs(path0)                                           # STEP 7
component3 = "omega"                                                     # STEP 8
str0 += 'k'                                                              # STEP 9
os0.symlink(path0,path0)                                                # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.path.dirname(path0)                                        # STEP 12
str1 += " "                                                             # STEP 13
bytes1 = 0                                                              # STEP 14
result = os0.path.isabs(path0)                                          # STEP 15
str3 = ""                                                               # STEP 16
file0 = opener0(path0,'w')                                              # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
result = os0.path.isabs(path3)                                          # STEP 19
path0 += "/" + component3                                               # STEP 20
bytes3 = 0                                                              # STEP 21
str4 = ""                                                               # STEP 22
result = os0.path.isabs(path0)                                          # STEP 23
stat4 = os0.stat(path0)                                                 # STEP 24
os0.path.getsize(path0)                                                 # STEP 25
result = os0.path.exists(path3)                                         # STEP 26
os0.path.getsize(path0)                                                 # STEP 27
bytes0 = 0                                                              # STEP 28
result = os0.path.isabs(path3)                                          # STEP 29
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 30
os0.symlink(path3,path0)                                                # STEP 31
os0.close(fd0)                                                          # STEP 32
os0.rename(path0,path3)                                                 # STEP 33
file0 = opener0(path0,'r')                                              # STEP 34
file0.write(str1)                                                       # STEP 35
path0 = "/Volumes/ramdisk/test"                                         # STEP 36
component0 = "gamma"                                                    # STEP 37
result = os0.path.exists(path0)                                         # STEP 38
result = os0.path.dirname(path0)                                        # STEP 39
result = os0.path.isabs(path3)                                          # STEP 40
str3 += 'z'                                                             # STEP 41
result = os0.path.exists(path3)                                         # STEP 42
bytes4 = 0                                                              # STEP 43
str1 = ""                                                               # STEP 44
str3 += 'e'                                                             # STEP 45
result = os0.path.isabs(path3)                                          # STEP 46
path0 = "/Volumes/ramdisk/test"                                         # STEP 47
result = file0.readlines()                                              # STEP 48
component2 = "f"                                                        # STEP 49
str3 += 'z'                                                             # STEP 50
os0.write(fd0,str0)                                                     # STEP 51
result = os0.path.exists(path0)                                         # STEP 52
file0.write(str3)                                                       # STEP 53
file0.truncate()                                                        # STEP 54
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x107c58b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes1 = 0                                                               # STEP 2
component2 = "a"                                                         # STEP 3
path2 += "/" + component2                                                # STEP 4
os0 = newFakeOS()                                                        # STEP 5
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 6
result = os0.read(fd0,bytes1)                                            # STEP 7
os0.remove(path3)                                                        # STEP 8
stat2 = os0.lstat(path2)                                                 # STEP 9
os0.remove(path2)                                                       # STEP 10
path2 += "/" + component2                                               # STEP 11
bytes4 = 0                                                              # STEP 12
stat4 = os0.fstat(fd0)                                                  # STEP 13
path2 += "/" + component2                                               # STEP 14
result = os0.path.isdir(path2)                                          # STEP 15
result = os0.path.isdir(path2)                                          # STEP 16
result = stat2.st_nlink                                                 # STEP 17
result = os0.path.islink(path3)                                         # STEP 18
result = os0.read(fd0,bytes1)                                           # STEP 19
os0.close(fd0)                                                          # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
component0 = "e"                                                        # STEP 22
component4 = "a"                                                        # STEP 23
result = os0.path.exists(path3)                                         # STEP 24
path2 += "/" + component4                                               # STEP 25
result = os0.path.isdir(path3)                                          # STEP 26
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 27
os0.close(fd0)                                                          # STEP 28
path3 += "/" + component2                                               # STEP 29
result = os0.path.islink(path2)                                         # STEP 30
path2 += "/" + component2                                               # STEP 31
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 32
stat3 = os0.lstat(path2)                                                # STEP 33
str3 = ""                                                               # STEP 34
component3 = "e"                                                        # STEP 35
os0.remove(path2)                                                       # STEP 36
result = os0.path.exists(path2)                                         # STEP 37
bytes2 = 0                                                              # STEP 38
result = stat2.st_nlink                                                 # STEP 39
result = os0.path.isdir(path2)                                          # STEP 40
str0 = ""                                                               # STEP 41
result = os0.read(fd0,bytes2)                                           # STEP 42
os0.remove(path2)                                                       # STEP 43
result = stat4.st_nlink                                                 # STEP 44
file0 = opener0(path3,'w')                                              # STEP 45
stat0 = os0.lstat(path3)                                                # STEP 46
result = os0.read(fd0,bytes2)                                           # STEP 47
component1 = "phi"                                                      # STEP 48
file0.write(str0)                                                       # STEP 49
result = os0.path.lexists(path3)                                        # STEP 50
result = os0.path.islink(path3)                                         # STEP 51
stat1 = os0.lstat(path3)                                                # STEP 52
stat3 = os0.lstat(path3)                                                # STEP 53
os0.close(fd0)                                                          # STEP 54
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 55
str1 = ""                                                               # STEP 56
os0.makedirs(path3)                                                     # STEP 57
os0.makedirs(path3)                                                     # STEP 58
file0.flush()                                                           # STEP 59
result = stat4.st_nlink                                                 # STEP 60
os0.remove(path3)                                                       # STEP 61
result = file0.readlines()                                              # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103fa9998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1188 BRANCHES COVERED
910 STATEMENTS COVERED
