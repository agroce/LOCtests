Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5879.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a35db90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 92 steps

SAVING TEST AS failure.5879.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "c"                                                         # STEP 0
component2 = "h"                                                         # STEP 1
component1 = "alpha"                                                     # STEP 2
component4 = "lambda"                                                    # STEP 3
component3 = "lambda"                                                    # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 = ""                                                                # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
os0 = newFakeOS()                                                        # STEP 8
os0.makedirs(path4)                                                      # STEP 9
result = os0.path.exists(path2)                                         # STEP 10
str3 += 'r'                                                             # STEP 11
path4 += "/" + component3                                               # STEP 12
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 13
str2 = ""                                                               # STEP 14
component3 = "delta"                                                    # STEP 15
os0.makedirs(path2)                                                     # STEP 16
str2 += 'x'                                                             # STEP 17
stat4 = os0.stat(path4)                                                 # STEP 18
result = os0.path.abspath(path4)                                        # STEP 19
str3 += 'y'                                                             # STEP 20
result = os0.path.dirname(path2)                                        # STEP 21
str2 += 's'                                                             # STEP 22
result = os0.path.abspath(path2)                                        # STEP 23
str2 += 'a'                                                             # STEP 24
result = os0.path.isdir(path2)                                          # STEP 25
str3 += 'w'                                                             # STEP 26
stat0 = os0.stat(path4)                                                 # STEP 27
stat3 = os0.stat(path4)                                                 # STEP 28
str3 += 'v'                                                             # STEP 29
result = stat0.st_size                                                  # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
os0.path.getsize(path4)                                                 # STEP 32
result = os0.path.isfile(path2)                                         # STEP 33
str0 = ""                                                               # STEP 34
bytes0 = 0                                                              # STEP 35
os0.mkdir(path4)                                                        # STEP 36
str2 = ""                                                               # STEP 37
path2 += "/" + component1                                               # STEP 38
result = os0.path.isabs(path4)                                          # STEP 39
os0.close(fd0)                                                          # STEP 40
str0 += 'z'                                                             # STEP 41
str2 += 'y'                                                             # STEP 42
result = os0.path.isabs(path4)                                          # STEP 43
str0 += 'c'                                                             # STEP 44
file0 = opener0(path2,'r')                                              # STEP 45
path2 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
file0 = opener0(path4,'w')                                              # STEP 48
str2 += 't'                                                             # STEP 49
os0.symlink(path4,path2)                                                # STEP 50
str2 += 'u'                                                             # STEP 51
str0 += 'y'                                                             # STEP 52
str2 += 'p'                                                             # STEP 53
str0 += 'y'                                                             # STEP 54
result = os0.path.lexists(path4)                                        # STEP 55
file0.next()                                                            # STEP 56
str3 += 'm'                                                             # STEP 57
component1 = "h"                                                        # STEP 58
bytes3 = 0                                                              # STEP 59
stat2 = os0.fstat(fd0)                                                  # STEP 60
str0 += 'p'                                                             # STEP 61
result = os0.path.exists(path2)                                         # STEP 62
os0.link(path4,path2)                                                   # STEP 63
str3 += 'o'                                                             # STEP 64
path4 += "/" + component2                                               # STEP 65
result = stat4.st_size                                                  # STEP 66
path2 += "/" + component1                                               # STEP 67
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 68
str2 += 'n'                                                             # STEP 69
component2 = "a"                                                        # STEP 70
os0.write(fd0,str2)                                                     # STEP 71
os0.symlink(path2,path2)                                                # STEP 72
component1 = "gamma"                                                    # STEP 73
os0.remove(path4)                                                       # STEP 74
str3 += 's'                                                             # STEP 75
os0.removedirs(path2)                                                   # STEP 76
str3 += 's'                                                             # STEP 77
result = os0.path.isabs(path4)                                          # STEP 78
str3 += 'j'                                                             # STEP 79
path2 += "/" + component1                                               # STEP 80
result = os0.path.exists(path4)                                         # STEP 81
component1 = "beta"                                                     # STEP 82
str0 += 'r'                                                             # STEP 83
result = os0.path.lexists(path2)                                        # STEP 84
stat1 = os0.lstat(path2)                                                # STEP 85
str0 += 'l'                                                             # STEP 86
str2 += 'f'                                                             # STEP 87
stat0 = os0.stat(path2)                                                 # STEP 88
str2 += 'j'                                                             # STEP 89
str0 += 't'                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064ea710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #426 STEP #84 (0:00:30.001146) Sat Jul 22 08:18:51 2017 [ 904 stmts 1175 branches ] 42576 TOTAL ACTIONS (1419.14578494/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 5
STOPPING TESTING DUE TO TIMEOUT
42.8093645485 PERCENT COVERED
60.3440961838 TOTAL RUNTIME
859 EXECUTED
85797 TOTAL TEST OPERATIONS
52.430365324 TIME SPENT EXECUTING TEST OPERATIONS
4.16265487671 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0535769462585 TIME SPENT CHECKING PROPERTIES
52.4839422703 TOTAL TIME SPENT RUNNING SUT
2.59693098068 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component0 = "c"                                                         # STEP 0
component2 = "h"                                                         # STEP 1
component1 = "alpha"                                                     # STEP 2
component4 = "lambda"                                                    # STEP 3
component3 = "lambda"                                                    # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 = ""                                                                # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
os0 = newFakeOS()                                                        # STEP 8
os0.makedirs(path4)                                                      # STEP 9
result = os0.path.exists(path2)                                         # STEP 10
str3 += 'r'                                                             # STEP 11
path4 += "/" + component3                                               # STEP 12
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 13
str2 = ""                                                               # STEP 14
component3 = "delta"                                                    # STEP 15
os0.makedirs(path2)                                                     # STEP 16
str2 += 'x'                                                             # STEP 17
stat4 = os0.stat(path4)                                                 # STEP 18
result = os0.path.abspath(path4)                                        # STEP 19
str3 += 'y'                                                             # STEP 20
result = os0.path.dirname(path2)                                        # STEP 21
str2 += 's'                                                             # STEP 22
result = os0.path.abspath(path2)                                        # STEP 23
str2 += 'a'                                                             # STEP 24
result = os0.path.isdir(path2)                                          # STEP 25
str3 += 'w'                                                             # STEP 26
stat0 = os0.stat(path4)                                                 # STEP 27
stat3 = os0.stat(path4)                                                 # STEP 28
str3 += 'v'                                                             # STEP 29
result = stat0.st_size                                                  # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
os0.path.getsize(path4)                                                 # STEP 32
result = os0.path.isfile(path2)                                         # STEP 33
str0 = ""                                                               # STEP 34
bytes0 = 0                                                              # STEP 35
os0.mkdir(path4)                                                        # STEP 36
str2 = ""                                                               # STEP 37
path2 += "/" + component1                                               # STEP 38
result = os0.path.isabs(path4)                                          # STEP 39
os0.close(fd0)                                                          # STEP 40
str0 += 'z'                                                             # STEP 41
str2 += 'y'                                                             # STEP 42
result = os0.path.isabs(path4)                                          # STEP 43
str0 += 'c'                                                             # STEP 44
file0 = opener0(path2,'r')                                              # STEP 45
path2 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
file0 = opener0(path4,'w')                                              # STEP 48
str2 += 't'                                                             # STEP 49
os0.symlink(path4,path2)                                                # STEP 50
str2 += 'u'                                                             # STEP 51
str0 += 'y'                                                             # STEP 52
str2 += 'p'                                                             # STEP 53
str0 += 'y'                                                             # STEP 54
result = os0.path.lexists(path4)                                        # STEP 55
file0.next()                                                            # STEP 56
str3 += 'm'                                                             # STEP 57
component1 = "h"                                                        # STEP 58
bytes3 = 0                                                              # STEP 59
stat2 = os0.fstat(fd0)                                                  # STEP 60
str0 += 'p'                                                             # STEP 61
result = os0.path.exists(path2)                                         # STEP 62
os0.link(path4,path2)                                                   # STEP 63
str3 += 'o'                                                             # STEP 64
path4 += "/" + component2                                               # STEP 65
result = stat4.st_size                                                  # STEP 66
path2 += "/" + component1                                               # STEP 67
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 68
str2 += 'n'                                                             # STEP 69
component2 = "a"                                                        # STEP 70
os0.write(fd0,str2)                                                     # STEP 71
os0.symlink(path2,path2)                                                # STEP 72
component1 = "gamma"                                                    # STEP 73
os0.remove(path4)                                                       # STEP 74
str3 += 's'                                                             # STEP 75
os0.removedirs(path2)                                                   # STEP 76
str3 += 's'                                                             # STEP 77
result = os0.path.isabs(path4)                                          # STEP 78
str3 += 'j'                                                             # STEP 79
path2 += "/" + component1                                               # STEP 80
result = os0.path.exists(path4)                                         # STEP 81
component1 = "beta"                                                     # STEP 82
str0 += 'r'                                                             # STEP 83
result = os0.path.lexists(path2)                                        # STEP 84
stat1 = os0.lstat(path2)                                                # STEP 85
str0 += 'l'                                                             # STEP 86
str2 += 'f'                                                             # STEP 87
stat0 = os0.stat(path2)                                                 # STEP 88
str2 += 'j'                                                             # STEP 89
str0 += 't'                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064ea710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1186 BRANCHES COVERED
910 STATEMENTS COVERED
