Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5780.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (kmanxmhv xbq) == () ',), <traceback object at 0x104b2d320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 58 steps

SAVING TEST AS failure.5780.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "gamma"                                                     # STEP 0
component3 = "f"                                                         # STEP 1
component0 = "gamma"                                                     # STEP 2
component2 = "gamma"                                                     # STEP 3
bytes1 = 0                                                               # STEP 4
os0 = newFakeOS()                                                        # STEP 5
component4 = "g"                                                         # STEP 6
str3 = ""                                                                # STEP 7
str3 += 'k'                                                              # STEP 8
str3 += 'w'                                                              # STEP 9
str3 += 'i'                                                             # STEP 10
str3 += 's'                                                             # STEP 11
str3 += 't'                                                             # STEP 12
str3 += 'q'                                                             # STEP 13
str3 += 'g'                                                             # STEP 14
str3 += 'p'                                                             # STEP 15
str3 += 'p'                                                             # STEP 16
str3 += 'l'                                                             # STEP 17
str3 += 'a'                                                             # STEP 18
bytes0 = 0                                                              # STEP 19
path0 = "/Volumes/ramdisk/test"                                         # STEP 20
str3 = ""                                                               # STEP 21
str3 += 'k'                                                             # STEP 22
bytes4 = 0                                                              # STEP 23
path0 += "/" + component3                                               # STEP 24
result = os0.path.abspath(path0)                                        # STEP 25
str4 = ""                                                               # STEP 26
str3 += 'm'                                                             # STEP 27
str3 += 'a'                                                             # STEP 28
component3 = "alpha"                                                    # STEP 29
str4 += 'v'                                                             # STEP 30
result = os0.path.isfile(path0)                                         # STEP 31
str3 += 'n'                                                             # STEP 32
str3 += 'x'                                                             # STEP 33
str3 += 'm'                                                             # STEP 34
stat2 = os0.lstat(path0)                                                # STEP 35
str4 += " "                                                             # STEP 36
bytes1 += 1                                                             # STEP 37
opener0 = newFakeOpener(os0)                                            # STEP 38
str4 += 'x'                                                             # STEP 39
str3 += 'h'                                                             # STEP 40
bytes3 = 0                                                              # STEP 41
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 42
stat1 = os0.lstat(path0)                                                # STEP 43
file0 = opener0(path0)                                                  # STEP 44
result = file0.readlines()                                              # STEP 45
str4 += 'b'                                                             # STEP 46
str4 += 'q'                                                             # STEP 47
os0.write(fd0,str3)                                                     # STEP 48
result = os0.path.lexists(path0)                                        # STEP 49
path0 = "/Volumes/ramdisk/test"                                         # STEP 50
str3 += 'x'                                                             # STEP 51
os0.write(fd0,str4)                                                     # STEP 52
str3 += 'x'                                                             # STEP 53
str4 += 'n'                                                             # STEP 54
os0.close(fd0)                                                          # STEP 55
str3 += " "                                                             # STEP 56
result = file0.read()                                                   # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (kmanxmhv xbq) == () ',), <traceback object at 0x10a3f1a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #459 STEP #92 (0:00:30.000316) Sat Jul 22 07:39:38 2017 [ 903 stmts 1177 branches ] 45850 TOTAL ACTIONS (1528.31722777/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 77
STOPPING TESTING DUE TO TIMEOUT
42.8465254552 PERCENT COVERED
60.3320131302 TOTAL RUNTIME
900 EXECUTED
89935 TOTAL TEST OPERATIONS
52.4315600395 TIME SPENT EXECUTING TEST OPERATIONS
4.22934627533 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0546374320984 TIME SPENT CHECKING PROPERTIES
52.4861974716 TOTAL TIME SPENT RUNNING SUT
2.61303901672 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "gamma"                                                     # STEP 0
component3 = "f"                                                         # STEP 1
component0 = "gamma"                                                     # STEP 2
component2 = "gamma"                                                     # STEP 3
bytes1 = 0                                                               # STEP 4
os0 = newFakeOS()                                                        # STEP 5
component4 = "g"                                                         # STEP 6
str3 = ""                                                                # STEP 7
str3 += 'k'                                                              # STEP 8
str3 += 'w'                                                              # STEP 9
str3 += 'i'                                                             # STEP 10
str3 += 's'                                                             # STEP 11
str3 += 't'                                                             # STEP 12
str3 += 'q'                                                             # STEP 13
str3 += 'g'                                                             # STEP 14
str3 += 'p'                                                             # STEP 15
str3 += 'p'                                                             # STEP 16
str3 += 'l'                                                             # STEP 17
str3 += 'a'                                                             # STEP 18
bytes0 = 0                                                              # STEP 19
path0 = "/Volumes/ramdisk/test"                                         # STEP 20
str3 = ""                                                               # STEP 21
str3 += 'k'                                                             # STEP 22
bytes4 = 0                                                              # STEP 23
path0 += "/" + component3                                               # STEP 24
result = os0.path.abspath(path0)                                        # STEP 25
str4 = ""                                                               # STEP 26
str3 += 'm'                                                             # STEP 27
str3 += 'a'                                                             # STEP 28
component3 = "alpha"                                                    # STEP 29
str4 += 'v'                                                             # STEP 30
result = os0.path.isfile(path0)                                         # STEP 31
str3 += 'n'                                                             # STEP 32
str3 += 'x'                                                             # STEP 33
str3 += 'm'                                                             # STEP 34
stat2 = os0.lstat(path0)                                                # STEP 35
str4 += " "                                                             # STEP 36
bytes1 += 1                                                             # STEP 37
opener0 = newFakeOpener(os0)                                            # STEP 38
str4 += 'x'                                                             # STEP 39
str3 += 'h'                                                             # STEP 40
bytes3 = 0                                                              # STEP 41
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 42
stat1 = os0.lstat(path0)                                                # STEP 43
file0 = opener0(path0)                                                  # STEP 44
result = file0.readlines()                                              # STEP 45
str4 += 'b'                                                             # STEP 46
str4 += 'q'                                                             # STEP 47
os0.write(fd0,str3)                                                     # STEP 48
result = os0.path.lexists(path0)                                        # STEP 49
path0 = "/Volumes/ramdisk/test"                                         # STEP 50
str3 += 'x'                                                             # STEP 51
os0.write(fd0,str4)                                                     # STEP 52
str3 += 'x'                                                             # STEP 53
str4 += 'n'                                                             # STEP 54
os0.close(fd0)                                                          # STEP 55
str3 += " "                                                             # STEP 56
result = file0.read()                                                   # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (kmanxmhv xbq) == () ',), <traceback object at 0x10a3f1a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1185 BRANCHES COVERED
909 STATEMENTS COVERED
