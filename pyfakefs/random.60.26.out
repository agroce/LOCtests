Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4491.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a604320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 70 steps

SAVING TEST AS failure.4491.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "gamma"                                                     # STEP 0
component4 = "delta"                                                     # STEP 1
component2 = "gamma"                                                     # STEP 2
component1 = "c"                                                         # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
path3 += "/" + component1                                                # STEP 5
str0 = ""                                                                # STEP 6
str0 += 'n'                                                              # STEP 7
os0 = newFakeOS()                                                        # STEP 8
result = os0.path.isdir(path3)                                           # STEP 9
str0 += 'f'                                                             # STEP 10
str4 = ""                                                               # STEP 11
component0 = "epsilon"                                                  # STEP 12
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 13
str4 += 'b'                                                             # STEP 14
stat2 = os0.fstat(fd0)                                                  # STEP 15
str4 += 'e'                                                             # STEP 16
str0 += 'z'                                                             # STEP 17
stat1 = os0.fstat(fd0)                                                  # STEP 18
str0 += 'u'                                                             # STEP 19
str0 += 't'                                                             # STEP 20
str0 += 'g'                                                             # STEP 21
str4 += 'b'                                                             # STEP 22
path4 = "/Volumes/ramdisk/test"                                         # STEP 23
bytes0 = 0                                                              # STEP 24
str0 += 'o'                                                             # STEP 25
os0.close(fd0)                                                          # STEP 26
str0 += 'i'                                                             # STEP 27
result = sorted(os0.listdir(path4))                                     # STEP 28
str4 += " "                                                             # STEP 29
result = os0.path.exists(path3)                                         # STEP 30
str0 += 'k'                                                             # STEP 31
opener0 = newFakeOpener(os0)                                            # STEP 32
result = os0.readlink(path4)                                            # STEP 33
component1 = "omega"                                                    # STEP 34
os0.path.getsize(path3)                                                 # STEP 35
str0 = ""                                                               # STEP 36
str4 += 'j'                                                             # STEP 37
bytes0 += 1                                                             # STEP 38
str0 += 'q'                                                             # STEP 39
str0 += 'k'                                                             # STEP 40
result = os0.path.exists(path3)                                         # STEP 41
str0 += 'v'                                                             # STEP 42
result = os0.readlink(path3)                                            # STEP 43
result = sorted(os0.listdir(path4))                                     # STEP 44
result = os0.path.isabs(path4)                                          # STEP 45
str4 += 'n'                                                             # STEP 46
os0.link(path3,path4)                                                   # STEP 47
bytes0 += 1                                                             # STEP 48
result = os0.path.exists(path3)                                         # STEP 49
result = os0.path.abspath(path3)                                        # STEP 50
str4 += 'h'                                                             # STEP 51
str4 += 'j'                                                             # STEP 52
path1 = "/Volumes/ramdisk/test"                                         # STEP 53
str0 += 'e'                                                             # STEP 54
file0 = opener0(path3,'r')                                              # STEP 55
path3 = "/Volumes/ramdisk/test"                                         # STEP 56
result = os0.readlink(path1)                                            # STEP 57
file0.truncate()                                                        # STEP 58
str4 += 'h'                                                             # STEP 59
os0.symlink(path1,path4)                                                # STEP 60
result = os0.readlink(path3)                                            # STEP 61
os0.write(fd0,str4)                                                     # STEP 62
os0.write(fd0,str4)                                                     # STEP 63
os0.link(path1,path4)                                                   # STEP 64
str0 += 'e'                                                             # STEP 65
result = os0.readlink(path3)                                            # STEP 66
str0 += 'n'                                                             # STEP 67
str4 += 'y'                                                             # STEP 68
file0.truncate()                                                        # STEP 69
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x107702908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #439 STEP #33 (0:00:30.001111) Sat Jul 22 00:54:05 2017 [ 886 stmts 1155 branches ] 43803 TOTAL ACTIONS (1460.04593975/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 37
STOPPING TESTING DUE TO TIMEOUT
42.7722036418 PERCENT COVERED
60.3120548725 TOTAL RUNTIME
867 EXECUTED
86607 TOTAL TEST OPERATIONS
52.6765670776 TIME SPENT EXECUTING TEST OPERATIONS
4.06658887863 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0532908439636 TIME SPENT CHECKING PROPERTIES
52.7298579216 TOTAL TIME SPENT RUNNING SUT
2.51651024818 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "gamma"                                                     # STEP 0
component4 = "delta"                                                     # STEP 1
component2 = "gamma"                                                     # STEP 2
component1 = "c"                                                         # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
path3 += "/" + component1                                                # STEP 5
str0 = ""                                                                # STEP 6
str0 += 'n'                                                              # STEP 7
os0 = newFakeOS()                                                        # STEP 8
result = os0.path.isdir(path3)                                           # STEP 9
str0 += 'f'                                                             # STEP 10
str4 = ""                                                               # STEP 11
component0 = "epsilon"                                                  # STEP 12
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 13
str4 += 'b'                                                             # STEP 14
stat2 = os0.fstat(fd0)                                                  # STEP 15
str4 += 'e'                                                             # STEP 16
str0 += 'z'                                                             # STEP 17
stat1 = os0.fstat(fd0)                                                  # STEP 18
str0 += 'u'                                                             # STEP 19
str0 += 't'                                                             # STEP 20
str0 += 'g'                                                             # STEP 21
str4 += 'b'                                                             # STEP 22
path4 = "/Volumes/ramdisk/test"                                         # STEP 23
bytes0 = 0                                                              # STEP 24
str0 += 'o'                                                             # STEP 25
os0.close(fd0)                                                          # STEP 26
str0 += 'i'                                                             # STEP 27
result = sorted(os0.listdir(path4))                                     # STEP 28
str4 += " "                                                             # STEP 29
result = os0.path.exists(path3)                                         # STEP 30
str0 += 'k'                                                             # STEP 31
opener0 = newFakeOpener(os0)                                            # STEP 32
result = os0.readlink(path4)                                            # STEP 33
component1 = "omega"                                                    # STEP 34
os0.path.getsize(path3)                                                 # STEP 35
str0 = ""                                                               # STEP 36
str4 += 'j'                                                             # STEP 37
bytes0 += 1                                                             # STEP 38
str0 += 'q'                                                             # STEP 39
str0 += 'k'                                                             # STEP 40
result = os0.path.exists(path3)                                         # STEP 41
str0 += 'v'                                                             # STEP 42
result = os0.readlink(path3)                                            # STEP 43
result = sorted(os0.listdir(path4))                                     # STEP 44
result = os0.path.isabs(path4)                                          # STEP 45
str4 += 'n'                                                             # STEP 46
os0.link(path3,path4)                                                   # STEP 47
bytes0 += 1                                                             # STEP 48
result = os0.path.exists(path3)                                         # STEP 49
result = os0.path.abspath(path3)                                        # STEP 50
str4 += 'h'                                                             # STEP 51
str4 += 'j'                                                             # STEP 52
path1 = "/Volumes/ramdisk/test"                                         # STEP 53
str0 += 'e'                                                             # STEP 54
file0 = opener0(path3,'r')                                              # STEP 55
path3 = "/Volumes/ramdisk/test"                                         # STEP 56
result = os0.readlink(path1)                                            # STEP 57
file0.truncate()                                                        # STEP 58
str4 += 'h'                                                             # STEP 59
os0.symlink(path1,path4)                                                # STEP 60
result = os0.readlink(path3)                                            # STEP 61
os0.write(fd0,str4)                                                     # STEP 62
os0.write(fd0,str4)                                                     # STEP 63
os0.link(path1,path4)                                                   # STEP 64
str0 += 'e'                                                             # STEP 65
result = os0.readlink(path3)                                            # STEP 66
str0 += 'n'                                                             # STEP 67
str4 += 'y'                                                             # STEP 68
file0.truncate()                                                        # STEP 69
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x107702908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1179 BRANCHES COVERED
904 STATEMENTS COVERED
