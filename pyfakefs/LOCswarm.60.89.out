Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5807.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #181 STEP #54 (0:00:30.001297) Sat Jul 22 07:49:25 2017 [ 898 stmts 1164 branches ] 18054 TOTAL ACTIONS (601.773983364/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x105ffd098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 91 steps

SAVING TEST AS failure.5807.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes1 = 0                                                               # STEP 0
bytes4 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
str3 = ""                                                                # STEP 3
str4 = ""                                                                # STEP 4
bytes3 = 0                                                               # STEP 5
bytes4 += 1                                                              # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
component2 = "phi"                                                       # STEP 8
result = os0.path.isabs(path2)                                           # STEP 9
str4 += 'l'                                                             # STEP 10
str4 += 'd'                                                             # STEP 11
bytes3 += 1                                                             # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
result = os0.path.abspath(path2)                                        # STEP 14
bytes3 += 1                                                             # STEP 15
result = os0.path.islink(path2)                                         # STEP 16
result = os0.path.exists(path2)                                         # STEP 17
path2 += "/" + component2                                               # STEP 18
os0.rmdir(path2)                                                        # STEP 19
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 20
stat2 = os0.lstat(path2)                                                # STEP 21
file0 = opener0(path2,'a')                                              # STEP 22
str4 += 'd'                                                             # STEP 23
file0.write(str3)                                                       # STEP 24
str3 += 'n'                                                             # STEP 25
stat3 = os0.lstat(path2)                                                # STEP 26
component2 = "a"                                                        # STEP 27
stat0 = os0.lstat(path2)                                                # STEP 28
result = os0.path.exists(path2)                                         # STEP 29
bytes2 = 0                                                              # STEP 30
result = os0.path.isfile(path2)                                         # STEP 31
result = os0.path.abspath(path2)                                        # STEP 32
result = os0.path.isfile(path2)                                         # STEP 33
bytes2 += 1                                                             # STEP 34
result = os0.path.isfile(path2)                                         # STEP 35
result = file0.read()                                                   # STEP 36
os0.write(fd0,str4)                                                     # STEP 37
result = os0.path.islink(path2)                                         # STEP 38
bytes4 += 1                                                             # STEP 39
result = os0.path.islink(path2)                                         # STEP 40
os0.rmdir(path2)                                                        # STEP 41
os0.rmdir(path2)                                                        # STEP 42
bytes3 += 1                                                             # STEP 43
result = os0.path.isabs(path2)                                          # STEP 44
stat1 = os0.stat(path2)                                                 # STEP 45
file0.write(str3)                                                       # STEP 46
stat4 = os0.lstat(path2)                                                # STEP 47
result = os0.path.islink(path2)                                         # STEP 48
result = os0.path.isfile(path2)                                         # STEP 49
result = os0.path.abspath(path2)                                        # STEP 50
result = os0.path.islink(path2)                                         # STEP 51
result = os0.read(fd0,bytes4)                                           # STEP 52
result = file0.readline(bytes2)                                         # STEP 53
result = file0.read()                                                   # STEP 54
path2 += "/" + component2                                               # STEP 55
result = stat0.st_size                                                  # STEP 56
bytes3 += 1                                                             # STEP 57
bytes1 += 1                                                             # STEP 58
result = file0.readline(bytes3)                                         # STEP 59
str3 += 'v'                                                             # STEP 60
result = os0.path.isabs(path2)                                          # STEP 61
file0.write(str4)                                                       # STEP 62
bytes1 += 1                                                             # STEP 63
stat0 = os0.lstat(path2)                                                # STEP 64
result = stat1.st_nlink                                                 # STEP 65
str0 = ""                                                               # STEP 66
result = os0.path.islink(path2)                                         # STEP 67
stat1 = os0.lstat(path2)                                                # STEP 68
os0.write(fd0,str0)                                                     # STEP 69
component0 = "d"                                                        # STEP 70
result = os0.path.exists(path2)                                         # STEP 71
result = file0.read()                                                   # STEP 72
bytes2 += 1                                                             # STEP 73
str0 += 'i'                                                             # STEP 74
os0.rmdir(path2)                                                        # STEP 75
result = os0.path.abspath(path2)                                        # STEP 76
component1 = "b"                                                        # STEP 77
result = file0.read(bytes2)                                             # STEP 78
os0.rmdir(path2)                                                        # STEP 79
result = file0.read(bytes4)                                             # STEP 80
str0 += 'h'                                                             # STEP 81
os0.rmdir(path2)                                                        # STEP 82
path3 = "/Volumes/ramdisk/test"                                         # STEP 83
str4 += 'l'                                                             # STEP 84
os0.rename(path2,path3)                                                 # STEP 85
os0.rmdir(path2)                                                        # STEP 86
result = os0.path.islink(path2)                                         # STEP 87
component4 = "gamma"                                                    # STEP 88
os0.rename(path2,path3)                                                 # STEP 89
result = stat4.st_size                                                  # STEP 90
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x1084f85a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107a80830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 46 steps

SAVING TEST AS failure.5807.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "e"                                                         # STEP 0
component2 = "alpha"                                                     # STEP 1
component1 = "g"                                                         # STEP 2
bytes3 = 0                                                               # STEP 3
path1 = "/Volumes/ramdisk/test"                                          # STEP 4
component3 = "beta"                                                      # STEP 5
path1 += "/" + component0                                                # STEP 6
str3 = ""                                                                # STEP 7
os0 = newFakeOS()                                                        # STEP 8
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.abspath(path1)                                        # STEP 10
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 11
result = os0.path.isabs(path0)                                          # STEP 12
result = sorted(os0.listdir(path0))                                     # STEP 13
result = os0.path.dirname(path0)                                        # STEP 14
component4 = "delta"                                                    # STEP 15
result = os0.path.exists(path0)                                         # STEP 16
path1 += "/" + component1                                               # STEP 17
result = os0.path.lexists(path0)                                        # STEP 18
stat2 = os0.fstat(fd0)                                                  # STEP 19
result = os0.read(fd0,bytes3)                                           # STEP 20
result = os0.read(fd0,bytes3)                                           # STEP 21
result = os0.path.abspath(path0)                                        # STEP 22
str2 = ""                                                               # STEP 23
result = os0.path.lexists(path1)                                        # STEP 24
result = os0.path.abspath(path0)                                        # STEP 25
result = os0.read(fd0,bytes3)                                           # STEP 26
os0.write(fd0,str2)                                                     # STEP 27
stat1 = os0.fstat(fd0)                                                  # STEP 28
path0 += "/" + component4                                               # STEP 29
os0.close(fd0)                                                          # STEP 30
result = stat2.st_size                                                  # STEP 31
result = os0.path.dirname(path0)                                        # STEP 32
result = os0.path.dirname(path0)                                        # STEP 33
stat3 = os0.lstat(path1)                                                # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
path1 += "/" + component1                                               # STEP 36
result = os0.read(fd0,bytes3)                                           # STEP 37
component4 = "gamma"                                                    # STEP 38
result = os0.path.abspath(path0)                                        # STEP 39
result = os0.path.exists(path0)                                         # STEP 40
file0 = opener0(path0,'w')                                              # STEP 41
file0.truncate()                                                        # STEP 42
result = os0.read(fd0,bytes3)                                           # STEP 43
result = os0.path.dirname(path1)                                        # STEP 44
result = file0.readline()                                               # STEP 45
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107ada2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 58
STOPPING TESTING DUE TO TIMEOUT
42.735042735 PERCENT COVERED
60.3246059418 TOTAL RUNTIME
363 EXECUTED
36195 TOTAL TEST OPERATIONS
42.4009385109 TIME SPENT EXECUTING TEST OPERATIONS
15.7205572128 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0248174667358 TIME SPENT CHECKING PROPERTIES
42.4257559776 TOTAL TIME SPENT RUNNING SUT
1.06786346436 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes1 = 0                                                               # STEP 0
bytes4 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
str3 = ""                                                                # STEP 3
str4 = ""                                                                # STEP 4
bytes3 = 0                                                               # STEP 5
bytes4 += 1                                                              # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
component2 = "phi"                                                       # STEP 8
result = os0.path.isabs(path2)                                           # STEP 9
str4 += 'l'                                                             # STEP 10
str4 += 'd'                                                             # STEP 11
bytes3 += 1                                                             # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
result = os0.path.abspath(path2)                                        # STEP 14
bytes3 += 1                                                             # STEP 15
result = os0.path.islink(path2)                                         # STEP 16
result = os0.path.exists(path2)                                         # STEP 17
path2 += "/" + component2                                               # STEP 18
os0.rmdir(path2)                                                        # STEP 19
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 20
stat2 = os0.lstat(path2)                                                # STEP 21
file0 = opener0(path2,'a')                                              # STEP 22
str4 += 'd'                                                             # STEP 23
file0.write(str3)                                                       # STEP 24
str3 += 'n'                                                             # STEP 25
stat3 = os0.lstat(path2)                                                # STEP 26
component2 = "a"                                                        # STEP 27
stat0 = os0.lstat(path2)                                                # STEP 28
result = os0.path.exists(path2)                                         # STEP 29
bytes2 = 0                                                              # STEP 30
result = os0.path.isfile(path2)                                         # STEP 31
result = os0.path.abspath(path2)                                        # STEP 32
result = os0.path.isfile(path2)                                         # STEP 33
bytes2 += 1                                                             # STEP 34
result = os0.path.isfile(path2)                                         # STEP 35
result = file0.read()                                                   # STEP 36
os0.write(fd0,str4)                                                     # STEP 37
result = os0.path.islink(path2)                                         # STEP 38
bytes4 += 1                                                             # STEP 39
result = os0.path.islink(path2)                                         # STEP 40
os0.rmdir(path2)                                                        # STEP 41
os0.rmdir(path2)                                                        # STEP 42
bytes3 += 1                                                             # STEP 43
result = os0.path.isabs(path2)                                          # STEP 44
stat1 = os0.stat(path2)                                                 # STEP 45
file0.write(str3)                                                       # STEP 46
stat4 = os0.lstat(path2)                                                # STEP 47
result = os0.path.islink(path2)                                         # STEP 48
result = os0.path.isfile(path2)                                         # STEP 49
result = os0.path.abspath(path2)                                        # STEP 50
result = os0.path.islink(path2)                                         # STEP 51
result = os0.read(fd0,bytes4)                                           # STEP 52
result = file0.readline(bytes2)                                         # STEP 53
result = file0.read()                                                   # STEP 54
path2 += "/" + component2                                               # STEP 55
result = stat0.st_size                                                  # STEP 56
bytes3 += 1                                                             # STEP 57
bytes1 += 1                                                             # STEP 58
result = file0.readline(bytes3)                                         # STEP 59
str3 += 'v'                                                             # STEP 60
result = os0.path.isabs(path2)                                          # STEP 61
file0.write(str4)                                                       # STEP 62
bytes1 += 1                                                             # STEP 63
stat0 = os0.lstat(path2)                                                # STEP 64
result = stat1.st_nlink                                                 # STEP 65
str0 = ""                                                               # STEP 66
result = os0.path.islink(path2)                                         # STEP 67
stat1 = os0.lstat(path2)                                                # STEP 68
os0.write(fd0,str0)                                                     # STEP 69
component0 = "d"                                                        # STEP 70
result = os0.path.exists(path2)                                         # STEP 71
result = file0.read()                                                   # STEP 72
bytes2 += 1                                                             # STEP 73
str0 += 'i'                                                             # STEP 74
os0.rmdir(path2)                                                        # STEP 75
result = os0.path.abspath(path2)                                        # STEP 76
component1 = "b"                                                        # STEP 77
result = file0.read(bytes2)                                             # STEP 78
os0.rmdir(path2)                                                        # STEP 79
result = file0.read(bytes4)                                             # STEP 80
str0 += 'h'                                                             # STEP 81
os0.rmdir(path2)                                                        # STEP 82
path3 = "/Volumes/ramdisk/test"                                         # STEP 83
str4 += 'l'                                                             # STEP 84
os0.rename(path2,path3)                                                 # STEP 85
os0.rmdir(path2)                                                        # STEP 86
result = os0.path.islink(path2)                                         # STEP 87
component4 = "gamma"                                                    # STEP 88
os0.rename(path2,path3)                                                 # STEP 89
result = stat4.st_size                                                  # STEP 90
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x1084f85a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
component0 = "e"                                                         # STEP 0
component2 = "alpha"                                                     # STEP 1
component1 = "g"                                                         # STEP 2
bytes3 = 0                                                               # STEP 3
path1 = "/Volumes/ramdisk/test"                                          # STEP 4
component3 = "beta"                                                      # STEP 5
path1 += "/" + component0                                                # STEP 6
str3 = ""                                                                # STEP 7
os0 = newFakeOS()                                                        # STEP 8
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.abspath(path1)                                        # STEP 10
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 11
result = os0.path.isabs(path0)                                          # STEP 12
result = sorted(os0.listdir(path0))                                     # STEP 13
result = os0.path.dirname(path0)                                        # STEP 14
component4 = "delta"                                                    # STEP 15
result = os0.path.exists(path0)                                         # STEP 16
path1 += "/" + component1                                               # STEP 17
result = os0.path.lexists(path0)                                        # STEP 18
stat2 = os0.fstat(fd0)                                                  # STEP 19
result = os0.read(fd0,bytes3)                                           # STEP 20
result = os0.read(fd0,bytes3)                                           # STEP 21
result = os0.path.abspath(path0)                                        # STEP 22
str2 = ""                                                               # STEP 23
result = os0.path.lexists(path1)                                        # STEP 24
result = os0.path.abspath(path0)                                        # STEP 25
result = os0.read(fd0,bytes3)                                           # STEP 26
os0.write(fd0,str2)                                                     # STEP 27
stat1 = os0.fstat(fd0)                                                  # STEP 28
path0 += "/" + component4                                               # STEP 29
os0.close(fd0)                                                          # STEP 30
result = stat2.st_size                                                  # STEP 31
result = os0.path.dirname(path0)                                        # STEP 32
result = os0.path.dirname(path0)                                        # STEP 33
stat3 = os0.lstat(path1)                                                # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
path1 += "/" + component1                                               # STEP 36
result = os0.read(fd0,bytes3)                                           # STEP 37
component4 = "gamma"                                                    # STEP 38
result = os0.path.abspath(path0)                                        # STEP 39
result = os0.path.exists(path0)                                         # STEP 40
file0 = opener0(path0,'w')                                              # STEP 41
file0.truncate()                                                        # STEP 42
result = os0.read(fd0,bytes3)                                           # STEP 43
result = os0.path.dirname(path1)                                        # STEP 44
result = file0.readline()                                               # STEP 45
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107ada2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1180 BRANCHES COVERED
905 STATEMENTS COVERED
