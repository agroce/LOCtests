Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5409.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x108062950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
Original test has 85 steps

SAVING TEST AS failure.5409.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "omega"                                                     # STEP 0
str4 = ""                                                                # STEP 1
os0 = newFakeOS()                                                        # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
bytes3 = 0                                                               # STEP 4
str4 += 't'                                                              # STEP 5
component3 = "phi"                                                       # STEP 6
component4 = "delta"                                                     # STEP 7
str4 += 'd'                                                              # STEP 8
bytes3 += 1                                                              # STEP 9
component1 = "epsilon"                                                  # STEP 10
str4 += " "                                                             # STEP 11
str0 = ""                                                               # STEP 12
str3 = ""                                                               # STEP 13
str1 = ""                                                               # STEP 14
component0 = "a"                                                        # STEP 15
bytes4 = 0                                                              # STEP 16
str4 += 'w'                                                             # STEP 17
str2 = ""                                                               # STEP 18
bytes4 += 1                                                             # STEP 19
str4 = ""                                                               # STEP 20
bytes3 += 1                                                             # STEP 21
str1 += 'i'                                                             # STEP 22
bytes3 = 0                                                              # STEP 23
str1 += " "                                                             # STEP 24
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
result = os0.path.islink(path2)                                         # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
result = os0.path.isfile(path2)                                         # STEP 28
bytes3 += 1                                                             # STEP 29
path2 += "/" + component4                                               # STEP 30
path0 = "/Volumes/ramdisk/test"                                         # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
os0.remove(path2)                                                       # STEP 33
file0 = opener0(path0,'w')                                              # STEP 34
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 35
os0.close(fd0)                                                          # STEP 36
file0 = opener0(path0,'a')                                              # STEP 37
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
str1 += " "                                                             # STEP 39
result = os0.path.isdir(path2)                                          # STEP 40
file0 = opener0(path2,'r')                                              # STEP 41
result = os0.read(fd0,bytes4)                                           # STEP 42
os0.mkdir(path0)                                                        # STEP 43
result = sorted(os0.listdir(path0))                                     # STEP 44
result = os0.path.isfile(path2)                                         # STEP 45
result = file0.readline(bytes3)                                         # STEP 46
os0.mkdir(path0)                                                        # STEP 47
result = os0.path.islink(path0)                                         # STEP 48
stat1 = os0.lstat(path2)                                                # STEP 49
path0 += "/" + component3                                               # STEP 50
os0.rename(path0,path2)                                                 # STEP 51
os0.mkdir(path2)                                                        # STEP 52
stat2 = os0.stat(path2)                                                 # STEP 53
file0.next()                                                            # STEP 54
result = stat1.st_nlink                                                 # STEP 55
result = sorted(os0.listdir(path0))                                     # STEP 56
result = os0.path.exists(path2)                                         # STEP 57
result = stat1.st_nlink                                                 # STEP 58
result = stat2.st_size                                                  # STEP 59
os0.rmdir(path2)                                                        # STEP 60
stat4 = os0.stat(path2)                                                 # STEP 61
result = file0.read(bytes3)                                             # STEP 62
os0.close(fd0)                                                          # STEP 63
os0.makedirs(path2)                                                     # STEP 64
result = os0.path.isfile(path2)                                         # STEP 65
str0 += " "                                                             # STEP 66
file0.seek(bytes4)                                                      # STEP 67
result = os0.path.abspath(path0)                                        # STEP 68
result = os0.read(fd0,bytes4)                                           # STEP 69
os0.symlink(path0,path2)                                                # STEP 70
file0.truncate()                                                        # STEP 71
os0.link(path0,path0)                                                   # STEP 72
result = os0.readlink(path2)                                            # STEP 73
os0.mkdir(path2)                                                        # STEP 74
os0.rename(path0,path2)                                                 # STEP 75
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 76
result = os0.path.isfile(path2)                                         # STEP 77
result = os0.path.exists(path0)                                         # STEP 78
stat3 = os0.fstat(fd0)                                                  # STEP 79
bytes2 = 0                                                              # STEP 80
result = stat4.st_nlink                                                 # STEP 81
result = os0.path.dirname(path2)                                        # STEP 82
os0.write(fd0,str3)                                                     # STEP 83
result = file0.read(bytes4)                                             # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10839f248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (4) == (6) ',), <traceback object at 0x1087718c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21936, in act460
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 50 steps

SAVING TEST AS failure.5409.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes2 = 0                                                               # STEP 1
str2 = ""                                                                # STEP 2
bytes2 += 1                                                              # STEP 3
os0 = newFakeOS()                                                        # STEP 4
component3 = "delta"                                                     # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.link(path3,path4)                                                    # STEP 7
result = os0.path.isfile(path4)                                          # STEP 8
os0.remove(path4)                                                        # STEP 9
os0.link(path3,path4)                                                   # STEP 10
os0.mkdir(path3)                                                        # STEP 11
component0 = "b"                                                        # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
os0.symlink(path4,path4)                                                # STEP 14
os0.symlink(path1,path3)                                                # STEP 15
result = os0.path.lexists(path3)                                        # STEP 16
str2 += 'n'                                                             # STEP 17
result = os0.path.lexists(path1)                                        # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
os0.remove(path1)                                                       # STEP 20
result = os0.path.isabs(path4)                                          # STEP 21
str2 += 's'                                                             # STEP 22
path1 += "/" + component3                                               # STEP 23
os0.remove(path4)                                                       # STEP 24
os0.mkdir(path4)                                                        # STEP 25
os0.rmdir(path1)                                                        # STEP 26
file0 = opener0(path1,'a')                                              # STEP 27
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 28
file0.write(str2)                                                       # STEP 29
os0.write(fd0,str2)                                                     # STEP 30
path1 += "/" + component3                                               # STEP 31
stat0 = os0.fstat(fd0)                                                  # STEP 32
result = os0.path.abspath(path1)                                        # STEP 33
file0.write(str2)                                                       # STEP 34
file0.seek(bytes2)                                                      # STEP 35
stat1 = os0.lstat(path1)                                                # STEP 36
str2 += " "                                                             # STEP 37
os0.makedirs(path4)                                                     # STEP 38
os0.rmdir(path1)                                                        # STEP 39
result = os0.path.isfile(path1)                                         # STEP 40
component1 = "phi"                                                      # STEP 41
os0.remove(path3)                                                       # STEP 42
path4 += "/" + component3                                               # STEP 43
os0.remove(path3)                                                       # STEP 44
result = file0.readline()                                               # STEP 45
stat3 = os0.lstat(path4)                                                # STEP 46
result = os0.path.exists(path4)                                         # STEP 47
result = os0.path.isdir(path1)                                          # STEP 48
result = stat3.st_size                                                  # STEP 49
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (4) == (6) ',), <traceback object at 0x109719e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21936, in act460
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a894bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 48 steps

SAVING TEST AS failure.5409.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes3 = 0                                                               # STEP 2
component2 = "e"                                                         # STEP 3
component3 = "omega"                                                     # STEP 4
component0 = "f"                                                         # STEP 5
bytes3 += 1                                                              # STEP 6
path0 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.isdir(path0)                                           # STEP 8
result = os0.path.exists(path0)                                          # STEP 9
os0.remove(path0)                                                       # STEP 10
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.exists(path0)                                         # STEP 12
file0 = opener0(path0)                                                  # STEP 13
result = os0.path.dirname(path0)                                        # STEP 14
bytes3 += 1                                                             # STEP 15
path0 += "/" + component3                                               # STEP 16
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 17
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 18
result = os0.path.isdir(path0)                                          # STEP 19
result = os0.path.isabs(path0)                                          # STEP 20
result = os0.readlink(path0)                                            # STEP 21
result = os0.path.islink(path0)                                         # STEP 22
stat2 = os0.fstat(fd0)                                                  # STEP 23
result = os0.read(fd0,bytes3)                                           # STEP 24
stat0 = os0.lstat(path0)                                                # STEP 25
os0.link(path0,path0)                                                   # STEP 26
os0.path.getsize(path0)                                                 # STEP 27
bytes3 += 1                                                             # STEP 28
os0.close(fd0)                                                          # STEP 29
os0.link(path0,path0)                                                   # STEP 30
result = os0.path.isdir(path0)                                          # STEP 31
os0.remove(path0)                                                       # STEP 32
file0 = opener0(path0)                                                  # STEP 33
stat3 = os0.fstat(fd0)                                                  # STEP 34
result = os0.path.abspath(path0)                                        # STEP 35
file0 = opener0(path0,'w')                                              # STEP 36
path4 = "/Volumes/ramdisk/test"                                         # STEP 37
file0.truncate()                                                        # STEP 38
os0.remove(path4)                                                       # STEP 39
stat4 = os0.fstat(fd0)                                                  # STEP 40
result = os0.path.islink(path0)                                         # STEP 41
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 42
bytes0 = 0                                                              # STEP 43
os0.mkdir(path4)                                                        # STEP 44
result = os0.read(fd0,bytes3)                                           # STEP 45
os0.symlink(path4,path4)                                                # STEP 46
result = file0.readline()                                               # STEP 47
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106980710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #166 STEP #70 (0:00:30.001098) Sat Jul 22 05:40:38 2017 [ 895 stmts 1161 branches ] 16453 TOTAL ACTIONS (548.413262915/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105c65f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 89 steps

SAVING TEST AS failure.5409.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
str0 = ""                                                                # STEP 1
component1 = "d"                                                         # STEP 2
str4 = ""                                                                # STEP 3
str0 += 'k'                                                              # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
os0.link(path4,path4)                                                    # STEP 8
result = os0.path.isdir(path4)                                           # STEP 9
result = os0.path.lexists(path0)                                        # STEP 10
os0.link(path0,path4)                                                   # STEP 11
os0.makedirs(path0)                                                     # STEP 12
result = os0.path.isabs(path4)                                          # STEP 13
result = sorted(os0.listdir(path0))                                     # STEP 14
os0.link(path0,path4)                                                   # STEP 15
result = os0.path.isfile(path4)                                         # STEP 16
os0.symlink(path0,path0)                                                # STEP 17
os0.makedirs(path4)                                                     # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.remove(path0)                                                       # STEP 20
str3 += " "                                                             # STEP 21
result = os0.path.dirname(path0)                                        # STEP 22
path4 = "/Volumes/ramdisk/test"                                         # STEP 23
path2 = "/Volumes/ramdisk/test"                                         # STEP 24
str3 = ""                                                               # STEP 25
result = os0.path.exists(path2)                                         # STEP 26
path0 += "/" + component1                                               # STEP 27
os0.link(path2,path2)                                                   # STEP 28
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 29
result = os0.readlink(path0)                                            # STEP 30
str0 = ""                                                               # STEP 31
path0 += "/" + component1                                               # STEP 32
os0.path.getsize(path0)                                                 # STEP 33
os0.path.getsize(path0)                                                 # STEP 34
result = os0.path.dirname(path0)                                        # STEP 35
bytes0 = 0                                                              # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
result = os0.readlink(path2)                                            # STEP 38
component0 = "omega"                                                    # STEP 39
result = os0.path.lexists(path2)                                        # STEP 40
result = os0.path.islink(path2)                                         # STEP 41
stat4 = os0.stat(path0)                                                 # STEP 42
result = os0.path.abspath(path0)                                        # STEP 43
os0.close(fd0)                                                          # STEP 44
result = os0.path.isabs(path2)                                          # STEP 45
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 46
bytes2 = 0                                                              # STEP 47
opener0 = newFakeOpener(os0)                                            # STEP 48
os0.rmdir(path0)                                                        # STEP 49
file0 = opener0(path0,'r')                                              # STEP 50
os0.makedirs(path0)                                                     # STEP 51
os0.link(path2,path4)                                                   # STEP 52
os0.link(path4,path0)                                                   # STEP 53
component3 = "omega"                                                    # STEP 54
bytes4 = 0                                                              # STEP 55
os0.rmdir(path0)                                                        # STEP 56
path0 = "/Volumes/ramdisk/test"                                         # STEP 57
result = os0.path.dirname(path0)                                        # STEP 58
os0.mkdir(path4)                                                        # STEP 59
bytes4 += 1                                                             # STEP 60
path0 += "/" + component0                                               # STEP 61
os0.rmdir(path0)                                                        # STEP 62
result = os0.path.islink(path0)                                         # STEP 63
result = os0.path.exists(path2)                                         # STEP 64
path1 = "/Volumes/ramdisk/test"                                         # STEP 65
os0.mkdir(path4)                                                        # STEP 66
result = os0.readlink(path0)                                            # STEP 67
result = os0.readlink(path0)                                            # STEP 68
result = sorted(os0.listdir(path0))                                     # STEP 69
result = os0.path.abspath(path2)                                        # STEP 70
str0 += " "                                                             # STEP 71
os0.rmdir(path0)                                                        # STEP 72
path2 += "/" + component1                                               # STEP 73
os0.rename(path2,path4)                                                 # STEP 74
result = os0.read(fd0,bytes4)                                           # STEP 75
result = os0.path.lexists(path4)                                        # STEP 76
result = os0.path.exists(path4)                                         # STEP 77
os0.rmdir(path0)                                                        # STEP 78
path0 += "/" + component0                                               # STEP 79
str4 += 'y'                                                             # STEP 80
os0.path.getsize(path0)                                                 # STEP 81
file0 = opener0(path2,'w')                                              # STEP 82
stat1 = os0.lstat(path2)                                                # STEP 83
os0.mkdir(path4)                                                        # STEP 84
stat4 = os0.lstat(path2)                                                # STEP 85
os0.link(path4,path4)                                                   # STEP 86
os0.write(fd0,str0)                                                     # STEP 87
result = file0.read(bytes4)                                             # STEP 88
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105ea8368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (1) ',), <traceback object at 0x1068c36c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 59 steps

SAVING TEST AS failure.5409.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "f"                                                         # STEP 1
bytes0 = 0                                                               # STEP 2
os0 = newFakeOS()                                                        # STEP 3
result = os0.path.isfile(path4)                                          # STEP 4
result = os0.path.isabs(path4)                                           # STEP 5
result = os0.path.isfile(path4)                                          # STEP 6
os0.symlink(path4,path4)                                                 # STEP 7
os0.link(path4,path4)                                                    # STEP 8
result = os0.path.isfile(path4)                                          # STEP 9
component4 = "a"                                                        # STEP 10
result = os0.path.isdir(path4)                                          # STEP 11
os0.mkdir(path4)                                                        # STEP 12
result = os0.path.islink(path4)                                         # STEP 13
result = os0.path.isfile(path4)                                         # STEP 14
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
result = os0.path.isdir(path4)                                          # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
path4 += "/" + component1                                               # STEP 18
result = os0.path.isabs(path4)                                          # STEP 19
os0.mkdir(path4)                                                        # STEP 20
result = os0.path.lexists(path3)                                        # STEP 21
os0.rmdir(path4)                                                        # STEP 22
file0 = opener0(path4,'w')                                              # STEP 23
component2 = "lambda"                                                   # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
bytes0 += 1                                                             # STEP 26
result = file0.readlines()                                              # STEP 27
result = os0.path.dirname(path3)                                        # STEP 28
result = os0.path.exists(path3)                                         # STEP 29
file0.seek(bytes0)                                                      # STEP 30
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 31
path3 += "/" + component1                                               # STEP 32
result = file0.read()                                                   # STEP 33
result = os0.read(fd0,bytes0)                                           # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
path4 += "/" + component4                                               # STEP 36
result = os0.path.isfile(path4)                                         # STEP 37
result = os0.path.abspath(path3)                                        # STEP 38
file0.truncate()                                                        # STEP 39
file0.seek(bytes0)                                                      # STEP 40
os0.path.getsize(path4)                                                 # STEP 41
result = sorted(os0.listdir(path4))                                     # STEP 42
os0.mkdir(path4)                                                        # STEP 43
result = file0.readline(bytes0)                                         # STEP 44
result = file0.read()                                                   # STEP 45
stat2 = os0.lstat(path3)                                                # STEP 46
os0.remove(path3)                                                       # STEP 47
os0.rename(path4,path3)                                                 # STEP 48
stat4 = os0.lstat(path4)                                                # STEP 49
stat1 = os0.fstat(fd0)                                                  # STEP 50
result = file0.read()                                                   # STEP 51
os0.rmdir(path3)                                                        # STEP 52
os0.mkdir(path3)                                                        # STEP 53
os0.symlink(path3,path4)                                                # STEP 54
os0.rmdir(path4)                                                        # STEP 55
os0.close(fd0)                                                          # STEP 56
os0.mkdir(path4)                                                        # STEP 57
result = stat2.st_size                                                  # STEP 58
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (1) ',), <traceback object at 0x10761a7e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064f8b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 92 steps

SAVING TEST AS failure.5409.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
str1 = ""                                                                # STEP 1
bytes2 = 0                                                               # STEP 2
bytes4 = 0                                                               # STEP 3
str3 += " "                                                              # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
str1 += " "                                                              # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
os0 = newFakeOS()                                                        # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
bytes2 += 1                                                             # STEP 10
os0.link(path1,path1)                                                   # STEP 11
result = os0.path.dirname(path2)                                        # STEP 12
result = os0.path.isdir(path1)                                          # STEP 13
result = os0.path.exists(path2)                                         # STEP 14
file0 = opener0(path1,'w')                                              # STEP 15
result = sorted(os0.listdir(path2))                                     # STEP 16
result = os0.path.islink(path1)                                         # STEP 17
result = os0.path.exists(path1)                                         # STEP 18
result = os0.path.lexists(path1)                                        # STEP 19
path1 = "/Volumes/ramdisk/test"                                         # STEP 20
file0 = opener0(path1,'a')                                              # STEP 21
result = os0.path.isfile(path1)                                         # STEP 22
file0 = opener0(path1,'a')                                              # STEP 23
os0.symlink(path2,path1)                                                # STEP 24
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
os0.mkdir(path1)                                                        # STEP 26
component1 = "h"                                                        # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
result = os0.path.dirname(path2)                                        # STEP 29
os0.mkdir(path1)                                                        # STEP 30
bytes2 += 1                                                             # STEP 31
result = os0.path.lexists(path2)                                        # STEP 32
file0 = opener0(path1,'r')                                              # STEP 33
os0.makedirs(path2)                                                     # STEP 34
file0 = opener0(path3,'a')                                              # STEP 35
result = os0.path.isdir(path3)                                          # STEP 36
path3 += "/" + component1                                               # STEP 37
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
bytes0 = 0                                                              # STEP 39
result = os0.path.exists(path2)                                         # STEP 40
os0.link(path2,path1)                                                   # STEP 41
bytes2 += 1                                                             # STEP 42
component3 = "b"                                                        # STEP 43
str3 += 'd'                                                             # STEP 44
os0.write(fd0,str1)                                                     # STEP 45
file0 = opener0(path1,'r')                                              # STEP 46
result = os0.path.isfile(path3)                                         # STEP 47
result = os0.read(fd0,bytes4)                                           # STEP 48
result = os0.path.islink(path3)                                         # STEP 49
os0.remove(path1)                                                       # STEP 50
bytes4 = 0                                                              # STEP 51
result = os0.path.dirname(path2)                                        # STEP 52
component4 = "e"                                                        # STEP 53
result = os0.readlink(path3)                                            # STEP 54
result = os0.path.lexists(path2)                                        # STEP 55
path1 = "/Volumes/ramdisk/test"                                         # STEP 56
stat3 = os0.stat(path3)                                                 # STEP 57
os0.mkdir(path2)                                                        # STEP 58
bytes2 += 1                                                             # STEP 59
result = os0.path.isfile(path1)                                         # STEP 60
str1 += 'l'                                                             # STEP 61
os0.rmdir(path3)                                                        # STEP 62
component2 = "epsilon"                                                  # STEP 63
os0.rename(path3,path2)                                                 # STEP 64
stat2 = os0.fstat(fd0)                                                  # STEP 65
file0 = opener0(path2,'r')                                              # STEP 66
component0 = "delta"                                                    # STEP 67
stat4 = os0.stat(path3)                                                 # STEP 68
os0.write(fd0,str1)                                                     # STEP 69
result = stat3.st_size                                                  # STEP 70
os0.remove(path1)                                                       # STEP 71
os0.close(fd0)                                                          # STEP 72
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 73
os0.symlink(path1,path2)                                                # STEP 74
result = os0.path.dirname(path1)                                        # STEP 75
result = os0.path.lexists(path3)                                        # STEP 76
os0.write(fd0,str3)                                                     # STEP 77
file0 = opener0(path3,'w')                                              # STEP 78
os0.rmdir(path3)                                                        # STEP 79
result = os0.path.abspath(path1)                                        # STEP 80
result = os0.read(fd0,bytes2)                                           # STEP 81
result = os0.path.dirname(path3)                                        # STEP 82
result = stat3.st_size                                                  # STEP 83
bytes0 += 1                                                             # STEP 84
os0.remove(path1)                                                       # STEP 85
os0.close(fd0)                                                          # STEP 86
result = os0.read(fd0,bytes4)                                           # STEP 87
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 88
os0.remove(path2)                                                       # STEP 89
bytes0 += 1                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a740d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a651cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 30 steps

SAVING TEST AS failure.5409.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
result = sorted(os0.listdir(path0))                                      # STEP 2
os0.symlink(path0,path0)                                                 # STEP 3
result = os0.path.isfile(path0)                                          # STEP 4
component1 = "a"                                                         # STEP 5
result = os0.path.islink(path0)                                          # STEP 6
result = os0.path.dirname(path0)                                         # STEP 7
result = os0.path.islink(path0)                                          # STEP 8
str2 = ""                                                                # STEP 9
os0.symlink(path0,path0)                                                # STEP 10
result = os0.path.isdir(path0)                                          # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
result = os0.readlink(path0)                                            # STEP 13
str2 += " "                                                             # STEP 14
result = os0.path.isfile(path0)                                         # STEP 15
os0.makedirs(path0)                                                     # STEP 16
os0.symlink(path0,path0)                                                # STEP 17
str2 += 'd'                                                             # STEP 18
path0 += "/" + component1                                               # STEP 19
result = os0.path.islink(path0)                                         # STEP 20
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 21
os0.close(fd0)                                                          # STEP 22
result = os0.path.islink(path0)                                         # STEP 23
os0.write(fd0,str2)                                                     # STEP 24
file0 = opener0(path0,'w')                                              # STEP 25
os0.remove(path0)                                                       # STEP 26
result = os0.path.isabs(path0)                                          # STEP 27
os0.write(fd0,str2)                                                     # STEP 28
result = file0.read()                                                   # STEP 29
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106a734d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 4
STOPPING TESTING DUE TO TIMEOUT
42.6978818283 PERCENT COVERED
60.323153019 TOTAL RUNTIME
336 EXECUTED
33257 TOTAL TEST OPERATIONS
42.1303162575 TIME SPENT EXECUTING TEST OPERATIONS
16.0338315964 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0231413841248 TIME SPENT CHECKING PROPERTIES
42.1534576416 TOTAL TIME SPENT RUNNING SUT
0.98200750351 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
7 FAILED
0 REPEATS OF FAILURES
7 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "omega"                                                     # STEP 0
str4 = ""                                                                # STEP 1
os0 = newFakeOS()                                                        # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
bytes3 = 0                                                               # STEP 4
str4 += 't'                                                              # STEP 5
component3 = "phi"                                                       # STEP 6
component4 = "delta"                                                     # STEP 7
str4 += 'd'                                                              # STEP 8
bytes3 += 1                                                              # STEP 9
component1 = "epsilon"                                                  # STEP 10
str4 += " "                                                             # STEP 11
str0 = ""                                                               # STEP 12
str3 = ""                                                               # STEP 13
str1 = ""                                                               # STEP 14
component0 = "a"                                                        # STEP 15
bytes4 = 0                                                              # STEP 16
str4 += 'w'                                                             # STEP 17
str2 = ""                                                               # STEP 18
bytes4 += 1                                                             # STEP 19
str4 = ""                                                               # STEP 20
bytes3 += 1                                                             # STEP 21
str1 += 'i'                                                             # STEP 22
bytes3 = 0                                                              # STEP 23
str1 += " "                                                             # STEP 24
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
result = os0.path.islink(path2)                                         # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
result = os0.path.isfile(path2)                                         # STEP 28
bytes3 += 1                                                             # STEP 29
path2 += "/" + component4                                               # STEP 30
path0 = "/Volumes/ramdisk/test"                                         # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
os0.remove(path2)                                                       # STEP 33
file0 = opener0(path0,'w')                                              # STEP 34
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 35
os0.close(fd0)                                                          # STEP 36
file0 = opener0(path0,'a')                                              # STEP 37
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
str1 += " "                                                             # STEP 39
result = os0.path.isdir(path2)                                          # STEP 40
file0 = opener0(path2,'r')                                              # STEP 41
result = os0.read(fd0,bytes4)                                           # STEP 42
os0.mkdir(path0)                                                        # STEP 43
result = sorted(os0.listdir(path0))                                     # STEP 44
result = os0.path.isfile(path2)                                         # STEP 45
result = file0.readline(bytes3)                                         # STEP 46
os0.mkdir(path0)                                                        # STEP 47
result = os0.path.islink(path0)                                         # STEP 48
stat1 = os0.lstat(path2)                                                # STEP 49
path0 += "/" + component3                                               # STEP 50
os0.rename(path0,path2)                                                 # STEP 51
os0.mkdir(path2)                                                        # STEP 52
stat2 = os0.stat(path2)                                                 # STEP 53
file0.next()                                                            # STEP 54
result = stat1.st_nlink                                                 # STEP 55
result = sorted(os0.listdir(path0))                                     # STEP 56
result = os0.path.exists(path2)                                         # STEP 57
result = stat1.st_nlink                                                 # STEP 58
result = stat2.st_size                                                  # STEP 59
os0.rmdir(path2)                                                        # STEP 60
stat4 = os0.stat(path2)                                                 # STEP 61
result = file0.read(bytes3)                                             # STEP 62
os0.close(fd0)                                                          # STEP 63
os0.makedirs(path2)                                                     # STEP 64
result = os0.path.isfile(path2)                                         # STEP 65
str0 += " "                                                             # STEP 66
file0.seek(bytes4)                                                      # STEP 67
result = os0.path.abspath(path0)                                        # STEP 68
result = os0.read(fd0,bytes4)                                           # STEP 69
os0.symlink(path0,path2)                                                # STEP 70
file0.truncate()                                                        # STEP 71
os0.link(path0,path0)                                                   # STEP 72
result = os0.readlink(path2)                                            # STEP 73
os0.mkdir(path2)                                                        # STEP 74
os0.rename(path0,path2)                                                 # STEP 75
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 76
result = os0.path.isfile(path2)                                         # STEP 77
result = os0.path.exists(path0)                                         # STEP 78
stat3 = os0.fstat(fd0)                                                  # STEP 79
bytes2 = 0                                                              # STEP 80
result = stat4.st_nlink                                                 # STEP 81
result = os0.path.dirname(path2)                                        # STEP 82
os0.write(fd0,str3)                                                     # STEP 83
result = file0.read(bytes4)                                             # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10839f248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
FAILURE 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes2 = 0                                                               # STEP 1
str2 = ""                                                                # STEP 2
bytes2 += 1                                                              # STEP 3
os0 = newFakeOS()                                                        # STEP 4
component3 = "delta"                                                     # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.link(path3,path4)                                                    # STEP 7
result = os0.path.isfile(path4)                                          # STEP 8
os0.remove(path4)                                                        # STEP 9
os0.link(path3,path4)                                                   # STEP 10
os0.mkdir(path3)                                                        # STEP 11
component0 = "b"                                                        # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
os0.symlink(path4,path4)                                                # STEP 14
os0.symlink(path1,path3)                                                # STEP 15
result = os0.path.lexists(path3)                                        # STEP 16
str2 += 'n'                                                             # STEP 17
result = os0.path.lexists(path1)                                        # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
os0.remove(path1)                                                       # STEP 20
result = os0.path.isabs(path4)                                          # STEP 21
str2 += 's'                                                             # STEP 22
path1 += "/" + component3                                               # STEP 23
os0.remove(path4)                                                       # STEP 24
os0.mkdir(path4)                                                        # STEP 25
os0.rmdir(path1)                                                        # STEP 26
file0 = opener0(path1,'a')                                              # STEP 27
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 28
file0.write(str2)                                                       # STEP 29
os0.write(fd0,str2)                                                     # STEP 30
path1 += "/" + component3                                               # STEP 31
stat0 = os0.fstat(fd0)                                                  # STEP 32
result = os0.path.abspath(path1)                                        # STEP 33
file0.write(str2)                                                       # STEP 34
file0.seek(bytes2)                                                      # STEP 35
stat1 = os0.lstat(path1)                                                # STEP 36
str2 += " "                                                             # STEP 37
os0.makedirs(path4)                                                     # STEP 38
os0.rmdir(path1)                                                        # STEP 39
result = os0.path.isfile(path1)                                         # STEP 40
component1 = "phi"                                                      # STEP 41
os0.remove(path3)                                                       # STEP 42
path4 += "/" + component3                                               # STEP 43
os0.remove(path3)                                                       # STEP 44
result = file0.readline()                                               # STEP 45
stat3 = os0.lstat(path4)                                                # STEP 46
result = os0.path.exists(path4)                                         # STEP 47
result = os0.path.isdir(path1)                                          # STEP 48
result = stat3.st_size                                                  # STEP 49
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (4) == (6) ',), <traceback object at 0x109719e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21936, in act460
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes3 = 0                                                               # STEP 2
component2 = "e"                                                         # STEP 3
component3 = "omega"                                                     # STEP 4
component0 = "f"                                                         # STEP 5
bytes3 += 1                                                              # STEP 6
path0 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.isdir(path0)                                           # STEP 8
result = os0.path.exists(path0)                                          # STEP 9
os0.remove(path0)                                                       # STEP 10
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.exists(path0)                                         # STEP 12
file0 = opener0(path0)                                                  # STEP 13
result = os0.path.dirname(path0)                                        # STEP 14
bytes3 += 1                                                             # STEP 15
path0 += "/" + component3                                               # STEP 16
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 17
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 18
result = os0.path.isdir(path0)                                          # STEP 19
result = os0.path.isabs(path0)                                          # STEP 20
result = os0.readlink(path0)                                            # STEP 21
result = os0.path.islink(path0)                                         # STEP 22
stat2 = os0.fstat(fd0)                                                  # STEP 23
result = os0.read(fd0,bytes3)                                           # STEP 24
stat0 = os0.lstat(path0)                                                # STEP 25
os0.link(path0,path0)                                                   # STEP 26
os0.path.getsize(path0)                                                 # STEP 27
bytes3 += 1                                                             # STEP 28
os0.close(fd0)                                                          # STEP 29
os0.link(path0,path0)                                                   # STEP 30
result = os0.path.isdir(path0)                                          # STEP 31
os0.remove(path0)                                                       # STEP 32
file0 = opener0(path0)                                                  # STEP 33
stat3 = os0.fstat(fd0)                                                  # STEP 34
result = os0.path.abspath(path0)                                        # STEP 35
file0 = opener0(path0,'w')                                              # STEP 36
path4 = "/Volumes/ramdisk/test"                                         # STEP 37
file0.truncate()                                                        # STEP 38
os0.remove(path4)                                                       # STEP 39
stat4 = os0.fstat(fd0)                                                  # STEP 40
result = os0.path.islink(path0)                                         # STEP 41
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 42
bytes0 = 0                                                              # STEP 43
os0.mkdir(path4)                                                        # STEP 44
result = os0.read(fd0,bytes3)                                           # STEP 45
os0.symlink(path4,path4)                                                # STEP 46
result = file0.readline()                                               # STEP 47
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106980710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
str0 = ""                                                                # STEP 1
component1 = "d"                                                         # STEP 2
str4 = ""                                                                # STEP 3
str0 += 'k'                                                              # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
os0.link(path4,path4)                                                    # STEP 8
result = os0.path.isdir(path4)                                           # STEP 9
result = os0.path.lexists(path0)                                        # STEP 10
os0.link(path0,path4)                                                   # STEP 11
os0.makedirs(path0)                                                     # STEP 12
result = os0.path.isabs(path4)                                          # STEP 13
result = sorted(os0.listdir(path0))                                     # STEP 14
os0.link(path0,path4)                                                   # STEP 15
result = os0.path.isfile(path4)                                         # STEP 16
os0.symlink(path0,path0)                                                # STEP 17
os0.makedirs(path4)                                                     # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.remove(path0)                                                       # STEP 20
str3 += " "                                                             # STEP 21
result = os0.path.dirname(path0)                                        # STEP 22
path4 = "/Volumes/ramdisk/test"                                         # STEP 23
path2 = "/Volumes/ramdisk/test"                                         # STEP 24
str3 = ""                                                               # STEP 25
result = os0.path.exists(path2)                                         # STEP 26
path0 += "/" + component1                                               # STEP 27
os0.link(path2,path2)                                                   # STEP 28
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 29
result = os0.readlink(path0)                                            # STEP 30
str0 = ""                                                               # STEP 31
path0 += "/" + component1                                               # STEP 32
os0.path.getsize(path0)                                                 # STEP 33
os0.path.getsize(path0)                                                 # STEP 34
result = os0.path.dirname(path0)                                        # STEP 35
bytes0 = 0                                                              # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
result = os0.readlink(path2)                                            # STEP 38
component0 = "omega"                                                    # STEP 39
result = os0.path.lexists(path2)                                        # STEP 40
result = os0.path.islink(path2)                                         # STEP 41
stat4 = os0.stat(path0)                                                 # STEP 42
result = os0.path.abspath(path0)                                        # STEP 43
os0.close(fd0)                                                          # STEP 44
result = os0.path.isabs(path2)                                          # STEP 45
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 46
bytes2 = 0                                                              # STEP 47
opener0 = newFakeOpener(os0)                                            # STEP 48
os0.rmdir(path0)                                                        # STEP 49
file0 = opener0(path0,'r')                                              # STEP 50
os0.makedirs(path0)                                                     # STEP 51
os0.link(path2,path4)                                                   # STEP 52
os0.link(path4,path0)                                                   # STEP 53
component3 = "omega"                                                    # STEP 54
bytes4 = 0                                                              # STEP 55
os0.rmdir(path0)                                                        # STEP 56
path0 = "/Volumes/ramdisk/test"                                         # STEP 57
result = os0.path.dirname(path0)                                        # STEP 58
os0.mkdir(path4)                                                        # STEP 59
bytes4 += 1                                                             # STEP 60
path0 += "/" + component0                                               # STEP 61
os0.rmdir(path0)                                                        # STEP 62
result = os0.path.islink(path0)                                         # STEP 63
result = os0.path.exists(path2)                                         # STEP 64
path1 = "/Volumes/ramdisk/test"                                         # STEP 65
os0.mkdir(path4)                                                        # STEP 66
result = os0.readlink(path0)                                            # STEP 67
result = os0.readlink(path0)                                            # STEP 68
result = sorted(os0.listdir(path0))                                     # STEP 69
result = os0.path.abspath(path2)                                        # STEP 70
str0 += " "                                                             # STEP 71
os0.rmdir(path0)                                                        # STEP 72
path2 += "/" + component1                                               # STEP 73
os0.rename(path2,path4)                                                 # STEP 74
result = os0.read(fd0,bytes4)                                           # STEP 75
result = os0.path.lexists(path4)                                        # STEP 76
result = os0.path.exists(path4)                                         # STEP 77
os0.rmdir(path0)                                                        # STEP 78
path0 += "/" + component0                                               # STEP 79
str4 += 'y'                                                             # STEP 80
os0.path.getsize(path0)                                                 # STEP 81
file0 = opener0(path2,'w')                                              # STEP 82
stat1 = os0.lstat(path2)                                                # STEP 83
os0.mkdir(path4)                                                        # STEP 84
stat4 = os0.lstat(path2)                                                # STEP 85
os0.link(path4,path4)                                                   # STEP 86
os0.write(fd0,str0)                                                     # STEP 87
result = file0.read(bytes4)                                             # STEP 88
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105ea8368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "f"                                                         # STEP 1
bytes0 = 0                                                               # STEP 2
os0 = newFakeOS()                                                        # STEP 3
result = os0.path.isfile(path4)                                          # STEP 4
result = os0.path.isabs(path4)                                           # STEP 5
result = os0.path.isfile(path4)                                          # STEP 6
os0.symlink(path4,path4)                                                 # STEP 7
os0.link(path4,path4)                                                    # STEP 8
result = os0.path.isfile(path4)                                          # STEP 9
component4 = "a"                                                        # STEP 10
result = os0.path.isdir(path4)                                          # STEP 11
os0.mkdir(path4)                                                        # STEP 12
result = os0.path.islink(path4)                                         # STEP 13
result = os0.path.isfile(path4)                                         # STEP 14
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
result = os0.path.isdir(path4)                                          # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
path4 += "/" + component1                                               # STEP 18
result = os0.path.isabs(path4)                                          # STEP 19
os0.mkdir(path4)                                                        # STEP 20
result = os0.path.lexists(path3)                                        # STEP 21
os0.rmdir(path4)                                                        # STEP 22
file0 = opener0(path4,'w')                                              # STEP 23
component2 = "lambda"                                                   # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
bytes0 += 1                                                             # STEP 26
result = file0.readlines()                                              # STEP 27
result = os0.path.dirname(path3)                                        # STEP 28
result = os0.path.exists(path3)                                         # STEP 29
file0.seek(bytes0)                                                      # STEP 30
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 31
path3 += "/" + component1                                               # STEP 32
result = file0.read()                                                   # STEP 33
result = os0.read(fd0,bytes0)                                           # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
path4 += "/" + component4                                               # STEP 36
result = os0.path.isfile(path4)                                         # STEP 37
result = os0.path.abspath(path3)                                        # STEP 38
file0.truncate()                                                        # STEP 39
file0.seek(bytes0)                                                      # STEP 40
os0.path.getsize(path4)                                                 # STEP 41
result = sorted(os0.listdir(path4))                                     # STEP 42
os0.mkdir(path4)                                                        # STEP 43
result = file0.readline(bytes0)                                         # STEP 44
result = file0.read()                                                   # STEP 45
stat2 = os0.lstat(path3)                                                # STEP 46
os0.remove(path3)                                                       # STEP 47
os0.rename(path4,path3)                                                 # STEP 48
stat4 = os0.lstat(path4)                                                # STEP 49
stat1 = os0.fstat(fd0)                                                  # STEP 50
result = file0.read()                                                   # STEP 51
os0.rmdir(path3)                                                        # STEP 52
os0.mkdir(path3)                                                        # STEP 53
os0.symlink(path3,path4)                                                # STEP 54
os0.rmdir(path4)                                                        # STEP 55
os0.close(fd0)                                                          # STEP 56
os0.mkdir(path4)                                                        # STEP 57
result = stat2.st_size                                                  # STEP 58
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (1) ',), <traceback object at 0x10761a7e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 5
str3 = ""                                                                # STEP 0
str1 = ""                                                                # STEP 1
bytes2 = 0                                                               # STEP 2
bytes4 = 0                                                               # STEP 3
str3 += " "                                                              # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
str1 += " "                                                              # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
os0 = newFakeOS()                                                        # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
bytes2 += 1                                                             # STEP 10
os0.link(path1,path1)                                                   # STEP 11
result = os0.path.dirname(path2)                                        # STEP 12
result = os0.path.isdir(path1)                                          # STEP 13
result = os0.path.exists(path2)                                         # STEP 14
file0 = opener0(path1,'w')                                              # STEP 15
result = sorted(os0.listdir(path2))                                     # STEP 16
result = os0.path.islink(path1)                                         # STEP 17
result = os0.path.exists(path1)                                         # STEP 18
result = os0.path.lexists(path1)                                        # STEP 19
path1 = "/Volumes/ramdisk/test"                                         # STEP 20
file0 = opener0(path1,'a')                                              # STEP 21
result = os0.path.isfile(path1)                                         # STEP 22
file0 = opener0(path1,'a')                                              # STEP 23
os0.symlink(path2,path1)                                                # STEP 24
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
os0.mkdir(path1)                                                        # STEP 26
component1 = "h"                                                        # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
result = os0.path.dirname(path2)                                        # STEP 29
os0.mkdir(path1)                                                        # STEP 30
bytes2 += 1                                                             # STEP 31
result = os0.path.lexists(path2)                                        # STEP 32
file0 = opener0(path1,'r')                                              # STEP 33
os0.makedirs(path2)                                                     # STEP 34
file0 = opener0(path3,'a')                                              # STEP 35
result = os0.path.isdir(path3)                                          # STEP 36
path3 += "/" + component1                                               # STEP 37
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
bytes0 = 0                                                              # STEP 39
result = os0.path.exists(path2)                                         # STEP 40
os0.link(path2,path1)                                                   # STEP 41
bytes2 += 1                                                             # STEP 42
component3 = "b"                                                        # STEP 43
str3 += 'd'                                                             # STEP 44
os0.write(fd0,str1)                                                     # STEP 45
file0 = opener0(path1,'r')                                              # STEP 46
result = os0.path.isfile(path3)                                         # STEP 47
result = os0.read(fd0,bytes4)                                           # STEP 48
result = os0.path.islink(path3)                                         # STEP 49
os0.remove(path1)                                                       # STEP 50
bytes4 = 0                                                              # STEP 51
result = os0.path.dirname(path2)                                        # STEP 52
component4 = "e"                                                        # STEP 53
result = os0.readlink(path3)                                            # STEP 54
result = os0.path.lexists(path2)                                        # STEP 55
path1 = "/Volumes/ramdisk/test"                                         # STEP 56
stat3 = os0.stat(path3)                                                 # STEP 57
os0.mkdir(path2)                                                        # STEP 58
bytes2 += 1                                                             # STEP 59
result = os0.path.isfile(path1)                                         # STEP 60
str1 += 'l'                                                             # STEP 61
os0.rmdir(path3)                                                        # STEP 62
component2 = "epsilon"                                                  # STEP 63
os0.rename(path3,path2)                                                 # STEP 64
stat2 = os0.fstat(fd0)                                                  # STEP 65
file0 = opener0(path2,'r')                                              # STEP 66
component0 = "delta"                                                    # STEP 67
stat4 = os0.stat(path3)                                                 # STEP 68
os0.write(fd0,str1)                                                     # STEP 69
result = stat3.st_size                                                  # STEP 70
os0.remove(path1)                                                       # STEP 71
os0.close(fd0)                                                          # STEP 72
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 73
os0.symlink(path1,path2)                                                # STEP 74
result = os0.path.dirname(path1)                                        # STEP 75
result = os0.path.lexists(path3)                                        # STEP 76
os0.write(fd0,str3)                                                     # STEP 77
file0 = opener0(path3,'w')                                              # STEP 78
os0.rmdir(path3)                                                        # STEP 79
result = os0.path.abspath(path1)                                        # STEP 80
result = os0.read(fd0,bytes2)                                           # STEP 81
result = os0.path.dirname(path3)                                        # STEP 82
result = stat3.st_size                                                  # STEP 83
bytes0 += 1                                                             # STEP 84
os0.remove(path1)                                                       # STEP 85
os0.close(fd0)                                                          # STEP 86
result = os0.read(fd0,bytes4)                                           # STEP 87
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 88
os0.remove(path2)                                                       # STEP 89
bytes0 += 1                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a740d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 6
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
result = sorted(os0.listdir(path0))                                      # STEP 2
os0.symlink(path0,path0)                                                 # STEP 3
result = os0.path.isfile(path0)                                          # STEP 4
component1 = "a"                                                         # STEP 5
result = os0.path.islink(path0)                                          # STEP 6
result = os0.path.dirname(path0)                                         # STEP 7
result = os0.path.islink(path0)                                          # STEP 8
str2 = ""                                                                # STEP 9
os0.symlink(path0,path0)                                                # STEP 10
result = os0.path.isdir(path0)                                          # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
result = os0.readlink(path0)                                            # STEP 13
str2 += " "                                                             # STEP 14
result = os0.path.isfile(path0)                                         # STEP 15
os0.makedirs(path0)                                                     # STEP 16
os0.symlink(path0,path0)                                                # STEP 17
str2 += 'd'                                                             # STEP 18
path0 += "/" + component1                                               # STEP 19
result = os0.path.islink(path0)                                         # STEP 20
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 21
os0.close(fd0)                                                          # STEP 22
result = os0.path.islink(path0)                                         # STEP 23
os0.write(fd0,str2)                                                     # STEP 24
file0 = opener0(path0,'w')                                              # STEP 25
os0.remove(path0)                                                       # STEP 26
result = os0.path.isabs(path0)                                          # STEP 27
os0.write(fd0,str2)                                                     # STEP 28
result = file0.read()                                                   # STEP 29
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106a734d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1178 BRANCHES COVERED
905 STATEMENTS COVERED
