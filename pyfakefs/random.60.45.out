Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4901.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (j fdwhrjufobcsdr) == () ',), <traceback object at 0x1060245f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 95 steps

SAVING TEST AS failure.4901.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "alpha"                                                     # STEP 0
component0 = "h"                                                         # STEP 1
component4 = "delta"                                                     # STEP 2
component2 = "epsilon"                                                   # STEP 3
component1 = "a"                                                         # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
path0 += "/" + component1                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
component1 = "alpha"                                                     # STEP 8
result = os0.path.isdir(path0)                                           # STEP 9
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 10
path0 += "/" + component4                                               # STEP 11
os0.symlink(path0,path0)                                                # STEP 12
bytes3 = 0                                                              # STEP 13
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 14
component4 = "omega"                                                    # STEP 15
bytes2 = 0                                                              # STEP 16
result = sorted(os0.listdir(path0))                                     # STEP 17
bytes3 += 1                                                             # STEP 18
stat3 = os0.stat(path0)                                                 # STEP 19
opener0 = newFakeOpener(os0)                                            # STEP 20
path0 += "/" + component4                                               # STEP 21
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 22
os0.path.getsize(path0)                                                 # STEP 23
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 24
result = os0.path.isdir(path0)                                          # STEP 25
bytes3 += 1                                                             # STEP 26
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 27
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 28
str3 = ""                                                               # STEP 29
os0.link(path0,path0)                                                   # STEP 30
stat3 = os0.lstat(path0)                                                # STEP 31
stat2 = os0.lstat(path0)                                                # STEP 32
str0 = ""                                                               # STEP 33
str0 += 'j'                                                             # STEP 34
result = os0.path.islink(path0)                                         # STEP 35
component4 = "d"                                                        # STEP 36
str0 += " "                                                             # STEP 37
str3 += 'n'                                                             # STEP 38
str0 += 'f'                                                             # STEP 39
bytes0 = 0                                                              # STEP 40
str3 += 'w'                                                             # STEP 41
stat0 = os0.lstat(path0)                                                # STEP 42
path0 += "/" + component2                                               # STEP 43
bytes2 += 1                                                             # STEP 44
str3 += 'f'                                                             # STEP 45
str0 += 'd'                                                             # STEP 46
component2 = "h"                                                        # STEP 47
str0 += 'w'                                                             # STEP 48
str3 += 'u'                                                             # STEP 49
str0 += 'h'                                                             # STEP 50
str0 += 'r'                                                             # STEP 51
str0 += 'j'                                                             # STEP 52
bytes0 += 1                                                             # STEP 53
str0 += 'u'                                                             # STEP 54
stat0 = os0.lstat(path0)                                                # STEP 55
str0 += 'f'                                                             # STEP 56
str3 += " "                                                             # STEP 57
str0 += 'o'                                                             # STEP 58
os0.makedirs(path0)                                                     # STEP 59
str3 += 't'                                                             # STEP 60
str3 += 'o'                                                             # STEP 61
path0 += "/" + component2                                               # STEP 62
str3 += 'b'                                                             # STEP 63
str1 = ""                                                               # STEP 64
str3 += 'v'                                                             # STEP 65
str0 += 'b'                                                             # STEP 66
str3 += 'y'                                                             # STEP 67
str1 += 'b'                                                             # STEP 68
str0 += 'c'                                                             # STEP 69
component2 = "beta"                                                     # STEP 70
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 71
str3 += 'x'                                                             # STEP 72
result = sorted(os0.listdir(path0))                                     # STEP 73
str2 = ""                                                               # STEP 74
bytes4 = 0                                                              # STEP 75
str3 += 'v'                                                             # STEP 76
stat3 = os0.fstat(fd0)                                                  # STEP 77
str1 += 'm'                                                             # STEP 78
file0 = opener0(path0,'r')                                              # STEP 79
path0 += "/" + component0                                               # STEP 80
str3 += 'd'                                                             # STEP 81
os0.mkdir(path0)                                                        # STEP 82
result = os0.path.isfile(path0)                                         # STEP 83
str3 += 'v'                                                             # STEP 84
file0.next()                                                            # STEP 85
os0.remove(path0)                                                       # STEP 86
bytes0 += 1                                                             # STEP 87
str2 += 'n'                                                             # STEP 88
str0 += 's'                                                             # STEP 89
str0 += 'd'                                                             # STEP 90
str0 += 'r'                                                             # STEP 91
os0.write(fd0,str0)                                                     # STEP 92
str2 += 't'                                                             # STEP 93
result = file0.read()                                                   # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (j fdwhrjufobcsdr) == () ',), <traceback object at 0x105db4488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105c770e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 92 steps

SAVING TEST AS failure.4901.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "f"                                                         # STEP 0
component2 = "omega"                                                     # STEP 1
component0 = "e"                                                         # STEP 2
bytes1 = 0                                                               # STEP 3
component4 = "alpha"                                                     # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
path3 += "/" + component2                                                # STEP 6
path3 += "/" + component1                                                # STEP 7
component2 = "gamma"                                                     # STEP 8
os0 = newFakeOS()                                                        # STEP 9
component1 = "omega"                                                    # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
component3 = "c"                                                        # STEP 12
stat3 = os0.stat(path3)                                                 # STEP 13
stat0 = os0.stat(path3)                                                 # STEP 14
result = os0.path.isabs(path4)                                          # STEP 15
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 16
os0.link(path4,path3)                                                   # STEP 17
os0.link(path4,path4)                                                   # STEP 18
os0.mkdir(path4)                                                        # STEP 19
result = os0.path.isdir(path4)                                          # STEP 20
os0.makedirs(path3)                                                     # STEP 21
path4 += "/" + component4                                               # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 24
path4 += "/" + component3                                               # STEP 25
stat3 = os0.fstat(fd0)                                                  # STEP 26
result = os0.path.exists(path3)                                         # STEP 27
path4 += "/" + component2                                               # STEP 28
component3 = "f"                                                        # STEP 29
component4 = "e"                                                        # STEP 30
component2 = "a"                                                        # STEP 31
path4 += "/" + component0                                               # STEP 32
result = os0.path.islink(path4)                                         # STEP 33
opener0 = newFakeOpener(os0)                                            # STEP 34
stat1 = os0.lstat(path4)                                                # STEP 35
file0 = opener0(path3)                                                  # STEP 36
component0 = "b"                                                        # STEP 37
result = os0.path.exists(path4)                                         # STEP 38
bytes3 = 0                                                              # STEP 39
result = os0.read(fd0,bytes3)                                           # STEP 40
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
os0.link(path4,path3)                                                   # STEP 42
str0 = ""                                                               # STEP 43
os0.rename(path4,path3)                                                 # STEP 44
str0 += " "                                                             # STEP 45
str0 += 's'                                                             # STEP 46
path3 += "/" + component2                                               # STEP 47
path4 += "/" + component2                                               # STEP 48
str1 = ""                                                               # STEP 49
os0.rmdir(path4)                                                        # STEP 50
result = os0.path.dirname(path3)                                        # STEP 51
component2 = "d"                                                        # STEP 52
os0.mkdir(path4)                                                        # STEP 53
os0.makedirs(path3)                                                     # STEP 54
result = os0.path.isdir(path3)                                          # STEP 55
bytes0 = 0                                                              # STEP 56
bytes3 += 1                                                             # STEP 57
str0 += 't'                                                             # STEP 58
str1 += 'n'                                                             # STEP 59
result = os0.path.lexists(path4)                                        # STEP 60
os0.close(fd0)                                                          # STEP 61
result = os0.read(fd0,bytes0)                                           # STEP 62
str1 += 't'                                                             # STEP 63
result = os0.path.isabs(path4)                                          # STEP 64
result = os0.path.isdir(path4)                                          # STEP 65
str1 += 'l'                                                             # STEP 66
stat4 = os0.lstat(path4)                                                # STEP 67
result = os0.readlink(path4)                                            # STEP 68
os0.symlink(path4,path3)                                                # STEP 69
bytes3 += 1                                                             # STEP 70
str1 += 'f'                                                             # STEP 71
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 72
os0.removedirs(path3)                                                   # STEP 73
os0.close(fd0)                                                          # STEP 74
stat2 = os0.lstat(path4)                                                # STEP 75
result = os0.read(fd0,bytes0)                                           # STEP 76
os0.removedirs(path4)                                                   # STEP 77
str1 += 'h'                                                             # STEP 78
result = os0.read(fd0,bytes1)                                           # STEP 79
file0 = opener0(path3,'w')                                              # STEP 80
path3 += "/" + component1                                               # STEP 81
str1 += 'b'                                                             # STEP 82
component1 = "gamma"                                                    # STEP 83
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 84
os0.remove(path4)                                                       # STEP 85
result = file0.read(bytes0)                                             # STEP 86
result = os0.readlink(path4)                                            # STEP 87
os0.symlink(path3,path3)                                                # STEP 88
os0.write(fd0,str0)                                                     # STEP 89
str0 += 'b'                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105b94ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #438 STEP #75 (0:00:30.021827) Sat Jul 22 02:58:22 2017 [ 891 stmts 1161 branches ] 43762 TOTAL ACTIONS (1457.67278006/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (11) == (0) ',), <traceback object at 0x1031f0170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21936, in act460
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 92 steps

SAVING TEST AS failure.4901.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "gamma"                                                     # STEP 0
component4 = "e"                                                         # STEP 1
component0 = "omega"                                                     # STEP 2
bytes2 = 0                                                               # STEP 3
os0 = newFakeOS()                                                        # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 = ""                                                                # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
component1 = "gamma"                                                     # STEP 8
os0.link(path1,path1)                                                    # STEP 9
component2 = "b"                                                        # STEP 10
str3 += 'r'                                                             # STEP 11
str3 += 'e'                                                             # STEP 12
result = os0.path.abspath(path1)                                        # STEP 13
result = os0.path.lexists(path1)                                        # STEP 14
str3 += 'g'                                                             # STEP 15
str3 += 'w'                                                             # STEP 16
result = os0.path.isabs(path1)                                          # STEP 17
result = os0.readlink(path1)                                            # STEP 18
path1 += "/" + component4                                               # STEP 19
str3 += 'd'                                                             # STEP 20
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 21
stat3 = os0.stat(path1)                                                 # STEP 22
bytes2 += 1                                                             # STEP 23
os0.remove(path1)                                                       # STEP 24
path1 += "/" + component3                                               # STEP 25
str3 += 'z'                                                             # STEP 26
str3 += 't'                                                             # STEP 27
component3 = "phi"                                                      # STEP 28
str3 = ""                                                               # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
str3 += 'v'                                                             # STEP 31
path1 += "/" + component3                                               # STEP 32
str3 += 'f'                                                             # STEP 33
str3 += 'r'                                                             # STEP 34
component3 = "e"                                                        # STEP 35
result = os0.read(fd0,bytes2)                                           # STEP 36
result = stat3.st_size                                                  # STEP 37
file0 = opener0(path1)                                                  # STEP 38
str3 += 'a'                                                             # STEP 39
stat2 = os0.fstat(fd0)                                                  # STEP 40
component4 = "c"                                                        # STEP 41
str3 += 'a'                                                             # STEP 42
result = stat3.st_nlink                                                 # STEP 43
result = os0.path.exists(path1)                                         # STEP 44
path3 = "/Volumes/ramdisk/test"                                         # STEP 45
os0.rename(path1,path3)                                                 # STEP 46
str3 += 'j'                                                             # STEP 47
result = os0.path.isdir(path1)                                          # STEP 48
str3 += 'f'                                                             # STEP 49
str3 += 'z'                                                             # STEP 50
stat4 = os0.lstat(path1)                                                # STEP 51
bytes2 = 0                                                              # STEP 52
file0 = opener0(path1,'r')                                              # STEP 53
path3 += "/" + component0                                               # STEP 54
os0.makedirs(path3)                                                     # STEP 55
str3 += 'a'                                                             # STEP 56
component0 = "gamma"                                                    # STEP 57
result = os0.path.isabs(path3)                                          # STEP 58
result = stat2.st_size                                                  # STEP 59
path3 += "/" + component0                                               # STEP 60
str3 += 'q'                                                             # STEP 61
file0 = opener0(path3,'a')                                              # STEP 62
os0.symlink(path3,path1)                                                # STEP 63
str3 += " "                                                             # STEP 64
file0.write(str3)                                                       # STEP 65
os0.link(path1,path1)                                                   # STEP 66
str3 += 'b'                                                             # STEP 67
str1 = ""                                                               # STEP 68
os0.symlink(path3,path3)                                                # STEP 69
stat0 = os0.lstat(path1)                                                # STEP 70
str1 += 'r'                                                             # STEP 71
path1 += "/" + component4                                               # STEP 72
result = sorted(os0.listdir(path1))                                     # STEP 73
str1 += 'n'                                                             # STEP 74
stat3 = os0.lstat(path3)                                                # STEP 75
component0 = "e"                                                        # STEP 76
str3 += 'n'                                                             # STEP 77
file0.next()                                                            # STEP 78
str1 += 's'                                                             # STEP 79
str3 = ""                                                               # STEP 80
component4 = "e"                                                        # STEP 81
file0.write(str3)                                                       # STEP 82
stat4 = os0.stat(path3)                                                 # STEP 83
str1 += 'o'                                                             # STEP 84
path1 += "/" + component0                                               # STEP 85
component0 = "e"                                                        # STEP 86
result = os0.path.exists(path1)                                         # STEP 87
stat0 = os0.stat(path1)                                                 # STEP 88
result = os0.path.lexists(path1)                                        # STEP 89
result = os0.path.abspath(path3)                                        # STEP 90
result = stat3.st_size                                                  # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (11) == (0) ',), <traceback object at 0x1086de368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21936, in act460
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 77
STOPPING TESTING DUE TO TIMEOUT
42.2891118543 PERCENT COVERED
60.3340008259 TOTAL RUNTIME
870 EXECUTED
86956 TOTAL TEST OPERATIONS
52.4426226616 TIME SPENT EXECUTING TEST OPERATIONS
4.05082702637 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0517127513885 TIME SPENT CHECKING PROPERTIES
52.494335413 TOTAL TIME SPENT RUNNING SUT
2.54681563377 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "alpha"                                                     # STEP 0
component0 = "h"                                                         # STEP 1
component4 = "delta"                                                     # STEP 2
component2 = "epsilon"                                                   # STEP 3
component1 = "a"                                                         # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
path0 += "/" + component1                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
component1 = "alpha"                                                     # STEP 8
result = os0.path.isdir(path0)                                           # STEP 9
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 10
path0 += "/" + component4                                               # STEP 11
os0.symlink(path0,path0)                                                # STEP 12
bytes3 = 0                                                              # STEP 13
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 14
component4 = "omega"                                                    # STEP 15
bytes2 = 0                                                              # STEP 16
result = sorted(os0.listdir(path0))                                     # STEP 17
bytes3 += 1                                                             # STEP 18
stat3 = os0.stat(path0)                                                 # STEP 19
opener0 = newFakeOpener(os0)                                            # STEP 20
path0 += "/" + component4                                               # STEP 21
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 22
os0.path.getsize(path0)                                                 # STEP 23
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 24
result = os0.path.isdir(path0)                                          # STEP 25
bytes3 += 1                                                             # STEP 26
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 27
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 28
str3 = ""                                                               # STEP 29
os0.link(path0,path0)                                                   # STEP 30
stat3 = os0.lstat(path0)                                                # STEP 31
stat2 = os0.lstat(path0)                                                # STEP 32
str0 = ""                                                               # STEP 33
str0 += 'j'                                                             # STEP 34
result = os0.path.islink(path0)                                         # STEP 35
component4 = "d"                                                        # STEP 36
str0 += " "                                                             # STEP 37
str3 += 'n'                                                             # STEP 38
str0 += 'f'                                                             # STEP 39
bytes0 = 0                                                              # STEP 40
str3 += 'w'                                                             # STEP 41
stat0 = os0.lstat(path0)                                                # STEP 42
path0 += "/" + component2                                               # STEP 43
bytes2 += 1                                                             # STEP 44
str3 += 'f'                                                             # STEP 45
str0 += 'd'                                                             # STEP 46
component2 = "h"                                                        # STEP 47
str0 += 'w'                                                             # STEP 48
str3 += 'u'                                                             # STEP 49
str0 += 'h'                                                             # STEP 50
str0 += 'r'                                                             # STEP 51
str0 += 'j'                                                             # STEP 52
bytes0 += 1                                                             # STEP 53
str0 += 'u'                                                             # STEP 54
stat0 = os0.lstat(path0)                                                # STEP 55
str0 += 'f'                                                             # STEP 56
str3 += " "                                                             # STEP 57
str0 += 'o'                                                             # STEP 58
os0.makedirs(path0)                                                     # STEP 59
str3 += 't'                                                             # STEP 60
str3 += 'o'                                                             # STEP 61
path0 += "/" + component2                                               # STEP 62
str3 += 'b'                                                             # STEP 63
str1 = ""                                                               # STEP 64
str3 += 'v'                                                             # STEP 65
str0 += 'b'                                                             # STEP 66
str3 += 'y'                                                             # STEP 67
str1 += 'b'                                                             # STEP 68
str0 += 'c'                                                             # STEP 69
component2 = "beta"                                                     # STEP 70
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 71
str3 += 'x'                                                             # STEP 72
result = sorted(os0.listdir(path0))                                     # STEP 73
str2 = ""                                                               # STEP 74
bytes4 = 0                                                              # STEP 75
str3 += 'v'                                                             # STEP 76
stat3 = os0.fstat(fd0)                                                  # STEP 77
str1 += 'm'                                                             # STEP 78
file0 = opener0(path0,'r')                                              # STEP 79
path0 += "/" + component0                                               # STEP 80
str3 += 'd'                                                             # STEP 81
os0.mkdir(path0)                                                        # STEP 82
result = os0.path.isfile(path0)                                         # STEP 83
str3 += 'v'                                                             # STEP 84
file0.next()                                                            # STEP 85
os0.remove(path0)                                                       # STEP 86
bytes0 += 1                                                             # STEP 87
str2 += 'n'                                                             # STEP 88
str0 += 's'                                                             # STEP 89
str0 += 'd'                                                             # STEP 90
str0 += 'r'                                                             # STEP 91
os0.write(fd0,str0)                                                     # STEP 92
str2 += 't'                                                             # STEP 93
result = file0.read()                                                   # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (j fdwhrjufobcsdr) == () ',), <traceback object at 0x105db4488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
component1 = "f"                                                         # STEP 0
component2 = "omega"                                                     # STEP 1
component0 = "e"                                                         # STEP 2
bytes1 = 0                                                               # STEP 3
component4 = "alpha"                                                     # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
path3 += "/" + component2                                                # STEP 6
path3 += "/" + component1                                                # STEP 7
component2 = "gamma"                                                     # STEP 8
os0 = newFakeOS()                                                        # STEP 9
component1 = "omega"                                                    # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
component3 = "c"                                                        # STEP 12
stat3 = os0.stat(path3)                                                 # STEP 13
stat0 = os0.stat(path3)                                                 # STEP 14
result = os0.path.isabs(path4)                                          # STEP 15
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 16
os0.link(path4,path3)                                                   # STEP 17
os0.link(path4,path4)                                                   # STEP 18
os0.mkdir(path4)                                                        # STEP 19
result = os0.path.isdir(path4)                                          # STEP 20
os0.makedirs(path3)                                                     # STEP 21
path4 += "/" + component4                                               # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 24
path4 += "/" + component3                                               # STEP 25
stat3 = os0.fstat(fd0)                                                  # STEP 26
result = os0.path.exists(path3)                                         # STEP 27
path4 += "/" + component2                                               # STEP 28
component3 = "f"                                                        # STEP 29
component4 = "e"                                                        # STEP 30
component2 = "a"                                                        # STEP 31
path4 += "/" + component0                                               # STEP 32
result = os0.path.islink(path4)                                         # STEP 33
opener0 = newFakeOpener(os0)                                            # STEP 34
stat1 = os0.lstat(path4)                                                # STEP 35
file0 = opener0(path3)                                                  # STEP 36
component0 = "b"                                                        # STEP 37
result = os0.path.exists(path4)                                         # STEP 38
bytes3 = 0                                                              # STEP 39
result = os0.read(fd0,bytes3)                                           # STEP 40
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
os0.link(path4,path3)                                                   # STEP 42
str0 = ""                                                               # STEP 43
os0.rename(path4,path3)                                                 # STEP 44
str0 += " "                                                             # STEP 45
str0 += 's'                                                             # STEP 46
path3 += "/" + component2                                               # STEP 47
path4 += "/" + component2                                               # STEP 48
str1 = ""                                                               # STEP 49
os0.rmdir(path4)                                                        # STEP 50
result = os0.path.dirname(path3)                                        # STEP 51
component2 = "d"                                                        # STEP 52
os0.mkdir(path4)                                                        # STEP 53
os0.makedirs(path3)                                                     # STEP 54
result = os0.path.isdir(path3)                                          # STEP 55
bytes0 = 0                                                              # STEP 56
bytes3 += 1                                                             # STEP 57
str0 += 't'                                                             # STEP 58
str1 += 'n'                                                             # STEP 59
result = os0.path.lexists(path4)                                        # STEP 60
os0.close(fd0)                                                          # STEP 61
result = os0.read(fd0,bytes0)                                           # STEP 62
str1 += 't'                                                             # STEP 63
result = os0.path.isabs(path4)                                          # STEP 64
result = os0.path.isdir(path4)                                          # STEP 65
str1 += 'l'                                                             # STEP 66
stat4 = os0.lstat(path4)                                                # STEP 67
result = os0.readlink(path4)                                            # STEP 68
os0.symlink(path4,path3)                                                # STEP 69
bytes3 += 1                                                             # STEP 70
str1 += 'f'                                                             # STEP 71
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 72
os0.removedirs(path3)                                                   # STEP 73
os0.close(fd0)                                                          # STEP 74
stat2 = os0.lstat(path4)                                                # STEP 75
result = os0.read(fd0,bytes0)                                           # STEP 76
os0.removedirs(path4)                                                   # STEP 77
str1 += 'h'                                                             # STEP 78
result = os0.read(fd0,bytes1)                                           # STEP 79
file0 = opener0(path3,'w')                                              # STEP 80
path3 += "/" + component1                                               # STEP 81
str1 += 'b'                                                             # STEP 82
component1 = "gamma"                                                    # STEP 83
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 84
os0.remove(path4)                                                       # STEP 85
result = file0.read(bytes0)                                             # STEP 86
result = os0.readlink(path4)                                            # STEP 87
os0.symlink(path3,path3)                                                # STEP 88
os0.write(fd0,str0)                                                     # STEP 89
str0 += 'b'                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105b94ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
component3 = "gamma"                                                     # STEP 0
component4 = "e"                                                         # STEP 1
component0 = "omega"                                                     # STEP 2
bytes2 = 0                                                               # STEP 3
os0 = newFakeOS()                                                        # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 = ""                                                                # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
component1 = "gamma"                                                     # STEP 8
os0.link(path1,path1)                                                    # STEP 9
component2 = "b"                                                        # STEP 10
str3 += 'r'                                                             # STEP 11
str3 += 'e'                                                             # STEP 12
result = os0.path.abspath(path1)                                        # STEP 13
result = os0.path.lexists(path1)                                        # STEP 14
str3 += 'g'                                                             # STEP 15
str3 += 'w'                                                             # STEP 16
result = os0.path.isabs(path1)                                          # STEP 17
result = os0.readlink(path1)                                            # STEP 18
path1 += "/" + component4                                               # STEP 19
str3 += 'd'                                                             # STEP 20
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 21
stat3 = os0.stat(path1)                                                 # STEP 22
bytes2 += 1                                                             # STEP 23
os0.remove(path1)                                                       # STEP 24
path1 += "/" + component3                                               # STEP 25
str3 += 'z'                                                             # STEP 26
str3 += 't'                                                             # STEP 27
component3 = "phi"                                                      # STEP 28
str3 = ""                                                               # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
str3 += 'v'                                                             # STEP 31
path1 += "/" + component3                                               # STEP 32
str3 += 'f'                                                             # STEP 33
str3 += 'r'                                                             # STEP 34
component3 = "e"                                                        # STEP 35
result = os0.read(fd0,bytes2)                                           # STEP 36
result = stat3.st_size                                                  # STEP 37
file0 = opener0(path1)                                                  # STEP 38
str3 += 'a'                                                             # STEP 39
stat2 = os0.fstat(fd0)                                                  # STEP 40
component4 = "c"                                                        # STEP 41
str3 += 'a'                                                             # STEP 42
result = stat3.st_nlink                                                 # STEP 43
result = os0.path.exists(path1)                                         # STEP 44
path3 = "/Volumes/ramdisk/test"                                         # STEP 45
os0.rename(path1,path3)                                                 # STEP 46
str3 += 'j'                                                             # STEP 47
result = os0.path.isdir(path1)                                          # STEP 48
str3 += 'f'                                                             # STEP 49
str3 += 'z'                                                             # STEP 50
stat4 = os0.lstat(path1)                                                # STEP 51
bytes2 = 0                                                              # STEP 52
file0 = opener0(path1,'r')                                              # STEP 53
path3 += "/" + component0                                               # STEP 54
os0.makedirs(path3)                                                     # STEP 55
str3 += 'a'                                                             # STEP 56
component0 = "gamma"                                                    # STEP 57
result = os0.path.isabs(path3)                                          # STEP 58
result = stat2.st_size                                                  # STEP 59
path3 += "/" + component0                                               # STEP 60
str3 += 'q'                                                             # STEP 61
file0 = opener0(path3,'a')                                              # STEP 62
os0.symlink(path3,path1)                                                # STEP 63
str3 += " "                                                             # STEP 64
file0.write(str3)                                                       # STEP 65
os0.link(path1,path1)                                                   # STEP 66
str3 += 'b'                                                             # STEP 67
str1 = ""                                                               # STEP 68
os0.symlink(path3,path3)                                                # STEP 69
stat0 = os0.lstat(path1)                                                # STEP 70
str1 += 'r'                                                             # STEP 71
path1 += "/" + component4                                               # STEP 72
result = sorted(os0.listdir(path1))                                     # STEP 73
str1 += 'n'                                                             # STEP 74
stat3 = os0.lstat(path3)                                                # STEP 75
component0 = "e"                                                        # STEP 76
str3 += 'n'                                                             # STEP 77
file0.next()                                                            # STEP 78
str1 += 's'                                                             # STEP 79
str3 = ""                                                               # STEP 80
component4 = "e"                                                        # STEP 81
file0.write(str3)                                                       # STEP 82
stat4 = os0.stat(path3)                                                 # STEP 83
str1 += 'o'                                                             # STEP 84
path1 += "/" + component0                                               # STEP 85
component0 = "e"                                                        # STEP 86
result = os0.path.exists(path1)                                         # STEP 87
stat0 = os0.stat(path1)                                                 # STEP 88
result = os0.path.lexists(path1)                                        # STEP 89
result = os0.path.abspath(path3)                                        # STEP 90
result = stat3.st_size                                                  # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (11) == (0) ',), <traceback object at 0x1086de368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21936, in act460
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1173 BRANCHES COVERED
899 STATEMENTS COVERED
