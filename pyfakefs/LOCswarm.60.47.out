Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4941.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10b1509e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28674, in act569
    assert (raised == None) == (refRaised == None)
Original test has 98 steps

SAVING TEST AS failure.4941.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "phi"                                                       # STEP 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 1
os0 = newFakeOS()                                                        # STEP 2
os0.makedirs(path0)                                                      # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
bytes0 = 0                                                               # STEP 5
result = os0.path.dirname(path0)                                         # STEP 6
bytes1 = 0                                                               # STEP 7
component4 = "phi"                                                       # STEP 8
result = os0.readlink(path0)                                             # STEP 9
bytes2 = 0                                                              # STEP 10
component3 = "gamma"                                                    # STEP 11
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
result = sorted(os0.listdir(path4))                                     # STEP 13
path4 += "/" + component3                                               # STEP 14
str1 = ""                                                               # STEP 15
os0.rmdir(path4)                                                        # STEP 16
os0.rmdir(path4)                                                        # STEP 17
result = os0.path.lexists(path0)                                        # STEP 18
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 19
stat1 = os0.stat(path4)                                                 # STEP 20
path0 += "/" + component4                                               # STEP 21
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
path0 = "/Volumes/ramdisk/test"                                         # STEP 23
os0.close(fd0)                                                          # STEP 24
str4 = ""                                                               # STEP 25
os0.write(fd0,str1)                                                     # STEP 26
result = os0.path.isdir(path0)                                          # STEP 27
file0 = opener0(path0)                                                  # STEP 28
result = os0.readlink(path4)                                            # STEP 29
path2 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.dirname(path0)                                        # STEP 31
file0 = opener0(path0)                                                  # STEP 32
os0.remove(path0)                                                       # STEP 33
result = os0.path.dirname(path4)                                        # STEP 34
os0.remove(path4)                                                       # STEP 35
str3 = ""                                                               # STEP 36
os0.close(fd0)                                                          # STEP 37
file0 = opener0(path0,'r')                                              # STEP 38
os0.close(fd0)                                                          # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
result = sorted(os0.listdir(path0))                                     # STEP 41
result = os0.readlink(path4)                                            # STEP 42
file0 = opener0(path0)                                                  # STEP 43
os0.close(fd0)                                                          # STEP 44
component2 = "d"                                                        # STEP 45
path4 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.path.isdir(path4)                                          # STEP 47
os0.remove(path2)                                                       # STEP 48
file0 = opener0(path2)                                                  # STEP 49
result = os0.path.lexists(path4)                                        # STEP 50
path3 = "/Volumes/ramdisk/test"                                         # STEP 51
result = sorted(os0.listdir(path0))                                     # STEP 52
result = stat1.st_nlink                                                 # STEP 53
bytes3 = 0                                                              # STEP 54
os0.close(fd0)                                                          # STEP 55
component3 = "alpha"                                                    # STEP 56
os0.remove(path2)                                                       # STEP 57
bytes4 = 0                                                              # STEP 58
os0.close(fd0)                                                          # STEP 59
path4 = "/Volumes/ramdisk/test"                                         # STEP 60
os0.makedirs(path4)                                                     # STEP 61
os0.write(fd0,str1)                                                     # STEP 62
path0 += "/" + component4                                               # STEP 63
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 64
component4 = "f"                                                        # STEP 65
os0.write(fd0,str1)                                                     # STEP 66
path2 += "/" + component4                                               # STEP 67
os0.makedirs(path4)                                                     # STEP 68
result = os0.path.lexists(path4)                                        # STEP 69
os0.close(fd0)                                                          # STEP 70
result = os0.path.lexists(path2)                                        # STEP 71
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 72
component0 = "g"                                                        # STEP 73
os0.rmdir(path0)                                                        # STEP 74
file0 = opener0(path3)                                                  # STEP 75
result = os0.path.dirname(path3)                                        # STEP 76
file0 = opener0(path4)                                                  # STEP 77
file0 = opener0(path0)                                                  # STEP 78
result = stat1.st_nlink                                                 # STEP 79
file0.seek(bytes1)                                                      # STEP 80
os0.rmdir(path0)                                                        # STEP 81
file0.seek(bytes4)                                                      # STEP 82
os0.write(fd0,str3)                                                     # STEP 83
result = os0.path.isdir(path3)                                          # STEP 84
os0.write(fd0,str1)                                                     # STEP 85
path2 += "/" + component4                                               # STEP 86
os0.close(fd0)                                                          # STEP 87
result = file0.read()                                                   # STEP 88
path4 += "/" + component4                                               # STEP 89
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 90
result = stat1.st_nlink                                                 # STEP 91
os0.remove(path0)                                                       # STEP 92
result = file0.read(bytes2)                                             # STEP 93
file0.seek(bytes1)                                                      # STEP 94
result = os0.readlink(path3)                                            # STEP 95
os0.rmdir(path2)                                                        # STEP 96
result = file0.readline()                                               # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x107cb7098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28674, in act569
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #178 STEP #63 (0:00:30.001328) Sat Jul 22 03:14:44 2017 [ 902 stmts 1170 branches ] 17761 TOTAL ACTIONS (592.007127319/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1057cd560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 57 steps

SAVING TEST AS failure.4941.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
bytes2 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
str3 += 'u'                                                              # STEP 4
bytes2 += 1                                                              # STEP 5
str3 += 'g'                                                              # STEP 6
component4 = "phi"                                                       # STEP 7
str0 = ""                                                                # STEP 8
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
path0 += "/" + component4                                               # STEP 10
result = sorted(os0.listdir(path0))                                     # STEP 11
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 12
bytes2 += 1                                                             # STEP 13
result = os0.path.lexists(path0)                                        # STEP 14
os0.close(fd0)                                                          # STEP 15
result = os0.readlink(path0)                                            # STEP 16
result = os0.path.islink(path0)                                         # STEP 17
os0.link(path0,path0)                                                   # STEP 18
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = sorted(os0.listdir(path0))                                     # STEP 21
result = os0.read(fd0,bytes2)                                           # STEP 22
bytes2 += 1                                                             # STEP 23
bytes2 += 1                                                             # STEP 24
os0.path.getsize(path0)                                                 # STEP 25
result = os0.path.abspath(path0)                                        # STEP 26
str4 = ""                                                               # STEP 27
result = os0.path.lexists(path0)                                        # STEP 28
bytes2 = 0                                                              # STEP 29
result = os0.path.lexists(path0)                                        # STEP 30
bytes2 += 1                                                             # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
os0.link(path0,path0)                                                   # STEP 33
os0.link(path0,path0)                                                   # STEP 34
result = os0.path.lexists(path0)                                        # STEP 35
os0.close(fd0)                                                          # STEP 36
bytes2 = 0                                                              # STEP 37
bytes3 = 0                                                              # STEP 38
file0 = opener0(path0,'a')                                              # STEP 39
stat1 = os0.fstat(fd0)                                                  # STEP 40
bytes2 += 1                                                             # STEP 41
stat3 = os0.fstat(fd0)                                                  # STEP 42
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 43
result = os0.path.abspath(path0)                                        # STEP 44
os0.link(path0,path0)                                                   # STEP 45
result = file0.readline(bytes2)                                         # STEP 46
result = os0.read(fd0,bytes2)                                           # STEP 47
result = os0.path.abspath(path0)                                        # STEP 48
os0.rmdir(path0)                                                        # STEP 49
result = os0.readlink(path0)                                            # STEP 50
result = sorted(os0.listdir(path0))                                     # STEP 51
os0.path.getsize(path0)                                                 # STEP 52
result = os0.readlink(path0)                                            # STEP 53
result = os0.readlink(path0)                                            # STEP 54
str3 += 'n'                                                             # STEP 55
result = file0.readlines()                                              # STEP 56
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1056fcdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104962c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
Original test has 98 steps

SAVING TEST AS failure.4941.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
str0 = ""                                                                # STEP 1
bytes2 = 0                                                               # STEP 2
bytes2 += 1                                                              # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
bytes2 += 1                                                              # STEP 5
os0 = newFakeOS()                                                        # STEP 6
result = os0.path.islink(path3)                                          # STEP 7
component1 = "b"                                                         # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
str4 = ""                                                               # STEP 11
result = os0.path.abspath(path0)                                        # STEP 12
result = os0.path.exists(path0)                                         # STEP 13
opener0 = newFakeOpener(os0)                                            # STEP 14
path0 += "/" + component1                                               # STEP 15
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 16
os0.rmdir(path0)                                                        # STEP 17
os0.remove(path3)                                                       # STEP 18
os0.rmdir(path0)                                                        # STEP 19
os0.path.getsize(path0)                                                 # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
os0.close(fd0)                                                          # STEP 22
component2 = "g"                                                        # STEP 23
result = os0.readlink(path0)                                            # STEP 24
file0 = opener0(path0,'r')                                              # STEP 25
file0.write(str0)                                                       # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 27
str0 += " "                                                             # STEP 28
result = os0.readlink(path3)                                            # STEP 29
stat2 = os0.lstat(path0)                                                # STEP 30
file0.next()                                                            # STEP 31
result = os0.path.abspath(path0)                                        # STEP 32
result = file0.read()                                                   # STEP 33
component1 = "delta"                                                    # STEP 34
result = os0.readlink(path0)                                            # STEP 35
bytes1 = 0                                                              # STEP 36
os0.rename(path0,path3)                                                 # STEP 37
bytes4 = 0                                                              # STEP 38
file0.flush()                                                           # STEP 39
file0.flush()                                                           # STEP 40
os0.remove(path3)                                                       # STEP 41
file0.next()                                                            # STEP 42
result = os0.path.exists(path3)                                         # STEP 43
os0.remove(path0)                                                       # STEP 44
result = file0.readline(bytes1)                                         # STEP 45
result = file0.readline(bytes4)                                         # STEP 46
result = stat2.st_size                                                  # STEP 47
os0.path.getsize(path0)                                                 # STEP 48
bytes3 = 0                                                              # STEP 49
result = os0.readlink(path3)                                            # STEP 50
os0.rmdir(path0)                                                        # STEP 51
bytes3 += 1                                                             # STEP 52
result = os0.readlink(path3)                                            # STEP 53
path3 = "/Volumes/ramdisk/test"                                         # STEP 54
file0.next()                                                            # STEP 55
os0.rmdir(path0)                                                        # STEP 56
str3 += " "                                                             # STEP 57
path3 += "/" + component2                                               # STEP 58
file0.flush()                                                           # STEP 59
os0.remove(path3)                                                       # STEP 60
result = stat2.st_nlink                                                 # STEP 61
os0.rename(path3,path0)                                                 # STEP 62
file0.next()                                                            # STEP 63
file0.next()                                                            # STEP 64
result = os0.path.lexists(path3)                                        # STEP 65
result = os0.path.lexists(path0)                                        # STEP 66
result = os0.path.abspath(path0)                                        # STEP 67
result = os0.path.exists(path3)                                         # STEP 68
os0.rename(path3,path0)                                                 # STEP 69
result = stat2.st_size                                                  # STEP 70
result = os0.readlink(path0)                                            # STEP 71
result = os0.path.exists(path0)                                         # STEP 72
os0.rename(path3,path0)                                                 # STEP 73
result = os0.path.exists(path3)                                         # STEP 74
file0.next()                                                            # STEP 75
result = file0.read()                                                   # STEP 76
bytes4 += 1                                                             # STEP 77
file0.seek(bytes2)                                                      # STEP 78
str0 += " "                                                             # STEP 79
result = os0.path.islink(path0)                                         # STEP 80
path1 = "/Volumes/ramdisk/test"                                         # STEP 81
result = os0.path.islink(path1)                                         # STEP 82
result = file0.readline(bytes3)                                         # STEP 83
result = stat2.st_nlink                                                 # STEP 84
result = os0.path.exists(path3)                                         # STEP 85
bytes1 += 1                                                             # STEP 86
path1 = "/Volumes/ramdisk/test"                                         # STEP 87
os0.close(fd0)                                                          # STEP 88
bytes4 += 1                                                             # STEP 89
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 90
result = stat2.st_size                                                  # STEP 91
result = stat2.st_size                                                  # STEP 92
file0.write(str0)                                                       # STEP 93
stat0 = os0.lstat(path3)                                                # STEP 94
result = os0.readlink(path3)                                            # STEP 95
result = os0.path.lexists(path0)                                        # STEP 96
result = file0.read()                                                   # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10494c908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1080decb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 49 steps

SAVING TEST AS failure.4941.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
component0 = "e"                                                         # STEP 1
os0 = newFakeOS()                                                        # STEP 2
component4 = "e"                                                         # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
bytes1 = 0                                                               # STEP 5
bytes0 = 0                                                               # STEP 6
bytes4 = 0                                                               # STEP 7
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
result = os0.path.lexists(path3)                                         # STEP 9
str4 = ""                                                               # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.lexists(path4)                                        # STEP 12
component3 = "delta"                                                    # STEP 13
str2 = ""                                                               # STEP 14
path4 += "/" + component0                                               # STEP 15
result = os0.path.exists(path3)                                         # STEP 16
result = os0.path.dirname(path3)                                        # STEP 17
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 18
component0 = "alpha"                                                    # STEP 19
result = os0.path.exists(path4)                                         # STEP 20
os0.rename(path4,path3)                                                 # STEP 21
str0 = ""                                                               # STEP 22
result = os0.path.isfile(path4)                                         # STEP 23
result = os0.read(fd0,bytes4)                                           # STEP 24
os0.rename(path4,path3)                                                 # STEP 25
stat2 = os0.stat(path4)                                                 # STEP 26
file0 = opener0(path3)                                                  # STEP 27
os0.rename(path4,path3)                                                 # STEP 28
result = os0.path.dirname(path4)                                        # STEP 29
os0.rename(path4,path3)                                                 # STEP 30
os0.rename(path4,path3)                                                 # STEP 31
stat0 = os0.lstat(path4)                                                # STEP 32
result = os0.path.lexists(path4)                                        # STEP 33
stat1 = os0.lstat(path4)                                                # STEP 34
result = stat1.st_nlink                                                 # STEP 35
path0 = "/Volumes/ramdisk/test"                                         # STEP 36
stat3 = os0.lstat(path4)                                                # STEP 37
result = stat1.st_nlink                                                 # STEP 38
path0 += "/" + component4                                               # STEP 39
os0.rename(path0,path3)                                                 # STEP 40
result = os0.path.isfile(path4)                                         # STEP 41
component4 = "b"                                                        # STEP 42
os0.close(fd0)                                                          # STEP 43
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 44
file0 = opener0(path4,'w')                                              # STEP 45
os0.write(fd0,str3)                                                     # STEP 46
result = stat0.st_size                                                  # STEP 47
result = file0.readlines()                                              # STEP 48
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1087d55f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['  ']) == ([]) ",), <traceback object at 0x104b627e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 46 steps

SAVING TEST AS failure.4941.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes1 = 0                                                               # STEP 1
bytes1 += 1                                                              # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
str3 = ""                                                                # STEP 5
file0 = opener0(path0)                                                   # STEP 6
result = sorted(os0.listdir(path0))                                      # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
result = sorted(os0.listdir(path0))                                     # STEP 10
component2 = "e"                                                        # STEP 11
os0.mkdir(path2)                                                        # STEP 12
result = os0.path.islink(path0)                                         # STEP 13
os0.symlink(path2,path0)                                                # STEP 14
bytes1 += 1                                                             # STEP 15
os0.mkdir(path2)                                                        # STEP 16
result = os0.path.islink(path2)                                         # STEP 17
os0.mkdir(path2)                                                        # STEP 18
file0 = opener0(path2,'a')                                              # STEP 19
os0.symlink(path0,path0)                                                # STEP 20
result = sorted(os0.listdir(path0))                                     # STEP 21
result = sorted(os0.listdir(path2))                                     # STEP 22
path2 += "/" + component2                                               # STEP 23
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 24
component0 = "phi"                                                      # STEP 25
file0 = opener0(path2)                                                  # STEP 26
result = os0.path.isabs(path2)                                          # STEP 27
os0.symlink(path0,path2)                                                # STEP 28
result = file0.readline(bytes1)                                         # STEP 29
str3 += " "                                                             # STEP 30
os0.mkdir(path0)                                                        # STEP 31
str3 += " "                                                             # STEP 32
result = file0.read()                                                   # STEP 33
result = file0.readlines()                                              # STEP 34
str0 = ""                                                               # STEP 35
result = os0.path.isabs(path0)                                          # STEP 36
component4 = "alpha"                                                    # STEP 37
result = os0.path.isabs(path2)                                          # STEP 38
result = os0.path.islink(path2)                                         # STEP 39
file0.next()                                                            # STEP 40
stat2 = os0.lstat(path2)                                                # STEP 41
component1 = "omega"                                                    # STEP 42
os0.write(fd0,str3)                                                     # STEP 43
path2 += "/" + component1                                               # STEP 44
result = file0.readlines()                                              # STEP 45
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['  ']) == ([]) ",), <traceback object at 0x107eefd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 62
STOPPING TESTING DUE TO TIMEOUT
42.6235600149 PERCENT COVERED
60.3208220005 TOTAL RUNTIME
342 EXECUTED
34010 TOTAL TEST OPERATIONS
42.8095221519 TIME SPENT EXECUTING TEST OPERATIONS
15.0212862492 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0254952907562 TIME SPENT CHECKING PROPERTIES
42.8350174427 TOTAL TIME SPENT RUNNING SUT
1.06411838531 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
5 FAILED
0 REPEATS OF FAILURES
5 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "phi"                                                       # STEP 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 1
os0 = newFakeOS()                                                        # STEP 2
os0.makedirs(path0)                                                      # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
bytes0 = 0                                                               # STEP 5
result = os0.path.dirname(path0)                                         # STEP 6
bytes1 = 0                                                               # STEP 7
component4 = "phi"                                                       # STEP 8
result = os0.readlink(path0)                                             # STEP 9
bytes2 = 0                                                              # STEP 10
component3 = "gamma"                                                    # STEP 11
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
result = sorted(os0.listdir(path4))                                     # STEP 13
path4 += "/" + component3                                               # STEP 14
str1 = ""                                                               # STEP 15
os0.rmdir(path4)                                                        # STEP 16
os0.rmdir(path4)                                                        # STEP 17
result = os0.path.lexists(path0)                                        # STEP 18
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 19
stat1 = os0.stat(path4)                                                 # STEP 20
path0 += "/" + component4                                               # STEP 21
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
path0 = "/Volumes/ramdisk/test"                                         # STEP 23
os0.close(fd0)                                                          # STEP 24
str4 = ""                                                               # STEP 25
os0.write(fd0,str1)                                                     # STEP 26
result = os0.path.isdir(path0)                                          # STEP 27
file0 = opener0(path0)                                                  # STEP 28
result = os0.readlink(path4)                                            # STEP 29
path2 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.dirname(path0)                                        # STEP 31
file0 = opener0(path0)                                                  # STEP 32
os0.remove(path0)                                                       # STEP 33
result = os0.path.dirname(path4)                                        # STEP 34
os0.remove(path4)                                                       # STEP 35
str3 = ""                                                               # STEP 36
os0.close(fd0)                                                          # STEP 37
file0 = opener0(path0,'r')                                              # STEP 38
os0.close(fd0)                                                          # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
result = sorted(os0.listdir(path0))                                     # STEP 41
result = os0.readlink(path4)                                            # STEP 42
file0 = opener0(path0)                                                  # STEP 43
os0.close(fd0)                                                          # STEP 44
component2 = "d"                                                        # STEP 45
path4 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.path.isdir(path4)                                          # STEP 47
os0.remove(path2)                                                       # STEP 48
file0 = opener0(path2)                                                  # STEP 49
result = os0.path.lexists(path4)                                        # STEP 50
path3 = "/Volumes/ramdisk/test"                                         # STEP 51
result = sorted(os0.listdir(path0))                                     # STEP 52
result = stat1.st_nlink                                                 # STEP 53
bytes3 = 0                                                              # STEP 54
os0.close(fd0)                                                          # STEP 55
component3 = "alpha"                                                    # STEP 56
os0.remove(path2)                                                       # STEP 57
bytes4 = 0                                                              # STEP 58
os0.close(fd0)                                                          # STEP 59
path4 = "/Volumes/ramdisk/test"                                         # STEP 60
os0.makedirs(path4)                                                     # STEP 61
os0.write(fd0,str1)                                                     # STEP 62
path0 += "/" + component4                                               # STEP 63
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 64
component4 = "f"                                                        # STEP 65
os0.write(fd0,str1)                                                     # STEP 66
path2 += "/" + component4                                               # STEP 67
os0.makedirs(path4)                                                     # STEP 68
result = os0.path.lexists(path4)                                        # STEP 69
os0.close(fd0)                                                          # STEP 70
result = os0.path.lexists(path2)                                        # STEP 71
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 72
component0 = "g"                                                        # STEP 73
os0.rmdir(path0)                                                        # STEP 74
file0 = opener0(path3)                                                  # STEP 75
result = os0.path.dirname(path3)                                        # STEP 76
file0 = opener0(path4)                                                  # STEP 77
file0 = opener0(path0)                                                  # STEP 78
result = stat1.st_nlink                                                 # STEP 79
file0.seek(bytes1)                                                      # STEP 80
os0.rmdir(path0)                                                        # STEP 81
file0.seek(bytes4)                                                      # STEP 82
os0.write(fd0,str3)                                                     # STEP 83
result = os0.path.isdir(path3)                                          # STEP 84
os0.write(fd0,str1)                                                     # STEP 85
path2 += "/" + component4                                               # STEP 86
os0.close(fd0)                                                          # STEP 87
result = file0.read()                                                   # STEP 88
path4 += "/" + component4                                               # STEP 89
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 90
result = stat1.st_nlink                                                 # STEP 91
os0.remove(path0)                                                       # STEP 92
result = file0.read(bytes2)                                             # STEP 93
file0.seek(bytes1)                                                      # STEP 94
result = os0.readlink(path3)                                            # STEP 95
os0.rmdir(path2)                                                        # STEP 96
result = file0.readline()                                               # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x107cb7098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28674, in act569
    assert (raised == None) == (refRaised == None)
FAILURE 1
str3 = ""                                                                # STEP 0
bytes2 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
str3 += 'u'                                                              # STEP 4
bytes2 += 1                                                              # STEP 5
str3 += 'g'                                                              # STEP 6
component4 = "phi"                                                       # STEP 7
str0 = ""                                                                # STEP 8
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
path0 += "/" + component4                                               # STEP 10
result = sorted(os0.listdir(path0))                                     # STEP 11
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 12
bytes2 += 1                                                             # STEP 13
result = os0.path.lexists(path0)                                        # STEP 14
os0.close(fd0)                                                          # STEP 15
result = os0.readlink(path0)                                            # STEP 16
result = os0.path.islink(path0)                                         # STEP 17
os0.link(path0,path0)                                                   # STEP 18
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = sorted(os0.listdir(path0))                                     # STEP 21
result = os0.read(fd0,bytes2)                                           # STEP 22
bytes2 += 1                                                             # STEP 23
bytes2 += 1                                                             # STEP 24
os0.path.getsize(path0)                                                 # STEP 25
result = os0.path.abspath(path0)                                        # STEP 26
str4 = ""                                                               # STEP 27
result = os0.path.lexists(path0)                                        # STEP 28
bytes2 = 0                                                              # STEP 29
result = os0.path.lexists(path0)                                        # STEP 30
bytes2 += 1                                                             # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
os0.link(path0,path0)                                                   # STEP 33
os0.link(path0,path0)                                                   # STEP 34
result = os0.path.lexists(path0)                                        # STEP 35
os0.close(fd0)                                                          # STEP 36
bytes2 = 0                                                              # STEP 37
bytes3 = 0                                                              # STEP 38
file0 = opener0(path0,'a')                                              # STEP 39
stat1 = os0.fstat(fd0)                                                  # STEP 40
bytes2 += 1                                                             # STEP 41
stat3 = os0.fstat(fd0)                                                  # STEP 42
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 43
result = os0.path.abspath(path0)                                        # STEP 44
os0.link(path0,path0)                                                   # STEP 45
result = file0.readline(bytes2)                                         # STEP 46
result = os0.read(fd0,bytes2)                                           # STEP 47
result = os0.path.abspath(path0)                                        # STEP 48
os0.rmdir(path0)                                                        # STEP 49
result = os0.readlink(path0)                                            # STEP 50
result = sorted(os0.listdir(path0))                                     # STEP 51
os0.path.getsize(path0)                                                 # STEP 52
result = os0.readlink(path0)                                            # STEP 53
result = os0.readlink(path0)                                            # STEP 54
str3 += 'n'                                                             # STEP 55
result = file0.readlines()                                              # STEP 56
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1056fcdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
str3 = ""                                                                # STEP 0
str0 = ""                                                                # STEP 1
bytes2 = 0                                                               # STEP 2
bytes2 += 1                                                              # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
bytes2 += 1                                                              # STEP 5
os0 = newFakeOS()                                                        # STEP 6
result = os0.path.islink(path3)                                          # STEP 7
component1 = "b"                                                         # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
str4 = ""                                                               # STEP 11
result = os0.path.abspath(path0)                                        # STEP 12
result = os0.path.exists(path0)                                         # STEP 13
opener0 = newFakeOpener(os0)                                            # STEP 14
path0 += "/" + component1                                               # STEP 15
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 16
os0.rmdir(path0)                                                        # STEP 17
os0.remove(path3)                                                       # STEP 18
os0.rmdir(path0)                                                        # STEP 19
os0.path.getsize(path0)                                                 # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
os0.close(fd0)                                                          # STEP 22
component2 = "g"                                                        # STEP 23
result = os0.readlink(path0)                                            # STEP 24
file0 = opener0(path0,'r')                                              # STEP 25
file0.write(str0)                                                       # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 27
str0 += " "                                                             # STEP 28
result = os0.readlink(path3)                                            # STEP 29
stat2 = os0.lstat(path0)                                                # STEP 30
file0.next()                                                            # STEP 31
result = os0.path.abspath(path0)                                        # STEP 32
result = file0.read()                                                   # STEP 33
component1 = "delta"                                                    # STEP 34
result = os0.readlink(path0)                                            # STEP 35
bytes1 = 0                                                              # STEP 36
os0.rename(path0,path3)                                                 # STEP 37
bytes4 = 0                                                              # STEP 38
file0.flush()                                                           # STEP 39
file0.flush()                                                           # STEP 40
os0.remove(path3)                                                       # STEP 41
file0.next()                                                            # STEP 42
result = os0.path.exists(path3)                                         # STEP 43
os0.remove(path0)                                                       # STEP 44
result = file0.readline(bytes1)                                         # STEP 45
result = file0.readline(bytes4)                                         # STEP 46
result = stat2.st_size                                                  # STEP 47
os0.path.getsize(path0)                                                 # STEP 48
bytes3 = 0                                                              # STEP 49
result = os0.readlink(path3)                                            # STEP 50
os0.rmdir(path0)                                                        # STEP 51
bytes3 += 1                                                             # STEP 52
result = os0.readlink(path3)                                            # STEP 53
path3 = "/Volumes/ramdisk/test"                                         # STEP 54
file0.next()                                                            # STEP 55
os0.rmdir(path0)                                                        # STEP 56
str3 += " "                                                             # STEP 57
path3 += "/" + component2                                               # STEP 58
file0.flush()                                                           # STEP 59
os0.remove(path3)                                                       # STEP 60
result = stat2.st_nlink                                                 # STEP 61
os0.rename(path3,path0)                                                 # STEP 62
file0.next()                                                            # STEP 63
file0.next()                                                            # STEP 64
result = os0.path.lexists(path3)                                        # STEP 65
result = os0.path.lexists(path0)                                        # STEP 66
result = os0.path.abspath(path0)                                        # STEP 67
result = os0.path.exists(path3)                                         # STEP 68
os0.rename(path3,path0)                                                 # STEP 69
result = stat2.st_size                                                  # STEP 70
result = os0.readlink(path0)                                            # STEP 71
result = os0.path.exists(path0)                                         # STEP 72
os0.rename(path3,path0)                                                 # STEP 73
result = os0.path.exists(path3)                                         # STEP 74
file0.next()                                                            # STEP 75
result = file0.read()                                                   # STEP 76
bytes4 += 1                                                             # STEP 77
file0.seek(bytes2)                                                      # STEP 78
str0 += " "                                                             # STEP 79
result = os0.path.islink(path0)                                         # STEP 80
path1 = "/Volumes/ramdisk/test"                                         # STEP 81
result = os0.path.islink(path1)                                         # STEP 82
result = file0.readline(bytes3)                                         # STEP 83
result = stat2.st_nlink                                                 # STEP 84
result = os0.path.exists(path3)                                         # STEP 85
bytes1 += 1                                                             # STEP 86
path1 = "/Volumes/ramdisk/test"                                         # STEP 87
os0.close(fd0)                                                          # STEP 88
bytes4 += 1                                                             # STEP 89
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 90
result = stat2.st_size                                                  # STEP 91
result = stat2.st_size                                                  # STEP 92
file0.write(str0)                                                       # STEP 93
stat0 = os0.lstat(path3)                                                # STEP 94
result = os0.readlink(path3)                                            # STEP 95
result = os0.path.lexists(path0)                                        # STEP 96
result = file0.read()                                                   # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10494c908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
FAILURE 3
str3 = ""                                                                # STEP 0
component0 = "e"                                                         # STEP 1
os0 = newFakeOS()                                                        # STEP 2
component4 = "e"                                                         # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
bytes1 = 0                                                               # STEP 5
bytes0 = 0                                                               # STEP 6
bytes4 = 0                                                               # STEP 7
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
result = os0.path.lexists(path3)                                         # STEP 9
str4 = ""                                                               # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.lexists(path4)                                        # STEP 12
component3 = "delta"                                                    # STEP 13
str2 = ""                                                               # STEP 14
path4 += "/" + component0                                               # STEP 15
result = os0.path.exists(path3)                                         # STEP 16
result = os0.path.dirname(path3)                                        # STEP 17
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 18
component0 = "alpha"                                                    # STEP 19
result = os0.path.exists(path4)                                         # STEP 20
os0.rename(path4,path3)                                                 # STEP 21
str0 = ""                                                               # STEP 22
result = os0.path.isfile(path4)                                         # STEP 23
result = os0.read(fd0,bytes4)                                           # STEP 24
os0.rename(path4,path3)                                                 # STEP 25
stat2 = os0.stat(path4)                                                 # STEP 26
file0 = opener0(path3)                                                  # STEP 27
os0.rename(path4,path3)                                                 # STEP 28
result = os0.path.dirname(path4)                                        # STEP 29
os0.rename(path4,path3)                                                 # STEP 30
os0.rename(path4,path3)                                                 # STEP 31
stat0 = os0.lstat(path4)                                                # STEP 32
result = os0.path.lexists(path4)                                        # STEP 33
stat1 = os0.lstat(path4)                                                # STEP 34
result = stat1.st_nlink                                                 # STEP 35
path0 = "/Volumes/ramdisk/test"                                         # STEP 36
stat3 = os0.lstat(path4)                                                # STEP 37
result = stat1.st_nlink                                                 # STEP 38
path0 += "/" + component4                                               # STEP 39
os0.rename(path0,path3)                                                 # STEP 40
result = os0.path.isfile(path4)                                         # STEP 41
component4 = "b"                                                        # STEP 42
os0.close(fd0)                                                          # STEP 43
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 44
file0 = opener0(path4,'w')                                              # STEP 45
os0.write(fd0,str3)                                                     # STEP 46
result = stat0.st_size                                                  # STEP 47
result = file0.readlines()                                              # STEP 48
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1087d55f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
os0 = newFakeOS()                                                        # STEP 0
bytes1 = 0                                                               # STEP 1
bytes1 += 1                                                              # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
str3 = ""                                                                # STEP 5
file0 = opener0(path0)                                                   # STEP 6
result = sorted(os0.listdir(path0))                                      # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
result = sorted(os0.listdir(path0))                                     # STEP 10
component2 = "e"                                                        # STEP 11
os0.mkdir(path2)                                                        # STEP 12
result = os0.path.islink(path0)                                         # STEP 13
os0.symlink(path2,path0)                                                # STEP 14
bytes1 += 1                                                             # STEP 15
os0.mkdir(path2)                                                        # STEP 16
result = os0.path.islink(path2)                                         # STEP 17
os0.mkdir(path2)                                                        # STEP 18
file0 = opener0(path2,'a')                                              # STEP 19
os0.symlink(path0,path0)                                                # STEP 20
result = sorted(os0.listdir(path0))                                     # STEP 21
result = sorted(os0.listdir(path2))                                     # STEP 22
path2 += "/" + component2                                               # STEP 23
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 24
component0 = "phi"                                                      # STEP 25
file0 = opener0(path2)                                                  # STEP 26
result = os0.path.isabs(path2)                                          # STEP 27
os0.symlink(path0,path2)                                                # STEP 28
result = file0.readline(bytes1)                                         # STEP 29
str3 += " "                                                             # STEP 30
os0.mkdir(path0)                                                        # STEP 31
str3 += " "                                                             # STEP 32
result = file0.read()                                                   # STEP 33
result = file0.readlines()                                              # STEP 34
str0 = ""                                                               # STEP 35
result = os0.path.isabs(path0)                                          # STEP 36
component4 = "alpha"                                                    # STEP 37
result = os0.path.isabs(path2)                                          # STEP 38
result = os0.path.islink(path2)                                         # STEP 39
file0.next()                                                            # STEP 40
stat2 = os0.lstat(path2)                                                # STEP 41
component1 = "omega"                                                    # STEP 42
os0.write(fd0,str3)                                                     # STEP 43
path2 += "/" + component1                                               # STEP 44
result = file0.readlines()                                              # STEP 45
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['  ']) == ([]) ",), <traceback object at 0x107eefd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1178 BRANCHES COVERED
906 STATEMENTS COVERED
