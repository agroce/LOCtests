Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5217.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #363 STEP #32 (0:00:30.000013) Sat Jul 22 04:30:59 2017 [ 874 stmts 1140 branches ] 36232 TOTAL ACTIONS (1207.73280543/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10377fe60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 82 steps

SAVING TEST AS failure.5217.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
component2 = "g"                                                         # STEP 1
component3 = "a"                                                         # STEP 2
component1 = "b"                                                         # STEP 3
str4 = ""                                                                # STEP 4
os0 = newFakeOS()                                                        # STEP 5
str1 = ""                                                                # STEP 6
bytes4 = 0                                                               # STEP 7
component0 = "b"                                                         # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
str3 = ""                                                               # STEP 12
os0.link(path0,path0)                                                   # STEP 13
bytes4 += 1                                                             # STEP 14
path0 += "/" + component2                                               # STEP 15
path0 += "/" + component3                                               # STEP 16
file0 = opener0(path0,'w')                                              # STEP 17
component2 = "delta"                                                    # STEP 18
component3 = "b"                                                        # STEP 19
path2 += "/" + component1                                               # STEP 20
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
path2 += "/" + component3                                               # STEP 22
result = sorted(os0.listdir(path2))                                     # STEP 23
result = os0.path.dirname(path2)                                        # STEP 24
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 25
path0 += "/" + component1                                               # STEP 26
component1 = "beta"                                                     # STEP 27
stat1 = os0.lstat(path0)                                                # STEP 28
file0 = opener0(path0,'w')                                              # STEP 29
os0.path.getsize(path2)                                                 # STEP 30
str0 = ""                                                               # STEP 31
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 32
os0.symlink(path0,path0)                                                # STEP 33
stat0 = os0.lstat(path2)                                                # STEP 34
component3 = "gamma"                                                    # STEP 35
bytes4 += 1                                                             # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
os0.write(fd0,str3)                                                     # STEP 38
os0.makedirs(path2)                                                     # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
result = os0.path.isfile(path2)                                         # STEP 41
os0.mkdir(path0)                                                        # STEP 42
os0.remove(path0)                                                       # STEP 43
path0 += "/" + component2                                               # STEP 44
component2 = "d"                                                        # STEP 45
path2 += "/" + component2                                               # STEP 46
path2 += "/" + component1                                               # STEP 47
os0.write(fd0,str4)                                                     # STEP 48
os0.remove(path0)                                                       # STEP 49
path2 = "/Volumes/ramdisk/test"                                         # STEP 50
file0 = opener0(path0,'a')                                              # STEP 51
result = os0.path.isabs(path0)                                          # STEP 52
component1 = "omega"                                                    # STEP 53
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
bytes0 = 0                                                              # STEP 55
bytes3 = 0                                                              # STEP 56
component2 = "c"                                                        # STEP 57
os0.symlink(path2,path0)                                                # STEP 58
result = stat0.st_size                                                  # STEP 59
path0 += "/" + component2                                               # STEP 60
path2 += "/" + component3                                               # STEP 61
os0.close(fd0)                                                          # STEP 62
result = os0.path.dirname(path2)                                        # STEP 63
os0.symlink(path0,path2)                                                # STEP 64
path1 = "/Volumes/ramdisk/test"                                         # STEP 65
os0.link(path1,path1)                                                   # STEP 66
result = os0.path.isfile(path0)                                         # STEP 67
os0.remove(path0)                                                       # STEP 68
file0 = opener0(path0,'a')                                              # STEP 69
path2 += "/" + component4                                               # STEP 70
component4 = "gamma"                                                    # STEP 71
result = os0.readlink(path2)                                            # STEP 72
path2 += "/" + component4                                               # STEP 73
component2 = "f"                                                        # STEP 74
bytes2 = 0                                                              # STEP 75
os0.write(fd0,str3)                                                     # STEP 76
component3 = "epsilon"                                                  # STEP 77
os0.symlink(path1,path1)                                                # STEP 78
result = sorted(os0.listdir(path1))                                     # STEP 79
component4 = "h"                                                        # STEP 80
result = file0.readlines()                                              # STEP 81
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x101730a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 39
STOPPING TESTING DUE TO TIMEOUT
41.8803418803 PERCENT COVERED
60.3340401649 TOTAL RUNTIME
708 EXECUTED
70721 TOTAL TEST OPERATIONS
54.3211112022 TIME SPENT EXECUTING TEST OPERATIONS
2.2503285408 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0451674461365 TIME SPENT CHECKING PROPERTIES
54.3662786484 TOTAL TIME SPENT RUNNING SUT
2.10613560677 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component4 = "beta"                                                      # STEP 0
component2 = "g"                                                         # STEP 1
component3 = "a"                                                         # STEP 2
component1 = "b"                                                         # STEP 3
str4 = ""                                                                # STEP 4
os0 = newFakeOS()                                                        # STEP 5
str1 = ""                                                                # STEP 6
bytes4 = 0                                                               # STEP 7
component0 = "b"                                                         # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
str3 = ""                                                               # STEP 12
os0.link(path0,path0)                                                   # STEP 13
bytes4 += 1                                                             # STEP 14
path0 += "/" + component2                                               # STEP 15
path0 += "/" + component3                                               # STEP 16
file0 = opener0(path0,'w')                                              # STEP 17
component2 = "delta"                                                    # STEP 18
component3 = "b"                                                        # STEP 19
path2 += "/" + component1                                               # STEP 20
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
path2 += "/" + component3                                               # STEP 22
result = sorted(os0.listdir(path2))                                     # STEP 23
result = os0.path.dirname(path2)                                        # STEP 24
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 25
path0 += "/" + component1                                               # STEP 26
component1 = "beta"                                                     # STEP 27
stat1 = os0.lstat(path0)                                                # STEP 28
file0 = opener0(path0,'w')                                              # STEP 29
os0.path.getsize(path2)                                                 # STEP 30
str0 = ""                                                               # STEP 31
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 32
os0.symlink(path0,path0)                                                # STEP 33
stat0 = os0.lstat(path2)                                                # STEP 34
component3 = "gamma"                                                    # STEP 35
bytes4 += 1                                                             # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
os0.write(fd0,str3)                                                     # STEP 38
os0.makedirs(path2)                                                     # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
result = os0.path.isfile(path2)                                         # STEP 41
os0.mkdir(path0)                                                        # STEP 42
os0.remove(path0)                                                       # STEP 43
path0 += "/" + component2                                               # STEP 44
component2 = "d"                                                        # STEP 45
path2 += "/" + component2                                               # STEP 46
path2 += "/" + component1                                               # STEP 47
os0.write(fd0,str4)                                                     # STEP 48
os0.remove(path0)                                                       # STEP 49
path2 = "/Volumes/ramdisk/test"                                         # STEP 50
file0 = opener0(path0,'a')                                              # STEP 51
result = os0.path.isabs(path0)                                          # STEP 52
component1 = "omega"                                                    # STEP 53
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
bytes0 = 0                                                              # STEP 55
bytes3 = 0                                                              # STEP 56
component2 = "c"                                                        # STEP 57
os0.symlink(path2,path0)                                                # STEP 58
result = stat0.st_size                                                  # STEP 59
path0 += "/" + component2                                               # STEP 60
path2 += "/" + component3                                               # STEP 61
os0.close(fd0)                                                          # STEP 62
result = os0.path.dirname(path2)                                        # STEP 63
os0.symlink(path0,path2)                                                # STEP 64
path1 = "/Volumes/ramdisk/test"                                         # STEP 65
os0.link(path1,path1)                                                   # STEP 66
result = os0.path.isfile(path0)                                         # STEP 67
os0.remove(path0)                                                       # STEP 68
file0 = opener0(path0,'a')                                              # STEP 69
path2 += "/" + component4                                               # STEP 70
component4 = "gamma"                                                    # STEP 71
result = os0.readlink(path2)                                            # STEP 72
path2 += "/" + component4                                               # STEP 73
component2 = "f"                                                        # STEP 74
bytes2 = 0                                                              # STEP 75
os0.write(fd0,str3)                                                     # STEP 76
component3 = "epsilon"                                                  # STEP 77
os0.symlink(path1,path1)                                                # STEP 78
result = sorted(os0.listdir(path1))                                     # STEP 79
component4 = "h"                                                        # STEP 80
result = file0.readlines()                                              # STEP 81
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x101730a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1166 BRANCHES COVERED
895 STATEMENTS COVERED
