Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4834.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (mt) == () ',), <traceback object at 0x10a98bea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 80 steps

SAVING TEST AS failure.4834.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
component3 = "d"                                                         # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
component0 = "delta"                                                     # STEP 3
component2 = "lambda"                                                    # STEP 4
bytes0 = 0                                                               # STEP 5
component4 = "beta"                                                      # STEP 6
os0 = newFakeOS()                                                        # STEP 7
bytes3 = 0                                                               # STEP 8
result = os0.path.dirname(path1)                                         # STEP 9
result = sorted(os0.listdir(path1))                                     # STEP 10
os0.makedirs(path1)                                                     # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
os0.mkdir(path1)                                                        # STEP 13
bytes1 = 0                                                              # STEP 14
path1 += "/" + component0                                               # STEP 15
result = os0.path.isabs(path2)                                          # STEP 16
result = os0.path.isfile(path2)                                         # STEP 17
result = os0.path.isdir(path1)                                          # STEP 18
os0.remove(path1)                                                       # STEP 19
result = os0.readlink(path1)                                            # STEP 20
result = os0.path.islink(path1)                                         # STEP 21
component1 = "epsilon"                                                  # STEP 22
component0 = "c"                                                        # STEP 23
os0.rename(path1,path2)                                                 # STEP 24
bytes3 += 1                                                             # STEP 25
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
result = os0.path.exists(path1)                                         # STEP 29
path2 += "/" + component0                                               # STEP 30
str3 = ""                                                               # STEP 31
component0 = "phi"                                                      # STEP 32
os0.mkdir(path1)                                                        # STEP 33
os0.rename(path2,path4)                                                 # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
str3 += 't'                                                             # STEP 36
path2 += "/" + component0                                               # STEP 37
str3 += 'e'                                                             # STEP 38
os0.symlink(path1,path1)                                                # STEP 39
result = os0.path.isdir(path4)                                          # STEP 40
str3 = ""                                                               # STEP 41
os0.remove(path4)                                                       # STEP 42
stat2 = os0.stat(path2)                                                 # STEP 43
component0 = "beta"                                                     # STEP 44
os0.symlink(path2,path1)                                                # STEP 45
bytes0 += 1                                                             # STEP 46
file0 = opener0(path1,'r')                                              # STEP 47
result = os0.path.dirname(path2)                                        # STEP 48
os0.path.getsize(path2)                                                 # STEP 49
result = os0.read(fd0,bytes3)                                           # STEP 50
os0.path.getsize(path1)                                                 # STEP 51
result = file0.read(bytes0)                                             # STEP 52
result = sorted(os0.listdir(path2))                                     # STEP 53
str3 += 'm'                                                             # STEP 54
result = file0.read()                                                   # STEP 55
str3 += 't'                                                             # STEP 56
result = sorted(os0.listdir(path4))                                     # STEP 57
os0.path.getsize(path2)                                                 # STEP 58
result = os0.path.abspath(path4)                                        # STEP 59
os0.symlink(path4,path1)                                                # STEP 60
result = file0.readline(bytes1)                                         # STEP 61
stat1 = os0.stat(path1)                                                 # STEP 62
stat2 = os0.stat(path1)                                                 # STEP 63
result = os0.path.exists(path2)                                         # STEP 64
result = file0.read(bytes0)                                             # STEP 65
file0.truncate()                                                        # STEP 66
stat3 = os0.fstat(fd0)                                                  # STEP 67
os0.write(fd0,str3)                                                     # STEP 68
str3 += 'f'                                                             # STEP 69
str2 = ""                                                               # STEP 70
str1 = ""                                                               # STEP 71
os0.rmdir(path1)                                                        # STEP 72
str2 += 'b'                                                             # STEP 73
str2 += 'o'                                                             # STEP 74
str1 += 'w'                                                             # STEP 75
str2 += 'k'                                                             # STEP 76
os0.link(path1,path4)                                                   # STEP 77
bytes3 += 1                                                             # STEP 78
result = file0.readline()                                               # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (mt) == () ',), <traceback object at 0x104476638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x105acbc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 55 steps

SAVING TEST AS failure.4834.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes3 = 0                                                               # STEP 0
component3 = "a"                                                         # STEP 1
component2 = "epsilon"                                                   # STEP 2
component4 = "a"                                                         # STEP 3
component1 = "b"                                                         # STEP 4
component0 = "e"                                                         # STEP 5
str2 = ""                                                                # STEP 6
str2 += 'l'                                                              # STEP 7
bytes4 = 0                                                               # STEP 8
str2 += 'g'                                                              # STEP 9
str2 += 'f'                                                             # STEP 10
str2 += 'a'                                                             # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
str2 += 'u'                                                             # STEP 13
path3 += "/" + component0                                               # STEP 14
str2 += 'u'                                                             # STEP 15
component0 = "e"                                                        # STEP 16
bytes2 = 0                                                              # STEP 17
os0 = newFakeOS()                                                       # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
path3 = "/Volumes/ramdisk/test"                                         # STEP 20
str2 += 's'                                                             # STEP 21
bytes2 += 1                                                             # STEP 22
file0 = opener0(path3,'r')                                              # STEP 23
path3 += "/" + component3                                               # STEP 24
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 25
result = os0.read(fd0,bytes2)                                           # STEP 26
str2 += 'y'                                                             # STEP 27
bytes2 = 0                                                              # STEP 28
component3 = "phi"                                                      # STEP 29
stat4 = os0.fstat(fd0)                                                  # STEP 30
str2 += 'e'                                                             # STEP 31
str2 += 'e'                                                             # STEP 32
bytes3 += 1                                                             # STEP 33
stat0 = os0.stat(path3)                                                 # STEP 34
result = os0.path.isfile(path3)                                         # STEP 35
file0 = opener0(path3,'a')                                              # STEP 36
str2 += 'k'                                                             # STEP 37
result = stat0.st_nlink                                                 # STEP 38
str2 += 'f'                                                             # STEP 39
bytes3 = 0                                                              # STEP 40
bytes3 += 1                                                             # STEP 41
str2 += 'x'                                                             # STEP 42
str2 += 'x'                                                             # STEP 43
result = file0.readline(bytes3)                                         # STEP 44
stat3 = os0.lstat(path3)                                                # STEP 45
result = sorted(os0.listdir(path3))                                     # STEP 46
stat0 = os0.stat(path3)                                                 # STEP 47
str2 = ""                                                               # STEP 48
str2 += 'c'                                                             # STEP 49
result = os0.readlink(path3)                                            # STEP 50
file0.write(str2)                                                       # STEP 51
stat1 = os0.fstat(fd0)                                                  # STEP 52
file0.seek(bytes2)                                                      # STEP 53
result = stat1.st_size                                                  # STEP 54
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x104ce4bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #485 STEP #39 (0:00:30.000632) Sat Jul 22 02:32:14 2017 [ 893 stmts 1161 branches ] 48374 TOTAL ACTIONS (1612.43269552/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 39
STOPPING TESTING DUE TO TIMEOUT
42.4005945745 PERCENT COVERED
60.3372559547 TOTAL RUNTIME
937 EXECUTED
93574 TOTAL TEST OPERATIONS
52.0329444408 TIME SPENT EXECUTING TEST OPERATIONS
4.38487410545 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0544974803925 TIME SPENT CHECKING PROPERTIES
52.0874419212 TOTAL TIME SPENT RUNNING SUT
2.73863315582 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
component3 = "d"                                                         # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
component0 = "delta"                                                     # STEP 3
component2 = "lambda"                                                    # STEP 4
bytes0 = 0                                                               # STEP 5
component4 = "beta"                                                      # STEP 6
os0 = newFakeOS()                                                        # STEP 7
bytes3 = 0                                                               # STEP 8
result = os0.path.dirname(path1)                                         # STEP 9
result = sorted(os0.listdir(path1))                                     # STEP 10
os0.makedirs(path1)                                                     # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
os0.mkdir(path1)                                                        # STEP 13
bytes1 = 0                                                              # STEP 14
path1 += "/" + component0                                               # STEP 15
result = os0.path.isabs(path2)                                          # STEP 16
result = os0.path.isfile(path2)                                         # STEP 17
result = os0.path.isdir(path1)                                          # STEP 18
os0.remove(path1)                                                       # STEP 19
result = os0.readlink(path1)                                            # STEP 20
result = os0.path.islink(path1)                                         # STEP 21
component1 = "epsilon"                                                  # STEP 22
component0 = "c"                                                        # STEP 23
os0.rename(path1,path2)                                                 # STEP 24
bytes3 += 1                                                             # STEP 25
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
result = os0.path.exists(path1)                                         # STEP 29
path2 += "/" + component0                                               # STEP 30
str3 = ""                                                               # STEP 31
component0 = "phi"                                                      # STEP 32
os0.mkdir(path1)                                                        # STEP 33
os0.rename(path2,path4)                                                 # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
str3 += 't'                                                             # STEP 36
path2 += "/" + component0                                               # STEP 37
str3 += 'e'                                                             # STEP 38
os0.symlink(path1,path1)                                                # STEP 39
result = os0.path.isdir(path4)                                          # STEP 40
str3 = ""                                                               # STEP 41
os0.remove(path4)                                                       # STEP 42
stat2 = os0.stat(path2)                                                 # STEP 43
component0 = "beta"                                                     # STEP 44
os0.symlink(path2,path1)                                                # STEP 45
bytes0 += 1                                                             # STEP 46
file0 = opener0(path1,'r')                                              # STEP 47
result = os0.path.dirname(path2)                                        # STEP 48
os0.path.getsize(path2)                                                 # STEP 49
result = os0.read(fd0,bytes3)                                           # STEP 50
os0.path.getsize(path1)                                                 # STEP 51
result = file0.read(bytes0)                                             # STEP 52
result = sorted(os0.listdir(path2))                                     # STEP 53
str3 += 'm'                                                             # STEP 54
result = file0.read()                                                   # STEP 55
str3 += 't'                                                             # STEP 56
result = sorted(os0.listdir(path4))                                     # STEP 57
os0.path.getsize(path2)                                                 # STEP 58
result = os0.path.abspath(path4)                                        # STEP 59
os0.symlink(path4,path1)                                                # STEP 60
result = file0.readline(bytes1)                                         # STEP 61
stat1 = os0.stat(path1)                                                 # STEP 62
stat2 = os0.stat(path1)                                                 # STEP 63
result = os0.path.exists(path2)                                         # STEP 64
result = file0.read(bytes0)                                             # STEP 65
file0.truncate()                                                        # STEP 66
stat3 = os0.fstat(fd0)                                                  # STEP 67
os0.write(fd0,str3)                                                     # STEP 68
str3 += 'f'                                                             # STEP 69
str2 = ""                                                               # STEP 70
str1 = ""                                                               # STEP 71
os0.rmdir(path1)                                                        # STEP 72
str2 += 'b'                                                             # STEP 73
str2 += 'o'                                                             # STEP 74
str1 += 'w'                                                             # STEP 75
str2 += 'k'                                                             # STEP 76
os0.link(path1,path4)                                                   # STEP 77
bytes3 += 1                                                             # STEP 78
result = file0.readline()                                               # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (mt) == () ',), <traceback object at 0x104476638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
bytes3 = 0                                                               # STEP 0
component3 = "a"                                                         # STEP 1
component2 = "epsilon"                                                   # STEP 2
component4 = "a"                                                         # STEP 3
component1 = "b"                                                         # STEP 4
component0 = "e"                                                         # STEP 5
str2 = ""                                                                # STEP 6
str2 += 'l'                                                              # STEP 7
bytes4 = 0                                                               # STEP 8
str2 += 'g'                                                              # STEP 9
str2 += 'f'                                                             # STEP 10
str2 += 'a'                                                             # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
str2 += 'u'                                                             # STEP 13
path3 += "/" + component0                                               # STEP 14
str2 += 'u'                                                             # STEP 15
component0 = "e"                                                        # STEP 16
bytes2 = 0                                                              # STEP 17
os0 = newFakeOS()                                                       # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
path3 = "/Volumes/ramdisk/test"                                         # STEP 20
str2 += 's'                                                             # STEP 21
bytes2 += 1                                                             # STEP 22
file0 = opener0(path3,'r')                                              # STEP 23
path3 += "/" + component3                                               # STEP 24
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 25
result = os0.read(fd0,bytes2)                                           # STEP 26
str2 += 'y'                                                             # STEP 27
bytes2 = 0                                                              # STEP 28
component3 = "phi"                                                      # STEP 29
stat4 = os0.fstat(fd0)                                                  # STEP 30
str2 += 'e'                                                             # STEP 31
str2 += 'e'                                                             # STEP 32
bytes3 += 1                                                             # STEP 33
stat0 = os0.stat(path3)                                                 # STEP 34
result = os0.path.isfile(path3)                                         # STEP 35
file0 = opener0(path3,'a')                                              # STEP 36
str2 += 'k'                                                             # STEP 37
result = stat0.st_nlink                                                 # STEP 38
str2 += 'f'                                                             # STEP 39
bytes3 = 0                                                              # STEP 40
bytes3 += 1                                                             # STEP 41
str2 += 'x'                                                             # STEP 42
str2 += 'x'                                                             # STEP 43
result = file0.readline(bytes3)                                         # STEP 44
stat3 = os0.lstat(path3)                                                # STEP 45
result = sorted(os0.listdir(path3))                                     # STEP 46
stat0 = os0.stat(path3)                                                 # STEP 47
str2 = ""                                                               # STEP 48
str2 += 'c'                                                             # STEP 49
result = os0.readlink(path3)                                            # STEP 50
file0.write(str2)                                                       # STEP 51
stat1 = os0.fstat(fd0)                                                  # STEP 52
file0.seek(bytes2)                                                      # STEP 53
result = stat1.st_size                                                  # STEP 54
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x104ce4bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1176 BRANCHES COVERED
904 STATEMENTS COVERED
