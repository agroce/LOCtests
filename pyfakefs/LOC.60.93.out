Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5858.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a70db90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 44 steps

SAVING TEST AS failure.5858.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "h"                                                         # STEP 0
component0 = "lambda"                                                    # STEP 1
os0 = newFakeOS()                                                        # STEP 2
bytes2 = 0                                                               # STEP 3
bytes1 = 0                                                               # STEP 4
bytes0 = 0                                                               # STEP 5
bytes3 = 0                                                               # STEP 6
bytes4 = 0                                                               # STEP 7
bytes0 += 1                                                              # STEP 8
component4 = "beta"                                                      # STEP 9
component3 = "epsilon"                                                  # STEP 10
component1 = "phi"                                                      # STEP 11
bytes0 = 0                                                              # STEP 12
str3 = ""                                                               # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
result = os0.readlink(path1)                                            # STEP 15
path1 += "/" + component3                                               # STEP 16
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 17
stat1 = os0.lstat(path1)                                                # STEP 18
os0.remove(path1)                                                       # STEP 19
result = os0.read(fd0,bytes0)                                           # STEP 20
result = stat1.st_size                                                  # STEP 21
bytes0 = 0                                                              # STEP 22
os0.makedirs(path1)                                                     # STEP 23
str0 = ""                                                               # STEP 24
result = os0.read(fd0,bytes1)                                           # STEP 25
bytes1 += 1                                                             # STEP 26
os0.close(fd0)                                                          # STEP 27
os0.close(fd0)                                                          # STEP 28
opener0 = newFakeOpener(os0)                                            # STEP 29
str0 += 'z'                                                             # STEP 30
str0 += " "                                                             # STEP 31
str2 = ""                                                               # STEP 32
result = os0.read(fd0,bytes0)                                           # STEP 33
path1 += "/" + component3                                               # STEP 34
file0 = opener0(path1,'r')                                              # STEP 35
result = os0.readlink(path1)                                            # STEP 36
str4 = ""                                                               # STEP 37
result = os0.path.exists(path1)                                         # STEP 38
result = os0.read(fd0,bytes3)                                           # STEP 39
file0 = opener0(path1,'w')                                              # STEP 40
result = os0.read(fd0,bytes0)                                           # STEP 41
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 42
result = file0.readline()                                               # STEP 43
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a6943f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a212fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 62 steps

SAVING TEST AS failure.5858.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str1 = ""                                                                # STEP 0
component3 = "lambda"                                                    # STEP 1
component4 = "b"                                                         # STEP 2
component0 = "b"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
str2 = ""                                                                # STEP 6
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.dirname(path0)                                         # STEP 8
path4 += "/" + component0                                                # STEP 9
result = os0.path.islink(path0)                                         # STEP 10
result = os0.path.isfile(path4)                                         # STEP 11
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 12
component2 = "g"                                                        # STEP 13
os0.symlink(path4,path0)                                                # STEP 14
os0.rename(path4,path0)                                                 # STEP 15
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 16
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 17
os0.link(path0,path0)                                                   # STEP 18
result = sorted(os0.listdir(path0))                                     # STEP 19
result = os0.path.exists(path0)                                         # STEP 20
os0.close(fd0)                                                          # STEP 21
result = os0.path.isdir(path4)                                          # STEP 22
str0 = ""                                                               # STEP 23
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
os0.close(fd0)                                                          # STEP 25
os0.remove(path0)                                                       # STEP 26
component1 = "lambda"                                                   # STEP 27
str1 += " "                                                             # STEP 28
os0.path.getsize(path4)                                                 # STEP 29
os0.mkdir(path4)                                                        # STEP 30
str1 += 'y'                                                             # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
os0.close(fd0)                                                          # STEP 33
path0 += "/" + component1                                               # STEP 34
os0.link(path0,path4)                                                   # STEP 35
result = sorted(os0.listdir(path4))                                     # STEP 36
stat2 = os0.lstat(path4)                                                # STEP 37
os0.write(fd0,str1)                                                     # STEP 38
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 39
stat3 = os0.stat(path4)                                                 # STEP 40
result = os0.path.lexists(path0)                                        # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
result = os0.path.islink(path0)                                         # STEP 43
opener0 = newFakeOpener(os0)                                            # STEP 44
file0 = opener0(path4,'r')                                              # STEP 45
os0.mkdir(path0)                                                        # STEP 46
os0.write(fd0,str1)                                                     # STEP 47
os0.makedirs(path0)                                                     # STEP 48
str3 = ""                                                               # STEP 49
result = os0.path.lexists(path0)                                        # STEP 50
os0.makedirs(path4)                                                     # STEP 51
os0.path.getsize(path4)                                                 # STEP 52
file0.next()                                                            # STEP 53
result = stat3.st_nlink                                                 # STEP 54
os0.remove(path0)                                                       # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
stat1 = os0.stat(path4)                                                 # STEP 57
os0.rmdir(path0)                                                        # STEP 58
stat4 = os0.fstat(fd0)                                                  # STEP 59
file0.write(str2)                                                       # STEP 60
file0.truncate()                                                        # STEP 61
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a085cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #171 STEP #41 (0:00:30.000214) Sat Jul 22 08:11:13 2017 [ 888 stmts 1152 branches ] 16947 TOTAL ACTIONS (564.895968528/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1062c3dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 63 steps

SAVING TEST AS failure.5858.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component4 = "phi"                                                       # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str0 = ""                                                                # STEP 3
bytes2 = 0                                                               # STEP 4
bytes2 += 1                                                              # STEP 5
str0 += " "                                                              # STEP 6
bytes0 = 0                                                               # STEP 7
str0 += 'c'                                                              # STEP 8
str0 += 'q'                                                              # STEP 9
bytes0 += 1                                                             # STEP 10
str1 = ""                                                               # STEP 11
str0 += 'c'                                                             # STEP 12
bytes2 += 1                                                             # STEP 13
str1 += 'd'                                                             # STEP 14
path2 = "/Volumes/ramdisk/test"                                         # STEP 15
bytes1 = 0                                                              # STEP 16
result = os0.path.isfile(path2)                                         # STEP 17
os0.link(path2,path2)                                                   # STEP 18
result = os0.path.isabs(path2)                                          # STEP 19
result = os0.path.isabs(path2)                                          # STEP 20
result = os0.path.isabs(path2)                                          # STEP 21
result = os0.path.isdir(path2)                                          # STEP 22
os0.symlink(path2,path2)                                                # STEP 23
bytes0 = 0                                                              # STEP 24
str1 += 'w'                                                             # STEP 25
file0 = opener0(path2,'r')                                              # STEP 26
file0 = opener0(path2,'a')                                              # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
path1 = "/Volumes/ramdisk/test"                                         # STEP 29
os0.remove(path1)                                                       # STEP 30
result = os0.path.abspath(path4)                                        # STEP 31
file0 = opener0(path2,'r')                                              # STEP 32
path2 += "/" + component4                                               # STEP 33
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 34
result = os0.path.dirname(path1)                                        # STEP 35
result = os0.path.dirname(path4)                                        # STEP 36
os0.makedirs(path2)                                                     # STEP 37
file0 = opener0(path4,'w')                                              # STEP 38
os0.close(fd0)                                                          # STEP 39
component1 = "lambda"                                                   # STEP 40
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 41
result = os0.read(fd0,bytes1)                                           # STEP 42
result = sorted(os0.listdir(path1))                                     # STEP 43
file0 = opener0(path2,'w')                                              # STEP 44
file0.flush()                                                           # STEP 45
result = os0.path.exists(path2)                                         # STEP 46
result = sorted(os0.listdir(path4))                                     # STEP 47
os0.link(path4,path4)                                                   # STEP 48
result = file0.read()                                                   # STEP 49
file0.write(str1)                                                       # STEP 50
component4 = "f"                                                        # STEP 51
file0.flush()                                                           # STEP 52
stat1 = os0.stat(path2)                                                 # STEP 53
os0.link(path1,path2)                                                   # STEP 54
os0.rename(path2,path4)                                                 # STEP 55
os0.remove(path1)                                                       # STEP 56
file0.next()                                                            # STEP 57
str1 = ""                                                               # STEP 58
result = os0.read(fd0,bytes0)                                           # STEP 59
bytes3 = 0                                                              # STEP 60
file0.write(str1)                                                       # STEP 61
result = file0.readline(bytes3)                                         # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1062cf998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1062ab8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 100 steps

SAVING TEST AS failure.5858.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str3 = ""                                                                # STEP 1
str3 += " "                                                              # STEP 2
bytes1 = 0                                                               # STEP 3
bytes3 = 0                                                               # STEP 4
str3 += " "                                                              # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
bytes3 += 1                                                              # STEP 7
result = os0.path.isfile(path1)                                          # STEP 8
str3 += " "                                                              # STEP 9
os0.link(path1,path1)                                                   # STEP 10
result = os0.path.isabs(path1)                                          # STEP 11
result = os0.path.isabs(path1)                                          # STEP 12
result = os0.path.exists(path1)                                         # STEP 13
component3 = "e"                                                        # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
result = os0.path.abspath(path1)                                        # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
result = os0.readlink(path1)                                            # STEP 18
os0.remove(path1)                                                       # STEP 19
path1 += "/" + component3                                               # STEP 20
result = os0.path.abspath(path1)                                        # STEP 21
result = os0.path.dirname(path1)                                        # STEP 22
file0 = opener0(path1)                                                  # STEP 23
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 24
result = os0.path.isfile(path1)                                         # STEP 25
result = os0.path.isdir(path1)                                          # STEP 26
str3 += 't'                                                             # STEP 27
result = os0.path.dirname(path1)                                        # STEP 28
result = os0.path.dirname(path1)                                        # STEP 29
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.isdir(path1)                                          # STEP 31
result = os0.read(fd0,bytes3)                                           # STEP 32
result = os0.path.isdir(path1)                                          # STEP 33
result = os0.path.exists(path1)                                         # STEP 34
os0.mkdir(path1)                                                        # STEP 35
file0 = opener0(path1,'w')                                              # STEP 36
str3 += 'l'                                                             # STEP 37
component3 = "f"                                                        # STEP 38
stat3 = os0.fstat(fd0)                                                  # STEP 39
os0.write(fd0,str3)                                                     # STEP 40
str3 += 'w'                                                             # STEP 41
result = os0.path.isdir(path1)                                          # STEP 42
file0 = opener0(path1,'w')                                              # STEP 43
result = os0.path.islink(path1)                                         # STEP 44
component1 = "e"                                                        # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
os0.remove(path1)                                                       # STEP 47
result = os0.path.isfile(path1)                                         # STEP 48
result = os0.path.islink(path1)                                         # STEP 49
result = sorted(os0.listdir(path1))                                     # STEP 50
str1 = ""                                                               # STEP 51
os0.mkdir(path1)                                                        # STEP 52
result = os0.path.lexists(path1)                                        # STEP 53
path4 = "/Volumes/ramdisk/test"                                         # STEP 54
result = stat3.st_nlink                                                 # STEP 55
result = os0.readlink(path4)                                            # STEP 56
result = os0.path.dirname(path4)                                        # STEP 57
result = stat3.st_nlink                                                 # STEP 58
file0 = opener0(path1,'r')                                              # STEP 59
result = stat3.st_nlink                                                 # STEP 60
os0.write(fd0,str1)                                                     # STEP 61
bytes1 += 1                                                             # STEP 62
result = os0.readlink(path4)                                            # STEP 63
os0.symlink(path4,path4)                                                # STEP 64
str2 = ""                                                               # STEP 65
result = os0.path.exists(path4)                                         # STEP 66
os0.makedirs(path4)                                                     # STEP 67
result = os0.readlink(path1)                                            # STEP 68
result = os0.path.isabs(path4)                                          # STEP 69
os0.link(path1,path4)                                                   # STEP 70
file0 = opener0(path1,'a')                                              # STEP 71
str4 = ""                                                               # STEP 72
result = sorted(os0.listdir(path4))                                     # STEP 73
result = os0.path.dirname(path1)                                        # STEP 74
result = stat3.st_nlink                                                 # STEP 75
result = stat3.st_size                                                  # STEP 76
path4 += "/" + component1                                               # STEP 77
os0.close(fd0)                                                          # STEP 78
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 79
os0.path.getsize(path4)                                                 # STEP 80
file0 = opener0(path4,'a')                                              # STEP 81
result = stat3.st_nlink                                                 # STEP 82
os0.link(path1,path1)                                                   # STEP 83
result = file0.read()                                                   # STEP 84
result = sorted(os0.listdir(path1))                                     # STEP 85
bytes1 += 1                                                             # STEP 86
os0.makedirs(path1)                                                     # STEP 87
result = os0.path.isdir(path1)                                          # STEP 88
os0.rmdir(path4)                                                        # STEP 89
os0.write(fd0,str3)                                                     # STEP 90
stat4 = os0.stat(path4)                                                 # STEP 91
result = os0.path.isabs(path4)                                          # STEP 92
os0.mkdir(path4)                                                        # STEP 93
result = os0.path.exists(path4)                                         # STEP 94
os0.symlink(path4,path1)                                                # STEP 95
os0.mkdir(path4)                                                        # STEP 96
os0.rename(path4,path1)                                                 # STEP 97
path4 += "/" + component3                                               # STEP 98
result = file0.readline()                                               # STEP 99
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10b12bcf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a7b9c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 92 steps

SAVING TEST AS failure.5858.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
os0.symlink(path4,path4)                                                 # STEP 2
component0 = "beta"                                                      # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.lexists(path4)                                         # STEP 5
bytes2 = 0                                                               # STEP 6
os0.symlink(path4,path3)                                                 # STEP 7
path3 += "/" + component0                                                # STEP 8
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                         # STEP 9
str1 = ""                                                               # STEP 10
str1 += 'm'                                                             # STEP 11
path4 += "/" + component0                                               # STEP 12
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 13
result = os0.readlink(path4)                                            # STEP 14
os0.path.getsize(path4)                                                 # STEP 15
os0.close(fd0)                                                          # STEP 16
os0.link(path4,path4)                                                   # STEP 17
os0.link(path3,path3)                                                   # STEP 18
bytes2 += 1                                                             # STEP 19
component3 = "lambda"                                                   # STEP 20
str1 += 'c'                                                             # STEP 21
os0.close(fd0)                                                          # STEP 22
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 23
os0.makedirs(path4)                                                     # STEP 24
os0.symlink(path4,path4)                                                # STEP 25
result = os0.read(fd0,bytes2)                                           # STEP 26
result = os0.path.islink(path3)                                         # STEP 27
component1 = "h"                                                        # STEP 28
str0 = ""                                                               # STEP 29
os0.symlink(path4,path3)                                                # STEP 30
result = os0.path.lexists(path4)                                        # STEP 31
result = os0.path.dirname(path3)                                        # STEP 32
str0 += 'u'                                                             # STEP 33
stat0 = os0.lstat(path4)                                                # STEP 34
os0.symlink(path4,path3)                                                # STEP 35
result = os0.path.isfile(path3)                                         # STEP 36
stat1 = os0.stat(path3)                                                 # STEP 37
result = sorted(os0.listdir(path3))                                     # STEP 38
os0.link(path4,path4)                                                   # STEP 39
os0.makedirs(path4)                                                     # STEP 40
os0.mkdir(path3)                                                        # STEP 41
result = os0.read(fd0,bytes2)                                           # STEP 42
stat2 = os0.lstat(path4)                                                # STEP 43
result = os0.readlink(path4)                                            # STEP 44
result = os0.path.isdir(path3)                                          # STEP 45
path4 += "/" + component3                                               # STEP 46
stat4 = os0.stat(path3)                                                 # STEP 47
result = sorted(os0.listdir(path3))                                     # STEP 48
result = os0.path.islink(path3)                                         # STEP 49
result = stat0.st_size                                                  # STEP 50
result = stat1.st_size                                                  # STEP 51
os0.remove(path4)                                                       # STEP 52
result = os0.path.exists(path4)                                         # STEP 53
os0.path.getsize(path3)                                                 # STEP 54
str0 += 'w'                                                             # STEP 55
bytes3 = 0                                                              # STEP 56
os0.write(fd0,str0)                                                     # STEP 57
stat3 = os0.fstat(fd0)                                                  # STEP 58
result = os0.path.isfile(path3)                                         # STEP 59
bytes0 = 0                                                              # STEP 60
opener0 = newFakeOpener(os0)                                            # STEP 61
bytes0 += 1                                                             # STEP 62
result = os0.path.exists(path3)                                         # STEP 63
file0 = opener0(path3,'w')                                              # STEP 64
file0.truncate()                                                        # STEP 65
component2 = "omega"                                                    # STEP 66
result = file0.read()                                                   # STEP 67
os0.rmdir(path3)                                                        # STEP 68
file0.truncate()                                                        # STEP 69
result = os0.path.islink(path4)                                         # STEP 70
file0.write(str0)                                                       # STEP 71
file0.truncate()                                                        # STEP 72
result = file0.readlines()                                              # STEP 73
result = os0.read(fd0,bytes0)                                           # STEP 74
file0.flush()                                                           # STEP 75
result = os0.readlink(path3)                                            # STEP 76
os0.rename(path4,path3)                                                 # STEP 77
stat1 = os0.lstat(path3)                                                # STEP 78
os0.write(fd0,str0)                                                     # STEP 79
file0.truncate()                                                        # STEP 80
str4 = ""                                                               # STEP 81
result = os0.path.exists(path4)                                         # STEP 82
file0.seek(bytes3)                                                      # STEP 83
file0.write(str0)                                                       # STEP 84
result = os0.path.islink(path3)                                         # STEP 85
os0.link(path4,path3)                                                   # STEP 86
file0.flush()                                                           # STEP 87
result = os0.read(fd0,bytes0)                                           # STEP 88
os0.close(fd0)                                                          # STEP 89
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 90
result = file0.readline()                                               # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1062b9e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (\x00) ',), <traceback object at 0x10951ecf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16374, in act376
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 49 steps

SAVING TEST AS failure.5858.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
str0 = ""                                                                # STEP 1
str4 = ""                                                                # STEP 2
str4 += " "                                                              # STEP 3
bytes2 += 1                                                              # STEP 4
bytes4 = 0                                                               # STEP 5
component1 = "b"                                                         # STEP 6
bytes4 += 1                                                              # STEP 7
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
os0 = newFakeOS()                                                        # STEP 9
path3 += "/" + component1                                               # STEP 10
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 11
result = os0.path.dirname(path3)                                        # STEP 12
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 13
os0.link(path3,path3)                                                   # STEP 14
os0.path.getsize(path3)                                                 # STEP 15
os0.write(fd0,str4)                                                     # STEP 16
bytes3 = 0                                                              # STEP 17
os0.mkdir(path3)                                                        # STEP 18
os0.mkdir(path3)                                                        # STEP 19
str4 += 't'                                                             # STEP 20
result = sorted(os0.listdir(path3))                                     # STEP 21
stat2 = os0.lstat(path3)                                                # STEP 22
os0.symlink(path3,path3)                                                # STEP 23
os0.close(fd0)                                                          # STEP 24
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 25
bytes0 = 0                                                              # STEP 26
opener0 = newFakeOpener(os0)                                            # STEP 27
file0 = opener0(path3,'a')                                              # STEP 28
result = os0.path.isabs(path3)                                          # STEP 29
result = os0.path.dirname(path3)                                        # STEP 30
file0.seek(bytes2)                                                      # STEP 31
result = os0.path.abspath(path3)                                        # STEP 32
os0.rmdir(path3)                                                        # STEP 33
result = file0.read()                                                   # STEP 34
stat1 = os0.stat(path3)                                                 # STEP 35
os0.rmdir(path3)                                                        # STEP 36
str4 = ""                                                               # STEP 37
os0.mkdir(path3)                                                        # STEP 38
bytes3 += 1                                                             # STEP 39
result = file0.readline()                                               # STEP 40
result = os0.path.lexists(path3)                                        # STEP 41
os0.link(path3,path3)                                                   # STEP 42
result = os0.path.exists(path3)                                         # STEP 43
result = sorted(os0.listdir(path3))                                     # STEP 44
result = os0.path.dirname(path3)                                        # STEP 45
file0.truncate()                                                        # STEP 46
result = file0.read()                                                   # STEP 47
result = os0.read(fd0,bytes4)                                           # STEP 48
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (\x00) ',), <traceback object at 0x10a60bd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16374, in act376
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10a2ba5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
Original test has 78 steps

SAVING TEST AS failure.5858.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
str2 += " "                                                              # STEP 1
str0 = ""                                                                # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
component0 = "g"                                                         # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.readlink(path3)                                             # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
str0 += 'i'                                                              # STEP 8
result = os0.path.lexists(path1)                                         # STEP 9
result = sorted(os0.listdir(path1))                                     # STEP 10
bytes3 = 0                                                              # STEP 11
result = os0.path.exists(path3)                                         # STEP 12
result = os0.path.dirname(path1)                                        # STEP 13
os0.remove(path3)                                                       # STEP 14
path3 += "/" + component0                                               # STEP 15
component0 = "f"                                                        # STEP 16
os0.link(path1,path3)                                                   # STEP 17
str2 += " "                                                             # STEP 18
result = os0.path.isfile(path3)                                         # STEP 19
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 20
stat0 = os0.stat(path3)                                                 # STEP 21
os0.close(fd0)                                                          # STEP 22
result = sorted(os0.listdir(path3))                                     # STEP 23
stat2 = os0.stat(path3)                                                 # STEP 24
result = stat0.st_nlink                                                 # STEP 25
result = os0.path.isabs(path1)                                          # STEP 26
result = os0.path.lexists(path3)                                        # STEP 27
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 28
stat3 = os0.fstat(fd0)                                                  # STEP 29
opener0 = newFakeOpener(os0)                                            # STEP 30
result = os0.path.dirname(path1)                                        # STEP 31
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
os0.link(path1,path2)                                                   # STEP 33
os0.mkdir(path3)                                                        # STEP 34
path2 += "/" + component0                                               # STEP 35
result = os0.path.lexists(path2)                                        # STEP 36
result = os0.path.isdir(path3)                                          # STEP 37
os0.rmdir(path2)                                                        # STEP 38
str2 += " "                                                             # STEP 39
file0 = opener0(path3,'r')                                              # STEP 40
file0.write(str2)                                                       # STEP 41
result = os0.path.isabs(path1)                                          # STEP 42
file0.write(str0)                                                       # STEP 43
result = stat0.st_size                                                  # STEP 44
path1 += "/" + component0                                               # STEP 45
bytes3 += 1                                                             # STEP 46
str3 = ""                                                               # STEP 47
result = os0.readlink(path3)                                            # STEP 48
result = os0.path.lexists(path2)                                        # STEP 49
str3 += " "                                                             # STEP 50
result = os0.path.islink(path3)                                         # STEP 51
result = os0.path.abspath(path2)                                        # STEP 52
file0.write(str3)                                                       # STEP 53
result = os0.path.islink(path1)                                         # STEP 54
file0.next()                                                            # STEP 55
result = os0.read(fd0,bytes3)                                           # STEP 56
result = os0.read(fd0,bytes3)                                           # STEP 57
stat1 = os0.fstat(fd0)                                                  # STEP 58
file0.write(str2)                                                       # STEP 59
component1 = "alpha"                                                    # STEP 60
result = os0.path.isabs(path1)                                          # STEP 61
result = file0.readlines()                                              # STEP 62
os0.remove(path2)                                                       # STEP 63
str0 += 'n'                                                             # STEP 64
result = file0.readlines()                                              # STEP 65
result = os0.path.isfile(path1)                                         # STEP 66
stat0 = os0.stat(path3)                                                 # STEP 67
os0.mkdir(path3)                                                        # STEP 68
result = stat0.st_nlink                                                 # STEP 69
bytes0 = 0                                                              # STEP 70
component4 = "b"                                                        # STEP 71
os0.close(fd0)                                                          # STEP 72
os0.remove(path2)                                                       # STEP 73
result = os0.path.exists(path2)                                         # STEP 74
file0.write(str3)                                                       # STEP 75
os0.mkdir(path3)                                                        # STEP 76
result = file0.read(bytes3)                                             # STEP 77
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1060580e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" ([' yzo']) == ([]) ",), <traceback object at 0x10a5a8c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 89 steps

SAVING TEST AS failure.5858.test.7
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
str4 = ""                                                                # STEP 2
component3 = "h"                                                         # STEP 3
str3 = ""                                                                # STEP 4
component1 = "d"                                                         # STEP 5
str4 += " "                                                              # STEP 6
component4 = "f"                                                         # STEP 7
str3 += 'd'                                                              # STEP 8
str4 += 'y'                                                              # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
file0 = opener0(path4,'w')                                              # STEP 11
result = os0.path.exists(path4)                                         # STEP 12
str4 += 'z'                                                             # STEP 13
os0.mkdir(path4)                                                        # STEP 14
str3 += " "                                                             # STEP 15
file0 = opener0(path4,'r')                                              # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
result = os0.path.abspath(path4)                                        # STEP 18
bytes3 = 0                                                              # STEP 19
result = os0.path.isabs(path4)                                          # STEP 20
os0.symlink(path4,path4)                                                # STEP 21
result = os0.path.abspath(path4)                                        # STEP 22
os0.mkdir(path4)                                                        # STEP 23
result = os0.path.isfile(path4)                                         # STEP 24
file0 = opener0(path4,'a')                                              # STEP 25
file0 = opener0(path4,'r')                                              # STEP 26
result = os0.path.abspath(path4)                                        # STEP 27
os0.makedirs(path4)                                                     # STEP 28
file0 = opener0(path4)                                                  # STEP 29
bytes3 += 1                                                             # STEP 30
result = os0.readlink(path4)                                            # STEP 31
result = os0.path.isdir(path4)                                          # STEP 32
bytes2 = 0                                                              # STEP 33
result = os0.path.isfile(path4)                                         # STEP 34
os0.remove(path4)                                                       # STEP 35
path4 += "/" + component4                                               # STEP 36
file0 = opener0(path4,'r')                                              # STEP 37
result = os0.path.lexists(path4)                                        # STEP 38
component4 = "g"                                                        # STEP 39
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 40
os0.makedirs(path4)                                                     # STEP 41
os0.makedirs(path4)                                                     # STEP 42
os0.rmdir(path4)                                                        # STEP 43
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 44
os0.rmdir(path4)                                                        # STEP 45
os0.mkdir(path4)                                                        # STEP 46
os0.rmdir(path4)                                                        # STEP 47
file0 = opener0(path4,'r')                                              # STEP 48
stat4 = os0.fstat(fd0)                                                  # STEP 49
result = stat4.st_size                                                  # STEP 50
result = os0.path.isdir(path4)                                          # STEP 51
os0.path.getsize(path4)                                                 # STEP 52
os0.close(fd0)                                                          # STEP 53
os0.path.getsize(path4)                                                 # STEP 54
str4 += 'o'                                                             # STEP 55
os0.makedirs(path4)                                                     # STEP 56
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 57
result = os0.path.dirname(path4)                                        # STEP 58
str0 = ""                                                               # STEP 59
os0.makedirs(path4)                                                     # STEP 60
os0.link(path4,path4)                                                   # STEP 61
result = os0.path.isabs(path4)                                          # STEP 62
os0.link(path4,path4)                                                   # STEP 63
os0.rmdir(path4)                                                        # STEP 64
os0.close(fd0)                                                          # STEP 65
str1 = ""                                                               # STEP 66
os0.path.getsize(path4)                                                 # STEP 67
component2 = "gamma"                                                    # STEP 68
result = stat4.st_nlink                                                 # STEP 69
result = os0.path.lexists(path4)                                        # STEP 70
result = os0.path.islink(path4)                                         # STEP 71
file0.flush()                                                           # STEP 72
result = os0.path.dirname(path4)                                        # STEP 73
os0.mkdir(path4)                                                        # STEP 74
result = os0.path.isabs(path4)                                          # STEP 75
component0 = "lambda"                                                   # STEP 76
result = file0.readline()                                               # STEP 77
os0.write(fd0,str0)                                                     # STEP 78
result = os0.read(fd0,bytes2)                                           # STEP 79
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 80
result = file0.readlines()                                              # STEP 81
result = os0.readlink(path4)                                            # STEP 82
os0.link(path4,path4)                                                   # STEP 83
result = file0.readlines()                                              # STEP 84
result = stat4.st_nlink                                                 # STEP 85
result = file0.read()                                                   # STEP 86
os0.write(fd0,str4)                                                     # STEP 87
result = file0.readlines()                                              # STEP 88
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" ([' yzo']) == ([]) ",), <traceback object at 0x1063a93f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 8 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (b) == () ',), <traceback object at 0x10b117b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 80 steps

SAVING TEST AS failure.5858.test.8
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str2 = ""                                                                # STEP 1
str2 += " "                                                              # STEP 2
str2 += 'i'                                                              # STEP 3
bytes3 = 0                                                               # STEP 4
component1 = "delta"                                                     # STEP 5
component4 = "alpha"                                                     # STEP 6
str1 = ""                                                                # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
os0.symlink(path0,path0)                                                 # STEP 9
str2 += 'n'                                                             # STEP 10
str2 += 'p'                                                             # STEP 11
os0.mkdir(path0)                                                        # STEP 12
result = os0.path.lexists(path0)                                        # STEP 13
result = os0.path.abspath(path0)                                        # STEP 14
result = os0.path.isfile(path0)                                         # STEP 15
os0.makedirs(path0)                                                     # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
bytes1 = 0                                                              # STEP 18
result = os0.path.lexists(path0)                                        # STEP 19
file0 = opener0(path0,'a')                                              # STEP 20
str0 = ""                                                               # STEP 21
file0 = opener0(path0)                                                  # STEP 22
str2 = ""                                                               # STEP 23
result = os0.path.dirname(path0)                                        # STEP 24
os0.remove(path0)                                                       # STEP 25
file0 = opener0(path0)                                                  # STEP 26
str0 += " "                                                             # STEP 27
os0.remove(path0)                                                       # STEP 28
result = os0.path.dirname(path0)                                        # STEP 29
result = os0.path.isfile(path0)                                         # STEP 30
bytes3 += 1                                                             # STEP 31
component2 = "delta"                                                    # STEP 32
component0 = "gamma"                                                    # STEP 33
os0.mkdir(path0)                                                        # STEP 34
result = os0.readlink(path0)                                            # STEP 35
os0.mkdir(path0)                                                        # STEP 36
path0 += "/" + component1                                               # STEP 37
os0.link(path0,path0)                                                   # STEP 38
result = os0.path.exists(path0)                                         # STEP 39
result = sorted(os0.listdir(path0))                                     # STEP 40
os0.rmdir(path0)                                                        # STEP 41
os0.rmdir(path0)                                                        # STEP 42
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 43
stat3 = os0.fstat(fd0)                                                  # STEP 44
stat2 = os0.fstat(fd0)                                                  # STEP 45
result = os0.path.abspath(path0)                                        # STEP 46
bytes3 += 1                                                             # STEP 47
os0.makedirs(path0)                                                     # STEP 48
result = os0.path.isfile(path0)                                         # STEP 49
file0 = opener0(path0)                                                  # STEP 50
result = file0.readline()                                               # STEP 51
result = file0.readline(bytes3)                                         # STEP 52
result = os0.path.exists(path0)                                         # STEP 53
stat4 = os0.stat(path0)                                                 # STEP 54
file0.seek(bytes3)                                                      # STEP 55
result = file0.readline()                                               # STEP 56
str3 = ""                                                               # STEP 57
os0.link(path0,path0)                                                   # STEP 58
os0.makedirs(path0)                                                     # STEP 59
result = os0.path.isdir(path0)                                          # STEP 60
result = stat2.st_size                                                  # STEP 61
os0.remove(path0)                                                       # STEP 62
str2 += 'b'                                                             # STEP 63
os0.remove(path0)                                                       # STEP 64
file0.seek(bytes3)                                                      # STEP 65
os0.symlink(path0,path0)                                                # STEP 66
result = file0.read(bytes1)                                             # STEP 67
os0.symlink(path0,path0)                                                # STEP 68
os0.path.getsize(path0)                                                 # STEP 69
os0.remove(path0)                                                       # STEP 70
bytes4 = 0                                                              # STEP 71
bytes4 += 1                                                             # STEP 72
os0.makedirs(path0)                                                     # STEP 73
os0.write(fd0,str2)                                                     # STEP 74
result = os0.path.isfile(path0)                                         # STEP 75
result = os0.path.isabs(path0)                                          # STEP 76
path2 = "/Volumes/ramdisk/test"                                         # STEP 77
result = os0.path.dirname(path0)                                        # STEP 78
result = file0.readline()                                               # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (b) == () ',), <traceback object at 0x106aac1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 9 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10971c680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
Original test has 85 steps

SAVING TEST AS failure.5858.test.9
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
component0 = "d"                                                         # STEP 1
component3 = "omega"                                                     # STEP 2
bytes4 = 0                                                               # STEP 3
bytes4 += 1                                                              # STEP 4
bytes1 = 0                                                               # STEP 5
str4 = ""                                                                # STEP 6
str3 += " "                                                              # STEP 7
str4 += " "                                                              # STEP 8
str3 += " "                                                              # STEP 9
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
str3 += " "                                                             # STEP 11
str4 = ""                                                               # STEP 12
bytes4 = 0                                                              # STEP 13
path1 += "/" + component3                                               # STEP 14
str4 += " "                                                             # STEP 15
bytes1 += 1                                                             # STEP 16
str4 = ""                                                               # STEP 17
component1 = "gamma"                                                    # STEP 18
str1 = ""                                                               # STEP 19
str4 += 'i'                                                             # STEP 20
os0 = newFakeOS()                                                       # STEP 21
result = os0.path.lexists(path1)                                        # STEP 22
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 23
bytes1 = 0                                                              # STEP 24
os0.link(path1,path1)                                                   # STEP 25
stat1 = os0.stat(path1)                                                 # STEP 26
result = sorted(os0.listdir(path1))                                     # STEP 27
component3 = "a"                                                        # STEP 28
str4 += " "                                                             # STEP 29
result = os0.path.isabs(path1)                                          # STEP 30
result = os0.path.isabs(path1)                                          # STEP 31
os0.link(path1,path1)                                                   # STEP 32
stat0 = os0.lstat(path1)                                                # STEP 33
stat3 = os0.fstat(fd0)                                                  # STEP 34
os0.path.getsize(path1)                                                 # STEP 35
os0.symlink(path1,path1)                                                # STEP 36
str4 = ""                                                               # STEP 37
result = os0.path.exists(path1)                                         # STEP 38
stat2 = os0.lstat(path1)                                                # STEP 39
bytes1 += 1                                                             # STEP 40
os0.rmdir(path1)                                                        # STEP 41
opener0 = newFakeOpener(os0)                                            # STEP 42
result = os0.path.isdir(path1)                                          # STEP 43
os0.link(path1,path1)                                                   # STEP 44
stat4 = os0.stat(path1)                                                 # STEP 45
os0.close(fd0)                                                          # STEP 46
file0 = opener0(path1)                                                  # STEP 47
file0.truncate()                                                        # STEP 48
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 49
bytes3 = 0                                                              # STEP 50
result = os0.path.isdir(path1)                                          # STEP 51
result = os0.readlink(path1)                                            # STEP 52
str4 += " "                                                             # STEP 53
result = file0.readlines()                                              # STEP 54
str3 += 'k'                                                             # STEP 55
result = stat0.st_nlink                                                 # STEP 56
result = file0.read()                                                   # STEP 57
os0.path.getsize(path1)                                                 # STEP 58
stat0 = os0.fstat(fd0)                                                  # STEP 59
result = os0.path.lexists(path1)                                        # STEP 60
result = file0.readline()                                               # STEP 61
os0.mkdir(path1)                                                        # STEP 62
result = os0.path.lexists(path1)                                        # STEP 63
result = file0.readline(bytes4)                                         # STEP 64
str3 += " "                                                             # STEP 65
os0.symlink(path1,path1)                                                # STEP 66
result = os0.path.isabs(path1)                                          # STEP 67
component2 = "g"                                                        # STEP 68
file0.next()                                                            # STEP 69
result = file0.read(bytes1)                                             # STEP 70
os0.link(path1,path1)                                                   # STEP 71
os0.rmdir(path1)                                                        # STEP 72
result = stat3.st_nlink                                                 # STEP 73
result = os0.path.abspath(path1)                                        # STEP 74
stat3 = os0.stat(path1)                                                 # STEP 75
os0.rmdir(path1)                                                        # STEP 76
os0.close(fd0)                                                          # STEP 77
bytes4 += 1                                                             # STEP 78
os0.symlink(path1,path1)                                                # STEP 79
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 80
os0.rmdir(path1)                                                        # STEP 81
result = os0.path.isabs(path1)                                          # STEP 82
result = os0.path.exists(path1)                                         # STEP 83
result = file0.read()                                                   # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10314d248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 10 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (i) == () ',), <traceback object at 0x106a1fa28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 82 steps

SAVING TEST AS failure.5858.test.10
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes1 = 0                                                               # STEP 0
component1 = "lambda"                                                    # STEP 1
bytes1 += 1                                                              # STEP 2
os0 = newFakeOS()                                                        # STEP 3
bytes3 = 0                                                               # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.link(path0,path0)                                                    # STEP 7
os0.link(path0,path0)                                                    # STEP 8
result = os0.path.isabs(path0)                                           # STEP 9
path0 += "/" + component1                                               # STEP 10
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 11
result = sorted(os0.listdir(path0))                                     # STEP 12
result = os0.readlink(path0)                                            # STEP 13
result = os0.readlink(path0)                                            # STEP 14
result = os0.path.lexists(path0)                                        # STEP 15
file0 = opener0(path0)                                                  # STEP 16
result = os0.path.islink(path0)                                         # STEP 17
result = file0.readline(bytes3)                                         # STEP 18
stat3 = os0.lstat(path0)                                                # STEP 19
bytes0 = 0                                                              # STEP 20
result = sorted(os0.listdir(path0))                                     # STEP 21
result = os0.read(fd0,bytes3)                                           # STEP 22
component0 = "gamma"                                                    # STEP 23
result = os0.path.lexists(path0)                                        # STEP 24
result = file0.readline(bytes1)                                         # STEP 25
result = os0.path.exists(path0)                                         # STEP 26
result = os0.path.islink(path0)                                         # STEP 27
stat1 = os0.stat(path0)                                                 # STEP 28
result = stat1.st_size                                                  # STEP 29
path0 += "/" + component0                                               # STEP 30
str3 = ""                                                               # STEP 31
str3 += 'i'                                                             # STEP 32
stat4 = os0.lstat(path0)                                                # STEP 33
str3 += 'o'                                                             # STEP 34
path4 = "/Volumes/ramdisk/test"                                         # STEP 35
component3 = "gamma"                                                    # STEP 36
os0.symlink(path0,path0)                                                # STEP 37
result = os0.path.isfile(path4)                                         # STEP 38
str0 = ""                                                               # STEP 39
stat4 = os0.fstat(fd0)                                                  # STEP 40
result = os0.path.isdir(path0)                                          # STEP 41
os0.remove(path4)                                                       # STEP 42
file0.seek(bytes1)                                                      # STEP 43
os0.write(fd0,str3)                                                     # STEP 44
str0 += 'a'                                                             # STEP 45
str0 += 'w'                                                             # STEP 46
file0.seek(bytes1)                                                      # STEP 47
result = file0.read()                                                   # STEP 48
stat1 = os0.lstat(path0)                                                # STEP 49
os0.mkdir(path0)                                                        # STEP 50
path0 += "/" + component3                                               # STEP 51
file0.seek(bytes3)                                                      # STEP 52
result = os0.path.isfile(path0)                                         # STEP 53
os0.makedirs(path4)                                                     # STEP 54
result = os0.path.isfile(path4)                                         # STEP 55
result = file0.read(bytes1)                                             # STEP 56
stat2 = os0.stat(path0)                                                 # STEP 57
result = os0.path.lexists(path4)                                        # STEP 58
file0.flush()                                                           # STEP 59
os0.rename(path0,path4)                                                 # STEP 60
os0.rename(path0,path4)                                                 # STEP 61
result = file0.readline(bytes3)                                         # STEP 62
stat2 = os0.fstat(fd0)                                                  # STEP 63
result = stat3.st_nlink                                                 # STEP 64
str0 += " "                                                             # STEP 65
result = file0.readlines()                                              # STEP 66
result = stat3.st_size                                                  # STEP 67
result = stat2.st_size                                                  # STEP 68
result = file0.read()                                                   # STEP 69
os0.write(fd0,str3)                                                     # STEP 70
result = os0.path.exists(path4)                                         # STEP 71
component0 = "f"                                                        # STEP 72
result = os0.path.isdir(path4)                                          # STEP 73
os0.symlink(path4,path4)                                                # STEP 74
result = os0.read(fd0,bytes1)                                           # STEP 75
os0.mkdir(path0)                                                        # STEP 76
os0.remove(path0)                                                       # STEP 77
component2 = "b"                                                        # STEP 78
file0.flush()                                                           # STEP 79
os0.path.getsize(path0)                                                 # STEP 80
result = file0.read(bytes1)                                             # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (i) == () ',), <traceback object at 0x10672e5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 11 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 85
STOPPING TESTING DUE TO TIMEOUT
42.4377554812 PERCENT COVERED
60.3406660557 TOTAL RUNTIME
338 EXECUTED
33509 TOTAL TEST OPERATIONS
41.4210746288 TIME SPENT EXECUTING TEST OPERATIONS
16.2952899933 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0232920646667 TIME SPENT CHECKING PROPERTIES
41.4443666935 TOTAL TIME SPENT RUNNING SUT
1.00345158577 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
11 FAILED
0 REPEATS OF FAILURES
11 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "h"                                                         # STEP 0
component0 = "lambda"                                                    # STEP 1
os0 = newFakeOS()                                                        # STEP 2
bytes2 = 0                                                               # STEP 3
bytes1 = 0                                                               # STEP 4
bytes0 = 0                                                               # STEP 5
bytes3 = 0                                                               # STEP 6
bytes4 = 0                                                               # STEP 7
bytes0 += 1                                                              # STEP 8
component4 = "beta"                                                      # STEP 9
component3 = "epsilon"                                                  # STEP 10
component1 = "phi"                                                      # STEP 11
bytes0 = 0                                                              # STEP 12
str3 = ""                                                               # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
result = os0.readlink(path1)                                            # STEP 15
path1 += "/" + component3                                               # STEP 16
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 17
stat1 = os0.lstat(path1)                                                # STEP 18
os0.remove(path1)                                                       # STEP 19
result = os0.read(fd0,bytes0)                                           # STEP 20
result = stat1.st_size                                                  # STEP 21
bytes0 = 0                                                              # STEP 22
os0.makedirs(path1)                                                     # STEP 23
str0 = ""                                                               # STEP 24
result = os0.read(fd0,bytes1)                                           # STEP 25
bytes1 += 1                                                             # STEP 26
os0.close(fd0)                                                          # STEP 27
os0.close(fd0)                                                          # STEP 28
opener0 = newFakeOpener(os0)                                            # STEP 29
str0 += 'z'                                                             # STEP 30
str0 += " "                                                             # STEP 31
str2 = ""                                                               # STEP 32
result = os0.read(fd0,bytes0)                                           # STEP 33
path1 += "/" + component3                                               # STEP 34
file0 = opener0(path1,'r')                                              # STEP 35
result = os0.readlink(path1)                                            # STEP 36
str4 = ""                                                               # STEP 37
result = os0.path.exists(path1)                                         # STEP 38
result = os0.read(fd0,bytes3)                                           # STEP 39
file0 = opener0(path1,'w')                                              # STEP 40
result = os0.read(fd0,bytes0)                                           # STEP 41
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 42
result = file0.readline()                                               # STEP 43
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a6943f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
str1 = ""                                                                # STEP 0
component3 = "lambda"                                                    # STEP 1
component4 = "b"                                                         # STEP 2
component0 = "b"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
str2 = ""                                                                # STEP 6
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.dirname(path0)                                         # STEP 8
path4 += "/" + component0                                                # STEP 9
result = os0.path.islink(path0)                                         # STEP 10
result = os0.path.isfile(path4)                                         # STEP 11
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 12
component2 = "g"                                                        # STEP 13
os0.symlink(path4,path0)                                                # STEP 14
os0.rename(path4,path0)                                                 # STEP 15
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 16
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 17
os0.link(path0,path0)                                                   # STEP 18
result = sorted(os0.listdir(path0))                                     # STEP 19
result = os0.path.exists(path0)                                         # STEP 20
os0.close(fd0)                                                          # STEP 21
result = os0.path.isdir(path4)                                          # STEP 22
str0 = ""                                                               # STEP 23
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
os0.close(fd0)                                                          # STEP 25
os0.remove(path0)                                                       # STEP 26
component1 = "lambda"                                                   # STEP 27
str1 += " "                                                             # STEP 28
os0.path.getsize(path4)                                                 # STEP 29
os0.mkdir(path4)                                                        # STEP 30
str1 += 'y'                                                             # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
os0.close(fd0)                                                          # STEP 33
path0 += "/" + component1                                               # STEP 34
os0.link(path0,path4)                                                   # STEP 35
result = sorted(os0.listdir(path4))                                     # STEP 36
stat2 = os0.lstat(path4)                                                # STEP 37
os0.write(fd0,str1)                                                     # STEP 38
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 39
stat3 = os0.stat(path4)                                                 # STEP 40
result = os0.path.lexists(path0)                                        # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
result = os0.path.islink(path0)                                         # STEP 43
opener0 = newFakeOpener(os0)                                            # STEP 44
file0 = opener0(path4,'r')                                              # STEP 45
os0.mkdir(path0)                                                        # STEP 46
os0.write(fd0,str1)                                                     # STEP 47
os0.makedirs(path0)                                                     # STEP 48
str3 = ""                                                               # STEP 49
result = os0.path.lexists(path0)                                        # STEP 50
os0.makedirs(path4)                                                     # STEP 51
os0.path.getsize(path4)                                                 # STEP 52
file0.next()                                                            # STEP 53
result = stat3.st_nlink                                                 # STEP 54
os0.remove(path0)                                                       # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
stat1 = os0.stat(path4)                                                 # STEP 57
os0.rmdir(path0)                                                        # STEP 58
stat4 = os0.fstat(fd0)                                                  # STEP 59
file0.write(str2)                                                       # STEP 60
file0.truncate()                                                        # STEP 61
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a085cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
component4 = "phi"                                                       # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str0 = ""                                                                # STEP 3
bytes2 = 0                                                               # STEP 4
bytes2 += 1                                                              # STEP 5
str0 += " "                                                              # STEP 6
bytes0 = 0                                                               # STEP 7
str0 += 'c'                                                              # STEP 8
str0 += 'q'                                                              # STEP 9
bytes0 += 1                                                             # STEP 10
str1 = ""                                                               # STEP 11
str0 += 'c'                                                             # STEP 12
bytes2 += 1                                                             # STEP 13
str1 += 'd'                                                             # STEP 14
path2 = "/Volumes/ramdisk/test"                                         # STEP 15
bytes1 = 0                                                              # STEP 16
result = os0.path.isfile(path2)                                         # STEP 17
os0.link(path2,path2)                                                   # STEP 18
result = os0.path.isabs(path2)                                          # STEP 19
result = os0.path.isabs(path2)                                          # STEP 20
result = os0.path.isabs(path2)                                          # STEP 21
result = os0.path.isdir(path2)                                          # STEP 22
os0.symlink(path2,path2)                                                # STEP 23
bytes0 = 0                                                              # STEP 24
str1 += 'w'                                                             # STEP 25
file0 = opener0(path2,'r')                                              # STEP 26
file0 = opener0(path2,'a')                                              # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
path1 = "/Volumes/ramdisk/test"                                         # STEP 29
os0.remove(path1)                                                       # STEP 30
result = os0.path.abspath(path4)                                        # STEP 31
file0 = opener0(path2,'r')                                              # STEP 32
path2 += "/" + component4                                               # STEP 33
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 34
result = os0.path.dirname(path1)                                        # STEP 35
result = os0.path.dirname(path4)                                        # STEP 36
os0.makedirs(path2)                                                     # STEP 37
file0 = opener0(path4,'w')                                              # STEP 38
os0.close(fd0)                                                          # STEP 39
component1 = "lambda"                                                   # STEP 40
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 41
result = os0.read(fd0,bytes1)                                           # STEP 42
result = sorted(os0.listdir(path1))                                     # STEP 43
file0 = opener0(path2,'w')                                              # STEP 44
file0.flush()                                                           # STEP 45
result = os0.path.exists(path2)                                         # STEP 46
result = sorted(os0.listdir(path4))                                     # STEP 47
os0.link(path4,path4)                                                   # STEP 48
result = file0.read()                                                   # STEP 49
file0.write(str1)                                                       # STEP 50
component4 = "f"                                                        # STEP 51
file0.flush()                                                           # STEP 52
stat1 = os0.stat(path2)                                                 # STEP 53
os0.link(path1,path2)                                                   # STEP 54
os0.rename(path2,path4)                                                 # STEP 55
os0.remove(path1)                                                       # STEP 56
file0.next()                                                            # STEP 57
str1 = ""                                                               # STEP 58
result = os0.read(fd0,bytes0)                                           # STEP 59
bytes3 = 0                                                              # STEP 60
file0.write(str1)                                                       # STEP 61
result = file0.readline(bytes3)                                         # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1062cf998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
os0 = newFakeOS()                                                        # STEP 0
str3 = ""                                                                # STEP 1
str3 += " "                                                              # STEP 2
bytes1 = 0                                                               # STEP 3
bytes3 = 0                                                               # STEP 4
str3 += " "                                                              # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
bytes3 += 1                                                              # STEP 7
result = os0.path.isfile(path1)                                          # STEP 8
str3 += " "                                                              # STEP 9
os0.link(path1,path1)                                                   # STEP 10
result = os0.path.isabs(path1)                                          # STEP 11
result = os0.path.isabs(path1)                                          # STEP 12
result = os0.path.exists(path1)                                         # STEP 13
component3 = "e"                                                        # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
result = os0.path.abspath(path1)                                        # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
result = os0.readlink(path1)                                            # STEP 18
os0.remove(path1)                                                       # STEP 19
path1 += "/" + component3                                               # STEP 20
result = os0.path.abspath(path1)                                        # STEP 21
result = os0.path.dirname(path1)                                        # STEP 22
file0 = opener0(path1)                                                  # STEP 23
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 24
result = os0.path.isfile(path1)                                         # STEP 25
result = os0.path.isdir(path1)                                          # STEP 26
str3 += 't'                                                             # STEP 27
result = os0.path.dirname(path1)                                        # STEP 28
result = os0.path.dirname(path1)                                        # STEP 29
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.isdir(path1)                                          # STEP 31
result = os0.read(fd0,bytes3)                                           # STEP 32
result = os0.path.isdir(path1)                                          # STEP 33
result = os0.path.exists(path1)                                         # STEP 34
os0.mkdir(path1)                                                        # STEP 35
file0 = opener0(path1,'w')                                              # STEP 36
str3 += 'l'                                                             # STEP 37
component3 = "f"                                                        # STEP 38
stat3 = os0.fstat(fd0)                                                  # STEP 39
os0.write(fd0,str3)                                                     # STEP 40
str3 += 'w'                                                             # STEP 41
result = os0.path.isdir(path1)                                          # STEP 42
file0 = opener0(path1,'w')                                              # STEP 43
result = os0.path.islink(path1)                                         # STEP 44
component1 = "e"                                                        # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
os0.remove(path1)                                                       # STEP 47
result = os0.path.isfile(path1)                                         # STEP 48
result = os0.path.islink(path1)                                         # STEP 49
result = sorted(os0.listdir(path1))                                     # STEP 50
str1 = ""                                                               # STEP 51
os0.mkdir(path1)                                                        # STEP 52
result = os0.path.lexists(path1)                                        # STEP 53
path4 = "/Volumes/ramdisk/test"                                         # STEP 54
result = stat3.st_nlink                                                 # STEP 55
result = os0.readlink(path4)                                            # STEP 56
result = os0.path.dirname(path4)                                        # STEP 57
result = stat3.st_nlink                                                 # STEP 58
file0 = opener0(path1,'r')                                              # STEP 59
result = stat3.st_nlink                                                 # STEP 60
os0.write(fd0,str1)                                                     # STEP 61
bytes1 += 1                                                             # STEP 62
result = os0.readlink(path4)                                            # STEP 63
os0.symlink(path4,path4)                                                # STEP 64
str2 = ""                                                               # STEP 65
result = os0.path.exists(path4)                                         # STEP 66
os0.makedirs(path4)                                                     # STEP 67
result = os0.readlink(path1)                                            # STEP 68
result = os0.path.isabs(path4)                                          # STEP 69
os0.link(path1,path4)                                                   # STEP 70
file0 = opener0(path1,'a')                                              # STEP 71
str4 = ""                                                               # STEP 72
result = sorted(os0.listdir(path4))                                     # STEP 73
result = os0.path.dirname(path1)                                        # STEP 74
result = stat3.st_nlink                                                 # STEP 75
result = stat3.st_size                                                  # STEP 76
path4 += "/" + component1                                               # STEP 77
os0.close(fd0)                                                          # STEP 78
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 79
os0.path.getsize(path4)                                                 # STEP 80
file0 = opener0(path4,'a')                                              # STEP 81
result = stat3.st_nlink                                                 # STEP 82
os0.link(path1,path1)                                                   # STEP 83
result = file0.read()                                                   # STEP 84
result = sorted(os0.listdir(path1))                                     # STEP 85
bytes1 += 1                                                             # STEP 86
os0.makedirs(path1)                                                     # STEP 87
result = os0.path.isdir(path1)                                          # STEP 88
os0.rmdir(path4)                                                        # STEP 89
os0.write(fd0,str3)                                                     # STEP 90
stat4 = os0.stat(path4)                                                 # STEP 91
result = os0.path.isabs(path4)                                          # STEP 92
os0.mkdir(path4)                                                        # STEP 93
result = os0.path.exists(path4)                                         # STEP 94
os0.symlink(path4,path1)                                                # STEP 95
os0.mkdir(path4)                                                        # STEP 96
os0.rename(path4,path1)                                                 # STEP 97
path4 += "/" + component3                                               # STEP 98
result = file0.readline()                                               # STEP 99
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10b12bcf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
os0 = newFakeOS()                                                        # STEP 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
os0.symlink(path4,path4)                                                 # STEP 2
component0 = "beta"                                                      # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.lexists(path4)                                         # STEP 5
bytes2 = 0                                                               # STEP 6
os0.symlink(path4,path3)                                                 # STEP 7
path3 += "/" + component0                                                # STEP 8
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                         # STEP 9
str1 = ""                                                               # STEP 10
str1 += 'm'                                                             # STEP 11
path4 += "/" + component0                                               # STEP 12
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 13
result = os0.readlink(path4)                                            # STEP 14
os0.path.getsize(path4)                                                 # STEP 15
os0.close(fd0)                                                          # STEP 16
os0.link(path4,path4)                                                   # STEP 17
os0.link(path3,path3)                                                   # STEP 18
bytes2 += 1                                                             # STEP 19
component3 = "lambda"                                                   # STEP 20
str1 += 'c'                                                             # STEP 21
os0.close(fd0)                                                          # STEP 22
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 23
os0.makedirs(path4)                                                     # STEP 24
os0.symlink(path4,path4)                                                # STEP 25
result = os0.read(fd0,bytes2)                                           # STEP 26
result = os0.path.islink(path3)                                         # STEP 27
component1 = "h"                                                        # STEP 28
str0 = ""                                                               # STEP 29
os0.symlink(path4,path3)                                                # STEP 30
result = os0.path.lexists(path4)                                        # STEP 31
result = os0.path.dirname(path3)                                        # STEP 32
str0 += 'u'                                                             # STEP 33
stat0 = os0.lstat(path4)                                                # STEP 34
os0.symlink(path4,path3)                                                # STEP 35
result = os0.path.isfile(path3)                                         # STEP 36
stat1 = os0.stat(path3)                                                 # STEP 37
result = sorted(os0.listdir(path3))                                     # STEP 38
os0.link(path4,path4)                                                   # STEP 39
os0.makedirs(path4)                                                     # STEP 40
os0.mkdir(path3)                                                        # STEP 41
result = os0.read(fd0,bytes2)                                           # STEP 42
stat2 = os0.lstat(path4)                                                # STEP 43
result = os0.readlink(path4)                                            # STEP 44
result = os0.path.isdir(path3)                                          # STEP 45
path4 += "/" + component3                                               # STEP 46
stat4 = os0.stat(path3)                                                 # STEP 47
result = sorted(os0.listdir(path3))                                     # STEP 48
result = os0.path.islink(path3)                                         # STEP 49
result = stat0.st_size                                                  # STEP 50
result = stat1.st_size                                                  # STEP 51
os0.remove(path4)                                                       # STEP 52
result = os0.path.exists(path4)                                         # STEP 53
os0.path.getsize(path3)                                                 # STEP 54
str0 += 'w'                                                             # STEP 55
bytes3 = 0                                                              # STEP 56
os0.write(fd0,str0)                                                     # STEP 57
stat3 = os0.fstat(fd0)                                                  # STEP 58
result = os0.path.isfile(path3)                                         # STEP 59
bytes0 = 0                                                              # STEP 60
opener0 = newFakeOpener(os0)                                            # STEP 61
bytes0 += 1                                                             # STEP 62
result = os0.path.exists(path3)                                         # STEP 63
file0 = opener0(path3,'w')                                              # STEP 64
file0.truncate()                                                        # STEP 65
component2 = "omega"                                                    # STEP 66
result = file0.read()                                                   # STEP 67
os0.rmdir(path3)                                                        # STEP 68
file0.truncate()                                                        # STEP 69
result = os0.path.islink(path4)                                         # STEP 70
file0.write(str0)                                                       # STEP 71
file0.truncate()                                                        # STEP 72
result = file0.readlines()                                              # STEP 73
result = os0.read(fd0,bytes0)                                           # STEP 74
file0.flush()                                                           # STEP 75
result = os0.readlink(path3)                                            # STEP 76
os0.rename(path4,path3)                                                 # STEP 77
stat1 = os0.lstat(path3)                                                # STEP 78
os0.write(fd0,str0)                                                     # STEP 79
file0.truncate()                                                        # STEP 80
str4 = ""                                                               # STEP 81
result = os0.path.exists(path4)                                         # STEP 82
file0.seek(bytes3)                                                      # STEP 83
file0.write(str0)                                                       # STEP 84
result = os0.path.islink(path3)                                         # STEP 85
os0.link(path4,path3)                                                   # STEP 86
file0.flush()                                                           # STEP 87
result = os0.read(fd0,bytes0)                                           # STEP 88
os0.close(fd0)                                                          # STEP 89
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 90
result = file0.readline()                                               # STEP 91
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1062b9e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 5
bytes2 = 0                                                               # STEP 0
str0 = ""                                                                # STEP 1
str4 = ""                                                                # STEP 2
str4 += " "                                                              # STEP 3
bytes2 += 1                                                              # STEP 4
bytes4 = 0                                                               # STEP 5
component1 = "b"                                                         # STEP 6
bytes4 += 1                                                              # STEP 7
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
os0 = newFakeOS()                                                        # STEP 9
path3 += "/" + component1                                               # STEP 10
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 11
result = os0.path.dirname(path3)                                        # STEP 12
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 13
os0.link(path3,path3)                                                   # STEP 14
os0.path.getsize(path3)                                                 # STEP 15
os0.write(fd0,str4)                                                     # STEP 16
bytes3 = 0                                                              # STEP 17
os0.mkdir(path3)                                                        # STEP 18
os0.mkdir(path3)                                                        # STEP 19
str4 += 't'                                                             # STEP 20
result = sorted(os0.listdir(path3))                                     # STEP 21
stat2 = os0.lstat(path3)                                                # STEP 22
os0.symlink(path3,path3)                                                # STEP 23
os0.close(fd0)                                                          # STEP 24
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 25
bytes0 = 0                                                              # STEP 26
opener0 = newFakeOpener(os0)                                            # STEP 27
file0 = opener0(path3,'a')                                              # STEP 28
result = os0.path.isabs(path3)                                          # STEP 29
result = os0.path.dirname(path3)                                        # STEP 30
file0.seek(bytes2)                                                      # STEP 31
result = os0.path.abspath(path3)                                        # STEP 32
os0.rmdir(path3)                                                        # STEP 33
result = file0.read()                                                   # STEP 34
stat1 = os0.stat(path3)                                                 # STEP 35
os0.rmdir(path3)                                                        # STEP 36
str4 = ""                                                               # STEP 37
os0.mkdir(path3)                                                        # STEP 38
bytes3 += 1                                                             # STEP 39
result = file0.readline()                                               # STEP 40
result = os0.path.lexists(path3)                                        # STEP 41
os0.link(path3,path3)                                                   # STEP 42
result = os0.path.exists(path3)                                         # STEP 43
result = sorted(os0.listdir(path3))                                     # STEP 44
result = os0.path.dirname(path3)                                        # STEP 45
file0.truncate()                                                        # STEP 46
result = file0.read()                                                   # STEP 47
result = os0.read(fd0,bytes4)                                           # STEP 48
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (\x00) ',), <traceback object at 0x10a60bd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16374, in act376
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 6
str2 = ""                                                                # STEP 0
str2 += " "                                                              # STEP 1
str0 = ""                                                                # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
component0 = "g"                                                         # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.readlink(path3)                                             # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
str0 += 'i'                                                              # STEP 8
result = os0.path.lexists(path1)                                         # STEP 9
result = sorted(os0.listdir(path1))                                     # STEP 10
bytes3 = 0                                                              # STEP 11
result = os0.path.exists(path3)                                         # STEP 12
result = os0.path.dirname(path1)                                        # STEP 13
os0.remove(path3)                                                       # STEP 14
path3 += "/" + component0                                               # STEP 15
component0 = "f"                                                        # STEP 16
os0.link(path1,path3)                                                   # STEP 17
str2 += " "                                                             # STEP 18
result = os0.path.isfile(path3)                                         # STEP 19
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 20
stat0 = os0.stat(path3)                                                 # STEP 21
os0.close(fd0)                                                          # STEP 22
result = sorted(os0.listdir(path3))                                     # STEP 23
stat2 = os0.stat(path3)                                                 # STEP 24
result = stat0.st_nlink                                                 # STEP 25
result = os0.path.isabs(path1)                                          # STEP 26
result = os0.path.lexists(path3)                                        # STEP 27
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 28
stat3 = os0.fstat(fd0)                                                  # STEP 29
opener0 = newFakeOpener(os0)                                            # STEP 30
result = os0.path.dirname(path1)                                        # STEP 31
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
os0.link(path1,path2)                                                   # STEP 33
os0.mkdir(path3)                                                        # STEP 34
path2 += "/" + component0                                               # STEP 35
result = os0.path.lexists(path2)                                        # STEP 36
result = os0.path.isdir(path3)                                          # STEP 37
os0.rmdir(path2)                                                        # STEP 38
str2 += " "                                                             # STEP 39
file0 = opener0(path3,'r')                                              # STEP 40
file0.write(str2)                                                       # STEP 41
result = os0.path.isabs(path1)                                          # STEP 42
file0.write(str0)                                                       # STEP 43
result = stat0.st_size                                                  # STEP 44
path1 += "/" + component0                                               # STEP 45
bytes3 += 1                                                             # STEP 46
str3 = ""                                                               # STEP 47
result = os0.readlink(path3)                                            # STEP 48
result = os0.path.lexists(path2)                                        # STEP 49
str3 += " "                                                             # STEP 50
result = os0.path.islink(path3)                                         # STEP 51
result = os0.path.abspath(path2)                                        # STEP 52
file0.write(str3)                                                       # STEP 53
result = os0.path.islink(path1)                                         # STEP 54
file0.next()                                                            # STEP 55
result = os0.read(fd0,bytes3)                                           # STEP 56
result = os0.read(fd0,bytes3)                                           # STEP 57
stat1 = os0.fstat(fd0)                                                  # STEP 58
file0.write(str2)                                                       # STEP 59
component1 = "alpha"                                                    # STEP 60
result = os0.path.isabs(path1)                                          # STEP 61
result = file0.readlines()                                              # STEP 62
os0.remove(path2)                                                       # STEP 63
str0 += 'n'                                                             # STEP 64
result = file0.readlines()                                              # STEP 65
result = os0.path.isfile(path1)                                         # STEP 66
stat0 = os0.stat(path3)                                                 # STEP 67
os0.mkdir(path3)                                                        # STEP 68
result = stat0.st_nlink                                                 # STEP 69
bytes0 = 0                                                              # STEP 70
component4 = "b"                                                        # STEP 71
os0.close(fd0)                                                          # STEP 72
os0.remove(path2)                                                       # STEP 73
result = os0.path.exists(path2)                                         # STEP 74
file0.write(str3)                                                       # STEP 75
os0.mkdir(path3)                                                        # STEP 76
result = file0.read(bytes3)                                             # STEP 77
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1060580e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
FAILURE 7
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
str4 = ""                                                                # STEP 2
component3 = "h"                                                         # STEP 3
str3 = ""                                                                # STEP 4
component1 = "d"                                                         # STEP 5
str4 += " "                                                              # STEP 6
component4 = "f"                                                         # STEP 7
str3 += 'd'                                                              # STEP 8
str4 += 'y'                                                              # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
file0 = opener0(path4,'w')                                              # STEP 11
result = os0.path.exists(path4)                                         # STEP 12
str4 += 'z'                                                             # STEP 13
os0.mkdir(path4)                                                        # STEP 14
str3 += " "                                                             # STEP 15
file0 = opener0(path4,'r')                                              # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
result = os0.path.abspath(path4)                                        # STEP 18
bytes3 = 0                                                              # STEP 19
result = os0.path.isabs(path4)                                          # STEP 20
os0.symlink(path4,path4)                                                # STEP 21
result = os0.path.abspath(path4)                                        # STEP 22
os0.mkdir(path4)                                                        # STEP 23
result = os0.path.isfile(path4)                                         # STEP 24
file0 = opener0(path4,'a')                                              # STEP 25
file0 = opener0(path4,'r')                                              # STEP 26
result = os0.path.abspath(path4)                                        # STEP 27
os0.makedirs(path4)                                                     # STEP 28
file0 = opener0(path4)                                                  # STEP 29
bytes3 += 1                                                             # STEP 30
result = os0.readlink(path4)                                            # STEP 31
result = os0.path.isdir(path4)                                          # STEP 32
bytes2 = 0                                                              # STEP 33
result = os0.path.isfile(path4)                                         # STEP 34
os0.remove(path4)                                                       # STEP 35
path4 += "/" + component4                                               # STEP 36
file0 = opener0(path4,'r')                                              # STEP 37
result = os0.path.lexists(path4)                                        # STEP 38
component4 = "g"                                                        # STEP 39
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 40
os0.makedirs(path4)                                                     # STEP 41
os0.makedirs(path4)                                                     # STEP 42
os0.rmdir(path4)                                                        # STEP 43
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 44
os0.rmdir(path4)                                                        # STEP 45
os0.mkdir(path4)                                                        # STEP 46
os0.rmdir(path4)                                                        # STEP 47
file0 = opener0(path4,'r')                                              # STEP 48
stat4 = os0.fstat(fd0)                                                  # STEP 49
result = stat4.st_size                                                  # STEP 50
result = os0.path.isdir(path4)                                          # STEP 51
os0.path.getsize(path4)                                                 # STEP 52
os0.close(fd0)                                                          # STEP 53
os0.path.getsize(path4)                                                 # STEP 54
str4 += 'o'                                                             # STEP 55
os0.makedirs(path4)                                                     # STEP 56
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 57
result = os0.path.dirname(path4)                                        # STEP 58
str0 = ""                                                               # STEP 59
os0.makedirs(path4)                                                     # STEP 60
os0.link(path4,path4)                                                   # STEP 61
result = os0.path.isabs(path4)                                          # STEP 62
os0.link(path4,path4)                                                   # STEP 63
os0.rmdir(path4)                                                        # STEP 64
os0.close(fd0)                                                          # STEP 65
str1 = ""                                                               # STEP 66
os0.path.getsize(path4)                                                 # STEP 67
component2 = "gamma"                                                    # STEP 68
result = stat4.st_nlink                                                 # STEP 69
result = os0.path.lexists(path4)                                        # STEP 70
result = os0.path.islink(path4)                                         # STEP 71
file0.flush()                                                           # STEP 72
result = os0.path.dirname(path4)                                        # STEP 73
os0.mkdir(path4)                                                        # STEP 74
result = os0.path.isabs(path4)                                          # STEP 75
component0 = "lambda"                                                   # STEP 76
result = file0.readline()                                               # STEP 77
os0.write(fd0,str0)                                                     # STEP 78
result = os0.read(fd0,bytes2)                                           # STEP 79
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 80
result = file0.readlines()                                              # STEP 81
result = os0.readlink(path4)                                            # STEP 82
os0.link(path4,path4)                                                   # STEP 83
result = file0.readlines()                                              # STEP 84
result = stat4.st_nlink                                                 # STEP 85
result = file0.read()                                                   # STEP 86
os0.write(fd0,str4)                                                     # STEP 87
result = file0.readlines()                                              # STEP 88
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" ([' yzo']) == ([]) ",), <traceback object at 0x1063a93f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 8
os0 = newFakeOS()                                                        # STEP 0
str2 = ""                                                                # STEP 1
str2 += " "                                                              # STEP 2
str2 += 'i'                                                              # STEP 3
bytes3 = 0                                                               # STEP 4
component1 = "delta"                                                     # STEP 5
component4 = "alpha"                                                     # STEP 6
str1 = ""                                                                # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
os0.symlink(path0,path0)                                                 # STEP 9
str2 += 'n'                                                             # STEP 10
str2 += 'p'                                                             # STEP 11
os0.mkdir(path0)                                                        # STEP 12
result = os0.path.lexists(path0)                                        # STEP 13
result = os0.path.abspath(path0)                                        # STEP 14
result = os0.path.isfile(path0)                                         # STEP 15
os0.makedirs(path0)                                                     # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
bytes1 = 0                                                              # STEP 18
result = os0.path.lexists(path0)                                        # STEP 19
file0 = opener0(path0,'a')                                              # STEP 20
str0 = ""                                                               # STEP 21
file0 = opener0(path0)                                                  # STEP 22
str2 = ""                                                               # STEP 23
result = os0.path.dirname(path0)                                        # STEP 24
os0.remove(path0)                                                       # STEP 25
file0 = opener0(path0)                                                  # STEP 26
str0 += " "                                                             # STEP 27
os0.remove(path0)                                                       # STEP 28
result = os0.path.dirname(path0)                                        # STEP 29
result = os0.path.isfile(path0)                                         # STEP 30
bytes3 += 1                                                             # STEP 31
component2 = "delta"                                                    # STEP 32
component0 = "gamma"                                                    # STEP 33
os0.mkdir(path0)                                                        # STEP 34
result = os0.readlink(path0)                                            # STEP 35
os0.mkdir(path0)                                                        # STEP 36
path0 += "/" + component1                                               # STEP 37
os0.link(path0,path0)                                                   # STEP 38
result = os0.path.exists(path0)                                         # STEP 39
result = sorted(os0.listdir(path0))                                     # STEP 40
os0.rmdir(path0)                                                        # STEP 41
os0.rmdir(path0)                                                        # STEP 42
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 43
stat3 = os0.fstat(fd0)                                                  # STEP 44
stat2 = os0.fstat(fd0)                                                  # STEP 45
result = os0.path.abspath(path0)                                        # STEP 46
bytes3 += 1                                                             # STEP 47
os0.makedirs(path0)                                                     # STEP 48
result = os0.path.isfile(path0)                                         # STEP 49
file0 = opener0(path0)                                                  # STEP 50
result = file0.readline()                                               # STEP 51
result = file0.readline(bytes3)                                         # STEP 52
result = os0.path.exists(path0)                                         # STEP 53
stat4 = os0.stat(path0)                                                 # STEP 54
file0.seek(bytes3)                                                      # STEP 55
result = file0.readline()                                               # STEP 56
str3 = ""                                                               # STEP 57
os0.link(path0,path0)                                                   # STEP 58
os0.makedirs(path0)                                                     # STEP 59
result = os0.path.isdir(path0)                                          # STEP 60
result = stat2.st_size                                                  # STEP 61
os0.remove(path0)                                                       # STEP 62
str2 += 'b'                                                             # STEP 63
os0.remove(path0)                                                       # STEP 64
file0.seek(bytes3)                                                      # STEP 65
os0.symlink(path0,path0)                                                # STEP 66
result = file0.read(bytes1)                                             # STEP 67
os0.symlink(path0,path0)                                                # STEP 68
os0.path.getsize(path0)                                                 # STEP 69
os0.remove(path0)                                                       # STEP 70
bytes4 = 0                                                              # STEP 71
bytes4 += 1                                                             # STEP 72
os0.makedirs(path0)                                                     # STEP 73
os0.write(fd0,str2)                                                     # STEP 74
result = os0.path.isfile(path0)                                         # STEP 75
result = os0.path.isabs(path0)                                          # STEP 76
path2 = "/Volumes/ramdisk/test"                                         # STEP 77
result = os0.path.dirname(path0)                                        # STEP 78
result = file0.readline()                                               # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (b) == () ',), <traceback object at 0x106aac1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 9
str3 = ""                                                                # STEP 0
component0 = "d"                                                         # STEP 1
component3 = "omega"                                                     # STEP 2
bytes4 = 0                                                               # STEP 3
bytes4 += 1                                                              # STEP 4
bytes1 = 0                                                               # STEP 5
str4 = ""                                                                # STEP 6
str3 += " "                                                              # STEP 7
str4 += " "                                                              # STEP 8
str3 += " "                                                              # STEP 9
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
str3 += " "                                                             # STEP 11
str4 = ""                                                               # STEP 12
bytes4 = 0                                                              # STEP 13
path1 += "/" + component3                                               # STEP 14
str4 += " "                                                             # STEP 15
bytes1 += 1                                                             # STEP 16
str4 = ""                                                               # STEP 17
component1 = "gamma"                                                    # STEP 18
str1 = ""                                                               # STEP 19
str4 += 'i'                                                             # STEP 20
os0 = newFakeOS()                                                       # STEP 21
result = os0.path.lexists(path1)                                        # STEP 22
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 23
bytes1 = 0                                                              # STEP 24
os0.link(path1,path1)                                                   # STEP 25
stat1 = os0.stat(path1)                                                 # STEP 26
result = sorted(os0.listdir(path1))                                     # STEP 27
component3 = "a"                                                        # STEP 28
str4 += " "                                                             # STEP 29
result = os0.path.isabs(path1)                                          # STEP 30
result = os0.path.isabs(path1)                                          # STEP 31
os0.link(path1,path1)                                                   # STEP 32
stat0 = os0.lstat(path1)                                                # STEP 33
stat3 = os0.fstat(fd0)                                                  # STEP 34
os0.path.getsize(path1)                                                 # STEP 35
os0.symlink(path1,path1)                                                # STEP 36
str4 = ""                                                               # STEP 37
result = os0.path.exists(path1)                                         # STEP 38
stat2 = os0.lstat(path1)                                                # STEP 39
bytes1 += 1                                                             # STEP 40
os0.rmdir(path1)                                                        # STEP 41
opener0 = newFakeOpener(os0)                                            # STEP 42
result = os0.path.isdir(path1)                                          # STEP 43
os0.link(path1,path1)                                                   # STEP 44
stat4 = os0.stat(path1)                                                 # STEP 45
os0.close(fd0)                                                          # STEP 46
file0 = opener0(path1)                                                  # STEP 47
file0.truncate()                                                        # STEP 48
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 49
bytes3 = 0                                                              # STEP 50
result = os0.path.isdir(path1)                                          # STEP 51
result = os0.readlink(path1)                                            # STEP 52
str4 += " "                                                             # STEP 53
result = file0.readlines()                                              # STEP 54
str3 += 'k'                                                             # STEP 55
result = stat0.st_nlink                                                 # STEP 56
result = file0.read()                                                   # STEP 57
os0.path.getsize(path1)                                                 # STEP 58
stat0 = os0.fstat(fd0)                                                  # STEP 59
result = os0.path.lexists(path1)                                        # STEP 60
result = file0.readline()                                               # STEP 61
os0.mkdir(path1)                                                        # STEP 62
result = os0.path.lexists(path1)                                        # STEP 63
result = file0.readline(bytes4)                                         # STEP 64
str3 += " "                                                             # STEP 65
os0.symlink(path1,path1)                                                # STEP 66
result = os0.path.isabs(path1)                                          # STEP 67
component2 = "g"                                                        # STEP 68
file0.next()                                                            # STEP 69
result = file0.read(bytes1)                                             # STEP 70
os0.link(path1,path1)                                                   # STEP 71
os0.rmdir(path1)                                                        # STEP 72
result = stat3.st_nlink                                                 # STEP 73
result = os0.path.abspath(path1)                                        # STEP 74
stat3 = os0.stat(path1)                                                 # STEP 75
os0.rmdir(path1)                                                        # STEP 76
os0.close(fd0)                                                          # STEP 77
bytes4 += 1                                                             # STEP 78
os0.symlink(path1,path1)                                                # STEP 79
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 80
os0.rmdir(path1)                                                        # STEP 81
result = os0.path.isabs(path1)                                          # STEP 82
result = os0.path.exists(path1)                                         # STEP 83
result = file0.read()                                                   # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10314d248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
FAILURE 10
bytes1 = 0                                                               # STEP 0
component1 = "lambda"                                                    # STEP 1
bytes1 += 1                                                              # STEP 2
os0 = newFakeOS()                                                        # STEP 3
bytes3 = 0                                                               # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.link(path0,path0)                                                    # STEP 7
os0.link(path0,path0)                                                    # STEP 8
result = os0.path.isabs(path0)                                           # STEP 9
path0 += "/" + component1                                               # STEP 10
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 11
result = sorted(os0.listdir(path0))                                     # STEP 12
result = os0.readlink(path0)                                            # STEP 13
result = os0.readlink(path0)                                            # STEP 14
result = os0.path.lexists(path0)                                        # STEP 15
file0 = opener0(path0)                                                  # STEP 16
result = os0.path.islink(path0)                                         # STEP 17
result = file0.readline(bytes3)                                         # STEP 18
stat3 = os0.lstat(path0)                                                # STEP 19
bytes0 = 0                                                              # STEP 20
result = sorted(os0.listdir(path0))                                     # STEP 21
result = os0.read(fd0,bytes3)                                           # STEP 22
component0 = "gamma"                                                    # STEP 23
result = os0.path.lexists(path0)                                        # STEP 24
result = file0.readline(bytes1)                                         # STEP 25
result = os0.path.exists(path0)                                         # STEP 26
result = os0.path.islink(path0)                                         # STEP 27
stat1 = os0.stat(path0)                                                 # STEP 28
result = stat1.st_size                                                  # STEP 29
path0 += "/" + component0                                               # STEP 30
str3 = ""                                                               # STEP 31
str3 += 'i'                                                             # STEP 32
stat4 = os0.lstat(path0)                                                # STEP 33
str3 += 'o'                                                             # STEP 34
path4 = "/Volumes/ramdisk/test"                                         # STEP 35
component3 = "gamma"                                                    # STEP 36
os0.symlink(path0,path0)                                                # STEP 37
result = os0.path.isfile(path4)                                         # STEP 38
str0 = ""                                                               # STEP 39
stat4 = os0.fstat(fd0)                                                  # STEP 40
result = os0.path.isdir(path0)                                          # STEP 41
os0.remove(path4)                                                       # STEP 42
file0.seek(bytes1)                                                      # STEP 43
os0.write(fd0,str3)                                                     # STEP 44
str0 += 'a'                                                             # STEP 45
str0 += 'w'                                                             # STEP 46
file0.seek(bytes1)                                                      # STEP 47
result = file0.read()                                                   # STEP 48
stat1 = os0.lstat(path0)                                                # STEP 49
os0.mkdir(path0)                                                        # STEP 50
path0 += "/" + component3                                               # STEP 51
file0.seek(bytes3)                                                      # STEP 52
result = os0.path.isfile(path0)                                         # STEP 53
os0.makedirs(path4)                                                     # STEP 54
result = os0.path.isfile(path4)                                         # STEP 55
result = file0.read(bytes1)                                             # STEP 56
stat2 = os0.stat(path0)                                                 # STEP 57
result = os0.path.lexists(path4)                                        # STEP 58
file0.flush()                                                           # STEP 59
os0.rename(path0,path4)                                                 # STEP 60
os0.rename(path0,path4)                                                 # STEP 61
result = file0.readline(bytes3)                                         # STEP 62
stat2 = os0.fstat(fd0)                                                  # STEP 63
result = stat3.st_nlink                                                 # STEP 64
str0 += " "                                                             # STEP 65
result = file0.readlines()                                              # STEP 66
result = stat3.st_size                                                  # STEP 67
result = stat2.st_size                                                  # STEP 68
result = file0.read()                                                   # STEP 69
os0.write(fd0,str3)                                                     # STEP 70
result = os0.path.exists(path4)                                         # STEP 71
component0 = "f"                                                        # STEP 72
result = os0.path.isdir(path4)                                          # STEP 73
os0.symlink(path4,path4)                                                # STEP 74
result = os0.read(fd0,bytes1)                                           # STEP 75
os0.mkdir(path0)                                                        # STEP 76
os0.remove(path0)                                                       # STEP 77
component2 = "b"                                                        # STEP 78
file0.flush()                                                           # STEP 79
os0.path.getsize(path0)                                                 # STEP 80
result = file0.read(bytes1)                                             # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (i) == () ',), <traceback object at 0x10672e5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1166 BRANCHES COVERED
898 STATEMENTS COVERED
