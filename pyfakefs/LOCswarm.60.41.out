Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4842.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x108c05560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 93 steps

SAVING TEST AS failure.4842.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
os0.link(path4,path4)                                                    # STEP 2
result = os0.readlink(path4)                                             # STEP 3
result = os0.path.exists(path4)                                          # STEP 4
result = os0.path.isabs(path4)                                           # STEP 5
result = os0.path.islink(path4)                                          # STEP 6
result = os0.path.exists(path4)                                          # STEP 7
result = os0.path.isabs(path4)                                           # STEP 8
component0 = "e"                                                         # STEP 9
result = os0.path.islink(path4)                                         # STEP 10
path3 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.mkdir(path4)                                                        # STEP 12
result = os0.path.abspath(path4)                                        # STEP 13
path4 = "/Volumes/ramdisk/test"                                         # STEP 14
os0.link(path4,path3)                                                   # STEP 15
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
result = os0.path.exists(path4)                                         # STEP 17
os0.mkdir(path4)                                                        # STEP 18
result = os0.path.islink(path4)                                         # STEP 19
os0.link(path3,path4)                                                   # STEP 20
result = sorted(os0.listdir(path4))                                     # STEP 21
os0.mkdir(path4)                                                        # STEP 22
os0.link(path3,path4)                                                   # STEP 23
result = os0.readlink(path4)                                            # STEP 24
component2 = "phi"                                                      # STEP 25
path1 = "/Volumes/ramdisk/test"                                         # STEP 26
result = os0.path.isabs(path4)                                          # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
component1 = "delta"                                                    # STEP 29
result = os0.readlink(path1)                                            # STEP 30
result = os0.readlink(path1)                                            # STEP 31
path4 += "/" + component0                                               # STEP 32
path1 = "/Volumes/ramdisk/test"                                         # STEP 33
os0.link(path1,path3)                                                   # STEP 34
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 35
path1 += "/" + component1                                               # STEP 36
path3 = "/Volumes/ramdisk/test"                                         # STEP 37
result = os0.path.abspath(path3)                                        # STEP 38
path2 = "/Volumes/ramdisk/test"                                         # STEP 39
os0.close(fd0)                                                          # STEP 40
result = os0.path.exists(path2)                                         # STEP 41
os0.rename(path4,path3)                                                 # STEP 42
path1 += "/" + component2                                               # STEP 43
result = os0.path.islink(path4)                                         # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
component3 = "g"                                                        # STEP 46
result = os0.readlink(path3)                                            # STEP 47
result = os0.readlink(path4)                                            # STEP 48
path2 += "/" + component2                                               # STEP 49
path1 = "/Volumes/ramdisk/test"                                         # STEP 50
result = sorted(os0.listdir(path3))                                     # STEP 51
os0.rename(path4,path1)                                                 # STEP 52
opener0 = newFakeOpener(os0)                                            # STEP 53
result = os0.path.exists(path2)                                         # STEP 54
result = os0.path.isabs(path2)                                          # STEP 55
stat0 = os0.fstat(fd0)                                                  # STEP 56
file0 = opener0(path1,'r')                                              # STEP 57
result = os0.path.exists(path4)                                         # STEP 58
result = os0.path.abspath(path3)                                        # STEP 59
result = os0.path.abspath(path2)                                        # STEP 60
file0 = opener0(path1)                                                  # STEP 61
file0 = opener0(path4,'w')                                              # STEP 62
bytes1 = 0                                                              # STEP 63
result = os0.path.islink(path2)                                         # STEP 64
result = os0.path.abspath(path2)                                        # STEP 65
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
path2 += "/" + component2                                               # STEP 67
path3 = "/Volumes/ramdisk/test"                                         # STEP 68
result = os0.path.abspath(path2)                                        # STEP 69
stat0 = os0.fstat(fd0)                                                  # STEP 70
file0.flush()                                                           # STEP 71
component4 = "c"                                                        # STEP 72
result = os0.path.islink(path3)                                         # STEP 73
file0.flush()                                                           # STEP 74
result = os0.read(fd0,bytes1)                                           # STEP 75
stat4 = os0.fstat(fd0)                                                  # STEP 76
str0 = ""                                                               # STEP 77
os0.link(path3,path4)                                                   # STEP 78
result = os0.path.islink(path0)                                         # STEP 79
stat2 = os0.fstat(fd0)                                                  # STEP 80
str4 = ""                                                               # STEP 81
str4 += 'm'                                                             # STEP 82
file0.write(str4)                                                       # STEP 83
file0.flush()                                                           # STEP 84
os0.rename(path4,path0)                                                 # STEP 85
path0 += "/" + component2                                               # STEP 86
file0.write(str0)                                                       # STEP 87
result = os0.readlink(path4)                                            # STEP 88
result = os0.readlink(path3)                                            # STEP 89
os0.link(path4,path4)                                                   # STEP 90
os0.mkdir(path3)                                                        # STEP 91
result = file0.read()                                                   # STEP 92
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10347b878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #184 STEP #56 (0:00:30.000569) Sat Jul 22 02:35:29 2017 [ 894 stmts 1160 branches ] 18349 TOTAL ACTIONS (611.621730764/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b97368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
Original test has 67 steps

SAVING TEST AS failure.4842.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
component0 = "e"                                                         # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "epsilon"                                                   # STEP 4
path0 += "/" + component3                                                # STEP 5
path4 += "/" + component3                                                # STEP 6
str2 += 'x'                                                              # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
os0 = newFakeOS()                                                       # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.path.islink(path0)                                         # STEP 12
result = os0.path.isfile(path0)                                         # STEP 13
file0 = opener0(path4)                                                  # STEP 14
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 15
result = os0.readlink(path3)                                            # STEP 16
os0.rmdir(path4)                                                        # STEP 17
os0.path.getsize(path4)                                                 # STEP 18
result = os0.readlink(path4)                                            # STEP 19
stat3 = os0.fstat(fd0)                                                  # STEP 20
os0.makedirs(path3)                                                     # STEP 21
str3 = ""                                                               # STEP 22
file0 = opener0(path0)                                                  # STEP 23
path0 += "/" + component0                                               # STEP 24
os0.mkdir(path4)                                                        # STEP 25
os0.close(fd0)                                                          # STEP 26
result = os0.readlink(path4)                                            # STEP 27
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 28
os0.mkdir(path0)                                                        # STEP 29
stat4 = os0.fstat(fd0)                                                  # STEP 30
result = os0.path.islink(path3)                                         # STEP 31
str2 += 'l'                                                             # STEP 32
stat1 = os0.stat(path4)                                                 # STEP 33
os0.mkdir(path3)                                                        # STEP 34
bytes1 = 0                                                              # STEP 35
result = os0.path.isfile(path0)                                         # STEP 36
os0.rmdir(path4)                                                        # STEP 37
result = os0.readlink(path4)                                            # STEP 38
os0.close(fd0)                                                          # STEP 39
os0.makedirs(path3)                                                     # STEP 40
bytes3 = 0                                                              # STEP 41
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 42
bytes4 = 0                                                              # STEP 43
path0 += "/" + component0                                               # STEP 44
bytes2 = 0                                                              # STEP 45
path0 += "/" + component3                                               # STEP 46
result = os0.path.islink(path3)                                         # STEP 47
os0.makedirs(path0)                                                     # STEP 48
bytes1 += 1                                                             # STEP 49
bytes0 = 0                                                              # STEP 50
os0.close(fd0)                                                          # STEP 51
os0.mkdir(path4)                                                        # STEP 52
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 53
os0.close(fd0)                                                          # STEP 54
file0 = opener0(path4)                                                  # STEP 55
os0.mkdir(path0)                                                        # STEP 56
stat2 = os0.fstat(fd0)                                                  # STEP 57
path0 += "/" + component3                                               # STEP 58
result = file0.readline()                                               # STEP 59
stat0 = os0.fstat(fd0)                                                  # STEP 60
file0.truncate()                                                        # STEP 61
bytes2 += 1                                                             # STEP 62
os0.close(fd0)                                                          # STEP 63
os0.close(fd0)                                                          # STEP 64
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 65
result = file0.readlines()                                              # STEP 66
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104bbef38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x104cac9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 80 steps

SAVING TEST AS failure.4842.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes3 = 0                                                               # STEP 1
component2 = "g"                                                         # STEP 2
str0 = ""                                                                # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
str4 = ""                                                                # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
path0 += "/" + component2                                                # STEP 7
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                         # STEP 8
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)              # STEP 9
stat4 = os0.lstat(path0)                                                # STEP 10
result = sorted(os0.listdir(path0))                                     # STEP 11
result = stat4.st_nlink                                                 # STEP 12
str2 = ""                                                               # STEP 13
result = os0.path.dirname(path0)                                        # STEP 14
os0.close(fd0)                                                          # STEP 15
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 16
bytes1 = 0                                                              # STEP 17
result = os0.path.lexists(path0)                                        # STEP 18
path0 += "/" + component2                                               # STEP 19
os0.write(fd0,str0)                                                     # STEP 20
path0 = "/Volumes/ramdisk/test"                                         # STEP 21
result = os0.path.lexists(path0)                                        # STEP 22
file0 = opener0(path0,'a')                                              # STEP 23
file0 = opener0(path0,'r')                                              # STEP 24
result = os0.path.lexists(path0)                                        # STEP 25
stat0 = os0.fstat(fd0)                                                  # STEP 26
result = os0.path.lexists(path0)                                        # STEP 27
file0 = opener0(path0)                                                  # STEP 28
result = os0.readlink(path0)                                            # STEP 29
result = os0.path.lexists(path0)                                        # STEP 30
stat2 = os0.fstat(fd0)                                                  # STEP 31
result = os0.readlink(path0)                                            # STEP 32
result = stat4.st_nlink                                                 # STEP 33
bytes4 = 0                                                              # STEP 34
component3 = "f"                                                        # STEP 35
path0 += "/" + component2                                               # STEP 36
bytes0 = 0                                                              # STEP 37
file0 = opener0(path0,'r')                                              # STEP 38
result = os0.readlink(path0)                                            # STEP 39
result = os0.path.dirname(path0)                                        # STEP 40
result = os0.readlink(path0)                                            # STEP 41
os0.write(fd0,str4)                                                     # STEP 42
result = sorted(os0.listdir(path0))                                     # STEP 43
result = os0.path.lexists(path0)                                        # STEP 44
result = stat4.st_nlink                                                 # STEP 45
bytes2 = 0                                                              # STEP 46
stat1 = os0.fstat(fd0)                                                  # STEP 47
result = sorted(os0.listdir(path0))                                     # STEP 48
result = stat4.st_nlink                                                 # STEP 49
result = file0.read(bytes1)                                             # STEP 50
os0.path.getsize(path0)                                                 # STEP 51
stat2 = os0.fstat(fd0)                                                  # STEP 52
result = os0.readlink(path0)                                            # STEP 53
file0.write(str0)                                                       # STEP 54
stat3 = os0.lstat(path0)                                                # STEP 55
result = file0.readline()                                               # STEP 56
result = os0.path.dirname(path0)                                        # STEP 57
component1 = "omega"                                                    # STEP 58
os0.write(fd0,str0)                                                     # STEP 59
result = sorted(os0.listdir(path0))                                     # STEP 60
str4 = ""                                                               # STEP 61
result = os0.path.lexists(path0)                                        # STEP 62
os0.write(fd0,str4)                                                     # STEP 63
stat0 = os0.lstat(path0)                                                # STEP 64
result = os0.path.isfile(path0)                                         # STEP 65
os0.path.getsize(path0)                                                 # STEP 66
result = os0.path.dirname(path0)                                        # STEP 67
result = file0.read(bytes4)                                             # STEP 68
str1 = ""                                                               # STEP 69
os0.close(fd0)                                                          # STEP 70
stat4 = os0.lstat(path0)                                                # STEP 71
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 72
result = os0.readlink(path0)                                            # STEP 73
result = os0.path.dirname(path0)                                        # STEP 74
path0 += "/" + component3                                               # STEP 75
path0 = "/Volumes/ramdisk/test"                                         # STEP 76
result = os0.path.isfile(path0)                                         # STEP 77
str4 = ""                                                               # STEP 78
file0.truncate()                                                        # STEP 79
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x104cc3ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 76
STOPPING TESTING DUE TO TIMEOUT
43.0694908956 PERCENT COVERED
60.331428051 TOTAL RUNTIME
364 EXECUTED
36316 TOTAL TEST OPERATIONS
42.4883408546 TIME SPENT EXECUTING TEST OPERATIONS
15.4883077145 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.023916721344 TIME SPENT CHECKING PROPERTIES
42.512257576 TOTAL TIME SPENT RUNNING SUT
1.08497786522 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
os0.link(path4,path4)                                                    # STEP 2
result = os0.readlink(path4)                                             # STEP 3
result = os0.path.exists(path4)                                          # STEP 4
result = os0.path.isabs(path4)                                           # STEP 5
result = os0.path.islink(path4)                                          # STEP 6
result = os0.path.exists(path4)                                          # STEP 7
result = os0.path.isabs(path4)                                           # STEP 8
component0 = "e"                                                         # STEP 9
result = os0.path.islink(path4)                                         # STEP 10
path3 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.mkdir(path4)                                                        # STEP 12
result = os0.path.abspath(path4)                                        # STEP 13
path4 = "/Volumes/ramdisk/test"                                         # STEP 14
os0.link(path4,path3)                                                   # STEP 15
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
result = os0.path.exists(path4)                                         # STEP 17
os0.mkdir(path4)                                                        # STEP 18
result = os0.path.islink(path4)                                         # STEP 19
os0.link(path3,path4)                                                   # STEP 20
result = sorted(os0.listdir(path4))                                     # STEP 21
os0.mkdir(path4)                                                        # STEP 22
os0.link(path3,path4)                                                   # STEP 23
result = os0.readlink(path4)                                            # STEP 24
component2 = "phi"                                                      # STEP 25
path1 = "/Volumes/ramdisk/test"                                         # STEP 26
result = os0.path.isabs(path4)                                          # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
component1 = "delta"                                                    # STEP 29
result = os0.readlink(path1)                                            # STEP 30
result = os0.readlink(path1)                                            # STEP 31
path4 += "/" + component0                                               # STEP 32
path1 = "/Volumes/ramdisk/test"                                         # STEP 33
os0.link(path1,path3)                                                   # STEP 34
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 35
path1 += "/" + component1                                               # STEP 36
path3 = "/Volumes/ramdisk/test"                                         # STEP 37
result = os0.path.abspath(path3)                                        # STEP 38
path2 = "/Volumes/ramdisk/test"                                         # STEP 39
os0.close(fd0)                                                          # STEP 40
result = os0.path.exists(path2)                                         # STEP 41
os0.rename(path4,path3)                                                 # STEP 42
path1 += "/" + component2                                               # STEP 43
result = os0.path.islink(path4)                                         # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
component3 = "g"                                                        # STEP 46
result = os0.readlink(path3)                                            # STEP 47
result = os0.readlink(path4)                                            # STEP 48
path2 += "/" + component2                                               # STEP 49
path1 = "/Volumes/ramdisk/test"                                         # STEP 50
result = sorted(os0.listdir(path3))                                     # STEP 51
os0.rename(path4,path1)                                                 # STEP 52
opener0 = newFakeOpener(os0)                                            # STEP 53
result = os0.path.exists(path2)                                         # STEP 54
result = os0.path.isabs(path2)                                          # STEP 55
stat0 = os0.fstat(fd0)                                                  # STEP 56
file0 = opener0(path1,'r')                                              # STEP 57
result = os0.path.exists(path4)                                         # STEP 58
result = os0.path.abspath(path3)                                        # STEP 59
result = os0.path.abspath(path2)                                        # STEP 60
file0 = opener0(path1)                                                  # STEP 61
file0 = opener0(path4,'w')                                              # STEP 62
bytes1 = 0                                                              # STEP 63
result = os0.path.islink(path2)                                         # STEP 64
result = os0.path.abspath(path2)                                        # STEP 65
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
path2 += "/" + component2                                               # STEP 67
path3 = "/Volumes/ramdisk/test"                                         # STEP 68
result = os0.path.abspath(path2)                                        # STEP 69
stat0 = os0.fstat(fd0)                                                  # STEP 70
file0.flush()                                                           # STEP 71
component4 = "c"                                                        # STEP 72
result = os0.path.islink(path3)                                         # STEP 73
file0.flush()                                                           # STEP 74
result = os0.read(fd0,bytes1)                                           # STEP 75
stat4 = os0.fstat(fd0)                                                  # STEP 76
str0 = ""                                                               # STEP 77
os0.link(path3,path4)                                                   # STEP 78
result = os0.path.islink(path0)                                         # STEP 79
stat2 = os0.fstat(fd0)                                                  # STEP 80
str4 = ""                                                               # STEP 81
str4 += 'm'                                                             # STEP 82
file0.write(str4)                                                       # STEP 83
file0.flush()                                                           # STEP 84
os0.rename(path4,path0)                                                 # STEP 85
path0 += "/" + component2                                               # STEP 86
file0.write(str0)                                                       # STEP 87
result = os0.readlink(path4)                                            # STEP 88
result = os0.readlink(path3)                                            # STEP 89
os0.link(path4,path4)                                                   # STEP 90
os0.mkdir(path3)                                                        # STEP 91
result = file0.read()                                                   # STEP 92
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10347b878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
str2 = ""                                                                # STEP 0
component0 = "e"                                                         # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "epsilon"                                                   # STEP 4
path0 += "/" + component3                                                # STEP 5
path4 += "/" + component3                                                # STEP 6
str2 += 'x'                                                              # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
os0 = newFakeOS()                                                       # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.path.islink(path0)                                         # STEP 12
result = os0.path.isfile(path0)                                         # STEP 13
file0 = opener0(path4)                                                  # STEP 14
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 15
result = os0.readlink(path3)                                            # STEP 16
os0.rmdir(path4)                                                        # STEP 17
os0.path.getsize(path4)                                                 # STEP 18
result = os0.readlink(path4)                                            # STEP 19
stat3 = os0.fstat(fd0)                                                  # STEP 20
os0.makedirs(path3)                                                     # STEP 21
str3 = ""                                                               # STEP 22
file0 = opener0(path0)                                                  # STEP 23
path0 += "/" + component0                                               # STEP 24
os0.mkdir(path4)                                                        # STEP 25
os0.close(fd0)                                                          # STEP 26
result = os0.readlink(path4)                                            # STEP 27
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 28
os0.mkdir(path0)                                                        # STEP 29
stat4 = os0.fstat(fd0)                                                  # STEP 30
result = os0.path.islink(path3)                                         # STEP 31
str2 += 'l'                                                             # STEP 32
stat1 = os0.stat(path4)                                                 # STEP 33
os0.mkdir(path3)                                                        # STEP 34
bytes1 = 0                                                              # STEP 35
result = os0.path.isfile(path0)                                         # STEP 36
os0.rmdir(path4)                                                        # STEP 37
result = os0.readlink(path4)                                            # STEP 38
os0.close(fd0)                                                          # STEP 39
os0.makedirs(path3)                                                     # STEP 40
bytes3 = 0                                                              # STEP 41
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 42
bytes4 = 0                                                              # STEP 43
path0 += "/" + component0                                               # STEP 44
bytes2 = 0                                                              # STEP 45
path0 += "/" + component3                                               # STEP 46
result = os0.path.islink(path3)                                         # STEP 47
os0.makedirs(path0)                                                     # STEP 48
bytes1 += 1                                                             # STEP 49
bytes0 = 0                                                              # STEP 50
os0.close(fd0)                                                          # STEP 51
os0.mkdir(path4)                                                        # STEP 52
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 53
os0.close(fd0)                                                          # STEP 54
file0 = opener0(path4)                                                  # STEP 55
os0.mkdir(path0)                                                        # STEP 56
stat2 = os0.fstat(fd0)                                                  # STEP 57
path0 += "/" + component3                                               # STEP 58
result = file0.readline()                                               # STEP 59
stat0 = os0.fstat(fd0)                                                  # STEP 60
file0.truncate()                                                        # STEP 61
bytes2 += 1                                                             # STEP 62
os0.close(fd0)                                                          # STEP 63
os0.close(fd0)                                                          # STEP 64
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 65
result = file0.readlines()                                              # STEP 66
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104bbef38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
bytes3 = 0                                                               # STEP 1
component2 = "g"                                                         # STEP 2
str0 = ""                                                                # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
str4 = ""                                                                # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
path0 += "/" + component2                                                # STEP 7
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                         # STEP 8
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)              # STEP 9
stat4 = os0.lstat(path0)                                                # STEP 10
result = sorted(os0.listdir(path0))                                     # STEP 11
result = stat4.st_nlink                                                 # STEP 12
str2 = ""                                                               # STEP 13
result = os0.path.dirname(path0)                                        # STEP 14
os0.close(fd0)                                                          # STEP 15
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 16
bytes1 = 0                                                              # STEP 17
result = os0.path.lexists(path0)                                        # STEP 18
path0 += "/" + component2                                               # STEP 19
os0.write(fd0,str0)                                                     # STEP 20
path0 = "/Volumes/ramdisk/test"                                         # STEP 21
result = os0.path.lexists(path0)                                        # STEP 22
file0 = opener0(path0,'a')                                              # STEP 23
file0 = opener0(path0,'r')                                              # STEP 24
result = os0.path.lexists(path0)                                        # STEP 25
stat0 = os0.fstat(fd0)                                                  # STEP 26
result = os0.path.lexists(path0)                                        # STEP 27
file0 = opener0(path0)                                                  # STEP 28
result = os0.readlink(path0)                                            # STEP 29
result = os0.path.lexists(path0)                                        # STEP 30
stat2 = os0.fstat(fd0)                                                  # STEP 31
result = os0.readlink(path0)                                            # STEP 32
result = stat4.st_nlink                                                 # STEP 33
bytes4 = 0                                                              # STEP 34
component3 = "f"                                                        # STEP 35
path0 += "/" + component2                                               # STEP 36
bytes0 = 0                                                              # STEP 37
file0 = opener0(path0,'r')                                              # STEP 38
result = os0.readlink(path0)                                            # STEP 39
result = os0.path.dirname(path0)                                        # STEP 40
result = os0.readlink(path0)                                            # STEP 41
os0.write(fd0,str4)                                                     # STEP 42
result = sorted(os0.listdir(path0))                                     # STEP 43
result = os0.path.lexists(path0)                                        # STEP 44
result = stat4.st_nlink                                                 # STEP 45
bytes2 = 0                                                              # STEP 46
stat1 = os0.fstat(fd0)                                                  # STEP 47
result = sorted(os0.listdir(path0))                                     # STEP 48
result = stat4.st_nlink                                                 # STEP 49
result = file0.read(bytes1)                                             # STEP 50
os0.path.getsize(path0)                                                 # STEP 51
stat2 = os0.fstat(fd0)                                                  # STEP 52
result = os0.readlink(path0)                                            # STEP 53
file0.write(str0)                                                       # STEP 54
stat3 = os0.lstat(path0)                                                # STEP 55
result = file0.readline()                                               # STEP 56
result = os0.path.dirname(path0)                                        # STEP 57
component1 = "omega"                                                    # STEP 58
os0.write(fd0,str0)                                                     # STEP 59
result = sorted(os0.listdir(path0))                                     # STEP 60
str4 = ""                                                               # STEP 61
result = os0.path.lexists(path0)                                        # STEP 62
os0.write(fd0,str4)                                                     # STEP 63
stat0 = os0.lstat(path0)                                                # STEP 64
result = os0.path.isfile(path0)                                         # STEP 65
os0.path.getsize(path0)                                                 # STEP 66
result = os0.path.dirname(path0)                                        # STEP 67
result = file0.read(bytes4)                                             # STEP 68
str1 = ""                                                               # STEP 69
os0.close(fd0)                                                          # STEP 70
stat4 = os0.lstat(path0)                                                # STEP 71
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 72
result = os0.readlink(path0)                                            # STEP 73
result = os0.path.dirname(path0)                                        # STEP 74
path0 += "/" + component3                                               # STEP 75
path0 = "/Volumes/ramdisk/test"                                         # STEP 76
result = os0.path.isfile(path0)                                         # STEP 77
str4 = ""                                                               # STEP 78
file0.truncate()                                                        # STEP 79
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x104cc3ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1191 BRANCHES COVERED
913 STATEMENTS COVERED
