Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5295.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #432 STEP #12 (0:00:30.000120) Sat Jul 22 05:02:32 2017 [ 888 stmts 1159 branches ] 43112 TOTAL ACTIONS (1437.06091062/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103de9998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 90 steps

SAVING TEST AS failure.5295.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "e"                                                         # STEP 0
component3 = "d"                                                         # STEP 1
component0 = "e"                                                         # STEP 2
bytes3 = 0                                                               # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
path4 += "/" + component0                                                # STEP 5
component0 = "gamma"                                                     # STEP 6
os0 = newFakeOS()                                                        # STEP 7
component1 = "gamma"                                                     # STEP 8
result = os0.path.isabs(path4)                                           # STEP 9
result = os0.path.abspath(path4)                                        # STEP 10
os0.remove(path4)                                                       # STEP 11
component4 = "epsilon"                                                  # STEP 12
result = os0.path.abspath(path4)                                        # STEP 13
result = os0.path.dirname(path4)                                        # STEP 14
result = os0.path.dirname(path4)                                        # STEP 15
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
stat3 = os0.lstat(path4)                                                # STEP 18
result = os0.path.dirname(path4)                                        # STEP 19
os0.link(path4,path4)                                                   # STEP 20
result = os0.path.exists(path4)                                         # STEP 21
stat1 = os0.stat(path4)                                                 # STEP 22
opener0 = newFakeOpener(os0)                                            # STEP 23
stat4 = os0.fstat(fd0)                                                  # STEP 24
bytes2 = 0                                                              # STEP 25
os0.symlink(path4,path4)                                                # STEP 26
result = os0.path.lexists(path4)                                        # STEP 27
result = stat1.st_nlink                                                 # STEP 28
path3 = "/Volumes/ramdisk/test"                                         # STEP 29
bytes2 += 1                                                             # STEP 30
os0.link(path4,path3)                                                   # STEP 31
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
result = os0.path.exists(path4)                                         # STEP 33
path4 = "/Volumes/ramdisk/test"                                         # STEP 34
file0 = opener0(path3,'a')                                              # STEP 35
str4 = ""                                                               # STEP 36
path3 += "/" + component4                                               # STEP 37
str0 = ""                                                               # STEP 38
str2 = ""                                                               # STEP 39
str4 += 'c'                                                             # STEP 40
os0.makedirs(path4)                                                     # STEP 41
result = os0.path.exists(path2)                                         # STEP 42
str0 += " "                                                             # STEP 43
file0 = opener0(path2)                                                  # STEP 44
os0.close(fd0)                                                          # STEP 45
result = os0.path.lexists(path3)                                        # STEP 46
file0 = opener0(path3,'a')                                              # STEP 47
result = file0.readlines()                                              # STEP 48
str2 += 't'                                                             # STEP 49
str0 += 'b'                                                             # STEP 50
str2 += 'n'                                                             # STEP 51
str0 += 'c'                                                             # STEP 52
bytes2 = 0                                                              # STEP 53
file0.write(str0)                                                       # STEP 54
str4 += 'a'                                                             # STEP 55
component4 = "epsilon"                                                  # STEP 56
os0.symlink(path2,path2)                                                # STEP 57
str4 += 'a'                                                             # STEP 58
result = os0.path.islink(path3)                                         # STEP 59
os0.path.getsize(path3)                                                 # STEP 60
result = os0.path.islink(path2)                                         # STEP 61
str4 += 'h'                                                             # STEP 62
str0 += 'w'                                                             # STEP 63
os0.symlink(path4,path2)                                                # STEP 64
str4 += 'g'                                                             # STEP 65
os0.symlink(path2,path2)                                                # STEP 66
os0.removedirs(path4)                                                   # STEP 67
result = sorted(os0.listdir(path2))                                     # STEP 68
os0.write(fd0,str4)                                                     # STEP 69
str4 += 'u'                                                             # STEP 70
os0.write(fd0,str2)                                                     # STEP 71
path3 += "/" + component2                                               # STEP 72
os0.symlink(path2,path2)                                                # STEP 73
str2 += 'x'                                                             # STEP 74
str4 = ""                                                               # STEP 75
str2 += 'k'                                                             # STEP 76
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 77
path2 += "/" + component1                                               # STEP 78
str0 += 'j'                                                             # STEP 79
path3 += "/" + component3                                               # STEP 80
str0 += 't'                                                             # STEP 81
result = stat1.st_nlink                                                 # STEP 82
str4 += 'z'                                                             # STEP 83
file0.write(str0)                                                       # STEP 84
str2 = ""                                                               # STEP 85
str0 += 'o'                                                             # STEP 86
os0.symlink(path4,path3)                                                # STEP 87
component3 = "f"                                                        # STEP 88
result = file0.read(bytes3)                                             # STEP 89
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105e66098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106966098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 89 steps

SAVING TEST AS failure.5295.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "delta"                                                     # STEP 0
component0 = "beta"                                                      # STEP 1
component3 = "gamma"                                                     # STEP 2
bytes3 = 0                                                               # STEP 3
component1 = "g"                                                         # STEP 4
os0 = newFakeOS()                                                        # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
result = os0.path.dirname(path0)                                         # STEP 7
component2 = "delta"                                                     # STEP 8
os0.mkdir(path0)                                                         # STEP 9
result = os0.path.abspath(path0)                                        # STEP 10
result = os0.path.abspath(path0)                                        # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
result = sorted(os0.listdir(path3))                                     # STEP 13
os0.link(path0,path3)                                                   # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
os0.link(path3,path0)                                                   # STEP 16
os0.remove(path0)                                                       # STEP 17
bytes1 = 0                                                              # STEP 18
bytes4 = 0                                                              # STEP 19
bytes0 = 0                                                              # STEP 20
str2 = ""                                                               # STEP 21
path3 += "/" + component4                                               # STEP 22
component4 = "alpha"                                                    # STEP 23
str1 = ""                                                               # STEP 24
file0 = opener0(path0)                                                  # STEP 25
result = os0.path.isfile(path3)                                         # STEP 26
str1 += 'l'                                                             # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
file0 = opener0(path3)                                                  # STEP 29
os0.makedirs(path0)                                                     # STEP 30
path3 += "/" + component0                                               # STEP 31
result = os0.path.lexists(path3)                                        # STEP 32
str2 += 'f'                                                             # STEP 33
str2 = ""                                                               # STEP 34
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 35
str2 += 'v'                                                             # STEP 36
str1 += 'a'                                                             # STEP 37
str2 += 'b'                                                             # STEP 38
component0 = "b"                                                        # STEP 39
bytes3 += 1                                                             # STEP 40
str2 += 'z'                                                             # STEP 41
str1 += 'u'                                                             # STEP 42
result = os0.path.exists(path3)                                         # STEP 43
str4 = ""                                                               # STEP 44
bytes3 += 1                                                             # STEP 45
str2 += 'f'                                                             # STEP 46
os0.rmdir(path3)                                                        # STEP 47
os0.write(fd0,str1)                                                     # STEP 48
str2 += 'v'                                                             # STEP 49
file0 = opener0(path0)                                                  # STEP 50
str4 += 'm'                                                             # STEP 51
os0.write(fd0,str4)                                                     # STEP 52
result = os0.path.islink(path0)                                         # STEP 53
os0.rmdir(path3)                                                        # STEP 54
os0.symlink(path3,path0)                                                # STEP 55
stat1 = os0.stat(path3)                                                 # STEP 56
bytes0 += 1                                                             # STEP 57
str2 += 'j'                                                             # STEP 58
str2 += 't'                                                             # STEP 59
os0.remove(path0)                                                       # STEP 60
str4 += 'q'                                                             # STEP 61
str2 += 'b'                                                             # STEP 62
os0.close(fd0)                                                          # STEP 63
bytes0 = 0                                                              # STEP 64
result = os0.path.abspath(path3)                                        # STEP 65
path0 += "/" + component0                                               # STEP 66
result = os0.path.islink(path0)                                         # STEP 67
path0 += "/" + component3                                               # STEP 68
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 69
str2 += 'h'                                                             # STEP 70
os0.link(path0,path3)                                                   # STEP 71
result = os0.readlink(path3)                                            # STEP 72
os0.path.getsize(path0)                                                 # STEP 73
component3 = "lambda"                                                   # STEP 74
result = stat1.st_nlink                                                 # STEP 75
result = os0.read(fd0,bytes3)                                           # STEP 76
str1 += 'o'                                                             # STEP 77
stat1 = os0.stat(path3)                                                 # STEP 78
bytes2 = 0                                                              # STEP 79
str4 += 'e'                                                             # STEP 80
component0 = "e"                                                        # STEP 81
str4 += 'i'                                                             # STEP 82
file0 = opener0(path3,'w')                                              # STEP 83
path3 += "/" + component0                                               # STEP 84
os0.write(fd0,str2)                                                     # STEP 85
str4 += 'z'                                                             # STEP 86
path0 += "/" + component4                                               # STEP 87
result = file0.readline()                                               # STEP 88
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1085d7dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 67
STOPPING TESTING DUE TO TIMEOUT
42.3262727611 PERCENT COVERED
60.3301830292 TOTAL RUNTIME
850 EXECUTED
84946 TOTAL TEST OPERATIONS
52.7292795181 TIME SPENT EXECUTING TEST OPERATIONS
3.9626288414 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.050861120224 TIME SPENT CHECKING PROPERTIES
52.7801406384 TOTAL TIME SPENT RUNNING SUT
2.45480895042 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "e"                                                         # STEP 0
component3 = "d"                                                         # STEP 1
component0 = "e"                                                         # STEP 2
bytes3 = 0                                                               # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
path4 += "/" + component0                                                # STEP 5
component0 = "gamma"                                                     # STEP 6
os0 = newFakeOS()                                                        # STEP 7
component1 = "gamma"                                                     # STEP 8
result = os0.path.isabs(path4)                                           # STEP 9
result = os0.path.abspath(path4)                                        # STEP 10
os0.remove(path4)                                                       # STEP 11
component4 = "epsilon"                                                  # STEP 12
result = os0.path.abspath(path4)                                        # STEP 13
result = os0.path.dirname(path4)                                        # STEP 14
result = os0.path.dirname(path4)                                        # STEP 15
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
stat3 = os0.lstat(path4)                                                # STEP 18
result = os0.path.dirname(path4)                                        # STEP 19
os0.link(path4,path4)                                                   # STEP 20
result = os0.path.exists(path4)                                         # STEP 21
stat1 = os0.stat(path4)                                                 # STEP 22
opener0 = newFakeOpener(os0)                                            # STEP 23
stat4 = os0.fstat(fd0)                                                  # STEP 24
bytes2 = 0                                                              # STEP 25
os0.symlink(path4,path4)                                                # STEP 26
result = os0.path.lexists(path4)                                        # STEP 27
result = stat1.st_nlink                                                 # STEP 28
path3 = "/Volumes/ramdisk/test"                                         # STEP 29
bytes2 += 1                                                             # STEP 30
os0.link(path4,path3)                                                   # STEP 31
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
result = os0.path.exists(path4)                                         # STEP 33
path4 = "/Volumes/ramdisk/test"                                         # STEP 34
file0 = opener0(path3,'a')                                              # STEP 35
str4 = ""                                                               # STEP 36
path3 += "/" + component4                                               # STEP 37
str0 = ""                                                               # STEP 38
str2 = ""                                                               # STEP 39
str4 += 'c'                                                             # STEP 40
os0.makedirs(path4)                                                     # STEP 41
result = os0.path.exists(path2)                                         # STEP 42
str0 += " "                                                             # STEP 43
file0 = opener0(path2)                                                  # STEP 44
os0.close(fd0)                                                          # STEP 45
result = os0.path.lexists(path3)                                        # STEP 46
file0 = opener0(path3,'a')                                              # STEP 47
result = file0.readlines()                                              # STEP 48
str2 += 't'                                                             # STEP 49
str0 += 'b'                                                             # STEP 50
str2 += 'n'                                                             # STEP 51
str0 += 'c'                                                             # STEP 52
bytes2 = 0                                                              # STEP 53
file0.write(str0)                                                       # STEP 54
str4 += 'a'                                                             # STEP 55
component4 = "epsilon"                                                  # STEP 56
os0.symlink(path2,path2)                                                # STEP 57
str4 += 'a'                                                             # STEP 58
result = os0.path.islink(path3)                                         # STEP 59
os0.path.getsize(path3)                                                 # STEP 60
result = os0.path.islink(path2)                                         # STEP 61
str4 += 'h'                                                             # STEP 62
str0 += 'w'                                                             # STEP 63
os0.symlink(path4,path2)                                                # STEP 64
str4 += 'g'                                                             # STEP 65
os0.symlink(path2,path2)                                                # STEP 66
os0.removedirs(path4)                                                   # STEP 67
result = sorted(os0.listdir(path2))                                     # STEP 68
os0.write(fd0,str4)                                                     # STEP 69
str4 += 'u'                                                             # STEP 70
os0.write(fd0,str2)                                                     # STEP 71
path3 += "/" + component2                                               # STEP 72
os0.symlink(path2,path2)                                                # STEP 73
str2 += 'x'                                                             # STEP 74
str4 = ""                                                               # STEP 75
str2 += 'k'                                                             # STEP 76
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 77
path2 += "/" + component1                                               # STEP 78
str0 += 'j'                                                             # STEP 79
path3 += "/" + component3                                               # STEP 80
str0 += 't'                                                             # STEP 81
result = stat1.st_nlink                                                 # STEP 82
str4 += 'z'                                                             # STEP 83
file0.write(str0)                                                       # STEP 84
str2 = ""                                                               # STEP 85
str0 += 'o'                                                             # STEP 86
os0.symlink(path4,path3)                                                # STEP 87
component3 = "f"                                                        # STEP 88
result = file0.read(bytes3)                                             # STEP 89
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105e66098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
component4 = "delta"                                                     # STEP 0
component0 = "beta"                                                      # STEP 1
component3 = "gamma"                                                     # STEP 2
bytes3 = 0                                                               # STEP 3
component1 = "g"                                                         # STEP 4
os0 = newFakeOS()                                                        # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
result = os0.path.dirname(path0)                                         # STEP 7
component2 = "delta"                                                     # STEP 8
os0.mkdir(path0)                                                         # STEP 9
result = os0.path.abspath(path0)                                        # STEP 10
result = os0.path.abspath(path0)                                        # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
result = sorted(os0.listdir(path3))                                     # STEP 13
os0.link(path0,path3)                                                   # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
os0.link(path3,path0)                                                   # STEP 16
os0.remove(path0)                                                       # STEP 17
bytes1 = 0                                                              # STEP 18
bytes4 = 0                                                              # STEP 19
bytes0 = 0                                                              # STEP 20
str2 = ""                                                               # STEP 21
path3 += "/" + component4                                               # STEP 22
component4 = "alpha"                                                    # STEP 23
str1 = ""                                                               # STEP 24
file0 = opener0(path0)                                                  # STEP 25
result = os0.path.isfile(path3)                                         # STEP 26
str1 += 'l'                                                             # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
file0 = opener0(path3)                                                  # STEP 29
os0.makedirs(path0)                                                     # STEP 30
path3 += "/" + component0                                               # STEP 31
result = os0.path.lexists(path3)                                        # STEP 32
str2 += 'f'                                                             # STEP 33
str2 = ""                                                               # STEP 34
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 35
str2 += 'v'                                                             # STEP 36
str1 += 'a'                                                             # STEP 37
str2 += 'b'                                                             # STEP 38
component0 = "b"                                                        # STEP 39
bytes3 += 1                                                             # STEP 40
str2 += 'z'                                                             # STEP 41
str1 += 'u'                                                             # STEP 42
result = os0.path.exists(path3)                                         # STEP 43
str4 = ""                                                               # STEP 44
bytes3 += 1                                                             # STEP 45
str2 += 'f'                                                             # STEP 46
os0.rmdir(path3)                                                        # STEP 47
os0.write(fd0,str1)                                                     # STEP 48
str2 += 'v'                                                             # STEP 49
file0 = opener0(path0)                                                  # STEP 50
str4 += 'm'                                                             # STEP 51
os0.write(fd0,str4)                                                     # STEP 52
result = os0.path.islink(path0)                                         # STEP 53
os0.rmdir(path3)                                                        # STEP 54
os0.symlink(path3,path0)                                                # STEP 55
stat1 = os0.stat(path3)                                                 # STEP 56
bytes0 += 1                                                             # STEP 57
str2 += 'j'                                                             # STEP 58
str2 += 't'                                                             # STEP 59
os0.remove(path0)                                                       # STEP 60
str4 += 'q'                                                             # STEP 61
str2 += 'b'                                                             # STEP 62
os0.close(fd0)                                                          # STEP 63
bytes0 = 0                                                              # STEP 64
result = os0.path.abspath(path3)                                        # STEP 65
path0 += "/" + component0                                               # STEP 66
result = os0.path.islink(path0)                                         # STEP 67
path0 += "/" + component3                                               # STEP 68
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 69
str2 += 'h'                                                             # STEP 70
os0.link(path0,path3)                                                   # STEP 71
result = os0.readlink(path3)                                            # STEP 72
os0.path.getsize(path0)                                                 # STEP 73
component3 = "lambda"                                                   # STEP 74
result = stat1.st_nlink                                                 # STEP 75
result = os0.read(fd0,bytes3)                                           # STEP 76
str1 += 'o'                                                             # STEP 77
stat1 = os0.stat(path3)                                                 # STEP 78
bytes2 = 0                                                              # STEP 79
str4 += 'e'                                                             # STEP 80
component0 = "e"                                                        # STEP 81
str4 += 'i'                                                             # STEP 82
file0 = opener0(path3,'w')                                              # STEP 83
path3 += "/" + component0                                               # STEP 84
os0.write(fd0,str2)                                                     # STEP 85
str4 += 'z'                                                             # STEP 86
path0 += "/" + component4                                               # STEP 87
result = file0.readline()                                               # STEP 88
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1085d7dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1176 BRANCHES COVERED
903 STATEMENTS COVERED
