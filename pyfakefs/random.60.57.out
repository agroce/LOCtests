Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5166.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a3c4bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28821, in act572
    result = self.p_file[0].readline(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 84 steps

SAVING TEST AS failure.5166.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "omega"                                                     # STEP 0
bytes2 = 0                                                               # STEP 1
component4 = "omega"                                                     # STEP 2
component0 = "phi"                                                       # STEP 3
component2 = "g"                                                         # STEP 4
component1 = "b"                                                         # STEP 5
os0 = newFakeOS()                                                        # STEP 6
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.exists(path3)                                          # STEP 8
path3 += "/" + component4                                                # STEP 9
os0.link(path3,path3)                                                   # STEP 10
os0.mkdir(path3)                                                        # STEP 11
path3 += "/" + component2                                               # STEP 12
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 13
stat4 = os0.fstat(fd0)                                                  # STEP 14
component2 = "d"                                                        # STEP 15
os0.symlink(path3,path3)                                                # STEP 16
stat1 = os0.stat(path3)                                                 # STEP 17
result = stat4.st_nlink                                                 # STEP 18
component4 = "epsilon"                                                  # STEP 19
result = os0.path.abspath(path3)                                        # STEP 20
bytes2 += 1                                                             # STEP 21
stat3 = os0.lstat(path3)                                                # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
path3 += "/" + component3                                               # STEP 24
result = stat1.st_size                                                  # STEP 25
component3 = "alpha"                                                    # STEP 26
result = os0.path.isfile(path3)                                         # STEP 27
result = os0.path.isabs(path3)                                          # STEP 28
bytes2 += 1                                                             # STEP 29
result = stat4.st_size                                                  # STEP 30
os0.close(fd0)                                                          # STEP 31
bytes2 += 1                                                             # STEP 32
stat0 = os0.stat(path3)                                                 # STEP 33
stat1 = os0.fstat(fd0)                                                  # STEP 34
bytes1 = 0                                                              # STEP 35
str2 = ""                                                               # STEP 36
os0.symlink(path3,path3)                                                # STEP 37
result = os0.path.isabs(path3)                                          # STEP 38
str2 += 'd'                                                             # STEP 39
str2 += 'q'                                                             # STEP 40
result = os0.read(fd0,bytes2)                                           # STEP 41
result = os0.path.lexists(path3)                                        # STEP 42
str2 += 'b'                                                             # STEP 43
str2 += 'q'                                                             # STEP 44
bytes3 = 0                                                              # STEP 45
path3 += "/" + component1                                               # STEP 46
result = os0.readlink(path3)                                            # STEP 47
component1 = "c"                                                        # STEP 48
opener0 = newFakeOpener(os0)                                            # STEP 49
str2 += 'a'                                                             # STEP 50
os0.remove(path3)                                                       # STEP 51
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 52
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
str2 += 'r'                                                             # STEP 54
bytes3 += 1                                                             # STEP 55
path4 += "/" + component2                                               # STEP 56
path3 += "/" + component1                                               # STEP 57
bytes1 += 1                                                             # STEP 58
component2 = "a"                                                        # STEP 59
os0.mkdir(path4)                                                        # STEP 60
bytes1 = 0                                                              # STEP 61
os0.removedirs(path3)                                                   # STEP 62
os0.mkdir(path3)                                                        # STEP 63
stat4 = os0.lstat(path3)                                                # STEP 64
str2 += 'n'                                                             # STEP 65
os0.write(fd0,str2)                                                     # STEP 66
result = os0.read(fd0,bytes3)                                           # STEP 67
component1 = "gamma"                                                    # STEP 68
path4 += "/" + component3                                               # STEP 69
result = os0.path.islink(path3)                                         # STEP 70
bytes2 += 1                                                             # STEP 71
file0 = opener0(path4,'w')                                              # STEP 72
result = stat1.st_nlink                                                 # STEP 73
path3 += "/" + component3                                               # STEP 74
result = os0.path.islink(path4)                                         # STEP 75
path4 += "/" + component2                                               # STEP 76
stat2 = os0.stat(path3)                                                 # STEP 77
component3 = "epsilon"                                                  # STEP 78
os0.write(fd0,str2)                                                     # STEP 79
os0.removedirs(path4)                                                   # STEP 80
stat2 = os0.lstat(path4)                                                # STEP 81
str2 += 'y'                                                             # STEP 82
result = file0.readline(bytes2)                                         # STEP 83
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x108468368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28821, in act572
    result = self.p_file[0].readline(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #404 STEP #53 (0:00:30.001418) Sat Jul 22 04:16:50 2017 [ 897 stmts 1165 branches ] 40337 TOTAL ACTIONS (1344.50312207/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 67
STOPPING TESTING DUE TO TIMEOUT
42.474916388 PERCENT COVERED
60.3380730152 TOTAL RUNTIME
831 EXECUTED
83051 TOTAL TEST OPERATIONS
52.5549457073 TIME SPENT EXECUTING TEST OPERATIONS
4.1336376667 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0535976886749 TIME SPENT CHECKING PROPERTIES
52.608543396 TOTAL TIME SPENT RUNNING SUT
2.54623818398 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "omega"                                                     # STEP 0
bytes2 = 0                                                               # STEP 1
component4 = "omega"                                                     # STEP 2
component0 = "phi"                                                       # STEP 3
component2 = "g"                                                         # STEP 4
component1 = "b"                                                         # STEP 5
os0 = newFakeOS()                                                        # STEP 6
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.exists(path3)                                          # STEP 8
path3 += "/" + component4                                                # STEP 9
os0.link(path3,path3)                                                   # STEP 10
os0.mkdir(path3)                                                        # STEP 11
path3 += "/" + component2                                               # STEP 12
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 13
stat4 = os0.fstat(fd0)                                                  # STEP 14
component2 = "d"                                                        # STEP 15
os0.symlink(path3,path3)                                                # STEP 16
stat1 = os0.stat(path3)                                                 # STEP 17
result = stat4.st_nlink                                                 # STEP 18
component4 = "epsilon"                                                  # STEP 19
result = os0.path.abspath(path3)                                        # STEP 20
bytes2 += 1                                                             # STEP 21
stat3 = os0.lstat(path3)                                                # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
path3 += "/" + component3                                               # STEP 24
result = stat1.st_size                                                  # STEP 25
component3 = "alpha"                                                    # STEP 26
result = os0.path.isfile(path3)                                         # STEP 27
result = os0.path.isabs(path3)                                          # STEP 28
bytes2 += 1                                                             # STEP 29
result = stat4.st_size                                                  # STEP 30
os0.close(fd0)                                                          # STEP 31
bytes2 += 1                                                             # STEP 32
stat0 = os0.stat(path3)                                                 # STEP 33
stat1 = os0.fstat(fd0)                                                  # STEP 34
bytes1 = 0                                                              # STEP 35
str2 = ""                                                               # STEP 36
os0.symlink(path3,path3)                                                # STEP 37
result = os0.path.isabs(path3)                                          # STEP 38
str2 += 'd'                                                             # STEP 39
str2 += 'q'                                                             # STEP 40
result = os0.read(fd0,bytes2)                                           # STEP 41
result = os0.path.lexists(path3)                                        # STEP 42
str2 += 'b'                                                             # STEP 43
str2 += 'q'                                                             # STEP 44
bytes3 = 0                                                              # STEP 45
path3 += "/" + component1                                               # STEP 46
result = os0.readlink(path3)                                            # STEP 47
component1 = "c"                                                        # STEP 48
opener0 = newFakeOpener(os0)                                            # STEP 49
str2 += 'a'                                                             # STEP 50
os0.remove(path3)                                                       # STEP 51
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 52
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
str2 += 'r'                                                             # STEP 54
bytes3 += 1                                                             # STEP 55
path4 += "/" + component2                                               # STEP 56
path3 += "/" + component1                                               # STEP 57
bytes1 += 1                                                             # STEP 58
component2 = "a"                                                        # STEP 59
os0.mkdir(path4)                                                        # STEP 60
bytes1 = 0                                                              # STEP 61
os0.removedirs(path3)                                                   # STEP 62
os0.mkdir(path3)                                                        # STEP 63
stat4 = os0.lstat(path3)                                                # STEP 64
str2 += 'n'                                                             # STEP 65
os0.write(fd0,str2)                                                     # STEP 66
result = os0.read(fd0,bytes3)                                           # STEP 67
component1 = "gamma"                                                    # STEP 68
path4 += "/" + component3                                               # STEP 69
result = os0.path.islink(path3)                                         # STEP 70
bytes2 += 1                                                             # STEP 71
file0 = opener0(path4,'w')                                              # STEP 72
result = stat1.st_nlink                                                 # STEP 73
path3 += "/" + component3                                               # STEP 74
result = os0.path.islink(path4)                                         # STEP 75
path4 += "/" + component2                                               # STEP 76
stat2 = os0.stat(path3)                                                 # STEP 77
component3 = "epsilon"                                                  # STEP 78
os0.write(fd0,str2)                                                     # STEP 79
os0.removedirs(path4)                                                   # STEP 80
stat2 = os0.lstat(path4)                                                # STEP 81
str2 += 'y'                                                             # STEP 82
result = file0.readline(bytes2)                                         # STEP 83
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x108468368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28821, in act572
    result = self.p_file[0].readline(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1179 BRANCHES COVERED
905 STATEMENTS COVERED
