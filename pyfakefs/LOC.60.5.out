Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4007.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103960368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 66 steps

SAVING TEST AS failure.4007.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
component3 = "delta"                                                     # STEP 1
str2 += " "                                                              # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
str2 += " "                                                              # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
os0 = newFakeOS()                                                        # STEP 6
result = os0.path.isdir(path4)                                           # STEP 7
os0.remove(path4)                                                        # STEP 8
os0.symlink(path0,path0)                                                 # STEP 9
os0.link(path4,path0)                                                   # STEP 10
result = os0.path.isdir(path4)                                          # STEP 11
result = os0.path.exists(path4)                                         # STEP 12
result = os0.path.abspath(path4)                                        # STEP 13
path0 += "/" + component3                                               # STEP 14
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 15
path1 = "/Volumes/ramdisk/test"                                         # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
str3 = ""                                                               # STEP 19
result = os0.path.abspath(path0)                                        # STEP 20
result = sorted(os0.listdir(path1))                                     # STEP 21
os0.link(path0,path3)                                                   # STEP 22
os0.rename(path0,path4)                                                 # STEP 23
result = os0.path.isdir(path3)                                          # STEP 24
os0.close(fd0)                                                          # STEP 25
os0.rename(path0,path4)                                                 # STEP 26
str1 = ""                                                               # STEP 27
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 28
result = os0.path.islink(path4)                                         # STEP 29
result = os0.path.isabs(path4)                                          # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
result = os0.path.dirname(path3)                                        # STEP 32
result = os0.path.lexists(path0)                                        # STEP 33
file0 = opener0(path1,'w')                                              # STEP 34
os0.symlink(path0,path1)                                                # STEP 35
os0.link(path4,path4)                                                   # STEP 36
result = os0.path.isfile(path3)                                         # STEP 37
result = os0.path.isdir(path3)                                          # STEP 38
os0.makedirs(path3)                                                     # STEP 39
component0 = "g"                                                        # STEP 40
file0 = opener0(path4,'w')                                              # STEP 41
bytes3 = 0                                                              # STEP 42
stat4 = os0.lstat(path0)                                                # STEP 43
os0.makedirs(path0)                                                     # STEP 44
result = os0.path.isabs(path1)                                          # STEP 45
file0 = opener0(path0)                                                  # STEP 46
result = stat4.st_nlink                                                 # STEP 47
os0.path.getsize(path0)                                                 # STEP 48
stat3 = os0.lstat(path0)                                                # STEP 49
component4 = "f"                                                        # STEP 50
os0.symlink(path3,path1)                                                # STEP 51
result = os0.path.isdir(path3)                                          # STEP 52
os0.path.getsize(path0)                                                 # STEP 53
stat4 = os0.lstat(path0)                                                # STEP 54
result = stat4.st_nlink                                                 # STEP 55
file0.flush()                                                           # STEP 56
result = os0.path.exists(path3)                                         # STEP 57
os0.write(fd0,str3)                                                     # STEP 58
stat4 = os0.lstat(path0)                                                # STEP 59
os0.symlink(path4,path0)                                                # STEP 60
bytes4 = 0                                                              # STEP 61
os0.link(path1,path0)                                                   # STEP 62
bytes1 = 0                                                              # STEP 63
os0.makedirs(path1)                                                     # STEP 64
file0.truncate()                                                        # STEP 65
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103bc4b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1099f7f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 100 steps

SAVING TEST AS failure.4007.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str4 = ""                                                                # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str4 += 'h'                                                              # STEP 2
component2 = "h"                                                         # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
str4 += " "                                                              # STEP 5
os0.makedirs(path4)                                                      # STEP 6
result = os0.path.isfile(path4)                                          # STEP 7
os0.mkdir(path4)                                                         # STEP 8
os0.link(path4,path4)                                                    # STEP 9
os0.remove(path4)                                                       # STEP 10
result = os0.path.lexists(path4)                                        # STEP 11
os0.remove(path4)                                                       # STEP 12
os0.makedirs(path4)                                                     # STEP 13
path4 += "/" + component2                                               # STEP 14
result = os0.path.isfile(path4)                                         # STEP 15
result = os0.path.islink(path4)                                         # STEP 16
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
result = os0.path.islink(path4)                                         # STEP 18
result = os0.path.isfile(path4)                                         # STEP 19
os0.remove(path4)                                                       # STEP 20
stat3 = os0.lstat(path4)                                                # STEP 21
stat4 = os0.fstat(fd0)                                                  # STEP 22
os0.write(fd0,str4)                                                     # STEP 23
result = stat4.st_size                                                  # STEP 24
os0.mkdir(path4)                                                        # STEP 25
path4 += "/" + component2                                               # STEP 26
stat0 = os0.stat(path4)                                                 # STEP 27
os0.mkdir(path4)                                                        # STEP 28
result = os0.path.abspath(path4)                                        # STEP 29
result = os0.path.isfile(path4)                                         # STEP 30
stat1 = os0.lstat(path4)                                                # STEP 31
stat2 = os0.stat(path4)                                                 # STEP 32
result = os0.path.dirname(path4)                                        # STEP 33
os0.symlink(path4,path4)                                                # STEP 34
os0.link(path4,path4)                                                   # STEP 35
result = sorted(os0.listdir(path4))                                     # STEP 36
os0.close(fd0)                                                          # STEP 37
os0.link(path4,path4)                                                   # STEP 38
result = os0.path.lexists(path4)                                        # STEP 39
os0.rmdir(path4)                                                        # STEP 40
result = os0.path.lexists(path4)                                        # STEP 41
result = os0.path.islink(path4)                                         # STEP 42
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 43
component1 = "c"                                                        # STEP 44
result = os0.path.lexists(path4)                                        # STEP 45
result = os0.path.abspath(path4)                                        # STEP 46
os0.makedirs(path4)                                                     # STEP 47
stat4 = os0.stat(path4)                                                 # STEP 48
result = sorted(os0.listdir(path4))                                     # STEP 49
os0.makedirs(path4)                                                     # STEP 50
os0.link(path4,path4)                                                   # STEP 51
str4 += " "                                                             # STEP 52
os0.symlink(path4,path4)                                                # STEP 53
opener0 = newFakeOpener(os0)                                            # STEP 54
stat0 = os0.stat(path4)                                                 # STEP 55
os0.makedirs(path4)                                                     # STEP 56
os0.symlink(path4,path4)                                                # STEP 57
stat3 = os0.stat(path4)                                                 # STEP 58
file0 = opener0(path4)                                                  # STEP 59
result = os0.path.abspath(path4)                                        # STEP 60
os0.write(fd0,str4)                                                     # STEP 61
result = os0.path.abspath(path4)                                        # STEP 62
result = sorted(os0.listdir(path4))                                     # STEP 63
os0.symlink(path4,path4)                                                # STEP 64
str4 += 'y'                                                             # STEP 65
result = os0.path.isfile(path4)                                         # STEP 66
os0.rmdir(path4)                                                        # STEP 67
result = os0.path.isdir(path4)                                          # STEP 68
file0 = opener0(path4,'r')                                              # STEP 69
os0.close(fd0)                                                          # STEP 70
result = os0.path.exists(path4)                                         # STEP 71
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 72
result = sorted(os0.listdir(path4))                                     # STEP 73
file0 = opener0(path4,'a')                                              # STEP 74
os0.rmdir(path4)                                                        # STEP 75
result = os0.path.lexists(path4)                                        # STEP 76
component0 = "a"                                                        # STEP 77
os0.rmdir(path4)                                                        # STEP 78
os0.path.getsize(path4)                                                 # STEP 79
result = os0.path.isabs(path4)                                          # STEP 80
os0.symlink(path4,path4)                                                # STEP 81
result = os0.path.isfile(path4)                                         # STEP 82
os0.write(fd0,str4)                                                     # STEP 83
os0.write(fd0,str4)                                                     # STEP 84
result = sorted(os0.listdir(path4))                                     # STEP 85
result = os0.readlink(path4)                                            # STEP 86
file0.write(str4)                                                       # STEP 87
os0.symlink(path4,path4)                                                # STEP 88
str4 += " "                                                             # STEP 89
bytes0 = 0                                                              # STEP 90
file0.write(str4)                                                       # STEP 91
os0.makedirs(path4)                                                     # STEP 92
file0.write(str4)                                                       # STEP 93
file0.flush()                                                           # STEP 94
os0.write(fd0,str4)                                                     # STEP 95
result = os0.path.lexists(path4)                                        # STEP 96
component4 = "a"                                                        # STEP 97
path4 = "/Volumes/ramdisk/test"                                         # STEP 98
result = file0.readline()                                               # STEP 99
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109cdf098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #173 STEP #8 (0:00:30.000418) Fri Jul 21 22:35:55 2017 [ 901 stmts 1173 branches ] 17174 TOTAL ACTIONS (572.458691406/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10aa38c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 43 steps

SAVING TEST AS failure.4007.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes0 = 0                                                               # STEP 0
component2 = "epsilon"                                                   # STEP 1
str0 = ""                                                                # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
path4 += "/" + component2                                                # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.exists(path4)                                          # STEP 6
os0.rmdir(path4)                                                         # STEP 7
component1 = "h"                                                         # STEP 8
result = os0.path.lexists(path4)                                         # STEP 9
result = os0.path.isabs(path4)                                          # STEP 10
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 11
os0.close(fd0)                                                          # STEP 12
str1 = ""                                                               # STEP 13
bytes0 += 1                                                             # STEP 14
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 15
os0.symlink(path4,path4)                                                # STEP 16
os0.close(fd0)                                                          # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
path1 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.path.getsize(path4)                                                 # STEP 20
path4 += "/" + component2                                               # STEP 21
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 22
result = os0.path.isabs(path1)                                          # STEP 23
result = sorted(os0.listdir(path4))                                     # STEP 24
component4 = "a"                                                        # STEP 25
os0.rmdir(path4)                                                        # STEP 26
path1 += "/" + component4                                               # STEP 27
file0 = opener0(path1,'w')                                              # STEP 28
file0.flush()                                                           # STEP 29
str0 += 'e'                                                             # STEP 30
bytes0 += 1                                                             # STEP 31
bytes0 += 1                                                             # STEP 32
stat1 = os0.fstat(fd0)                                                  # STEP 33
os0.symlink(path1,path4)                                                # STEP 34
str1 += 'm'                                                             # STEP 35
stat4 = os0.stat(path4)                                                 # STEP 36
file0.next()                                                            # STEP 37
result = os0.path.isdir(path1)                                          # STEP 38
path4 += "/" + component1                                               # STEP 39
stat2 = os0.fstat(fd0)                                                  # STEP 40
result = os0.read(fd0,bytes0)                                           # STEP 41
result = file0.readlines()                                              # STEP 42
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107231560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10746b488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 89 steps

SAVING TEST AS failure.4007.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes1 = 0                                                               # STEP 2
str1 = ""                                                                # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
file0 = opener0(path3,'r')                                               # STEP 5
str1 += " "                                                              # STEP 6
file0 = opener0(path3,'w')                                               # STEP 7
os0.remove(path3)                                                        # STEP 8
os0.symlink(path3,path3)                                                 # STEP 9
result = os0.path.isdir(path3)                                          # STEP 10
result = os0.path.abspath(path3)                                        # STEP 11
bytes0 = 0                                                              # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
component4 = "gamma"                                                    # STEP 14
file0 = opener0(path2,'r')                                              # STEP 15
result = os0.path.islink(path3)                                         # STEP 16
file0 = opener0(path2,'r')                                              # STEP 17
file0 = opener0(path3,'a')                                              # STEP 18
bytes4 = 0                                                              # STEP 19
file0 = opener0(path2,'r')                                              # STEP 20
path3 += "/" + component4                                               # STEP 21
os0.rename(path3,path2)                                                 # STEP 22
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 23
bytes2 = 0                                                              # STEP 24
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 25
str1 += 'o'                                                             # STEP 26
os0.remove(path2)                                                       # STEP 27
os0.remove(path2)                                                       # STEP 28
os0.mkdir(path3)                                                        # STEP 29
os0.rename(path3,path2)                                                 # STEP 30
result = os0.readlink(path2)                                            # STEP 31
result = os0.readlink(path3)                                            # STEP 32
result = sorted(os0.listdir(path3))                                     # STEP 33
os0.path.getsize(path3)                                                 # STEP 34
str1 += 'y'                                                             # STEP 35
os0.close(fd0)                                                          # STEP 36
path2 += "/" + component4                                               # STEP 37
path2 += "/" + component4                                               # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
file0 = opener0(path2,'r')                                              # STEP 41
os0.remove(path2)                                                       # STEP 42
os0.makedirs(path3)                                                     # STEP 43
result = os0.path.isabs(path3)                                          # STEP 44
os0.mkdir(path2)                                                        # STEP 45
os0.write(fd0,str1)                                                     # STEP 46
result = os0.path.isfile(path3)                                         # STEP 47
str1 += 'e'                                                             # STEP 48
str4 = ""                                                               # STEP 49
stat1 = os0.lstat(path3)                                                # STEP 50
result = stat1.st_size                                                  # STEP 51
os0.write(fd0,str1)                                                     # STEP 52
os0.makedirs(path2)                                                     # STEP 53
os0.mkdir(path2)                                                        # STEP 54
result = os0.path.isdir(path3)                                          # STEP 55
result = os0.path.dirname(path3)                                        # STEP 56
os0.remove(path2)                                                       # STEP 57
result = stat1.st_nlink                                                 # STEP 58
os0.remove(path2)                                                       # STEP 59
result = os0.readlink(path2)                                            # STEP 60
result = os0.readlink(path3)                                            # STEP 61
stat2 = os0.lstat(path3)                                                # STEP 62
result = os0.path.exists(path3)                                         # STEP 63
file0 = opener0(path3,'w')                                              # STEP 64
result = os0.path.exists(path3)                                         # STEP 65
file0.truncate()                                                        # STEP 66
os0.link(path2,path2)                                                   # STEP 67
file0.flush()                                                           # STEP 68
file0.next()                                                            # STEP 69
result = os0.path.exists(path2)                                         # STEP 70
result = stat2.st_nlink                                                 # STEP 71
stat1 = os0.lstat(path3)                                                # STEP 72
file0.flush()                                                           # STEP 73
result = os0.path.abspath(path3)                                        # STEP 74
path0 = "/Volumes/ramdisk/test"                                         # STEP 75
result = os0.readlink(path2)                                            # STEP 76
result = stat1.st_size                                                  # STEP 77
result = file0.readline()                                               # STEP 78
os0.rmdir(path3)                                                        # STEP 79
os0.mkdir(path0)                                                        # STEP 80
os0.write(fd0,str4)                                                     # STEP 81
file0.truncate()                                                        # STEP 82
bytes3 = 0                                                              # STEP 83
os0.rmdir(path2)                                                        # STEP 84
result = os0.path.isfile(path3)                                         # STEP 85
result = os0.path.dirname(path3)                                        # STEP 86
str4 += " "                                                             # STEP 87
result = file0.readlines()                                              # STEP 88
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10722def0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (e  ) == () ',), <traceback object at 0x1089b37e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 52 steps

SAVING TEST AS failure.4007.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "d"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
bytes0 = 0                                                               # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
bytes0 += 1                                                              # STEP 4
bytes2 = 0                                                               # STEP 5
component1 = "omega"                                                     # STEP 6
bytes1 = 0                                                               # STEP 7
bytes1 += 1                                                              # STEP 8
bytes1 += 1                                                              # STEP 9
component0 = "epsilon"                                                  # STEP 10
bytes1 += 1                                                             # STEP 11
bytes1 += 1                                                             # STEP 12
bytes0 += 1                                                             # STEP 13
str4 = ""                                                               # STEP 14
str4 += 'e'                                                             # STEP 15
str4 += " "                                                             # STEP 16
path0 = "/Volumes/ramdisk/test"                                         # STEP 17
file0 = opener0(path0,'a')                                              # STEP 18
os0.makedirs(path0)                                                     # STEP 19
bytes2 += 1                                                             # STEP 20
path4 = "/Volumes/ramdisk/test"                                         # STEP 21
result = os0.path.dirname(path0)                                        # STEP 22
result = os0.readlink(path4)                                            # STEP 23
os0.symlink(path4,path0)                                                # STEP 24
bytes0 += 1                                                             # STEP 25
result = os0.path.islink(path4)                                         # STEP 26
bytes2 = 0                                                              # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
path4 += "/" + component0                                               # STEP 29
os0.link(path4,path4)                                                   # STEP 30
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 31
stat1 = os0.fstat(fd0)                                                  # STEP 32
result = os0.path.dirname(path0)                                        # STEP 33
file0 = opener0(path4,'r')                                              # STEP 34
result = file0.readline()                                               # STEP 35
os0.mkdir(path0)                                                        # STEP 36
os0.makedirs(path4)                                                     # STEP 37
file0.seek(bytes1)                                                      # STEP 38
result = os0.readlink(path4)                                            # STEP 39
os0.mkdir(path0)                                                        # STEP 40
str4 += " "                                                             # STEP 41
result = stat1.st_nlink                                                 # STEP 42
os0.symlink(path0,path0)                                                # STEP 43
os0.link(path0,path0)                                                   # STEP 44
result = os0.path.abspath(path0)                                        # STEP 45
result = os0.path.islink(path4)                                         # STEP 46
result = file0.readline()                                               # STEP 47
os0.write(fd0,str4)                                                     # STEP 48
result = sorted(os0.listdir(path0))                                     # STEP 49
os0.rename(path4,path0)                                                 # STEP 50
result = file0.read(bytes1)                                             # STEP 51
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (e  ) == () ',), <traceback object at 0x107cd33f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1089b5368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28468, in act566
    result = self.p_file[0].read(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 85 steps

SAVING TEST AS failure.4007.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
str2 = ""                                                                # STEP 1
str2 += " "                                                              # STEP 2
component0 = "alpha"                                                     # STEP 3
bytes2 = 0                                                               # STEP 4
str2 += 'e'                                                              # STEP 5
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
str2 += 'e'                                                              # STEP 7
str3 = ""                                                                # STEP 8
path0 += "/" + component0                                                # STEP 9
str2 += 'v'                                                             # STEP 10
str2 += 's'                                                             # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
bytes2 += 1                                                             # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
str4 = ""                                                               # STEP 15
path1 += "/" + component0                                               # STEP 16
str3 += " "                                                             # STEP 17
str3 += " "                                                             # STEP 18
os0 = newFakeOS()                                                       # STEP 19
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 20
bytes2 += 1                                                             # STEP 21
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
bytes2 += 1                                                             # STEP 23
result = os0.path.exists(path0)                                         # STEP 24
stat4 = os0.fstat(fd0)                                                  # STEP 25
bytes2 += 1                                                             # STEP 26
result = os0.path.isfile(path2)                                         # STEP 27
path4 += "/" + component0                                               # STEP 28
os0.mkdir(path0)                                                        # STEP 29
os0.symlink(path3,path1)                                                # STEP 30
str4 += " "                                                             # STEP 31
result = os0.read(fd0,bytes2)                                           # STEP 32
result = stat4.st_size                                                  # STEP 33
stat0 = os0.lstat(path1)                                                # STEP 34
result = os0.path.islink(path0)                                         # STEP 35
path4 = "/Volumes/ramdisk/test"                                         # STEP 36
os0.rename(path0,path3)                                                 # STEP 37
opener0 = newFakeOpener(os0)                                            # STEP 38
os0.rmdir(path0)                                                        # STEP 39
os0.close(fd0)                                                          # STEP 40
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 41
os0.link(path2,path2)                                                   # STEP 42
stat4 = os0.lstat(path1)                                                # STEP 43
path2 += "/" + component0                                               # STEP 44
result = os0.path.abspath(path1)                                        # STEP 45
stat2 = os0.lstat(path0)                                                # STEP 46
os0.symlink(path2,path4)                                                # STEP 47
result = os0.path.isdir(path3)                                          # STEP 48
os0.close(fd0)                                                          # STEP 49
result = stat0.st_nlink                                                 # STEP 50
file0 = opener0(path2,'a')                                              # STEP 51
os0.path.getsize(path0)                                                 # STEP 52
os0.remove(path1)                                                       # STEP 53
result = os0.path.abspath(path0)                                        # STEP 54
result = stat4.st_size                                                  # STEP 55
os0.makedirs(path1)                                                     # STEP 56
result = os0.path.isfile(path1)                                         # STEP 57
bytes4 = 0                                                              # STEP 58
str2 += " "                                                             # STEP 59
result = os0.readlink(path3)                                            # STEP 60
result = file0.readline()                                               # STEP 61
os0.link(path3,path0)                                                   # STEP 62
result = os0.path.isdir(path2)                                          # STEP 63
os0.link(path3,path3)                                                   # STEP 64
path0 = "/Volumes/ramdisk/test"                                         # STEP 65
str3 += " "                                                             # STEP 66
file0.truncate()                                                        # STEP 67
os0.rename(path1,path4)                                                 # STEP 68
result = os0.read(fd0,bytes2)                                           # STEP 69
os0.remove(path1)                                                       # STEP 70
stat3 = os0.lstat(path2)                                                # STEP 71
os0.rename(path2,path3)                                                 # STEP 72
file0.write(str3)                                                       # STEP 73
result = os0.path.islink(path3)                                         # STEP 74
result = os0.path.abspath(path0)                                        # STEP 75
os0.mkdir(path0)                                                        # STEP 76
file0.next()                                                            # STEP 77
file0.seek(bytes4)                                                      # STEP 78
result = os0.path.isfile(path3)                                         # STEP 79
result = os0.readlink(path0)                                            # STEP 80
result = os0.path.islink(path4)                                         # STEP 81
os0.rename(path2,path4)                                                 # STEP 82
result = os0.path.abspath(path1)                                        # STEP 83
result = file0.read(bytes2)                                             # STEP 84
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104836560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28468, in act566
    result = self.p_file[0].read(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103d47950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 47 steps

SAVING TEST AS failure.4007.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes1 = 0                                                               # STEP 0
str3 = ""                                                                # STEP 1
str3 += 'l'                                                              # STEP 2
os0 = newFakeOS()                                                        # STEP 3
bytes0 = 0                                                               # STEP 4
component0 = "g"                                                         # STEP 5
bytes2 = 0                                                               # STEP 6
bytes0 += 1                                                              # STEP 7
bytes0 = 0                                                               # STEP 8
str3 += " "                                                              # STEP 9
str3 += 'u'                                                             # STEP 10
bytes4 = 0                                                              # STEP 11
str1 = ""                                                               # STEP 12
str1 += " "                                                             # STEP 13
str1 += 'u'                                                             # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
str3 += " "                                                             # STEP 16
bytes1 += 1                                                             # STEP 17
path4 = "/Volumes/ramdisk/test"                                         # STEP 18
path4 += "/" + component0                                               # STEP 19
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 20
str1 += " "                                                             # STEP 21
str3 = ""                                                               # STEP 22
os0.close(fd0)                                                          # STEP 23
file0 = opener0(path4)                                                  # STEP 24
file0.seek(bytes4)                                                      # STEP 25
result = os0.readlink(path4)                                            # STEP 26
result = os0.path.isdir(path4)                                          # STEP 27
file0.write(str3)                                                       # STEP 28
result = file0.read(bytes0)                                             # STEP 29
os0.rmdir(path4)                                                        # STEP 30
os0.remove(path4)                                                       # STEP 31
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
str3 += 'h'                                                             # STEP 33
os0.remove(path4)                                                       # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
os0.mkdir(path4)                                                        # STEP 36
os0.write(fd0,str3)                                                     # STEP 37
bytes1 += 1                                                             # STEP 38
str4 = ""                                                               # STEP 39
result = os0.path.isfile(path2)                                         # STEP 40
os0.mkdir(path4)                                                        # STEP 41
os0.write(fd0,str1)                                                     # STEP 42
os0.rmdir(path4)                                                        # STEP 43
result = file0.readlines()                                              # STEP 44
os0.rename(path4,path2)                                                 # STEP 45
file0.truncate()                                                        # STEP 46
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103d2f950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x107ff64d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
Original test has 64 steps

SAVING TEST AS failure.4007.test.7
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
bytes1 = 0                                                               # STEP 1
bytes1 += 1                                                              # STEP 2
bytes1 = 0                                                               # STEP 3
bytes1 += 1                                                              # STEP 4
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
os0 = newFakeOS()                                                        # STEP 6
result = os0.path.isdir(path2)                                           # STEP 7
str2 += 'e'                                                              # STEP 8
os0.remove(path2)                                                        # STEP 9
bytes0 = 0                                                              # STEP 10
result = sorted(os0.listdir(path2))                                     # STEP 11
result = os0.path.lexists(path2)                                        # STEP 12
result = os0.path.abspath(path2)                                        # STEP 13
os0.remove(path2)                                                       # STEP 14
result = os0.path.lexists(path2)                                        # STEP 15
result = os0.path.islink(path2)                                         # STEP 16
os0.link(path2,path2)                                                   # STEP 17
result = os0.path.isfile(path2)                                         # STEP 18
os0.symlink(path2,path2)                                                # STEP 19
os0.symlink(path2,path2)                                                # STEP 20
result = os0.path.exists(path2)                                         # STEP 21
os0.link(path2,path2)                                                   # STEP 22
os0.makedirs(path2)                                                     # STEP 23
result = os0.path.islink(path2)                                         # STEP 24
os0.link(path2,path2)                                                   # STEP 25
str1 = ""                                                               # STEP 26
os0.link(path2,path2)                                                   # STEP 27
component2 = "beta"                                                     # STEP 28
os0.link(path2,path2)                                                   # STEP 29
component0 = "lambda"                                                   # STEP 30
result = os0.path.islink(path2)                                         # STEP 31
result = os0.path.abspath(path2)                                        # STEP 32
bytes0 += 1                                                             # STEP 33
str1 += " "                                                             # STEP 34
result = sorted(os0.listdir(path2))                                     # STEP 35
bytes0 = 0                                                              # STEP 36
os0.symlink(path2,path2)                                                # STEP 37
result = os0.path.lexists(path2)                                        # STEP 38
result = sorted(os0.listdir(path2))                                     # STEP 39
bytes2 = 0                                                              # STEP 40
str1 = ""                                                               # STEP 41
str2 += " "                                                             # STEP 42
str1 += 'x'                                                             # STEP 43
path2 += "/" + component2                                               # STEP 44
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 45
os0.write(fd0,str1)                                                     # STEP 46
os0.close(fd0)                                                          # STEP 47
str2 += 'g'                                                             # STEP 48
os0.write(fd0,str2)                                                     # STEP 49
opener0 = newFakeOpener(os0)                                            # STEP 50
stat0 = os0.lstat(path2)                                                # STEP 51
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 52
os0.rmdir(path2)                                                        # STEP 53
file0 = opener0(path2,'r')                                              # STEP 54
os0.path.getsize(path2)                                                 # STEP 55
result = file0.read()                                                   # STEP 56
stat1 = os0.lstat(path2)                                                # STEP 57
stat2 = os0.lstat(path2)                                                # STEP 58
result = sorted(os0.listdir(path2))                                     # STEP 59
component2 = "delta"                                                    # STEP 60
bytes3 = 0                                                              # STEP 61
os0.close(fd0)                                                          # STEP 62
result = file0.readlines()                                              # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ea52d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 8 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10747ecf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 79 steps

SAVING TEST AS failure.4007.test.8
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "g"                                                         # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
component1 = "phi"                                                       # STEP 2
component0 = "h"                                                         # STEP 3
path1 += "/" + component4                                                # STEP 4
bytes3 = 0                                                               # STEP 5
bytes3 += 1                                                              # STEP 6
str1 = ""                                                                # STEP 7
os0 = newFakeOS()                                                        # STEP 8
result = os0.path.abspath(path1)                                         # STEP 9
str4 = ""                                                               # STEP 10
result = sorted(os0.listdir(path1))                                     # STEP 11
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 12
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 13
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 14
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 15
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 16
os0.remove(path1)                                                       # STEP 17
stat3 = os0.lstat(path1)                                                # STEP 18
result = os0.path.exists(path1)                                         # STEP 19
path3 = "/Volumes/ramdisk/test"                                         # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
str4 += 'l'                                                             # STEP 22
os0.write(fd0,str1)                                                     # STEP 23
result = os0.path.isabs(path3)                                          # STEP 24
path0 = "/Volumes/ramdisk/test"                                         # STEP 25
result = os0.readlink(path0)                                            # STEP 26
file0 = opener0(path0,'r')                                              # STEP 27
result = os0.readlink(path0)                                            # STEP 28
result = os0.path.exists(path1)                                         # STEP 29
component3 = "phi"                                                      # STEP 30
os0.makedirs(path0)                                                     # STEP 31
result = os0.path.exists(path3)                                         # STEP 32
result = sorted(os0.listdir(path0))                                     # STEP 33
os0.link(path0,path1)                                                   # STEP 34
os0.rename(path1,path3)                                                 # STEP 35
file0 = opener0(path1)                                                  # STEP 36
result = os0.path.isdir(path0)                                          # STEP 37
os0.close(fd0)                                                          # STEP 38
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 39
os0.rmdir(path1)                                                        # STEP 40
os0.link(path0,path0)                                                   # STEP 41
result = sorted(os0.listdir(path0))                                     # STEP 42
stat0 = os0.fstat(fd0)                                                  # STEP 43
os0.symlink(path0,path0)                                                # STEP 44
os0.mkdir(path0)                                                        # STEP 45
file0 = opener0(path3,'a')                                              # STEP 46
stat0 = os0.stat(path1)                                                 # STEP 47
result = os0.path.abspath(path0)                                        # STEP 48
result = os0.path.exists(path0)                                         # STEP 49
os0.rename(path1,path3)                                                 # STEP 50
file0 = opener0(path1,'a')                                              # STEP 51
file0.truncate()                                                        # STEP 52
os0.rmdir(path1)                                                        # STEP 53
os0.rename(path1,path0)                                                 # STEP 54
os0.remove(path1)                                                       # STEP 55
path1 += "/" + component0                                               # STEP 56
os0.link(path1,path0)                                                   # STEP 57
os0.remove(path1)                                                       # STEP 58
result = os0.path.abspath(path3)                                        # STEP 59
path2 = "/Volumes/ramdisk/test"                                         # STEP 60
result = file0.readline()                                               # STEP 61
file0.next()                                                            # STEP 62
result = file0.readline(bytes3)                                         # STEP 63
result = os0.path.lexists(path0)                                        # STEP 64
str1 = ""                                                               # STEP 65
bytes3 += 1                                                             # STEP 66
os0.rmdir(path1)                                                        # STEP 67
str4 += " "                                                             # STEP 68
os0.path.getsize(path1)                                                 # STEP 69
result = sorted(os0.listdir(path1))                                     # STEP 70
result = os0.path.isfile(path1)                                         # STEP 71
os0.symlink(path0,path2)                                                # STEP 72
stat3 = os0.stat(path1)                                                 # STEP 73
os0.write(fd0,str1)                                                     # STEP 74
result = os0.path.islink(path3)                                         # STEP 75
result = os0.path.abspath(path0)                                        # STEP 76
file0.flush()                                                           # STEP 77
result = file0.readline(bytes3)                                         # STEP 78
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107249560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 9 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103efe098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
Original test has 74 steps

SAVING TEST AS failure.4007.test.9
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component3 = "f"                                                         # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
result = os0.path.islink(path0)                                          # STEP 3
os0.remove(path0)                                                        # STEP 4
str2 = ""                                                                # STEP 5
result = sorted(os0.listdir(path0))                                      # STEP 6
os0.mkdir(path0)                                                         # STEP 7
result = os0.path.isfile(path0)                                          # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
bytes4 = 0                                                              # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = sorted(os0.listdir(path3))                                     # STEP 12
result = os0.path.isfile(path3)                                         # STEP 13
os0.remove(path3)                                                       # STEP 14
result = os0.path.isabs(path0)                                          # STEP 15
result = os0.readlink(path0)                                            # STEP 16
result = os0.path.lexists(path3)                                        # STEP 17
result = os0.path.dirname(path3)                                        # STEP 18
result = os0.path.isdir(path0)                                          # STEP 19
os0.symlink(path0,path0)                                                # STEP 20
result = os0.path.isabs(path3)                                          # STEP 21
file0 = opener0(path0,'a')                                              # STEP 22
result = os0.path.exists(path3)                                         # STEP 23
file0 = opener0(path3)                                                  # STEP 24
os0.link(path3,path3)                                                   # STEP 25
path3 = "/Volumes/ramdisk/test"                                         # STEP 26
file0 = opener0(path0,'a')                                              # STEP 27
file0 = opener0(path0,'w')                                              # STEP 28
path4 = "/Volumes/ramdisk/test"                                         # STEP 29
path4 += "/" + component3                                               # STEP 30
stat0 = os0.lstat(path4)                                                # STEP 31
str2 += 'c'                                                             # STEP 32
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 33
file0 = opener0(path0,'w')                                              # STEP 34
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 35
result = os0.path.isfile(path4)                                         # STEP 36
file0 = opener0(path0,'a')                                              # STEP 37
result = os0.path.islink(path0)                                         # STEP 38
stat0 = os0.lstat(path4)                                                # STEP 39
bytes4 += 1                                                             # STEP 40
os0.close(fd0)                                                          # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
result = os0.path.dirname(path4)                                        # STEP 43
str1 = ""                                                               # STEP 44
str1 += " "                                                             # STEP 45
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 46
os0.rmdir(path4)                                                        # STEP 47
file0 = opener0(path3,'r')                                              # STEP 48
result = os0.path.islink(path0)                                         # STEP 49
str1 += 'v'                                                             # STEP 50
os0.close(fd0)                                                          # STEP 51
stat4 = os0.fstat(fd0)                                                  # STEP 52
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 53
os0.symlink(path4,path3)                                                # STEP 54
stat2 = os0.lstat(path4)                                                # STEP 55
stat4 = os0.lstat(path4)                                                # STEP 56
file0 = opener0(path4)                                                  # STEP 57
result = file0.readlines()                                              # STEP 58
path0 = "/Volumes/ramdisk/test"                                         # STEP 59
bytes4 += 1                                                             # STEP 60
path0 += "/" + component3                                               # STEP 61
os0.close(fd0)                                                          # STEP 62
file0.truncate()                                                        # STEP 63
os0.remove(path3)                                                       # STEP 64
component0 = "h"                                                        # STEP 65
result = os0.path.isabs(path4)                                          # STEP 66
result = os0.path.isabs(path3)                                          # STEP 67
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 68
result = os0.readlink(path0)                                            # STEP 69
os0.write(fd0,str2)                                                     # STEP 70
component3 = "alpha"                                                    # STEP 71
result = os0.path.islink(path0)                                         # STEP 72
result = file0.readlines()                                              # STEP 73
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ed9758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 10 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 55
STOPPING TESTING DUE TO TIMEOUT
42.9951690821 PERCENT COVERED
60.325412035 TOTAL RUNTIME
339 EXECUTED
33554 TOTAL TEST OPERATIONS
41.8218450546 TIME SPENT EXECUTING TEST OPERATIONS
16.0036122799 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0226879119873 TIME SPENT CHECKING PROPERTIES
41.8445329666 TOTAL TIME SPENT RUNNING SUT
0.992120265961 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
10 FAILED
0 REPEATS OF FAILURES
10 ACTUAL DISTINCT FAILURES

FAILURE 0
str2 = ""                                                                # STEP 0
component3 = "delta"                                                     # STEP 1
str2 += " "                                                              # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
str2 += " "                                                              # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
os0 = newFakeOS()                                                        # STEP 6
result = os0.path.isdir(path4)                                           # STEP 7
os0.remove(path4)                                                        # STEP 8
os0.symlink(path0,path0)                                                 # STEP 9
os0.link(path4,path0)                                                   # STEP 10
result = os0.path.isdir(path4)                                          # STEP 11
result = os0.path.exists(path4)                                         # STEP 12
result = os0.path.abspath(path4)                                        # STEP 13
path0 += "/" + component3                                               # STEP 14
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 15
path1 = "/Volumes/ramdisk/test"                                         # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
str3 = ""                                                               # STEP 19
result = os0.path.abspath(path0)                                        # STEP 20
result = sorted(os0.listdir(path1))                                     # STEP 21
os0.link(path0,path3)                                                   # STEP 22
os0.rename(path0,path4)                                                 # STEP 23
result = os0.path.isdir(path3)                                          # STEP 24
os0.close(fd0)                                                          # STEP 25
os0.rename(path0,path4)                                                 # STEP 26
str1 = ""                                                               # STEP 27
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 28
result = os0.path.islink(path4)                                         # STEP 29
result = os0.path.isabs(path4)                                          # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
result = os0.path.dirname(path3)                                        # STEP 32
result = os0.path.lexists(path0)                                        # STEP 33
file0 = opener0(path1,'w')                                              # STEP 34
os0.symlink(path0,path1)                                                # STEP 35
os0.link(path4,path4)                                                   # STEP 36
result = os0.path.isfile(path3)                                         # STEP 37
result = os0.path.isdir(path3)                                          # STEP 38
os0.makedirs(path3)                                                     # STEP 39
component0 = "g"                                                        # STEP 40
file0 = opener0(path4,'w')                                              # STEP 41
bytes3 = 0                                                              # STEP 42
stat4 = os0.lstat(path0)                                                # STEP 43
os0.makedirs(path0)                                                     # STEP 44
result = os0.path.isabs(path1)                                          # STEP 45
file0 = opener0(path0)                                                  # STEP 46
result = stat4.st_nlink                                                 # STEP 47
os0.path.getsize(path0)                                                 # STEP 48
stat3 = os0.lstat(path0)                                                # STEP 49
component4 = "f"                                                        # STEP 50
os0.symlink(path3,path1)                                                # STEP 51
result = os0.path.isdir(path3)                                          # STEP 52
os0.path.getsize(path0)                                                 # STEP 53
stat4 = os0.lstat(path0)                                                # STEP 54
result = stat4.st_nlink                                                 # STEP 55
file0.flush()                                                           # STEP 56
result = os0.path.exists(path3)                                         # STEP 57
os0.write(fd0,str3)                                                     # STEP 58
stat4 = os0.lstat(path0)                                                # STEP 59
os0.symlink(path4,path0)                                                # STEP 60
bytes4 = 0                                                              # STEP 61
os0.link(path1,path0)                                                   # STEP 62
bytes1 = 0                                                              # STEP 63
os0.makedirs(path1)                                                     # STEP 64
file0.truncate()                                                        # STEP 65
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103bc4b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
str4 = ""                                                                # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str4 += 'h'                                                              # STEP 2
component2 = "h"                                                         # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
str4 += " "                                                              # STEP 5
os0.makedirs(path4)                                                      # STEP 6
result = os0.path.isfile(path4)                                          # STEP 7
os0.mkdir(path4)                                                         # STEP 8
os0.link(path4,path4)                                                    # STEP 9
os0.remove(path4)                                                       # STEP 10
result = os0.path.lexists(path4)                                        # STEP 11
os0.remove(path4)                                                       # STEP 12
os0.makedirs(path4)                                                     # STEP 13
path4 += "/" + component2                                               # STEP 14
result = os0.path.isfile(path4)                                         # STEP 15
result = os0.path.islink(path4)                                         # STEP 16
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
result = os0.path.islink(path4)                                         # STEP 18
result = os0.path.isfile(path4)                                         # STEP 19
os0.remove(path4)                                                       # STEP 20
stat3 = os0.lstat(path4)                                                # STEP 21
stat4 = os0.fstat(fd0)                                                  # STEP 22
os0.write(fd0,str4)                                                     # STEP 23
result = stat4.st_size                                                  # STEP 24
os0.mkdir(path4)                                                        # STEP 25
path4 += "/" + component2                                               # STEP 26
stat0 = os0.stat(path4)                                                 # STEP 27
os0.mkdir(path4)                                                        # STEP 28
result = os0.path.abspath(path4)                                        # STEP 29
result = os0.path.isfile(path4)                                         # STEP 30
stat1 = os0.lstat(path4)                                                # STEP 31
stat2 = os0.stat(path4)                                                 # STEP 32
result = os0.path.dirname(path4)                                        # STEP 33
os0.symlink(path4,path4)                                                # STEP 34
os0.link(path4,path4)                                                   # STEP 35
result = sorted(os0.listdir(path4))                                     # STEP 36
os0.close(fd0)                                                          # STEP 37
os0.link(path4,path4)                                                   # STEP 38
result = os0.path.lexists(path4)                                        # STEP 39
os0.rmdir(path4)                                                        # STEP 40
result = os0.path.lexists(path4)                                        # STEP 41
result = os0.path.islink(path4)                                         # STEP 42
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 43
component1 = "c"                                                        # STEP 44
result = os0.path.lexists(path4)                                        # STEP 45
result = os0.path.abspath(path4)                                        # STEP 46
os0.makedirs(path4)                                                     # STEP 47
stat4 = os0.stat(path4)                                                 # STEP 48
result = sorted(os0.listdir(path4))                                     # STEP 49
os0.makedirs(path4)                                                     # STEP 50
os0.link(path4,path4)                                                   # STEP 51
str4 += " "                                                             # STEP 52
os0.symlink(path4,path4)                                                # STEP 53
opener0 = newFakeOpener(os0)                                            # STEP 54
stat0 = os0.stat(path4)                                                 # STEP 55
os0.makedirs(path4)                                                     # STEP 56
os0.symlink(path4,path4)                                                # STEP 57
stat3 = os0.stat(path4)                                                 # STEP 58
file0 = opener0(path4)                                                  # STEP 59
result = os0.path.abspath(path4)                                        # STEP 60
os0.write(fd0,str4)                                                     # STEP 61
result = os0.path.abspath(path4)                                        # STEP 62
result = sorted(os0.listdir(path4))                                     # STEP 63
os0.symlink(path4,path4)                                                # STEP 64
str4 += 'y'                                                             # STEP 65
result = os0.path.isfile(path4)                                         # STEP 66
os0.rmdir(path4)                                                        # STEP 67
result = os0.path.isdir(path4)                                          # STEP 68
file0 = opener0(path4,'r')                                              # STEP 69
os0.close(fd0)                                                          # STEP 70
result = os0.path.exists(path4)                                         # STEP 71
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 72
result = sorted(os0.listdir(path4))                                     # STEP 73
file0 = opener0(path4,'a')                                              # STEP 74
os0.rmdir(path4)                                                        # STEP 75
result = os0.path.lexists(path4)                                        # STEP 76
component0 = "a"                                                        # STEP 77
os0.rmdir(path4)                                                        # STEP 78
os0.path.getsize(path4)                                                 # STEP 79
result = os0.path.isabs(path4)                                          # STEP 80
os0.symlink(path4,path4)                                                # STEP 81
result = os0.path.isfile(path4)                                         # STEP 82
os0.write(fd0,str4)                                                     # STEP 83
os0.write(fd0,str4)                                                     # STEP 84
result = sorted(os0.listdir(path4))                                     # STEP 85
result = os0.readlink(path4)                                            # STEP 86
file0.write(str4)                                                       # STEP 87
os0.symlink(path4,path4)                                                # STEP 88
str4 += " "                                                             # STEP 89
bytes0 = 0                                                              # STEP 90
file0.write(str4)                                                       # STEP 91
os0.makedirs(path4)                                                     # STEP 92
file0.write(str4)                                                       # STEP 93
file0.flush()                                                           # STEP 94
os0.write(fd0,str4)                                                     # STEP 95
result = os0.path.lexists(path4)                                        # STEP 96
component4 = "a"                                                        # STEP 97
path4 = "/Volumes/ramdisk/test"                                         # STEP 98
result = file0.readline()                                               # STEP 99
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109cdf098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
bytes0 = 0                                                               # STEP 0
component2 = "epsilon"                                                   # STEP 1
str0 = ""                                                                # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
path4 += "/" + component2                                                # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.exists(path4)                                          # STEP 6
os0.rmdir(path4)                                                         # STEP 7
component1 = "h"                                                         # STEP 8
result = os0.path.lexists(path4)                                         # STEP 9
result = os0.path.isabs(path4)                                          # STEP 10
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 11
os0.close(fd0)                                                          # STEP 12
str1 = ""                                                               # STEP 13
bytes0 += 1                                                             # STEP 14
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 15
os0.symlink(path4,path4)                                                # STEP 16
os0.close(fd0)                                                          # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
path1 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.path.getsize(path4)                                                 # STEP 20
path4 += "/" + component2                                               # STEP 21
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 22
result = os0.path.isabs(path1)                                          # STEP 23
result = sorted(os0.listdir(path4))                                     # STEP 24
component4 = "a"                                                        # STEP 25
os0.rmdir(path4)                                                        # STEP 26
path1 += "/" + component4                                               # STEP 27
file0 = opener0(path1,'w')                                              # STEP 28
file0.flush()                                                           # STEP 29
str0 += 'e'                                                             # STEP 30
bytes0 += 1                                                             # STEP 31
bytes0 += 1                                                             # STEP 32
stat1 = os0.fstat(fd0)                                                  # STEP 33
os0.symlink(path1,path4)                                                # STEP 34
str1 += 'm'                                                             # STEP 35
stat4 = os0.stat(path4)                                                 # STEP 36
file0.next()                                                            # STEP 37
result = os0.path.isdir(path1)                                          # STEP 38
path4 += "/" + component1                                               # STEP 39
stat2 = os0.fstat(fd0)                                                  # STEP 40
result = os0.read(fd0,bytes0)                                           # STEP 41
result = file0.readlines()                                              # STEP 42
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107231560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes1 = 0                                                               # STEP 2
str1 = ""                                                                # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
file0 = opener0(path3,'r')                                               # STEP 5
str1 += " "                                                              # STEP 6
file0 = opener0(path3,'w')                                               # STEP 7
os0.remove(path3)                                                        # STEP 8
os0.symlink(path3,path3)                                                 # STEP 9
result = os0.path.isdir(path3)                                          # STEP 10
result = os0.path.abspath(path3)                                        # STEP 11
bytes0 = 0                                                              # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
component4 = "gamma"                                                    # STEP 14
file0 = opener0(path2,'r')                                              # STEP 15
result = os0.path.islink(path3)                                         # STEP 16
file0 = opener0(path2,'r')                                              # STEP 17
file0 = opener0(path3,'a')                                              # STEP 18
bytes4 = 0                                                              # STEP 19
file0 = opener0(path2,'r')                                              # STEP 20
path3 += "/" + component4                                               # STEP 21
os0.rename(path3,path2)                                                 # STEP 22
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 23
bytes2 = 0                                                              # STEP 24
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 25
str1 += 'o'                                                             # STEP 26
os0.remove(path2)                                                       # STEP 27
os0.remove(path2)                                                       # STEP 28
os0.mkdir(path3)                                                        # STEP 29
os0.rename(path3,path2)                                                 # STEP 30
result = os0.readlink(path2)                                            # STEP 31
result = os0.readlink(path3)                                            # STEP 32
result = sorted(os0.listdir(path3))                                     # STEP 33
os0.path.getsize(path3)                                                 # STEP 34
str1 += 'y'                                                             # STEP 35
os0.close(fd0)                                                          # STEP 36
path2 += "/" + component4                                               # STEP 37
path2 += "/" + component4                                               # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
file0 = opener0(path2,'r')                                              # STEP 41
os0.remove(path2)                                                       # STEP 42
os0.makedirs(path3)                                                     # STEP 43
result = os0.path.isabs(path3)                                          # STEP 44
os0.mkdir(path2)                                                        # STEP 45
os0.write(fd0,str1)                                                     # STEP 46
result = os0.path.isfile(path3)                                         # STEP 47
str1 += 'e'                                                             # STEP 48
str4 = ""                                                               # STEP 49
stat1 = os0.lstat(path3)                                                # STEP 50
result = stat1.st_size                                                  # STEP 51
os0.write(fd0,str1)                                                     # STEP 52
os0.makedirs(path2)                                                     # STEP 53
os0.mkdir(path2)                                                        # STEP 54
result = os0.path.isdir(path3)                                          # STEP 55
result = os0.path.dirname(path3)                                        # STEP 56
os0.remove(path2)                                                       # STEP 57
result = stat1.st_nlink                                                 # STEP 58
os0.remove(path2)                                                       # STEP 59
result = os0.readlink(path2)                                            # STEP 60
result = os0.readlink(path3)                                            # STEP 61
stat2 = os0.lstat(path3)                                                # STEP 62
result = os0.path.exists(path3)                                         # STEP 63
file0 = opener0(path3,'w')                                              # STEP 64
result = os0.path.exists(path3)                                         # STEP 65
file0.truncate()                                                        # STEP 66
os0.link(path2,path2)                                                   # STEP 67
file0.flush()                                                           # STEP 68
file0.next()                                                            # STEP 69
result = os0.path.exists(path2)                                         # STEP 70
result = stat2.st_nlink                                                 # STEP 71
stat1 = os0.lstat(path3)                                                # STEP 72
file0.flush()                                                           # STEP 73
result = os0.path.abspath(path3)                                        # STEP 74
path0 = "/Volumes/ramdisk/test"                                         # STEP 75
result = os0.readlink(path2)                                            # STEP 76
result = stat1.st_size                                                  # STEP 77
result = file0.readline()                                               # STEP 78
os0.rmdir(path3)                                                        # STEP 79
os0.mkdir(path0)                                                        # STEP 80
os0.write(fd0,str4)                                                     # STEP 81
file0.truncate()                                                        # STEP 82
bytes3 = 0                                                              # STEP 83
os0.rmdir(path2)                                                        # STEP 84
result = os0.path.isfile(path3)                                         # STEP 85
result = os0.path.dirname(path3)                                        # STEP 86
str4 += " "                                                             # STEP 87
result = file0.readlines()                                              # STEP 88
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10722def0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
component4 = "d"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
bytes0 = 0                                                               # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
bytes0 += 1                                                              # STEP 4
bytes2 = 0                                                               # STEP 5
component1 = "omega"                                                     # STEP 6
bytes1 = 0                                                               # STEP 7
bytes1 += 1                                                              # STEP 8
bytes1 += 1                                                              # STEP 9
component0 = "epsilon"                                                  # STEP 10
bytes1 += 1                                                             # STEP 11
bytes1 += 1                                                             # STEP 12
bytes0 += 1                                                             # STEP 13
str4 = ""                                                               # STEP 14
str4 += 'e'                                                             # STEP 15
str4 += " "                                                             # STEP 16
path0 = "/Volumes/ramdisk/test"                                         # STEP 17
file0 = opener0(path0,'a')                                              # STEP 18
os0.makedirs(path0)                                                     # STEP 19
bytes2 += 1                                                             # STEP 20
path4 = "/Volumes/ramdisk/test"                                         # STEP 21
result = os0.path.dirname(path0)                                        # STEP 22
result = os0.readlink(path4)                                            # STEP 23
os0.symlink(path4,path0)                                                # STEP 24
bytes0 += 1                                                             # STEP 25
result = os0.path.islink(path4)                                         # STEP 26
bytes2 = 0                                                              # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
path4 += "/" + component0                                               # STEP 29
os0.link(path4,path4)                                                   # STEP 30
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 31
stat1 = os0.fstat(fd0)                                                  # STEP 32
result = os0.path.dirname(path0)                                        # STEP 33
file0 = opener0(path4,'r')                                              # STEP 34
result = file0.readline()                                               # STEP 35
os0.mkdir(path0)                                                        # STEP 36
os0.makedirs(path4)                                                     # STEP 37
file0.seek(bytes1)                                                      # STEP 38
result = os0.readlink(path4)                                            # STEP 39
os0.mkdir(path0)                                                        # STEP 40
str4 += " "                                                             # STEP 41
result = stat1.st_nlink                                                 # STEP 42
os0.symlink(path0,path0)                                                # STEP 43
os0.link(path0,path0)                                                   # STEP 44
result = os0.path.abspath(path0)                                        # STEP 45
result = os0.path.islink(path4)                                         # STEP 46
result = file0.readline()                                               # STEP 47
os0.write(fd0,str4)                                                     # STEP 48
result = sorted(os0.listdir(path0))                                     # STEP 49
os0.rename(path4,path0)                                                 # STEP 50
result = file0.read(bytes1)                                             # STEP 51
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (e  ) == () ',), <traceback object at 0x107cd33f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
str2 = ""                                                                # STEP 1
str2 += " "                                                              # STEP 2
component0 = "alpha"                                                     # STEP 3
bytes2 = 0                                                               # STEP 4
str2 += 'e'                                                              # STEP 5
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
str2 += 'e'                                                              # STEP 7
str3 = ""                                                                # STEP 8
path0 += "/" + component0                                                # STEP 9
str2 += 'v'                                                             # STEP 10
str2 += 's'                                                             # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
bytes2 += 1                                                             # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
str4 = ""                                                               # STEP 15
path1 += "/" + component0                                               # STEP 16
str3 += " "                                                             # STEP 17
str3 += " "                                                             # STEP 18
os0 = newFakeOS()                                                       # STEP 19
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 20
bytes2 += 1                                                             # STEP 21
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
bytes2 += 1                                                             # STEP 23
result = os0.path.exists(path0)                                         # STEP 24
stat4 = os0.fstat(fd0)                                                  # STEP 25
bytes2 += 1                                                             # STEP 26
result = os0.path.isfile(path2)                                         # STEP 27
path4 += "/" + component0                                               # STEP 28
os0.mkdir(path0)                                                        # STEP 29
os0.symlink(path3,path1)                                                # STEP 30
str4 += " "                                                             # STEP 31
result = os0.read(fd0,bytes2)                                           # STEP 32
result = stat4.st_size                                                  # STEP 33
stat0 = os0.lstat(path1)                                                # STEP 34
result = os0.path.islink(path0)                                         # STEP 35
path4 = "/Volumes/ramdisk/test"                                         # STEP 36
os0.rename(path0,path3)                                                 # STEP 37
opener0 = newFakeOpener(os0)                                            # STEP 38
os0.rmdir(path0)                                                        # STEP 39
os0.close(fd0)                                                          # STEP 40
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 41
os0.link(path2,path2)                                                   # STEP 42
stat4 = os0.lstat(path1)                                                # STEP 43
path2 += "/" + component0                                               # STEP 44
result = os0.path.abspath(path1)                                        # STEP 45
stat2 = os0.lstat(path0)                                                # STEP 46
os0.symlink(path2,path4)                                                # STEP 47
result = os0.path.isdir(path3)                                          # STEP 48
os0.close(fd0)                                                          # STEP 49
result = stat0.st_nlink                                                 # STEP 50
file0 = opener0(path2,'a')                                              # STEP 51
os0.path.getsize(path0)                                                 # STEP 52
os0.remove(path1)                                                       # STEP 53
result = os0.path.abspath(path0)                                        # STEP 54
result = stat4.st_size                                                  # STEP 55
os0.makedirs(path1)                                                     # STEP 56
result = os0.path.isfile(path1)                                         # STEP 57
bytes4 = 0                                                              # STEP 58
str2 += " "                                                             # STEP 59
result = os0.readlink(path3)                                            # STEP 60
result = file0.readline()                                               # STEP 61
os0.link(path3,path0)                                                   # STEP 62
result = os0.path.isdir(path2)                                          # STEP 63
os0.link(path3,path3)                                                   # STEP 64
path0 = "/Volumes/ramdisk/test"                                         # STEP 65
str3 += " "                                                             # STEP 66
file0.truncate()                                                        # STEP 67
os0.rename(path1,path4)                                                 # STEP 68
result = os0.read(fd0,bytes2)                                           # STEP 69
os0.remove(path1)                                                       # STEP 70
stat3 = os0.lstat(path2)                                                # STEP 71
os0.rename(path2,path3)                                                 # STEP 72
file0.write(str3)                                                       # STEP 73
result = os0.path.islink(path3)                                         # STEP 74
result = os0.path.abspath(path0)                                        # STEP 75
os0.mkdir(path0)                                                        # STEP 76
file0.next()                                                            # STEP 77
file0.seek(bytes4)                                                      # STEP 78
result = os0.path.isfile(path3)                                         # STEP 79
result = os0.readlink(path0)                                            # STEP 80
result = os0.path.islink(path4)                                         # STEP 81
os0.rename(path2,path4)                                                 # STEP 82
result = os0.path.abspath(path1)                                        # STEP 83
result = file0.read(bytes2)                                             # STEP 84
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104836560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28468, in act566
    result = self.p_file[0].read(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 6
bytes1 = 0                                                               # STEP 0
str3 = ""                                                                # STEP 1
str3 += 'l'                                                              # STEP 2
os0 = newFakeOS()                                                        # STEP 3
bytes0 = 0                                                               # STEP 4
component0 = "g"                                                         # STEP 5
bytes2 = 0                                                               # STEP 6
bytes0 += 1                                                              # STEP 7
bytes0 = 0                                                               # STEP 8
str3 += " "                                                              # STEP 9
str3 += 'u'                                                             # STEP 10
bytes4 = 0                                                              # STEP 11
str1 = ""                                                               # STEP 12
str1 += " "                                                             # STEP 13
str1 += 'u'                                                             # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
str3 += " "                                                             # STEP 16
bytes1 += 1                                                             # STEP 17
path4 = "/Volumes/ramdisk/test"                                         # STEP 18
path4 += "/" + component0                                               # STEP 19
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 20
str1 += " "                                                             # STEP 21
str3 = ""                                                               # STEP 22
os0.close(fd0)                                                          # STEP 23
file0 = opener0(path4)                                                  # STEP 24
file0.seek(bytes4)                                                      # STEP 25
result = os0.readlink(path4)                                            # STEP 26
result = os0.path.isdir(path4)                                          # STEP 27
file0.write(str3)                                                       # STEP 28
result = file0.read(bytes0)                                             # STEP 29
os0.rmdir(path4)                                                        # STEP 30
os0.remove(path4)                                                       # STEP 31
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
str3 += 'h'                                                             # STEP 33
os0.remove(path4)                                                       # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
os0.mkdir(path4)                                                        # STEP 36
os0.write(fd0,str3)                                                     # STEP 37
bytes1 += 1                                                             # STEP 38
str4 = ""                                                               # STEP 39
result = os0.path.isfile(path2)                                         # STEP 40
os0.mkdir(path4)                                                        # STEP 41
os0.write(fd0,str1)                                                     # STEP 42
os0.rmdir(path4)                                                        # STEP 43
result = file0.readlines()                                              # STEP 44
os0.rename(path4,path2)                                                 # STEP 45
file0.truncate()                                                        # STEP 46
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103d2f950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 7
str2 = ""                                                                # STEP 0
bytes1 = 0                                                               # STEP 1
bytes1 += 1                                                              # STEP 2
bytes1 = 0                                                               # STEP 3
bytes1 += 1                                                              # STEP 4
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
os0 = newFakeOS()                                                        # STEP 6
result = os0.path.isdir(path2)                                           # STEP 7
str2 += 'e'                                                              # STEP 8
os0.remove(path2)                                                        # STEP 9
bytes0 = 0                                                              # STEP 10
result = sorted(os0.listdir(path2))                                     # STEP 11
result = os0.path.lexists(path2)                                        # STEP 12
result = os0.path.abspath(path2)                                        # STEP 13
os0.remove(path2)                                                       # STEP 14
result = os0.path.lexists(path2)                                        # STEP 15
result = os0.path.islink(path2)                                         # STEP 16
os0.link(path2,path2)                                                   # STEP 17
result = os0.path.isfile(path2)                                         # STEP 18
os0.symlink(path2,path2)                                                # STEP 19
os0.symlink(path2,path2)                                                # STEP 20
result = os0.path.exists(path2)                                         # STEP 21
os0.link(path2,path2)                                                   # STEP 22
os0.makedirs(path2)                                                     # STEP 23
result = os0.path.islink(path2)                                         # STEP 24
os0.link(path2,path2)                                                   # STEP 25
str1 = ""                                                               # STEP 26
os0.link(path2,path2)                                                   # STEP 27
component2 = "beta"                                                     # STEP 28
os0.link(path2,path2)                                                   # STEP 29
component0 = "lambda"                                                   # STEP 30
result = os0.path.islink(path2)                                         # STEP 31
result = os0.path.abspath(path2)                                        # STEP 32
bytes0 += 1                                                             # STEP 33
str1 += " "                                                             # STEP 34
result = sorted(os0.listdir(path2))                                     # STEP 35
bytes0 = 0                                                              # STEP 36
os0.symlink(path2,path2)                                                # STEP 37
result = os0.path.lexists(path2)                                        # STEP 38
result = sorted(os0.listdir(path2))                                     # STEP 39
bytes2 = 0                                                              # STEP 40
str1 = ""                                                               # STEP 41
str2 += " "                                                             # STEP 42
str1 += 'x'                                                             # STEP 43
path2 += "/" + component2                                               # STEP 44
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 45
os0.write(fd0,str1)                                                     # STEP 46
os0.close(fd0)                                                          # STEP 47
str2 += 'g'                                                             # STEP 48
os0.write(fd0,str2)                                                     # STEP 49
opener0 = newFakeOpener(os0)                                            # STEP 50
stat0 = os0.lstat(path2)                                                # STEP 51
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 52
os0.rmdir(path2)                                                        # STEP 53
file0 = opener0(path2,'r')                                              # STEP 54
os0.path.getsize(path2)                                                 # STEP 55
result = file0.read()                                                   # STEP 56
stat1 = os0.lstat(path2)                                                # STEP 57
stat2 = os0.lstat(path2)                                                # STEP 58
result = sorted(os0.listdir(path2))                                     # STEP 59
component2 = "delta"                                                    # STEP 60
bytes3 = 0                                                              # STEP 61
os0.close(fd0)                                                          # STEP 62
result = file0.readlines()                                              # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ea52d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
FAILURE 8
component4 = "g"                                                         # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
component1 = "phi"                                                       # STEP 2
component0 = "h"                                                         # STEP 3
path1 += "/" + component4                                                # STEP 4
bytes3 = 0                                                               # STEP 5
bytes3 += 1                                                              # STEP 6
str1 = ""                                                                # STEP 7
os0 = newFakeOS()                                                        # STEP 8
result = os0.path.abspath(path1)                                         # STEP 9
str4 = ""                                                               # STEP 10
result = sorted(os0.listdir(path1))                                     # STEP 11
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 12
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 13
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 14
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 15
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 16
os0.remove(path1)                                                       # STEP 17
stat3 = os0.lstat(path1)                                                # STEP 18
result = os0.path.exists(path1)                                         # STEP 19
path3 = "/Volumes/ramdisk/test"                                         # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
str4 += 'l'                                                             # STEP 22
os0.write(fd0,str1)                                                     # STEP 23
result = os0.path.isabs(path3)                                          # STEP 24
path0 = "/Volumes/ramdisk/test"                                         # STEP 25
result = os0.readlink(path0)                                            # STEP 26
file0 = opener0(path0,'r')                                              # STEP 27
result = os0.readlink(path0)                                            # STEP 28
result = os0.path.exists(path1)                                         # STEP 29
component3 = "phi"                                                      # STEP 30
os0.makedirs(path0)                                                     # STEP 31
result = os0.path.exists(path3)                                         # STEP 32
result = sorted(os0.listdir(path0))                                     # STEP 33
os0.link(path0,path1)                                                   # STEP 34
os0.rename(path1,path3)                                                 # STEP 35
file0 = opener0(path1)                                                  # STEP 36
result = os0.path.isdir(path0)                                          # STEP 37
os0.close(fd0)                                                          # STEP 38
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 39
os0.rmdir(path1)                                                        # STEP 40
os0.link(path0,path0)                                                   # STEP 41
result = sorted(os0.listdir(path0))                                     # STEP 42
stat0 = os0.fstat(fd0)                                                  # STEP 43
os0.symlink(path0,path0)                                                # STEP 44
os0.mkdir(path0)                                                        # STEP 45
file0 = opener0(path3,'a')                                              # STEP 46
stat0 = os0.stat(path1)                                                 # STEP 47
result = os0.path.abspath(path0)                                        # STEP 48
result = os0.path.exists(path0)                                         # STEP 49
os0.rename(path1,path3)                                                 # STEP 50
file0 = opener0(path1,'a')                                              # STEP 51
file0.truncate()                                                        # STEP 52
os0.rmdir(path1)                                                        # STEP 53
os0.rename(path1,path0)                                                 # STEP 54
os0.remove(path1)                                                       # STEP 55
path1 += "/" + component0                                               # STEP 56
os0.link(path1,path0)                                                   # STEP 57
os0.remove(path1)                                                       # STEP 58
result = os0.path.abspath(path3)                                        # STEP 59
path2 = "/Volumes/ramdisk/test"                                         # STEP 60
result = file0.readline()                                               # STEP 61
file0.next()                                                            # STEP 62
result = file0.readline(bytes3)                                         # STEP 63
result = os0.path.lexists(path0)                                        # STEP 64
str1 = ""                                                               # STEP 65
bytes3 += 1                                                             # STEP 66
os0.rmdir(path1)                                                        # STEP 67
str4 += " "                                                             # STEP 68
os0.path.getsize(path1)                                                 # STEP 69
result = sorted(os0.listdir(path1))                                     # STEP 70
result = os0.path.isfile(path1)                                         # STEP 71
os0.symlink(path0,path2)                                                # STEP 72
stat3 = os0.stat(path1)                                                 # STEP 73
os0.write(fd0,str1)                                                     # STEP 74
result = os0.path.islink(path3)                                         # STEP 75
result = os0.path.abspath(path0)                                        # STEP 76
file0.flush()                                                           # STEP 77
result = file0.readline(bytes3)                                         # STEP 78
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107249560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 9
os0 = newFakeOS()                                                        # STEP 0
component3 = "f"                                                         # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
result = os0.path.islink(path0)                                          # STEP 3
os0.remove(path0)                                                        # STEP 4
str2 = ""                                                                # STEP 5
result = sorted(os0.listdir(path0))                                      # STEP 6
os0.mkdir(path0)                                                         # STEP 7
result = os0.path.isfile(path0)                                          # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
bytes4 = 0                                                              # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = sorted(os0.listdir(path3))                                     # STEP 12
result = os0.path.isfile(path3)                                         # STEP 13
os0.remove(path3)                                                       # STEP 14
result = os0.path.isabs(path0)                                          # STEP 15
result = os0.readlink(path0)                                            # STEP 16
result = os0.path.lexists(path3)                                        # STEP 17
result = os0.path.dirname(path3)                                        # STEP 18
result = os0.path.isdir(path0)                                          # STEP 19
os0.symlink(path0,path0)                                                # STEP 20
result = os0.path.isabs(path3)                                          # STEP 21
file0 = opener0(path0,'a')                                              # STEP 22
result = os0.path.exists(path3)                                         # STEP 23
file0 = opener0(path3)                                                  # STEP 24
os0.link(path3,path3)                                                   # STEP 25
path3 = "/Volumes/ramdisk/test"                                         # STEP 26
file0 = opener0(path0,'a')                                              # STEP 27
file0 = opener0(path0,'w')                                              # STEP 28
path4 = "/Volumes/ramdisk/test"                                         # STEP 29
path4 += "/" + component3                                               # STEP 30
stat0 = os0.lstat(path4)                                                # STEP 31
str2 += 'c'                                                             # STEP 32
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 33
file0 = opener0(path0,'w')                                              # STEP 34
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 35
result = os0.path.isfile(path4)                                         # STEP 36
file0 = opener0(path0,'a')                                              # STEP 37
result = os0.path.islink(path0)                                         # STEP 38
stat0 = os0.lstat(path4)                                                # STEP 39
bytes4 += 1                                                             # STEP 40
os0.close(fd0)                                                          # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
result = os0.path.dirname(path4)                                        # STEP 43
str1 = ""                                                               # STEP 44
str1 += " "                                                             # STEP 45
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 46
os0.rmdir(path4)                                                        # STEP 47
file0 = opener0(path3,'r')                                              # STEP 48
result = os0.path.islink(path0)                                         # STEP 49
str1 += 'v'                                                             # STEP 50
os0.close(fd0)                                                          # STEP 51
stat4 = os0.fstat(fd0)                                                  # STEP 52
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 53
os0.symlink(path4,path3)                                                # STEP 54
stat2 = os0.lstat(path4)                                                # STEP 55
stat4 = os0.lstat(path4)                                                # STEP 56
file0 = opener0(path4)                                                  # STEP 57
result = file0.readlines()                                              # STEP 58
path0 = "/Volumes/ramdisk/test"                                         # STEP 59
bytes4 += 1                                                             # STEP 60
path0 += "/" + component3                                               # STEP 61
os0.close(fd0)                                                          # STEP 62
file0.truncate()                                                        # STEP 63
os0.remove(path3)                                                       # STEP 64
component0 = "h"                                                        # STEP 65
result = os0.path.isabs(path4)                                          # STEP 66
result = os0.path.isabs(path3)                                          # STEP 67
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 68
result = os0.readlink(path0)                                            # STEP 69
os0.write(fd0,str2)                                                     # STEP 70
component3 = "alpha"                                                    # STEP 71
result = os0.path.islink(path0)                                         # STEP 72
result = file0.readlines()                                              # STEP 73
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ed9758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29027, in act575
    assert (raised == None) == (refRaised == None)
1190 BRANCHES COVERED
912 STATEMENTS COVERED
