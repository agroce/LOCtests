Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4381.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #383 STEP #88 (0:00:30.001142) Sat Jul 22 00:35:35 2017 [ 883 stmts 1150 branches ] 38288 TOTAL ACTIONS (1276.21808424/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103cf5ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 94 steps

SAVING TEST AS failure.4381.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "beta"                                                      # STEP 0
component2 = "phi"                                                       # STEP 1
component0 = "a"                                                         # STEP 2
component3 = "b"                                                         # STEP 3
component4 = "gamma"                                                     # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes4 = 0                                                               # STEP 6
bytes0 = 0                                                               # STEP 7
str4 = ""                                                                # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
bytes4 += 1                                                             # STEP 11
bytes4 += 1                                                             # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
os0.mkdir(path4)                                                        # STEP 14
os0.link(path4,path1)                                                   # STEP 15
path2 = "/Volumes/ramdisk/test"                                         # STEP 16
bytes0 += 1                                                             # STEP 17
result = os0.path.exists(path4)                                         # STEP 18
result = sorted(os0.listdir(path1))                                     # STEP 19
result = os0.path.isabs(path1)                                          # STEP 20
path2 += "/" + component1                                               # STEP 21
bytes1 = 0                                                              # STEP 22
bytes0 += 1                                                             # STEP 23
file0 = opener0(path1,'w')                                              # STEP 24
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 25
component1 = "omega"                                                    # STEP 26
result = os0.readlink(path4)                                            # STEP 27
file0 = opener0(path4,'w')                                              # STEP 28
result = os0.path.exists(path4)                                         # STEP 29
file0 = opener0(path4,'w')                                              # STEP 30
path4 += "/" + component1                                               # STEP 31
str1 = ""                                                               # STEP 32
path4 += "/" + component4                                               # STEP 33
component4 = "c"                                                        # STEP 34
path1 += "/" + component4                                               # STEP 35
result = os0.path.islink(path4)                                         # STEP 36
os0.close(fd0)                                                          # STEP 37
file0 = opener0(path1,'w')                                              # STEP 38
file0.truncate()                                                        # STEP 39
path2 = "/Volumes/ramdisk/test"                                         # STEP 40
component4 = "h"                                                        # STEP 41
stat3 = os0.stat(path1)                                                 # STEP 42
result = os0.path.isfile(path1)                                         # STEP 43
result = file0.read(bytes0)                                             # STEP 44
str0 = ""                                                               # STEP 45
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.path.isfile(path1)                                         # STEP 47
component1 = "beta"                                                     # STEP 48
file0.write(str4)                                                       # STEP 49
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 50
path3 += "/" + component3                                               # STEP 51
path2 += "/" + component1                                               # STEP 52
stat1 = os0.stat(path2)                                                 # STEP 53
result = os0.path.exists(path2)                                         # STEP 54
str2 = ""                                                               # STEP 55
path1 += "/" + component4                                               # STEP 56
os0.link(path4,path4)                                                   # STEP 57
component4 = "g"                                                        # STEP 58
path3 += "/" + component1                                               # STEP 59
str4 += " "                                                             # STEP 60
bytes0 = 0                                                              # STEP 61
component1 = "delta"                                                    # STEP 62
path1 += "/" + component1                                               # STEP 63
os0.link(path2,path3)                                                   # STEP 64
result = file0.readline(bytes4)                                         # STEP 65
file0.write(str0)                                                       # STEP 66
result = os0.path.isabs(path2)                                          # STEP 67
component1 = "phi"                                                      # STEP 68
file0.write(str0)                                                       # STEP 69
result = file0.read(bytes0)                                             # STEP 70
str3 = ""                                                               # STEP 71
result = stat1.st_nlink                                                 # STEP 72
path4 += "/" + component2                                               # STEP 73
stat2 = os0.stat(path1)                                                 # STEP 74
path1 += "/" + component2                                               # STEP 75
component2 = "epsilon"                                                  # STEP 76
os0.link(path4,path1)                                                   # STEP 77
result = os0.path.lexists(path3)                                        # STEP 78
result = sorted(os0.listdir(path4))                                     # STEP 79
os0.mkdir(path3)                                                        # STEP 80
bytes3 = 0                                                              # STEP 81
path4 += "/" + component3                                               # STEP 82
str4 = ""                                                               # STEP 83
stat2 = os0.stat(path4)                                                 # STEP 84
path1 += "/" + component4                                               # STEP 85
path4 = "/Volumes/ramdisk/test"                                         # STEP 86
component3 = "h"                                                        # STEP 87
component4 = "e"                                                        # STEP 88
os0.link(path3,path2)                                                   # STEP 89
bytes2 = 0                                                              # STEP 90
os0.write(fd0,str2)                                                     # STEP 91
stat0 = os0.stat(path2)                                                 # STEP 92
result = file0.readline(bytes4)                                         # STEP 93
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104e61c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 34
STOPPING TESTING DUE TO TIMEOUT
41.8060200669 PERCENT COVERED
60.3044941425 TOTAL RUNTIME
754 EXECUTED
75328 TOTAL TEST OPERATIONS
54.0103011131 TIME SPENT EXECUTING TEST OPERATIONS
2.36881303787 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0468046665192 TIME SPENT CHECKING PROPERTIES
54.0571057796 TOTAL TIME SPENT RUNNING SUT
2.22132778168 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "beta"                                                      # STEP 0
component2 = "phi"                                                       # STEP 1
component0 = "a"                                                         # STEP 2
component3 = "b"                                                         # STEP 3
component4 = "gamma"                                                     # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes4 = 0                                                               # STEP 6
bytes0 = 0                                                               # STEP 7
str4 = ""                                                                # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
bytes4 += 1                                                             # STEP 11
bytes4 += 1                                                             # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
os0.mkdir(path4)                                                        # STEP 14
os0.link(path4,path1)                                                   # STEP 15
path2 = "/Volumes/ramdisk/test"                                         # STEP 16
bytes0 += 1                                                             # STEP 17
result = os0.path.exists(path4)                                         # STEP 18
result = sorted(os0.listdir(path1))                                     # STEP 19
result = os0.path.isabs(path1)                                          # STEP 20
path2 += "/" + component1                                               # STEP 21
bytes1 = 0                                                              # STEP 22
bytes0 += 1                                                             # STEP 23
file0 = opener0(path1,'w')                                              # STEP 24
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 25
component1 = "omega"                                                    # STEP 26
result = os0.readlink(path4)                                            # STEP 27
file0 = opener0(path4,'w')                                              # STEP 28
result = os0.path.exists(path4)                                         # STEP 29
file0 = opener0(path4,'w')                                              # STEP 30
path4 += "/" + component1                                               # STEP 31
str1 = ""                                                               # STEP 32
path4 += "/" + component4                                               # STEP 33
component4 = "c"                                                        # STEP 34
path1 += "/" + component4                                               # STEP 35
result = os0.path.islink(path4)                                         # STEP 36
os0.close(fd0)                                                          # STEP 37
file0 = opener0(path1,'w')                                              # STEP 38
file0.truncate()                                                        # STEP 39
path2 = "/Volumes/ramdisk/test"                                         # STEP 40
component4 = "h"                                                        # STEP 41
stat3 = os0.stat(path1)                                                 # STEP 42
result = os0.path.isfile(path1)                                         # STEP 43
result = file0.read(bytes0)                                             # STEP 44
str0 = ""                                                               # STEP 45
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.path.isfile(path1)                                         # STEP 47
component1 = "beta"                                                     # STEP 48
file0.write(str4)                                                       # STEP 49
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 50
path3 += "/" + component3                                               # STEP 51
path2 += "/" + component1                                               # STEP 52
stat1 = os0.stat(path2)                                                 # STEP 53
result = os0.path.exists(path2)                                         # STEP 54
str2 = ""                                                               # STEP 55
path1 += "/" + component4                                               # STEP 56
os0.link(path4,path4)                                                   # STEP 57
component4 = "g"                                                        # STEP 58
path3 += "/" + component1                                               # STEP 59
str4 += " "                                                             # STEP 60
bytes0 = 0                                                              # STEP 61
component1 = "delta"                                                    # STEP 62
path1 += "/" + component1                                               # STEP 63
os0.link(path2,path3)                                                   # STEP 64
result = file0.readline(bytes4)                                         # STEP 65
file0.write(str0)                                                       # STEP 66
result = os0.path.isabs(path2)                                          # STEP 67
component1 = "phi"                                                      # STEP 68
file0.write(str0)                                                       # STEP 69
result = file0.read(bytes0)                                             # STEP 70
str3 = ""                                                               # STEP 71
result = stat1.st_nlink                                                 # STEP 72
path4 += "/" + component2                                               # STEP 73
stat2 = os0.stat(path1)                                                 # STEP 74
path1 += "/" + component2                                               # STEP 75
component2 = "epsilon"                                                  # STEP 76
os0.link(path4,path1)                                                   # STEP 77
result = os0.path.lexists(path3)                                        # STEP 78
result = sorted(os0.listdir(path4))                                     # STEP 79
os0.mkdir(path3)                                                        # STEP 80
bytes3 = 0                                                              # STEP 81
path4 += "/" + component3                                               # STEP 82
str4 = ""                                                               # STEP 83
stat2 = os0.stat(path4)                                                 # STEP 84
path1 += "/" + component4                                               # STEP 85
path4 = "/Volumes/ramdisk/test"                                         # STEP 86
component3 = "h"                                                        # STEP 87
component4 = "e"                                                        # STEP 88
os0.link(path3,path2)                                                   # STEP 89
bytes2 = 0                                                              # STEP 90
os0.write(fd0,str2)                                                     # STEP 91
stat0 = os0.stat(path2)                                                 # STEP 92
result = file0.readline(bytes4)                                         # STEP 93
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104e61c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1167 BRANCHES COVERED
893 STATEMENTS COVERED
