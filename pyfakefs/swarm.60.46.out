Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4919.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (  ) == () ',), <traceback object at 0x106ad8440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28854, in act572
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 56 steps

SAVING TEST AS failure.4919.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "delta"                                                     # STEP 0
component4 = "a"                                                         # STEP 1
component0 = "f"                                                         # STEP 2
component3 = "c"                                                         # STEP 3
component1 = "delta"                                                     # STEP 4
bytes4 = 0                                                               # STEP 5
str4 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
bytes0 = 0                                                               # STEP 8
str0 = ""                                                                # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
str3 = ""                                                               # STEP 12
path2 += "/" + component0                                               # STEP 13
component0 = "lambda"                                                   # STEP 14
str2 = ""                                                               # STEP 15
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 16
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
result = os0.path.exists(path2)                                         # STEP 18
result = os0.path.isabs(path2)                                          # STEP 19
bytes3 = 0                                                              # STEP 20
stat3 = os0.fstat(fd0)                                                  # STEP 21
file0 = opener0(path2,'r')                                              # STEP 22
bytes2 = 0                                                              # STEP 23
os0.write(fd0,str2)                                                     # STEP 24
result = file0.read(bytes2)                                             # STEP 25
bytes1 = 0                                                              # STEP 26
str3 += " "                                                             # STEP 27
str3 = ""                                                               # STEP 28
str4 += " "                                                             # STEP 29
result = os0.path.islink(path2)                                         # STEP 30
bytes0 += 1                                                             # STEP 31
result = file0.readline(bytes2)                                         # STEP 32
result = os0.read(fd0,bytes2)                                           # STEP 33
result = file0.read(bytes0)                                             # STEP 34
path2 += "/" + component2                                               # STEP 35
os0.makedirs(path2)                                                     # STEP 36
result = file0.read(bytes4)                                             # STEP 37
path2 += "/" + component2                                               # STEP 38
component2 = "lambda"                                                   # STEP 39
bytes2 += 1                                                             # STEP 40
result = os0.read(fd0,bytes4)                                           # STEP 41
result = os0.read(fd0,bytes3)                                           # STEP 42
bytes0 += 1                                                             # STEP 43
bytes2 += 1                                                             # STEP 44
file0.write(str2)                                                       # STEP 45
stat0 = os0.fstat(fd0)                                                  # STEP 46
bytes4 += 1                                                             # STEP 47
bytes1 += 1                                                             # STEP 48
str2 += " "                                                             # STEP 49
path2 += "/" + component3                                               # STEP 50
os0.write(fd0,str4)                                                     # STEP 51
str2 += " "                                                             # STEP 52
os0.write(fd0,str4)                                                     # STEP 53
component3 = "phi"                                                      # STEP 54
result = file0.readline(bytes2)                                         # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (  ) == () ',), <traceback object at 0x1055d1a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28854, in act572
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #377 STEP #74 (0:00:30.001319) Sat Jul 22 03:06:00 2017 [ 888 stmts 1157 branches ] 37630 TOTAL ACTIONS (1254.27818976/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 96
STOPPING TESTING DUE TO TIMEOUT
42.2519509476 PERCENT COVERED
60.3254089355 TOTAL RUNTIME
759 EXECUTED
75852 TOTAL TEST OPERATIONS
54.0382449627 TIME SPENT EXECUTING TEST OPERATIONS
2.36702394485 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0459830760956 TIME SPENT CHECKING PROPERTIES
54.0842280388 TOTAL TIME SPENT RUNNING SUT
2.25392699242 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "delta"                                                     # STEP 0
component4 = "a"                                                         # STEP 1
component0 = "f"                                                         # STEP 2
component3 = "c"                                                         # STEP 3
component1 = "delta"                                                     # STEP 4
bytes4 = 0                                                               # STEP 5
str4 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
bytes0 = 0                                                               # STEP 8
str0 = ""                                                                # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
str3 = ""                                                               # STEP 12
path2 += "/" + component0                                               # STEP 13
component0 = "lambda"                                                   # STEP 14
str2 = ""                                                               # STEP 15
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 16
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
result = os0.path.exists(path2)                                         # STEP 18
result = os0.path.isabs(path2)                                          # STEP 19
bytes3 = 0                                                              # STEP 20
stat3 = os0.fstat(fd0)                                                  # STEP 21
file0 = opener0(path2,'r')                                              # STEP 22
bytes2 = 0                                                              # STEP 23
os0.write(fd0,str2)                                                     # STEP 24
result = file0.read(bytes2)                                             # STEP 25
bytes1 = 0                                                              # STEP 26
str3 += " "                                                             # STEP 27
str3 = ""                                                               # STEP 28
str4 += " "                                                             # STEP 29
result = os0.path.islink(path2)                                         # STEP 30
bytes0 += 1                                                             # STEP 31
result = file0.readline(bytes2)                                         # STEP 32
result = os0.read(fd0,bytes2)                                           # STEP 33
result = file0.read(bytes0)                                             # STEP 34
path2 += "/" + component2                                               # STEP 35
os0.makedirs(path2)                                                     # STEP 36
result = file0.read(bytes4)                                             # STEP 37
path2 += "/" + component2                                               # STEP 38
component2 = "lambda"                                                   # STEP 39
bytes2 += 1                                                             # STEP 40
result = os0.read(fd0,bytes4)                                           # STEP 41
result = os0.read(fd0,bytes3)                                           # STEP 42
bytes0 += 1                                                             # STEP 43
bytes2 += 1                                                             # STEP 44
file0.write(str2)                                                       # STEP 45
stat0 = os0.fstat(fd0)                                                  # STEP 46
bytes4 += 1                                                             # STEP 47
bytes1 += 1                                                             # STEP 48
str2 += " "                                                             # STEP 49
path2 += "/" + component3                                               # STEP 50
os0.write(fd0,str4)                                                     # STEP 51
str2 += " "                                                             # STEP 52
os0.write(fd0,str4)                                                     # STEP 53
component3 = "phi"                                                      # STEP 54
result = file0.readline(bytes2)                                         # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (  ) == () ',), <traceback object at 0x1055d1a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28854, in act572
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1170 BRANCHES COVERED
897 STATEMENTS COVERED
