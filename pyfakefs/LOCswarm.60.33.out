Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4662.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (  o   ) ',), <traceback object at 0x103a67290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 62 steps

SAVING TEST AS failure.4662.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes1 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
os0.link(path4,path4)                                                    # STEP 3
component0 = "h"                                                         # STEP 4
os0.link(path4,path4)                                                    # STEP 5
component2 = "lambda"                                                    # STEP 6
result = os0.path.exists(path4)                                          # STEP 7
result = os0.path.isabs(path4)                                           # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
os0.remove(path4)                                                       # STEP 10
str3 = ""                                                               # STEP 11
path4 += "/" + component0                                               # STEP 12
str3 += 'f'                                                             # STEP 13
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 14
str3 = ""                                                               # STEP 15
bytes0 = 0                                                              # STEP 16
os0.path.getsize(path4)                                                 # STEP 17
bytes4 = 0                                                              # STEP 18
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 19
str3 += " "                                                             # STEP 20
os0.write(fd0,str3)                                                     # STEP 21
result = os0.readlink(path4)                                            # STEP 22
bytes4 += 1                                                             # STEP 23
str3 += " "                                                             # STEP 24
os0.rmdir(path4)                                                        # STEP 25
file0 = opener0(path4)                                                  # STEP 26
os0.write(fd0,str3)                                                     # STEP 27
result = os0.path.isdir(path4)                                          # STEP 28
result = file0.readline()                                               # STEP 29
result = file0.readlines()                                              # STEP 30
str3 += 'o'                                                             # STEP 31
result = file0.readline()                                               # STEP 32
bytes4 += 1                                                             # STEP 33
str3 += " "                                                             # STEP 34
os0.link(path4,path4)                                                   # STEP 35
result = os0.path.exists(path4)                                         # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
stat3 = os0.fstat(fd0)                                                  # STEP 38
result = os0.path.exists(path2)                                         # STEP 39
os0.remove(path4)                                                       # STEP 40
file0.write(str3)                                                       # STEP 41
result = file0.read()                                                   # STEP 42
file0.write(str3)                                                       # STEP 43
file0.next()                                                            # STEP 44
str3 += " "                                                             # STEP 45
str3 += " "                                                             # STEP 46
os0.rmdir(path4)                                                        # STEP 47
os0.write(fd0,str3)                                                     # STEP 48
stat4 = os0.stat(path4)                                                 # STEP 49
os0.close(fd0)                                                          # STEP 50
str2 = ""                                                               # STEP 51
result = os0.readlink(path4)                                            # STEP 52
path3 = "/Volumes/ramdisk/test"                                         # STEP 53
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 54
os0.link(path3,path2)                                                   # STEP 55
result = file0.read(bytes0)                                             # STEP 56
bytes1 += 1                                                             # STEP 57
file0.next()                                                            # STEP 58
bytes0 = 0                                                              # STEP 59
result = file0.readline(bytes1)                                         # STEP 60
result = file0.readline()                                               # STEP 61
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (  o   ) ',), <traceback object at 0x10a5159e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1056b0ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 81 steps

SAVING TEST AS failure.4662.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes2 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
os0.mkdir(path2)                                                         # STEP 3
os0.mkdir(path2)                                                         # STEP 4
result = sorted(os0.listdir(path2))                                      # STEP 5
component2 = "epsilon"                                                   # STEP 6
bytes1 = 0                                                               # STEP 7
bytes0 = 0                                                               # STEP 8
os0.remove(path2)                                                        # STEP 9
path2 += "/" + component2                                               # STEP 10
os0.mkdir(path2)                                                        # STEP 11
result = os0.path.exists(path2)                                         # STEP 12
result = os0.path.dirname(path2)                                        # STEP 13
os0.mkdir(path2)                                                        # STEP 14
str2 = ""                                                               # STEP 15
str2 += " "                                                             # STEP 16
result = os0.path.isdir(path2)                                          # STEP 17
result = os0.path.exists(path2)                                         # STEP 18
str2 += " "                                                             # STEP 19
component1 = "alpha"                                                    # STEP 20
result = sorted(os0.listdir(path2))                                     # STEP 21
path2 += "/" + component1                                               # STEP 22
str1 = ""                                                               # STEP 23
str1 += 'l'                                                             # STEP 24
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 25
component2 = "gamma"                                                    # STEP 26
result = os0.path.dirname(path2)                                        # STEP 27
str2 += " "                                                             # STEP 28
str1 += " "                                                             # STEP 29
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 30
path2 += "/" + component1                                               # STEP 31
path2 += "/" + component2                                               # STEP 32
path0 = "/Volumes/ramdisk/test"                                         # STEP 33
result = os0.path.exists(path2)                                         # STEP 34
result = os0.path.dirname(path2)                                        # STEP 35
result = os0.path.abspath(path2)                                        # STEP 36
os0.rename(path2,path0)                                                 # STEP 37
os0.close(fd0)                                                          # STEP 38
os0.rename(path2,path0)                                                 # STEP 39
path0 += "/" + component2                                               # STEP 40
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 41
result = os0.path.exists(path2)                                         # STEP 42
result = os0.path.dirname(path0)                                        # STEP 43
os0.rename(path2,path0)                                                 # STEP 44
os0.close(fd0)                                                          # STEP 45
opener0 = newFakeOpener(os0)                                            # STEP 46
os0.rename(path0,path2)                                                 # STEP 47
os0.mkdir(path2)                                                        # STEP 48
bytes4 = 0                                                              # STEP 49
os0.close(fd0)                                                          # STEP 50
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 51
result = os0.path.isdir(path2)                                          # STEP 52
file0 = opener0(path0,'a')                                              # STEP 53
result = os0.path.abspath(path0)                                        # STEP 54
file0.next()                                                            # STEP 55
stat1 = os0.stat(path2)                                                 # STEP 56
result = file0.readline()                                               # STEP 57
result = os0.path.exists(path0)                                         # STEP 58
result = os0.path.dirname(path2)                                        # STEP 59
str0 = ""                                                               # STEP 60
file0.next()                                                            # STEP 61
str1 += 'p'                                                             # STEP 62
result = file0.readline()                                               # STEP 63
result = file0.readline()                                               # STEP 64
result = os0.read(fd0,bytes0)                                           # STEP 65
result = os0.path.isdir(path0)                                          # STEP 66
str1 += 'x'                                                             # STEP 67
os0.mkdir(path0)                                                        # STEP 68
str1 += " "                                                             # STEP 69
os0.remove(path0)                                                       # STEP 70
result = os0.path.abspath(path2)                                        # STEP 71
result = os0.path.isdir(path2)                                          # STEP 72
result = os0.read(fd0,bytes1)                                           # STEP 73
result = sorted(os0.listdir(path2))                                     # STEP 74
os0.remove(path0)                                                       # STEP 75
result = sorted(os0.listdir(path2))                                     # STEP 76
os0.rename(path2,path0)                                                 # STEP 77
result = os0.read(fd0,bytes2)                                           # STEP 78
path0 = "/Volumes/ramdisk/test"                                         # STEP 79
result = file0.readline()                                               # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10317aef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #180 STEP #89 (0:00:30.000176) Sat Jul 22 01:43:03 2017 [ 895 stmts 1165 branches ] 17932 TOTAL ACTIONS (597.72982759/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10795b908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 48 steps

SAVING TEST AS failure.4662.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes3 = 0                                                               # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
component3 = "g"                                                         # STEP 3
str0 = ""                                                                # STEP 4
bytes3 += 1                                                              # STEP 5
str0 += 'u'                                                              # STEP 6
str0 += 'd'                                                              # STEP 7
bytes3 += 1                                                              # STEP 8
bytes0 = 0                                                               # STEP 9
bytes2 = 0                                                              # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.islink(path2)                                         # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
file0 = opener0(path2)                                                  # STEP 14
file0 = opener0(path2,'w')                                              # STEP 15
os0.link(path2,path2)                                                   # STEP 16
component1 = "epsilon"                                                  # STEP 17
bytes4 = 0                                                              # STEP 18
path2 += "/" + component1                                               # STEP 19
result = os0.path.islink(path2)                                         # STEP 20
stat2 = os0.lstat(path2)                                                # STEP 21
component1 = "f"                                                        # STEP 22
bytes2 += 1                                                             # STEP 23
stat2 = os0.lstat(path2)                                                # STEP 24
str3 = ""                                                               # STEP 25
path4 = "/Volumes/ramdisk/test"                                         # STEP 26
path3 = "/Volumes/ramdisk/test"                                         # STEP 27
bytes2 += 1                                                             # STEP 28
stat4 = os0.lstat(path2)                                                # STEP 29
bytes4 += 1                                                             # STEP 30
os0.link(path2,path4)                                                   # STEP 31
str0 = ""                                                               # STEP 32
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 33
result = os0.path.isfile(path2)                                         # STEP 34
file0 = opener0(path4,'w')                                              # STEP 35
stat4 = os0.stat(path2)                                                 # STEP 36
os0.close(fd0)                                                          # STEP 37
os0.rename(path2,path3)                                                 # STEP 38
stat3 = os0.fstat(fd0)                                                  # STEP 39
file0 = opener0(path4)                                                  # STEP 40
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
file0 = opener0(path2,'r')                                              # STEP 42
str0 += 'b'                                                             # STEP 43
component4 = "e"                                                        # STEP 44
file0.seek(bytes3)                                                      # STEP 45
result = os0.read(fd0,bytes0)                                           # STEP 46
file0.truncate()                                                        # STEP 47
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x105cb4fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (4) == (0) ',), <traceback object at 0x10a94dab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 79 steps

SAVING TEST AS failure.4662.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
os0.mkdir(path1)                                                         # STEP 2
bytes1 = 0                                                               # STEP 3
os0.remove(path1)                                                        # STEP 4
str1 = ""                                                                # STEP 5
os0.mkdir(path1)                                                         # STEP 6
result = os0.readlink(path1)                                             # STEP 7
str1 += " "                                                              # STEP 8
os0.link(path1,path1)                                                    # STEP 9
os0.mkdir(path1)                                                        # STEP 10
component4 = "e"                                                        # STEP 11
result = sorted(os0.listdir(path1))                                     # STEP 12
os0.remove(path1)                                                       # STEP 13
component0 = "c"                                                        # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
os0.mkdir(path1)                                                        # STEP 16
result = os0.path.lexists(path1)                                        # STEP 17
os0.link(path1,path1)                                                   # STEP 18
os0.link(path1,path1)                                                   # STEP 19
os0.mkdir(path1)                                                        # STEP 20
result = os0.path.islink(path1)                                         # STEP 21
component2 = "h"                                                        # STEP 22
os0.remove(path1)                                                       # STEP 23
component1 = "phi"                                                      # STEP 24
os0.link(path1,path1)                                                   # STEP 25
file0 = opener0(path1,'w')                                              # STEP 26
os0.mkdir(path1)                                                        # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
component3 = "h"                                                        # STEP 29
str1 += " "                                                             # STEP 30
result = os0.path.lexists(path1)                                        # STEP 31
os0.remove(path1)                                                       # STEP 32
result = os0.readlink(path1)                                            # STEP 33
os0.mkdir(path1)                                                        # STEP 34
result = os0.readlink(path1)                                            # STEP 35
file0 = opener0(path1)                                                  # STEP 36
result = os0.path.islink(path1)                                         # STEP 37
file0 = opener0(path1)                                                  # STEP 38
file0 = opener0(path1)                                                  # STEP 39
path1 += "/" + component2                                               # STEP 40
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 41
component2 = "h"                                                        # STEP 42
os0.link(path1,path1)                                                   # STEP 43
file0 = opener0(path1,'a')                                              # STEP 44
bytes0 = 0                                                              # STEP 45
result = os0.path.islink(path1)                                         # STEP 46
result = os0.path.islink(path1)                                         # STEP 47
path1 += "/" + component2                                               # STEP 48
os0.mkdir(path1)                                                        # STEP 49
os0.link(path1,path1)                                                   # STEP 50
str1 += " "                                                             # STEP 51
file0.next()                                                            # STEP 52
path1 += "/" + component0                                               # STEP 53
os0.link(path1,path1)                                                   # STEP 54
os0.mkdir(path1)                                                        # STEP 55
bytes4 = 0                                                              # STEP 56
result = file0.read()                                                   # STEP 57
result = os0.path.lexists(path1)                                        # STEP 58
result = os0.readlink(path1)                                            # STEP 59
result = os0.path.islink(path1)                                         # STEP 60
str1 += " "                                                             # STEP 61
result = os0.path.lexists(path1)                                        # STEP 62
file0.write(str1)                                                       # STEP 63
str1 += " "                                                             # STEP 64
result = sorted(os0.listdir(path1))                                     # STEP 65
result = file0.readline(bytes4)                                         # STEP 66
result = os0.path.lexists(path1)                                        # STEP 67
result = sorted(os0.listdir(path1))                                     # STEP 68
stat2 = os0.fstat(fd0)                                                  # STEP 69
os0.remove(path1)                                                       # STEP 70
result = os0.path.lexists(path1)                                        # STEP 71
result = os0.path.islink(path1)                                         # STEP 72
result = os0.readlink(path1)                                            # STEP 73
component0 = "gamma"                                                    # STEP 74
result = stat2.st_nlink                                                 # STEP 75
path1 += "/" + component1                                               # STEP 76
result = os0.readlink(path1)                                            # STEP 77
result = stat2.st_size                                                  # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (4) == (0) ',), <traceback object at 0x105d31c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1083263b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 100 steps

SAVING TEST AS failure.4662.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "b"                                                         # STEP 1
component3 = "a"                                                         # STEP 2
os0 = newFakeOS()                                                        # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
os0.makedirs(path3)                                                      # STEP 5
bytes3 = 0                                                               # STEP 6
result = os0.path.lexists(path3)                                         # STEP 7
os0.link(path2,path2)                                                    # STEP 8
path3 += "/" + component1                                                # STEP 9
result = os0.path.isfile(path3)                                         # STEP 10
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
file0 = opener0(path2,'w')                                              # STEP 13
component1 = "lambda"                                                   # STEP 14
os0.link(path2,path3)                                                   # STEP 15
result = os0.path.lexists(path3)                                        # STEP 16
os0.symlink(path2,path3)                                                # STEP 17
path3 += "/" + component3                                               # STEP 18
file0 = opener0(path2,'a')                                              # STEP 19
result = os0.path.isfile(path3)                                         # STEP 20
file0 = opener0(path3)                                                  # STEP 21
os0.mkdir(path2)                                                        # STEP 22
result = os0.path.lexists(path3)                                        # STEP 23
os0.close(fd0)                                                          # STEP 24
result = os0.path.isdir(path2)                                          # STEP 25
result = os0.path.dirname(path3)                                        # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
component0 = "g"                                                        # STEP 28
result = os0.path.isdir(path2)                                          # STEP 29
file0 = opener0(path2,'a')                                              # STEP 30
os0.symlink(path2,path3)                                                # STEP 31
file0 = opener0(path2,'w')                                              # STEP 32
os0.rmdir(path3)                                                        # STEP 33
os0.rmdir(path3)                                                        # STEP 34
bytes0 = 0                                                              # STEP 35
os0.rmdir(path3)                                                        # STEP 36
file0 = opener0(path3,'w')                                              # STEP 37
stat2 = os0.stat(path3)                                                 # STEP 38
os0.close(fd0)                                                          # STEP 39
os0.path.getsize(path3)                                                 # STEP 40
str3 = ""                                                               # STEP 41
file0 = opener0(path2)                                                  # STEP 42
file0 = opener0(path3)                                                  # STEP 43
bytes4 = 0                                                              # STEP 44
file0 = opener0(path2)                                                  # STEP 45
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 46
stat0 = os0.stat(path3)                                                 # STEP 47
stat3 = os0.stat(path3)                                                 # STEP 48
os0.makedirs(path3)                                                     # STEP 49
os0.link(path2,path2)                                                   # STEP 50
os0.symlink(path2,path2)                                                # STEP 51
path3 = "/Volumes/ramdisk/test"                                         # STEP 52
path3 += "/" + component3                                               # STEP 53
os0.mkdir(path2)                                                        # STEP 54
file0 = opener0(path3,'a')                                              # STEP 55
os0.makedirs(path3)                                                     # STEP 56
os0.link(path2,path3)                                                   # STEP 57
bytes2 = 0                                                              # STEP 58
path1 = "/Volumes/ramdisk/test"                                         # STEP 59
file0.write(str3)                                                       # STEP 60
os0.rmdir(path3)                                                        # STEP 61
bytes1 = 0                                                              # STEP 62
result = os0.path.isdir(path2)                                          # STEP 63
str4 = ""                                                               # STEP 64
str3 += 'n'                                                             # STEP 65
file0.flush()                                                           # STEP 66
os0.symlink(path2,path1)                                                # STEP 67
file0.write(str4)                                                       # STEP 68
result = os0.path.lexists(path3)                                        # STEP 69
os0.makedirs(path2)                                                     # STEP 70
os0.link(path3,path1)                                                   # STEP 71
path2 = "/Volumes/ramdisk/test"                                         # STEP 72
result = os0.path.isfile(path3)                                         # STEP 73
path1 = "/Volumes/ramdisk/test"                                         # STEP 74
result = file0.read(bytes1)                                             # STEP 75
bytes1 = 0                                                              # STEP 76
os0.link(path3,path3)                                                   # STEP 77
os0.makedirs(path1)                                                     # STEP 78
os0.mkdir(path1)                                                        # STEP 79
os0.rmdir(path3)                                                        # STEP 80
str3 += 'q'                                                             # STEP 81
str4 += 'c'                                                             # STEP 82
file0.write(str4)                                                       # STEP 83
path3 += "/" + component1                                               # STEP 84
result = file0.read()                                                   # STEP 85
str0 = ""                                                               # STEP 86
component2 = "epsilon"                                                  # STEP 87
os0.mkdir(path3)                                                        # STEP 88
os0.link(path3,path2)                                                   # STEP 89
os0.write(fd0,str0)                                                     # STEP 90
os0.write(fd0,str3)                                                     # STEP 91
component1 = "alpha"                                                    # STEP 92
path2 = "/Volumes/ramdisk/test"                                         # STEP 93
os0.rmdir(path3)                                                        # STEP 94
file0.flush()                                                           # STEP 95
os0.rmdir(path3)                                                        # STEP 96
path2 += "/" + component2                                               # STEP 97
component3 = "phi"                                                      # STEP 98
result = file0.read(bytes0)                                             # STEP 99
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1051dd908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10643ccb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
Original test has 68 steps

SAVING TEST AS failure.4662.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes2 += 1                                                              # STEP 2
component2 = "d"                                                         # STEP 3
bytes2 += 1                                                              # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
bytes4 = 0                                                               # STEP 6
component1 = "c"                                                         # STEP 7
path4 = "/Volumes/ramdisk/test"                                          # STEP 8
bytes3 = 0                                                               # STEP 9
component4 = "c"                                                        # STEP 10
str1 = ""                                                               # STEP 11
os0 = newFakeOS()                                                       # STEP 12
result = sorted(os0.listdir(path2))                                     # STEP 13
result = os0.path.lexists(path4)                                        # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
os0.mkdir(path2)                                                        # STEP 16
result = sorted(os0.listdir(path2))                                     # STEP 17
os0.mkdir(path2)                                                        # STEP 18
os0.link(path2,path4)                                                   # STEP 19
os0.link(path4,path2)                                                   # STEP 20
path2 += "/" + component2                                               # STEP 21
file0 = opener0(path2)                                                  # STEP 22
os0.link(path4,path4)                                                   # STEP 23
result = os0.path.lexists(path2)                                        # STEP 24
file0 = opener0(path4)                                                  # STEP 25
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 26
os0.rename(path2,path3)                                                 # STEP 27
os0.rename(path2,path3)                                                 # STEP 28
os0.link(path3,path3)                                                   # STEP 29
result = os0.path.abspath(path2)                                        # STEP 30
os0.mkdir(path4)                                                        # STEP 31
os0.link(path3,path3)                                                   # STEP 32
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 33
file0 = opener0(path4,'w')                                              # STEP 34
os0.close(fd0)                                                          # STEP 35
os0.link(path4,path4)                                                   # STEP 36
file0 = opener0(path2,'r')                                              # STEP 37
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 38
file0.flush()                                                           # STEP 39
os0.close(fd0)                                                          # STEP 40
os0.link(path2,path2)                                                   # STEP 41
result = os0.path.lexists(path4)                                        # STEP 42
str1 += 'o'                                                             # STEP 43
result = sorted(os0.listdir(path3))                                     # STEP 44
os0.rename(path2,path3)                                                 # STEP 45
result = os0.path.lexists(path2)                                        # STEP 46
os0.rename(path2,path4)                                                 # STEP 47
result = os0.path.dirname(path3)                                        # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
os0.link(path2,path2)                                                   # STEP 50
result = file0.readline()                                               # STEP 51
os0.rmdir(path2)                                                        # STEP 52
component0 = "g"                                                        # STEP 53
os0.rename(path2,path4)                                                 # STEP 54
path0 = "/Volumes/ramdisk/test"                                         # STEP 55
result = sorted(os0.listdir(path4))                                     # STEP 56
os0.link(path2,path0)                                                   # STEP 57
file0.next()                                                            # STEP 58
result = os0.path.lexists(path2)                                        # STEP 59
path3 = "/Volumes/ramdisk/test"                                         # STEP 60
file0.flush()                                                           # STEP 61
os0.close(fd0)                                                          # STEP 62
result = sorted(os0.listdir(path2))                                     # STEP 63
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 64
os0.link(path2,path3)                                                   # STEP 65
bytes2 += 1                                                             # STEP 66
result = file0.read()                                                   # STEP 67
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10831e248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 50
STOPPING TESTING DUE TO TIMEOUT
42.5120772947 PERCENT COVERED
60.32842803 TOTAL RUNTIME
359 EXECUTED
35688 TOTAL TEST OPERATIONS
42.3774995804 TIME SPENT EXECUTING TEST OPERATIONS
15.3787202835 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0244569778442 TIME SPENT CHECKING PROPERTIES
42.4019565582 TOTAL TIME SPENT RUNNING SUT
1.06441187859 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
6 FAILED
0 REPEATS OF FAILURES
6 ACTUAL DISTINCT FAILURES

FAILURE 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes1 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
os0.link(path4,path4)                                                    # STEP 3
component0 = "h"                                                         # STEP 4
os0.link(path4,path4)                                                    # STEP 5
component2 = "lambda"                                                    # STEP 6
result = os0.path.exists(path4)                                          # STEP 7
result = os0.path.isabs(path4)                                           # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
os0.remove(path4)                                                       # STEP 10
str3 = ""                                                               # STEP 11
path4 += "/" + component0                                               # STEP 12
str3 += 'f'                                                             # STEP 13
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 14
str3 = ""                                                               # STEP 15
bytes0 = 0                                                              # STEP 16
os0.path.getsize(path4)                                                 # STEP 17
bytes4 = 0                                                              # STEP 18
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 19
str3 += " "                                                             # STEP 20
os0.write(fd0,str3)                                                     # STEP 21
result = os0.readlink(path4)                                            # STEP 22
bytes4 += 1                                                             # STEP 23
str3 += " "                                                             # STEP 24
os0.rmdir(path4)                                                        # STEP 25
file0 = opener0(path4)                                                  # STEP 26
os0.write(fd0,str3)                                                     # STEP 27
result = os0.path.isdir(path4)                                          # STEP 28
result = file0.readline()                                               # STEP 29
result = file0.readlines()                                              # STEP 30
str3 += 'o'                                                             # STEP 31
result = file0.readline()                                               # STEP 32
bytes4 += 1                                                             # STEP 33
str3 += " "                                                             # STEP 34
os0.link(path4,path4)                                                   # STEP 35
result = os0.path.exists(path4)                                         # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
stat3 = os0.fstat(fd0)                                                  # STEP 38
result = os0.path.exists(path2)                                         # STEP 39
os0.remove(path4)                                                       # STEP 40
file0.write(str3)                                                       # STEP 41
result = file0.read()                                                   # STEP 42
file0.write(str3)                                                       # STEP 43
file0.next()                                                            # STEP 44
str3 += " "                                                             # STEP 45
str3 += " "                                                             # STEP 46
os0.rmdir(path4)                                                        # STEP 47
os0.write(fd0,str3)                                                     # STEP 48
stat4 = os0.stat(path4)                                                 # STEP 49
os0.close(fd0)                                                          # STEP 50
str2 = ""                                                               # STEP 51
result = os0.readlink(path4)                                            # STEP 52
path3 = "/Volumes/ramdisk/test"                                         # STEP 53
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 54
os0.link(path3,path2)                                                   # STEP 55
result = file0.read(bytes0)                                             # STEP 56
bytes1 += 1                                                             # STEP 57
file0.next()                                                            # STEP 58
bytes0 = 0                                                              # STEP 59
result = file0.readline(bytes1)                                         # STEP 60
result = file0.readline()                                               # STEP 61
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (  o   ) ',), <traceback object at 0x10a5159e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes2 = 0                                                               # STEP 1
os0 = newFakeOS()                                                        # STEP 2
os0.mkdir(path2)                                                         # STEP 3
os0.mkdir(path2)                                                         # STEP 4
result = sorted(os0.listdir(path2))                                      # STEP 5
component2 = "epsilon"                                                   # STEP 6
bytes1 = 0                                                               # STEP 7
bytes0 = 0                                                               # STEP 8
os0.remove(path2)                                                        # STEP 9
path2 += "/" + component2                                               # STEP 10
os0.mkdir(path2)                                                        # STEP 11
result = os0.path.exists(path2)                                         # STEP 12
result = os0.path.dirname(path2)                                        # STEP 13
os0.mkdir(path2)                                                        # STEP 14
str2 = ""                                                               # STEP 15
str2 += " "                                                             # STEP 16
result = os0.path.isdir(path2)                                          # STEP 17
result = os0.path.exists(path2)                                         # STEP 18
str2 += " "                                                             # STEP 19
component1 = "alpha"                                                    # STEP 20
result = sorted(os0.listdir(path2))                                     # STEP 21
path2 += "/" + component1                                               # STEP 22
str1 = ""                                                               # STEP 23
str1 += 'l'                                                             # STEP 24
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 25
component2 = "gamma"                                                    # STEP 26
result = os0.path.dirname(path2)                                        # STEP 27
str2 += " "                                                             # STEP 28
str1 += " "                                                             # STEP 29
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 30
path2 += "/" + component1                                               # STEP 31
path2 += "/" + component2                                               # STEP 32
path0 = "/Volumes/ramdisk/test"                                         # STEP 33
result = os0.path.exists(path2)                                         # STEP 34
result = os0.path.dirname(path2)                                        # STEP 35
result = os0.path.abspath(path2)                                        # STEP 36
os0.rename(path2,path0)                                                 # STEP 37
os0.close(fd0)                                                          # STEP 38
os0.rename(path2,path0)                                                 # STEP 39
path0 += "/" + component2                                               # STEP 40
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 41
result = os0.path.exists(path2)                                         # STEP 42
result = os0.path.dirname(path0)                                        # STEP 43
os0.rename(path2,path0)                                                 # STEP 44
os0.close(fd0)                                                          # STEP 45
opener0 = newFakeOpener(os0)                                            # STEP 46
os0.rename(path0,path2)                                                 # STEP 47
os0.mkdir(path2)                                                        # STEP 48
bytes4 = 0                                                              # STEP 49
os0.close(fd0)                                                          # STEP 50
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 51
result = os0.path.isdir(path2)                                          # STEP 52
file0 = opener0(path0,'a')                                              # STEP 53
result = os0.path.abspath(path0)                                        # STEP 54
file0.next()                                                            # STEP 55
stat1 = os0.stat(path2)                                                 # STEP 56
result = file0.readline()                                               # STEP 57
result = os0.path.exists(path0)                                         # STEP 58
result = os0.path.dirname(path2)                                        # STEP 59
str0 = ""                                                               # STEP 60
file0.next()                                                            # STEP 61
str1 += 'p'                                                             # STEP 62
result = file0.readline()                                               # STEP 63
result = file0.readline()                                               # STEP 64
result = os0.read(fd0,bytes0)                                           # STEP 65
result = os0.path.isdir(path0)                                          # STEP 66
str1 += 'x'                                                             # STEP 67
os0.mkdir(path0)                                                        # STEP 68
str1 += " "                                                             # STEP 69
os0.remove(path0)                                                       # STEP 70
result = os0.path.abspath(path2)                                        # STEP 71
result = os0.path.isdir(path2)                                          # STEP 72
result = os0.read(fd0,bytes1)                                           # STEP 73
result = sorted(os0.listdir(path2))                                     # STEP 74
os0.remove(path0)                                                       # STEP 75
result = sorted(os0.listdir(path2))                                     # STEP 76
os0.rename(path2,path0)                                                 # STEP 77
result = os0.read(fd0,bytes2)                                           # STEP 78
path0 = "/Volumes/ramdisk/test"                                         # STEP 79
result = file0.readline()                                               # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10317aef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
bytes3 = 0                                                               # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
component3 = "g"                                                         # STEP 3
str0 = ""                                                                # STEP 4
bytes3 += 1                                                              # STEP 5
str0 += 'u'                                                              # STEP 6
str0 += 'd'                                                              # STEP 7
bytes3 += 1                                                              # STEP 8
bytes0 = 0                                                               # STEP 9
bytes2 = 0                                                              # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.islink(path2)                                         # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
file0 = opener0(path2)                                                  # STEP 14
file0 = opener0(path2,'w')                                              # STEP 15
os0.link(path2,path2)                                                   # STEP 16
component1 = "epsilon"                                                  # STEP 17
bytes4 = 0                                                              # STEP 18
path2 += "/" + component1                                               # STEP 19
result = os0.path.islink(path2)                                         # STEP 20
stat2 = os0.lstat(path2)                                                # STEP 21
component1 = "f"                                                        # STEP 22
bytes2 += 1                                                             # STEP 23
stat2 = os0.lstat(path2)                                                # STEP 24
str3 = ""                                                               # STEP 25
path4 = "/Volumes/ramdisk/test"                                         # STEP 26
path3 = "/Volumes/ramdisk/test"                                         # STEP 27
bytes2 += 1                                                             # STEP 28
stat4 = os0.lstat(path2)                                                # STEP 29
bytes4 += 1                                                             # STEP 30
os0.link(path2,path4)                                                   # STEP 31
str0 = ""                                                               # STEP 32
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 33
result = os0.path.isfile(path2)                                         # STEP 34
file0 = opener0(path4,'w')                                              # STEP 35
stat4 = os0.stat(path2)                                                 # STEP 36
os0.close(fd0)                                                          # STEP 37
os0.rename(path2,path3)                                                 # STEP 38
stat3 = os0.fstat(fd0)                                                  # STEP 39
file0 = opener0(path4)                                                  # STEP 40
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
file0 = opener0(path2,'r')                                              # STEP 42
str0 += 'b'                                                             # STEP 43
component4 = "e"                                                        # STEP 44
file0.seek(bytes3)                                                      # STEP 45
result = os0.read(fd0,bytes0)                                           # STEP 46
file0.truncate()                                                        # STEP 47
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x105cb4fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
os0 = newFakeOS()                                                        # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
os0.mkdir(path1)                                                         # STEP 2
bytes1 = 0                                                               # STEP 3
os0.remove(path1)                                                        # STEP 4
str1 = ""                                                                # STEP 5
os0.mkdir(path1)                                                         # STEP 6
result = os0.readlink(path1)                                             # STEP 7
str1 += " "                                                              # STEP 8
os0.link(path1,path1)                                                    # STEP 9
os0.mkdir(path1)                                                        # STEP 10
component4 = "e"                                                        # STEP 11
result = sorted(os0.listdir(path1))                                     # STEP 12
os0.remove(path1)                                                       # STEP 13
component0 = "c"                                                        # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
os0.mkdir(path1)                                                        # STEP 16
result = os0.path.lexists(path1)                                        # STEP 17
os0.link(path1,path1)                                                   # STEP 18
os0.link(path1,path1)                                                   # STEP 19
os0.mkdir(path1)                                                        # STEP 20
result = os0.path.islink(path1)                                         # STEP 21
component2 = "h"                                                        # STEP 22
os0.remove(path1)                                                       # STEP 23
component1 = "phi"                                                      # STEP 24
os0.link(path1,path1)                                                   # STEP 25
file0 = opener0(path1,'w')                                              # STEP 26
os0.mkdir(path1)                                                        # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
component3 = "h"                                                        # STEP 29
str1 += " "                                                             # STEP 30
result = os0.path.lexists(path1)                                        # STEP 31
os0.remove(path1)                                                       # STEP 32
result = os0.readlink(path1)                                            # STEP 33
os0.mkdir(path1)                                                        # STEP 34
result = os0.readlink(path1)                                            # STEP 35
file0 = opener0(path1)                                                  # STEP 36
result = os0.path.islink(path1)                                         # STEP 37
file0 = opener0(path1)                                                  # STEP 38
file0 = opener0(path1)                                                  # STEP 39
path1 += "/" + component2                                               # STEP 40
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 41
component2 = "h"                                                        # STEP 42
os0.link(path1,path1)                                                   # STEP 43
file0 = opener0(path1,'a')                                              # STEP 44
bytes0 = 0                                                              # STEP 45
result = os0.path.islink(path1)                                         # STEP 46
result = os0.path.islink(path1)                                         # STEP 47
path1 += "/" + component2                                               # STEP 48
os0.mkdir(path1)                                                        # STEP 49
os0.link(path1,path1)                                                   # STEP 50
str1 += " "                                                             # STEP 51
file0.next()                                                            # STEP 52
path1 += "/" + component0                                               # STEP 53
os0.link(path1,path1)                                                   # STEP 54
os0.mkdir(path1)                                                        # STEP 55
bytes4 = 0                                                              # STEP 56
result = file0.read()                                                   # STEP 57
result = os0.path.lexists(path1)                                        # STEP 58
result = os0.readlink(path1)                                            # STEP 59
result = os0.path.islink(path1)                                         # STEP 60
str1 += " "                                                             # STEP 61
result = os0.path.lexists(path1)                                        # STEP 62
file0.write(str1)                                                       # STEP 63
str1 += " "                                                             # STEP 64
result = sorted(os0.listdir(path1))                                     # STEP 65
result = file0.readline(bytes4)                                         # STEP 66
result = os0.path.lexists(path1)                                        # STEP 67
result = sorted(os0.listdir(path1))                                     # STEP 68
stat2 = os0.fstat(fd0)                                                  # STEP 69
os0.remove(path1)                                                       # STEP 70
result = os0.path.lexists(path1)                                        # STEP 71
result = os0.path.islink(path1)                                         # STEP 72
result = os0.readlink(path1)                                            # STEP 73
component0 = "gamma"                                                    # STEP 74
result = stat2.st_nlink                                                 # STEP 75
path1 += "/" + component1                                               # STEP 76
result = os0.readlink(path1)                                            # STEP 77
result = stat2.st_size                                                  # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (4) == (0) ',), <traceback object at 0x105d31c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "b"                                                         # STEP 1
component3 = "a"                                                         # STEP 2
os0 = newFakeOS()                                                        # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
os0.makedirs(path3)                                                      # STEP 5
bytes3 = 0                                                               # STEP 6
result = os0.path.lexists(path3)                                         # STEP 7
os0.link(path2,path2)                                                    # STEP 8
path3 += "/" + component1                                                # STEP 9
result = os0.path.isfile(path3)                                         # STEP 10
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
file0 = opener0(path2,'w')                                              # STEP 13
component1 = "lambda"                                                   # STEP 14
os0.link(path2,path3)                                                   # STEP 15
result = os0.path.lexists(path3)                                        # STEP 16
os0.symlink(path2,path3)                                                # STEP 17
path3 += "/" + component3                                               # STEP 18
file0 = opener0(path2,'a')                                              # STEP 19
result = os0.path.isfile(path3)                                         # STEP 20
file0 = opener0(path3)                                                  # STEP 21
os0.mkdir(path2)                                                        # STEP 22
result = os0.path.lexists(path3)                                        # STEP 23
os0.close(fd0)                                                          # STEP 24
result = os0.path.isdir(path2)                                          # STEP 25
result = os0.path.dirname(path3)                                        # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
component0 = "g"                                                        # STEP 28
result = os0.path.isdir(path2)                                          # STEP 29
file0 = opener0(path2,'a')                                              # STEP 30
os0.symlink(path2,path3)                                                # STEP 31
file0 = opener0(path2,'w')                                              # STEP 32
os0.rmdir(path3)                                                        # STEP 33
os0.rmdir(path3)                                                        # STEP 34
bytes0 = 0                                                              # STEP 35
os0.rmdir(path3)                                                        # STEP 36
file0 = opener0(path3,'w')                                              # STEP 37
stat2 = os0.stat(path3)                                                 # STEP 38
os0.close(fd0)                                                          # STEP 39
os0.path.getsize(path3)                                                 # STEP 40
str3 = ""                                                               # STEP 41
file0 = opener0(path2)                                                  # STEP 42
file0 = opener0(path3)                                                  # STEP 43
bytes4 = 0                                                              # STEP 44
file0 = opener0(path2)                                                  # STEP 45
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 46
stat0 = os0.stat(path3)                                                 # STEP 47
stat3 = os0.stat(path3)                                                 # STEP 48
os0.makedirs(path3)                                                     # STEP 49
os0.link(path2,path2)                                                   # STEP 50
os0.symlink(path2,path2)                                                # STEP 51
path3 = "/Volumes/ramdisk/test"                                         # STEP 52
path3 += "/" + component3                                               # STEP 53
os0.mkdir(path2)                                                        # STEP 54
file0 = opener0(path3,'a')                                              # STEP 55
os0.makedirs(path3)                                                     # STEP 56
os0.link(path2,path3)                                                   # STEP 57
bytes2 = 0                                                              # STEP 58
path1 = "/Volumes/ramdisk/test"                                         # STEP 59
file0.write(str3)                                                       # STEP 60
os0.rmdir(path3)                                                        # STEP 61
bytes1 = 0                                                              # STEP 62
result = os0.path.isdir(path2)                                          # STEP 63
str4 = ""                                                               # STEP 64
str3 += 'n'                                                             # STEP 65
file0.flush()                                                           # STEP 66
os0.symlink(path2,path1)                                                # STEP 67
file0.write(str4)                                                       # STEP 68
result = os0.path.lexists(path3)                                        # STEP 69
os0.makedirs(path2)                                                     # STEP 70
os0.link(path3,path1)                                                   # STEP 71
path2 = "/Volumes/ramdisk/test"                                         # STEP 72
result = os0.path.isfile(path3)                                         # STEP 73
path1 = "/Volumes/ramdisk/test"                                         # STEP 74
result = file0.read(bytes1)                                             # STEP 75
bytes1 = 0                                                              # STEP 76
os0.link(path3,path3)                                                   # STEP 77
os0.makedirs(path1)                                                     # STEP 78
os0.mkdir(path1)                                                        # STEP 79
os0.rmdir(path3)                                                        # STEP 80
str3 += 'q'                                                             # STEP 81
str4 += 'c'                                                             # STEP 82
file0.write(str4)                                                       # STEP 83
path3 += "/" + component1                                               # STEP 84
result = file0.read()                                                   # STEP 85
str0 = ""                                                               # STEP 86
component2 = "epsilon"                                                  # STEP 87
os0.mkdir(path3)                                                        # STEP 88
os0.link(path3,path2)                                                   # STEP 89
os0.write(fd0,str0)                                                     # STEP 90
os0.write(fd0,str3)                                                     # STEP 91
component1 = "alpha"                                                    # STEP 92
path2 = "/Volumes/ramdisk/test"                                         # STEP 93
os0.rmdir(path3)                                                        # STEP 94
file0.flush()                                                           # STEP 95
os0.rmdir(path3)                                                        # STEP 96
path2 += "/" + component2                                               # STEP 97
component3 = "phi"                                                      # STEP 98
result = file0.read(bytes0)                                             # STEP 99
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1051dd908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 5
bytes2 = 0                                                               # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes2 += 1                                                              # STEP 2
component2 = "d"                                                         # STEP 3
bytes2 += 1                                                              # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
bytes4 = 0                                                               # STEP 6
component1 = "c"                                                         # STEP 7
path4 = "/Volumes/ramdisk/test"                                          # STEP 8
bytes3 = 0                                                               # STEP 9
component4 = "c"                                                        # STEP 10
str1 = ""                                                               # STEP 11
os0 = newFakeOS()                                                       # STEP 12
result = sorted(os0.listdir(path2))                                     # STEP 13
result = os0.path.lexists(path4)                                        # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
os0.mkdir(path2)                                                        # STEP 16
result = sorted(os0.listdir(path2))                                     # STEP 17
os0.mkdir(path2)                                                        # STEP 18
os0.link(path2,path4)                                                   # STEP 19
os0.link(path4,path2)                                                   # STEP 20
path2 += "/" + component2                                               # STEP 21
file0 = opener0(path2)                                                  # STEP 22
os0.link(path4,path4)                                                   # STEP 23
result = os0.path.lexists(path2)                                        # STEP 24
file0 = opener0(path4)                                                  # STEP 25
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 26
os0.rename(path2,path3)                                                 # STEP 27
os0.rename(path2,path3)                                                 # STEP 28
os0.link(path3,path3)                                                   # STEP 29
result = os0.path.abspath(path2)                                        # STEP 30
os0.mkdir(path4)                                                        # STEP 31
os0.link(path3,path3)                                                   # STEP 32
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 33
file0 = opener0(path4,'w')                                              # STEP 34
os0.close(fd0)                                                          # STEP 35
os0.link(path4,path4)                                                   # STEP 36
file0 = opener0(path2,'r')                                              # STEP 37
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 38
file0.flush()                                                           # STEP 39
os0.close(fd0)                                                          # STEP 40
os0.link(path2,path2)                                                   # STEP 41
result = os0.path.lexists(path4)                                        # STEP 42
str1 += 'o'                                                             # STEP 43
result = sorted(os0.listdir(path3))                                     # STEP 44
os0.rename(path2,path3)                                                 # STEP 45
result = os0.path.lexists(path2)                                        # STEP 46
os0.rename(path2,path4)                                                 # STEP 47
result = os0.path.dirname(path3)                                        # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
os0.link(path2,path2)                                                   # STEP 50
result = file0.readline()                                               # STEP 51
os0.rmdir(path2)                                                        # STEP 52
component0 = "g"                                                        # STEP 53
os0.rename(path2,path4)                                                 # STEP 54
path0 = "/Volumes/ramdisk/test"                                         # STEP 55
result = sorted(os0.listdir(path4))                                     # STEP 56
os0.link(path2,path0)                                                   # STEP 57
file0.next()                                                            # STEP 58
result = os0.path.lexists(path2)                                        # STEP 59
path3 = "/Volumes/ramdisk/test"                                         # STEP 60
file0.flush()                                                           # STEP 61
os0.close(fd0)                                                          # STEP 62
result = sorted(os0.listdir(path2))                                     # STEP 63
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 64
os0.link(path2,path3)                                                   # STEP 65
bytes2 += 1                                                             # STEP 66
result = file0.read()                                                   # STEP 67
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10831e248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
1176 BRANCHES COVERED
903 STATEMENTS COVERED
