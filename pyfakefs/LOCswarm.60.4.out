Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4001.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10273fd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 77 steps

SAVING TEST AS failure.4001.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "delta"                                                     # STEP 1
str3 = ""                                                                # STEP 2
str3 += " "                                                              # STEP 3
os0 = newFakeOS()                                                        # STEP 4
os0.makedirs(path0)                                                      # STEP 5
result = os0.path.isfile(path0)                                          # STEP 6
component2 = "lambda"                                                    # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
str3 = ""                                                                # STEP 9
component4 = "delta"                                                    # STEP 10
str3 += " "                                                             # STEP 11
result = os0.path.isabs(path1)                                          # STEP 12
os0.makedirs(path1)                                                     # STEP 13
os0.makedirs(path1)                                                     # STEP 14
result = os0.path.isfile(path0)                                         # STEP 15
opener0 = newFakeOpener(os0)                                            # STEP 16
component0 = "lambda"                                                   # STEP 17
os0.makedirs(path1)                                                     # STEP 18
os0.link(path1,path0)                                                   # STEP 19
os0.makedirs(path1)                                                     # STEP 20
component3 = "c"                                                        # STEP 21
str3 += 'q'                                                             # STEP 22
os0.makedirs(path1)                                                     # STEP 23
os0.symlink(path1,path0)                                                # STEP 24
str3 = ""                                                               # STEP 25
os0.makedirs(path0)                                                     # STEP 26
path0 += "/" + component4                                               # STEP 27
path0 += "/" + component4                                               # STEP 28
os0.makedirs(path0)                                                     # STEP 29
stat2 = os0.lstat(path0)                                                # STEP 30
str0 = ""                                                               # STEP 31
os0.symlink(path1,path0)                                                # STEP 32
stat4 = os0.lstat(path0)                                                # STEP 33
stat3 = os0.stat(path0)                                                 # STEP 34
os0.link(path1,path0)                                                   # STEP 35
result = os0.path.isabs(path0)                                          # STEP 36
result = os0.path.isabs(path1)                                          # STEP 37
path0 += "/" + component3                                               # STEP 38
stat0 = os0.stat(path0)                                                 # STEP 39
os0.link(path0,path1)                                                   # STEP 40
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 41
path1 += "/" + component4                                               # STEP 42
os0.close(fd0)                                                          # STEP 43
bytes3 = 0                                                              # STEP 44
stat0 = os0.lstat(path1)                                                # STEP 45
os0.symlink(path0,path0)                                                # STEP 46
result = os0.path.isabs(path1)                                          # STEP 47
bytes1 = 0                                                              # STEP 48
os0.symlink(path0,path0)                                                # STEP 49
str4 = ""                                                               # STEP 50
file0 = opener0(path1)                                                  # STEP 51
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 52
os0.makedirs(path1)                                                     # STEP 53
str0 += 'd'                                                             # STEP 54
os0.symlink(path0,path0)                                                # STEP 55
os0.makedirs(path0)                                                     # STEP 56
path1 += "/" + component4                                               # STEP 57
stat1 = os0.stat(path0)                                                 # STEP 58
os0.symlink(path1,path1)                                                # STEP 59
os0.makedirs(path0)                                                     # STEP 60
os0.link(path0,path0)                                                   # STEP 61
os0.link(path1,path0)                                                   # STEP 62
bytes4 = 0                                                              # STEP 63
os0.makedirs(path1)                                                     # STEP 64
str0 += 'j'                                                             # STEP 65
result = os0.path.isabs(path1)                                          # STEP 66
os0.link(path1,path1)                                                   # STEP 67
os0.makedirs(path0)                                                     # STEP 68
result = os0.read(fd0,bytes4)                                           # STEP 69
result = stat1.st_size                                                  # STEP 70
str1 = ""                                                               # STEP 71
file0 = opener0(path0)                                                  # STEP 72
result = os0.read(fd0,bytes3)                                           # STEP 73
str1 += 'm'                                                             # STEP 74
path0 = "/Volumes/ramdisk/test"                                         # STEP 75
file0.truncate()                                                        # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x105136710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #182 STEP #16 (0:00:30.000821) Fri Jul 21 22:33:45 2017 [ 900 stmts 1170 branches ] 18093 TOTAL ACTIONS (603.083498124/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 98
STOPPING TESTING DUE TO TIMEOUT
42.2519509476 PERCENT COVERED
60.3056271076 TOTAL RUNTIME
365 EXECUTED
36475 TOTAL TEST OPERATIONS
42.3130459785 TIME SPENT EXECUTING TEST OPERATIONS
15.8757634163 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0243968963623 TIME SPENT CHECKING PROPERTIES
42.3374428749 TOTAL TIME SPENT RUNNING SUT
1.07211494446 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "delta"                                                     # STEP 1
str3 = ""                                                                # STEP 2
str3 += " "                                                              # STEP 3
os0 = newFakeOS()                                                        # STEP 4
os0.makedirs(path0)                                                      # STEP 5
result = os0.path.isfile(path0)                                          # STEP 6
component2 = "lambda"                                                    # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
str3 = ""                                                                # STEP 9
component4 = "delta"                                                    # STEP 10
str3 += " "                                                             # STEP 11
result = os0.path.isabs(path1)                                          # STEP 12
os0.makedirs(path1)                                                     # STEP 13
os0.makedirs(path1)                                                     # STEP 14
result = os0.path.isfile(path0)                                         # STEP 15
opener0 = newFakeOpener(os0)                                            # STEP 16
component0 = "lambda"                                                   # STEP 17
os0.makedirs(path1)                                                     # STEP 18
os0.link(path1,path0)                                                   # STEP 19
os0.makedirs(path1)                                                     # STEP 20
component3 = "c"                                                        # STEP 21
str3 += 'q'                                                             # STEP 22
os0.makedirs(path1)                                                     # STEP 23
os0.symlink(path1,path0)                                                # STEP 24
str3 = ""                                                               # STEP 25
os0.makedirs(path0)                                                     # STEP 26
path0 += "/" + component4                                               # STEP 27
path0 += "/" + component4                                               # STEP 28
os0.makedirs(path0)                                                     # STEP 29
stat2 = os0.lstat(path0)                                                # STEP 30
str0 = ""                                                               # STEP 31
os0.symlink(path1,path0)                                                # STEP 32
stat4 = os0.lstat(path0)                                                # STEP 33
stat3 = os0.stat(path0)                                                 # STEP 34
os0.link(path1,path0)                                                   # STEP 35
result = os0.path.isabs(path0)                                          # STEP 36
result = os0.path.isabs(path1)                                          # STEP 37
path0 += "/" + component3                                               # STEP 38
stat0 = os0.stat(path0)                                                 # STEP 39
os0.link(path0,path1)                                                   # STEP 40
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 41
path1 += "/" + component4                                               # STEP 42
os0.close(fd0)                                                          # STEP 43
bytes3 = 0                                                              # STEP 44
stat0 = os0.lstat(path1)                                                # STEP 45
os0.symlink(path0,path0)                                                # STEP 46
result = os0.path.isabs(path1)                                          # STEP 47
bytes1 = 0                                                              # STEP 48
os0.symlink(path0,path0)                                                # STEP 49
str4 = ""                                                               # STEP 50
file0 = opener0(path1)                                                  # STEP 51
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 52
os0.makedirs(path1)                                                     # STEP 53
str0 += 'd'                                                             # STEP 54
os0.symlink(path0,path0)                                                # STEP 55
os0.makedirs(path0)                                                     # STEP 56
path1 += "/" + component4                                               # STEP 57
stat1 = os0.stat(path0)                                                 # STEP 58
os0.symlink(path1,path1)                                                # STEP 59
os0.makedirs(path0)                                                     # STEP 60
os0.link(path0,path0)                                                   # STEP 61
os0.link(path1,path0)                                                   # STEP 62
bytes4 = 0                                                              # STEP 63
os0.makedirs(path1)                                                     # STEP 64
str0 += 'j'                                                             # STEP 65
result = os0.path.isabs(path1)                                          # STEP 66
os0.link(path1,path1)                                                   # STEP 67
os0.makedirs(path0)                                                     # STEP 68
result = os0.read(fd0,bytes4)                                           # STEP 69
result = stat1.st_size                                                  # STEP 70
str1 = ""                                                               # STEP 71
file0 = opener0(path0)                                                  # STEP 72
result = os0.read(fd0,bytes3)                                           # STEP 73
str1 += 'm'                                                             # STEP 74
path0 = "/Volumes/ramdisk/test"                                         # STEP 75
file0.truncate()                                                        # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x105136710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1171 BRANCHES COVERED
900 STATEMENTS COVERED
