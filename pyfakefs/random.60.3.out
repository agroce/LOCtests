Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.3975.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a7ff200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 96 steps

SAVING TEST AS failure.3975.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
component3 = "phi"                                                       # STEP 1
component2 = "h"                                                         # STEP 2
component0 = "a"                                                         # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
os0 = newFakeOS()                                                        # STEP 5
opener0 = newFakeOpener(os0)                                             # STEP 6
result = os0.path.dirname(path2)                                         # STEP 7
component1 = "alpha"                                                     # STEP 8
result = os0.path.isfile(path2)                                          # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
os0.link(path0,path0)                                                   # STEP 11
os0.remove(path0)                                                       # STEP 12
path0 += "/" + component2                                               # STEP 13
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 14
file0 = opener0(path2,'a')                                              # STEP 15
result = os0.readlink(path2)                                            # STEP 16
component4 = "epsilon"                                                  # STEP 17
os0.makedirs(path2)                                                     # STEP 18
os0.remove(path2)                                                       # STEP 19
os0.link(path0,path0)                                                   # STEP 20
bytes0 = 0                                                              # STEP 21
component2 = "b"                                                        # STEP 22
result = os0.readlink(path2)                                            # STEP 23
stat3 = os0.stat(path0)                                                 # STEP 24
os0.mkdir(path0)                                                        # STEP 25
result = os0.path.islink(path0)                                         # STEP 26
stat1 = os0.lstat(path0)                                                # STEP 27
result = os0.path.islink(path0)                                         # STEP 28
os0.path.getsize(path0)                                                 # STEP 29
result = os0.read(fd0,bytes0)                                           # STEP 30
result = os0.path.isdir(path2)                                          # STEP 31
result = sorted(os0.listdir(path2))                                     # STEP 32
str4 = ""                                                               # STEP 33
bytes3 = 0                                                              # STEP 34
str4 += 's'                                                             # STEP 35
str4 += 'j'                                                             # STEP 36
stat0 = os0.fstat(fd0)                                                  # STEP 37
result = stat0.st_size                                                  # STEP 38
os0.rmdir(path0)                                                        # STEP 39
result = os0.path.isfile(path2)                                         # STEP 40
result = os0.path.islink(path0)                                         # STEP 41
os0.symlink(path2,path2)                                                # STEP 42
os0.symlink(path0,path0)                                                # STEP 43
os0.close(fd0)                                                          # STEP 44
result = os0.path.exists(path2)                                         # STEP 45
os0.mkdir(path0)                                                        # STEP 46
str0 = ""                                                               # STEP 47
bytes0 = 0                                                              # STEP 48
result = os0.path.lexists(path2)                                        # STEP 49
result = os0.path.exists(path0)                                         # STEP 50
str0 += 'h'                                                             # STEP 51
os0.write(fd0,str0)                                                     # STEP 52
result = os0.path.dirname(path2)                                        # STEP 53
result = os0.path.exists(path2)                                         # STEP 54
str4 += 'k'                                                             # STEP 55
str1 = ""                                                               # STEP 56
str4 += 'n'                                                             # STEP 57
str1 += 'h'                                                             # STEP 58
str0 += 'y'                                                             # STEP 59
str1 += 'g'                                                             # STEP 60
str1 += 'e'                                                             # STEP 61
path2 = "/Volumes/ramdisk/test"                                         # STEP 62
bytes4 = 0                                                              # STEP 63
str0 += 'p'                                                             # STEP 64
path0 += "/" + component4                                               # STEP 65
component4 = "b"                                                        # STEP 66
path2 += "/" + component0                                               # STEP 67
str0 += 'w'                                                             # STEP 68
str0 += 'i'                                                             # STEP 69
os0.link(path0,path2)                                                   # STEP 70
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 71
os0.link(path2,path0)                                                   # STEP 72
os0.makedirs(path0)                                                     # STEP 73
str0 += 'l'                                                             # STEP 74
result = stat0.st_nlink                                                 # STEP 75
file0 = opener0(path2,'r')                                              # STEP 76
file0 = opener0(path2,'w')                                              # STEP 77
result = os0.path.isdir(path0)                                          # STEP 78
path0 += "/" + component2                                               # STEP 79
component0 = "a"                                                        # STEP 80
str1 += " "                                                             # STEP 81
str4 += 'h'                                                             # STEP 82
str0 += 'x'                                                             # STEP 83
path2 += "/" + component1                                               # STEP 84
str1 += 'i'                                                             # STEP 85
str1 += 't'                                                             # STEP 86
result = os0.path.dirname(path0)                                        # STEP 87
str1 += 'q'                                                             # STEP 88
result = os0.read(fd0,bytes3)                                           # STEP 89
str4 += 'i'                                                             # STEP 90
str4 += 'i'                                                             # STEP 91
str1 += 'd'                                                             # STEP 92
str0 += 'j'                                                             # STEP 93
str0 += " "                                                             # STEP 94
result = file0.readline(bytes3)                                         # STEP 95
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1076a13b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (hvkiaylod) == () ',), <traceback object at 0x1089ba290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 95 steps

SAVING TEST AS failure.3975.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "d"                                                         # STEP 0
component0 = "alpha"                                                     # STEP 1
component4 = "f"                                                         # STEP 2
str4 = ""                                                                # STEP 3
component1 = "delta"                                                     # STEP 4
component2 = "lambda"                                                    # STEP 5
str4 += 'e'                                                              # STEP 6
str4 += 'k'                                                              # STEP 7
str4 += 'd'                                                              # STEP 8
str4 += 'u'                                                              # STEP 9
str4 += 'e'                                                             # STEP 10
str4 += 'r'                                                             # STEP 11
str4 += 'f'                                                             # STEP 12
str4 += 'c'                                                             # STEP 13
bytes4 = 0                                                              # STEP 14
str4 += 's'                                                             # STEP 15
str3 = ""                                                               # STEP 16
os0 = newFakeOS()                                                       # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
str3 += 'h'                                                             # STEP 19
str4 += 'o'                                                             # STEP 20
str4 += 'o'                                                             # STEP 21
path0 = "/Volumes/ramdisk/test"                                         # STEP 22
str3 += 'v'                                                             # STEP 23
path4 = "/Volumes/ramdisk/test"                                         # STEP 24
os0.symlink(path4,path0)                                                # STEP 25
str3 += 'k'                                                             # STEP 26
str3 += 'i'                                                             # STEP 27
path4 += "/" + component3                                               # STEP 28
str4 += 'e'                                                             # STEP 29
path4 += "/" + component3                                               # STEP 30
bytes0 = 0                                                              # STEP 31
result = os0.path.islink(path4)                                         # STEP 32
bytes4 += 1                                                             # STEP 33
file0 = opener0(path0,'a')                                              # STEP 34
str4 += 'u'                                                             # STEP 35
str4 = ""                                                               # STEP 36
str1 = ""                                                               # STEP 37
os0.link(path4,path4)                                                   # STEP 38
str1 += 'z'                                                             # STEP 39
str3 += 'a'                                                             # STEP 40
str1 += 'm'                                                             # STEP 41
str1 += 'u'                                                             # STEP 42
os0.link(path4,path0)                                                   # STEP 43
path0 += "/" + component2                                               # STEP 44
str3 += 'y'                                                             # STEP 45
stat0 = os0.stat(path4)                                                 # STEP 46
bytes1 = 0                                                              # STEP 47
str1 += 'o'                                                             # STEP 48
str4 += " "                                                             # STEP 49
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 50
str1 += 'e'                                                             # STEP 51
str4 += 'w'                                                             # STEP 52
stat2 = os0.lstat(path0)                                                # STEP 53
stat0 = os0.stat(path0)                                                 # STEP 54
os0.symlink(path0,path0)                                                # STEP 55
result = stat0.st_nlink                                                 # STEP 56
path4 += "/" + component0                                               # STEP 57
component3 = "d"                                                        # STEP 58
stat1 = os0.lstat(path0)                                                # STEP 59
file0 = opener0(path0,'r')                                              # STEP 60
component2 = "h"                                                        # STEP 61
str1 += 'm'                                                             # STEP 62
result = os0.path.isdir(path4)                                          # STEP 63
component0 = "e"                                                        # STEP 64
str1 += 'd'                                                             # STEP 65
str1 += 'c'                                                             # STEP 66
str3 += 'l'                                                             # STEP 67
str4 += 'p'                                                             # STEP 68
str3 += 'o'                                                             # STEP 69
bytes3 = 0                                                              # STEP 70
str4 += 'v'                                                             # STEP 71
os0.remove(path0)                                                       # STEP 72
str1 += 'o'                                                             # STEP 73
path1 = "/Volumes/ramdisk/test"                                         # STEP 74
file0.next()                                                            # STEP 75
str3 += 'd'                                                             # STEP 76
result = os0.path.lexists(path0)                                        # STEP 77
str1 += 's'                                                             # STEP 78
os0.path.getsize(path0)                                                 # STEP 79
path4 += "/" + component3                                               # STEP 80
bytes1 += 1                                                             # STEP 81
os0.symlink(path1,path1)                                                # STEP 82
str1 += 'y'                                                             # STEP 83
os0.symlink(path1,path0)                                                # STEP 84
str4 += 'k'                                                             # STEP 85
stat4 = os0.fstat(fd0)                                                  # STEP 86
str4 += 'b'                                                             # STEP 87
file0.next()                                                            # STEP 88
os0.symlink(path1,path1)                                                # STEP 89
os0.write(fd0,str3)                                                     # STEP 90
str3 += 'k'                                                             # STEP 91
os0.symlink(path4,path1)                                                # STEP 92
result = stat1.st_size                                                  # STEP 93
result = file0.read()                                                   # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (hvkiaylod) == () ',), <traceback object at 0x108e51758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #457 STEP #91 (0:00:30.000264) Fri Jul 21 22:23:58 2017 [ 901 stmts 1171 branches ] 45682 TOTAL ACTIONS (1522.71992488/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 39
STOPPING TESTING DUE TO TIMEOUT
42.6978818283 PERCENT COVERED
60.3652131557 TOTAL RUNTIME
906 EXECUTED
90530 TOTAL TEST OPERATIONS
52.3020687103 TIME SPENT EXECUTING TEST OPERATIONS
4.18021583557 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0535593032837 TIME SPENT CHECKING PROPERTIES
52.3556280136 TOTAL TIME SPENT RUNNING SUT
2.64936232567 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes2 = 0                                                               # STEP 0
component3 = "phi"                                                       # STEP 1
component2 = "h"                                                         # STEP 2
component0 = "a"                                                         # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
os0 = newFakeOS()                                                        # STEP 5
opener0 = newFakeOpener(os0)                                             # STEP 6
result = os0.path.dirname(path2)                                         # STEP 7
component1 = "alpha"                                                     # STEP 8
result = os0.path.isfile(path2)                                          # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
os0.link(path0,path0)                                                   # STEP 11
os0.remove(path0)                                                       # STEP 12
path0 += "/" + component2                                               # STEP 13
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 14
file0 = opener0(path2,'a')                                              # STEP 15
result = os0.readlink(path2)                                            # STEP 16
component4 = "epsilon"                                                  # STEP 17
os0.makedirs(path2)                                                     # STEP 18
os0.remove(path2)                                                       # STEP 19
os0.link(path0,path0)                                                   # STEP 20
bytes0 = 0                                                              # STEP 21
component2 = "b"                                                        # STEP 22
result = os0.readlink(path2)                                            # STEP 23
stat3 = os0.stat(path0)                                                 # STEP 24
os0.mkdir(path0)                                                        # STEP 25
result = os0.path.islink(path0)                                         # STEP 26
stat1 = os0.lstat(path0)                                                # STEP 27
result = os0.path.islink(path0)                                         # STEP 28
os0.path.getsize(path0)                                                 # STEP 29
result = os0.read(fd0,bytes0)                                           # STEP 30
result = os0.path.isdir(path2)                                          # STEP 31
result = sorted(os0.listdir(path2))                                     # STEP 32
str4 = ""                                                               # STEP 33
bytes3 = 0                                                              # STEP 34
str4 += 's'                                                             # STEP 35
str4 += 'j'                                                             # STEP 36
stat0 = os0.fstat(fd0)                                                  # STEP 37
result = stat0.st_size                                                  # STEP 38
os0.rmdir(path0)                                                        # STEP 39
result = os0.path.isfile(path2)                                         # STEP 40
result = os0.path.islink(path0)                                         # STEP 41
os0.symlink(path2,path2)                                                # STEP 42
os0.symlink(path0,path0)                                                # STEP 43
os0.close(fd0)                                                          # STEP 44
result = os0.path.exists(path2)                                         # STEP 45
os0.mkdir(path0)                                                        # STEP 46
str0 = ""                                                               # STEP 47
bytes0 = 0                                                              # STEP 48
result = os0.path.lexists(path2)                                        # STEP 49
result = os0.path.exists(path0)                                         # STEP 50
str0 += 'h'                                                             # STEP 51
os0.write(fd0,str0)                                                     # STEP 52
result = os0.path.dirname(path2)                                        # STEP 53
result = os0.path.exists(path2)                                         # STEP 54
str4 += 'k'                                                             # STEP 55
str1 = ""                                                               # STEP 56
str4 += 'n'                                                             # STEP 57
str1 += 'h'                                                             # STEP 58
str0 += 'y'                                                             # STEP 59
str1 += 'g'                                                             # STEP 60
str1 += 'e'                                                             # STEP 61
path2 = "/Volumes/ramdisk/test"                                         # STEP 62
bytes4 = 0                                                              # STEP 63
str0 += 'p'                                                             # STEP 64
path0 += "/" + component4                                               # STEP 65
component4 = "b"                                                        # STEP 66
path2 += "/" + component0                                               # STEP 67
str0 += 'w'                                                             # STEP 68
str0 += 'i'                                                             # STEP 69
os0.link(path0,path2)                                                   # STEP 70
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 71
os0.link(path2,path0)                                                   # STEP 72
os0.makedirs(path0)                                                     # STEP 73
str0 += 'l'                                                             # STEP 74
result = stat0.st_nlink                                                 # STEP 75
file0 = opener0(path2,'r')                                              # STEP 76
file0 = opener0(path2,'w')                                              # STEP 77
result = os0.path.isdir(path0)                                          # STEP 78
path0 += "/" + component2                                               # STEP 79
component0 = "a"                                                        # STEP 80
str1 += " "                                                             # STEP 81
str4 += 'h'                                                             # STEP 82
str0 += 'x'                                                             # STEP 83
path2 += "/" + component1                                               # STEP 84
str1 += 'i'                                                             # STEP 85
str1 += 't'                                                             # STEP 86
result = os0.path.dirname(path0)                                        # STEP 87
str1 += 'q'                                                             # STEP 88
result = os0.read(fd0,bytes3)                                           # STEP 89
str4 += 'i'                                                             # STEP 90
str4 += 'i'                                                             # STEP 91
str1 += 'd'                                                             # STEP 92
str0 += 'j'                                                             # STEP 93
str0 += " "                                                             # STEP 94
result = file0.readline(bytes3)                                         # STEP 95
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1076a13b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
component3 = "d"                                                         # STEP 0
component0 = "alpha"                                                     # STEP 1
component4 = "f"                                                         # STEP 2
str4 = ""                                                                # STEP 3
component1 = "delta"                                                     # STEP 4
component2 = "lambda"                                                    # STEP 5
str4 += 'e'                                                              # STEP 6
str4 += 'k'                                                              # STEP 7
str4 += 'd'                                                              # STEP 8
str4 += 'u'                                                              # STEP 9
str4 += 'e'                                                             # STEP 10
str4 += 'r'                                                             # STEP 11
str4 += 'f'                                                             # STEP 12
str4 += 'c'                                                             # STEP 13
bytes4 = 0                                                              # STEP 14
str4 += 's'                                                             # STEP 15
str3 = ""                                                               # STEP 16
os0 = newFakeOS()                                                       # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
str3 += 'h'                                                             # STEP 19
str4 += 'o'                                                             # STEP 20
str4 += 'o'                                                             # STEP 21
path0 = "/Volumes/ramdisk/test"                                         # STEP 22
str3 += 'v'                                                             # STEP 23
path4 = "/Volumes/ramdisk/test"                                         # STEP 24
os0.symlink(path4,path0)                                                # STEP 25
str3 += 'k'                                                             # STEP 26
str3 += 'i'                                                             # STEP 27
path4 += "/" + component3                                               # STEP 28
str4 += 'e'                                                             # STEP 29
path4 += "/" + component3                                               # STEP 30
bytes0 = 0                                                              # STEP 31
result = os0.path.islink(path4)                                         # STEP 32
bytes4 += 1                                                             # STEP 33
file0 = opener0(path0,'a')                                              # STEP 34
str4 += 'u'                                                             # STEP 35
str4 = ""                                                               # STEP 36
str1 = ""                                                               # STEP 37
os0.link(path4,path4)                                                   # STEP 38
str1 += 'z'                                                             # STEP 39
str3 += 'a'                                                             # STEP 40
str1 += 'm'                                                             # STEP 41
str1 += 'u'                                                             # STEP 42
os0.link(path4,path0)                                                   # STEP 43
path0 += "/" + component2                                               # STEP 44
str3 += 'y'                                                             # STEP 45
stat0 = os0.stat(path4)                                                 # STEP 46
bytes1 = 0                                                              # STEP 47
str1 += 'o'                                                             # STEP 48
str4 += " "                                                             # STEP 49
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 50
str1 += 'e'                                                             # STEP 51
str4 += 'w'                                                             # STEP 52
stat2 = os0.lstat(path0)                                                # STEP 53
stat0 = os0.stat(path0)                                                 # STEP 54
os0.symlink(path0,path0)                                                # STEP 55
result = stat0.st_nlink                                                 # STEP 56
path4 += "/" + component0                                               # STEP 57
component3 = "d"                                                        # STEP 58
stat1 = os0.lstat(path0)                                                # STEP 59
file0 = opener0(path0,'r')                                              # STEP 60
component2 = "h"                                                        # STEP 61
str1 += 'm'                                                             # STEP 62
result = os0.path.isdir(path4)                                          # STEP 63
component0 = "e"                                                        # STEP 64
str1 += 'd'                                                             # STEP 65
str1 += 'c'                                                             # STEP 66
str3 += 'l'                                                             # STEP 67
str4 += 'p'                                                             # STEP 68
str3 += 'o'                                                             # STEP 69
bytes3 = 0                                                              # STEP 70
str4 += 'v'                                                             # STEP 71
os0.remove(path0)                                                       # STEP 72
str1 += 'o'                                                             # STEP 73
path1 = "/Volumes/ramdisk/test"                                         # STEP 74
file0.next()                                                            # STEP 75
str3 += 'd'                                                             # STEP 76
result = os0.path.lexists(path0)                                        # STEP 77
str1 += 's'                                                             # STEP 78
os0.path.getsize(path0)                                                 # STEP 79
path4 += "/" + component3                                               # STEP 80
bytes1 += 1                                                             # STEP 81
os0.symlink(path1,path1)                                                # STEP 82
str1 += 'y'                                                             # STEP 83
os0.symlink(path1,path0)                                                # STEP 84
str4 += 'k'                                                             # STEP 85
stat4 = os0.fstat(fd0)                                                  # STEP 86
str4 += 'b'                                                             # STEP 87
file0.next()                                                            # STEP 88
os0.symlink(path1,path1)                                                # STEP 89
os0.write(fd0,str3)                                                     # STEP 90
str3 += 'k'                                                             # STEP 91
os0.symlink(path4,path1)                                                # STEP 92
result = stat1.st_size                                                  # STEP 93
result = file0.read()                                                   # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (hvkiaylod) == () ',), <traceback object at 0x108e51758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1184 BRANCHES COVERED
908 STATEMENTS COVERED
