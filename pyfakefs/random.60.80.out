Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5608.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (cehibwfgkabtndif) == () ',), <traceback object at 0x10a3c25f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 66 steps

SAVING TEST AS failure.5608.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "delta"                                                     # STEP 0
component0 = "h"                                                         # STEP 1
component3 = "delta"                                                     # STEP 2
component1 = "delta"                                                     # STEP 3
component4 = "lambda"                                                    # STEP 4
os0 = newFakeOS()                                                        # STEP 5
str3 = ""                                                                # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
opener0 = newFakeOpener(os0)                                             # STEP 8
str3 += 'c'                                                              # STEP 9
path2 += "/" + component1                                               # STEP 10
str3 += 'e'                                                             # STEP 11
component1 = "lambda"                                                   # STEP 12
result = os0.readlink(path2)                                            # STEP 13
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 14
str3 += 'h'                                                             # STEP 15
str3 += 'i'                                                             # STEP 16
str3 += 'b'                                                             # STEP 17
str3 += 'w'                                                             # STEP 18
str3 += 'f'                                                             # STEP 19
str3 += 'g'                                                             # STEP 20
result = os0.path.isabs(path2)                                          # STEP 21
str3 += 'k'                                                             # STEP 22
str3 += 'a'                                                             # STEP 23
str3 += 'b'                                                             # STEP 24
result = os0.path.abspath(path2)                                        # STEP 25
file0 = opener0(path2)                                                  # STEP 26
result = file0.read()                                                   # STEP 27
stat4 = os0.stat(path2)                                                 # STEP 28
str3 += 't'                                                             # STEP 29
os0.rmdir(path2)                                                        # STEP 30
result = os0.readlink(path2)                                            # STEP 31
stat3 = os0.stat(path2)                                                 # STEP 32
path2 += "/" + component2                                               # STEP 33
str3 += 'n'                                                             # STEP 34
str3 += 'd'                                                             # STEP 35
os0.makedirs(path2)                                                     # STEP 36
str3 += 'i'                                                             # STEP 37
str2 = ""                                                               # STEP 38
str3 += 'f'                                                             # STEP 39
os0.write(fd0,str3)                                                     # STEP 40
result = stat3.st_size                                                  # STEP 41
result = os0.path.isfile(path2)                                         # STEP 42
str2 += 's'                                                             # STEP 43
str2 += 'q'                                                             # STEP 44
component2 = "g"                                                        # STEP 45
str3 += 'n'                                                             # STEP 46
str3 += 'g'                                                             # STEP 47
str2 += 'w'                                                             # STEP 48
result = stat4.st_nlink                                                 # STEP 49
file0.write(str3)                                                       # STEP 50
str3 += 'v'                                                             # STEP 51
stat0 = os0.fstat(fd0)                                                  # STEP 52
result = os0.path.isabs(path2)                                          # STEP 53
str2 += 'c'                                                             # STEP 54
str2 += 'a'                                                             # STEP 55
result = stat3.st_size                                                  # STEP 56
str3 += 'x'                                                             # STEP 57
str2 += 'h'                                                             # STEP 58
str2 += 'l'                                                             # STEP 59
result = os0.path.exists(path2)                                         # STEP 60
result = stat0.st_nlink                                                 # STEP 61
path2 += "/" + component2                                               # STEP 62
path4 = "/Volumes/ramdisk/test"                                         # STEP 63
str2 += 'v'                                                             # STEP 64
result = file0.read()                                                   # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (cehibwfgkabtndif) == () ',), <traceback object at 0x10a501c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #452 STEP #15 (0:00:30.000181) Sat Jul 22 06:47:12 2017 [ 890 stmts 1156 branches ] 45081 TOTAL ACTIONS (1502.69093578/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 82
STOPPING TESTING DUE TO TIMEOUT
42.2147900409 PERCENT COVERED
60.3293180466 TOTAL RUNTIME
905 EXECUTED
90448 TOTAL TEST OPERATIONS
52.3821465969 TIME SPENT EXECUTING TEST OPERATIONS
4.19803786278 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0542945861816 TIME SPENT CHECKING PROPERTIES
52.4364411831 TOTAL TIME SPENT RUNNING SUT
2.66904497147 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "delta"                                                     # STEP 0
component0 = "h"                                                         # STEP 1
component3 = "delta"                                                     # STEP 2
component1 = "delta"                                                     # STEP 3
component4 = "lambda"                                                    # STEP 4
os0 = newFakeOS()                                                        # STEP 5
str3 = ""                                                                # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
opener0 = newFakeOpener(os0)                                             # STEP 8
str3 += 'c'                                                              # STEP 9
path2 += "/" + component1                                               # STEP 10
str3 += 'e'                                                             # STEP 11
component1 = "lambda"                                                   # STEP 12
result = os0.readlink(path2)                                            # STEP 13
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 14
str3 += 'h'                                                             # STEP 15
str3 += 'i'                                                             # STEP 16
str3 += 'b'                                                             # STEP 17
str3 += 'w'                                                             # STEP 18
str3 += 'f'                                                             # STEP 19
str3 += 'g'                                                             # STEP 20
result = os0.path.isabs(path2)                                          # STEP 21
str3 += 'k'                                                             # STEP 22
str3 += 'a'                                                             # STEP 23
str3 += 'b'                                                             # STEP 24
result = os0.path.abspath(path2)                                        # STEP 25
file0 = opener0(path2)                                                  # STEP 26
result = file0.read()                                                   # STEP 27
stat4 = os0.stat(path2)                                                 # STEP 28
str3 += 't'                                                             # STEP 29
os0.rmdir(path2)                                                        # STEP 30
result = os0.readlink(path2)                                            # STEP 31
stat3 = os0.stat(path2)                                                 # STEP 32
path2 += "/" + component2                                               # STEP 33
str3 += 'n'                                                             # STEP 34
str3 += 'd'                                                             # STEP 35
os0.makedirs(path2)                                                     # STEP 36
str3 += 'i'                                                             # STEP 37
str2 = ""                                                               # STEP 38
str3 += 'f'                                                             # STEP 39
os0.write(fd0,str3)                                                     # STEP 40
result = stat3.st_size                                                  # STEP 41
result = os0.path.isfile(path2)                                         # STEP 42
str2 += 's'                                                             # STEP 43
str2 += 'q'                                                             # STEP 44
component2 = "g"                                                        # STEP 45
str3 += 'n'                                                             # STEP 46
str3 += 'g'                                                             # STEP 47
str2 += 'w'                                                             # STEP 48
result = stat4.st_nlink                                                 # STEP 49
file0.write(str3)                                                       # STEP 50
str3 += 'v'                                                             # STEP 51
stat0 = os0.fstat(fd0)                                                  # STEP 52
result = os0.path.isabs(path2)                                          # STEP 53
str2 += 'c'                                                             # STEP 54
str2 += 'a'                                                             # STEP 55
result = stat3.st_size                                                  # STEP 56
str3 += 'x'                                                             # STEP 57
str2 += 'h'                                                             # STEP 58
str2 += 'l'                                                             # STEP 59
result = os0.path.exists(path2)                                         # STEP 60
result = stat0.st_nlink                                                 # STEP 61
path2 += "/" + component2                                               # STEP 62
path4 = "/Volumes/ramdisk/test"                                         # STEP 63
str2 += 'v'                                                             # STEP 64
result = file0.read()                                                   # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (cehibwfgkabtndif) == () ',), <traceback object at 0x10a501c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1170 BRANCHES COVERED
899 STATEMENTS COVERED
