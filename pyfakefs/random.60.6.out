Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4066.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (5) ',), <traceback object at 0x1068ab878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 98 steps

SAVING TEST AS failure.4066.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "a"                                                         # STEP 0
bytes2 = 0                                                               # STEP 1
component1 = "b"                                                         # STEP 2
component4 = "e"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
component3 = "lambda"                                                    # STEP 6
component2 = "gamma"                                                     # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.symlink(path2,path1)                                                # STEP 10
path2 += "/" + component3                                               # STEP 11
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 12
os0.mkdir(path2)                                                        # STEP 13
file0 = opener0(path2,'w')                                              # STEP 14
file0.flush()                                                           # STEP 15
str4 = ""                                                               # STEP 16
component3 = "f"                                                        # STEP 17
str4 += 'g'                                                             # STEP 18
str4 += 'z'                                                             # STEP 19
os0.makedirs(path1)                                                     # STEP 20
path0 = "/Volumes/ramdisk/test"                                         # STEP 21
os0.makedirs(path0)                                                     # STEP 22
str4 += " "                                                             # STEP 23
os0.makedirs(path1)                                                     # STEP 24
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
file0.seek(bytes2)                                                      # STEP 26
str4 += 'w'                                                             # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
bytes3 = 0                                                              # STEP 29
os0.mkdir(path4)                                                        # STEP 30
os0.symlink(path4,path0)                                                # STEP 31
result = sorted(os0.listdir(path1))                                     # STEP 32
file0.seek(bytes3)                                                      # STEP 33
str4 += 'u'                                                             # STEP 34
path1 += "/" + component1                                               # STEP 35
component1 = "lambda"                                                   # STEP 36
os0.symlink(path2,path0)                                                # STEP 37
path2 = "/Volumes/ramdisk/test"                                         # STEP 38
bytes1 = 0                                                              # STEP 39
path0 += "/" + component0                                               # STEP 40
result = os0.path.dirname(path0)                                        # STEP 41
path2 += "/" + component1                                               # STEP 42
file0.write(str4)                                                       # STEP 43
os0.path.getsize(path2)                                                 # STEP 44
os0.rename(path0,path4)                                                 # STEP 45
bytes0 = 0                                                              # STEP 46
result = file0.read(bytes2)                                             # STEP 47
str4 += 'w'                                                             # STEP 48
result = os0.path.dirname(path4)                                        # STEP 49
path2 += "/" + component4                                               # STEP 50
stat1 = os0.stat(path1)                                                 # STEP 51
os0.mkdir(path0)                                                        # STEP 52
file0.seek(bytes3)                                                      # STEP 53
component4 = "lambda"                                                   # STEP 54
result = os0.path.exists(path4)                                         # STEP 55
os0.rename(path2,path4)                                                 # STEP 56
path1 += "/" + component3                                               # STEP 57
stat4 = os0.stat(path2)                                                 # STEP 58
component1 = "lambda"                                                   # STEP 59
os0.remove(path0)                                                       # STEP 60
result = sorted(os0.listdir(path1))                                     # STEP 61
os0.removedirs(path0)                                                   # STEP 62
stat1 = os0.lstat(path1)                                                # STEP 63
component0 = "alpha"                                                    # STEP 64
os0.rename(path1,path2)                                                 # STEP 65
os0.link(path1,path0)                                                   # STEP 66
stat2 = os0.fstat(fd0)                                                  # STEP 67
component3 = "b"                                                        # STEP 68
result = os0.path.dirname(path2)                                        # STEP 69
str4 += 'o'                                                             # STEP 70
result = os0.path.isdir(path1)                                          # STEP 71
os0.link(path2,path1)                                                   # STEP 72
path4 += "/" + component1                                               # STEP 73
stat4 = os0.stat(path2)                                                 # STEP 74
str4 += 'n'                                                             # STEP 75
os0.mkdir(path4)                                                        # STEP 76
stat4 = os0.lstat(path0)                                                # STEP 77
result = os0.path.dirname(path1)                                        # STEP 78
stat0 = os0.lstat(path1)                                                # STEP 79
result = os0.path.exists(path4)                                         # STEP 80
stat3 = os0.stat(path1)                                                 # STEP 81
result = os0.read(fd0,bytes3)                                           # STEP 82
path2 += "/" + component3                                               # STEP 83
path4 += "/" + component3                                               # STEP 84
component3 = "beta"                                                     # STEP 85
result = os0.path.exists(path1)                                         # STEP 86
path4 += "/" + component2                                               # STEP 87
os0.makedirs(path4)                                                     # STEP 88
result = file0.readline(bytes3)                                         # STEP 89
os0.link(path0,path2)                                                   # STEP 90
os0.link(path4,path2)                                                   # STEP 91
os0.symlink(path0,path0)                                                # STEP 92
component2 = "b"                                                        # STEP 93
os0.path.getsize(path2)                                                 # STEP 94
os0.path.getsize(path0)                                                 # STEP 95
os0.path.getsize(path0)                                                 # STEP 96
result = stat2.st_size                                                  # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (5) ',), <traceback object at 0x10908c5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #454 STEP #85 (0:00:30.000065) Fri Jul 21 22:43:31 2017 [ 890 stmts 1159 branches ] 45383 TOTAL ACTIONS (1512.76339658/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (fznfznaif) == () ',), <traceback object at 0x101f40200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 86 steps

SAVING TEST AS failure.4066.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component1 = "phi"                                                       # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
component2 = "g"                                                         # STEP 4
result = os0.path.isdir(path2)                                           # STEP 5
result = os0.path.exists(path4)                                          # STEP 6
result = os0.path.dirname(path4)                                         # STEP 7
component4 = "gamma"                                                     # STEP 8
os0.symlink(path2,path2)                                                 # STEP 9
os0.symlink(path2,path4)                                                # STEP 10
component0 = "h"                                                        # STEP 11
os0.link(path4,path4)                                                   # STEP 12
os0.remove(path4)                                                       # STEP 13
os0.symlink(path2,path4)                                                # STEP 14
component3 = "f"                                                        # STEP 15
os0.mkdir(path2)                                                        # STEP 16
path4 += "/" + component2                                               # STEP 17
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 18
component2 = "h"                                                        # STEP 19
os0.symlink(path2,path2)                                                # STEP 20
stat2 = os0.stat(path4)                                                 # STEP 21
os0.link(path4,path2)                                                   # STEP 22
path4 += "/" + component1                                               # STEP 23
component1 = "c"                                                        # STEP 24
os0.link(path4,path2)                                                   # STEP 25
str1 = ""                                                               # STEP 26
os0.close(fd0)                                                          # STEP 27
path2 += "/" + component2                                               # STEP 28
os0.makedirs(path4)                                                     # STEP 29
str1 += 'f'                                                             # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
result = os0.path.dirname(path4)                                        # STEP 32
os0.path.getsize(path2)                                                 # STEP 33
result = os0.path.isdir(path2)                                          # STEP 34
path1 = "/Volumes/ramdisk/test"                                         # STEP 35
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 36
file0 = opener0(path2)                                                  # STEP 37
result = os0.path.islink(path1)                                         # STEP 38
str1 += 'z'                                                             # STEP 39
component2 = "omega"                                                    # STEP 40
stat4 = os0.stat(path2)                                                 # STEP 41
stat3 = os0.lstat(path2)                                                # STEP 42
str1 += 'n'                                                             # STEP 43
result = os0.path.isfile(path4)                                         # STEP 44
os0.write(fd0,str1)                                                     # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
bytes4 = 0                                                              # STEP 47
stat1 = os0.lstat(path4)                                                # STEP 48
str1 += 'a'                                                             # STEP 49
os0.link(path4,path4)                                                   # STEP 50
str1 += 'i'                                                             # STEP 51
os0.link(path1,path4)                                                   # STEP 52
os0.link(path4,path2)                                                   # STEP 53
str1 += 'f'                                                             # STEP 54
result = stat3.st_nlink                                                 # STEP 55
path4 += "/" + component1                                               # STEP 56
os0.link(path2,path2)                                                   # STEP 57
os0.write(fd0,str1)                                                     # STEP 58
stat0 = os0.lstat(path4)                                                # STEP 59
os0.rename(path2,path4)                                                 # STEP 60
component1 = "e"                                                        # STEP 61
os0.link(path1,path1)                                                   # STEP 62
os0.makedirs(path2)                                                     # STEP 63
result = os0.path.lexists(path4)                                        # STEP 64
stat1 = os0.stat(path2)                                                 # STEP 65
os0.makedirs(path1)                                                     # STEP 66
result = os0.path.isfile(path4)                                         # STEP 67
result = os0.path.islink(path4)                                         # STEP 68
result = os0.path.lexists(path1)                                        # STEP 69
file0.next()                                                            # STEP 70
os0.remove(path2)                                                       # STEP 71
str1 += 'j'                                                             # STEP 72
stat3 = os0.fstat(fd0)                                                  # STEP 73
stat0 = os0.fstat(fd0)                                                  # STEP 74
os0.symlink(path1,path4)                                                # STEP 75
str1 += 'p'                                                             # STEP 76
result = stat4.st_nlink                                                 # STEP 77
os0.rename(path4,path1)                                                 # STEP 78
str1 += 'p'                                                             # STEP 79
str1 += 'e'                                                             # STEP 80
path1 += "/" + component2                                               # STEP 81
os0.link(path2,path2)                                                   # STEP 82
os0.rename(path1,path4)                                                 # STEP 83
result = os0.path.lexists(path1)                                        # STEP 84
result = file0.readline()                                               # STEP 85
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (fznfznaif) == () ',), <traceback object at 0x107f5fe18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 72
STOPPING TESTING DUE TO TIMEOUT
42.5492382014 PERCENT COVERED
60.3308839798 TOTAL RUNTIME
892 EXECUTED
89156 TOTAL TEST OPERATIONS
52.3264439106 TIME SPENT EXECUTING TEST OPERATIONS
4.18982744217 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0545303821564 TIME SPENT CHECKING PROPERTIES
52.3809742928 TOTAL TIME SPENT RUNNING SUT
2.55020594597 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
component0 = "a"                                                         # STEP 0
bytes2 = 0                                                               # STEP 1
component1 = "b"                                                         # STEP 2
component4 = "e"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
component3 = "lambda"                                                    # STEP 6
component2 = "gamma"                                                     # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.symlink(path2,path1)                                                # STEP 10
path2 += "/" + component3                                               # STEP 11
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 12
os0.mkdir(path2)                                                        # STEP 13
file0 = opener0(path2,'w')                                              # STEP 14
file0.flush()                                                           # STEP 15
str4 = ""                                                               # STEP 16
component3 = "f"                                                        # STEP 17
str4 += 'g'                                                             # STEP 18
str4 += 'z'                                                             # STEP 19
os0.makedirs(path1)                                                     # STEP 20
path0 = "/Volumes/ramdisk/test"                                         # STEP 21
os0.makedirs(path0)                                                     # STEP 22
str4 += " "                                                             # STEP 23
os0.makedirs(path1)                                                     # STEP 24
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
file0.seek(bytes2)                                                      # STEP 26
str4 += 'w'                                                             # STEP 27
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
bytes3 = 0                                                              # STEP 29
os0.mkdir(path4)                                                        # STEP 30
os0.symlink(path4,path0)                                                # STEP 31
result = sorted(os0.listdir(path1))                                     # STEP 32
file0.seek(bytes3)                                                      # STEP 33
str4 += 'u'                                                             # STEP 34
path1 += "/" + component1                                               # STEP 35
component1 = "lambda"                                                   # STEP 36
os0.symlink(path2,path0)                                                # STEP 37
path2 = "/Volumes/ramdisk/test"                                         # STEP 38
bytes1 = 0                                                              # STEP 39
path0 += "/" + component0                                               # STEP 40
result = os0.path.dirname(path0)                                        # STEP 41
path2 += "/" + component1                                               # STEP 42
file0.write(str4)                                                       # STEP 43
os0.path.getsize(path2)                                                 # STEP 44
os0.rename(path0,path4)                                                 # STEP 45
bytes0 = 0                                                              # STEP 46
result = file0.read(bytes2)                                             # STEP 47
str4 += 'w'                                                             # STEP 48
result = os0.path.dirname(path4)                                        # STEP 49
path2 += "/" + component4                                               # STEP 50
stat1 = os0.stat(path1)                                                 # STEP 51
os0.mkdir(path0)                                                        # STEP 52
file0.seek(bytes3)                                                      # STEP 53
component4 = "lambda"                                                   # STEP 54
result = os0.path.exists(path4)                                         # STEP 55
os0.rename(path2,path4)                                                 # STEP 56
path1 += "/" + component3                                               # STEP 57
stat4 = os0.stat(path2)                                                 # STEP 58
component1 = "lambda"                                                   # STEP 59
os0.remove(path0)                                                       # STEP 60
result = sorted(os0.listdir(path1))                                     # STEP 61
os0.removedirs(path0)                                                   # STEP 62
stat1 = os0.lstat(path1)                                                # STEP 63
component0 = "alpha"                                                    # STEP 64
os0.rename(path1,path2)                                                 # STEP 65
os0.link(path1,path0)                                                   # STEP 66
stat2 = os0.fstat(fd0)                                                  # STEP 67
component3 = "b"                                                        # STEP 68
result = os0.path.dirname(path2)                                        # STEP 69
str4 += 'o'                                                             # STEP 70
result = os0.path.isdir(path1)                                          # STEP 71
os0.link(path2,path1)                                                   # STEP 72
path4 += "/" + component1                                               # STEP 73
stat4 = os0.stat(path2)                                                 # STEP 74
str4 += 'n'                                                             # STEP 75
os0.mkdir(path4)                                                        # STEP 76
stat4 = os0.lstat(path0)                                                # STEP 77
result = os0.path.dirname(path1)                                        # STEP 78
stat0 = os0.lstat(path1)                                                # STEP 79
result = os0.path.exists(path4)                                         # STEP 80
stat3 = os0.stat(path1)                                                 # STEP 81
result = os0.read(fd0,bytes3)                                           # STEP 82
path2 += "/" + component3                                               # STEP 83
path4 += "/" + component3                                               # STEP 84
component3 = "beta"                                                     # STEP 85
result = os0.path.exists(path1)                                         # STEP 86
path4 += "/" + component2                                               # STEP 87
os0.makedirs(path4)                                                     # STEP 88
result = file0.readline(bytes3)                                         # STEP 89
os0.link(path0,path2)                                                   # STEP 90
os0.link(path4,path2)                                                   # STEP 91
os0.symlink(path0,path0)                                                # STEP 92
component2 = "b"                                                        # STEP 93
os0.path.getsize(path2)                                                 # STEP 94
os0.path.getsize(path0)                                                 # STEP 95
os0.path.getsize(path0)                                                 # STEP 96
result = stat2.st_size                                                  # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (5) ',), <traceback object at 0x10908c5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
os0 = newFakeOS()                                                        # STEP 0
component1 = "phi"                                                       # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
component2 = "g"                                                         # STEP 4
result = os0.path.isdir(path2)                                           # STEP 5
result = os0.path.exists(path4)                                          # STEP 6
result = os0.path.dirname(path4)                                         # STEP 7
component4 = "gamma"                                                     # STEP 8
os0.symlink(path2,path2)                                                 # STEP 9
os0.symlink(path2,path4)                                                # STEP 10
component0 = "h"                                                        # STEP 11
os0.link(path4,path4)                                                   # STEP 12
os0.remove(path4)                                                       # STEP 13
os0.symlink(path2,path4)                                                # STEP 14
component3 = "f"                                                        # STEP 15
os0.mkdir(path2)                                                        # STEP 16
path4 += "/" + component2                                               # STEP 17
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 18
component2 = "h"                                                        # STEP 19
os0.symlink(path2,path2)                                                # STEP 20
stat2 = os0.stat(path4)                                                 # STEP 21
os0.link(path4,path2)                                                   # STEP 22
path4 += "/" + component1                                               # STEP 23
component1 = "c"                                                        # STEP 24
os0.link(path4,path2)                                                   # STEP 25
str1 = ""                                                               # STEP 26
os0.close(fd0)                                                          # STEP 27
path2 += "/" + component2                                               # STEP 28
os0.makedirs(path4)                                                     # STEP 29
str1 += 'f'                                                             # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
result = os0.path.dirname(path4)                                        # STEP 32
os0.path.getsize(path2)                                                 # STEP 33
result = os0.path.isdir(path2)                                          # STEP 34
path1 = "/Volumes/ramdisk/test"                                         # STEP 35
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 36
file0 = opener0(path2)                                                  # STEP 37
result = os0.path.islink(path1)                                         # STEP 38
str1 += 'z'                                                             # STEP 39
component2 = "omega"                                                    # STEP 40
stat4 = os0.stat(path2)                                                 # STEP 41
stat3 = os0.lstat(path2)                                                # STEP 42
str1 += 'n'                                                             # STEP 43
result = os0.path.isfile(path4)                                         # STEP 44
os0.write(fd0,str1)                                                     # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
bytes4 = 0                                                              # STEP 47
stat1 = os0.lstat(path4)                                                # STEP 48
str1 += 'a'                                                             # STEP 49
os0.link(path4,path4)                                                   # STEP 50
str1 += 'i'                                                             # STEP 51
os0.link(path1,path4)                                                   # STEP 52
os0.link(path4,path2)                                                   # STEP 53
str1 += 'f'                                                             # STEP 54
result = stat3.st_nlink                                                 # STEP 55
path4 += "/" + component1                                               # STEP 56
os0.link(path2,path2)                                                   # STEP 57
os0.write(fd0,str1)                                                     # STEP 58
stat0 = os0.lstat(path4)                                                # STEP 59
os0.rename(path2,path4)                                                 # STEP 60
component1 = "e"                                                        # STEP 61
os0.link(path1,path1)                                                   # STEP 62
os0.makedirs(path2)                                                     # STEP 63
result = os0.path.lexists(path4)                                        # STEP 64
stat1 = os0.stat(path2)                                                 # STEP 65
os0.makedirs(path1)                                                     # STEP 66
result = os0.path.isfile(path4)                                         # STEP 67
result = os0.path.islink(path4)                                         # STEP 68
result = os0.path.lexists(path1)                                        # STEP 69
file0.next()                                                            # STEP 70
os0.remove(path2)                                                       # STEP 71
str1 += 'j'                                                             # STEP 72
stat3 = os0.fstat(fd0)                                                  # STEP 73
stat0 = os0.fstat(fd0)                                                  # STEP 74
os0.symlink(path1,path4)                                                # STEP 75
str1 += 'p'                                                             # STEP 76
result = stat4.st_nlink                                                 # STEP 77
os0.rename(path4,path1)                                                 # STEP 78
str1 += 'p'                                                             # STEP 79
str1 += 'e'                                                             # STEP 80
path1 += "/" + component2                                               # STEP 81
os0.link(path2,path2)                                                   # STEP 82
os0.rename(path1,path4)                                                 # STEP 83
result = os0.path.lexists(path1)                                        # STEP 84
result = file0.readline()                                               # STEP 85
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (fznfznaif) == () ',), <traceback object at 0x107f5fe18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1179 BRANCHES COVERED
903 STATEMENTS COVERED
