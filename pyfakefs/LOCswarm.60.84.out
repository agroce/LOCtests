Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5709.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10b3b7b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 63 steps

SAVING TEST AS failure.5709.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str1 = ""                                                                # STEP 0
str4 = ""                                                                # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
str0 = ""                                                                # STEP 3
bytes2 = 0                                                               # STEP 4
str3 = ""                                                                # STEP 5
bytes0 = 0                                                               # STEP 6
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
component0 = "h"                                                         # STEP 8
bytes3 = 0                                                               # STEP 9
bytes4 = 0                                                              # STEP 10
os0 = newFakeOS()                                                       # STEP 11
result = os0.path.isfile(path4)                                         # STEP 12
result = os0.path.islink(path2)                                         # STEP 13
path2 += "/" + component0                                               # STEP 14
result = os0.path.lexists(path2)                                        # STEP 15
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 16
result = os0.path.isabs(path2)                                          # STEP 17
os0.path.getsize(path2)                                                 # STEP 18
str2 = ""                                                               # STEP 19
os0.path.getsize(path2)                                                 # STEP 20
result = os0.path.lexists(path4)                                        # STEP 21
result = sorted(os0.listdir(path2))                                     # STEP 22
os0.remove(path4)                                                       # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
result = os0.path.dirname(path4)                                        # STEP 25
result = os0.path.islink(path2)                                         # STEP 26
os0.close(fd0)                                                          # STEP 27
result = os0.path.isdir(path2)                                          # STEP 28
result = os0.path.isfile(path4)                                         # STEP 29
result = sorted(os0.listdir(path2))                                     # STEP 30
result = os0.path.islink(path4)                                         # STEP 31
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 32
os0.close(fd0)                                                          # STEP 33
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 34
result = os0.path.isdir(path2)                                          # STEP 35
result = os0.path.isdir(path4)                                          # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
stat0 = os0.stat(path2)                                                 # STEP 38
os0.path.getsize(path2)                                                 # STEP 39
result = stat0.st_size                                                  # STEP 40
os0.link(path4,path4)                                                   # STEP 41
os0.remove(path2)                                                       # STEP 42
result = os0.read(fd0,bytes4)                                           # STEP 43
os0.remove(path2)                                                       # STEP 44
result = os0.path.isfile(path4)                                         # STEP 45
file0 = opener0(path2,'a')                                              # STEP 46
result = os0.path.isfile(path2)                                         # STEP 47
result = sorted(os0.listdir(path4))                                     # STEP 48
os0.link(path4,path4)                                                   # STEP 49
result = os0.path.islink(path4)                                         # STEP 50
result = sorted(os0.listdir(path4))                                     # STEP 51
result = file0.readline(bytes2)                                         # STEP 52
result = os0.path.isabs(path2)                                          # STEP 53
result = os0.path.islink(path2)                                         # STEP 54
result = os0.path.dirname(path4)                                        # STEP 55
result = os0.path.lexists(path2)                                        # STEP 56
os0.write(fd0,str4)                                                     # STEP 57
result = os0.path.abspath(path4)                                        # STEP 58
result = os0.path.abspath(path2)                                        # STEP 59
os0.path.getsize(path2)                                                 # STEP 60
result = os0.path.abspath(path2)                                        # STEP 61
result = file0.readlines()                                              # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1084c1320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #173 STEP #48 (0:00:30.000193) Sat Jul 22 07:16:44 2017 [ 888 stmts 1157 branches ] 17211 TOTAL ACTIONS (573.696306944/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['y']) == ([]) ",), <traceback object at 0x109f67f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 95 steps

SAVING TEST AS failure.5709.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes4 = 0                                                               # STEP 0
bytes4 += 1                                                              # STEP 1
os0 = newFakeOS()                                                        # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
component3 = "g"                                                         # STEP 4
str2 = ""                                                                # STEP 5
component1 = "epsilon"                                                   # STEP 6
str2 += 'q'                                                              # STEP 7
str2 += " "                                                              # STEP 8
str2 += " "                                                              # STEP 9
component2 = "a"                                                        # STEP 10
component0 = "b"                                                        # STEP 11
str2 += 'q'                                                             # STEP 12
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
file0 = opener0(path4,'r')                                              # STEP 14
file0 = opener0(path4,'r')                                              # STEP 15
result = os0.path.isabs(path4)                                          # STEP 16
result = os0.path.exists(path4)                                         # STEP 17
result = os0.path.islink(path4)                                         # STEP 18
result = os0.path.islink(path4)                                         # STEP 19
bytes2 = 0                                                              # STEP 20
path1 = "/Volumes/ramdisk/test"                                         # STEP 21
os0.mkdir(path4)                                                        # STEP 22
bytes3 = 0                                                              # STEP 23
component4 = "d"                                                        # STEP 24
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
result = os0.path.islink(path1)                                         # STEP 26
result = os0.path.exists(path1)                                         # STEP 27
file0 = opener0(path4,'r')                                              # STEP 28
path4 = "/Volumes/ramdisk/test"                                         # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
bytes4 += 1                                                             # STEP 31
bytes4 += 1                                                             # STEP 32
result = os0.path.abspath(path4)                                        # STEP 33
os0.symlink(path2,path2)                                                # STEP 34
str0 = ""                                                               # STEP 35
bytes1 = 0                                                              # STEP 36
path4 = "/Volumes/ramdisk/test"                                         # STEP 37
str3 = ""                                                               # STEP 38
os0.symlink(path4,path4)                                                # STEP 39
result = os0.path.abspath(path2)                                        # STEP 40
result = os0.readlink(path1)                                            # STEP 41
path2 += "/" + component2                                               # STEP 42
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 43
result = os0.path.exists(path2)                                         # STEP 44
result = os0.path.isabs(path2)                                          # STEP 45
bytes0 = 0                                                              # STEP 46
os0.mkdir(path4)                                                        # STEP 47
os0.symlink(path1,path1)                                                # STEP 48
result = os0.path.islink(path2)                                         # STEP 49
str0 += 'n'                                                             # STEP 50
component2 = "b"                                                        # STEP 51
os0.symlink(path4,path4)                                                # STEP 52
os0.write(fd0,str2)                                                     # STEP 53
result = os0.path.isabs(path1)                                          # STEP 54
bytes2 += 1                                                             # STEP 55
os0.symlink(path2,path4)                                                # STEP 56
str3 += 'y'                                                             # STEP 57
os0.mkdir(path4)                                                        # STEP 58
result = os0.path.isabs(path4)                                          # STEP 59
os0.write(fd0,str2)                                                     # STEP 60
result = os0.path.abspath(path2)                                        # STEP 61
result = os0.path.abspath(path4)                                        # STEP 62
os0.mkdir(path2)                                                        # STEP 63
os0.symlink(path1,path4)                                                # STEP 64
result = os0.path.islink(path1)                                         # STEP 65
path4 += "/" + component1                                               # STEP 66
str4 = ""                                                               # STEP 67
os0.mkdir(path1)                                                        # STEP 68
bytes4 += 1                                                             # STEP 69
str2 += " "                                                             # STEP 70
result = os0.path.abspath(path1)                                        # STEP 71
stat2 = os0.fstat(fd0)                                                  # STEP 72
os0.symlink(path4,path2)                                                # STEP 73
path1 += "/" + component1                                               # STEP 74
result = os0.path.abspath(path1)                                        # STEP 75
file0 = opener0(path2,'r')                                              # STEP 76
result = os0.path.abspath(path4)                                        # STEP 77
os0.mkdir(path2)                                                        # STEP 78
file0.flush()                                                           # STEP 79
result = file0.read(bytes0)                                             # STEP 80
file0.truncate()                                                        # STEP 81
result = os0.path.islink(path1)                                         # STEP 82
str2 += 'f'                                                             # STEP 83
result = file0.readlines()                                              # STEP 84
result = os0.path.exists(path4)                                         # STEP 85
component1 = "epsilon"                                                  # STEP 86
result = os0.path.exists(path4)                                         # STEP 87
result = os0.readlink(path2)                                            # STEP 88
os0.write(fd0,str3)                                                     # STEP 89
file0.next()                                                            # STEP 90
file0.next()                                                            # STEP 91
path4 += "/" + component2                                               # STEP 92
str2 += " "                                                             # STEP 93
result = file0.readlines()                                              # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['y']) == ([]) ",), <traceback object at 0x107b8a758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a9953f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 86 steps

SAVING TEST AS failure.5709.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes0 = 0                                                               # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
component1 = "c"                                                         # STEP 5
bytes0 += 1                                                              # STEP 6
os0 = newFakeOS()                                                        # STEP 7
component2 = "e"                                                         # STEP 8
os0.makedirs(path4)                                                      # STEP 9
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.lexists(path2)                                        # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
os0.symlink(path2,path0)                                                # STEP 13
result = os0.readlink(path4)                                            # STEP 14
str3 = ""                                                               # STEP 15
bytes1 = 0                                                              # STEP 16
result = os0.path.lexists(path0)                                        # STEP 17
path1 += "/" + component2                                               # STEP 18
component4 = "gamma"                                                    # STEP 19
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 20
component3 = "d"                                                        # STEP 21
path1 = "/Volumes/ramdisk/test"                                         # STEP 22
component2 = "a"                                                        # STEP 23
file0 = opener0(path3,'w')                                              # STEP 24
component0 = "c"                                                        # STEP 25
os0.close(fd0)                                                          # STEP 26
os0.symlink(path3,path3)                                                # STEP 27
result = os0.read(fd0,bytes1)                                           # STEP 28
file0 = opener0(path2,'w')                                              # STEP 29
path4 += "/" + component0                                               # STEP 30
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 31
stat3 = os0.stat(path4)                                                 # STEP 32
os0.symlink(path2,path2)                                                # STEP 33
os0.write(fd0,str3)                                                     # STEP 34
result = os0.read(fd0,bytes1)                                           # STEP 35
stat2 = os0.stat(path4)                                                 # STEP 36
result = os0.path.dirname(path3)                                        # STEP 37
os0.write(fd0,str3)                                                     # STEP 38
str3 = ""                                                               # STEP 39
os0.symlink(path4,path2)                                                # STEP 40
result = os0.path.lexists(path2)                                        # STEP 41
result = os0.path.islink(path0)                                         # STEP 42
str4 = ""                                                               # STEP 43
bytes2 = 0                                                              # STEP 44
os0.removedirs(path4)                                                   # STEP 45
os0.close(fd0)                                                          # STEP 46
stat1 = os0.stat(path4)                                                 # STEP 47
os0.close(fd0)                                                          # STEP 48
os0.removedirs(path0)                                                   # STEP 49
result = os0.path.islink(path1)                                         # STEP 50
result = os0.readlink(path3)                                            # STEP 51
os0.write(fd0,str3)                                                     # STEP 52
file0 = opener0(path2,'w')                                              # STEP 53
os0.path.getsize(path4)                                                 # STEP 54
os0.symlink(path4,path1)                                                # STEP 55
result = os0.path.dirname(path4)                                        # STEP 56
os0.rename(path4,path1)                                                 # STEP 57
os0.symlink(path0,path2)                                                # STEP 58
str0 = ""                                                               # STEP 59
result = os0.path.islink(path3)                                         # STEP 60
str2 = ""                                                               # STEP 61
file0 = opener0(path3,'w')                                              # STEP 62
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 63
os0.removedirs(path1)                                                   # STEP 64
os0.write(fd0,str3)                                                     # STEP 65
component0 = "epsilon"                                                  # STEP 66
str3 = ""                                                               # STEP 67
result = os0.path.islink(path3)                                         # STEP 68
file0 = opener0(path4,'w')                                              # STEP 69
os0.path.getsize(path4)                                                 # STEP 70
os0.makedirs(path3)                                                     # STEP 71
os0.symlink(path4,path4)                                                # STEP 72
bytes2 += 1                                                             # STEP 73
stat0 = os0.stat(path4)                                                 # STEP 74
result = os0.path.islink(path0)                                         # STEP 75
os0.makedirs(path3)                                                     # STEP 76
stat4 = os0.stat(path4)                                                 # STEP 77
bytes1 += 1                                                             # STEP 78
os0.removedirs(path3)                                                   # STEP 79
result = os0.read(fd0,bytes0)                                           # STEP 80
file0.write(str3)                                                       # STEP 81
os0.removedirs(path0)                                                   # STEP 82
str0 += " "                                                             # STEP 83
bytes2 = 0                                                              # STEP 84
result = file0.read()                                                   # STEP 85
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1078d2128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 50
STOPPING TESTING DUE TO TIMEOUT
42.2891118543 PERCENT COVERED
60.3336520195 TOTAL RUNTIME
349 EXECUTED
34794 TOTAL TEST OPERATIONS
42.8262946606 TIME SPENT EXECUTING TEST OPERATIONS
15.1648793221 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0250108242035 TIME SPENT CHECKING PROPERTIES
42.8513054848 TOTAL TIME SPENT RUNNING SUT
1.07048010826 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
str1 = ""                                                                # STEP 0
str4 = ""                                                                # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
str0 = ""                                                                # STEP 3
bytes2 = 0                                                               # STEP 4
str3 = ""                                                                # STEP 5
bytes0 = 0                                                               # STEP 6
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
component0 = "h"                                                         # STEP 8
bytes3 = 0                                                               # STEP 9
bytes4 = 0                                                              # STEP 10
os0 = newFakeOS()                                                       # STEP 11
result = os0.path.isfile(path4)                                         # STEP 12
result = os0.path.islink(path2)                                         # STEP 13
path2 += "/" + component0                                               # STEP 14
result = os0.path.lexists(path2)                                        # STEP 15
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 16
result = os0.path.isabs(path2)                                          # STEP 17
os0.path.getsize(path2)                                                 # STEP 18
str2 = ""                                                               # STEP 19
os0.path.getsize(path2)                                                 # STEP 20
result = os0.path.lexists(path4)                                        # STEP 21
result = sorted(os0.listdir(path2))                                     # STEP 22
os0.remove(path4)                                                       # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
result = os0.path.dirname(path4)                                        # STEP 25
result = os0.path.islink(path2)                                         # STEP 26
os0.close(fd0)                                                          # STEP 27
result = os0.path.isdir(path2)                                          # STEP 28
result = os0.path.isfile(path4)                                         # STEP 29
result = sorted(os0.listdir(path2))                                     # STEP 30
result = os0.path.islink(path4)                                         # STEP 31
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 32
os0.close(fd0)                                                          # STEP 33
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 34
result = os0.path.isdir(path2)                                          # STEP 35
result = os0.path.isdir(path4)                                          # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
stat0 = os0.stat(path2)                                                 # STEP 38
os0.path.getsize(path2)                                                 # STEP 39
result = stat0.st_size                                                  # STEP 40
os0.link(path4,path4)                                                   # STEP 41
os0.remove(path2)                                                       # STEP 42
result = os0.read(fd0,bytes4)                                           # STEP 43
os0.remove(path2)                                                       # STEP 44
result = os0.path.isfile(path4)                                         # STEP 45
file0 = opener0(path2,'a')                                              # STEP 46
result = os0.path.isfile(path2)                                         # STEP 47
result = sorted(os0.listdir(path4))                                     # STEP 48
os0.link(path4,path4)                                                   # STEP 49
result = os0.path.islink(path4)                                         # STEP 50
result = sorted(os0.listdir(path4))                                     # STEP 51
result = file0.readline(bytes2)                                         # STEP 52
result = os0.path.isabs(path2)                                          # STEP 53
result = os0.path.islink(path2)                                         # STEP 54
result = os0.path.dirname(path4)                                        # STEP 55
result = os0.path.lexists(path2)                                        # STEP 56
os0.write(fd0,str4)                                                     # STEP 57
result = os0.path.abspath(path4)                                        # STEP 58
result = os0.path.abspath(path2)                                        # STEP 59
os0.path.getsize(path2)                                                 # STEP 60
result = os0.path.abspath(path2)                                        # STEP 61
result = file0.readlines()                                              # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1084c1320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
bytes4 = 0                                                               # STEP 0
bytes4 += 1                                                              # STEP 1
os0 = newFakeOS()                                                        # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
component3 = "g"                                                         # STEP 4
str2 = ""                                                                # STEP 5
component1 = "epsilon"                                                   # STEP 6
str2 += 'q'                                                              # STEP 7
str2 += " "                                                              # STEP 8
str2 += " "                                                              # STEP 9
component2 = "a"                                                        # STEP 10
component0 = "b"                                                        # STEP 11
str2 += 'q'                                                             # STEP 12
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
file0 = opener0(path4,'r')                                              # STEP 14
file0 = opener0(path4,'r')                                              # STEP 15
result = os0.path.isabs(path4)                                          # STEP 16
result = os0.path.exists(path4)                                         # STEP 17
result = os0.path.islink(path4)                                         # STEP 18
result = os0.path.islink(path4)                                         # STEP 19
bytes2 = 0                                                              # STEP 20
path1 = "/Volumes/ramdisk/test"                                         # STEP 21
os0.mkdir(path4)                                                        # STEP 22
bytes3 = 0                                                              # STEP 23
component4 = "d"                                                        # STEP 24
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
result = os0.path.islink(path1)                                         # STEP 26
result = os0.path.exists(path1)                                         # STEP 27
file0 = opener0(path4,'r')                                              # STEP 28
path4 = "/Volumes/ramdisk/test"                                         # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
bytes4 += 1                                                             # STEP 31
bytes4 += 1                                                             # STEP 32
result = os0.path.abspath(path4)                                        # STEP 33
os0.symlink(path2,path2)                                                # STEP 34
str0 = ""                                                               # STEP 35
bytes1 = 0                                                              # STEP 36
path4 = "/Volumes/ramdisk/test"                                         # STEP 37
str3 = ""                                                               # STEP 38
os0.symlink(path4,path4)                                                # STEP 39
result = os0.path.abspath(path2)                                        # STEP 40
result = os0.readlink(path1)                                            # STEP 41
path2 += "/" + component2                                               # STEP 42
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 43
result = os0.path.exists(path2)                                         # STEP 44
result = os0.path.isabs(path2)                                          # STEP 45
bytes0 = 0                                                              # STEP 46
os0.mkdir(path4)                                                        # STEP 47
os0.symlink(path1,path1)                                                # STEP 48
result = os0.path.islink(path2)                                         # STEP 49
str0 += 'n'                                                             # STEP 50
component2 = "b"                                                        # STEP 51
os0.symlink(path4,path4)                                                # STEP 52
os0.write(fd0,str2)                                                     # STEP 53
result = os0.path.isabs(path1)                                          # STEP 54
bytes2 += 1                                                             # STEP 55
os0.symlink(path2,path4)                                                # STEP 56
str3 += 'y'                                                             # STEP 57
os0.mkdir(path4)                                                        # STEP 58
result = os0.path.isabs(path4)                                          # STEP 59
os0.write(fd0,str2)                                                     # STEP 60
result = os0.path.abspath(path2)                                        # STEP 61
result = os0.path.abspath(path4)                                        # STEP 62
os0.mkdir(path2)                                                        # STEP 63
os0.symlink(path1,path4)                                                # STEP 64
result = os0.path.islink(path1)                                         # STEP 65
path4 += "/" + component1                                               # STEP 66
str4 = ""                                                               # STEP 67
os0.mkdir(path1)                                                        # STEP 68
bytes4 += 1                                                             # STEP 69
str2 += " "                                                             # STEP 70
result = os0.path.abspath(path1)                                        # STEP 71
stat2 = os0.fstat(fd0)                                                  # STEP 72
os0.symlink(path4,path2)                                                # STEP 73
path1 += "/" + component1                                               # STEP 74
result = os0.path.abspath(path1)                                        # STEP 75
file0 = opener0(path2,'r')                                              # STEP 76
result = os0.path.abspath(path4)                                        # STEP 77
os0.mkdir(path2)                                                        # STEP 78
file0.flush()                                                           # STEP 79
result = file0.read(bytes0)                                             # STEP 80
file0.truncate()                                                        # STEP 81
result = os0.path.islink(path1)                                         # STEP 82
str2 += 'f'                                                             # STEP 83
result = file0.readlines()                                              # STEP 84
result = os0.path.exists(path4)                                         # STEP 85
component1 = "epsilon"                                                  # STEP 86
result = os0.path.exists(path4)                                         # STEP 87
result = os0.readlink(path2)                                            # STEP 88
os0.write(fd0,str3)                                                     # STEP 89
file0.next()                                                            # STEP 90
file0.next()                                                            # STEP 91
path4 += "/" + component2                                               # STEP 92
str2 += " "                                                             # STEP 93
result = file0.readlines()                                              # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['y']) == ([]) ",), <traceback object at 0x107b8a758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
bytes0 = 0                                                               # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
component1 = "c"                                                         # STEP 5
bytes0 += 1                                                              # STEP 6
os0 = newFakeOS()                                                        # STEP 7
component2 = "e"                                                         # STEP 8
os0.makedirs(path4)                                                      # STEP 9
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.lexists(path2)                                        # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
os0.symlink(path2,path0)                                                # STEP 13
result = os0.readlink(path4)                                            # STEP 14
str3 = ""                                                               # STEP 15
bytes1 = 0                                                              # STEP 16
result = os0.path.lexists(path0)                                        # STEP 17
path1 += "/" + component2                                               # STEP 18
component4 = "gamma"                                                    # STEP 19
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 20
component3 = "d"                                                        # STEP 21
path1 = "/Volumes/ramdisk/test"                                         # STEP 22
component2 = "a"                                                        # STEP 23
file0 = opener0(path3,'w')                                              # STEP 24
component0 = "c"                                                        # STEP 25
os0.close(fd0)                                                          # STEP 26
os0.symlink(path3,path3)                                                # STEP 27
result = os0.read(fd0,bytes1)                                           # STEP 28
file0 = opener0(path2,'w')                                              # STEP 29
path4 += "/" + component0                                               # STEP 30
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 31
stat3 = os0.stat(path4)                                                 # STEP 32
os0.symlink(path2,path2)                                                # STEP 33
os0.write(fd0,str3)                                                     # STEP 34
result = os0.read(fd0,bytes1)                                           # STEP 35
stat2 = os0.stat(path4)                                                 # STEP 36
result = os0.path.dirname(path3)                                        # STEP 37
os0.write(fd0,str3)                                                     # STEP 38
str3 = ""                                                               # STEP 39
os0.symlink(path4,path2)                                                # STEP 40
result = os0.path.lexists(path2)                                        # STEP 41
result = os0.path.islink(path0)                                         # STEP 42
str4 = ""                                                               # STEP 43
bytes2 = 0                                                              # STEP 44
os0.removedirs(path4)                                                   # STEP 45
os0.close(fd0)                                                          # STEP 46
stat1 = os0.stat(path4)                                                 # STEP 47
os0.close(fd0)                                                          # STEP 48
os0.removedirs(path0)                                                   # STEP 49
result = os0.path.islink(path1)                                         # STEP 50
result = os0.readlink(path3)                                            # STEP 51
os0.write(fd0,str3)                                                     # STEP 52
file0 = opener0(path2,'w')                                              # STEP 53
os0.path.getsize(path4)                                                 # STEP 54
os0.symlink(path4,path1)                                                # STEP 55
result = os0.path.dirname(path4)                                        # STEP 56
os0.rename(path4,path1)                                                 # STEP 57
os0.symlink(path0,path2)                                                # STEP 58
str0 = ""                                                               # STEP 59
result = os0.path.islink(path3)                                         # STEP 60
str2 = ""                                                               # STEP 61
file0 = opener0(path3,'w')                                              # STEP 62
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 63
os0.removedirs(path1)                                                   # STEP 64
os0.write(fd0,str3)                                                     # STEP 65
component0 = "epsilon"                                                  # STEP 66
str3 = ""                                                               # STEP 67
result = os0.path.islink(path3)                                         # STEP 68
file0 = opener0(path4,'w')                                              # STEP 69
os0.path.getsize(path4)                                                 # STEP 70
os0.makedirs(path3)                                                     # STEP 71
os0.symlink(path4,path4)                                                # STEP 72
bytes2 += 1                                                             # STEP 73
stat0 = os0.stat(path4)                                                 # STEP 74
result = os0.path.islink(path0)                                         # STEP 75
os0.makedirs(path3)                                                     # STEP 76
stat4 = os0.stat(path4)                                                 # STEP 77
bytes1 += 1                                                             # STEP 78
os0.removedirs(path3)                                                   # STEP 79
result = os0.read(fd0,bytes0)                                           # STEP 80
file0.write(str3)                                                       # STEP 81
os0.removedirs(path0)                                                   # STEP 82
str0 += " "                                                             # STEP 83
bytes2 = 0                                                              # STEP 84
result = file0.read()                                                   # STEP 85
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1078d2128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1172 BRANCHES COVERED
898 STATEMENTS COVERED
