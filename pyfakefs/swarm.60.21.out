Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4347.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x101ee7ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28468, in act566
    result = self.p_file[0].read(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 85 steps

SAVING TEST AS failure.4347.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "f"                                                         # STEP 0
component2 = "delta"                                                     # STEP 1
component0 = "c"                                                         # STEP 2
component1 = "e"                                                         # STEP 3
component4 = "lambda"                                                    # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes0 = 0                                                               # STEP 6
str1 = ""                                                                # STEP 7
bytes1 = 0                                                               # STEP 8
bytes4 = 0                                                               # STEP 9
bytes2 = 0                                                              # STEP 10
bytes3 = 0                                                              # STEP 11
str0 = ""                                                               # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
path2 += "/" + component3                                               # STEP 14
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 15
component3 = "epsilon"                                                  # STEP 16
path1 = "/Volumes/ramdisk/test"                                         # STEP 17
stat1 = os0.lstat(path2)                                                # STEP 18
result = os0.read(fd0,bytes2)                                           # STEP 19
stat3 = os0.lstat(path2)                                                # STEP 20
os0.write(fd0,str0)                                                     # STEP 21
result = os0.path.exists(path1)                                         # STEP 22
path2 += "/" + component1                                               # STEP 23
component1 = "e"                                                        # STEP 24
str3 = ""                                                               # STEP 25
path2 += "/" + component2                                               # STEP 26
opener0 = newFakeOpener(os0)                                            # STEP 27
component2 = "beta"                                                     # STEP 28
os0.close(fd0)                                                          # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
str0 += " "                                                             # STEP 31
os0.path.getsize(path2)                                                 # STEP 32
result = os0.path.islink(path2)                                         # STEP 33
path1 += "/" + component1                                               # STEP 34
path1 = "/Volumes/ramdisk/test"                                         # STEP 35
os0.link(path1,path1)                                                   # STEP 36
path2 += "/" + component0                                               # STEP 37
str3 += " "                                                             # STEP 38
component1 = "omega"                                                    # STEP 39
path2 += "/" + component2                                               # STEP 40
path2 += "/" + component1                                               # STEP 41
component1 = "h"                                                        # STEP 42
path0 = "/Volumes/ramdisk/test"                                         # STEP 43
stat4 = os0.lstat(path2)                                                # STEP 44
component0 = "e"                                                        # STEP 45
result = sorted(os0.listdir(path2))                                     # STEP 46
file0 = opener0(path1,'a')                                              # STEP 47
component2 = "gamma"                                                    # STEP 48
result = os0.path.isdir(path0)                                          # STEP 49
result = os0.path.islink(path0)                                         # STEP 50
result = os0.path.isdir(path1)                                          # STEP 51
path0 = "/Volumes/ramdisk/test"                                         # STEP 52
result = os0.path.exists(path0)                                         # STEP 53
path1 += "/" + component3                                               # STEP 54
file0 = opener0(path1)                                                  # STEP 55
result = stat1.st_nlink                                                 # STEP 56
file0 = opener0(path2)                                                  # STEP 57
result = stat1.st_nlink                                                 # STEP 58
component3 = "omega"                                                    # STEP 59
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 60
result = sorted(os0.listdir(path2))                                     # STEP 61
file0 = opener0(path1,'r')                                              # STEP 62
result = os0.path.isdir(path0)                                          # STEP 63
file0 = opener0(path2,'r')                                              # STEP 64
file0 = opener0(path2,'a')                                              # STEP 65
os0.remove(path2)                                                       # STEP 66
stat1 = os0.lstat(path1)                                                # STEP 67
file0 = opener0(path1)                                                  # STEP 68
path1 += "/" + component0                                               # STEP 69
path0 += "/" + component1                                               # STEP 70
os0.rmdir(path2)                                                        # STEP 71
str0 = ""                                                               # STEP 72
result = os0.path.isdir(path0)                                          # STEP 73
component1 = "g"                                                        # STEP 74
result = os0.path.exists(path0)                                         # STEP 75
component0 = "a"                                                        # STEP 76
stat4 = os0.lstat(path0)                                                # STEP 77
result = sorted(os0.listdir(path0))                                     # STEP 78
file0 = opener0(path0,'a')                                              # STEP 79
result = file0.read()                                                   # STEP 80
result = os0.path.isdir(path1)                                          # STEP 81
os0.rmdir(path2)                                                        # STEP 82
result = os0.read(fd0,bytes2)                                           # STEP 83
result = file0.read(bytes2)                                             # STEP 84
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1087e6830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28468, in act566
    result = self.p_file[0].read(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #351 STEP #67 (0:00:30.111731) Sat Jul 22 00:22:32 2017 [ 883 stmts 1143 branches ] 35052 TOTAL ACTIONS (1164.06459459/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 68
STOPPING TESTING DUE TO TIMEOUT
41.9546636938 PERCENT COVERED
60.3305709362 TOTAL RUNTIME
657 EXECUTED
65653 TOTAL TEST OPERATIONS
54.7387971878 TIME SPENT EXECUTING TEST OPERATIONS
2.07595992088 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0417273044586 TIME SPENT CHECKING PROPERTIES
54.7805244923 TOTAL TIME SPENT RUNNING SUT
1.96236634254 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "f"                                                         # STEP 0
component2 = "delta"                                                     # STEP 1
component0 = "c"                                                         # STEP 2
component1 = "e"                                                         # STEP 3
component4 = "lambda"                                                    # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes0 = 0                                                               # STEP 6
str1 = ""                                                                # STEP 7
bytes1 = 0                                                               # STEP 8
bytes4 = 0                                                               # STEP 9
bytes2 = 0                                                              # STEP 10
bytes3 = 0                                                              # STEP 11
str0 = ""                                                               # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
path2 += "/" + component3                                               # STEP 14
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 15
component3 = "epsilon"                                                  # STEP 16
path1 = "/Volumes/ramdisk/test"                                         # STEP 17
stat1 = os0.lstat(path2)                                                # STEP 18
result = os0.read(fd0,bytes2)                                           # STEP 19
stat3 = os0.lstat(path2)                                                # STEP 20
os0.write(fd0,str0)                                                     # STEP 21
result = os0.path.exists(path1)                                         # STEP 22
path2 += "/" + component1                                               # STEP 23
component1 = "e"                                                        # STEP 24
str3 = ""                                                               # STEP 25
path2 += "/" + component2                                               # STEP 26
opener0 = newFakeOpener(os0)                                            # STEP 27
component2 = "beta"                                                     # STEP 28
os0.close(fd0)                                                          # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
str0 += " "                                                             # STEP 31
os0.path.getsize(path2)                                                 # STEP 32
result = os0.path.islink(path2)                                         # STEP 33
path1 += "/" + component1                                               # STEP 34
path1 = "/Volumes/ramdisk/test"                                         # STEP 35
os0.link(path1,path1)                                                   # STEP 36
path2 += "/" + component0                                               # STEP 37
str3 += " "                                                             # STEP 38
component1 = "omega"                                                    # STEP 39
path2 += "/" + component2                                               # STEP 40
path2 += "/" + component1                                               # STEP 41
component1 = "h"                                                        # STEP 42
path0 = "/Volumes/ramdisk/test"                                         # STEP 43
stat4 = os0.lstat(path2)                                                # STEP 44
component0 = "e"                                                        # STEP 45
result = sorted(os0.listdir(path2))                                     # STEP 46
file0 = opener0(path1,'a')                                              # STEP 47
component2 = "gamma"                                                    # STEP 48
result = os0.path.isdir(path0)                                          # STEP 49
result = os0.path.islink(path0)                                         # STEP 50
result = os0.path.isdir(path1)                                          # STEP 51
path0 = "/Volumes/ramdisk/test"                                         # STEP 52
result = os0.path.exists(path0)                                         # STEP 53
path1 += "/" + component3                                               # STEP 54
file0 = opener0(path1)                                                  # STEP 55
result = stat1.st_nlink                                                 # STEP 56
file0 = opener0(path2)                                                  # STEP 57
result = stat1.st_nlink                                                 # STEP 58
component3 = "omega"                                                    # STEP 59
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 60
result = sorted(os0.listdir(path2))                                     # STEP 61
file0 = opener0(path1,'r')                                              # STEP 62
result = os0.path.isdir(path0)                                          # STEP 63
file0 = opener0(path2,'r')                                              # STEP 64
file0 = opener0(path2,'a')                                              # STEP 65
os0.remove(path2)                                                       # STEP 66
stat1 = os0.lstat(path1)                                                # STEP 67
file0 = opener0(path1)                                                  # STEP 68
path1 += "/" + component0                                               # STEP 69
path0 += "/" + component1                                               # STEP 70
os0.rmdir(path2)                                                        # STEP 71
str0 = ""                                                               # STEP 72
result = os0.path.isdir(path0)                                          # STEP 73
component1 = "g"                                                        # STEP 74
result = os0.path.exists(path0)                                         # STEP 75
component0 = "a"                                                        # STEP 76
stat4 = os0.lstat(path0)                                                # STEP 77
result = sorted(os0.listdir(path0))                                     # STEP 78
file0 = opener0(path0,'a')                                              # STEP 79
result = file0.read()                                                   # STEP 80
result = os0.path.isdir(path1)                                          # STEP 81
os0.rmdir(path2)                                                        # STEP 82
result = os0.read(fd0,bytes2)                                           # STEP 83
result = file0.read(bytes2)                                             # STEP 84
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1087e6830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28468, in act566
    result = self.p_file[0].read(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1158 BRANCHES COVERED
892 STATEMENTS COVERED
