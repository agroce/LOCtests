Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4133.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #387 STEP #83 (0:00:30.000509) Fri Jul 21 23:10:42 2017 [ 894 stmts 1161 branches ] 38683 TOTAL ACTIONS (1289.4114553/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107547830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 77 steps

SAVING TEST AS failure.4133.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
component1 = "alpha"                                                     # STEP 1
component2 = "g"                                                         # STEP 2
str1 = ""                                                                # STEP 3
component3 = "beta"                                                      # STEP 4
bytes0 = 0                                                               # STEP 5
component0 = "b"                                                         # STEP 6
str4 = ""                                                                # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
os0 = newFakeOS()                                                        # STEP 9
result = os0.path.lexists(path1)                                        # STEP 10
path1 += "/" + component2                                               # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
result = os0.path.isabs(path1)                                          # STEP 13
result = os0.path.isdir(path1)                                          # STEP 14
component2 = "d"                                                        # STEP 15
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 16
stat3 = os0.lstat(path1)                                                # STEP 17
path1 += "/" + component1                                               # STEP 18
component1 = "b"                                                        # STEP 19
path1 += "/" + component3                                               # STEP 20
bytes3 = 0                                                              # STEP 21
result = os0.path.exists(path1)                                         # STEP 22
component3 = "h"                                                        # STEP 23
path2 = "/Volumes/ramdisk/test"                                         # STEP 24
result = os0.read(fd0,bytes0)                                           # STEP 25
result = os0.path.isfile(path1)                                         # STEP 26
path1 += "/" + component2                                               # STEP 27
path2 += "/" + component4                                               # STEP 28
result = os0.path.islink(path2)                                         # STEP 29
component2 = "gamma"                                                    # STEP 30
path1 = "/Volumes/ramdisk/test"                                         # STEP 31
os0.link(path2,path2)                                                   # STEP 32
result = os0.path.exists(path1)                                         # STEP 33
path2 = "/Volumes/ramdisk/test"                                         # STEP 34
os0.link(path1,path1)                                                   # STEP 35
component4 = "h"                                                        # STEP 36
path1 += "/" + component2                                               # STEP 37
bytes1 = 0                                                              # STEP 38
result = os0.path.lexists(path1)                                        # STEP 39
result = os0.path.lexists(path2)                                        # STEP 40
result = os0.path.isfile(path1)                                         # STEP 41
path4 = "/Volumes/ramdisk/test"                                         # STEP 42
str3 = ""                                                               # STEP 43
str2 = ""                                                               # STEP 44
result = os0.path.exists(path2)                                         # STEP 45
result = sorted(os0.listdir(path2))                                     # STEP 46
path4 += "/" + component0                                               # STEP 47
path4 = "/Volumes/ramdisk/test"                                         # STEP 48
bytes0 = 0                                                              # STEP 49
path2 = "/Volumes/ramdisk/test"                                         # STEP 50
component2 = "epsilon"                                                  # STEP 51
result = os0.path.lexists(path4)                                        # STEP 52
result = os0.path.exists(path1)                                         # STEP 53
os0.close(fd0)                                                          # STEP 54
os0.link(path2,path4)                                                   # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
os0.link(path1,path2)                                                   # STEP 57
result = os0.path.isdir(path2)                                          # STEP 58
file0 = opener0(path1,'a')                                              # STEP 59
file0.seek(bytes1)                                                      # STEP 60
result = os0.read(fd0,bytes3)                                           # STEP 61
file0.seek(bytes3)                                                      # STEP 62
result = os0.path.isdir(path4)                                          # STEP 63
result = sorted(os0.listdir(path1))                                     # STEP 64
component0 = "c"                                                        # STEP 65
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
result = stat3.st_size                                                  # STEP 67
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 68
os0.link(path2,path1)                                                   # STEP 69
result = os0.path.isabs(path0)                                          # STEP 70
path2 += "/" + component1                                               # STEP 71
result = os0.path.lexists(path1)                                        # STEP 72
path0 += "/" + component2                                               # STEP 73
component1 = "b"                                                        # STEP 74
result = os0.path.isfile(path0)                                         # STEP 75
result = file0.read(bytes0)                                             # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1073c2e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10450bef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 98 steps

SAVING TEST AS failure.4133.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "lambda"                                                    # STEP 0
component2 = "f"                                                         # STEP 1
component4 = "epsilon"                                                   # STEP 2
component3 = "lambda"                                                    # STEP 3
component0 = "omega"                                                     # STEP 4
str1 = ""                                                                # STEP 5
bytes3 = 0                                                               # STEP 6
bytes1 = 0                                                               # STEP 7
bytes4 = 0                                                               # STEP 8
os0 = newFakeOS()                                                        # STEP 9
str4 = ""                                                               # STEP 10
bytes3 += 1                                                             # STEP 11
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
result = os0.path.isabs(path4)                                          # STEP 13
str3 = ""                                                               # STEP 14
path4 += "/" + component0                                               # STEP 15
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 16
os0.link(path4,path4)                                                   # STEP 17
result = os0.path.lexists(path4)                                        # STEP 18
bytes2 = 0                                                              # STEP 19
path4 += "/" + component4                                               # STEP 20
component4 = "b"                                                        # STEP 21
result = os0.path.isabs(path4)                                          # STEP 22
bytes2 += 1                                                             # STEP 23
path4 += "/" + component0                                               # STEP 24
os0.write(fd0,str3)                                                     # STEP 25
os0.makedirs(path4)                                                     # STEP 26
result = os0.path.dirname(path4)                                        # STEP 27
str0 = ""                                                               # STEP 28
bytes3 = 0                                                              # STEP 29
stat4 = os0.fstat(fd0)                                                  # STEP 30
os0.mkdir(path4)                                                        # STEP 31
result = os0.path.lexists(path4)                                        # STEP 32
component0 = "gamma"                                                    # STEP 33
os0.makedirs(path4)                                                     # STEP 34
result = os0.path.exists(path4)                                         # STEP 35
stat2 = os0.fstat(fd0)                                                  # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
path4 += "/" + component1                                               # STEP 38
bytes2 += 1                                                             # STEP 39
bytes1 += 1                                                             # STEP 40
component1 = "b"                                                        # STEP 41
stat0 = os0.lstat(path4)                                                # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
bytes2 = 0                                                              # STEP 44
bytes3 += 1                                                             # STEP 45
result = os0.path.isfile(path2)                                         # STEP 46
path4 = "/Volumes/ramdisk/test"                                         # STEP 47
file0 = opener0(path4,'w')                                              # STEP 48
bytes1 += 1                                                             # STEP 49
result = os0.readlink(path2)                                            # STEP 50
result = os0.path.isabs(path4)                                          # STEP 51
os0.link(path4,path4)                                                   # STEP 52
path2 += "/" + component3                                               # STEP 53
result = os0.readlink(path2)                                            # STEP 54
component3 = "phi"                                                      # STEP 55
result = os0.path.isfile(path2)                                         # STEP 56
bytes0 = 0                                                              # STEP 57
stat1 = os0.fstat(fd0)                                                  # STEP 58
path4 += "/" + component1                                               # STEP 59
component1 = "phi"                                                      # STEP 60
stat3 = os0.lstat(path2)                                                # STEP 61
os0.close(fd0)                                                          # STEP 62
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 63
path2 += "/" + component2                                               # STEP 64
result = os0.path.dirname(path2)                                        # STEP 65
file0 = opener0(path4,'w')                                              # STEP 66
component2 = "beta"                                                     # STEP 67
result = os0.readlink(path4)                                            # STEP 68
bytes1 = 0                                                              # STEP 69
result = file0.readlines()                                              # STEP 70
path2 += "/" + component0                                               # STEP 71
result = file0.readlines()                                              # STEP 72
bytes4 += 1                                                             # STEP 73
result = os0.path.dirname(path4)                                        # STEP 74
path2 += "/" + component3                                               # STEP 75
path2 += "/" + component4                                               # STEP 76
str3 = ""                                                               # STEP 77
path2 = "/Volumes/ramdisk/test"                                         # STEP 78
result = os0.readlink(path2)                                            # STEP 79
result = os0.path.lexists(path4)                                        # STEP 80
os0.write(fd0,str3)                                                     # STEP 81
result = os0.path.lexists(path2)                                        # STEP 82
component3 = "delta"                                                    # STEP 83
component4 = "lambda"                                                   # STEP 84
stat3 = os0.fstat(fd0)                                                  # STEP 85
path4 += "/" + component4                                               # STEP 86
os0.write(fd0,str3)                                                     # STEP 87
component4 = "phi"                                                      # STEP 88
result = os0.readlink(path2)                                            # STEP 89
result = os0.path.lexists(path4)                                        # STEP 90
os0.link(path4,path2)                                                   # STEP 91
path2 += "/" + component1                                               # STEP 92
path4 += "/" + component3                                               # STEP 93
result = stat3.st_size                                                  # STEP 94
component1 = "b"                                                        # STEP 95
bytes2 += 1                                                             # STEP 96
result = file0.read()                                                   # STEP 97
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1044c4998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 30
STOPPING TESTING DUE TO TIMEOUT
42.2519509476 PERCENT COVERED
60.3042099476 TOTAL RUNTIME
766 EXECUTED
76505 TOTAL TEST OPERATIONS
53.8905537128 TIME SPENT EXECUTING TEST OPERATIONS
2.37318396568 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0465505123138 TIME SPENT CHECKING PROPERTIES
53.9371042252 TOTAL TIME SPENT RUNNING SUT
2.23742985725 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
component4 = "beta"                                                      # STEP 0
component1 = "alpha"                                                     # STEP 1
component2 = "g"                                                         # STEP 2
str1 = ""                                                                # STEP 3
component3 = "beta"                                                      # STEP 4
bytes0 = 0                                                               # STEP 5
component0 = "b"                                                         # STEP 6
str4 = ""                                                                # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
os0 = newFakeOS()                                                        # STEP 9
result = os0.path.lexists(path1)                                        # STEP 10
path1 += "/" + component2                                               # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
result = os0.path.isabs(path1)                                          # STEP 13
result = os0.path.isdir(path1)                                          # STEP 14
component2 = "d"                                                        # STEP 15
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 16
stat3 = os0.lstat(path1)                                                # STEP 17
path1 += "/" + component1                                               # STEP 18
component1 = "b"                                                        # STEP 19
path1 += "/" + component3                                               # STEP 20
bytes3 = 0                                                              # STEP 21
result = os0.path.exists(path1)                                         # STEP 22
component3 = "h"                                                        # STEP 23
path2 = "/Volumes/ramdisk/test"                                         # STEP 24
result = os0.read(fd0,bytes0)                                           # STEP 25
result = os0.path.isfile(path1)                                         # STEP 26
path1 += "/" + component2                                               # STEP 27
path2 += "/" + component4                                               # STEP 28
result = os0.path.islink(path2)                                         # STEP 29
component2 = "gamma"                                                    # STEP 30
path1 = "/Volumes/ramdisk/test"                                         # STEP 31
os0.link(path2,path2)                                                   # STEP 32
result = os0.path.exists(path1)                                         # STEP 33
path2 = "/Volumes/ramdisk/test"                                         # STEP 34
os0.link(path1,path1)                                                   # STEP 35
component4 = "h"                                                        # STEP 36
path1 += "/" + component2                                               # STEP 37
bytes1 = 0                                                              # STEP 38
result = os0.path.lexists(path1)                                        # STEP 39
result = os0.path.lexists(path2)                                        # STEP 40
result = os0.path.isfile(path1)                                         # STEP 41
path4 = "/Volumes/ramdisk/test"                                         # STEP 42
str3 = ""                                                               # STEP 43
str2 = ""                                                               # STEP 44
result = os0.path.exists(path2)                                         # STEP 45
result = sorted(os0.listdir(path2))                                     # STEP 46
path4 += "/" + component0                                               # STEP 47
path4 = "/Volumes/ramdisk/test"                                         # STEP 48
bytes0 = 0                                                              # STEP 49
path2 = "/Volumes/ramdisk/test"                                         # STEP 50
component2 = "epsilon"                                                  # STEP 51
result = os0.path.lexists(path4)                                        # STEP 52
result = os0.path.exists(path1)                                         # STEP 53
os0.close(fd0)                                                          # STEP 54
os0.link(path2,path4)                                                   # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
os0.link(path1,path2)                                                   # STEP 57
result = os0.path.isdir(path2)                                          # STEP 58
file0 = opener0(path1,'a')                                              # STEP 59
file0.seek(bytes1)                                                      # STEP 60
result = os0.read(fd0,bytes3)                                           # STEP 61
file0.seek(bytes3)                                                      # STEP 62
result = os0.path.isdir(path4)                                          # STEP 63
result = sorted(os0.listdir(path1))                                     # STEP 64
component0 = "c"                                                        # STEP 65
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
result = stat3.st_size                                                  # STEP 67
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 68
os0.link(path2,path1)                                                   # STEP 69
result = os0.path.isabs(path0)                                          # STEP 70
path2 += "/" + component1                                               # STEP 71
result = os0.path.lexists(path1)                                        # STEP 72
path0 += "/" + component2                                               # STEP 73
component1 = "b"                                                        # STEP 74
result = os0.path.isfile(path0)                                         # STEP 75
result = file0.read(bytes0)                                             # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1073c2e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
component1 = "lambda"                                                    # STEP 0
component2 = "f"                                                         # STEP 1
component4 = "epsilon"                                                   # STEP 2
component3 = "lambda"                                                    # STEP 3
component0 = "omega"                                                     # STEP 4
str1 = ""                                                                # STEP 5
bytes3 = 0                                                               # STEP 6
bytes1 = 0                                                               # STEP 7
bytes4 = 0                                                               # STEP 8
os0 = newFakeOS()                                                        # STEP 9
str4 = ""                                                               # STEP 10
bytes3 += 1                                                             # STEP 11
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
result = os0.path.isabs(path4)                                          # STEP 13
str3 = ""                                                               # STEP 14
path4 += "/" + component0                                               # STEP 15
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 16
os0.link(path4,path4)                                                   # STEP 17
result = os0.path.lexists(path4)                                        # STEP 18
bytes2 = 0                                                              # STEP 19
path4 += "/" + component4                                               # STEP 20
component4 = "b"                                                        # STEP 21
result = os0.path.isabs(path4)                                          # STEP 22
bytes2 += 1                                                             # STEP 23
path4 += "/" + component0                                               # STEP 24
os0.write(fd0,str3)                                                     # STEP 25
os0.makedirs(path4)                                                     # STEP 26
result = os0.path.dirname(path4)                                        # STEP 27
str0 = ""                                                               # STEP 28
bytes3 = 0                                                              # STEP 29
stat4 = os0.fstat(fd0)                                                  # STEP 30
os0.mkdir(path4)                                                        # STEP 31
result = os0.path.lexists(path4)                                        # STEP 32
component0 = "gamma"                                                    # STEP 33
os0.makedirs(path4)                                                     # STEP 34
result = os0.path.exists(path4)                                         # STEP 35
stat2 = os0.fstat(fd0)                                                  # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
path4 += "/" + component1                                               # STEP 38
bytes2 += 1                                                             # STEP 39
bytes1 += 1                                                             # STEP 40
component1 = "b"                                                        # STEP 41
stat0 = os0.lstat(path4)                                                # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
bytes2 = 0                                                              # STEP 44
bytes3 += 1                                                             # STEP 45
result = os0.path.isfile(path2)                                         # STEP 46
path4 = "/Volumes/ramdisk/test"                                         # STEP 47
file0 = opener0(path4,'w')                                              # STEP 48
bytes1 += 1                                                             # STEP 49
result = os0.readlink(path2)                                            # STEP 50
result = os0.path.isabs(path4)                                          # STEP 51
os0.link(path4,path4)                                                   # STEP 52
path2 += "/" + component3                                               # STEP 53
result = os0.readlink(path2)                                            # STEP 54
component3 = "phi"                                                      # STEP 55
result = os0.path.isfile(path2)                                         # STEP 56
bytes0 = 0                                                              # STEP 57
stat1 = os0.fstat(fd0)                                                  # STEP 58
path4 += "/" + component1                                               # STEP 59
component1 = "phi"                                                      # STEP 60
stat3 = os0.lstat(path2)                                                # STEP 61
os0.close(fd0)                                                          # STEP 62
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 63
path2 += "/" + component2                                               # STEP 64
result = os0.path.dirname(path2)                                        # STEP 65
file0 = opener0(path4,'w')                                              # STEP 66
component2 = "beta"                                                     # STEP 67
result = os0.readlink(path4)                                            # STEP 68
bytes1 = 0                                                              # STEP 69
result = file0.readlines()                                              # STEP 70
path2 += "/" + component0                                               # STEP 71
result = file0.readlines()                                              # STEP 72
bytes4 += 1                                                             # STEP 73
result = os0.path.dirname(path4)                                        # STEP 74
path2 += "/" + component3                                               # STEP 75
path2 += "/" + component4                                               # STEP 76
str3 = ""                                                               # STEP 77
path2 = "/Volumes/ramdisk/test"                                         # STEP 78
result = os0.readlink(path2)                                            # STEP 79
result = os0.path.lexists(path4)                                        # STEP 80
os0.write(fd0,str3)                                                     # STEP 81
result = os0.path.lexists(path2)                                        # STEP 82
component3 = "delta"                                                    # STEP 83
component4 = "lambda"                                                   # STEP 84
stat3 = os0.fstat(fd0)                                                  # STEP 85
path4 += "/" + component4                                               # STEP 86
os0.write(fd0,str3)                                                     # STEP 87
component4 = "phi"                                                      # STEP 88
result = os0.readlink(path2)                                            # STEP 89
result = os0.path.lexists(path4)                                        # STEP 90
os0.link(path4,path2)                                                   # STEP 91
path2 += "/" + component1                                               # STEP 92
path4 += "/" + component3                                               # STEP 93
result = stat3.st_size                                                  # STEP 94
component1 = "b"                                                        # STEP 95
bytes2 += 1                                                             # STEP 96
result = file0.read()                                                   # STEP 97
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1044c4998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1175 BRANCHES COVERED
902 STATEMENTS COVERED
