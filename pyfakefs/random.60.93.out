Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5860.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a54d9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 88 steps

SAVING TEST AS failure.5860.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "c"                                                         # STEP 0
component3 = "alpha"                                                     # STEP 1
component0 = "c"                                                         # STEP 2
str2 = ""                                                                # STEP 3
os0 = newFakeOS()                                                        # STEP 4
str2 += 'u'                                                              # STEP 5
component1 = "f"                                                         # STEP 6
component4 = "gamma"                                                     # STEP 7
str2 += 'j'                                                              # STEP 8
str2 += 'v'                                                              # STEP 9
str2 += 'i'                                                             # STEP 10
str2 += 'i'                                                             # STEP 11
bytes1 = 0                                                              # STEP 12
str2 += 'p'                                                             # STEP 13
bytes4 = 0                                                              # STEP 14
str2 += 'l'                                                             # STEP 15
str2 += " "                                                             # STEP 16
str2 += 'l'                                                             # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
str2 += 'j'                                                             # STEP 19
str2 += 'x'                                                             # STEP 20
str2 += 'b'                                                             # STEP 21
bytes1 += 1                                                             # STEP 22
bytes0 = 0                                                              # STEP 23
str2 += 'd'                                                             # STEP 24
bytes1 = 0                                                              # STEP 25
str2 += 't'                                                             # STEP 26
bytes4 += 1                                                             # STEP 27
str2 += 'n'                                                             # STEP 28
path1 = "/Volumes/ramdisk/test"                                         # STEP 29
path1 += "/" + component4                                               # STEP 30
str2 += 'f'                                                             # STEP 31
result = os0.readlink(path1)                                            # STEP 32
stat2 = os0.lstat(path1)                                                # STEP 33
component4 = "lambda"                                                   # STEP 34
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 35
stat2 = os0.fstat(fd0)                                                  # STEP 36
result = stat2.st_size                                                  # STEP 37
bytes2 = 0                                                              # STEP 38
str2 += 'a'                                                             # STEP 39
str2 += 'a'                                                             # STEP 40
os0.close(fd0)                                                          # STEP 41
result = os0.path.lexists(path1)                                        # STEP 42
str2 += 'd'                                                             # STEP 43
result = os0.read(fd0,bytes2)                                           # STEP 44
stat4 = os0.lstat(path1)                                                # STEP 45
result = os0.path.dirname(path1)                                        # STEP 46
result = stat2.st_nlink                                                 # STEP 47
os0.write(fd0,str2)                                                     # STEP 48
path4 = "/Volumes/ramdisk/test"                                         # STEP 49
file0 = opener0(path1,'w')                                              # STEP 50
result = file0.read(bytes0)                                             # STEP 51
stat1 = os0.fstat(fd0)                                                  # STEP 52
file0.seek(bytes0)                                                      # STEP 53
path1 += "/" + component0                                               # STEP 54
result = os0.path.abspath(path4)                                        # STEP 55
result = os0.path.lexists(path1)                                        # STEP 56
os0.symlink(path1,path4)                                                # STEP 57
result = os0.path.exists(path4)                                         # STEP 58
component0 = "e"                                                        # STEP 59
result = os0.path.isfile(path4)                                         # STEP 60
path2 = "/Volumes/ramdisk/test"                                         # STEP 61
os0.symlink(path1,path4)                                                # STEP 62
os0.mkdir(path2)                                                        # STEP 63
str2 += 'v'                                                             # STEP 64
str2 += 'g'                                                             # STEP 65
str2 += 'z'                                                             # STEP 66
str2 += 'q'                                                             # STEP 67
str0 = ""                                                               # STEP 68
str2 += 'r'                                                             # STEP 69
os0.mkdir(path2)                                                        # STEP 70
os0.makedirs(path2)                                                     # STEP 71
os0.link(path1,path4)                                                   # STEP 72
file0.seek(bytes1)                                                      # STEP 73
stat0 = os0.stat(path1)                                                 # STEP 74
str0 += 'c'                                                             # STEP 75
os0.symlink(path4,path2)                                                # STEP 76
result = os0.path.abspath(path1)                                        # STEP 77
os0.rmdir(path1)                                                        # STEP 78
str3 = ""                                                               # STEP 79
str2 += 'n'                                                             # STEP 80
result = os0.path.islink(path1)                                         # STEP 81
result = os0.path.isfile(path4)                                         # STEP 82
os0.write(fd0,str0)                                                     # STEP 83
bytes1 += 1                                                             # STEP 84
str2 += 'y'                                                             # STEP 85
result = os0.readlink(path2)                                            # STEP 86
result = file0.read()                                                   # STEP 87
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103f9bfc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #449 STEP #50 (0:00:30.000890) Sat Jul 22 08:12:18 2017 [ 898 stmts 1170 branches ] 44838 TOTAL ACTIONS (1494.55566069/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 88
STOPPING TESTING DUE TO TIMEOUT
42.474916388 PERCENT COVERED
60.3283159733 TOTAL RUNTIME
889 EXECUTED
88876 TOTAL TEST OPERATIONS
52.4713115692 TIME SPENT EXECUTING TEST OPERATIONS
4.1771531105 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0535881519318 TIME SPENT CHECKING PROPERTIES
52.5248997211 TOTAL TIME SPENT RUNNING SUT
2.59620070457 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "c"                                                         # STEP 0
component3 = "alpha"                                                     # STEP 1
component0 = "c"                                                         # STEP 2
str2 = ""                                                                # STEP 3
os0 = newFakeOS()                                                        # STEP 4
str2 += 'u'                                                              # STEP 5
component1 = "f"                                                         # STEP 6
component4 = "gamma"                                                     # STEP 7
str2 += 'j'                                                              # STEP 8
str2 += 'v'                                                              # STEP 9
str2 += 'i'                                                             # STEP 10
str2 += 'i'                                                             # STEP 11
bytes1 = 0                                                              # STEP 12
str2 += 'p'                                                             # STEP 13
bytes4 = 0                                                              # STEP 14
str2 += 'l'                                                             # STEP 15
str2 += " "                                                             # STEP 16
str2 += 'l'                                                             # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
str2 += 'j'                                                             # STEP 19
str2 += 'x'                                                             # STEP 20
str2 += 'b'                                                             # STEP 21
bytes1 += 1                                                             # STEP 22
bytes0 = 0                                                              # STEP 23
str2 += 'd'                                                             # STEP 24
bytes1 = 0                                                              # STEP 25
str2 += 't'                                                             # STEP 26
bytes4 += 1                                                             # STEP 27
str2 += 'n'                                                             # STEP 28
path1 = "/Volumes/ramdisk/test"                                         # STEP 29
path1 += "/" + component4                                               # STEP 30
str2 += 'f'                                                             # STEP 31
result = os0.readlink(path1)                                            # STEP 32
stat2 = os0.lstat(path1)                                                # STEP 33
component4 = "lambda"                                                   # STEP 34
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 35
stat2 = os0.fstat(fd0)                                                  # STEP 36
result = stat2.st_size                                                  # STEP 37
bytes2 = 0                                                              # STEP 38
str2 += 'a'                                                             # STEP 39
str2 += 'a'                                                             # STEP 40
os0.close(fd0)                                                          # STEP 41
result = os0.path.lexists(path1)                                        # STEP 42
str2 += 'd'                                                             # STEP 43
result = os0.read(fd0,bytes2)                                           # STEP 44
stat4 = os0.lstat(path1)                                                # STEP 45
result = os0.path.dirname(path1)                                        # STEP 46
result = stat2.st_nlink                                                 # STEP 47
os0.write(fd0,str2)                                                     # STEP 48
path4 = "/Volumes/ramdisk/test"                                         # STEP 49
file0 = opener0(path1,'w')                                              # STEP 50
result = file0.read(bytes0)                                             # STEP 51
stat1 = os0.fstat(fd0)                                                  # STEP 52
file0.seek(bytes0)                                                      # STEP 53
path1 += "/" + component0                                               # STEP 54
result = os0.path.abspath(path4)                                        # STEP 55
result = os0.path.lexists(path1)                                        # STEP 56
os0.symlink(path1,path4)                                                # STEP 57
result = os0.path.exists(path4)                                         # STEP 58
component0 = "e"                                                        # STEP 59
result = os0.path.isfile(path4)                                         # STEP 60
path2 = "/Volumes/ramdisk/test"                                         # STEP 61
os0.symlink(path1,path4)                                                # STEP 62
os0.mkdir(path2)                                                        # STEP 63
str2 += 'v'                                                             # STEP 64
str2 += 'g'                                                             # STEP 65
str2 += 'z'                                                             # STEP 66
str2 += 'q'                                                             # STEP 67
str0 = ""                                                               # STEP 68
str2 += 'r'                                                             # STEP 69
os0.mkdir(path2)                                                        # STEP 70
os0.makedirs(path2)                                                     # STEP 71
os0.link(path1,path4)                                                   # STEP 72
file0.seek(bytes1)                                                      # STEP 73
stat0 = os0.stat(path1)                                                 # STEP 74
str0 += 'c'                                                             # STEP 75
os0.symlink(path4,path2)                                                # STEP 76
result = os0.path.abspath(path1)                                        # STEP 77
os0.rmdir(path1)                                                        # STEP 78
str3 = ""                                                               # STEP 79
str2 += 'n'                                                             # STEP 80
result = os0.path.islink(path1)                                         # STEP 81
result = os0.path.isfile(path4)                                         # STEP 82
os0.write(fd0,str0)                                                     # STEP 83
bytes1 += 1                                                             # STEP 84
str2 += 'y'                                                             # STEP 85
result = os0.readlink(path2)                                            # STEP 86
result = file0.read()                                                   # STEP 87
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103f9bfc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1180 BRANCHES COVERED
904 STATEMENTS COVERED
