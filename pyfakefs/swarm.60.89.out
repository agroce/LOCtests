Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5800.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #390 STEP #37 (0:00:30.000410) Sat Jul 22 07:47:15 2017 [ 894 stmts 1162 branches ] 38937 TOTAL ACTIONS (1297.88225882/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105bb0ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 78 steps

SAVING TEST AS failure.5800.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "beta"                                                      # STEP 0
component4 = "d"                                                         # STEP 1
bytes3 = 0                                                               # STEP 2
component2 = "beta"                                                      # STEP 3
str2 = ""                                                                # STEP 4
component1 = "alpha"                                                     # STEP 5
component0 = "lambda"                                                    # STEP 6
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
os0 = newFakeOS()                                                        # STEP 8
path3 += "/" + component0                                                # STEP 9
component0 = "delta"                                                    # STEP 10
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 11
path3 += "/" + component4                                               # STEP 12
result = os0.read(fd0,bytes3)                                           # STEP 13
path3 = "/Volumes/ramdisk/test"                                         # STEP 14
os0.write(fd0,str2)                                                     # STEP 15
opener0 = newFakeOpener(os0)                                            # STEP 16
path3 += "/" + component3                                               # STEP 17
component3 = "lambda"                                                   # STEP 18
component4 = "phi"                                                      # STEP 19
str3 = ""                                                               # STEP 20
stat3 = os0.stat(path3)                                                 # STEP 21
path3 += "/" + component3                                               # STEP 22
component3 = "c"                                                        # STEP 23
os0.rmdir(path3)                                                        # STEP 24
os0.close(fd0)                                                          # STEP 25
bytes2 = 0                                                              # STEP 26
path3 += "/" + component4                                               # STEP 27
component4 = "g"                                                        # STEP 28
file0 = opener0(path3)                                                  # STEP 29
str0 = ""                                                               # STEP 30
path0 = "/Volumes/ramdisk/test"                                         # STEP 31
bytes3 = 0                                                              # STEP 32
os0.link(path3,path3)                                                   # STEP 33
path0 += "/" + component2                                               # STEP 34
bytes0 = 0                                                              # STEP 35
result = os0.read(fd0,bytes2)                                           # STEP 36
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 37
path3 += "/" + component0                                               # STEP 38
component0 = "omega"                                                    # STEP 39
result = os0.path.exists(path0)                                         # STEP 40
result = os0.read(fd0,bytes2)                                           # STEP 41
result = os0.path.isfile(path0)                                         # STEP 42
stat3 = os0.stat(path3)                                                 # STEP 43
component2 = "a"                                                        # STEP 44
os0.symlink(path0,path3)                                                # STEP 45
str4 = ""                                                               # STEP 46
stat3 = os0.stat(path0)                                                 # STEP 47
os0.symlink(path0,path3)                                                # STEP 48
path0 += "/" + component3                                               # STEP 49
os0.symlink(path0,path3)                                                # STEP 50
bytes4 = 0                                                              # STEP 51
os0.rmdir(path0)                                                        # STEP 52
result = os0.path.dirname(path3)                                        # STEP 53
component3 = "a"                                                        # STEP 54
path0 += "/" + component4                                               # STEP 55
result = os0.read(fd0,bytes0)                                           # STEP 56
result = os0.path.isfile(path3)                                         # STEP 57
path3 = "/Volumes/ramdisk/test"                                         # STEP 58
result = os0.path.exists(path0)                                         # STEP 59
os0.makedirs(path0)                                                     # STEP 60
file0 = opener0(path3)                                                  # STEP 61
os0.symlink(path0,path0)                                                # STEP 62
component4 = "b"                                                        # STEP 63
result = os0.read(fd0,bytes0)                                           # STEP 64
path3 += "/" + component0                                               # STEP 65
os0.rmdir(path3)                                                        # STEP 66
os0.rmdir(path3)                                                        # STEP 67
component0 = "c"                                                        # STEP 68
os0.rmdir(path3)                                                        # STEP 69
stat0 = os0.stat(path0)                                                 # STEP 70
file0 = opener0(path3,'a')                                              # STEP 71
os0.link(path0,path0)                                                   # STEP 72
result = os0.read(fd0,bytes2)                                           # STEP 73
stat2 = os0.stat(path0)                                                 # STEP 74
path0 = "/Volumes/ramdisk/test"                                         # STEP 75
path3 += "/" + component0                                               # STEP 76
result = file0.readline(bytes3)                                         # STEP 77
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x108a455a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 6
STOPPING TESTING DUE TO TIMEOUT
42.2891118543 PERCENT COVERED
60.3210282326 TOTAL RUNTIME
747 EXECUTED
74584 TOTAL TEST OPERATIONS
54.1150643826 TIME SPENT EXECUTING TEST OPERATIONS
2.34554409981 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0462930202484 TIME SPENT CHECKING PROPERTIES
54.1613574028 TOTAL TIME SPENT RUNNING SUT
2.18538093567 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "beta"                                                      # STEP 0
component4 = "d"                                                         # STEP 1
bytes3 = 0                                                               # STEP 2
component2 = "beta"                                                      # STEP 3
str2 = ""                                                                # STEP 4
component1 = "alpha"                                                     # STEP 5
component0 = "lambda"                                                    # STEP 6
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
os0 = newFakeOS()                                                        # STEP 8
path3 += "/" + component0                                                # STEP 9
component0 = "delta"                                                    # STEP 10
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 11
path3 += "/" + component4                                               # STEP 12
result = os0.read(fd0,bytes3)                                           # STEP 13
path3 = "/Volumes/ramdisk/test"                                         # STEP 14
os0.write(fd0,str2)                                                     # STEP 15
opener0 = newFakeOpener(os0)                                            # STEP 16
path3 += "/" + component3                                               # STEP 17
component3 = "lambda"                                                   # STEP 18
component4 = "phi"                                                      # STEP 19
str3 = ""                                                               # STEP 20
stat3 = os0.stat(path3)                                                 # STEP 21
path3 += "/" + component3                                               # STEP 22
component3 = "c"                                                        # STEP 23
os0.rmdir(path3)                                                        # STEP 24
os0.close(fd0)                                                          # STEP 25
bytes2 = 0                                                              # STEP 26
path3 += "/" + component4                                               # STEP 27
component4 = "g"                                                        # STEP 28
file0 = opener0(path3)                                                  # STEP 29
str0 = ""                                                               # STEP 30
path0 = "/Volumes/ramdisk/test"                                         # STEP 31
bytes3 = 0                                                              # STEP 32
os0.link(path3,path3)                                                   # STEP 33
path0 += "/" + component2                                               # STEP 34
bytes0 = 0                                                              # STEP 35
result = os0.read(fd0,bytes2)                                           # STEP 36
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 37
path3 += "/" + component0                                               # STEP 38
component0 = "omega"                                                    # STEP 39
result = os0.path.exists(path0)                                         # STEP 40
result = os0.read(fd0,bytes2)                                           # STEP 41
result = os0.path.isfile(path0)                                         # STEP 42
stat3 = os0.stat(path3)                                                 # STEP 43
component2 = "a"                                                        # STEP 44
os0.symlink(path0,path3)                                                # STEP 45
str4 = ""                                                               # STEP 46
stat3 = os0.stat(path0)                                                 # STEP 47
os0.symlink(path0,path3)                                                # STEP 48
path0 += "/" + component3                                               # STEP 49
os0.symlink(path0,path3)                                                # STEP 50
bytes4 = 0                                                              # STEP 51
os0.rmdir(path0)                                                        # STEP 52
result = os0.path.dirname(path3)                                        # STEP 53
component3 = "a"                                                        # STEP 54
path0 += "/" + component4                                               # STEP 55
result = os0.read(fd0,bytes0)                                           # STEP 56
result = os0.path.isfile(path3)                                         # STEP 57
path3 = "/Volumes/ramdisk/test"                                         # STEP 58
result = os0.path.exists(path0)                                         # STEP 59
os0.makedirs(path0)                                                     # STEP 60
file0 = opener0(path3)                                                  # STEP 61
os0.symlink(path0,path0)                                                # STEP 62
component4 = "b"                                                        # STEP 63
result = os0.read(fd0,bytes0)                                           # STEP 64
path3 += "/" + component0                                               # STEP 65
os0.rmdir(path3)                                                        # STEP 66
os0.rmdir(path3)                                                        # STEP 67
component0 = "c"                                                        # STEP 68
os0.rmdir(path3)                                                        # STEP 69
stat0 = os0.stat(path0)                                                 # STEP 70
file0 = opener0(path3,'a')                                              # STEP 71
os0.link(path0,path0)                                                   # STEP 72
result = os0.read(fd0,bytes2)                                           # STEP 73
stat2 = os0.stat(path0)                                                 # STEP 74
path0 = "/Volumes/ramdisk/test"                                         # STEP 75
path3 += "/" + component0                                               # STEP 76
result = file0.readline(bytes3)                                         # STEP 77
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x108a455a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1174 BRANCHES COVERED
901 STATEMENTS COVERED
