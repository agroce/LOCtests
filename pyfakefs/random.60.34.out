Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4673.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (\x00) ',), <traceback object at 0x106fccea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16158, in act373
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 97 steps

SAVING TEST AS failure.4673.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes1 = 0                                                               # STEP 0
component2 = "f"                                                         # STEP 1
component1 = "omega"                                                     # STEP 2
component0 = "epsilon"                                                   # STEP 3
component4 = "d"                                                         # STEP 4
bytes2 = 0                                                               # STEP 5
component3 = "lambda"                                                    # STEP 6
str1 = ""                                                                # STEP 7
bytes4 = 0                                                               # STEP 8
str1 += " "                                                              # STEP 9
bytes1 += 1                                                             # STEP 10
str1 += 'h'                                                             # STEP 11
str1 += " "                                                             # STEP 12
str1 += 's'                                                             # STEP 13
path2 = "/Volumes/ramdisk/test"                                         # STEP 14
str1 += 'm'                                                             # STEP 15
str1 += 'i'                                                             # STEP 16
str1 += 'n'                                                             # STEP 17
str3 = ""                                                               # STEP 18
str3 += 'v'                                                             # STEP 19
str3 += 'w'                                                             # STEP 20
str2 = ""                                                               # STEP 21
str1 += 'e'                                                             # STEP 22
str3 += 'p'                                                             # STEP 23
str3 += 'f'                                                             # STEP 24
str1 = ""                                                               # STEP 25
bytes2 += 1                                                             # STEP 26
str1 += 'y'                                                             # STEP 27
str1 += 'f'                                                             # STEP 28
str1 += 'f'                                                             # STEP 29
path2 += "/" + component4                                               # STEP 30
component4 = "omega"                                                    # STEP 31
str2 += 'p'                                                             # STEP 32
bytes3 = 0                                                              # STEP 33
str3 += " "                                                             # STEP 34
os0 = newFakeOS()                                                       # STEP 35
str1 += 'i'                                                             # STEP 36
str0 = ""                                                               # STEP 37
str4 = ""                                                               # STEP 38
str2 += 'h'                                                             # STEP 39
str4 += 'h'                                                             # STEP 40
str3 += 'c'                                                             # STEP 41
stat1 = os0.lstat(path2)                                                # STEP 42
str4 += 'q'                                                             # STEP 43
opener0 = newFakeOpener(os0)                                            # STEP 44
str4 += 'r'                                                             # STEP 45
str1 += 'h'                                                             # STEP 46
str1 += 'y'                                                             # STEP 47
file0 = opener0(path2,'a')                                              # STEP 48
str4 += 'n'                                                             # STEP 49
str2 += 's'                                                             # STEP 50
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 51
str0 += 'i'                                                             # STEP 52
str0 += 'p'                                                             # STEP 53
str0 = ""                                                               # STEP 54
str2 += 'w'                                                             # STEP 55
result = file0.read(bytes1)                                             # STEP 56
str2 += 't'                                                             # STEP 57
stat3 = os0.fstat(fd0)                                                  # STEP 58
str2 += 'j'                                                             # STEP 59
str2 += 'q'                                                             # STEP 60
stat4 = os0.stat(path2)                                                 # STEP 61
result = stat3.st_nlink                                                 # STEP 62
str2 += 'u'                                                             # STEP 63
str1 += 'o'                                                             # STEP 64
result = os0.read(fd0,bytes1)                                           # STEP 65
str4 += 'q'                                                             # STEP 66
str0 += 'z'                                                             # STEP 67
str4 += 'd'                                                             # STEP 68
bytes2 = 0                                                              # STEP 69
bytes2 += 1                                                             # STEP 70
str3 += 'r'                                                             # STEP 71
str1 += 'z'                                                             # STEP 72
result = stat4.st_size                                                  # STEP 73
path2 += "/" + component3                                               # STEP 74
str0 += 'x'                                                             # STEP 75
component3 = "h"                                                        # STEP 76
str1 += 'q'                                                             # STEP 77
str0 += 'd'                                                             # STEP 78
str2 += 'b'                                                             # STEP 79
result = file0.readline(bytes3)                                         # STEP 80
result = file0.read(bytes2)                                             # STEP 81
bytes2 = 0                                                              # STEP 82
str0 += 'a'                                                             # STEP 83
str2 += 'l'                                                             # STEP 84
result = file0.readline(bytes4)                                         # STEP 85
str2 += 'z'                                                             # STEP 86
str4 += " "                                                             # STEP 87
file0.seek(bytes1)                                                      # STEP 88
result = stat4.st_size                                                  # STEP 89
path2 += "/" + component1                                               # STEP 90
result = file0.readline(bytes2)                                         # STEP 91
str4 += 'e'                                                             # STEP 92
stat1 = os0.stat(path2)                                                 # STEP 93
file0.truncate()                                                        # STEP 94
str1 += 'z'                                                             # STEP 95
result = os0.read(fd0,bytes1)                                           # STEP 96
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (\x00) ',), <traceback object at 0x1099621b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16158, in act373
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #468 STEP #26 (0:00:30.001073) Sat Jul 22 01:46:19 2017 [ 888 stmts 1160 branches ] 46723 TOTAL ACTIONS (1557.37762479/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 58
STOPPING TESTING DUE TO TIMEOUT
42.6607209216 PERCENT COVERED
60.334980011 TOTAL RUNTIME
834 EXECUTED
83355 TOTAL TEST OPERATIONS
52.9025454521 TIME SPENT EXECUTING TEST OPERATIONS
3.98462295532 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0508847236633 TIME SPENT CHECKING PROPERTIES
52.9534301758 TOTAL TIME SPENT RUNNING SUT
2.40700507164 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes1 = 0                                                               # STEP 0
component2 = "f"                                                         # STEP 1
component1 = "omega"                                                     # STEP 2
component0 = "epsilon"                                                   # STEP 3
component4 = "d"                                                         # STEP 4
bytes2 = 0                                                               # STEP 5
component3 = "lambda"                                                    # STEP 6
str1 = ""                                                                # STEP 7
bytes4 = 0                                                               # STEP 8
str1 += " "                                                              # STEP 9
bytes1 += 1                                                             # STEP 10
str1 += 'h'                                                             # STEP 11
str1 += " "                                                             # STEP 12
str1 += 's'                                                             # STEP 13
path2 = "/Volumes/ramdisk/test"                                         # STEP 14
str1 += 'm'                                                             # STEP 15
str1 += 'i'                                                             # STEP 16
str1 += 'n'                                                             # STEP 17
str3 = ""                                                               # STEP 18
str3 += 'v'                                                             # STEP 19
str3 += 'w'                                                             # STEP 20
str2 = ""                                                               # STEP 21
str1 += 'e'                                                             # STEP 22
str3 += 'p'                                                             # STEP 23
str3 += 'f'                                                             # STEP 24
str1 = ""                                                               # STEP 25
bytes2 += 1                                                             # STEP 26
str1 += 'y'                                                             # STEP 27
str1 += 'f'                                                             # STEP 28
str1 += 'f'                                                             # STEP 29
path2 += "/" + component4                                               # STEP 30
component4 = "omega"                                                    # STEP 31
str2 += 'p'                                                             # STEP 32
bytes3 = 0                                                              # STEP 33
str3 += " "                                                             # STEP 34
os0 = newFakeOS()                                                       # STEP 35
str1 += 'i'                                                             # STEP 36
str0 = ""                                                               # STEP 37
str4 = ""                                                               # STEP 38
str2 += 'h'                                                             # STEP 39
str4 += 'h'                                                             # STEP 40
str3 += 'c'                                                             # STEP 41
stat1 = os0.lstat(path2)                                                # STEP 42
str4 += 'q'                                                             # STEP 43
opener0 = newFakeOpener(os0)                                            # STEP 44
str4 += 'r'                                                             # STEP 45
str1 += 'h'                                                             # STEP 46
str1 += 'y'                                                             # STEP 47
file0 = opener0(path2,'a')                                              # STEP 48
str4 += 'n'                                                             # STEP 49
str2 += 's'                                                             # STEP 50
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 51
str0 += 'i'                                                             # STEP 52
str0 += 'p'                                                             # STEP 53
str0 = ""                                                               # STEP 54
str2 += 'w'                                                             # STEP 55
result = file0.read(bytes1)                                             # STEP 56
str2 += 't'                                                             # STEP 57
stat3 = os0.fstat(fd0)                                                  # STEP 58
str2 += 'j'                                                             # STEP 59
str2 += 'q'                                                             # STEP 60
stat4 = os0.stat(path2)                                                 # STEP 61
result = stat3.st_nlink                                                 # STEP 62
str2 += 'u'                                                             # STEP 63
str1 += 'o'                                                             # STEP 64
result = os0.read(fd0,bytes1)                                           # STEP 65
str4 += 'q'                                                             # STEP 66
str0 += 'z'                                                             # STEP 67
str4 += 'd'                                                             # STEP 68
bytes2 = 0                                                              # STEP 69
bytes2 += 1                                                             # STEP 70
str3 += 'r'                                                             # STEP 71
str1 += 'z'                                                             # STEP 72
result = stat4.st_size                                                  # STEP 73
path2 += "/" + component3                                               # STEP 74
str0 += 'x'                                                             # STEP 75
component3 = "h"                                                        # STEP 76
str1 += 'q'                                                             # STEP 77
str0 += 'd'                                                             # STEP 78
str2 += 'b'                                                             # STEP 79
result = file0.readline(bytes3)                                         # STEP 80
result = file0.read(bytes2)                                             # STEP 81
bytes2 = 0                                                              # STEP 82
str0 += 'a'                                                             # STEP 83
str2 += 'l'                                                             # STEP 84
result = file0.readline(bytes4)                                         # STEP 85
str2 += 'z'                                                             # STEP 86
str4 += " "                                                             # STEP 87
file0.seek(bytes1)                                                      # STEP 88
result = stat4.st_size                                                  # STEP 89
path2 += "/" + component1                                               # STEP 90
result = file0.readline(bytes2)                                         # STEP 91
str4 += 'e'                                                             # STEP 92
stat1 = os0.stat(path2)                                                 # STEP 93
file0.truncate()                                                        # STEP 94
str1 += 'z'                                                             # STEP 95
result = os0.read(fd0,bytes1)                                           # STEP 96
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (\x00) ',), <traceback object at 0x1099621b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16158, in act373
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1183 BRANCHES COVERED
908 STATEMENTS COVERED
