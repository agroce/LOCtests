Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5623.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (13) == (0) ',), <traceback object at 0x10a69afc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 99 steps

SAVING TEST AS failure.5623.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "d"                                                         # STEP 0
component3 = "c"                                                         # STEP 1
component1 = "d"                                                         # STEP 2
component0 = "delta"                                                     # STEP 3
component2 = "b"                                                         # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
bytes3 = 0                                                               # STEP 6
bytes4 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
bytes3 += 1                                                              # STEP 9
str4 = ""                                                               # STEP 10
result = os0.path.isabs(path1)                                          # STEP 11
str4 += " "                                                             # STEP 12
os0.symlink(path1,path1)                                                # STEP 13
str4 += 'k'                                                             # STEP 14
str4 += 'u'                                                             # STEP 15
str4 += 'b'                                                             # STEP 16
result = os0.path.abspath(path1)                                        # STEP 17
str4 += 'k'                                                             # STEP 18
str4 += 'j'                                                             # STEP 19
str0 = ""                                                               # STEP 20
str4 += 'i'                                                             # STEP 21
os0.symlink(path1,path1)                                                # STEP 22
str0 += 'h'                                                             # STEP 23
path1 += "/" + component4                                               # STEP 24
str4 += 'y'                                                             # STEP 25
result = os0.path.lexists(path1)                                        # STEP 26
result = os0.readlink(path1)                                            # STEP 27
str4 += 'c'                                                             # STEP 28
str4 += " "                                                             # STEP 29
bytes2 = 0                                                              # STEP 30
str0 += 'g'                                                             # STEP 31
component4 = "c"                                                        # STEP 32
str0 += 'r'                                                             # STEP 33
str4 += 'b'                                                             # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
result = os0.path.isfile(path1)                                         # STEP 36
str4 += 'z'                                                             # STEP 37
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 38
file0 = opener0(path1,'a')                                              # STEP 39
os0.rmdir(path1)                                                        # STEP 40
str0 += 'h'                                                             # STEP 41
result = file0.read()                                                   # STEP 42
str0 += 'v'                                                             # STEP 43
str4 += 'x'                                                             # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
file0.write(str4)                                                       # STEP 46
os0.symlink(path1,path1)                                                # STEP 47
path1 += "/" + component3                                               # STEP 48
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
str4 = ""                                                               # STEP 50
os0.remove(path0)                                                       # STEP 51
str4 += 'c'                                                             # STEP 52
stat0 = os0.fstat(fd0)                                                  # STEP 53
str3 = ""                                                               # STEP 54
str3 += 'i'                                                             # STEP 55
str3 += 'w'                                                             # STEP 56
str0 += " "                                                             # STEP 57
os0.link(path1,path1)                                                   # STEP 58
component3 = "beta"                                                     # STEP 59
str0 += 'm'                                                             # STEP 60
str3 += 'k'                                                             # STEP 61
str0 += " "                                                             # STEP 62
os0.symlink(path0,path1)                                                # STEP 63
str0 += 'h'                                                             # STEP 64
str0 += 'q'                                                             # STEP 65
str3 += 'y'                                                             # STEP 66
str3 += 's'                                                             # STEP 67
str4 += 'i'                                                             # STEP 68
str4 += 'l'                                                             # STEP 69
os0.symlink(path1,path0)                                                # STEP 70
str4 = ""                                                               # STEP 71
str3 += 'd'                                                             # STEP 72
stat3 = os0.fstat(fd0)                                                  # STEP 73
str0 += 'a'                                                             # STEP 74
stat2 = os0.fstat(fd0)                                                  # STEP 75
str3 += 'v'                                                             # STEP 76
str0 += 'a'                                                             # STEP 77
str0 += 'f'                                                             # STEP 78
result = os0.read(fd0,bytes4)                                           # STEP 79
str4 += 'd'                                                             # STEP 80
str0 += 'g'                                                             # STEP 81
str4 += 'g'                                                             # STEP 82
result = os0.path.exists(path0)                                         # STEP 83
result = sorted(os0.listdir(path0))                                     # STEP 84
str3 += " "                                                             # STEP 85
str0 += 'g'                                                             # STEP 86
path1 = "/Volumes/ramdisk/test"                                         # STEP 87
os0.link(path1,path1)                                                   # STEP 88
str3 += 'j'                                                             # STEP 89
str4 += 's'                                                             # STEP 90
str0 += 'x'                                                             # STEP 91
os0.mkdir(path0)                                                        # STEP 92
path1 = "/Volumes/ramdisk/test"                                         # STEP 93
stat1 = os0.fstat(fd0)                                                  # STEP 94
os0.close(fd0)                                                          # STEP 95
str3 += 'h'                                                             # STEP 96
str4 += 'r'                                                             # STEP 97
result = stat2.st_size                                                  # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (13) == (0) ',), <traceback object at 0x106d32cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #437 STEP #94 (0:00:30.000253) Sat Jul 22 06:53:45 2017 [ 910 stmts 1184 branches ] 43693 TOTAL ACTIONS (1456.42105269/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107c61e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 77 steps

SAVING TEST AS failure.5623.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "a"                                                         # STEP 0
component1 = "epsilon"                                                   # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
component0 = "g"                                                         # STEP 3
component3 = "c"                                                         # STEP 4
path0 += "/" + component3                                                # STEP 5
bytes4 = 0                                                               # STEP 6
bytes0 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
component3 = "alpha"                                                     # STEP 9
os0.remove(path0)                                                       # STEP 10
result = os0.path.isdir(path0)                                          # STEP 11
result = sorted(os0.listdir(path0))                                     # STEP 12
component2 = "delta"                                                    # STEP 13
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 14
path0 += "/" + component2                                               # STEP 15
component2 = "beta"                                                     # STEP 16
result = os0.path.isabs(path0)                                          # STEP 17
stat4 = os0.lstat(path0)                                                # STEP 18
str4 = ""                                                               # STEP 19
str4 += 'a'                                                             # STEP 20
stat3 = os0.fstat(fd0)                                                  # STEP 21
path1 = "/Volumes/ramdisk/test"                                         # STEP 22
str4 += 'q'                                                             # STEP 23
str4 += 'i'                                                             # STEP 24
result = os0.path.abspath(path1)                                        # STEP 25
stat4 = os0.fstat(fd0)                                                  # STEP 26
path1 += "/" + component0                                               # STEP 27
result = os0.path.isfile(path1)                                         # STEP 28
result = os0.path.exists(path1)                                         # STEP 29
str4 += 'c'                                                             # STEP 30
str4 += 'k'                                                             # STEP 31
str4 += 'q'                                                             # STEP 32
os0.rename(path1,path0)                                                 # STEP 33
stat2 = os0.lstat(path0)                                                # STEP 34
stat0 = os0.lstat(path0)                                                # STEP 35
stat1 = os0.fstat(fd0)                                                  # STEP 36
bytes1 = 0                                                              # STEP 37
os0.remove(path1)                                                       # STEP 38
stat2 = os0.stat(path0)                                                 # STEP 39
component0 = "lambda"                                                   # STEP 40
opener0 = newFakeOpener(os0)                                            # STEP 41
str4 += 'o'                                                             # STEP 42
result = stat3.st_size                                                  # STEP 43
stat2 = os0.stat(path0)                                                 # STEP 44
str4 += 'i'                                                             # STEP 45
path0 += "/" + component2                                               # STEP 46
result = stat1.st_size                                                  # STEP 47
stat2 = os0.lstat(path1)                                                # STEP 48
os0.remove(path0)                                                       # STEP 49
result = os0.read(fd0,bytes1)                                           # STEP 50
result = sorted(os0.listdir(path1))                                     # STEP 51
result = stat1.st_size                                                  # STEP 52
file0 = opener0(path0,'w')                                              # STEP 53
bytes4 += 1                                                             # STEP 54
str4 += 'a'                                                             # STEP 55
os0.close(fd0)                                                          # STEP 56
str4 += 'l'                                                             # STEP 57
result = os0.path.lexists(path1)                                        # STEP 58
str4 += 't'                                                             # STEP 59
path0 += "/" + component3                                               # STEP 60
file0 = opener0(path1,'w')                                              # STEP 61
component3 = "alpha"                                                    # STEP 62
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 63
str4 = ""                                                               # STEP 64
component2 = "phi"                                                      # STEP 65
result = sorted(os0.listdir(path1))                                     # STEP 66
file0.next()                                                            # STEP 67
stat3 = os0.lstat(path1)                                                # STEP 68
path1 += "/" + component4                                               # STEP 69
stat1 = os0.lstat(path0)                                                # STEP 70
os0.write(fd0,str4)                                                     # STEP 71
str4 += 'z'                                                             # STEP 72
str4 += 'a'                                                             # STEP 73
result = os0.path.dirname(path0)                                        # STEP 74
result = os0.path.dirname(path1)                                        # STEP 75
result = file0.read(bytes1)                                             # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106ff4d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (x) ',), <traceback object at 0x10894f200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16086, in act372
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 98 steps

SAVING TEST AS failure.5623.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "c"                                                         # STEP 0
component1 = "f"                                                         # STEP 1
component0 = "delta"                                                     # STEP 2
bytes0 = 0                                                               # STEP 3
bytes2 = 0                                                               # STEP 4
component2 = "a"                                                         # STEP 5
component4 = "c"                                                         # STEP 6
str4 = ""                                                                # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
bytes0 += 1                                                             # STEP 10
path1 += "/" + component0                                               # STEP 11
bytes0 = 0                                                              # STEP 12
component0 = "b"                                                        # STEP 13
path4 += "/" + component0                                               # STEP 14
component0 = "a"                                                        # STEP 15
str4 += 'x'                                                             # STEP 16
path1 += "/" + component0                                               # STEP 17
component0 = "g"                                                        # STEP 18
bytes2 += 1                                                             # STEP 19
path1 += "/" + component1                                               # STEP 20
path4 += "/" + component0                                               # STEP 21
path4 += "/" + component0                                               # STEP 22
component0 = "f"                                                        # STEP 23
component1 = "gamma"                                                    # STEP 24
str4 += 'd'                                                             # STEP 25
str4 += 'r'                                                             # STEP 26
path0 = "/Volumes/ramdisk/test"                                         # STEP 27
str4 = ""                                                               # STEP 28
str4 += 'd'                                                             # STEP 29
str4 += 'k'                                                             # STEP 30
path1 += "/" + component2                                               # STEP 31
component2 = "gamma"                                                    # STEP 32
path0 += "/" + component3                                               # STEP 33
os0 = newFakeOS()                                                       # STEP 34
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 35
os0.rmdir(path1)                                                        # STEP 36
bytes0 += 1                                                             # STEP 37
str4 += 'g'                                                             # STEP 38
path1 = "/Volumes/ramdisk/test"                                         # STEP 39
result = os0.path.lexists(path0)                                        # STEP 40
os0.mkdir(path1)                                                        # STEP 41
os0.rmdir(path4)                                                        # STEP 42
path4 = "/Volumes/ramdisk/test"                                         # STEP 43
component3 = "beta"                                                     # STEP 44
str4 += 'e'                                                             # STEP 45
os0.symlink(path4,path4)                                                # STEP 46
opener0 = newFakeOpener(os0)                                            # STEP 47
file0 = opener0(path1,'r')                                              # STEP 48
result = os0.path.exists(path4)                                         # STEP 49
os0.link(path4,path0)                                                   # STEP 50
result = os0.path.isabs(path4)                                          # STEP 51
path1 += "/" + component4                                               # STEP 52
str4 += 'w'                                                             # STEP 53
str4 = ""                                                               # STEP 54
stat4 = os0.stat(path0)                                                 # STEP 55
os0.path.getsize(path1)                                                 # STEP 56
result = os0.path.exists(path1)                                         # STEP 57
os0.link(path4,path1)                                                   # STEP 58
str4 += 'x'                                                             # STEP 59
str4 += 'y'                                                             # STEP 60
result = os0.path.lexists(path1)                                        # STEP 61
result = stat4.st_nlink                                                 # STEP 62
file0 = opener0(path0,'w')                                              # STEP 63
file0.write(str4)                                                       # STEP 64
str4 += 'a'                                                             # STEP 65
file0.seek(bytes2)                                                      # STEP 66
str4 += 'n'                                                             # STEP 67
component4 = "d"                                                        # STEP 68
path0 = "/Volumes/ramdisk/test"                                         # STEP 69
os0.symlink(path1,path4)                                                # STEP 70
str0 = ""                                                               # STEP 71
path4 += "/" + component3                                               # STEP 72
result = stat4.st_size                                                  # STEP 73
component3 = "h"                                                        # STEP 74
path0 += "/" + component4                                               # STEP 75
result = os0.path.exists(path4)                                         # STEP 76
stat1 = os0.fstat(fd0)                                                  # STEP 77
str0 += 'n'                                                             # STEP 78
result = file0.readline()                                               # STEP 79
bytes4 = 0                                                              # STEP 80
os0.symlink(path0,path4)                                                # STEP 81
str4 += 'l'                                                             # STEP 82
os0.rename(path1,path4)                                                 # STEP 83
file0.truncate()                                                        # STEP 84
str0 += 'e'                                                             # STEP 85
stat3 = os0.lstat(path1)                                                # STEP 86
os0.symlink(path1,path1)                                                # STEP 87
result = file0.read(bytes2)                                             # STEP 88
result = os0.path.abspath(path0)                                        # STEP 89
stat3 = os0.fstat(fd0)                                                  # STEP 90
os0.symlink(path0,path4)                                                # STEP 91
str2 = ""                                                               # STEP 92
stat0 = os0.stat(path4)                                                 # STEP 93
str2 += 'w'                                                             # STEP 94
str4 += 'n'                                                             # STEP 95
file0.seek(bytes0)                                                      # STEP 96
result = os0.read(fd0,bytes0)                                           # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (x) ',), <traceback object at 0x10a710488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16086, in act372
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 65
STOPPING TESTING DUE TO TIMEOUT
42.8465254552 PERCENT COVERED
60.3151409626 TOTAL RUNTIME
892 EXECUTED
89139 TOTAL TEST OPERATIONS
52.18278265 TIME SPENT EXECUTING TEST OPERATIONS
4.21228671074 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.055223941803 TIME SPENT CHECKING PROPERTIES
52.2380065918 TOTAL TIME SPENT RUNNING SUT
2.62516617775 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
component4 = "d"                                                         # STEP 0
component3 = "c"                                                         # STEP 1
component1 = "d"                                                         # STEP 2
component0 = "delta"                                                     # STEP 3
component2 = "b"                                                         # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
bytes3 = 0                                                               # STEP 6
bytes4 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
bytes3 += 1                                                              # STEP 9
str4 = ""                                                               # STEP 10
result = os0.path.isabs(path1)                                          # STEP 11
str4 += " "                                                             # STEP 12
os0.symlink(path1,path1)                                                # STEP 13
str4 += 'k'                                                             # STEP 14
str4 += 'u'                                                             # STEP 15
str4 += 'b'                                                             # STEP 16
result = os0.path.abspath(path1)                                        # STEP 17
str4 += 'k'                                                             # STEP 18
str4 += 'j'                                                             # STEP 19
str0 = ""                                                               # STEP 20
str4 += 'i'                                                             # STEP 21
os0.symlink(path1,path1)                                                # STEP 22
str0 += 'h'                                                             # STEP 23
path1 += "/" + component4                                               # STEP 24
str4 += 'y'                                                             # STEP 25
result = os0.path.lexists(path1)                                        # STEP 26
result = os0.readlink(path1)                                            # STEP 27
str4 += 'c'                                                             # STEP 28
str4 += " "                                                             # STEP 29
bytes2 = 0                                                              # STEP 30
str0 += 'g'                                                             # STEP 31
component4 = "c"                                                        # STEP 32
str0 += 'r'                                                             # STEP 33
str4 += 'b'                                                             # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
result = os0.path.isfile(path1)                                         # STEP 36
str4 += 'z'                                                             # STEP 37
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 38
file0 = opener0(path1,'a')                                              # STEP 39
os0.rmdir(path1)                                                        # STEP 40
str0 += 'h'                                                             # STEP 41
result = file0.read()                                                   # STEP 42
str0 += 'v'                                                             # STEP 43
str4 += 'x'                                                             # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
file0.write(str4)                                                       # STEP 46
os0.symlink(path1,path1)                                                # STEP 47
path1 += "/" + component3                                               # STEP 48
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
str4 = ""                                                               # STEP 50
os0.remove(path0)                                                       # STEP 51
str4 += 'c'                                                             # STEP 52
stat0 = os0.fstat(fd0)                                                  # STEP 53
str3 = ""                                                               # STEP 54
str3 += 'i'                                                             # STEP 55
str3 += 'w'                                                             # STEP 56
str0 += " "                                                             # STEP 57
os0.link(path1,path1)                                                   # STEP 58
component3 = "beta"                                                     # STEP 59
str0 += 'm'                                                             # STEP 60
str3 += 'k'                                                             # STEP 61
str0 += " "                                                             # STEP 62
os0.symlink(path0,path1)                                                # STEP 63
str0 += 'h'                                                             # STEP 64
str0 += 'q'                                                             # STEP 65
str3 += 'y'                                                             # STEP 66
str3 += 's'                                                             # STEP 67
str4 += 'i'                                                             # STEP 68
str4 += 'l'                                                             # STEP 69
os0.symlink(path1,path0)                                                # STEP 70
str4 = ""                                                               # STEP 71
str3 += 'd'                                                             # STEP 72
stat3 = os0.fstat(fd0)                                                  # STEP 73
str0 += 'a'                                                             # STEP 74
stat2 = os0.fstat(fd0)                                                  # STEP 75
str3 += 'v'                                                             # STEP 76
str0 += 'a'                                                             # STEP 77
str0 += 'f'                                                             # STEP 78
result = os0.read(fd0,bytes4)                                           # STEP 79
str4 += 'd'                                                             # STEP 80
str0 += 'g'                                                             # STEP 81
str4 += 'g'                                                             # STEP 82
result = os0.path.exists(path0)                                         # STEP 83
result = sorted(os0.listdir(path0))                                     # STEP 84
str3 += " "                                                             # STEP 85
str0 += 'g'                                                             # STEP 86
path1 = "/Volumes/ramdisk/test"                                         # STEP 87
os0.link(path1,path1)                                                   # STEP 88
str3 += 'j'                                                             # STEP 89
str4 += 's'                                                             # STEP 90
str0 += 'x'                                                             # STEP 91
os0.mkdir(path0)                                                        # STEP 92
path1 = "/Volumes/ramdisk/test"                                         # STEP 93
stat1 = os0.fstat(fd0)                                                  # STEP 94
os0.close(fd0)                                                          # STEP 95
str3 += 'h'                                                             # STEP 96
str4 += 'r'                                                             # STEP 97
result = stat2.st_size                                                  # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (13) == (0) ',), <traceback object at 0x106d32cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
component4 = "a"                                                         # STEP 0
component1 = "epsilon"                                                   # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
component0 = "g"                                                         # STEP 3
component3 = "c"                                                         # STEP 4
path0 += "/" + component3                                                # STEP 5
bytes4 = 0                                                               # STEP 6
bytes0 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
component3 = "alpha"                                                     # STEP 9
os0.remove(path0)                                                       # STEP 10
result = os0.path.isdir(path0)                                          # STEP 11
result = sorted(os0.listdir(path0))                                     # STEP 12
component2 = "delta"                                                    # STEP 13
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 14
path0 += "/" + component2                                               # STEP 15
component2 = "beta"                                                     # STEP 16
result = os0.path.isabs(path0)                                          # STEP 17
stat4 = os0.lstat(path0)                                                # STEP 18
str4 = ""                                                               # STEP 19
str4 += 'a'                                                             # STEP 20
stat3 = os0.fstat(fd0)                                                  # STEP 21
path1 = "/Volumes/ramdisk/test"                                         # STEP 22
str4 += 'q'                                                             # STEP 23
str4 += 'i'                                                             # STEP 24
result = os0.path.abspath(path1)                                        # STEP 25
stat4 = os0.fstat(fd0)                                                  # STEP 26
path1 += "/" + component0                                               # STEP 27
result = os0.path.isfile(path1)                                         # STEP 28
result = os0.path.exists(path1)                                         # STEP 29
str4 += 'c'                                                             # STEP 30
str4 += 'k'                                                             # STEP 31
str4 += 'q'                                                             # STEP 32
os0.rename(path1,path0)                                                 # STEP 33
stat2 = os0.lstat(path0)                                                # STEP 34
stat0 = os0.lstat(path0)                                                # STEP 35
stat1 = os0.fstat(fd0)                                                  # STEP 36
bytes1 = 0                                                              # STEP 37
os0.remove(path1)                                                       # STEP 38
stat2 = os0.stat(path0)                                                 # STEP 39
component0 = "lambda"                                                   # STEP 40
opener0 = newFakeOpener(os0)                                            # STEP 41
str4 += 'o'                                                             # STEP 42
result = stat3.st_size                                                  # STEP 43
stat2 = os0.stat(path0)                                                 # STEP 44
str4 += 'i'                                                             # STEP 45
path0 += "/" + component2                                               # STEP 46
result = stat1.st_size                                                  # STEP 47
stat2 = os0.lstat(path1)                                                # STEP 48
os0.remove(path0)                                                       # STEP 49
result = os0.read(fd0,bytes1)                                           # STEP 50
result = sorted(os0.listdir(path1))                                     # STEP 51
result = stat1.st_size                                                  # STEP 52
file0 = opener0(path0,'w')                                              # STEP 53
bytes4 += 1                                                             # STEP 54
str4 += 'a'                                                             # STEP 55
os0.close(fd0)                                                          # STEP 56
str4 += 'l'                                                             # STEP 57
result = os0.path.lexists(path1)                                        # STEP 58
str4 += 't'                                                             # STEP 59
path0 += "/" + component3                                               # STEP 60
file0 = opener0(path1,'w')                                              # STEP 61
component3 = "alpha"                                                    # STEP 62
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 63
str4 = ""                                                               # STEP 64
component2 = "phi"                                                      # STEP 65
result = sorted(os0.listdir(path1))                                     # STEP 66
file0.next()                                                            # STEP 67
stat3 = os0.lstat(path1)                                                # STEP 68
path1 += "/" + component4                                               # STEP 69
stat1 = os0.lstat(path0)                                                # STEP 70
os0.write(fd0,str4)                                                     # STEP 71
str4 += 'z'                                                             # STEP 72
str4 += 'a'                                                             # STEP 73
result = os0.path.dirname(path0)                                        # STEP 74
result = os0.path.dirname(path1)                                        # STEP 75
result = file0.read(bytes1)                                             # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106ff4d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
component3 = "c"                                                         # STEP 0
component1 = "f"                                                         # STEP 1
component0 = "delta"                                                     # STEP 2
bytes0 = 0                                                               # STEP 3
bytes2 = 0                                                               # STEP 4
component2 = "a"                                                         # STEP 5
component4 = "c"                                                         # STEP 6
str4 = ""                                                                # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
bytes0 += 1                                                             # STEP 10
path1 += "/" + component0                                               # STEP 11
bytes0 = 0                                                              # STEP 12
component0 = "b"                                                        # STEP 13
path4 += "/" + component0                                               # STEP 14
component0 = "a"                                                        # STEP 15
str4 += 'x'                                                             # STEP 16
path1 += "/" + component0                                               # STEP 17
component0 = "g"                                                        # STEP 18
bytes2 += 1                                                             # STEP 19
path1 += "/" + component1                                               # STEP 20
path4 += "/" + component0                                               # STEP 21
path4 += "/" + component0                                               # STEP 22
component0 = "f"                                                        # STEP 23
component1 = "gamma"                                                    # STEP 24
str4 += 'd'                                                             # STEP 25
str4 += 'r'                                                             # STEP 26
path0 = "/Volumes/ramdisk/test"                                         # STEP 27
str4 = ""                                                               # STEP 28
str4 += 'd'                                                             # STEP 29
str4 += 'k'                                                             # STEP 30
path1 += "/" + component2                                               # STEP 31
component2 = "gamma"                                                    # STEP 32
path0 += "/" + component3                                               # STEP 33
os0 = newFakeOS()                                                       # STEP 34
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 35
os0.rmdir(path1)                                                        # STEP 36
bytes0 += 1                                                             # STEP 37
str4 += 'g'                                                             # STEP 38
path1 = "/Volumes/ramdisk/test"                                         # STEP 39
result = os0.path.lexists(path0)                                        # STEP 40
os0.mkdir(path1)                                                        # STEP 41
os0.rmdir(path4)                                                        # STEP 42
path4 = "/Volumes/ramdisk/test"                                         # STEP 43
component3 = "beta"                                                     # STEP 44
str4 += 'e'                                                             # STEP 45
os0.symlink(path4,path4)                                                # STEP 46
opener0 = newFakeOpener(os0)                                            # STEP 47
file0 = opener0(path1,'r')                                              # STEP 48
result = os0.path.exists(path4)                                         # STEP 49
os0.link(path4,path0)                                                   # STEP 50
result = os0.path.isabs(path4)                                          # STEP 51
path1 += "/" + component4                                               # STEP 52
str4 += 'w'                                                             # STEP 53
str4 = ""                                                               # STEP 54
stat4 = os0.stat(path0)                                                 # STEP 55
os0.path.getsize(path1)                                                 # STEP 56
result = os0.path.exists(path1)                                         # STEP 57
os0.link(path4,path1)                                                   # STEP 58
str4 += 'x'                                                             # STEP 59
str4 += 'y'                                                             # STEP 60
result = os0.path.lexists(path1)                                        # STEP 61
result = stat4.st_nlink                                                 # STEP 62
file0 = opener0(path0,'w')                                              # STEP 63
file0.write(str4)                                                       # STEP 64
str4 += 'a'                                                             # STEP 65
file0.seek(bytes2)                                                      # STEP 66
str4 += 'n'                                                             # STEP 67
component4 = "d"                                                        # STEP 68
path0 = "/Volumes/ramdisk/test"                                         # STEP 69
os0.symlink(path1,path4)                                                # STEP 70
str0 = ""                                                               # STEP 71
path4 += "/" + component3                                               # STEP 72
result = stat4.st_size                                                  # STEP 73
component3 = "h"                                                        # STEP 74
path0 += "/" + component4                                               # STEP 75
result = os0.path.exists(path4)                                         # STEP 76
stat1 = os0.fstat(fd0)                                                  # STEP 77
str0 += 'n'                                                             # STEP 78
result = file0.readline()                                               # STEP 79
bytes4 = 0                                                              # STEP 80
os0.symlink(path0,path4)                                                # STEP 81
str4 += 'l'                                                             # STEP 82
os0.rename(path1,path4)                                                 # STEP 83
file0.truncate()                                                        # STEP 84
str0 += 'e'                                                             # STEP 85
stat3 = os0.lstat(path1)                                                # STEP 86
os0.symlink(path1,path1)                                                # STEP 87
result = file0.read(bytes2)                                             # STEP 88
result = os0.path.abspath(path0)                                        # STEP 89
stat3 = os0.fstat(fd0)                                                  # STEP 90
os0.symlink(path0,path4)                                                # STEP 91
str2 = ""                                                               # STEP 92
stat0 = os0.stat(path4)                                                 # STEP 93
str2 += 'w'                                                             # STEP 94
str4 += 'n'                                                             # STEP 95
file0.seek(bytes0)                                                      # STEP 96
result = os0.read(fd0,bytes0)                                           # STEP 97
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (x) ',), <traceback object at 0x10a710488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 16086, in act372
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1185 BRANCHES COVERED
910 STATEMENTS COVERED
