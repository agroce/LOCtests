Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5084.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['ke zljaz lqly']) == ([]) ",), <traceback object at 0x109082248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 92 steps

SAVING TEST AS failure.5084.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "lambda"                                                    # STEP 0
component1 = "omega"                                                     # STEP 1
component3 = "g"                                                         # STEP 2
bytes2 = 0                                                               # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
component2 = "e"                                                         # STEP 5
str4 = ""                                                                # STEP 6
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
str3 = ""                                                                # STEP 8
str3 += 'e'                                                              # STEP 9
str4 += 'z'                                                             # STEP 10
str4 += 'l'                                                             # STEP 11
str4 += 'y'                                                             # STEP 12
str1 = ""                                                               # STEP 13
str1 += 'k'                                                             # STEP 14
str4 += 'm'                                                             # STEP 15
str3 += 't'                                                             # STEP 16
str4 += 'b'                                                             # STEP 17
str3 += 'p'                                                             # STEP 18
str3 += 'j'                                                             # STEP 19
str1 += 'e'                                                             # STEP 20
component4 = "lambda"                                                   # STEP 21
os0 = newFakeOS()                                                       # STEP 22
str3 += 'j'                                                             # STEP 23
str3 += 'g'                                                             # STEP 24
str4 += 'c'                                                             # STEP 25
str1 += " "                                                             # STEP 26
path1 = "/Volumes/ramdisk/test"                                         # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
result = os0.path.isabs(path1)                                          # STEP 29
os0.remove(path4)                                                       # STEP 30
str1 += 'z'                                                             # STEP 31
str1 += 'l'                                                             # STEP 32
result = os0.path.lexists(path2)                                        # STEP 33
str1 += 'j'                                                             # STEP 34
os0.mkdir(path1)                                                        # STEP 35
str4 += 'x'                                                             # STEP 36
path3 = "/Volumes/ramdisk/test"                                         # STEP 37
str3 += 'm'                                                             # STEP 38
str3 += 'm'                                                             # STEP 39
file0 = opener0(path3,'a')                                              # STEP 40
bytes4 = 0                                                              # STEP 41
str4 += 'g'                                                             # STEP 42
os0.symlink(path4,path2)                                                # STEP 43
str3 += 'i'                                                             # STEP 44
str1 += 'a'                                                             # STEP 45
os0.link(path3,path1)                                                   # STEP 46
str1 += 'z'                                                             # STEP 47
file0 = opener0(path2)                                                  # STEP 48
path4 += "/" + component0                                               # STEP 49
bytes3 = 0                                                              # STEP 50
bytes4 += 1                                                             # STEP 51
stat1 = os0.lstat(path4)                                                # STEP 52
os0.makedirs(path3)                                                     # STEP 53
str1 += " "                                                             # STEP 54
os0.remove(path1)                                                       # STEP 55
str1 += 'l'                                                             # STEP 56
component0 = "lambda"                                                   # STEP 57
result = os0.path.isdir(path1)                                          # STEP 58
str1 += 'q'                                                             # STEP 59
str3 += 'i'                                                             # STEP 60
str3 += 'b'                                                             # STEP 61
result = os0.path.exists(path3)                                         # STEP 62
file0 = opener0(path3,'a')                                              # STEP 63
result = os0.path.exists(path3)                                         # STEP 64
str1 += 'l'                                                             # STEP 65
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 66
os0.link(path3,path4)                                                   # STEP 67
file0 = opener0(path4)                                                  # STEP 68
str4 += 'j'                                                             # STEP 69
str3 += 'e'                                                             # STEP 70
os0.symlink(path2,path2)                                                # STEP 71
str3 += 'd'                                                             # STEP 72
result = sorted(os0.listdir(path3))                                     # STEP 73
str3 += 'l'                                                             # STEP 74
str4 += 'f'                                                             # STEP 75
str1 += 'y'                                                             # STEP 76
result = os0.path.abspath(path3)                                        # STEP 77
stat0 = os0.stat(path4)                                                 # STEP 78
result = os0.path.abspath(path4)                                        # STEP 79
result = file0.readline(bytes3)                                         # STEP 80
os0.write(fd0,str1)                                                     # STEP 81
result = sorted(os0.listdir(path2))                                     # STEP 82
path4 += "/" + component0                                               # STEP 83
path3 += "/" + component1                                               # STEP 84
component1 = "epsilon"                                                  # STEP 85
component0 = "omega"                                                    # STEP 86
stat2 = os0.stat(path3)                                                 # STEP 87
str3 += 'u'                                                             # STEP 88
file0.next()                                                            # STEP 89
str1 += 'u'                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['ke zljaz lqly']) == ([]) ",), <traceback object at 0x1024210e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #444 STEP #69 (0:00:30.001067) Sat Jul 22 03:44:11 2017 [ 895 stmts 1163 branches ] 44361 TOTAL ACTIONS (1478.64740148/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 85
STOPPING TESTING DUE TO TIMEOUT
42.2519509476 PERCENT COVERED
60.3310961723 TOTAL RUNTIME
888 EXECUTED
88777 TOTAL TEST OPERATIONS
52.5260705948 TIME SPENT EXECUTING TEST OPERATIONS
4.11990356445 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0542094707489 TIME SPENT CHECKING PROPERTIES
52.5802800655 TOTAL TIME SPENT RUNNING SUT
2.59998011589 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component0 = "lambda"                                                    # STEP 0
component1 = "omega"                                                     # STEP 1
component3 = "g"                                                         # STEP 2
bytes2 = 0                                                               # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
component2 = "e"                                                         # STEP 5
str4 = ""                                                                # STEP 6
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
str3 = ""                                                                # STEP 8
str3 += 'e'                                                              # STEP 9
str4 += 'z'                                                             # STEP 10
str4 += 'l'                                                             # STEP 11
str4 += 'y'                                                             # STEP 12
str1 = ""                                                               # STEP 13
str1 += 'k'                                                             # STEP 14
str4 += 'm'                                                             # STEP 15
str3 += 't'                                                             # STEP 16
str4 += 'b'                                                             # STEP 17
str3 += 'p'                                                             # STEP 18
str3 += 'j'                                                             # STEP 19
str1 += 'e'                                                             # STEP 20
component4 = "lambda"                                                   # STEP 21
os0 = newFakeOS()                                                       # STEP 22
str3 += 'j'                                                             # STEP 23
str3 += 'g'                                                             # STEP 24
str4 += 'c'                                                             # STEP 25
str1 += " "                                                             # STEP 26
path1 = "/Volumes/ramdisk/test"                                         # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
result = os0.path.isabs(path1)                                          # STEP 29
os0.remove(path4)                                                       # STEP 30
str1 += 'z'                                                             # STEP 31
str1 += 'l'                                                             # STEP 32
result = os0.path.lexists(path2)                                        # STEP 33
str1 += 'j'                                                             # STEP 34
os0.mkdir(path1)                                                        # STEP 35
str4 += 'x'                                                             # STEP 36
path3 = "/Volumes/ramdisk/test"                                         # STEP 37
str3 += 'm'                                                             # STEP 38
str3 += 'm'                                                             # STEP 39
file0 = opener0(path3,'a')                                              # STEP 40
bytes4 = 0                                                              # STEP 41
str4 += 'g'                                                             # STEP 42
os0.symlink(path4,path2)                                                # STEP 43
str3 += 'i'                                                             # STEP 44
str1 += 'a'                                                             # STEP 45
os0.link(path3,path1)                                                   # STEP 46
str1 += 'z'                                                             # STEP 47
file0 = opener0(path2)                                                  # STEP 48
path4 += "/" + component0                                               # STEP 49
bytes3 = 0                                                              # STEP 50
bytes4 += 1                                                             # STEP 51
stat1 = os0.lstat(path4)                                                # STEP 52
os0.makedirs(path3)                                                     # STEP 53
str1 += " "                                                             # STEP 54
os0.remove(path1)                                                       # STEP 55
str1 += 'l'                                                             # STEP 56
component0 = "lambda"                                                   # STEP 57
result = os0.path.isdir(path1)                                          # STEP 58
str1 += 'q'                                                             # STEP 59
str3 += 'i'                                                             # STEP 60
str3 += 'b'                                                             # STEP 61
result = os0.path.exists(path3)                                         # STEP 62
file0 = opener0(path3,'a')                                              # STEP 63
result = os0.path.exists(path3)                                         # STEP 64
str1 += 'l'                                                             # STEP 65
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 66
os0.link(path3,path4)                                                   # STEP 67
file0 = opener0(path4)                                                  # STEP 68
str4 += 'j'                                                             # STEP 69
str3 += 'e'                                                             # STEP 70
os0.symlink(path2,path2)                                                # STEP 71
str3 += 'd'                                                             # STEP 72
result = sorted(os0.listdir(path3))                                     # STEP 73
str3 += 'l'                                                             # STEP 74
str4 += 'f'                                                             # STEP 75
str1 += 'y'                                                             # STEP 76
result = os0.path.abspath(path3)                                        # STEP 77
stat0 = os0.stat(path4)                                                 # STEP 78
result = os0.path.abspath(path4)                                        # STEP 79
result = file0.readline(bytes3)                                         # STEP 80
os0.write(fd0,str1)                                                     # STEP 81
result = sorted(os0.listdir(path2))                                     # STEP 82
path4 += "/" + component0                                               # STEP 83
path3 += "/" + component1                                               # STEP 84
component1 = "epsilon"                                                  # STEP 85
component0 = "omega"                                                    # STEP 86
stat2 = os0.stat(path3)                                                 # STEP 87
str3 += 'u'                                                             # STEP 88
file0.next()                                                            # STEP 89
str1 += 'u'                                                             # STEP 90
result = file0.readlines()                                              # STEP 91
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['ke zljaz lqly']) == ([]) ",), <traceback object at 0x1024210e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1174 BRANCHES COVERED
900 STATEMENTS COVERED
