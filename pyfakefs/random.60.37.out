Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4755.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #454 STEP #77 (0:00:30.001017) Sat Jul 22 02:05:57 2017 [ 904 stmts 1175 branches ] 45377 TOTAL ACTIONS (1512.51538767/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105d1d098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 77 steps

SAVING TEST AS failure.4755.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "a"                                                         # STEP 0
component2 = "e"                                                         # STEP 1
component4 = "beta"                                                      # STEP 2
component0 = "e"                                                         # STEP 3
component3 = "c"                                                         # STEP 4
bytes4 = 0                                                               # STEP 5
bytes2 = 0                                                               # STEP 6
path0 = "/Volumes/ramdisk/test"                                          # STEP 7
bytes1 = 0                                                               # STEP 8
os0 = newFakeOS()                                                        # STEP 9
path0 += "/" + component2                                               # STEP 10
stat3 = os0.stat(path0)                                                 # STEP 11
component2 = "e"                                                        # STEP 12
os0.mkdir(path0)                                                        # STEP 13
str2 = ""                                                               # STEP 14
os0.rmdir(path0)                                                        # STEP 15
result = os0.path.isfile(path0)                                         # STEP 16
path1 = "/Volumes/ramdisk/test"                                         # STEP 17
str1 = ""                                                               # STEP 18
str2 += 'h'                                                             # STEP 19
result = os0.path.exists(path0)                                         # STEP 20
str0 = ""                                                               # STEP 21
str0 += 'j'                                                             # STEP 22
str2 += 'm'                                                             # STEP 23
str2 += 'g'                                                             # STEP 24
stat4 = os0.lstat(path0)                                                # STEP 25
path1 += "/" + component4                                               # STEP 26
str2 += 'h'                                                             # STEP 27
result = os0.path.dirname(path0)                                        # STEP 28
stat2 = os0.stat(path1)                                                 # STEP 29
str1 += 'd'                                                             # STEP 30
result = os0.path.isfile(path0)                                         # STEP 31
stat0 = os0.stat(path0)                                                 # STEP 32
component4 = "lambda"                                                   # STEP 33
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 34
str1 += 't'                                                             # STEP 35
str1 += 'n'                                                             # STEP 36
path1 = "/Volumes/ramdisk/test"                                         # STEP 37
str2 += 'k'                                                             # STEP 38
os0.rename(path0,path1)                                                 # STEP 39
str1 += 'g'                                                             # STEP 40
str0 += 'b'                                                             # STEP 41
result = os0.path.dirname(path1)                                        # STEP 42
str2 += 'v'                                                             # STEP 43
os0.makedirs(path0)                                                     # STEP 44
os0.write(fd0,str0)                                                     # STEP 45
str2 += 'z'                                                             # STEP 46
str2 += 'i'                                                             # STEP 47
str0 += 'b'                                                             # STEP 48
str2 += 'g'                                                             # STEP 49
opener0 = newFakeOpener(os0)                                            # STEP 50
str1 += 'x'                                                             # STEP 51
os0.remove(path0)                                                       # STEP 52
str0 += 'j'                                                             # STEP 53
os0.close(fd0)                                                          # STEP 54
result = os0.path.dirname(path0)                                        # STEP 55
str1 += 'n'                                                             # STEP 56
file0 = opener0(path0,'a')                                              # STEP 57
str0 += 'o'                                                             # STEP 58
str0 += 'n'                                                             # STEP 59
os0.write(fd0,str2)                                                     # STEP 60
str1 += 'q'                                                             # STEP 61
str1 += 'm'                                                             # STEP 62
result = os0.read(fd0,bytes2)                                           # STEP 63
str4 = ""                                                               # STEP 64
str2 += 'k'                                                             # STEP 65
str1 = ""                                                               # STEP 66
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 67
result = os0.path.isdir(path1)                                          # STEP 68
result = sorted(os0.listdir(path0))                                     # STEP 69
result = os0.path.lexists(path1)                                        # STEP 70
stat0 = os0.lstat(path0)                                                # STEP 71
result = os0.path.exists(path0)                                         # STEP 72
result = os0.readlink(path1)                                            # STEP 73
os0.mkdir(path0)                                                        # STEP 74
str2 += 'c'                                                             # STEP 75
result = file0.read()                                                   # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105d33320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 76
STOPPING TESTING DUE TO TIMEOUT
42.5863991081 PERCENT COVERED
60.3333170414 TOTAL RUNTIME
894 EXECUTED
89353 TOTAL TEST OPERATIONS
52.4777545929 TIME SPENT EXECUTING TEST OPERATIONS
4.17958331108 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.051629781723 TIME SPENT CHECKING PROPERTIES
52.5293843746 TOTAL TIME SPENT RUNNING SUT
2.59656739235 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "a"                                                         # STEP 0
component2 = "e"                                                         # STEP 1
component4 = "beta"                                                      # STEP 2
component0 = "e"                                                         # STEP 3
component3 = "c"                                                         # STEP 4
bytes4 = 0                                                               # STEP 5
bytes2 = 0                                                               # STEP 6
path0 = "/Volumes/ramdisk/test"                                          # STEP 7
bytes1 = 0                                                               # STEP 8
os0 = newFakeOS()                                                        # STEP 9
path0 += "/" + component2                                               # STEP 10
stat3 = os0.stat(path0)                                                 # STEP 11
component2 = "e"                                                        # STEP 12
os0.mkdir(path0)                                                        # STEP 13
str2 = ""                                                               # STEP 14
os0.rmdir(path0)                                                        # STEP 15
result = os0.path.isfile(path0)                                         # STEP 16
path1 = "/Volumes/ramdisk/test"                                         # STEP 17
str1 = ""                                                               # STEP 18
str2 += 'h'                                                             # STEP 19
result = os0.path.exists(path0)                                         # STEP 20
str0 = ""                                                               # STEP 21
str0 += 'j'                                                             # STEP 22
str2 += 'm'                                                             # STEP 23
str2 += 'g'                                                             # STEP 24
stat4 = os0.lstat(path0)                                                # STEP 25
path1 += "/" + component4                                               # STEP 26
str2 += 'h'                                                             # STEP 27
result = os0.path.dirname(path0)                                        # STEP 28
stat2 = os0.stat(path1)                                                 # STEP 29
str1 += 'd'                                                             # STEP 30
result = os0.path.isfile(path0)                                         # STEP 31
stat0 = os0.stat(path0)                                                 # STEP 32
component4 = "lambda"                                                   # STEP 33
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 34
str1 += 't'                                                             # STEP 35
str1 += 'n'                                                             # STEP 36
path1 = "/Volumes/ramdisk/test"                                         # STEP 37
str2 += 'k'                                                             # STEP 38
os0.rename(path0,path1)                                                 # STEP 39
str1 += 'g'                                                             # STEP 40
str0 += 'b'                                                             # STEP 41
result = os0.path.dirname(path1)                                        # STEP 42
str2 += 'v'                                                             # STEP 43
os0.makedirs(path0)                                                     # STEP 44
os0.write(fd0,str0)                                                     # STEP 45
str2 += 'z'                                                             # STEP 46
str2 += 'i'                                                             # STEP 47
str0 += 'b'                                                             # STEP 48
str2 += 'g'                                                             # STEP 49
opener0 = newFakeOpener(os0)                                            # STEP 50
str1 += 'x'                                                             # STEP 51
os0.remove(path0)                                                       # STEP 52
str0 += 'j'                                                             # STEP 53
os0.close(fd0)                                                          # STEP 54
result = os0.path.dirname(path0)                                        # STEP 55
str1 += 'n'                                                             # STEP 56
file0 = opener0(path0,'a')                                              # STEP 57
str0 += 'o'                                                             # STEP 58
str0 += 'n'                                                             # STEP 59
os0.write(fd0,str2)                                                     # STEP 60
str1 += 'q'                                                             # STEP 61
str1 += 'm'                                                             # STEP 62
result = os0.read(fd0,bytes2)                                           # STEP 63
str4 = ""                                                               # STEP 64
str2 += 'k'                                                             # STEP 65
str1 = ""                                                               # STEP 66
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 67
result = os0.path.isdir(path1)                                          # STEP 68
result = sorted(os0.listdir(path0))                                     # STEP 69
result = os0.path.lexists(path1)                                        # STEP 70
stat0 = os0.lstat(path0)                                                # STEP 71
result = os0.path.exists(path0)                                         # STEP 72
result = os0.readlink(path1)                                            # STEP 73
os0.mkdir(path0)                                                        # STEP 74
str2 += 'c'                                                             # STEP 75
result = file0.read()                                                   # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105d33320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1179 BRANCHES COVERED
905 STATEMENTS COVERED
