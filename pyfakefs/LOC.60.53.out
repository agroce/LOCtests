Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5097.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1025d9f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 84 steps

SAVING TEST AS failure.5097.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes3 = 0                                                               # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
bytes1 = 0                                                               # STEP 3
str0 = ""                                                                # STEP 4
str0 += 'p'                                                              # STEP 5
bytes2 = 0                                                               # STEP 6
str0 += 'e'                                                              # STEP 7
os0 = newFakeOS()                                                        # STEP 8
os0.remove(path1)                                                        # STEP 9
result = os0.path.abspath(path1)                                        # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.link(path2,path1)                                                   # STEP 12
bytes0 = 0                                                              # STEP 13
os0.makedirs(path0)                                                     # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
bytes1 += 1                                                             # STEP 16
str2 = ""                                                               # STEP 17
path2 = "/Volumes/ramdisk/test"                                         # STEP 18
result = os0.path.islink(path1)                                         # STEP 19
os0.makedirs(path1)                                                     # STEP 20
os0.link(path2,path1)                                                   # STEP 21
os0.remove(path0)                                                       # STEP 22
result = sorted(os0.listdir(path2))                                     # STEP 23
os0.remove(path2)                                                       # STEP 24
os0.remove(path0)                                                       # STEP 25
result = os0.path.dirname(path1)                                        # STEP 26
result = sorted(os0.listdir(path1))                                     # STEP 27
os0.makedirs(path1)                                                     # STEP 28
os0.mkdir(path1)                                                        # STEP 29
bytes4 = 0                                                              # STEP 30
os0.makedirs(path2)                                                     # STEP 31
result = os0.path.isabs(path2)                                          # STEP 32
opener0 = newFakeOpener(os0)                                            # STEP 33
file0 = opener0(path1,'w')                                              # STEP 34
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
bytes3 += 1                                                             # STEP 36
file0 = opener0(path0,'w')                                              # STEP 37
bytes1 = 0                                                              # STEP 38
component0 = "epsilon"                                                  # STEP 39
os0.makedirs(path0)                                                     # STEP 40
os0.mkdir(path1)                                                        # STEP 41
result = os0.path.islink(path2)                                         # STEP 42
path3 = "/Volumes/ramdisk/test"                                         # STEP 43
bytes3 = 0                                                              # STEP 44
result = os0.path.isdir(path1)                                          # STEP 45
result = os0.readlink(path2)                                            # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
path3 += "/" + component0                                               # STEP 48
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 49
result = os0.path.lexists(path3)                                        # STEP 50
os0.close(fd0)                                                          # STEP 51
os0.mkdir(path1)                                                        # STEP 52
result = sorted(os0.listdir(path0))                                     # STEP 53
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 54
path2 += "/" + component0                                               # STEP 55
os0.write(fd0,str2)                                                     # STEP 56
result = sorted(os0.listdir(path2))                                     # STEP 57
result = os0.path.exists(path1)                                         # STEP 58
os0.remove(path3)                                                       # STEP 59
os0.write(fd0,str0)                                                     # STEP 60
result = os0.path.islink(path1)                                         # STEP 61
bytes2 += 1                                                             # STEP 62
file0 = opener0(path3,'a')                                              # STEP 63
stat0 = os0.fstat(fd0)                                                  # STEP 64
result = file0.read()                                                   # STEP 65
str2 += 'a'                                                             # STEP 66
os0.write(fd0,str2)                                                     # STEP 67
result = stat0.st_nlink                                                 # STEP 68
result = stat0.st_size                                                  # STEP 69
result = sorted(os0.listdir(path0))                                     # STEP 70
result = stat0.st_nlink                                                 # STEP 71
os0.remove(path1)                                                       # STEP 72
result = os0.path.dirname(path1)                                        # STEP 73
result = os0.path.islink(path3)                                         # STEP 74
file0.truncate()                                                        # STEP 75
result = os0.path.dirname(path2)                                        # STEP 76
result = os0.readlink(path2)                                            # STEP 77
result = stat0.st_nlink                                                 # STEP 78
file0.seek(bytes1)                                                      # STEP 79
os0.write(fd0,str2)                                                     # STEP 80
path1 = "/Volumes/ramdisk/test"                                         # STEP 81
stat1 = os0.lstat(path3)                                                # STEP 82
result = file0.readlines()                                              # STEP 83
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1065aa128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (r g) == ( g) ',), <traceback object at 0x108dc4a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 80 steps

SAVING TEST AS failure.5097.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "f"                                                         # STEP 0
component0 = "gamma"                                                     # STEP 1
str0 = ""                                                                # STEP 2
bytes0 = 0                                                               # STEP 3
bytes3 = 0                                                               # STEP 4
bytes1 = 0                                                               # STEP 5
os0 = newFakeOS()                                                        # STEP 6
component1 = "c"                                                         # STEP 7
component4 = "a"                                                         # STEP 8
bytes1 += 1                                                              # STEP 9
bytes2 = 0                                                              # STEP 10
str1 = ""                                                               # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
str0 += 'r'                                                             # STEP 14
result = os0.path.isdir(path0)                                          # STEP 15
os0.mkdir(path0)                                                        # STEP 16
result = os0.path.abspath(path0)                                        # STEP 17
result = os0.path.islink(path0)                                         # STEP 18
os0.symlink(path0,path0)                                                # STEP 19
str3 = ""                                                               # STEP 20
result = os0.path.dirname(path0)                                        # STEP 21
result = os0.path.isdir(path0)                                          # STEP 22
result = os0.path.exists(path0)                                         # STEP 23
result = os0.path.lexists(path0)                                        # STEP 24
file0 = opener0(path0)                                                  # STEP 25
path0 += "/" + component1                                               # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
os0.link(path0,path0)                                                   # STEP 28
os0.link(path0,path0)                                                   # STEP 29
result = os0.path.islink(path0)                                         # STEP 30
result = os0.path.exists(path0)                                         # STEP 31
os0.symlink(path0,path0)                                                # STEP 32
file0 = opener0(path0)                                                  # STEP 33
stat2 = os0.fstat(fd0)                                                  # STEP 34
os0.remove(path0)                                                       # STEP 35
stat0 = os0.lstat(path0)                                                # STEP 36
result = file0.readline(bytes2)                                         # STEP 37
str0 += " "                                                             # STEP 38
bytes3 += 1                                                             # STEP 39
result = os0.path.abspath(path0)                                        # STEP 40
os0.remove(path0)                                                       # STEP 41
path0 += "/" + component3                                               # STEP 42
os0.write(fd0,str1)                                                     # STEP 43
result = file0.read(bytes0)                                             # STEP 44
result = stat2.st_nlink                                                 # STEP 45
os0.path.getsize(path0)                                                 # STEP 46
result = os0.readlink(path0)                                            # STEP 47
result = file0.readlines()                                              # STEP 48
result = stat2.st_nlink                                                 # STEP 49
str0 += 'g'                                                             # STEP 50
result = os0.path.isfile(path0)                                         # STEP 51
result = file0.readline()                                               # STEP 52
os0.symlink(path0,path0)                                                # STEP 53
stat1 = os0.lstat(path0)                                                # STEP 54
result = file0.readlines()                                              # STEP 55
result = os0.path.exists(path0)                                         # STEP 56
path1 = "/Volumes/ramdisk/test"                                         # STEP 57
stat2 = os0.stat(path0)                                                 # STEP 58
result = stat2.st_nlink                                                 # STEP 59
file0.truncate()                                                        # STEP 60
result = file0.readline(bytes0)                                         # STEP 61
file0.flush()                                                           # STEP 62
file0.seek(bytes3)                                                      # STEP 63
result = file0.readline()                                               # STEP 64
path2 = "/Volumes/ramdisk/test"                                         # STEP 65
os0.link(path1,path1)                                                   # STEP 66
result = file0.readline(bytes2)                                         # STEP 67
os0.write(fd0,str1)                                                     # STEP 68
stat2 = os0.lstat(path0)                                                # STEP 69
os0.path.getsize(path0)                                                 # STEP 70
component3 = "gamma"                                                    # STEP 71
os0.write(fd0,str0)                                                     # STEP 72
result = os0.read(fd0,bytes3)                                           # STEP 73
os0.mkdir(path1)                                                        # STEP 74
result = os0.read(fd0,bytes1)                                           # STEP 75
file0.flush()                                                           # STEP 76
os0.close(fd0)                                                          # STEP 77
result = stat2.st_nlink                                                 # STEP 78
result = file0.read()                                                   # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (r g) == ( g) ',), <traceback object at 0x106593b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a25cb90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 52 steps

SAVING TEST AS failure.5097.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
component4 = "f"                                                         # STEP 1
bytes1 = 0                                                               # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
path3 += "/" + component4                                                # STEP 4
component0 = "omega"                                                     # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
bytes4 = 0                                                               # STEP 8
bytes3 = 0                                                               # STEP 9
component1 = "lambda"                                                   # STEP 10
str2 = ""                                                               # STEP 11
path1 += "/" + component0                                               # STEP 12
os0 = newFakeOS()                                                       # STEP 13
result = os0.path.abspath(path3)                                        # STEP 14
os0.mkdir(path1)                                                        # STEP 15
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
component3 = "beta"                                                     # STEP 17
os0.symlink(path1,path1)                                                # STEP 18
os0.remove(path3)                                                       # STEP 19
os0.symlink(path4,path1)                                                # STEP 20
result = os0.path.isdir(path4)                                          # STEP 21
path3 += "/" + component3                                               # STEP 22
os0.makedirs(path1)                                                     # STEP 23
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
bytes2 = 0                                                              # STEP 25
stat2 = os0.fstat(fd0)                                                  # STEP 26
os0.close(fd0)                                                          # STEP 27
result = os0.path.isfile(path4)                                         # STEP 28
str2 += 'k'                                                             # STEP 29
stat0 = os0.lstat(path3)                                                # STEP 30
result = os0.path.islink(path4)                                         # STEP 31
component4 = "delta"                                                    # STEP 32
os0.close(fd0)                                                          # STEP 33
result = os0.path.islink(path1)                                         # STEP 34
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 35
os0.close(fd0)                                                          # STEP 36
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 37
result = os0.path.isdir(path4)                                          # STEP 38
opener0 = newFakeOpener(os0)                                            # STEP 39
component0 = "alpha"                                                    # STEP 40
path4 += "/" + component0                                               # STEP 41
file0 = opener0(path3,'r')                                              # STEP 42
bytes0 = 0                                                              # STEP 43
file0.next()                                                            # STEP 44
file0.seek(bytes2)                                                      # STEP 45
result = stat0.st_nlink                                                 # STEP 46
os0.mkdir(path3)                                                        # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
result = os0.path.islink(path1)                                         # STEP 49
result = os0.read(fd0,bytes1)                                           # STEP 50
file0.truncate()                                                        # STEP 51
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a264f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1063e5878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 77 steps

SAVING TEST AS failure.5097.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "b"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
str4 = ""                                                                # STEP 3
result = os0.path.dirname(path4)                                         # STEP 4
result = os0.path.isfile(path4)                                          # STEP 5
os0.remove(path4)                                                        # STEP 6
result = os0.path.islink(path4)                                          # STEP 7
str0 = ""                                                                # STEP 8
result = sorted(os0.listdir(path4))                                      # STEP 9
result = os0.path.abspath(path4)                                        # STEP 10
result = os0.path.islink(path4)                                         # STEP 11
os0.link(path4,path4)                                                   # STEP 12
result = os0.path.exists(path4)                                         # STEP 13
result = os0.path.isdir(path4)                                          # STEP 14
result = os0.path.abspath(path4)                                        # STEP 15
result = os0.path.abspath(path4)                                        # STEP 16
bytes2 = 0                                                              # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
path4 += "/" + component4                                               # STEP 19
result = sorted(os0.listdir(path4))                                     # STEP 20
result = os0.path.abspath(path4)                                        # STEP 21
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 22
result = os0.readlink(path4)                                            # STEP 23
os0.close(fd0)                                                          # STEP 24
str0 += " "                                                             # STEP 25
opener0 = newFakeOpener(os0)                                            # STEP 26
os0.mkdir(path4)                                                        # STEP 27
os0.mkdir(path4)                                                        # STEP 28
os0.remove(path4)                                                       # STEP 29
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 30
result = os0.path.isabs(path4)                                          # STEP 31
str4 += " "                                                             # STEP 32
result = os0.path.lexists(path4)                                        # STEP 33
os0.close(fd0)                                                          # STEP 34
os0.close(fd0)                                                          # STEP 35
os0.link(path4,path4)                                                   # STEP 36
result = os0.path.abspath(path4)                                        # STEP 37
result = os0.path.isdir(path4)                                          # STEP 38
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 39
stat3 = os0.lstat(path4)                                                # STEP 40
result = os0.path.isfile(path4)                                         # STEP 41
file0 = opener0(path4,'w')                                              # STEP 42
stat0 = os0.stat(path4)                                                 # STEP 43
file0.next()                                                            # STEP 44
str0 += 'o'                                                             # STEP 45
os0.link(path4,path4)                                                   # STEP 46
str0 += 'u'                                                             # STEP 47
file0.seek(bytes2)                                                      # STEP 48
result = stat3.st_size                                                  # STEP 49
result = os0.path.islink(path4)                                         # STEP 50
result = os0.path.exists(path4)                                         # STEP 51
result = os0.path.isdir(path4)                                          # STEP 52
result = os0.readlink(path4)                                            # STEP 53
result = file0.readline()                                               # STEP 54
os0.makedirs(path4)                                                     # STEP 55
stat1 = os0.stat(path4)                                                 # STEP 56
result = file0.readline(bytes2)                                         # STEP 57
os0.write(fd0,str0)                                                     # STEP 58
os0.makedirs(path4)                                                     # STEP 59
result = os0.read(fd0,bytes2)                                           # STEP 60
result = os0.readlink(path4)                                            # STEP 61
result = os0.path.lexists(path4)                                        # STEP 62
component2 = "a"                                                        # STEP 63
bytes2 = 0                                                              # STEP 64
path2 = "/Volumes/ramdisk/test"                                         # STEP 65
stat3 = os0.stat(path4)                                                 # STEP 66
path2 += "/" + component2                                               # STEP 67
result = os0.path.isabs(path2)                                          # STEP 68
result = os0.path.islink(path2)                                         # STEP 69
os0.link(path4,path2)                                                   # STEP 70
os0.path.getsize(path2)                                                 # STEP 71
str4 += " "                                                             # STEP 72
result = os0.path.dirname(path4)                                        # STEP 73
result = os0.path.islink(path2)                                         # STEP 74
stat4 = os0.stat(path2)                                                 # STEP 75
result = file0.read()                                                   # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106535cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10b17c488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 81 steps

SAVING TEST AS failure.5097.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
component2 = "e"                                                         # STEP 2
str2 = ""                                                                # STEP 3
component3 = "d"                                                         # STEP 4
str1 = ""                                                                # STEP 5
bytes4 = 0                                                               # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
file0 = opener0(path2)                                                   # STEP 8
component1 = "h"                                                         # STEP 9
os0.mkdir(path2)                                                        # STEP 10
path3 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.link(path3,path3)                                                   # STEP 12
path2 += "/" + component2                                               # STEP 13
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 14
path3 += "/" + component2                                               # STEP 15
os0.symlink(path2,path2)                                                # STEP 16
os0.remove(path3)                                                       # STEP 17
str1 += " "                                                             # STEP 18
result = os0.path.exists(path2)                                         # STEP 19
stat0 = os0.lstat(path2)                                                # STEP 20
path3 += "/" + component1                                               # STEP 21
result = os0.path.isabs(path2)                                          # STEP 22
file0 = opener0(path2)                                                  # STEP 23
os0.link(path2,path2)                                                   # STEP 24
result = os0.read(fd0,bytes4)                                           # STEP 25
path3 += "/" + component2                                               # STEP 26
result = os0.read(fd0,bytes4)                                           # STEP 27
os0.mkdir(path3)                                                        # STEP 28
path2 = "/Volumes/ramdisk/test"                                         # STEP 29
os0.symlink(path3,path3)                                                # STEP 30
os0.rmdir(path3)                                                        # STEP 31
result = os0.path.isabs(path3)                                          # STEP 32
stat2 = os0.fstat(fd0)                                                  # STEP 33
file0 = opener0(path3)                                                  # STEP 34
result = os0.path.isabs(path3)                                          # STEP 35
path2 += "/" + component3                                               # STEP 36
result = os0.path.isabs(path2)                                          # STEP 37
str1 += 'p'                                                             # STEP 38
result = os0.path.isabs(path3)                                          # STEP 39
component0 = "lambda"                                                   # STEP 40
bytes4 += 1                                                             # STEP 41
stat4 = os0.stat(path3)                                                 # STEP 42
result = stat2.st_size                                                  # STEP 43
result = os0.path.dirname(path2)                                        # STEP 44
os0.close(fd0)                                                          # STEP 45
file0 = opener0(path3)                                                  # STEP 46
str2 += " "                                                             # STEP 47
result = os0.path.dirname(path3)                                        # STEP 48
stat4 = os0.lstat(path2)                                                # STEP 49
result = os0.path.dirname(path3)                                        # STEP 50
result = os0.path.isabs(path3)                                          # STEP 51
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 52
stat1 = os0.fstat(fd0)                                                  # STEP 53
os0.close(fd0)                                                          # STEP 54
result = os0.path.lexists(path2)                                        # STEP 55
result = os0.path.isfile(path3)                                         # STEP 56
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 57
result = stat2.st_nlink                                                 # STEP 58
os0.close(fd0)                                                          # STEP 59
result = sorted(os0.listdir(path3))                                     # STEP 60
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 61
file0 = opener0(path3)                                                  # STEP 62
bytes4 += 1                                                             # STEP 63
stat4 = os0.lstat(path3)                                                # STEP 64
file0 = opener0(path2,'w')                                              # STEP 65
os0.makedirs(path3)                                                     # STEP 66
file0.next()                                                            # STEP 67
os0.makedirs(path3)                                                     # STEP 68
bytes0 = 0                                                              # STEP 69
result = file0.readline(bytes0)                                         # STEP 70
result = os0.readlink(path3)                                            # STEP 71
file0.write(str1)                                                       # STEP 72
result = os0.path.isdir(path2)                                          # STEP 73
os0.write(fd0,str1)                                                     # STEP 74
result = sorted(os0.listdir(path2))                                     # STEP 75
str2 += 'j'                                                             # STEP 76
result = os0.path.islink(path3)                                         # STEP 77
bytes4 += 1                                                             # STEP 78
result = os0.path.isdir(path2)                                          # STEP 79
result = file0.read()                                                   # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105544368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
TEST #168 STEP #5 (0:00:30.000050) Sat Jul 22 03:49:38 2017 [ 905 stmts 1177 branches ] 16579 TOTAL ACTIONS (552.63241542/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x108635638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 73 steps

SAVING TEST AS failure.5097.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes0 = 0                                                               # STEP 0
bytes0 += 1                                                              # STEP 1
bytes0 += 1                                                              # STEP 2
bytes0 += 1                                                              # STEP 3
bytes1 = 0                                                               # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes4 = 0                                                               # STEP 6
component1 = "e"                                                         # STEP 7
bytes1 += 1                                                              # STEP 8
bytes1 += 1                                                              # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
str0 = ""                                                               # STEP 11
component4 = "a"                                                        # STEP 12
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
result = os0.path.isfile(path4)                                         # STEP 14
str1 = ""                                                               # STEP 15
result = sorted(os0.listdir(path4))                                     # STEP 16
os0.mkdir(path4)                                                        # STEP 17
result = os0.readlink(path4)                                            # STEP 18
result = sorted(os0.listdir(path4))                                     # STEP 19
bytes0 = 0                                                              # STEP 20
result = os0.path.lexists(path4)                                        # STEP 21
result = os0.path.exists(path4)                                         # STEP 22
os0.symlink(path4,path4)                                                # STEP 23
str4 = ""                                                               # STEP 24
result = os0.readlink(path4)                                            # STEP 25
file0 = opener0(path4,'r')                                              # STEP 26
component0 = "c"                                                        # STEP 27
result = os0.path.isfile(path4)                                         # STEP 28
result = os0.readlink(path4)                                            # STEP 29
result = os0.path.islink(path4)                                         # STEP 30
os0.symlink(path4,path4)                                                # STEP 31
result = os0.readlink(path4)                                            # STEP 32
bytes0 += 1                                                             # STEP 33
component2 = "f"                                                        # STEP 34
os0.link(path4,path4)                                                   # STEP 35
os0.symlink(path4,path4)                                                # STEP 36
path4 += "/" + component1                                               # STEP 37
result = os0.path.dirname(path4)                                        # STEP 38
result = os0.path.abspath(path4)                                        # STEP 39
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
os0.link(path4,path4)                                                   # STEP 41
result = os0.path.exists(path4)                                         # STEP 42
result = os0.path.isfile(path4)                                         # STEP 43
result = os0.path.isabs(path4)                                          # STEP 44
os0.rmdir(path4)                                                        # STEP 45
result = os0.path.dirname(path4)                                        # STEP 46
os0.close(fd0)                                                          # STEP 47
path2 = "/Volumes/ramdisk/test"                                         # STEP 48
result = sorted(os0.listdir(path4))                                     # STEP 49
result = os0.path.dirname(path2)                                        # STEP 50
file0 = opener0(path4,'r')                                              # STEP 51
os0.remove(path2)                                                       # STEP 52
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 53
result = os0.read(fd0,bytes0)                                           # STEP 54
result = file0.readline()                                               # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
result = os0.path.abspath(path2)                                        # STEP 57
result = file0.read(bytes0)                                             # STEP 58
os0.remove(path4)                                                       # STEP 59
os0.mkdir(path2)                                                        # STEP 60
result = os0.path.isabs(path2)                                          # STEP 61
result = os0.readlink(path2)                                            # STEP 62
stat0 = os0.stat(path4)                                                 # STEP 63
result = os0.path.lexists(path2)                                        # STEP 64
result = file0.read(bytes4)                                             # STEP 65
os0.link(path2,path4)                                                   # STEP 66
file0.next()                                                            # STEP 67
result = os0.path.isabs(path4)                                          # STEP 68
file0.seek(bytes1)                                                      # STEP 69
str4 += " "                                                             # STEP 70
result = os0.path.islink(path4)                                         # STEP 71
file0.truncate()                                                        # STEP 72
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x104595bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1043bff38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 68 steps

SAVING TEST AS failure.5097.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
result = os0.path.dirname(path1)                                         # STEP 2
result = sorted(os0.listdir(path1))                                      # STEP 3
bytes1 = 0                                                               # STEP 4
os0.remove(path1)                                                        # STEP 5
result = os0.path.exists(path1)                                          # STEP 6
os0.makedirs(path1)                                                      # STEP 7
bytes0 = 0                                                               # STEP 8
result = os0.path.isfile(path1)                                          # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
os0.link(path1,path4)                                                   # STEP 11
result = os0.path.abspath(path4)                                        # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
result = os0.path.isfile(path1)                                         # STEP 14
component1 = "delta"                                                    # STEP 15
path1 += "/" + component1                                               # STEP 16
bytes1 += 1                                                             # STEP 17
result = os0.path.isdir(path1)                                          # STEP 18
os0.rename(path1,path4)                                                 # STEP 19
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 20
os0.mkdir(path4)                                                        # STEP 21
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 22
result = os0.path.abspath(path4)                                        # STEP 23
os0.rmdir(path1)                                                        # STEP 24
os0.rename(path1,path4)                                                 # STEP 25
os0.rename(path1,path4)                                                 # STEP 26
os0.rename(path1,path4)                                                 # STEP 27
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 28
os0.close(fd0)                                                          # STEP 29
result = os0.path.exists(path4)                                         # STEP 30
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 31
str3 = ""                                                               # STEP 32
result = os0.path.islink(path1)                                         # STEP 33
os0.write(fd0,str3)                                                     # STEP 34
os0.close(fd0)                                                          # STEP 35
str3 += 'w'                                                             # STEP 36
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 37
bytes1 += 1                                                             # STEP 38
str3 += " "                                                             # STEP 39
os0.makedirs(path4)                                                     # STEP 40
result = os0.readlink(path1)                                            # STEP 41
bytes1 += 1                                                             # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
result = os0.path.isfile(path4)                                         # STEP 44
os0.close(fd0)                                                          # STEP 45
file0 = opener0(path1,'w')                                              # STEP 46
path1 = "/Volumes/ramdisk/test"                                         # STEP 47
file0.seek(bytes0)                                                      # STEP 48
file0.seek(bytes1)                                                      # STEP 49
result = os0.path.islink(path1)                                         # STEP 50
str3 += " "                                                             # STEP 51
os0.makedirs(path1)                                                     # STEP 52
path4 += "/" + component1                                               # STEP 53
stat1 = os0.stat(path4)                                                 # STEP 54
result = os0.path.exists(path4)                                         # STEP 55
result = os0.path.exists(path4)                                         # STEP 56
result = stat1.st_nlink                                                 # STEP 57
file0.flush()                                                           # STEP 58
result = os0.readlink(path4)                                            # STEP 59
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 60
result = os0.path.isabs(path4)                                          # STEP 61
result = file0.readline()                                               # STEP 62
result = file0.readline()                                               # STEP 63
result = os0.path.lexists(path1)                                        # STEP 64
result = os0.read(fd0,bytes0)                                           # STEP 65
result = os0.path.exists(path4)                                         # STEP 66
result = file0.readline()                                               # STEP 67
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10278c368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x103a26488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 58 steps

SAVING TEST AS failure.5097.test.7
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
str4 = ""                                                                # STEP 3
result = os0.path.lexists(path0)                                         # STEP 4
result = os0.path.isfile(path1)                                          # STEP 5
result = os0.path.exists(path1)                                          # STEP 6
result = sorted(os0.listdir(path1))                                      # STEP 7
result = os0.path.isabs(path1)                                           # STEP 8
result = os0.path.isabs(path0)                                           # STEP 9
result = os0.path.isdir(path1)                                          # STEP 10
result = os0.path.exists(path0)                                         # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
str4 += " "                                                             # STEP 13
str4 += 'k'                                                             # STEP 14
str4 += " "                                                             # STEP 15
str4 += " "                                                             # STEP 16
os0.symlink(path0,path1)                                                # STEP 17
file0 = opener0(path1)                                                  # STEP 18
str4 += 'f'                                                             # STEP 19
str3 = ""                                                               # STEP 20
os0.makedirs(path0)                                                     # STEP 21
file0 = opener0(path1,'a')                                              # STEP 22
result = os0.path.abspath(path1)                                        # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
component2 = "e"                                                        # STEP 25
bytes1 = 0                                                              # STEP 26
result = sorted(os0.listdir(path1))                                     # STEP 27
file0 = opener0(path0,'a')                                              # STEP 28
path1 += "/" + component2                                               # STEP 29
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 30
file0 = opener0(path1,'r')                                              # STEP 31
result = file0.readlines()                                              # STEP 32
os0.rename(path1,path0)                                                 # STEP 33
result = os0.path.abspath(path0)                                        # STEP 34
str3 += " "                                                             # STEP 35
result = os0.path.isabs(path1)                                          # STEP 36
str1 = ""                                                               # STEP 37
result = os0.path.isfile(path1)                                         # STEP 38
result = os0.readlink(path1)                                            # STEP 39
file0.seek(bytes1)                                                      # STEP 40
os0.path.getsize(path1)                                                 # STEP 41
result = os0.readlink(path1)                                            # STEP 42
os0.link(path1,path1)                                                   # STEP 43
result = os0.path.lexists(path0)                                        # STEP 44
result = file0.readlines()                                              # STEP 45
file0.write(str1)                                                       # STEP 46
bytes1 += 1                                                             # STEP 47
path0 += "/" + component2                                               # STEP 48
os0.remove(path0)                                                       # STEP 49
os0.write(fd0,str3)                                                     # STEP 50
os0.path.getsize(path0)                                                 # STEP 51
result = os0.path.dirname(path1)                                        # STEP 52
file0.flush()                                                           # STEP 53
os0.rmdir(path1)                                                        # STEP 54
result = os0.path.abspath(path1)                                        # STEP 55
os0.remove(path1)                                                       # STEP 56
result = file0.read(bytes1)                                             # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x1039f9098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 8 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x107e04128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 83 steps

SAVING TEST AS failure.5097.test.8
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str0 = ""                                                                # STEP 0
str4 = ""                                                                # STEP 1
str4 += " "                                                              # STEP 2
str4 += " "                                                              # STEP 3
bytes4 = 0                                                               # STEP 4
bytes1 = 0                                                               # STEP 5
component1 = "delta"                                                     # STEP 6
os0 = newFakeOS()                                                        # STEP 7
str0 += 'b'                                                              # STEP 8
bytes3 = 0                                                               # STEP 9
bytes3 += 1                                                             # STEP 10
str0 = ""                                                               # STEP 11
bytes0 = 0                                                              # STEP 12
str1 = ""                                                               # STEP 13
path2 = "/Volumes/ramdisk/test"                                         # STEP 14
result = os0.path.dirname(path2)                                        # STEP 15
bytes0 += 1                                                             # STEP 16
result = os0.readlink(path2)                                            # STEP 17
path2 += "/" + component1                                               # STEP 18
os0.mkdir(path2)                                                        # STEP 19
result = os0.path.isabs(path2)                                          # STEP 20
result = os0.readlink(path2)                                            # STEP 21
bytes1 += 1                                                             # STEP 22
result = os0.path.islink(path2)                                         # STEP 23
os0.link(path2,path2)                                                   # STEP 24
os0.mkdir(path2)                                                        # STEP 25
os0.remove(path2)                                                       # STEP 26
os0.symlink(path2,path2)                                                # STEP 27
os0.mkdir(path2)                                                        # STEP 28
result = os0.path.dirname(path2)                                        # STEP 29
result = os0.path.isdir(path2)                                          # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
str4 += 'w'                                                             # STEP 32
bytes1 += 1                                                             # STEP 33
os0.remove(path2)                                                       # STEP 34
os0.symlink(path2,path2)                                                # STEP 35
file0 = opener0(path2,'r')                                              # STEP 36
os0.link(path2,path2)                                                   # STEP 37
result = os0.path.isfile(path2)                                         # STEP 38
path2 += "/" + component1                                               # STEP 39
file0 = opener0(path2,'w')                                              # STEP 40
stat2 = os0.lstat(path2)                                                # STEP 41
result = os0.path.dirname(path2)                                        # STEP 42
os0.symlink(path2,path2)                                                # STEP 43
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 44
os0.path.getsize(path2)                                                 # STEP 45
os0.makedirs(path2)                                                     # STEP 46
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 47
result = stat2.st_nlink                                                 # STEP 48
result = os0.path.exists(path2)                                         # STEP 49
str0 += " "                                                             # STEP 50
result = file0.readline()                                               # STEP 51
path2 += "/" + component1                                               # STEP 52
result = file0.readlines()                                              # STEP 53
result = os0.path.isdir(path2)                                          # STEP 54
result = file0.read()                                                   # STEP 55
result = os0.path.isdir(path2)                                          # STEP 56
result = os0.read(fd0,bytes4)                                           # STEP 57
os0.path.getsize(path2)                                                 # STEP 58
result = file0.read()                                                   # STEP 59
result = stat2.st_size                                                  # STEP 60
os0.symlink(path2,path2)                                                # STEP 61
os0.link(path2,path2)                                                   # STEP 62
os0.write(fd0,str0)                                                     # STEP 63
os0.mkdir(path2)                                                        # STEP 64
file0.seek(bytes4)                                                      # STEP 65
os0.mkdir(path2)                                                        # STEP 66
os0.path.getsize(path2)                                                 # STEP 67
stat2 = os0.stat(path2)                                                 # STEP 68
stat4 = os0.lstat(path2)                                                # STEP 69
file0.truncate()                                                        # STEP 70
os0.makedirs(path2)                                                     # STEP 71
result = os0.path.lexists(path2)                                        # STEP 72
stat1 = os0.fstat(fd0)                                                  # STEP 73
result = os0.read(fd0,bytes3)                                           # STEP 74
result = os0.readlink(path2)                                            # STEP 75
result = os0.read(fd0,bytes1)                                           # STEP 76
result = stat1.st_nlink                                                 # STEP 77
result = os0.readlink(path2)                                            # STEP 78
result = os0.path.isabs(path2)                                          # STEP 79
result = stat1.st_nlink                                                 # STEP 80
os0.makedirs(path2)                                                     # STEP 81
result = stat1.st_size                                                  # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x106ba7488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 9 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x10a70edd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 79 steps

SAVING TEST AS failure.5097.test.9
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "beta"                                                      # STEP 0
str3 = ""                                                                # STEP 1
str4 = ""                                                                # STEP 2
str4 += " "                                                              # STEP 3
str3 += 'v'                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes3 = 0                                                               # STEP 6
str3 = ""                                                                # STEP 7
bytes3 += 1                                                              # STEP 8
str4 += " "                                                              # STEP 9
str3 += 'b'                                                             # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.isdir(path4)                                          # STEP 12
os0.symlink(path4,path4)                                                # STEP 13
os0.remove(path4)                                                       # STEP 14
os0.link(path4,path4)                                                   # STEP 15
str1 = ""                                                               # STEP 16
result = os0.path.isabs(path4)                                          # STEP 17
bytes3 += 1                                                             # STEP 18
result = os0.path.isdir(path4)                                          # STEP 19
result = os0.path.isfile(path4)                                         # STEP 20
os0.remove(path4)                                                       # STEP 21
bytes3 += 1                                                             # STEP 22
result = os0.path.dirname(path4)                                        # STEP 23
os0.link(path4,path4)                                                   # STEP 24
result = os0.path.exists(path4)                                         # STEP 25
result = os0.path.lexists(path4)                                        # STEP 26
path4 += "/" + component2                                               # STEP 27
os0.mkdir(path4)                                                        # STEP 28
result = os0.path.isfile(path4)                                         # STEP 29
os0.mkdir(path4)                                                        # STEP 30
result = os0.path.exists(path4)                                         # STEP 31
result = os0.path.dirname(path4)                                        # STEP 32
result = os0.path.dirname(path4)                                        # STEP 33
result = sorted(os0.listdir(path4))                                     # STEP 34
result = os0.path.exists(path4)                                         # STEP 35
str0 = ""                                                               # STEP 36
result = os0.path.isdir(path4)                                          # STEP 37
os0.link(path4,path4)                                                   # STEP 38
result = os0.path.isabs(path4)                                          # STEP 39
result = os0.path.abspath(path4)                                        # STEP 40
str0 += 'q'                                                             # STEP 41
str4 += 'd'                                                             # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
bytes2 = 0                                                              # STEP 44
result = os0.path.lexists(path4)                                        # STEP 45
result = os0.readlink(path4)                                            # STEP 46
path4 += "/" + component2                                               # STEP 47
file0 = opener0(path4,'a')                                              # STEP 48
result = os0.path.abspath(path4)                                        # STEP 49
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 50
result = file0.readlines()                                              # STEP 51
bytes1 = 0                                                              # STEP 52
result = file0.readline()                                               # STEP 53
file0.write(str3)                                                       # STEP 54
os0.symlink(path4,path4)                                                # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
stat2 = os0.lstat(path4)                                                # STEP 57
result = os0.path.isdir(path4)                                          # STEP 58
os0.link(path4,path4)                                                   # STEP 59
stat0 = os0.lstat(path4)                                                # STEP 60
result = file0.read(bytes1)                                             # STEP 61
result = file0.read()                                                   # STEP 62
result = file0.read()                                                   # STEP 63
result = os0.path.abspath(path4)                                        # STEP 64
result = os0.path.lexists(path4)                                        # STEP 65
path4 = "/Volumes/ramdisk/test"                                         # STEP 66
result = os0.readlink(path4)                                            # STEP 67
os0.makedirs(path4)                                                     # STEP 68
str3 += 'c'                                                             # STEP 69
os0.link(path4,path4)                                                   # STEP 70
bytes3 = 0                                                              # STEP 71
path4 += "/" + component2                                               # STEP 72
result = file0.read(bytes3)                                             # STEP 73
os0.remove(path4)                                                       # STEP 74
stat4 = os0.stat(path4)                                                 # STEP 75
file0.next()                                                            # STEP 76
result = os0.path.dirname(path4)                                        # STEP 77
result = stat0.st_size                                                  # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x1043ccd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 10 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 3
STOPPING TESTING DUE TO TIMEOUT
42.9951690821 PERCENT COVERED
60.312969923 TOTAL RUNTIME
334 EXECUTED
33038 TOTAL TEST OPERATIONS
41.9260914326 TIME SPENT EXECUTING TEST OPERATIONS
15.9012136459 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0231897830963 TIME SPENT CHECKING PROPERTIES
41.9492812157 TOTAL TIME SPENT RUNNING SUT
1.01362657547 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
10 FAILED
0 REPEATS OF FAILURES
10 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes3 = 0                                                               # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
bytes1 = 0                                                               # STEP 3
str0 = ""                                                                # STEP 4
str0 += 'p'                                                              # STEP 5
bytes2 = 0                                                               # STEP 6
str0 += 'e'                                                              # STEP 7
os0 = newFakeOS()                                                        # STEP 8
os0.remove(path1)                                                        # STEP 9
result = os0.path.abspath(path1)                                        # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.link(path2,path1)                                                   # STEP 12
bytes0 = 0                                                              # STEP 13
os0.makedirs(path0)                                                     # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
bytes1 += 1                                                             # STEP 16
str2 = ""                                                               # STEP 17
path2 = "/Volumes/ramdisk/test"                                         # STEP 18
result = os0.path.islink(path1)                                         # STEP 19
os0.makedirs(path1)                                                     # STEP 20
os0.link(path2,path1)                                                   # STEP 21
os0.remove(path0)                                                       # STEP 22
result = sorted(os0.listdir(path2))                                     # STEP 23
os0.remove(path2)                                                       # STEP 24
os0.remove(path0)                                                       # STEP 25
result = os0.path.dirname(path1)                                        # STEP 26
result = sorted(os0.listdir(path1))                                     # STEP 27
os0.makedirs(path1)                                                     # STEP 28
os0.mkdir(path1)                                                        # STEP 29
bytes4 = 0                                                              # STEP 30
os0.makedirs(path2)                                                     # STEP 31
result = os0.path.isabs(path2)                                          # STEP 32
opener0 = newFakeOpener(os0)                                            # STEP 33
file0 = opener0(path1,'w')                                              # STEP 34
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
bytes3 += 1                                                             # STEP 36
file0 = opener0(path0,'w')                                              # STEP 37
bytes1 = 0                                                              # STEP 38
component0 = "epsilon"                                                  # STEP 39
os0.makedirs(path0)                                                     # STEP 40
os0.mkdir(path1)                                                        # STEP 41
result = os0.path.islink(path2)                                         # STEP 42
path3 = "/Volumes/ramdisk/test"                                         # STEP 43
bytes3 = 0                                                              # STEP 44
result = os0.path.isdir(path1)                                          # STEP 45
result = os0.readlink(path2)                                            # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
path3 += "/" + component0                                               # STEP 48
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 49
result = os0.path.lexists(path3)                                        # STEP 50
os0.close(fd0)                                                          # STEP 51
os0.mkdir(path1)                                                        # STEP 52
result = sorted(os0.listdir(path0))                                     # STEP 53
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 54
path2 += "/" + component0                                               # STEP 55
os0.write(fd0,str2)                                                     # STEP 56
result = sorted(os0.listdir(path2))                                     # STEP 57
result = os0.path.exists(path1)                                         # STEP 58
os0.remove(path3)                                                       # STEP 59
os0.write(fd0,str0)                                                     # STEP 60
result = os0.path.islink(path1)                                         # STEP 61
bytes2 += 1                                                             # STEP 62
file0 = opener0(path3,'a')                                              # STEP 63
stat0 = os0.fstat(fd0)                                                  # STEP 64
result = file0.read()                                                   # STEP 65
str2 += 'a'                                                             # STEP 66
os0.write(fd0,str2)                                                     # STEP 67
result = stat0.st_nlink                                                 # STEP 68
result = stat0.st_size                                                  # STEP 69
result = sorted(os0.listdir(path0))                                     # STEP 70
result = stat0.st_nlink                                                 # STEP 71
os0.remove(path1)                                                       # STEP 72
result = os0.path.dirname(path1)                                        # STEP 73
result = os0.path.islink(path3)                                         # STEP 74
file0.truncate()                                                        # STEP 75
result = os0.path.dirname(path2)                                        # STEP 76
result = os0.readlink(path2)                                            # STEP 77
result = stat0.st_nlink                                                 # STEP 78
file0.seek(bytes1)                                                      # STEP 79
os0.write(fd0,str2)                                                     # STEP 80
path1 = "/Volumes/ramdisk/test"                                         # STEP 81
stat1 = os0.lstat(path3)                                                # STEP 82
result = file0.readlines()                                              # STEP 83
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1065aa128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
component3 = "f"                                                         # STEP 0
component0 = "gamma"                                                     # STEP 1
str0 = ""                                                                # STEP 2
bytes0 = 0                                                               # STEP 3
bytes3 = 0                                                               # STEP 4
bytes1 = 0                                                               # STEP 5
os0 = newFakeOS()                                                        # STEP 6
component1 = "c"                                                         # STEP 7
component4 = "a"                                                         # STEP 8
bytes1 += 1                                                              # STEP 9
bytes2 = 0                                                              # STEP 10
str1 = ""                                                               # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
str0 += 'r'                                                             # STEP 14
result = os0.path.isdir(path0)                                          # STEP 15
os0.mkdir(path0)                                                        # STEP 16
result = os0.path.abspath(path0)                                        # STEP 17
result = os0.path.islink(path0)                                         # STEP 18
os0.symlink(path0,path0)                                                # STEP 19
str3 = ""                                                               # STEP 20
result = os0.path.dirname(path0)                                        # STEP 21
result = os0.path.isdir(path0)                                          # STEP 22
result = os0.path.exists(path0)                                         # STEP 23
result = os0.path.lexists(path0)                                        # STEP 24
file0 = opener0(path0)                                                  # STEP 25
path0 += "/" + component1                                               # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
os0.link(path0,path0)                                                   # STEP 28
os0.link(path0,path0)                                                   # STEP 29
result = os0.path.islink(path0)                                         # STEP 30
result = os0.path.exists(path0)                                         # STEP 31
os0.symlink(path0,path0)                                                # STEP 32
file0 = opener0(path0)                                                  # STEP 33
stat2 = os0.fstat(fd0)                                                  # STEP 34
os0.remove(path0)                                                       # STEP 35
stat0 = os0.lstat(path0)                                                # STEP 36
result = file0.readline(bytes2)                                         # STEP 37
str0 += " "                                                             # STEP 38
bytes3 += 1                                                             # STEP 39
result = os0.path.abspath(path0)                                        # STEP 40
os0.remove(path0)                                                       # STEP 41
path0 += "/" + component3                                               # STEP 42
os0.write(fd0,str1)                                                     # STEP 43
result = file0.read(bytes0)                                             # STEP 44
result = stat2.st_nlink                                                 # STEP 45
os0.path.getsize(path0)                                                 # STEP 46
result = os0.readlink(path0)                                            # STEP 47
result = file0.readlines()                                              # STEP 48
result = stat2.st_nlink                                                 # STEP 49
str0 += 'g'                                                             # STEP 50
result = os0.path.isfile(path0)                                         # STEP 51
result = file0.readline()                                               # STEP 52
os0.symlink(path0,path0)                                                # STEP 53
stat1 = os0.lstat(path0)                                                # STEP 54
result = file0.readlines()                                              # STEP 55
result = os0.path.exists(path0)                                         # STEP 56
path1 = "/Volumes/ramdisk/test"                                         # STEP 57
stat2 = os0.stat(path0)                                                 # STEP 58
result = stat2.st_nlink                                                 # STEP 59
file0.truncate()                                                        # STEP 60
result = file0.readline(bytes0)                                         # STEP 61
file0.flush()                                                           # STEP 62
file0.seek(bytes3)                                                      # STEP 63
result = file0.readline()                                               # STEP 64
path2 = "/Volumes/ramdisk/test"                                         # STEP 65
os0.link(path1,path1)                                                   # STEP 66
result = file0.readline(bytes2)                                         # STEP 67
os0.write(fd0,str1)                                                     # STEP 68
stat2 = os0.lstat(path0)                                                # STEP 69
os0.path.getsize(path0)                                                 # STEP 70
component3 = "gamma"                                                    # STEP 71
os0.write(fd0,str0)                                                     # STEP 72
result = os0.read(fd0,bytes3)                                           # STEP 73
os0.mkdir(path1)                                                        # STEP 74
result = os0.read(fd0,bytes1)                                           # STEP 75
file0.flush()                                                           # STEP 76
os0.close(fd0)                                                          # STEP 77
result = stat2.st_nlink                                                 # STEP 78
result = file0.read()                                                   # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (r g) == ( g) ',), <traceback object at 0x106593b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
component4 = "f"                                                         # STEP 1
bytes1 = 0                                                               # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
path3 += "/" + component4                                                # STEP 4
component0 = "omega"                                                     # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
bytes4 = 0                                                               # STEP 8
bytes3 = 0                                                               # STEP 9
component1 = "lambda"                                                   # STEP 10
str2 = ""                                                               # STEP 11
path1 += "/" + component0                                               # STEP 12
os0 = newFakeOS()                                                       # STEP 13
result = os0.path.abspath(path3)                                        # STEP 14
os0.mkdir(path1)                                                        # STEP 15
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
component3 = "beta"                                                     # STEP 17
os0.symlink(path1,path1)                                                # STEP 18
os0.remove(path3)                                                       # STEP 19
os0.symlink(path4,path1)                                                # STEP 20
result = os0.path.isdir(path4)                                          # STEP 21
path3 += "/" + component3                                               # STEP 22
os0.makedirs(path1)                                                     # STEP 23
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
bytes2 = 0                                                              # STEP 25
stat2 = os0.fstat(fd0)                                                  # STEP 26
os0.close(fd0)                                                          # STEP 27
result = os0.path.isfile(path4)                                         # STEP 28
str2 += 'k'                                                             # STEP 29
stat0 = os0.lstat(path3)                                                # STEP 30
result = os0.path.islink(path4)                                         # STEP 31
component4 = "delta"                                                    # STEP 32
os0.close(fd0)                                                          # STEP 33
result = os0.path.islink(path1)                                         # STEP 34
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 35
os0.close(fd0)                                                          # STEP 36
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 37
result = os0.path.isdir(path4)                                          # STEP 38
opener0 = newFakeOpener(os0)                                            # STEP 39
component0 = "alpha"                                                    # STEP 40
path4 += "/" + component0                                               # STEP 41
file0 = opener0(path3,'r')                                              # STEP 42
bytes0 = 0                                                              # STEP 43
file0.next()                                                            # STEP 44
file0.seek(bytes2)                                                      # STEP 45
result = stat0.st_nlink                                                 # STEP 46
os0.mkdir(path3)                                                        # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
result = os0.path.islink(path1)                                         # STEP 49
result = os0.read(fd0,bytes1)                                           # STEP 50
file0.truncate()                                                        # STEP 51
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a264f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
component4 = "b"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
str4 = ""                                                                # STEP 3
result = os0.path.dirname(path4)                                         # STEP 4
result = os0.path.isfile(path4)                                          # STEP 5
os0.remove(path4)                                                        # STEP 6
result = os0.path.islink(path4)                                          # STEP 7
str0 = ""                                                                # STEP 8
result = sorted(os0.listdir(path4))                                      # STEP 9
result = os0.path.abspath(path4)                                        # STEP 10
result = os0.path.islink(path4)                                         # STEP 11
os0.link(path4,path4)                                                   # STEP 12
result = os0.path.exists(path4)                                         # STEP 13
result = os0.path.isdir(path4)                                          # STEP 14
result = os0.path.abspath(path4)                                        # STEP 15
result = os0.path.abspath(path4)                                        # STEP 16
bytes2 = 0                                                              # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
path4 += "/" + component4                                               # STEP 19
result = sorted(os0.listdir(path4))                                     # STEP 20
result = os0.path.abspath(path4)                                        # STEP 21
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 22
result = os0.readlink(path4)                                            # STEP 23
os0.close(fd0)                                                          # STEP 24
str0 += " "                                                             # STEP 25
opener0 = newFakeOpener(os0)                                            # STEP 26
os0.mkdir(path4)                                                        # STEP 27
os0.mkdir(path4)                                                        # STEP 28
os0.remove(path4)                                                       # STEP 29
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 30
result = os0.path.isabs(path4)                                          # STEP 31
str4 += " "                                                             # STEP 32
result = os0.path.lexists(path4)                                        # STEP 33
os0.close(fd0)                                                          # STEP 34
os0.close(fd0)                                                          # STEP 35
os0.link(path4,path4)                                                   # STEP 36
result = os0.path.abspath(path4)                                        # STEP 37
result = os0.path.isdir(path4)                                          # STEP 38
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 39
stat3 = os0.lstat(path4)                                                # STEP 40
result = os0.path.isfile(path4)                                         # STEP 41
file0 = opener0(path4,'w')                                              # STEP 42
stat0 = os0.stat(path4)                                                 # STEP 43
file0.next()                                                            # STEP 44
str0 += 'o'                                                             # STEP 45
os0.link(path4,path4)                                                   # STEP 46
str0 += 'u'                                                             # STEP 47
file0.seek(bytes2)                                                      # STEP 48
result = stat3.st_size                                                  # STEP 49
result = os0.path.islink(path4)                                         # STEP 50
result = os0.path.exists(path4)                                         # STEP 51
result = os0.path.isdir(path4)                                          # STEP 52
result = os0.readlink(path4)                                            # STEP 53
result = file0.readline()                                               # STEP 54
os0.makedirs(path4)                                                     # STEP 55
stat1 = os0.stat(path4)                                                 # STEP 56
result = file0.readline(bytes2)                                         # STEP 57
os0.write(fd0,str0)                                                     # STEP 58
os0.makedirs(path4)                                                     # STEP 59
result = os0.read(fd0,bytes2)                                           # STEP 60
result = os0.readlink(path4)                                            # STEP 61
result = os0.path.lexists(path4)                                        # STEP 62
component2 = "a"                                                        # STEP 63
bytes2 = 0                                                              # STEP 64
path2 = "/Volumes/ramdisk/test"                                         # STEP 65
stat3 = os0.stat(path4)                                                 # STEP 66
path2 += "/" + component2                                               # STEP 67
result = os0.path.isabs(path2)                                          # STEP 68
result = os0.path.islink(path2)                                         # STEP 69
os0.link(path4,path2)                                                   # STEP 70
os0.path.getsize(path2)                                                 # STEP 71
str4 += " "                                                             # STEP 72
result = os0.path.dirname(path4)                                        # STEP 73
result = os0.path.islink(path2)                                         # STEP 74
stat4 = os0.stat(path2)                                                 # STEP 75
result = file0.read()                                                   # STEP 76
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106535cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
component2 = "e"                                                         # STEP 2
str2 = ""                                                                # STEP 3
component3 = "d"                                                         # STEP 4
str1 = ""                                                                # STEP 5
bytes4 = 0                                                               # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
file0 = opener0(path2)                                                   # STEP 8
component1 = "h"                                                         # STEP 9
os0.mkdir(path2)                                                        # STEP 10
path3 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.link(path3,path3)                                                   # STEP 12
path2 += "/" + component2                                               # STEP 13
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 14
path3 += "/" + component2                                               # STEP 15
os0.symlink(path2,path2)                                                # STEP 16
os0.remove(path3)                                                       # STEP 17
str1 += " "                                                             # STEP 18
result = os0.path.exists(path2)                                         # STEP 19
stat0 = os0.lstat(path2)                                                # STEP 20
path3 += "/" + component1                                               # STEP 21
result = os0.path.isabs(path2)                                          # STEP 22
file0 = opener0(path2)                                                  # STEP 23
os0.link(path2,path2)                                                   # STEP 24
result = os0.read(fd0,bytes4)                                           # STEP 25
path3 += "/" + component2                                               # STEP 26
result = os0.read(fd0,bytes4)                                           # STEP 27
os0.mkdir(path3)                                                        # STEP 28
path2 = "/Volumes/ramdisk/test"                                         # STEP 29
os0.symlink(path3,path3)                                                # STEP 30
os0.rmdir(path3)                                                        # STEP 31
result = os0.path.isabs(path3)                                          # STEP 32
stat2 = os0.fstat(fd0)                                                  # STEP 33
file0 = opener0(path3)                                                  # STEP 34
result = os0.path.isabs(path3)                                          # STEP 35
path2 += "/" + component3                                               # STEP 36
result = os0.path.isabs(path2)                                          # STEP 37
str1 += 'p'                                                             # STEP 38
result = os0.path.isabs(path3)                                          # STEP 39
component0 = "lambda"                                                   # STEP 40
bytes4 += 1                                                             # STEP 41
stat4 = os0.stat(path3)                                                 # STEP 42
result = stat2.st_size                                                  # STEP 43
result = os0.path.dirname(path2)                                        # STEP 44
os0.close(fd0)                                                          # STEP 45
file0 = opener0(path3)                                                  # STEP 46
str2 += " "                                                             # STEP 47
result = os0.path.dirname(path3)                                        # STEP 48
stat4 = os0.lstat(path2)                                                # STEP 49
result = os0.path.dirname(path3)                                        # STEP 50
result = os0.path.isabs(path3)                                          # STEP 51
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 52
stat1 = os0.fstat(fd0)                                                  # STEP 53
os0.close(fd0)                                                          # STEP 54
result = os0.path.lexists(path2)                                        # STEP 55
result = os0.path.isfile(path3)                                         # STEP 56
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 57
result = stat2.st_nlink                                                 # STEP 58
os0.close(fd0)                                                          # STEP 59
result = sorted(os0.listdir(path3))                                     # STEP 60
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 61
file0 = opener0(path3)                                                  # STEP 62
bytes4 += 1                                                             # STEP 63
stat4 = os0.lstat(path3)                                                # STEP 64
file0 = opener0(path2,'w')                                              # STEP 65
os0.makedirs(path3)                                                     # STEP 66
file0.next()                                                            # STEP 67
os0.makedirs(path3)                                                     # STEP 68
bytes0 = 0                                                              # STEP 69
result = file0.readline(bytes0)                                         # STEP 70
result = os0.readlink(path3)                                            # STEP 71
file0.write(str1)                                                       # STEP 72
result = os0.path.isdir(path2)                                          # STEP 73
os0.write(fd0,str1)                                                     # STEP 74
result = sorted(os0.listdir(path2))                                     # STEP 75
str2 += 'j'                                                             # STEP 76
result = os0.path.islink(path3)                                         # STEP 77
bytes4 += 1                                                             # STEP 78
result = os0.path.isdir(path2)                                          # STEP 79
result = file0.read()                                                   # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105544368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 5
bytes0 = 0                                                               # STEP 0
bytes0 += 1                                                              # STEP 1
bytes0 += 1                                                              # STEP 2
bytes0 += 1                                                              # STEP 3
bytes1 = 0                                                               # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes4 = 0                                                               # STEP 6
component1 = "e"                                                         # STEP 7
bytes1 += 1                                                              # STEP 8
bytes1 += 1                                                              # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
str0 = ""                                                               # STEP 11
component4 = "a"                                                        # STEP 12
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
result = os0.path.isfile(path4)                                         # STEP 14
str1 = ""                                                               # STEP 15
result = sorted(os0.listdir(path4))                                     # STEP 16
os0.mkdir(path4)                                                        # STEP 17
result = os0.readlink(path4)                                            # STEP 18
result = sorted(os0.listdir(path4))                                     # STEP 19
bytes0 = 0                                                              # STEP 20
result = os0.path.lexists(path4)                                        # STEP 21
result = os0.path.exists(path4)                                         # STEP 22
os0.symlink(path4,path4)                                                # STEP 23
str4 = ""                                                               # STEP 24
result = os0.readlink(path4)                                            # STEP 25
file0 = opener0(path4,'r')                                              # STEP 26
component0 = "c"                                                        # STEP 27
result = os0.path.isfile(path4)                                         # STEP 28
result = os0.readlink(path4)                                            # STEP 29
result = os0.path.islink(path4)                                         # STEP 30
os0.symlink(path4,path4)                                                # STEP 31
result = os0.readlink(path4)                                            # STEP 32
bytes0 += 1                                                             # STEP 33
component2 = "f"                                                        # STEP 34
os0.link(path4,path4)                                                   # STEP 35
os0.symlink(path4,path4)                                                # STEP 36
path4 += "/" + component1                                               # STEP 37
result = os0.path.dirname(path4)                                        # STEP 38
result = os0.path.abspath(path4)                                        # STEP 39
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
os0.link(path4,path4)                                                   # STEP 41
result = os0.path.exists(path4)                                         # STEP 42
result = os0.path.isfile(path4)                                         # STEP 43
result = os0.path.isabs(path4)                                          # STEP 44
os0.rmdir(path4)                                                        # STEP 45
result = os0.path.dirname(path4)                                        # STEP 46
os0.close(fd0)                                                          # STEP 47
path2 = "/Volumes/ramdisk/test"                                         # STEP 48
result = sorted(os0.listdir(path4))                                     # STEP 49
result = os0.path.dirname(path2)                                        # STEP 50
file0 = opener0(path4,'r')                                              # STEP 51
os0.remove(path2)                                                       # STEP 52
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 53
result = os0.read(fd0,bytes0)                                           # STEP 54
result = file0.readline()                                               # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
result = os0.path.abspath(path2)                                        # STEP 57
result = file0.read(bytes0)                                             # STEP 58
os0.remove(path4)                                                       # STEP 59
os0.mkdir(path2)                                                        # STEP 60
result = os0.path.isabs(path2)                                          # STEP 61
result = os0.readlink(path2)                                            # STEP 62
stat0 = os0.stat(path4)                                                 # STEP 63
result = os0.path.lexists(path2)                                        # STEP 64
result = file0.read(bytes4)                                             # STEP 65
os0.link(path2,path4)                                                   # STEP 66
file0.next()                                                            # STEP 67
result = os0.path.isabs(path4)                                          # STEP 68
file0.seek(bytes1)                                                      # STEP 69
str4 += " "                                                             # STEP 70
result = os0.path.islink(path4)                                         # STEP 71
file0.truncate()                                                        # STEP 72
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x104595bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
result = os0.path.dirname(path1)                                         # STEP 2
result = sorted(os0.listdir(path1))                                      # STEP 3
bytes1 = 0                                                               # STEP 4
os0.remove(path1)                                                        # STEP 5
result = os0.path.exists(path1)                                          # STEP 6
os0.makedirs(path1)                                                      # STEP 7
bytes0 = 0                                                               # STEP 8
result = os0.path.isfile(path1)                                          # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
os0.link(path1,path4)                                                   # STEP 11
result = os0.path.abspath(path4)                                        # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
result = os0.path.isfile(path1)                                         # STEP 14
component1 = "delta"                                                    # STEP 15
path1 += "/" + component1                                               # STEP 16
bytes1 += 1                                                             # STEP 17
result = os0.path.isdir(path1)                                          # STEP 18
os0.rename(path1,path4)                                                 # STEP 19
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 20
os0.mkdir(path4)                                                        # STEP 21
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 22
result = os0.path.abspath(path4)                                        # STEP 23
os0.rmdir(path1)                                                        # STEP 24
os0.rename(path1,path4)                                                 # STEP 25
os0.rename(path1,path4)                                                 # STEP 26
os0.rename(path1,path4)                                                 # STEP 27
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 28
os0.close(fd0)                                                          # STEP 29
result = os0.path.exists(path4)                                         # STEP 30
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 31
str3 = ""                                                               # STEP 32
result = os0.path.islink(path1)                                         # STEP 33
os0.write(fd0,str3)                                                     # STEP 34
os0.close(fd0)                                                          # STEP 35
str3 += 'w'                                                             # STEP 36
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 37
bytes1 += 1                                                             # STEP 38
str3 += " "                                                             # STEP 39
os0.makedirs(path4)                                                     # STEP 40
result = os0.readlink(path1)                                            # STEP 41
bytes1 += 1                                                             # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
result = os0.path.isfile(path4)                                         # STEP 44
os0.close(fd0)                                                          # STEP 45
file0 = opener0(path1,'w')                                              # STEP 46
path1 = "/Volumes/ramdisk/test"                                         # STEP 47
file0.seek(bytes0)                                                      # STEP 48
file0.seek(bytes1)                                                      # STEP 49
result = os0.path.islink(path1)                                         # STEP 50
str3 += " "                                                             # STEP 51
os0.makedirs(path1)                                                     # STEP 52
path4 += "/" + component1                                               # STEP 53
stat1 = os0.stat(path4)                                                 # STEP 54
result = os0.path.exists(path4)                                         # STEP 55
result = os0.path.exists(path4)                                         # STEP 56
result = stat1.st_nlink                                                 # STEP 57
file0.flush()                                                           # STEP 58
result = os0.readlink(path4)                                            # STEP 59
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 60
result = os0.path.isabs(path4)                                          # STEP 61
result = file0.readline()                                               # STEP 62
result = file0.readline()                                               # STEP 63
result = os0.path.lexists(path1)                                        # STEP 64
result = os0.read(fd0,bytes0)                                           # STEP 65
result = os0.path.exists(path4)                                         # STEP 66
result = file0.readline()                                               # STEP 67
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10278c368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 7
os0 = newFakeOS()                                                        # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
str4 = ""                                                                # STEP 3
result = os0.path.lexists(path0)                                         # STEP 4
result = os0.path.isfile(path1)                                          # STEP 5
result = os0.path.exists(path1)                                          # STEP 6
result = sorted(os0.listdir(path1))                                      # STEP 7
result = os0.path.isabs(path1)                                           # STEP 8
result = os0.path.isabs(path0)                                           # STEP 9
result = os0.path.isdir(path1)                                          # STEP 10
result = os0.path.exists(path0)                                         # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
str4 += " "                                                             # STEP 13
str4 += 'k'                                                             # STEP 14
str4 += " "                                                             # STEP 15
str4 += " "                                                             # STEP 16
os0.symlink(path0,path1)                                                # STEP 17
file0 = opener0(path1)                                                  # STEP 18
str4 += 'f'                                                             # STEP 19
str3 = ""                                                               # STEP 20
os0.makedirs(path0)                                                     # STEP 21
file0 = opener0(path1,'a')                                              # STEP 22
result = os0.path.abspath(path1)                                        # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
component2 = "e"                                                        # STEP 25
bytes1 = 0                                                              # STEP 26
result = sorted(os0.listdir(path1))                                     # STEP 27
file0 = opener0(path0,'a')                                              # STEP 28
path1 += "/" + component2                                               # STEP 29
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 30
file0 = opener0(path1,'r')                                              # STEP 31
result = file0.readlines()                                              # STEP 32
os0.rename(path1,path0)                                                 # STEP 33
result = os0.path.abspath(path0)                                        # STEP 34
str3 += " "                                                             # STEP 35
result = os0.path.isabs(path1)                                          # STEP 36
str1 = ""                                                               # STEP 37
result = os0.path.isfile(path1)                                         # STEP 38
result = os0.readlink(path1)                                            # STEP 39
file0.seek(bytes1)                                                      # STEP 40
os0.path.getsize(path1)                                                 # STEP 41
result = os0.readlink(path1)                                            # STEP 42
os0.link(path1,path1)                                                   # STEP 43
result = os0.path.lexists(path0)                                        # STEP 44
result = file0.readlines()                                              # STEP 45
file0.write(str1)                                                       # STEP 46
bytes1 += 1                                                             # STEP 47
path0 += "/" + component2                                               # STEP 48
os0.remove(path0)                                                       # STEP 49
os0.write(fd0,str3)                                                     # STEP 50
os0.path.getsize(path0)                                                 # STEP 51
result = os0.path.dirname(path1)                                        # STEP 52
file0.flush()                                                           # STEP 53
os0.rmdir(path1)                                                        # STEP 54
result = os0.path.abspath(path1)                                        # STEP 55
os0.remove(path1)                                                       # STEP 56
result = file0.read(bytes1)                                             # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x1039f9098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28441, in act565
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 8
str0 = ""                                                                # STEP 0
str4 = ""                                                                # STEP 1
str4 += " "                                                              # STEP 2
str4 += " "                                                              # STEP 3
bytes4 = 0                                                               # STEP 4
bytes1 = 0                                                               # STEP 5
component1 = "delta"                                                     # STEP 6
os0 = newFakeOS()                                                        # STEP 7
str0 += 'b'                                                              # STEP 8
bytes3 = 0                                                               # STEP 9
bytes3 += 1                                                             # STEP 10
str0 = ""                                                               # STEP 11
bytes0 = 0                                                              # STEP 12
str1 = ""                                                               # STEP 13
path2 = "/Volumes/ramdisk/test"                                         # STEP 14
result = os0.path.dirname(path2)                                        # STEP 15
bytes0 += 1                                                             # STEP 16
result = os0.readlink(path2)                                            # STEP 17
path2 += "/" + component1                                               # STEP 18
os0.mkdir(path2)                                                        # STEP 19
result = os0.path.isabs(path2)                                          # STEP 20
result = os0.readlink(path2)                                            # STEP 21
bytes1 += 1                                                             # STEP 22
result = os0.path.islink(path2)                                         # STEP 23
os0.link(path2,path2)                                                   # STEP 24
os0.mkdir(path2)                                                        # STEP 25
os0.remove(path2)                                                       # STEP 26
os0.symlink(path2,path2)                                                # STEP 27
os0.mkdir(path2)                                                        # STEP 28
result = os0.path.dirname(path2)                                        # STEP 29
result = os0.path.isdir(path2)                                          # STEP 30
opener0 = newFakeOpener(os0)                                            # STEP 31
str4 += 'w'                                                             # STEP 32
bytes1 += 1                                                             # STEP 33
os0.remove(path2)                                                       # STEP 34
os0.symlink(path2,path2)                                                # STEP 35
file0 = opener0(path2,'r')                                              # STEP 36
os0.link(path2,path2)                                                   # STEP 37
result = os0.path.isfile(path2)                                         # STEP 38
path2 += "/" + component1                                               # STEP 39
file0 = opener0(path2,'w')                                              # STEP 40
stat2 = os0.lstat(path2)                                                # STEP 41
result = os0.path.dirname(path2)                                        # STEP 42
os0.symlink(path2,path2)                                                # STEP 43
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 44
os0.path.getsize(path2)                                                 # STEP 45
os0.makedirs(path2)                                                     # STEP 46
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 47
result = stat2.st_nlink                                                 # STEP 48
result = os0.path.exists(path2)                                         # STEP 49
str0 += " "                                                             # STEP 50
result = file0.readline()                                               # STEP 51
path2 += "/" + component1                                               # STEP 52
result = file0.readlines()                                              # STEP 53
result = os0.path.isdir(path2)                                          # STEP 54
result = file0.read()                                                   # STEP 55
result = os0.path.isdir(path2)                                          # STEP 56
result = os0.read(fd0,bytes4)                                           # STEP 57
os0.path.getsize(path2)                                                 # STEP 58
result = file0.read()                                                   # STEP 59
result = stat2.st_size                                                  # STEP 60
os0.symlink(path2,path2)                                                # STEP 61
os0.link(path2,path2)                                                   # STEP 62
os0.write(fd0,str0)                                                     # STEP 63
os0.mkdir(path2)                                                        # STEP 64
file0.seek(bytes4)                                                      # STEP 65
os0.mkdir(path2)                                                        # STEP 66
os0.path.getsize(path2)                                                 # STEP 67
stat2 = os0.stat(path2)                                                 # STEP 68
stat4 = os0.lstat(path2)                                                # STEP 69
file0.truncate()                                                        # STEP 70
os0.makedirs(path2)                                                     # STEP 71
result = os0.path.lexists(path2)                                        # STEP 72
stat1 = os0.fstat(fd0)                                                  # STEP 73
result = os0.read(fd0,bytes3)                                           # STEP 74
result = os0.readlink(path2)                                            # STEP 75
result = os0.read(fd0,bytes1)                                           # STEP 76
result = stat1.st_nlink                                                 # STEP 77
result = os0.readlink(path2)                                            # STEP 78
result = os0.path.isabs(path2)                                          # STEP 79
result = stat1.st_nlink                                                 # STEP 80
os0.makedirs(path2)                                                     # STEP 81
result = stat1.st_size                                                  # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x106ba7488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 9
component2 = "beta"                                                      # STEP 0
str3 = ""                                                                # STEP 1
str4 = ""                                                                # STEP 2
str4 += " "                                                              # STEP 3
str3 += 'v'                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes3 = 0                                                               # STEP 6
str3 = ""                                                                # STEP 7
bytes3 += 1                                                              # STEP 8
str4 += " "                                                              # STEP 9
str3 += 'b'                                                             # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.isdir(path4)                                          # STEP 12
os0.symlink(path4,path4)                                                # STEP 13
os0.remove(path4)                                                       # STEP 14
os0.link(path4,path4)                                                   # STEP 15
str1 = ""                                                               # STEP 16
result = os0.path.isabs(path4)                                          # STEP 17
bytes3 += 1                                                             # STEP 18
result = os0.path.isdir(path4)                                          # STEP 19
result = os0.path.isfile(path4)                                         # STEP 20
os0.remove(path4)                                                       # STEP 21
bytes3 += 1                                                             # STEP 22
result = os0.path.dirname(path4)                                        # STEP 23
os0.link(path4,path4)                                                   # STEP 24
result = os0.path.exists(path4)                                         # STEP 25
result = os0.path.lexists(path4)                                        # STEP 26
path4 += "/" + component2                                               # STEP 27
os0.mkdir(path4)                                                        # STEP 28
result = os0.path.isfile(path4)                                         # STEP 29
os0.mkdir(path4)                                                        # STEP 30
result = os0.path.exists(path4)                                         # STEP 31
result = os0.path.dirname(path4)                                        # STEP 32
result = os0.path.dirname(path4)                                        # STEP 33
result = sorted(os0.listdir(path4))                                     # STEP 34
result = os0.path.exists(path4)                                         # STEP 35
str0 = ""                                                               # STEP 36
result = os0.path.isdir(path4)                                          # STEP 37
os0.link(path4,path4)                                                   # STEP 38
result = os0.path.isabs(path4)                                          # STEP 39
result = os0.path.abspath(path4)                                        # STEP 40
str0 += 'q'                                                             # STEP 41
str4 += 'd'                                                             # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
bytes2 = 0                                                              # STEP 44
result = os0.path.lexists(path4)                                        # STEP 45
result = os0.readlink(path4)                                            # STEP 46
path4 += "/" + component2                                               # STEP 47
file0 = opener0(path4,'a')                                              # STEP 48
result = os0.path.abspath(path4)                                        # STEP 49
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 50
result = file0.readlines()                                              # STEP 51
bytes1 = 0                                                              # STEP 52
result = file0.readline()                                               # STEP 53
file0.write(str3)                                                       # STEP 54
os0.symlink(path4,path4)                                                # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
stat2 = os0.lstat(path4)                                                # STEP 57
result = os0.path.isdir(path4)                                          # STEP 58
os0.link(path4,path4)                                                   # STEP 59
stat0 = os0.lstat(path4)                                                # STEP 60
result = file0.read(bytes1)                                             # STEP 61
result = file0.read()                                                   # STEP 62
result = file0.read()                                                   # STEP 63
result = os0.path.abspath(path4)                                        # STEP 64
result = os0.path.lexists(path4)                                        # STEP 65
path4 = "/Volumes/ramdisk/test"                                         # STEP 66
result = os0.readlink(path4)                                            # STEP 67
os0.makedirs(path4)                                                     # STEP 68
str3 += 'c'                                                             # STEP 69
os0.link(path4,path4)                                                   # STEP 70
bytes3 = 0                                                              # STEP 71
path4 += "/" + component2                                               # STEP 72
result = file0.read(bytes3)                                             # STEP 73
os0.remove(path4)                                                       # STEP 74
stat4 = os0.stat(path4)                                                 # STEP 75
file0.next()                                                            # STEP 76
result = os0.path.dirname(path4)                                        # STEP 77
result = stat0.st_size                                                  # STEP 78
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x1043ccd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1186 BRANCHES COVERED
910 STATEMENTS COVERED
