Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5311.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (fizby) == () ',), <traceback object at 0x10a4dbc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 93 steps

SAVING TEST AS failure.5311.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "e"                                                         # STEP 0
component1 = "lambda"                                                    # STEP 1
component2 = "alpha"                                                     # STEP 2
component4 = "g"                                                         # STEP 3
component0 = "b"                                                         # STEP 4
str1 = ""                                                                # STEP 5
str1 += 'j'                                                              # STEP 6
os0 = newFakeOS()                                                        # STEP 7
bytes4 = 0                                                               # STEP 8
str1 += 'a'                                                              # STEP 9
str1 += 'b'                                                             # STEP 10
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
str1 += 'k'                                                             # STEP 12
str1 += 'y'                                                             # STEP 13
str1 += 'i'                                                             # STEP 14
str1 += 'b'                                                             # STEP 15
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
str1 += 'n'                                                             # STEP 17
str1 += 'x'                                                             # STEP 18
path3 += "/" + component3                                               # STEP 19
os0.remove(path3)                                                       # STEP 20
stat4 = os0.lstat(path3)                                                # STEP 21
str1 += 'd'                                                             # STEP 22
str3 = ""                                                               # STEP 23
str1 += 'c'                                                             # STEP 24
result = os0.path.dirname(path0)                                        # STEP 25
result = os0.path.lexists(path0)                                        # STEP 26
stat4 = os0.stat(path3)                                                 # STEP 27
os0.rmdir(path3)                                                        # STEP 28
os0.remove(path0)                                                       # STEP 29
str3 += 'f'                                                             # STEP 30
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 31
str1 += " "                                                             # STEP 32
os0.link(path3,path0)                                                   # STEP 33
result = os0.path.dirname(path0)                                        # STEP 34
str3 += 'i'                                                             # STEP 35
result = os0.path.islink(path3)                                         # STEP 36
bytes1 = 0                                                              # STEP 37
component3 = "c"                                                        # STEP 38
str1 += 'u'                                                             # STEP 39
opener0 = newFakeOpener(os0)                                            # STEP 40
str3 += 'z'                                                             # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
file0 = opener0(path3,'r')                                              # STEP 43
os0.rmdir(path3)                                                        # STEP 44
stat1 = os0.fstat(fd0)                                                  # STEP 45
str3 += 'b'                                                             # STEP 46
bytes0 = 0                                                              # STEP 47
str3 += 'y'                                                             # STEP 48
str1 += 'b'                                                             # STEP 49
stat2 = os0.lstat(path3)                                                # STEP 50
path3 += "/" + component4                                               # STEP 51
result = os0.read(fd0,bytes0)                                           # STEP 52
result = os0.path.isdir(path0)                                          # STEP 53
os0.makedirs(path0)                                                     # STEP 54
os0.remove(path0)                                                       # STEP 55
os0.link(path3,path3)                                                   # STEP 56
os0.symlink(path0,path3)                                                # STEP 57
result = file0.readlines()                                              # STEP 58
result = os0.path.abspath(path0)                                        # STEP 59
component4 = "f"                                                        # STEP 60
os0.write(fd0,str3)                                                     # STEP 61
file0.next()                                                            # STEP 62
str3 += 'd'                                                             # STEP 63
result = stat1.st_size                                                  # STEP 64
file0.write(str1)                                                       # STEP 65
result = sorted(os0.listdir(path0))                                     # STEP 66
bytes4 += 1                                                             # STEP 67
path0 += "/" + component0                                               # STEP 68
os0.mkdir(path0)                                                        # STEP 69
file0.write(str3)                                                       # STEP 70
stat1 = os0.fstat(fd0)                                                  # STEP 71
path1 = "/Volumes/ramdisk/test"                                         # STEP 72
str3 += 'b'                                                             # STEP 73
os0.close(fd0)                                                          # STEP 74
str1 += 'c'                                                             # STEP 75
str3 += 'v'                                                             # STEP 76
str3 += 'i'                                                             # STEP 77
stat3 = os0.fstat(fd0)                                                  # STEP 78
result = os0.path.isdir(path3)                                          # STEP 79
path1 += "/" + component1                                               # STEP 80
stat0 = os0.lstat(path1)                                                # STEP 81
os0.link(path1,path0)                                                   # STEP 82
os0.path.getsize(path3)                                                 # STEP 83
component0 = "c"                                                        # STEP 84
os0.link(path3,path3)                                                   # STEP 85
str1 += 'w'                                                             # STEP 86
stat3 = os0.stat(path0)                                                 # STEP 87
str3 += 'h'                                                             # STEP 88
str1 += 'l'                                                             # STEP 89
str1 += " "                                                             # STEP 90
str1 += 'l'                                                             # STEP 91
result = file0.readline()                                               # STEP 92
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (fizby) == () ',), <traceback object at 0x1063797a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #451 STEP #43 (0:00:30.000589) Sat Jul 22 05:09:04 2017 [ 891 stmts 1154 branches ] 45036 TOTAL ACTIONS (1501.1705204/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 84
STOPPING TESTING DUE TO TIMEOUT
42.2891118543 PERCENT COVERED
60.327573061 TOTAL RUNTIME
871 EXECUTED
87077 TOTAL TEST OPERATIONS
52.5852897167 TIME SPENT EXECUTING TEST OPERATIONS
4.09838891029 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.051878452301 TIME SPENT CHECKING PROPERTIES
52.637168169 TOTAL TIME SPENT RUNNING SUT
2.55860710144 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "e"                                                         # STEP 0
component1 = "lambda"                                                    # STEP 1
component2 = "alpha"                                                     # STEP 2
component4 = "g"                                                         # STEP 3
component0 = "b"                                                         # STEP 4
str1 = ""                                                                # STEP 5
str1 += 'j'                                                              # STEP 6
os0 = newFakeOS()                                                        # STEP 7
bytes4 = 0                                                               # STEP 8
str1 += 'a'                                                              # STEP 9
str1 += 'b'                                                             # STEP 10
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
str1 += 'k'                                                             # STEP 12
str1 += 'y'                                                             # STEP 13
str1 += 'i'                                                             # STEP 14
str1 += 'b'                                                             # STEP 15
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
str1 += 'n'                                                             # STEP 17
str1 += 'x'                                                             # STEP 18
path3 += "/" + component3                                               # STEP 19
os0.remove(path3)                                                       # STEP 20
stat4 = os0.lstat(path3)                                                # STEP 21
str1 += 'd'                                                             # STEP 22
str3 = ""                                                               # STEP 23
str1 += 'c'                                                             # STEP 24
result = os0.path.dirname(path0)                                        # STEP 25
result = os0.path.lexists(path0)                                        # STEP 26
stat4 = os0.stat(path3)                                                 # STEP 27
os0.rmdir(path3)                                                        # STEP 28
os0.remove(path0)                                                       # STEP 29
str3 += 'f'                                                             # STEP 30
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 31
str1 += " "                                                             # STEP 32
os0.link(path3,path0)                                                   # STEP 33
result = os0.path.dirname(path0)                                        # STEP 34
str3 += 'i'                                                             # STEP 35
result = os0.path.islink(path3)                                         # STEP 36
bytes1 = 0                                                              # STEP 37
component3 = "c"                                                        # STEP 38
str1 += 'u'                                                             # STEP 39
opener0 = newFakeOpener(os0)                                            # STEP 40
str3 += 'z'                                                             # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
file0 = opener0(path3,'r')                                              # STEP 43
os0.rmdir(path3)                                                        # STEP 44
stat1 = os0.fstat(fd0)                                                  # STEP 45
str3 += 'b'                                                             # STEP 46
bytes0 = 0                                                              # STEP 47
str3 += 'y'                                                             # STEP 48
str1 += 'b'                                                             # STEP 49
stat2 = os0.lstat(path3)                                                # STEP 50
path3 += "/" + component4                                               # STEP 51
result = os0.read(fd0,bytes0)                                           # STEP 52
result = os0.path.isdir(path0)                                          # STEP 53
os0.makedirs(path0)                                                     # STEP 54
os0.remove(path0)                                                       # STEP 55
os0.link(path3,path3)                                                   # STEP 56
os0.symlink(path0,path3)                                                # STEP 57
result = file0.readlines()                                              # STEP 58
result = os0.path.abspath(path0)                                        # STEP 59
component4 = "f"                                                        # STEP 60
os0.write(fd0,str3)                                                     # STEP 61
file0.next()                                                            # STEP 62
str3 += 'd'                                                             # STEP 63
result = stat1.st_size                                                  # STEP 64
file0.write(str1)                                                       # STEP 65
result = sorted(os0.listdir(path0))                                     # STEP 66
bytes4 += 1                                                             # STEP 67
path0 += "/" + component0                                               # STEP 68
os0.mkdir(path0)                                                        # STEP 69
file0.write(str3)                                                       # STEP 70
stat1 = os0.fstat(fd0)                                                  # STEP 71
path1 = "/Volumes/ramdisk/test"                                         # STEP 72
str3 += 'b'                                                             # STEP 73
os0.close(fd0)                                                          # STEP 74
str1 += 'c'                                                             # STEP 75
str3 += 'v'                                                             # STEP 76
str3 += 'i'                                                             # STEP 77
stat3 = os0.fstat(fd0)                                                  # STEP 78
result = os0.path.isdir(path3)                                          # STEP 79
path1 += "/" + component1                                               # STEP 80
stat0 = os0.lstat(path1)                                                # STEP 81
os0.link(path1,path0)                                                   # STEP 82
os0.path.getsize(path3)                                                 # STEP 83
component0 = "c"                                                        # STEP 84
os0.link(path3,path3)                                                   # STEP 85
str1 += 'w'                                                             # STEP 86
stat3 = os0.stat(path0)                                                 # STEP 87
str3 += 'h'                                                             # STEP 88
str1 += 'l'                                                             # STEP 89
str1 += " "                                                             # STEP 90
str1 += 'l'                                                             # STEP 91
result = file0.readline()                                               # STEP 92
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (fizby) == () ',), <traceback object at 0x1063797a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1174 BRANCHES COVERED
903 STATEMENTS COVERED
