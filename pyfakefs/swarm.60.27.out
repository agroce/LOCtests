Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4509.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a6c6e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 90 steps

SAVING TEST AS failure.4509.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "delta"                                                     # STEP 0
component0 = "e"                                                         # STEP 1
component4 = "c"                                                         # STEP 2
component3 = "a"                                                         # STEP 3
bytes3 = 0                                                               # STEP 4
component1 = "delta"                                                     # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
str4 = ""                                                                # STEP 7
bytes1 = 0                                                               # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
path3 += "/" + component2                                               # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
component2 = "b"                                                        # STEP 12
os0 = newFakeOS()                                                       # STEP 13
path4 += "/" + component3                                               # STEP 14
path0 += "/" + component4                                               # STEP 15
path4 += "/" + component4                                               # STEP 16
stat3 = os0.stat(path4)                                                 # STEP 17
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 18
stat0 = os0.lstat(path0)                                                # STEP 19
stat2 = os0.lstat(path3)                                                # STEP 20
result = os0.path.dirname(path0)                                        # STEP 21
stat4 = os0.lstat(path3)                                                # STEP 22
component3 = "lambda"                                                   # STEP 23
path0 += "/" + component3                                               # STEP 24
result = os0.path.lexists(path0)                                        # STEP 25
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 26
component3 = "d"                                                        # STEP 27
stat0 = os0.lstat(path4)                                                # STEP 28
stat3 = os0.lstat(path0)                                                # STEP 29
bytes4 = 0                                                              # STEP 30
bytes2 = 0                                                              # STEP 31
os0.rename(path4,path3)                                                 # STEP 32
component4 = "b"                                                        # STEP 33
os0.path.getsize(path3)                                                 # STEP 34
path3 += "/" + component0                                               # STEP 35
stat0 = os0.lstat(path0)                                                # STEP 36
component0 = "d"                                                        # STEP 37
stat4 = os0.lstat(path3)                                                # STEP 38
os0.makedirs(path4)                                                     # STEP 39
opener0 = newFakeOpener(os0)                                            # STEP 40
result = os0.readlink(path4)                                            # STEP 41
os0.rename(path3,path0)                                                 # STEP 42
os0.rename(path3,path0)                                                 # STEP 43
stat4 = os0.lstat(path3)                                                # STEP 44
stat0 = os0.stat(path4)                                                 # STEP 45
file0 = opener0(path0,'a')                                              # STEP 46
path3 += "/" + component3                                               # STEP 47
component3 = "gamma"                                                    # STEP 48
path0 += "/" + component2                                               # STEP 49
result = os0.path.dirname(path3)                                        # STEP 50
file0 = opener0(path3,'a')                                              # STEP 51
stat4 = os0.stat(path4)                                                 # STEP 52
stat1 = os0.stat(path0)                                                 # STEP 53
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
component2 = "b"                                                        # STEP 55
result = sorted(os0.listdir(path3))                                     # STEP 56
str0 = ""                                                               # STEP 57
stat3 = os0.stat(path4)                                                 # STEP 58
str2 = ""                                                               # STEP 59
os0.close(fd0)                                                          # STEP 60
path0 += "/" + component3                                               # STEP 61
stat1 = os0.stat(path0)                                                 # STEP 62
path4 = "/Volumes/ramdisk/test"                                         # STEP 63
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 64
os0.close(fd0)                                                          # STEP 65
result = os0.path.islink(path4)                                         # STEP 66
stat1 = os0.lstat(path3)                                                # STEP 67
path4 += "/" + component4                                               # STEP 68
os0.rename(path3,path0)                                                 # STEP 69
file0 = opener0(path4,'a')                                              # STEP 70
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 71
os0.write(fd0,str2)                                                     # STEP 72
component4 = "e"                                                        # STEP 73
path3 += "/" + component4                                               # STEP 74
component3 = "beta"                                                     # STEP 75
component4 = "beta"                                                     # STEP 76
result = os0.readlink(path3)                                            # STEP 77
stat2 = os0.lstat(path4)                                                # STEP 78
stat1 = os0.lstat(path0)                                                # STEP 79
os0.rename(path4,path0)                                                 # STEP 80
path0 += "/" + component4                                               # STEP 81
component4 = "beta"                                                     # STEP 82
os0.rename(path4,path0)                                                 # STEP 83
os0.remove(path0)                                                       # STEP 84
os0.remove(path0)                                                       # STEP 85
os0.rename(path0,path3)                                                 # STEP 86
result = os0.path.islink(path4)                                         # STEP 87
os0.rename(path3,path4)                                                 # STEP 88
result = file0.read()                                                   # STEP 89
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a4ab878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #371 STEP #73 (0:00:30.000181) Sat Jul 22 01:01:41 2017 [ 879 stmts 1145 branches ] 37063 TOTAL ACTIONS (1235.42588126/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 79
STOPPING TESTING DUE TO TIMEOUT
41.7316982534 PERCENT COVERED
60.3018460274 TOTAL RUNTIME
731 EXECUTED
73069 TOTAL TEST OPERATIONS
54.2016026974 TIME SPENT EXECUTING TEST OPERATIONS
2.27421855927 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.044421672821 TIME SPENT CHECKING PROPERTIES
54.2460243702 TOTAL TIME SPENT RUNNING SUT
2.1636121273 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "delta"                                                     # STEP 0
component0 = "e"                                                         # STEP 1
component4 = "c"                                                         # STEP 2
component3 = "a"                                                         # STEP 3
bytes3 = 0                                                               # STEP 4
component1 = "delta"                                                     # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
str4 = ""                                                                # STEP 7
bytes1 = 0                                                               # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
path3 += "/" + component2                                               # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
component2 = "b"                                                        # STEP 12
os0 = newFakeOS()                                                       # STEP 13
path4 += "/" + component3                                               # STEP 14
path0 += "/" + component4                                               # STEP 15
path4 += "/" + component4                                               # STEP 16
stat3 = os0.stat(path4)                                                 # STEP 17
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 18
stat0 = os0.lstat(path0)                                                # STEP 19
stat2 = os0.lstat(path3)                                                # STEP 20
result = os0.path.dirname(path0)                                        # STEP 21
stat4 = os0.lstat(path3)                                                # STEP 22
component3 = "lambda"                                                   # STEP 23
path0 += "/" + component3                                               # STEP 24
result = os0.path.lexists(path0)                                        # STEP 25
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 26
component3 = "d"                                                        # STEP 27
stat0 = os0.lstat(path4)                                                # STEP 28
stat3 = os0.lstat(path0)                                                # STEP 29
bytes4 = 0                                                              # STEP 30
bytes2 = 0                                                              # STEP 31
os0.rename(path4,path3)                                                 # STEP 32
component4 = "b"                                                        # STEP 33
os0.path.getsize(path3)                                                 # STEP 34
path3 += "/" + component0                                               # STEP 35
stat0 = os0.lstat(path0)                                                # STEP 36
component0 = "d"                                                        # STEP 37
stat4 = os0.lstat(path3)                                                # STEP 38
os0.makedirs(path4)                                                     # STEP 39
opener0 = newFakeOpener(os0)                                            # STEP 40
result = os0.readlink(path4)                                            # STEP 41
os0.rename(path3,path0)                                                 # STEP 42
os0.rename(path3,path0)                                                 # STEP 43
stat4 = os0.lstat(path3)                                                # STEP 44
stat0 = os0.stat(path4)                                                 # STEP 45
file0 = opener0(path0,'a')                                              # STEP 46
path3 += "/" + component3                                               # STEP 47
component3 = "gamma"                                                    # STEP 48
path0 += "/" + component2                                               # STEP 49
result = os0.path.dirname(path3)                                        # STEP 50
file0 = opener0(path3,'a')                                              # STEP 51
stat4 = os0.stat(path4)                                                 # STEP 52
stat1 = os0.stat(path0)                                                 # STEP 53
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
component2 = "b"                                                        # STEP 55
result = sorted(os0.listdir(path3))                                     # STEP 56
str0 = ""                                                               # STEP 57
stat3 = os0.stat(path4)                                                 # STEP 58
str2 = ""                                                               # STEP 59
os0.close(fd0)                                                          # STEP 60
path0 += "/" + component3                                               # STEP 61
stat1 = os0.stat(path0)                                                 # STEP 62
path4 = "/Volumes/ramdisk/test"                                         # STEP 63
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 64
os0.close(fd0)                                                          # STEP 65
result = os0.path.islink(path4)                                         # STEP 66
stat1 = os0.lstat(path3)                                                # STEP 67
path4 += "/" + component4                                               # STEP 68
os0.rename(path3,path0)                                                 # STEP 69
file0 = opener0(path4,'a')                                              # STEP 70
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 71
os0.write(fd0,str2)                                                     # STEP 72
component4 = "e"                                                        # STEP 73
path3 += "/" + component4                                               # STEP 74
component3 = "beta"                                                     # STEP 75
component4 = "beta"                                                     # STEP 76
result = os0.readlink(path3)                                            # STEP 77
stat2 = os0.lstat(path4)                                                # STEP 78
stat1 = os0.lstat(path0)                                                # STEP 79
os0.rename(path4,path0)                                                 # STEP 80
path0 += "/" + component4                                               # STEP 81
component4 = "beta"                                                     # STEP 82
os0.rename(path4,path0)                                                 # STEP 83
os0.remove(path0)                                                       # STEP 84
os0.remove(path0)                                                       # STEP 85
os0.rename(path0,path3)                                                 # STEP 86
result = os0.path.islink(path4)                                         # STEP 87
os0.rename(path3,path4)                                                 # STEP 88
result = file0.read()                                                   # STEP 89
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a4ab878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1167 BRANCHES COVERED
893 STATEMENTS COVERED
