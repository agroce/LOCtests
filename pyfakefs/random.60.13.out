Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4194.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109cd8d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 98 steps

SAVING TEST AS failure.4194.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "delta"                                                     # STEP 0
component0 = "epsilon"                                                   # STEP 1
component2 = "f"                                                         # STEP 2
component4 = "a"                                                         # STEP 3
component1 = "d"                                                         # STEP 4
bytes3 = 0                                                               # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
os0 = newFakeOS()                                                        # STEP 7
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
str2 = ""                                                                # STEP 9
result = os0.path.isabs(path3)                                          # STEP 10
result = os0.path.abspath(path3)                                        # STEP 11
bytes4 = 0                                                              # STEP 12
str2 += 'i'                                                             # STEP 13
result = os0.path.isabs(path1)                                          # STEP 14
str2 += 'o'                                                             # STEP 15
str2 += 'g'                                                             # STEP 16
str2 += 'm'                                                             # STEP 17
str2 += 'n'                                                             # STEP 18
path2 = "/Volumes/ramdisk/test"                                         # STEP 19
path3 += "/" + component0                                               # STEP 20
os0.remove(path2)                                                       # STEP 21
os0.symlink(path3,path1)                                                # STEP 22
os0.link(path3,path2)                                                   # STEP 23
os0.makedirs(path1)                                                     # STEP 24
os0.mkdir(path2)                                                        # STEP 25
stat4 = os0.lstat(path3)                                                # STEP 26
str2 += 'i'                                                             # STEP 27
os0.symlink(path1,path2)                                                # STEP 28
str2 += 'k'                                                             # STEP 29
result = os0.path.exists(path1)                                         # STEP 30
result = os0.path.islink(path2)                                         # STEP 31
str2 += 'e'                                                             # STEP 32
stat2 = os0.lstat(path3)                                                # STEP 33
path1 += "/" + component0                                               # STEP 34
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 35
os0.remove(path3)                                                       # STEP 36
os0.symlink(path2,path3)                                                # STEP 37
stat0 = os0.lstat(path3)                                                # STEP 38
os0.symlink(path2,path3)                                                # STEP 39
stat1 = os0.lstat(path1)                                                # STEP 40
result = os0.path.isabs(path3)                                          # STEP 41
path1 += "/" + component2                                               # STEP 42
str2 += 'n'                                                             # STEP 43
os0.link(path3,path3)                                                   # STEP 44
opener0 = newFakeOpener(os0)                                            # STEP 45
str2 += 'z'                                                             # STEP 46
os0.link(path3,path3)                                                   # STEP 47
os0.close(fd0)                                                          # STEP 48
bytes1 = 0                                                              # STEP 49
result = os0.path.lexists(path1)                                        # STEP 50
os0.remove(path1)                                                       # STEP 51
component2 = "d"                                                        # STEP 52
stat2 = os0.stat(path3)                                                 # STEP 53
file0 = opener0(path1)                                                  # STEP 54
path2 += "/" + component2                                               # STEP 55
os0.remove(path1)                                                       # STEP 56
result = os0.path.isfile(path3)                                         # STEP 57
str0 = ""                                                               # STEP 58
path4 = "/Volumes/ramdisk/test"                                         # STEP 59
result = os0.path.exists(path2)                                         # STEP 60
component2 = "omega"                                                    # STEP 61
file0 = opener0(path1,'w')                                              # STEP 62
file0.write(str2)                                                       # STEP 63
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 64
file0.seek(bytes4)                                                      # STEP 65
str2 += 'p'                                                             # STEP 66
result = stat0.st_nlink                                                 # STEP 67
str0 += 'v'                                                             # STEP 68
stat3 = os0.lstat(path2)                                                # STEP 69
os0.link(path3,path4)                                                   # STEP 70
str0 += 'm'                                                             # STEP 71
result = os0.path.isfile(path1)                                         # STEP 72
result = os0.path.lexists(path3)                                        # STEP 73
str0 += 'j'                                                             # STEP 74
path2 += "/" + component4                                               # STEP 75
os0.link(path1,path2)                                                   # STEP 76
os0.removedirs(path1)                                                   # STEP 77
os0.rename(path2,path1)                                                 # STEP 78
str0 += 'f'                                                             # STEP 79
str0 += 'l'                                                             # STEP 80
os0.makedirs(path3)                                                     # STEP 81
path4 += "/" + component4                                               # STEP 82
result = sorted(os0.listdir(path4))                                     # STEP 83
result = file0.read()                                                   # STEP 84
stat4 = os0.lstat(path3)                                                # STEP 85
stat3 = os0.lstat(path1)                                                # STEP 86
component4 = "alpha"                                                    # STEP 87
component0 = "h"                                                        # STEP 88
file0.seek(bytes4)                                                      # STEP 89
result = os0.path.abspath(path4)                                        # STEP 90
os0.write(fd0,str2)                                                     # STEP 91
str0 += 'h'                                                             # STEP 92
path1 += "/" + component1                                               # STEP 93
component1 = "c"                                                        # STEP 94
str2 += 'v'                                                             # STEP 95
result = os0.path.exists(path4)                                         # STEP 96
result = file0.read(bytes3)                                             # STEP 97
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105354f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #455 STEP #55 (0:00:30.000645) Fri Jul 21 23:29:12 2017 [ 900 stmts 1168 branches ] 45453 TOTAL ACTIONS (1515.06742998/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 63
STOPPING TESTING DUE TO TIMEOUT
42.6235600149 PERCENT COVERED
60.3113970757 TOTAL RUNTIME
903 EXECUTED
90261 TOTAL TEST OPERATIONS
52.3485887051 TIME SPENT EXECUTING TEST OPERATIONS
4.22642803192 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0531628131866 TIME SPENT CHECKING PROPERTIES
52.4017515182 TOTAL TIME SPENT RUNNING SUT
2.61771702766 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component3 = "delta"                                                     # STEP 0
component0 = "epsilon"                                                   # STEP 1
component2 = "f"                                                         # STEP 2
component4 = "a"                                                         # STEP 3
component1 = "d"                                                         # STEP 4
bytes3 = 0                                                               # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
os0 = newFakeOS()                                                        # STEP 7
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
str2 = ""                                                                # STEP 9
result = os0.path.isabs(path3)                                          # STEP 10
result = os0.path.abspath(path3)                                        # STEP 11
bytes4 = 0                                                              # STEP 12
str2 += 'i'                                                             # STEP 13
result = os0.path.isabs(path1)                                          # STEP 14
str2 += 'o'                                                             # STEP 15
str2 += 'g'                                                             # STEP 16
str2 += 'm'                                                             # STEP 17
str2 += 'n'                                                             # STEP 18
path2 = "/Volumes/ramdisk/test"                                         # STEP 19
path3 += "/" + component0                                               # STEP 20
os0.remove(path2)                                                       # STEP 21
os0.symlink(path3,path1)                                                # STEP 22
os0.link(path3,path2)                                                   # STEP 23
os0.makedirs(path1)                                                     # STEP 24
os0.mkdir(path2)                                                        # STEP 25
stat4 = os0.lstat(path3)                                                # STEP 26
str2 += 'i'                                                             # STEP 27
os0.symlink(path1,path2)                                                # STEP 28
str2 += 'k'                                                             # STEP 29
result = os0.path.exists(path1)                                         # STEP 30
result = os0.path.islink(path2)                                         # STEP 31
str2 += 'e'                                                             # STEP 32
stat2 = os0.lstat(path3)                                                # STEP 33
path1 += "/" + component0                                               # STEP 34
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 35
os0.remove(path3)                                                       # STEP 36
os0.symlink(path2,path3)                                                # STEP 37
stat0 = os0.lstat(path3)                                                # STEP 38
os0.symlink(path2,path3)                                                # STEP 39
stat1 = os0.lstat(path1)                                                # STEP 40
result = os0.path.isabs(path3)                                          # STEP 41
path1 += "/" + component2                                               # STEP 42
str2 += 'n'                                                             # STEP 43
os0.link(path3,path3)                                                   # STEP 44
opener0 = newFakeOpener(os0)                                            # STEP 45
str2 += 'z'                                                             # STEP 46
os0.link(path3,path3)                                                   # STEP 47
os0.close(fd0)                                                          # STEP 48
bytes1 = 0                                                              # STEP 49
result = os0.path.lexists(path1)                                        # STEP 50
os0.remove(path1)                                                       # STEP 51
component2 = "d"                                                        # STEP 52
stat2 = os0.stat(path3)                                                 # STEP 53
file0 = opener0(path1)                                                  # STEP 54
path2 += "/" + component2                                               # STEP 55
os0.remove(path1)                                                       # STEP 56
result = os0.path.isfile(path3)                                         # STEP 57
str0 = ""                                                               # STEP 58
path4 = "/Volumes/ramdisk/test"                                         # STEP 59
result = os0.path.exists(path2)                                         # STEP 60
component2 = "omega"                                                    # STEP 61
file0 = opener0(path1,'w')                                              # STEP 62
file0.write(str2)                                                       # STEP 63
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 64
file0.seek(bytes4)                                                      # STEP 65
str2 += 'p'                                                             # STEP 66
result = stat0.st_nlink                                                 # STEP 67
str0 += 'v'                                                             # STEP 68
stat3 = os0.lstat(path2)                                                # STEP 69
os0.link(path3,path4)                                                   # STEP 70
str0 += 'm'                                                             # STEP 71
result = os0.path.isfile(path1)                                         # STEP 72
result = os0.path.lexists(path3)                                        # STEP 73
str0 += 'j'                                                             # STEP 74
path2 += "/" + component4                                               # STEP 75
os0.link(path1,path2)                                                   # STEP 76
os0.removedirs(path1)                                                   # STEP 77
os0.rename(path2,path1)                                                 # STEP 78
str0 += 'f'                                                             # STEP 79
str0 += 'l'                                                             # STEP 80
os0.makedirs(path3)                                                     # STEP 81
path4 += "/" + component4                                               # STEP 82
result = sorted(os0.listdir(path4))                                     # STEP 83
result = file0.read()                                                   # STEP 84
stat4 = os0.lstat(path3)                                                # STEP 85
stat3 = os0.lstat(path1)                                                # STEP 86
component4 = "alpha"                                                    # STEP 87
component0 = "h"                                                        # STEP 88
file0.seek(bytes4)                                                      # STEP 89
result = os0.path.abspath(path4)                                        # STEP 90
os0.write(fd0,str2)                                                     # STEP 91
str0 += 'h'                                                             # STEP 92
path1 += "/" + component1                                               # STEP 93
component1 = "c"                                                        # STEP 94
str2 += 'v'                                                             # STEP 95
result = os0.path.exists(path4)                                         # STEP 96
result = file0.read(bytes3)                                             # STEP 97
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105354f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1180 BRANCHES COVERED
909 STATEMENTS COVERED
