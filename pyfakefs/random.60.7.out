Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4083.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107761e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 97 steps

SAVING TEST AS failure.4083.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component4 = "h"                                                         # STEP 1
component3 = "b"                                                         # STEP 2
component0 = "delta"                                                     # STEP 3
component2 = "omega"                                                     # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
component1 = "e"                                                         # STEP 6
result = os0.path.isfile(path3)                                          # STEP 7
result = os0.path.isabs(path3)                                           # STEP 8
path3 += "/" + component0                                                # STEP 9
component0 = "epsilon"                                                  # STEP 10
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.remove(path1)                                                       # STEP 12
os0.symlink(path1,path1)                                                # STEP 13
stat0 = os0.lstat(path3)                                                # STEP 14
stat2 = os0.lstat(path3)                                                # STEP 15
os0.link(path1,path1)                                                   # STEP 16
result = os0.path.exists(path1)                                         # STEP 17
str0 = ""                                                               # STEP 18
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 19
result = os0.path.exists(path1)                                         # STEP 20
str0 += 't'                                                             # STEP 21
result = os0.path.abspath(path1)                                        # STEP 22
str0 += 'q'                                                             # STEP 23
stat1 = os0.lstat(path3)                                                # STEP 24
bytes4 = 0                                                              # STEP 25
result = sorted(os0.listdir(path1))                                     # STEP 26
str0 += 'r'                                                             # STEP 27
str0 += 'a'                                                             # STEP 28
str0 += 'v'                                                             # STEP 29
result = os0.path.isabs(path1)                                          # STEP 30
result = os0.path.abspath(path1)                                        # STEP 31
str0 += 'n'                                                             # STEP 32
result = os0.path.isdir(path1)                                          # STEP 33
str0 += 'b'                                                             # STEP 34
bytes1 = 0                                                              # STEP 35
str0 += 'k'                                                             # STEP 36
os0.symlink(path3,path3)                                                # STEP 37
str0 += 'c'                                                             # STEP 38
os0.symlink(path3,path3)                                                # STEP 39
str0 += 'k'                                                             # STEP 40
str0 += 'm'                                                             # STEP 41
opener0 = newFakeOpener(os0)                                            # STEP 42
os0.symlink(path3,path3)                                                # STEP 43
result = os0.readlink(path3)                                            # STEP 44
os0.close(fd0)                                                          # STEP 45
str0 += 'b'                                                             # STEP 46
file0 = opener0(path1,'r')                                              # STEP 47
file0 = opener0(path3,'w')                                              # STEP 48
file0.truncate()                                                        # STEP 49
str0 += 'y'                                                             # STEP 50
path3 += "/" + component1                                               # STEP 51
bytes4 += 1                                                             # STEP 52
str0 += 'f'                                                             # STEP 53
bytes3 = 0                                                              # STEP 54
result = os0.path.islink(path1)                                         # STEP 55
str1 = ""                                                               # STEP 56
result = file0.readline(bytes4)                                         # STEP 57
result = stat1.st_nlink                                                 # STEP 58
result = os0.path.isabs(path3)                                          # STEP 59
component1 = "beta"                                                     # STEP 60
stat2 = os0.fstat(fd0)                                                  # STEP 61
str0 += 'x'                                                             # STEP 62
str1 += 't'                                                             # STEP 63
os0.remove(path1)                                                       # STEP 64
result = os0.readlink(path1)                                            # STEP 65
result = os0.path.islink(path1)                                         # STEP 66
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 67
stat4 = os0.lstat(path3)                                                # STEP 68
result = os0.path.abspath(path3)                                        # STEP 69
str0 += 'f'                                                             # STEP 70
os0.remove(path1)                                                       # STEP 71
os0.link(path1,path1)                                                   # STEP 72
result = os0.path.isdir(path1)                                          # STEP 73
str1 += 'm'                                                             # STEP 74
result = file0.read()                                                   # STEP 75
str0 += 'e'                                                             # STEP 76
str0 += 'b'                                                             # STEP 77
str1 += " "                                                             # STEP 78
str1 += 's'                                                             # STEP 79
result = os0.readlink(path3)                                            # STEP 80
path3 += "/" + component0                                               # STEP 81
component0 = "epsilon"                                                  # STEP 82
str1 += 'p'                                                             # STEP 83
result = os0.path.isfile(path1)                                         # STEP 84
os0.rmdir(path3)                                                        # STEP 85
str1 += 'j'                                                             # STEP 86
str0 += 'v'                                                             # STEP 87
str0 += 'r'                                                             # STEP 88
result = os0.readlink(path3)                                            # STEP 89
result = file0.read(bytes1)                                             # STEP 90
os0.write(fd0,str0)                                                     # STEP 91
str0 += 'c'                                                             # STEP 92
result = os0.path.lexists(path3)                                        # STEP 93
result = stat1.st_nlink                                                 # STEP 94
str0 += 'm'                                                             # STEP 95
result = file0.read(bytes4)                                             # STEP 96
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106e52e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #463 STEP #83 (0:00:30.001060) Fri Jul 21 22:50:03 2017 [ 894 stmts 1162 branches ] 46280 TOTAL ACTIONS (1542.61216057/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 28
STOPPING TESTING DUE TO TIMEOUT
42.2891118543 PERCENT COVERED
60.335652113 TOTAL RUNTIME
907 EXECUTED
90625 TOTAL TEST OPERATIONS
52.4139626026 TIME SPENT EXECUTING TEST OPERATIONS
4.16551470757 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0549411773682 TIME SPENT CHECKING PROPERTIES
52.46890378 TOTAL TIME SPENT RUNNING SUT
2.63066005707 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
os0 = newFakeOS()                                                        # STEP 0
component4 = "h"                                                         # STEP 1
component3 = "b"                                                         # STEP 2
component0 = "delta"                                                     # STEP 3
component2 = "omega"                                                     # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
component1 = "e"                                                         # STEP 6
result = os0.path.isfile(path3)                                          # STEP 7
result = os0.path.isabs(path3)                                           # STEP 8
path3 += "/" + component0                                                # STEP 9
component0 = "epsilon"                                                  # STEP 10
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
os0.remove(path1)                                                       # STEP 12
os0.symlink(path1,path1)                                                # STEP 13
stat0 = os0.lstat(path3)                                                # STEP 14
stat2 = os0.lstat(path3)                                                # STEP 15
os0.link(path1,path1)                                                   # STEP 16
result = os0.path.exists(path1)                                         # STEP 17
str0 = ""                                                               # STEP 18
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 19
result = os0.path.exists(path1)                                         # STEP 20
str0 += 't'                                                             # STEP 21
result = os0.path.abspath(path1)                                        # STEP 22
str0 += 'q'                                                             # STEP 23
stat1 = os0.lstat(path3)                                                # STEP 24
bytes4 = 0                                                              # STEP 25
result = sorted(os0.listdir(path1))                                     # STEP 26
str0 += 'r'                                                             # STEP 27
str0 += 'a'                                                             # STEP 28
str0 += 'v'                                                             # STEP 29
result = os0.path.isabs(path1)                                          # STEP 30
result = os0.path.abspath(path1)                                        # STEP 31
str0 += 'n'                                                             # STEP 32
result = os0.path.isdir(path1)                                          # STEP 33
str0 += 'b'                                                             # STEP 34
bytes1 = 0                                                              # STEP 35
str0 += 'k'                                                             # STEP 36
os0.symlink(path3,path3)                                                # STEP 37
str0 += 'c'                                                             # STEP 38
os0.symlink(path3,path3)                                                # STEP 39
str0 += 'k'                                                             # STEP 40
str0 += 'm'                                                             # STEP 41
opener0 = newFakeOpener(os0)                                            # STEP 42
os0.symlink(path3,path3)                                                # STEP 43
result = os0.readlink(path3)                                            # STEP 44
os0.close(fd0)                                                          # STEP 45
str0 += 'b'                                                             # STEP 46
file0 = opener0(path1,'r')                                              # STEP 47
file0 = opener0(path3,'w')                                              # STEP 48
file0.truncate()                                                        # STEP 49
str0 += 'y'                                                             # STEP 50
path3 += "/" + component1                                               # STEP 51
bytes4 += 1                                                             # STEP 52
str0 += 'f'                                                             # STEP 53
bytes3 = 0                                                              # STEP 54
result = os0.path.islink(path1)                                         # STEP 55
str1 = ""                                                               # STEP 56
result = file0.readline(bytes4)                                         # STEP 57
result = stat1.st_nlink                                                 # STEP 58
result = os0.path.isabs(path3)                                          # STEP 59
component1 = "beta"                                                     # STEP 60
stat2 = os0.fstat(fd0)                                                  # STEP 61
str0 += 'x'                                                             # STEP 62
str1 += 't'                                                             # STEP 63
os0.remove(path1)                                                       # STEP 64
result = os0.readlink(path1)                                            # STEP 65
result = os0.path.islink(path1)                                         # STEP 66
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 67
stat4 = os0.lstat(path3)                                                # STEP 68
result = os0.path.abspath(path3)                                        # STEP 69
str0 += 'f'                                                             # STEP 70
os0.remove(path1)                                                       # STEP 71
os0.link(path1,path1)                                                   # STEP 72
result = os0.path.isdir(path1)                                          # STEP 73
str1 += 'm'                                                             # STEP 74
result = file0.read()                                                   # STEP 75
str0 += 'e'                                                             # STEP 76
str0 += 'b'                                                             # STEP 77
str1 += " "                                                             # STEP 78
str1 += 's'                                                             # STEP 79
result = os0.readlink(path3)                                            # STEP 80
path3 += "/" + component0                                               # STEP 81
component0 = "epsilon"                                                  # STEP 82
str1 += 'p'                                                             # STEP 83
result = os0.path.isfile(path1)                                         # STEP 84
os0.rmdir(path3)                                                        # STEP 85
str1 += 'j'                                                             # STEP 86
str0 += 'v'                                                             # STEP 87
str0 += 'r'                                                             # STEP 88
result = os0.readlink(path3)                                            # STEP 89
result = file0.read(bytes1)                                             # STEP 90
os0.write(fd0,str0)                                                     # STEP 91
str0 += 'c'                                                             # STEP 92
result = os0.path.lexists(path3)                                        # STEP 93
result = stat1.st_nlink                                                 # STEP 94
str0 += 'm'                                                             # STEP 95
result = file0.read(bytes4)                                             # STEP 96
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106e52e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1175 BRANCHES COVERED
902 STATEMENTS COVERED
