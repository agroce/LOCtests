Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.3919.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x109ee7320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 63 steps

SAVING TEST AS failure.3919.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "e"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str2 = ""                                                                # STEP 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.dirname(path0)                                         # STEP 5
file0 = opener0(path0)                                                   # STEP 6
file0 = opener0(path0)                                                   # STEP 7
result = os0.path.dirname(path0)                                         # STEP 8
path0 += "/" + component1                                                # STEP 9
file0 = opener0(path0,'r')                                              # STEP 10
str2 += " "                                                             # STEP 11
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 12
stat3 = os0.stat(path0)                                                 # STEP 13
result = os0.path.isabs(path0)                                          # STEP 14
os0.link(path0,path0)                                                   # STEP 15
os0.symlink(path0,path0)                                                # STEP 16
os0.close(fd0)                                                          # STEP 17
stat2 = os0.stat(path0)                                                 # STEP 18
bytes4 = 0                                                              # STEP 19
file0 = opener0(path0)                                                  # STEP 20
str2 = ""                                                               # STEP 21
result = os0.readlink(path0)                                            # STEP 22
result = stat3.st_nlink                                                 # STEP 23
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 24
os0.link(path0,path0)                                                   # STEP 25
file0.next()                                                            # STEP 26
path3 = "/Volumes/ramdisk/test"                                         # STEP 27
result = file0.readline(bytes4)                                         # STEP 28
os0.link(path0,path0)                                                   # STEP 29
result = os0.path.dirname(path3)                                        # STEP 30
result = file0.readline(bytes4)                                         # STEP 31
result = stat3.st_nlink                                                 # STEP 32
result = sorted(os0.listdir(path3))                                     # STEP 33
file0.truncate()                                                        # STEP 34
str2 += 'l'                                                             # STEP 35
os0.link(path3,path0)                                                   # STEP 36
result = stat3.st_nlink                                                 # STEP 37
str1 = ""                                                               # STEP 38
result = os0.readlink(path0)                                            # STEP 39
path3 += "/" + component1                                               # STEP 40
result = sorted(os0.listdir(path3))                                     # STEP 41
stat4 = os0.lstat(path3)                                                # STEP 42
stat3 = os0.lstat(path0)                                                # STEP 43
result = sorted(os0.listdir(path0))                                     # STEP 44
str4 = ""                                                               # STEP 45
result = os0.path.dirname(path3)                                        # STEP 46
os0.rmdir(path0)                                                        # STEP 47
result = os0.read(fd0,bytes4)                                           # STEP 48
result = os0.read(fd0,bytes4)                                           # STEP 49
bytes2 = 0                                                              # STEP 50
bytes0 = 0                                                              # STEP 51
result = sorted(os0.listdir(path3))                                     # STEP 52
result = os0.readlink(path0)                                            # STEP 53
str2 = ""                                                               # STEP 54
result = stat2.st_nlink                                                 # STEP 55
result = os0.read(fd0,bytes4)                                           # STEP 56
file0.seek(bytes2)                                                      # STEP 57
os0.symlink(path0,path3)                                                # STEP 58
os0.rmdir(path0)                                                        # STEP 59
path3 += "/" + component1                                               # STEP 60
os0.symlink(path0,path3)                                                # STEP 61
file0.truncate()                                                        # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a937440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (6) == (3) ',), <traceback object at 0x10a15c710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 65 steps

SAVING TEST AS failure.3919.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str2 = ""                                                                # STEP 1
component1 = "a"                                                         # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
os0.link(path2,path2)                                                    # STEP 5
component3 = "omega"                                                     # STEP 6
result = os0.path.isabs(path2)                                           # STEP 7
result = os0.path.lexists(path2)                                         # STEP 8
path1 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.link(path2,path2)                                                   # STEP 10
result = os0.path.abspath(path2)                                        # STEP 11
bytes1 = 0                                                              # STEP 12
component2 = "a"                                                        # STEP 13
file0 = opener0(path2)                                                  # STEP 14
result = os0.readlink(path1)                                            # STEP 15
os0.mkdir(path1)                                                        # STEP 16
os0.mkdir(path1)                                                        # STEP 17
str2 += 'd'                                                             # STEP 18
result = os0.path.isabs(path1)                                          # STEP 19
file0 = opener0(path1,'a')                                              # STEP 20
os0.mkdir(path1)                                                        # STEP 21
bytes2 = 0                                                              # STEP 22
result = os0.path.exists(path1)                                         # STEP 23
result = os0.path.abspath(path1)                                        # STEP 24
result = os0.path.isfile(path1)                                         # STEP 25
result = os0.path.lexists(path1)                                        # STEP 26
result = os0.path.exists(path2)                                         # STEP 27
file0 = opener0(path1)                                                  # STEP 28
path2 = "/Volumes/ramdisk/test"                                         # STEP 29
str2 += 'h'                                                             # STEP 30
file0 = opener0(path2,'a')                                              # STEP 31
result = os0.path.abspath(path1)                                        # STEP 32
file0 = opener0(path1)                                                  # STEP 33
str2 += 'c'                                                             # STEP 34
file0 = opener0(path1)                                                  # STEP 35
bytes0 = 0                                                              # STEP 36
path1 += "/" + component2                                               # STEP 37
os0.link(path1,path2)                                                   # STEP 38
result = os0.path.isfile(path1)                                         # STEP 39
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 40
os0.write(fd0,str2)                                                     # STEP 41
bytes3 = 0                                                              # STEP 42
result = os0.path.lexists(path2)                                        # STEP 43
path2 += "/" + component1                                               # STEP 44
os0.mkdir(path1)                                                        # STEP 45
file0 = opener0(path1,'a')                                              # STEP 46
result = os0.path.abspath(path2)                                        # STEP 47
result = os0.path.abspath(path1)                                        # STEP 48
bytes4 = 0                                                              # STEP 49
result = os0.readlink(path1)                                            # STEP 50
result = os0.path.abspath(path1)                                        # STEP 51
component1 = "f"                                                        # STEP 52
stat4 = os0.lstat(path1)                                                # STEP 53
result = os0.path.abspath(path1)                                        # STEP 54
result = os0.path.isabs(path1)                                          # STEP 55
result = os0.path.abspath(path2)                                        # STEP 56
file0.write(str2)                                                       # STEP 57
result = os0.path.exists(path2)                                         # STEP 58
file0.next()                                                            # STEP 59
result = os0.readlink(path1)                                            # STEP 60
stat0 = os0.fstat(fd0)                                                  # STEP 61
os0.link(path2,path2)                                                   # STEP 62
result = os0.path.exists(path2)                                         # STEP 63
result = stat0.st_size                                                  # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (6) == (3) ',), <traceback object at 0x10a589368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109212e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 55 steps

SAVING TEST AS failure.3919.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str4 = ""                                                                # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str0 = ""                                                                # STEP 3
str3 = ""                                                                # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
result = os0.path.dirname(path1)                                         # STEP 6
result = os0.path.lexists(path1)                                         # STEP 7
str1 = ""                                                                # STEP 8
result = os0.path.lexists(path1)                                         # STEP 9
result = os0.path.dirname(path1)                                        # STEP 10
bytes1 = 0                                                              # STEP 11
component1 = "beta"                                                     # STEP 12
component0 = "e"                                                        # STEP 13
component4 = "c"                                                        # STEP 14
result = os0.path.abspath(path1)                                        # STEP 15
file0 = opener0(path1,'a')                                              # STEP 16
result = os0.path.exists(path1)                                         # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
bytes3 = 0                                                              # STEP 19
bytes0 = 0                                                              # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
file0 = opener0(path1)                                                  # STEP 22
str2 = ""                                                               # STEP 23
result = os0.readlink(path1)                                            # STEP 24
result = os0.path.dirname(path1)                                        # STEP 25
result = os0.path.abspath(path1)                                        # STEP 26
os0.remove(path3)                                                       # STEP 27
component2 = "g"                                                        # STEP 28
file0 = opener0(path3)                                                  # STEP 29
os0.remove(path1)                                                       # STEP 30
result = os0.path.isdir(path1)                                          # STEP 31
result = os0.path.exists(path3)                                         # STEP 32
os0.remove(path3)                                                       # STEP 33
path3 += "/" + component4                                               # STEP 34
result = sorted(os0.listdir(path3))                                     # STEP 35
result = os0.path.lexists(path1)                                        # STEP 36
result = os0.path.isdir(path1)                                          # STEP 37
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 38
stat4 = os0.stat(path3)                                                 # STEP 39
bytes4 = 0                                                              # STEP 40
file0 = opener0(path1,'a')                                              # STEP 41
result = os0.path.dirname(path3)                                        # STEP 42
result = os0.path.isdir(path3)                                          # STEP 43
os0.close(fd0)                                                          # STEP 44
file0 = opener0(path3,'a')                                              # STEP 45
result = os0.read(fd0,bytes0)                                           # STEP 46
file0.flush()                                                           # STEP 47
os0.close(fd0)                                                          # STEP 48
result = os0.path.abspath(path3)                                        # STEP 49
result = os0.path.dirname(path1)                                        # STEP 50
result = os0.path.lexists(path1)                                        # STEP 51
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 52
result = os0.path.isdir(path1)                                          # STEP 53
result = file0.read(bytes3)                                             # STEP 54
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064b7e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #183 STEP #68 (0:00:30.001415) Fri Jul 21 22:07:39 2017 [ 898 stmts 1163 branches ] 18151 TOTAL ACTIONS (605.004796986/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x105e18ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 56 steps

SAVING TEST AS failure.3919.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "alpha"                                                     # STEP 0
component3 = "phi"                                                       # STEP 1
component2 = "c"                                                         # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
path4 += "/" + component2                                                # STEP 5
str1 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
opener0 = newFakeOpener(os0)                                             # STEP 8
bytes3 = 0                                                               # STEP 9
str1 += " "                                                             # STEP 10
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 11
stat3 = os0.stat(path4)                                                 # STEP 12
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 13
file0 = opener0(path2,'a')                                              # STEP 14
result = os0.path.lexists(path2)                                        # STEP 15
stat1 = os0.stat(path4)                                                 # STEP 16
path4 += "/" + component1                                               # STEP 17
component0 = "d"                                                        # STEP 18
result = os0.path.isabs(path4)                                          # STEP 19
file0 = opener0(path4)                                                  # STEP 20
file0 = opener0(path4,'a')                                              # STEP 21
os0.remove(path4)                                                       # STEP 22
file0 = opener0(path4)                                                  # STEP 23
os0.close(fd0)                                                          # STEP 24
os0.makedirs(path4)                                                     # STEP 25
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 26
file0 = opener0(path2)                                                  # STEP 27
str1 += 'l'                                                             # STEP 28
path2 += "/" + component0                                               # STEP 29
result = os0.path.lexists(path2)                                        # STEP 30
result = os0.path.isdir(path4)                                          # STEP 31
os0.rename(path2,path4)                                                 # STEP 32
str1 += 'i'                                                             # STEP 33
os0.remove(path4)                                                       # STEP 34
os0.remove(path2)                                                       # STEP 35
result = os0.path.lexists(path4)                                        # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
os0.remove(path4)                                                       # STEP 38
bytes0 = 0                                                              # STEP 39
path4 += "/" + component2                                               # STEP 40
result = os0.path.lexists(path2)                                        # STEP 41
stat3 = os0.stat(path4)                                                 # STEP 42
file0 = opener0(path4,'a')                                              # STEP 43
os0.rename(path4,path2)                                                 # STEP 44
result = os0.path.isdir(path2)                                          # STEP 45
path2 += "/" + component2                                               # STEP 46
os0.path.getsize(path2)                                                 # STEP 47
str1 += " "                                                             # STEP 48
file0 = opener0(path2)                                                  # STEP 49
file0.truncate()                                                        # STEP 50
str1 += 'f'                                                             # STEP 51
component0 = "lambda"                                                   # STEP 52
result = file0.readline(bytes3)                                         # STEP 53
os0.write(fd0,str1)                                                     # STEP 54
file0.truncate()                                                        # STEP 55
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10662d758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['h']) == ([]) ",), <traceback object at 0x106d59290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 58 steps

SAVING TEST AS failure.3919.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
str1 = ""                                                                # STEP 3
os0 = newFakeOS()                                                        # STEP 4
component3 = "gamma"                                                     # STEP 5
os0.mkdir(path2)                                                         # STEP 6
os0.mkdir(path0)                                                         # STEP 7
result = os0.path.lexists(path0)                                         # STEP 8
result = os0.path.lexists(path0)                                         # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.isfile(path3)                                         # STEP 11
os0.symlink(path3,path2)                                                # STEP 12
result = os0.path.dirname(path4)                                        # STEP 13
os0.makedirs(path4)                                                     # STEP 14
result = os0.path.isfile(path4)                                         # STEP 15
os0.symlink(path0,path3)                                                # STEP 16
os0.mkdir(path4)                                                        # STEP 17
bytes4 = 0                                                              # STEP 18
bytes4 += 1                                                             # STEP 19
os0.symlink(path4,path3)                                                # STEP 20
path2 += "/" + component3                                               # STEP 21
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 22
path3 += "/" + component3                                               # STEP 23
result = os0.path.dirname(path3)                                        # STEP 24
result = os0.path.isdir(path3)                                          # STEP 25
bytes1 = 0                                                              # STEP 26
os0.makedirs(path2)                                                     # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
str1 += 'h'                                                             # STEP 29
result = os0.path.isabs(path4)                                          # STEP 30
stat0 = os0.fstat(fd0)                                                  # STEP 31
os0.makedirs(path3)                                                     # STEP 32
str0 = ""                                                               # STEP 33
file0 = opener0(path3,'r')                                              # STEP 34
str0 += 'i'                                                             # STEP 35
result = os0.path.isabs(path3)                                          # STEP 36
bytes4 = 0                                                              # STEP 37
result = os0.path.isfile(path0)                                         # STEP 38
result = file0.readlines()                                              # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
os0.mkdir(path3)                                                        # STEP 41
component3 = "c"                                                        # STEP 42
str2 = ""                                                               # STEP 43
os0.path.getsize(path3)                                                 # STEP 44
result = os0.path.abspath(path3)                                        # STEP 45
os0.makedirs(path3)                                                     # STEP 46
bytes0 = 0                                                              # STEP 47
bytes4 += 1                                                             # STEP 48
str2 += 'm'                                                             # STEP 49
bytes1 += 1                                                             # STEP 50
result = os0.path.isfile(path2)                                         # STEP 51
file0.next()                                                            # STEP 52
result = os0.path.isdir(path3)                                          # STEP 53
stat4 = os0.fstat(fd0)                                                  # STEP 54
result = os0.path.isfile(path0)                                         # STEP 55
result = os0.path.isabs(path0)                                          # STEP 56
result = file0.readlines()                                              # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['h']) == ([]) ",), <traceback object at 0x106d51cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 13
STOPPING TESTING DUE TO TIMEOUT
42.5120772947 PERCENT COVERED
60.3272778988 TOTAL RUNTIME
365 EXECUTED
36210 TOTAL TEST OPERATIONS
42.7202773094 TIME SPENT EXECUTING TEST OPERATIONS
15.214527607 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0249629020691 TIME SPENT CHECKING PROPERTIES
42.7452402115 TOTAL TIME SPENT RUNNING SUT
1.05908322334 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
5 FAILED
0 REPEATS OF FAILURES
5 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "e"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str2 = ""                                                                # STEP 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.dirname(path0)                                         # STEP 5
file0 = opener0(path0)                                                   # STEP 6
file0 = opener0(path0)                                                   # STEP 7
result = os0.path.dirname(path0)                                         # STEP 8
path0 += "/" + component1                                                # STEP 9
file0 = opener0(path0,'r')                                              # STEP 10
str2 += " "                                                             # STEP 11
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 12
stat3 = os0.stat(path0)                                                 # STEP 13
result = os0.path.isabs(path0)                                          # STEP 14
os0.link(path0,path0)                                                   # STEP 15
os0.symlink(path0,path0)                                                # STEP 16
os0.close(fd0)                                                          # STEP 17
stat2 = os0.stat(path0)                                                 # STEP 18
bytes4 = 0                                                              # STEP 19
file0 = opener0(path0)                                                  # STEP 20
str2 = ""                                                               # STEP 21
result = os0.readlink(path0)                                            # STEP 22
result = stat3.st_nlink                                                 # STEP 23
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 24
os0.link(path0,path0)                                                   # STEP 25
file0.next()                                                            # STEP 26
path3 = "/Volumes/ramdisk/test"                                         # STEP 27
result = file0.readline(bytes4)                                         # STEP 28
os0.link(path0,path0)                                                   # STEP 29
result = os0.path.dirname(path3)                                        # STEP 30
result = file0.readline(bytes4)                                         # STEP 31
result = stat3.st_nlink                                                 # STEP 32
result = sorted(os0.listdir(path3))                                     # STEP 33
file0.truncate()                                                        # STEP 34
str2 += 'l'                                                             # STEP 35
os0.link(path3,path0)                                                   # STEP 36
result = stat3.st_nlink                                                 # STEP 37
str1 = ""                                                               # STEP 38
result = os0.readlink(path0)                                            # STEP 39
path3 += "/" + component1                                               # STEP 40
result = sorted(os0.listdir(path3))                                     # STEP 41
stat4 = os0.lstat(path3)                                                # STEP 42
stat3 = os0.lstat(path0)                                                # STEP 43
result = sorted(os0.listdir(path0))                                     # STEP 44
str4 = ""                                                               # STEP 45
result = os0.path.dirname(path3)                                        # STEP 46
os0.rmdir(path0)                                                        # STEP 47
result = os0.read(fd0,bytes4)                                           # STEP 48
result = os0.read(fd0,bytes4)                                           # STEP 49
bytes2 = 0                                                              # STEP 50
bytes0 = 0                                                              # STEP 51
result = sorted(os0.listdir(path3))                                     # STEP 52
result = os0.readlink(path0)                                            # STEP 53
str2 = ""                                                               # STEP 54
result = stat2.st_nlink                                                 # STEP 55
result = os0.read(fd0,bytes4)                                           # STEP 56
file0.seek(bytes2)                                                      # STEP 57
os0.symlink(path0,path3)                                                # STEP 58
os0.rmdir(path0)                                                        # STEP 59
path3 += "/" + component1                                               # STEP 60
os0.symlink(path0,path3)                                                # STEP 61
file0.truncate()                                                        # STEP 62
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10a937440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
os0 = newFakeOS()                                                        # STEP 0
str2 = ""                                                                # STEP 1
component1 = "a"                                                         # STEP 2
opener0 = newFakeOpener(os0)                                             # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
os0.link(path2,path2)                                                    # STEP 5
component3 = "omega"                                                     # STEP 6
result = os0.path.isabs(path2)                                           # STEP 7
result = os0.path.lexists(path2)                                         # STEP 8
path1 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.link(path2,path2)                                                   # STEP 10
result = os0.path.abspath(path2)                                        # STEP 11
bytes1 = 0                                                              # STEP 12
component2 = "a"                                                        # STEP 13
file0 = opener0(path2)                                                  # STEP 14
result = os0.readlink(path1)                                            # STEP 15
os0.mkdir(path1)                                                        # STEP 16
os0.mkdir(path1)                                                        # STEP 17
str2 += 'd'                                                             # STEP 18
result = os0.path.isabs(path1)                                          # STEP 19
file0 = opener0(path1,'a')                                              # STEP 20
os0.mkdir(path1)                                                        # STEP 21
bytes2 = 0                                                              # STEP 22
result = os0.path.exists(path1)                                         # STEP 23
result = os0.path.abspath(path1)                                        # STEP 24
result = os0.path.isfile(path1)                                         # STEP 25
result = os0.path.lexists(path1)                                        # STEP 26
result = os0.path.exists(path2)                                         # STEP 27
file0 = opener0(path1)                                                  # STEP 28
path2 = "/Volumes/ramdisk/test"                                         # STEP 29
str2 += 'h'                                                             # STEP 30
file0 = opener0(path2,'a')                                              # STEP 31
result = os0.path.abspath(path1)                                        # STEP 32
file0 = opener0(path1)                                                  # STEP 33
str2 += 'c'                                                             # STEP 34
file0 = opener0(path1)                                                  # STEP 35
bytes0 = 0                                                              # STEP 36
path1 += "/" + component2                                               # STEP 37
os0.link(path1,path2)                                                   # STEP 38
result = os0.path.isfile(path1)                                         # STEP 39
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 40
os0.write(fd0,str2)                                                     # STEP 41
bytes3 = 0                                                              # STEP 42
result = os0.path.lexists(path2)                                        # STEP 43
path2 += "/" + component1                                               # STEP 44
os0.mkdir(path1)                                                        # STEP 45
file0 = opener0(path1,'a')                                              # STEP 46
result = os0.path.abspath(path2)                                        # STEP 47
result = os0.path.abspath(path1)                                        # STEP 48
bytes4 = 0                                                              # STEP 49
result = os0.readlink(path1)                                            # STEP 50
result = os0.path.abspath(path1)                                        # STEP 51
component1 = "f"                                                        # STEP 52
stat4 = os0.lstat(path1)                                                # STEP 53
result = os0.path.abspath(path1)                                        # STEP 54
result = os0.path.isabs(path1)                                          # STEP 55
result = os0.path.abspath(path2)                                        # STEP 56
file0.write(str2)                                                       # STEP 57
result = os0.path.exists(path2)                                         # STEP 58
file0.next()                                                            # STEP 59
result = os0.readlink(path1)                                            # STEP 60
stat0 = os0.fstat(fd0)                                                  # STEP 61
os0.link(path2,path2)                                                   # STEP 62
result = os0.path.exists(path2)                                         # STEP 63
result = stat0.st_size                                                  # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (6) == (3) ',), <traceback object at 0x10a589368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
str4 = ""                                                                # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str0 = ""                                                                # STEP 3
str3 = ""                                                                # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
result = os0.path.dirname(path1)                                         # STEP 6
result = os0.path.lexists(path1)                                         # STEP 7
str1 = ""                                                                # STEP 8
result = os0.path.lexists(path1)                                         # STEP 9
result = os0.path.dirname(path1)                                        # STEP 10
bytes1 = 0                                                              # STEP 11
component1 = "beta"                                                     # STEP 12
component0 = "e"                                                        # STEP 13
component4 = "c"                                                        # STEP 14
result = os0.path.abspath(path1)                                        # STEP 15
file0 = opener0(path1,'a')                                              # STEP 16
result = os0.path.exists(path1)                                         # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
bytes3 = 0                                                              # STEP 19
bytes0 = 0                                                              # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
file0 = opener0(path1)                                                  # STEP 22
str2 = ""                                                               # STEP 23
result = os0.readlink(path1)                                            # STEP 24
result = os0.path.dirname(path1)                                        # STEP 25
result = os0.path.abspath(path1)                                        # STEP 26
os0.remove(path3)                                                       # STEP 27
component2 = "g"                                                        # STEP 28
file0 = opener0(path3)                                                  # STEP 29
os0.remove(path1)                                                       # STEP 30
result = os0.path.isdir(path1)                                          # STEP 31
result = os0.path.exists(path3)                                         # STEP 32
os0.remove(path3)                                                       # STEP 33
path3 += "/" + component4                                               # STEP 34
result = sorted(os0.listdir(path3))                                     # STEP 35
result = os0.path.lexists(path1)                                        # STEP 36
result = os0.path.isdir(path1)                                          # STEP 37
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 38
stat4 = os0.stat(path3)                                                 # STEP 39
bytes4 = 0                                                              # STEP 40
file0 = opener0(path1,'a')                                              # STEP 41
result = os0.path.dirname(path3)                                        # STEP 42
result = os0.path.isdir(path3)                                          # STEP 43
os0.close(fd0)                                                          # STEP 44
file0 = opener0(path3,'a')                                              # STEP 45
result = os0.read(fd0,bytes0)                                           # STEP 46
file0.flush()                                                           # STEP 47
os0.close(fd0)                                                          # STEP 48
result = os0.path.abspath(path3)                                        # STEP 49
result = os0.path.dirname(path1)                                        # STEP 50
result = os0.path.lexists(path1)                                        # STEP 51
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 52
result = os0.path.isdir(path1)                                          # STEP 53
result = file0.read(bytes3)                                             # STEP 54
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064b7e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
component1 = "alpha"                                                     # STEP 0
component3 = "phi"                                                       # STEP 1
component2 = "c"                                                         # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
path4 += "/" + component2                                                # STEP 5
str1 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
opener0 = newFakeOpener(os0)                                             # STEP 8
bytes3 = 0                                                               # STEP 9
str1 += " "                                                             # STEP 10
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 11
stat3 = os0.stat(path4)                                                 # STEP 12
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 13
file0 = opener0(path2,'a')                                              # STEP 14
result = os0.path.lexists(path2)                                        # STEP 15
stat1 = os0.stat(path4)                                                 # STEP 16
path4 += "/" + component1                                               # STEP 17
component0 = "d"                                                        # STEP 18
result = os0.path.isabs(path4)                                          # STEP 19
file0 = opener0(path4)                                                  # STEP 20
file0 = opener0(path4,'a')                                              # STEP 21
os0.remove(path4)                                                       # STEP 22
file0 = opener0(path4)                                                  # STEP 23
os0.close(fd0)                                                          # STEP 24
os0.makedirs(path4)                                                     # STEP 25
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 26
file0 = opener0(path2)                                                  # STEP 27
str1 += 'l'                                                             # STEP 28
path2 += "/" + component0                                               # STEP 29
result = os0.path.lexists(path2)                                        # STEP 30
result = os0.path.isdir(path4)                                          # STEP 31
os0.rename(path2,path4)                                                 # STEP 32
str1 += 'i'                                                             # STEP 33
os0.remove(path4)                                                       # STEP 34
os0.remove(path2)                                                       # STEP 35
result = os0.path.lexists(path4)                                        # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
os0.remove(path4)                                                       # STEP 38
bytes0 = 0                                                              # STEP 39
path4 += "/" + component2                                               # STEP 40
result = os0.path.lexists(path2)                                        # STEP 41
stat3 = os0.stat(path4)                                                 # STEP 42
file0 = opener0(path4,'a')                                              # STEP 43
os0.rename(path4,path2)                                                 # STEP 44
result = os0.path.isdir(path2)                                          # STEP 45
path2 += "/" + component2                                               # STEP 46
os0.path.getsize(path2)                                                 # STEP 47
str1 += " "                                                             # STEP 48
file0 = opener0(path2)                                                  # STEP 49
file0.truncate()                                                        # STEP 50
str1 += 'f'                                                             # STEP 51
component0 = "lambda"                                                   # STEP 52
result = file0.readline(bytes3)                                         # STEP 53
os0.write(fd0,str1)                                                     # STEP 54
file0.truncate()                                                        # STEP 55
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10662d758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
str1 = ""                                                                # STEP 3
os0 = newFakeOS()                                                        # STEP 4
component3 = "gamma"                                                     # STEP 5
os0.mkdir(path2)                                                         # STEP 6
os0.mkdir(path0)                                                         # STEP 7
result = os0.path.lexists(path0)                                         # STEP 8
result = os0.path.lexists(path0)                                         # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.isfile(path3)                                         # STEP 11
os0.symlink(path3,path2)                                                # STEP 12
result = os0.path.dirname(path4)                                        # STEP 13
os0.makedirs(path4)                                                     # STEP 14
result = os0.path.isfile(path4)                                         # STEP 15
os0.symlink(path0,path3)                                                # STEP 16
os0.mkdir(path4)                                                        # STEP 17
bytes4 = 0                                                              # STEP 18
bytes4 += 1                                                             # STEP 19
os0.symlink(path4,path3)                                                # STEP 20
path2 += "/" + component3                                               # STEP 21
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 22
path3 += "/" + component3                                               # STEP 23
result = os0.path.dirname(path3)                                        # STEP 24
result = os0.path.isdir(path3)                                          # STEP 25
bytes1 = 0                                                              # STEP 26
os0.makedirs(path2)                                                     # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
str1 += 'h'                                                             # STEP 29
result = os0.path.isabs(path4)                                          # STEP 30
stat0 = os0.fstat(fd0)                                                  # STEP 31
os0.makedirs(path3)                                                     # STEP 32
str0 = ""                                                               # STEP 33
file0 = opener0(path3,'r')                                              # STEP 34
str0 += 'i'                                                             # STEP 35
result = os0.path.isabs(path3)                                          # STEP 36
bytes4 = 0                                                              # STEP 37
result = os0.path.isfile(path0)                                         # STEP 38
result = file0.readlines()                                              # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
os0.mkdir(path3)                                                        # STEP 41
component3 = "c"                                                        # STEP 42
str2 = ""                                                               # STEP 43
os0.path.getsize(path3)                                                 # STEP 44
result = os0.path.abspath(path3)                                        # STEP 45
os0.makedirs(path3)                                                     # STEP 46
bytes0 = 0                                                              # STEP 47
bytes4 += 1                                                             # STEP 48
str2 += 'm'                                                             # STEP 49
bytes1 += 1                                                             # STEP 50
result = os0.path.isfile(path2)                                         # STEP 51
file0.next()                                                            # STEP 52
result = os0.path.isdir(path3)                                          # STEP 53
stat4 = os0.fstat(fd0)                                                  # STEP 54
result = os0.path.isfile(path0)                                         # STEP 55
result = os0.path.isabs(path0)                                          # STEP 56
result = file0.readlines()                                              # STEP 57
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['h']) == ([]) ",), <traceback object at 0x106d51cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1175 BRANCHES COVERED
904 STATEMENTS COVERED
