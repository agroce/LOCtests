Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4747.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( vo dph) == () ',), <traceback object at 0x10a69f4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 99 steps

SAVING TEST AS failure.4747.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes4 = 0                                                               # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
component2 = "alpha"                                                     # STEP 2
str2 = ""                                                                # STEP 3
str2 += " "                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.abspath(path1)                                         # STEP 6
bytes0 = 0                                                               # STEP 7
result = os0.path.islink(path1)                                          # STEP 8
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.symlink(path1,path0)                                                # STEP 10
result = os0.path.isfile(path0)                                         # STEP 11
os0.link(path0,path1)                                                   # STEP 12
os0.mkdir(path0)                                                        # STEP 13
os0.symlink(path1,path1)                                                # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
result = os0.path.exists(path0)                                         # STEP 16
str2 += 'p'                                                             # STEP 17
os0.symlink(path1,path0)                                                # STEP 18
os0.mkdir(path1)                                                        # STEP 19
result = os0.path.isfile(path0)                                         # STEP 20
str2 += " "                                                             # STEP 21
os0.link(path1,path0)                                                   # STEP 22
result = os0.path.abspath(path0)                                        # STEP 23
str2 = ""                                                               # STEP 24
result = os0.path.isdir(path1)                                          # STEP 25
component4 = "phi"                                                      # STEP 26
os0.symlink(path0,path0)                                                # STEP 27
str2 += " "                                                             # STEP 28
result = os0.path.dirname(path0)                                        # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
os0.link(path0,path1)                                                   # STEP 31
path0 += "/" + component2                                               # STEP 32
bytes3 = 0                                                              # STEP 33
file0 = opener0(path1,'r')                                              # STEP 34
path3 = "/Volumes/ramdisk/test"                                         # STEP 35
result = os0.path.exists(path0)                                         # STEP 36
str2 += 'v'                                                             # STEP 37
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
os0.path.getsize(path0)                                                 # STEP 39
result = os0.path.islink(path1)                                         # STEP 40
result = os0.path.isabs(path1)                                          # STEP 41
str2 += 'o'                                                             # STEP 42
result = os0.path.isabs(path1)                                          # STEP 43
os0.symlink(path3,path1)                                                # STEP 44
result = os0.path.dirname(path0)                                        # STEP 45
file0 = opener0(path0,'r')                                              # STEP 46
str2 += " "                                                             # STEP 47
os0.link(path0,path0)                                                   # STEP 48
component0 = "a"                                                        # STEP 49
str2 += 'd'                                                             # STEP 50
os0.mkdir(path1)                                                        # STEP 51
stat0 = os0.lstat(path0)                                                # STEP 52
os0.path.getsize(path0)                                                 # STEP 53
path3 += "/" + component4                                               # STEP 54
str2 += 'p'                                                             # STEP 55
stat2 = os0.lstat(path3)                                                # STEP 56
result = os0.read(fd0,bytes0)                                           # STEP 57
stat3 = os0.lstat(path3)                                                # STEP 58
os0.mkdir(path1)                                                        # STEP 59
os0.mkdir(path0)                                                        # STEP 60
component2 = "epsilon"                                                  # STEP 61
file0.next()                                                            # STEP 62
os0.mkdir(path1)                                                        # STEP 63
file0.flush()                                                           # STEP 64
result = os0.path.islink(path1)                                         # STEP 65
os0.mkdir(path0)                                                        # STEP 66
os0.link(path1,path0)                                                   # STEP 67
result = os0.path.isfile(path1)                                         # STEP 68
result = os0.path.exists(path3)                                         # STEP 69
os0.mkdir(path1)                                                        # STEP 70
bytes1 = 0                                                              # STEP 71
result = os0.read(fd0,bytes1)                                           # STEP 72
file0.truncate()                                                        # STEP 73
str2 += 'h'                                                             # STEP 74
os0.symlink(path3,path3)                                                # STEP 75
result = os0.path.dirname(path3)                                        # STEP 76
result = os0.path.isdir(path0)                                          # STEP 77
bytes2 = 0                                                              # STEP 78
result = os0.path.isdir(path1)                                          # STEP 79
path0 = "/Volumes/ramdisk/test"                                         # STEP 80
os0.write(fd0,str2)                                                     # STEP 81
file0.next()                                                            # STEP 82
str2 += 'h'                                                             # STEP 83
result = os0.path.isabs(path0)                                          # STEP 84
str3 = ""                                                               # STEP 85
file0.next()                                                            # STEP 86
file0.truncate()                                                        # STEP 87
bytes1 = 0                                                              # STEP 88
path2 = "/Volumes/ramdisk/test"                                         # STEP 89
result = os0.path.islink(path2)                                         # STEP 90
path0 += "/" + component0                                               # STEP 91
str2 += 'q'                                                             # STEP 92
os0.mkdir(path3)                                                        # STEP 93
file0.write(str3)                                                       # STEP 94
path4 = "/Volumes/ramdisk/test"                                         # STEP 95
result = os0.path.abspath(path4)                                        # STEP 96
os0.mkdir(path3)                                                        # STEP 97
result = file0.readline()                                               # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( vo dph) == () ',), <traceback object at 0x107e3ecb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #180 STEP #15 (0:00:30.000539) Sat Jul 22 02:02:41 2017 [ 896 stmts 1166 branches ] 17914 TOTAL ACTIONS (597.122603749/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109f4d518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28973, in act574
    assert (raised == None) == (refRaised == None)
Original test has 63 steps

SAVING TEST AS failure.4747.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str1 = ""                                                                # STEP 0
bytes2 = 0                                                               # STEP 1
str1 += 'e'                                                              # STEP 2
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "h"                                                         # STEP 4
str1 += 'd'                                                              # STEP 5
os0 = newFakeOS()                                                        # STEP 6
path1 += "/" + component3                                                # STEP 7
str1 += 'f'                                                              # STEP 8
result = os0.path.abspath(path1)                                         # STEP 9
str0 = ""                                                               # STEP 10
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 11
str1 += 'h'                                                             # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
component2 = "f"                                                        # STEP 14
component0 = "g"                                                        # STEP 15
result = sorted(os0.listdir(path1))                                     # STEP 16
os0.write(fd0,str0)                                                     # STEP 17
os0.close(fd0)                                                          # STEP 18
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 19
stat2 = os0.lstat(path1)                                                # STEP 20
file0 = opener0(path1)                                                  # STEP 21
os0.close(fd0)                                                          # STEP 22
str1 += 'h'                                                             # STEP 23
result = os0.readlink(path1)                                            # STEP 24
bytes4 = 0                                                              # STEP 25
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 26
stat4 = os0.lstat(path1)                                                # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
os0.close(fd0)                                                          # STEP 29
path0 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.read(fd0,bytes2)                                           # STEP 31
result = os0.path.abspath(path1)                                        # STEP 32
result = os0.path.exists(path1)                                         # STEP 33
result = os0.path.exists(path1)                                         # STEP 34
bytes3 = 0                                                              # STEP 35
result = os0.path.exists(path0)                                         # STEP 36
result = os0.path.abspath(path1)                                        # STEP 37
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 38
str4 = ""                                                               # STEP 39
os0.close(fd0)                                                          # STEP 40
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 41
result = sorted(os0.listdir(path0))                                     # STEP 42
result = os0.readlink(path0)                                            # STEP 43
component3 = "omega"                                                    # STEP 44
component4 = "delta"                                                    # STEP 45
os0.write(fd0,str4)                                                     # STEP 46
file0.seek(bytes2)                                                      # STEP 47
result = os0.readlink(path1)                                            # STEP 48
os0.write(fd0,str0)                                                     # STEP 49
os0.path.getsize(path1)                                                 # STEP 50
str1 += 'o'                                                             # STEP 51
str4 += 'a'                                                             # STEP 52
stat1 = os0.stat(path1)                                                 # STEP 53
path2 = "/Volumes/ramdisk/test"                                         # STEP 54
file0.next()                                                            # STEP 55
result = sorted(os0.listdir(path2))                                     # STEP 56
str0 = ""                                                               # STEP 57
file0.next()                                                            # STEP 58
component1 = "b"                                                        # STEP 59
stat0 = os0.lstat(path1)                                                # STEP 60
result = os0.readlink(path2)                                            # STEP 61
result = file0.readline(bytes4)                                         # STEP 62
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109f60fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28973, in act574
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1092929e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
Original test has 54 steps

SAVING TEST AS failure.4747.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes2 = 0                                                               # STEP 2
bytes0 = 0                                                               # STEP 3
component2 = "omega"                                                     # STEP 4
bytes3 = 0                                                               # STEP 5
bytes1 = 0                                                               # STEP 6
component0 = "c"                                                         # STEP 7
component3 = "e"                                                         # STEP 8
bytes4 = 0                                                               # STEP 9
component1 = "a"                                                        # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
str0 = ""                                                               # STEP 12
result = os0.path.islink(path4)                                         # STEP 13
result = os0.path.isabs(path4)                                          # STEP 14
result = os0.path.exists(path4)                                         # STEP 15
result = os0.readlink(path4)                                            # STEP 16
result = os0.path.abspath(path4)                                        # STEP 17
os0.remove(path4)                                                       # STEP 18
os0.remove(path4)                                                       # STEP 19
result = os0.path.islink(path4)                                         # STEP 20
result = os0.path.abspath(path4)                                        # STEP 21
result = os0.path.isfile(path4)                                         # STEP 22
result = os0.readlink(path4)                                            # STEP 23
os0.symlink(path4,path4)                                                # STEP 24
os0.symlink(path4,path4)                                                # STEP 25
result = os0.path.islink(path4)                                         # STEP 26
result = os0.path.exists(path4)                                         # STEP 27
str0 += 'd'                                                             # STEP 28
path4 += "/" + component2                                               # STEP 29
os0.path.getsize(path4)                                                 # STEP 30
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 31
result = os0.path.isfile(path4)                                         # STEP 32
stat2 = os0.fstat(fd0)                                                  # STEP 33
os0.symlink(path4,path4)                                                # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
os0.close(fd0)                                                          # STEP 36
result = os0.readlink(path4)                                            # STEP 37
str0 += 'g'                                                             # STEP 38
os0.symlink(path4,path4)                                                # STEP 39
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
str0 += 'l'                                                             # STEP 41
file0 = opener0(path4)                                                  # STEP 42
result = file0.readline()                                               # STEP 43
result = file0.readline(bytes4)                                         # STEP 44
os0.symlink(path4,path4)                                                # STEP 45
os0.close(fd0)                                                          # STEP 46
result = os0.read(fd0,bytes4)                                           # STEP 47
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 48
result = os0.path.abspath(path4)                                        # STEP 49
stat3 = os0.fstat(fd0)                                                  # STEP 50
stat4 = os0.fstat(fd0)                                                  # STEP 51
result = sorted(os0.listdir(path4))                                     # STEP 52
result = file0.read()                                                   # STEP 53
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10a9d23b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 38
STOPPING TESTING DUE TO TIMEOUT
42.9208472687 PERCENT COVERED
60.3233001232 TOTAL RUNTIME
363 EXECUTED
36154 TOTAL TEST OPERATIONS
42.6435701847 TIME SPENT EXECUTING TEST OPERATIONS
15.3505342007 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0241196155548 TIME SPENT CHECKING PROPERTIES
42.6676898003 TOTAL TIME SPENT RUNNING SUT
1.09367036819 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes4 = 0                                                               # STEP 0
path1 = "/Volumes/ramdisk/test"                                          # STEP 1
component2 = "alpha"                                                     # STEP 2
str2 = ""                                                                # STEP 3
str2 += " "                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.abspath(path1)                                         # STEP 6
bytes0 = 0                                                               # STEP 7
result = os0.path.islink(path1)                                          # STEP 8
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.symlink(path1,path0)                                                # STEP 10
result = os0.path.isfile(path0)                                         # STEP 11
os0.link(path0,path1)                                                   # STEP 12
os0.mkdir(path0)                                                        # STEP 13
os0.symlink(path1,path1)                                                # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
result = os0.path.exists(path0)                                         # STEP 16
str2 += 'p'                                                             # STEP 17
os0.symlink(path1,path0)                                                # STEP 18
os0.mkdir(path1)                                                        # STEP 19
result = os0.path.isfile(path0)                                         # STEP 20
str2 += " "                                                             # STEP 21
os0.link(path1,path0)                                                   # STEP 22
result = os0.path.abspath(path0)                                        # STEP 23
str2 = ""                                                               # STEP 24
result = os0.path.isdir(path1)                                          # STEP 25
component4 = "phi"                                                      # STEP 26
os0.symlink(path0,path0)                                                # STEP 27
str2 += " "                                                             # STEP 28
result = os0.path.dirname(path0)                                        # STEP 29
result = os0.path.islink(path1)                                         # STEP 30
os0.link(path0,path1)                                                   # STEP 31
path0 += "/" + component2                                               # STEP 32
bytes3 = 0                                                              # STEP 33
file0 = opener0(path1,'r')                                              # STEP 34
path3 = "/Volumes/ramdisk/test"                                         # STEP 35
result = os0.path.exists(path0)                                         # STEP 36
str2 += 'v'                                                             # STEP 37
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
os0.path.getsize(path0)                                                 # STEP 39
result = os0.path.islink(path1)                                         # STEP 40
result = os0.path.isabs(path1)                                          # STEP 41
str2 += 'o'                                                             # STEP 42
result = os0.path.isabs(path1)                                          # STEP 43
os0.symlink(path3,path1)                                                # STEP 44
result = os0.path.dirname(path0)                                        # STEP 45
file0 = opener0(path0,'r')                                              # STEP 46
str2 += " "                                                             # STEP 47
os0.link(path0,path0)                                                   # STEP 48
component0 = "a"                                                        # STEP 49
str2 += 'd'                                                             # STEP 50
os0.mkdir(path1)                                                        # STEP 51
stat0 = os0.lstat(path0)                                                # STEP 52
os0.path.getsize(path0)                                                 # STEP 53
path3 += "/" + component4                                               # STEP 54
str2 += 'p'                                                             # STEP 55
stat2 = os0.lstat(path3)                                                # STEP 56
result = os0.read(fd0,bytes0)                                           # STEP 57
stat3 = os0.lstat(path3)                                                # STEP 58
os0.mkdir(path1)                                                        # STEP 59
os0.mkdir(path0)                                                        # STEP 60
component2 = "epsilon"                                                  # STEP 61
file0.next()                                                            # STEP 62
os0.mkdir(path1)                                                        # STEP 63
file0.flush()                                                           # STEP 64
result = os0.path.islink(path1)                                         # STEP 65
os0.mkdir(path0)                                                        # STEP 66
os0.link(path1,path0)                                                   # STEP 67
result = os0.path.isfile(path1)                                         # STEP 68
result = os0.path.exists(path3)                                         # STEP 69
os0.mkdir(path1)                                                        # STEP 70
bytes1 = 0                                                              # STEP 71
result = os0.read(fd0,bytes1)                                           # STEP 72
file0.truncate()                                                        # STEP 73
str2 += 'h'                                                             # STEP 74
os0.symlink(path3,path3)                                                # STEP 75
result = os0.path.dirname(path3)                                        # STEP 76
result = os0.path.isdir(path0)                                          # STEP 77
bytes2 = 0                                                              # STEP 78
result = os0.path.isdir(path1)                                          # STEP 79
path0 = "/Volumes/ramdisk/test"                                         # STEP 80
os0.write(fd0,str2)                                                     # STEP 81
file0.next()                                                            # STEP 82
str2 += 'h'                                                             # STEP 83
result = os0.path.isabs(path0)                                          # STEP 84
str3 = ""                                                               # STEP 85
file0.next()                                                            # STEP 86
file0.truncate()                                                        # STEP 87
bytes1 = 0                                                              # STEP 88
path2 = "/Volumes/ramdisk/test"                                         # STEP 89
result = os0.path.islink(path2)                                         # STEP 90
path0 += "/" + component0                                               # STEP 91
str2 += 'q'                                                             # STEP 92
os0.mkdir(path3)                                                        # STEP 93
file0.write(str3)                                                       # STEP 94
path4 = "/Volumes/ramdisk/test"                                         # STEP 95
result = os0.path.abspath(path4)                                        # STEP 96
os0.mkdir(path3)                                                        # STEP 97
result = file0.readline()                                               # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( vo dph) == () ',), <traceback object at 0x107e3ecb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
str1 = ""                                                                # STEP 0
bytes2 = 0                                                               # STEP 1
str1 += 'e'                                                              # STEP 2
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "h"                                                         # STEP 4
str1 += 'd'                                                              # STEP 5
os0 = newFakeOS()                                                        # STEP 6
path1 += "/" + component3                                                # STEP 7
str1 += 'f'                                                              # STEP 8
result = os0.path.abspath(path1)                                         # STEP 9
str0 = ""                                                               # STEP 10
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 11
str1 += 'h'                                                             # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
component2 = "f"                                                        # STEP 14
component0 = "g"                                                        # STEP 15
result = sorted(os0.listdir(path1))                                     # STEP 16
os0.write(fd0,str0)                                                     # STEP 17
os0.close(fd0)                                                          # STEP 18
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 19
stat2 = os0.lstat(path1)                                                # STEP 20
file0 = opener0(path1)                                                  # STEP 21
os0.close(fd0)                                                          # STEP 22
str1 += 'h'                                                             # STEP 23
result = os0.readlink(path1)                                            # STEP 24
bytes4 = 0                                                              # STEP 25
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 26
stat4 = os0.lstat(path1)                                                # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
os0.close(fd0)                                                          # STEP 29
path0 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.read(fd0,bytes2)                                           # STEP 31
result = os0.path.abspath(path1)                                        # STEP 32
result = os0.path.exists(path1)                                         # STEP 33
result = os0.path.exists(path1)                                         # STEP 34
bytes3 = 0                                                              # STEP 35
result = os0.path.exists(path0)                                         # STEP 36
result = os0.path.abspath(path1)                                        # STEP 37
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 38
str4 = ""                                                               # STEP 39
os0.close(fd0)                                                          # STEP 40
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 41
result = sorted(os0.listdir(path0))                                     # STEP 42
result = os0.readlink(path0)                                            # STEP 43
component3 = "omega"                                                    # STEP 44
component4 = "delta"                                                    # STEP 45
os0.write(fd0,str4)                                                     # STEP 46
file0.seek(bytes2)                                                      # STEP 47
result = os0.readlink(path1)                                            # STEP 48
os0.write(fd0,str0)                                                     # STEP 49
os0.path.getsize(path1)                                                 # STEP 50
str1 += 'o'                                                             # STEP 51
str4 += 'a'                                                             # STEP 52
stat1 = os0.stat(path1)                                                 # STEP 53
path2 = "/Volumes/ramdisk/test"                                         # STEP 54
file0.next()                                                            # STEP 55
result = sorted(os0.listdir(path2))                                     # STEP 56
str0 = ""                                                               # STEP 57
file0.next()                                                            # STEP 58
component1 = "b"                                                        # STEP 59
stat0 = os0.lstat(path1)                                                # STEP 60
result = os0.readlink(path2)                                            # STEP 61
result = file0.readline(bytes4)                                         # STEP 62
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109f60fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28973, in act574
    assert (raised == None) == (refRaised == None)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes2 = 0                                                               # STEP 2
bytes0 = 0                                                               # STEP 3
component2 = "omega"                                                     # STEP 4
bytes3 = 0                                                               # STEP 5
bytes1 = 0                                                               # STEP 6
component0 = "c"                                                         # STEP 7
component3 = "e"                                                         # STEP 8
bytes4 = 0                                                               # STEP 9
component1 = "a"                                                        # STEP 10
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
str0 = ""                                                               # STEP 12
result = os0.path.islink(path4)                                         # STEP 13
result = os0.path.isabs(path4)                                          # STEP 14
result = os0.path.exists(path4)                                         # STEP 15
result = os0.readlink(path4)                                            # STEP 16
result = os0.path.abspath(path4)                                        # STEP 17
os0.remove(path4)                                                       # STEP 18
os0.remove(path4)                                                       # STEP 19
result = os0.path.islink(path4)                                         # STEP 20
result = os0.path.abspath(path4)                                        # STEP 21
result = os0.path.isfile(path4)                                         # STEP 22
result = os0.readlink(path4)                                            # STEP 23
os0.symlink(path4,path4)                                                # STEP 24
os0.symlink(path4,path4)                                                # STEP 25
result = os0.path.islink(path4)                                         # STEP 26
result = os0.path.exists(path4)                                         # STEP 27
str0 += 'd'                                                             # STEP 28
path4 += "/" + component2                                               # STEP 29
os0.path.getsize(path4)                                                 # STEP 30
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 31
result = os0.path.isfile(path4)                                         # STEP 32
stat2 = os0.fstat(fd0)                                                  # STEP 33
os0.symlink(path4,path4)                                                # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
os0.close(fd0)                                                          # STEP 36
result = os0.readlink(path4)                                            # STEP 37
str0 += 'g'                                                             # STEP 38
os0.symlink(path4,path4)                                                # STEP 39
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
str0 += 'l'                                                             # STEP 41
file0 = opener0(path4)                                                  # STEP 42
result = file0.readline()                                               # STEP 43
result = file0.readline(bytes4)                                         # STEP 44
os0.symlink(path4,path4)                                                # STEP 45
os0.close(fd0)                                                          # STEP 46
result = os0.read(fd0,bytes4)                                           # STEP 47
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 48
result = os0.path.abspath(path4)                                        # STEP 49
stat3 = os0.fstat(fd0)                                                  # STEP 50
stat4 = os0.fstat(fd0)                                                  # STEP 51
result = sorted(os0.listdir(path4))                                     # STEP 52
result = file0.read()                                                   # STEP 53
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10a9d23b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28321, in act563
    assert (raised == None) == (refRaised == None)
1185 BRANCHES COVERED
907 STATEMENTS COVERED
