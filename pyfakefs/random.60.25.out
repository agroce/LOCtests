Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4446.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #410 STEP #52 (0:00:30.000651) Sat Jul 22 00:47:33 2017 [ 892 stmts 1159 branches ] 40952 TOTAL ACTIONS (1365.03703985/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (9) == (0) ',), <traceback object at 0x10448e638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 86 steps

SAVING TEST AS failure.4446.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "epsilon"                                                   # STEP 0
component4 = "gamma"                                                     # STEP 1
os0 = newFakeOS()                                                        # STEP 2
bytes3 = 0                                                               # STEP 3
component0 = "delta"                                                     # STEP 4
component3 = "phi"                                                       # STEP 5
component1 = "epsilon"                                                   # STEP 6
bytes4 = 0                                                               # STEP 7
opener0 = newFakeOpener(os0)                                             # STEP 8
str4 = ""                                                                # STEP 9
str4 += 'w'                                                             # STEP 10
str4 += 'g'                                                             # STEP 11
str4 += 'q'                                                             # STEP 12
str4 += 'u'                                                             # STEP 13
str4 += 'q'                                                             # STEP 14
str4 += 'j'                                                             # STEP 15
str4 += 'b'                                                             # STEP 16
str4 += 'z'                                                             # STEP 17
str4 += 'f'                                                             # STEP 18
str4 += 'm'                                                             # STEP 19
str4 += 'k'                                                             # STEP 20
str4 += 'z'                                                             # STEP 21
str4 += 'r'                                                             # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
str4 += 'u'                                                             # STEP 24
path3 += "/" + component2                                               # STEP 25
str4 = ""                                                               # STEP 26
result = os0.path.isabs(path3)                                          # STEP 27
component2 = "f"                                                        # STEP 28
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 29
str4 += 'w'                                                             # STEP 30
file0 = opener0(path3,'a')                                              # STEP 31
str4 = ""                                                               # STEP 32
stat2 = os0.lstat(path3)                                                # STEP 33
file0.seek(bytes4)                                                      # STEP 34
str4 += 'n'                                                             # STEP 35
stat3 = os0.fstat(fd0)                                                  # STEP 36
result = file0.readline(bytes3)                                         # STEP 37
stat4 = os0.stat(path3)                                                 # STEP 38
result = file0.readline(bytes4)                                         # STEP 39
file0.truncate()                                                        # STEP 40
str4 += 'g'                                                             # STEP 41
str4 += 'g'                                                             # STEP 42
str4 += " "                                                             # STEP 43
stat0 = os0.stat(path3)                                                 # STEP 44
result = stat3.st_nlink                                                 # STEP 45
str4 += 'i'                                                             # STEP 46
result = file0.readline()                                               # STEP 47
bytes1 = 0                                                              # STEP 48
stat3 = os0.fstat(fd0)                                                  # STEP 49
path3 += "/" + component3                                               # STEP 50
file0.next()                                                            # STEP 51
result = os0.path.isabs(path3)                                          # STEP 52
str4 += 'x'                                                             # STEP 53
str4 += " "                                                             # STEP 54
result = file0.read(bytes4)                                             # STEP 55
result = stat3.st_size                                                  # STEP 56
str4 += 'h'                                                             # STEP 57
os0.write(fd0,str4)                                                     # STEP 58
path3 += "/" + component4                                               # STEP 59
stat3 = os0.stat(path3)                                                 # STEP 60
path3 += "/" + component1                                               # STEP 61
result = file0.read(bytes1)                                             # STEP 62
str4 += 'q'                                                             # STEP 63
component4 = "alpha"                                                    # STEP 64
result = stat2.st_size                                                  # STEP 65
file0.seek(bytes1)                                                      # STEP 66
file0.write(str4)                                                       # STEP 67
component3 = "phi"                                                      # STEP 68
path3 = "/Volumes/ramdisk/test"                                         # STEP 69
result = os0.read(fd0,bytes4)                                           # STEP 70
str4 += 'p'                                                             # STEP 71
path4 = "/Volumes/ramdisk/test"                                         # STEP 72
result = file0.read(bytes3)                                             # STEP 73
stat1 = os0.fstat(fd0)                                                  # STEP 74
file0.write(str4)                                                       # STEP 75
os0.close(fd0)                                                          # STEP 76
str4 += 'n'                                                             # STEP 77
result = file0.read(bytes1)                                             # STEP 78
component1 = "h"                                                        # STEP 79
result = stat3.st_nlink                                                 # STEP 80
result = sorted(os0.listdir(path4))                                     # STEP 81
result = stat2.st_size                                                  # STEP 82
path4 = "/Volumes/ramdisk/test"                                         # STEP 83
str4 += 'g'                                                             # STEP 84
result = stat1.st_size                                                  # STEP 85
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (9) == (0) ',), <traceback object at 0x106845b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1092da098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28440, in act565
    assert (raised == None) == (refRaised == None)
Original test has 85 steps

SAVING TEST AS failure.4446.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "c"                                                         # STEP 0
component3 = "lambda"                                                    # STEP 1
component2 = "phi"                                                       # STEP 2
component1 = "h"                                                         # STEP 3
component4 = "d"                                                         # STEP 4
str1 = ""                                                                # STEP 5
str1 += 'a'                                                              # STEP 6
str1 += 'e'                                                              # STEP 7
str1 += " "                                                              # STEP 8
str1 += " "                                                              # STEP 9
str1 += 'j'                                                             # STEP 10
bytes3 = 0                                                              # STEP 11
os0 = newFakeOS()                                                       # STEP 12
str1 += 'r'                                                             # STEP 13
path0 = "/Volumes/ramdisk/test"                                         # STEP 14
str1 += 'x'                                                             # STEP 15
path0 += "/" + component1                                               # STEP 16
path0 += "/" + component1                                               # STEP 17
result = os0.path.isfile(path0)                                         # STEP 18
path2 = "/Volumes/ramdisk/test"                                         # STEP 19
str1 += 'w'                                                             # STEP 20
component1 = "h"                                                        # STEP 21
str1 += 'b'                                                             # STEP 22
stat4 = os0.lstat(path0)                                                # STEP 23
path2 += "/" + component3                                               # STEP 24
stat0 = os0.stat(path2)                                                 # STEP 25
os0.link(path0,path2)                                                   # STEP 26
os0.link(path0,path0)                                                   # STEP 27
bytes1 = 0                                                              # STEP 28
os0.link(path2,path0)                                                   # STEP 29
component3 = "alpha"                                                    # STEP 30
os0.path.getsize(path0)                                                 # STEP 31
str1 += 'f'                                                             # STEP 32
str1 += 'u'                                                             # STEP 33
result = sorted(os0.listdir(path2))                                     # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
str1 += 'i'                                                             # STEP 36
str1 += 'a'                                                             # STEP 37
str1 += 'b'                                                             # STEP 38
str1 += 'b'                                                             # STEP 39
os0.rename(path0,path2)                                                 # STEP 40
file0 = opener0(path0,'a')                                              # STEP 41
file0 = opener0(path0,'w')                                              # STEP 42
result = os0.path.isdir(path2)                                          # STEP 43
result = os0.path.exists(path0)                                         # STEP 44
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 45
result = os0.path.islink(path0)                                         # STEP 46
os0.close(fd0)                                                          # STEP 47
file0 = opener0(path2)                                                  # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
file0.flush()                                                           # STEP 50
file0.next()                                                            # STEP 51
str1 += 'z'                                                             # STEP 52
stat1 = os0.lstat(path0)                                                # STEP 53
bytes0 = 0                                                              # STEP 54
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 55
str1 += 'i'                                                             # STEP 56
stat4 = os0.stat(path0)                                                 # STEP 57
path0 += "/" + component3                                               # STEP 58
result = file0.readline()                                               # STEP 59
os0.link(path2,path0)                                                   # STEP 60
stat0 = os0.lstat(path0)                                                # STEP 61
str1 += 'u'                                                             # STEP 62
result = os0.path.lexists(path0)                                        # STEP 63
os0.symlink(path2,path2)                                                # STEP 64
os0.mkdir(path0)                                                        # STEP 65
result = file0.readline(bytes1)                                         # STEP 66
path2 += "/" + component2                                               # STEP 67
component3 = "g"                                                        # STEP 68
os0.link(path0,path2)                                                   # STEP 69
component2 = "g"                                                        # STEP 70
stat4 = os0.lstat(path2)                                                # STEP 71
str1 += 'e'                                                             # STEP 72
str1 += 'o'                                                             # STEP 73
os0.symlink(path2,path0)                                                # STEP 74
path0 += "/" + component2                                               # STEP 75
path0 += "/" + component0                                               # STEP 76
result = os0.path.dirname(path0)                                        # STEP 77
os0.close(fd0)                                                          # STEP 78
path0 += "/" + component2                                               # STEP 79
result = os0.path.exists(path2)                                         # STEP 80
str1 += 'f'                                                             # STEP 81
os0.rmdir(path2)                                                        # STEP 82
result = os0.path.isfile(path0)                                         # STEP 83
result = file0.read(bytes1)                                             # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b5f878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28440, in act565
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 68
STOPPING TESTING DUE TO TIMEOUT
42.9208472687 PERCENT COVERED
60.3492569923 TOTAL RUNTIME
809 EXECUTED
80839 TOTAL TEST OPERATIONS
52.6296241283 TIME SPENT EXECUTING TEST OPERATIONS
4.10785365105 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.051860332489 TIME SPENT CHECKING PROPERTIES
52.6814844608 TOTAL TIME SPENT RUNNING SUT
2.43942070007 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
2 FAILED
0 REPEATS OF FAILURES
2 ACTUAL DISTINCT FAILURES

FAILURE 0
component2 = "epsilon"                                                   # STEP 0
component4 = "gamma"                                                     # STEP 1
os0 = newFakeOS()                                                        # STEP 2
bytes3 = 0                                                               # STEP 3
component0 = "delta"                                                     # STEP 4
component3 = "phi"                                                       # STEP 5
component1 = "epsilon"                                                   # STEP 6
bytes4 = 0                                                               # STEP 7
opener0 = newFakeOpener(os0)                                             # STEP 8
str4 = ""                                                                # STEP 9
str4 += 'w'                                                             # STEP 10
str4 += 'g'                                                             # STEP 11
str4 += 'q'                                                             # STEP 12
str4 += 'u'                                                             # STEP 13
str4 += 'q'                                                             # STEP 14
str4 += 'j'                                                             # STEP 15
str4 += 'b'                                                             # STEP 16
str4 += 'z'                                                             # STEP 17
str4 += 'f'                                                             # STEP 18
str4 += 'm'                                                             # STEP 19
str4 += 'k'                                                             # STEP 20
str4 += 'z'                                                             # STEP 21
str4 += 'r'                                                             # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
str4 += 'u'                                                             # STEP 24
path3 += "/" + component2                                               # STEP 25
str4 = ""                                                               # STEP 26
result = os0.path.isabs(path3)                                          # STEP 27
component2 = "f"                                                        # STEP 28
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 29
str4 += 'w'                                                             # STEP 30
file0 = opener0(path3,'a')                                              # STEP 31
str4 = ""                                                               # STEP 32
stat2 = os0.lstat(path3)                                                # STEP 33
file0.seek(bytes4)                                                      # STEP 34
str4 += 'n'                                                             # STEP 35
stat3 = os0.fstat(fd0)                                                  # STEP 36
result = file0.readline(bytes3)                                         # STEP 37
stat4 = os0.stat(path3)                                                 # STEP 38
result = file0.readline(bytes4)                                         # STEP 39
file0.truncate()                                                        # STEP 40
str4 += 'g'                                                             # STEP 41
str4 += 'g'                                                             # STEP 42
str4 += " "                                                             # STEP 43
stat0 = os0.stat(path3)                                                 # STEP 44
result = stat3.st_nlink                                                 # STEP 45
str4 += 'i'                                                             # STEP 46
result = file0.readline()                                               # STEP 47
bytes1 = 0                                                              # STEP 48
stat3 = os0.fstat(fd0)                                                  # STEP 49
path3 += "/" + component3                                               # STEP 50
file0.next()                                                            # STEP 51
result = os0.path.isabs(path3)                                          # STEP 52
str4 += 'x'                                                             # STEP 53
str4 += " "                                                             # STEP 54
result = file0.read(bytes4)                                             # STEP 55
result = stat3.st_size                                                  # STEP 56
str4 += 'h'                                                             # STEP 57
os0.write(fd0,str4)                                                     # STEP 58
path3 += "/" + component4                                               # STEP 59
stat3 = os0.stat(path3)                                                 # STEP 60
path3 += "/" + component1                                               # STEP 61
result = file0.read(bytes1)                                             # STEP 62
str4 += 'q'                                                             # STEP 63
component4 = "alpha"                                                    # STEP 64
result = stat2.st_size                                                  # STEP 65
file0.seek(bytes1)                                                      # STEP 66
file0.write(str4)                                                       # STEP 67
component3 = "phi"                                                      # STEP 68
path3 = "/Volumes/ramdisk/test"                                         # STEP 69
result = os0.read(fd0,bytes4)                                           # STEP 70
str4 += 'p'                                                             # STEP 71
path4 = "/Volumes/ramdisk/test"                                         # STEP 72
result = file0.read(bytes3)                                             # STEP 73
stat1 = os0.fstat(fd0)                                                  # STEP 74
file0.write(str4)                                                       # STEP 75
os0.close(fd0)                                                          # STEP 76
str4 += 'n'                                                             # STEP 77
result = file0.read(bytes1)                                             # STEP 78
component1 = "h"                                                        # STEP 79
result = stat3.st_nlink                                                 # STEP 80
result = sorted(os0.listdir(path4))                                     # STEP 81
result = stat2.st_size                                                  # STEP 82
path4 = "/Volumes/ramdisk/test"                                         # STEP 83
str4 += 'g'                                                             # STEP 84
result = stat1.st_size                                                  # STEP 85
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (9) == (0) ',), <traceback object at 0x106845b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21826, in act458
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
component0 = "c"                                                         # STEP 0
component3 = "lambda"                                                    # STEP 1
component2 = "phi"                                                       # STEP 2
component1 = "h"                                                         # STEP 3
component4 = "d"                                                         # STEP 4
str1 = ""                                                                # STEP 5
str1 += 'a'                                                              # STEP 6
str1 += 'e'                                                              # STEP 7
str1 += " "                                                              # STEP 8
str1 += " "                                                              # STEP 9
str1 += 'j'                                                             # STEP 10
bytes3 = 0                                                              # STEP 11
os0 = newFakeOS()                                                       # STEP 12
str1 += 'r'                                                             # STEP 13
path0 = "/Volumes/ramdisk/test"                                         # STEP 14
str1 += 'x'                                                             # STEP 15
path0 += "/" + component1                                               # STEP 16
path0 += "/" + component1                                               # STEP 17
result = os0.path.isfile(path0)                                         # STEP 18
path2 = "/Volumes/ramdisk/test"                                         # STEP 19
str1 += 'w'                                                             # STEP 20
component1 = "h"                                                        # STEP 21
str1 += 'b'                                                             # STEP 22
stat4 = os0.lstat(path0)                                                # STEP 23
path2 += "/" + component3                                               # STEP 24
stat0 = os0.stat(path2)                                                 # STEP 25
os0.link(path0,path2)                                                   # STEP 26
os0.link(path0,path0)                                                   # STEP 27
bytes1 = 0                                                              # STEP 28
os0.link(path2,path0)                                                   # STEP 29
component3 = "alpha"                                                    # STEP 30
os0.path.getsize(path0)                                                 # STEP 31
str1 += 'f'                                                             # STEP 32
str1 += 'u'                                                             # STEP 33
result = sorted(os0.listdir(path2))                                     # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
str1 += 'i'                                                             # STEP 36
str1 += 'a'                                                             # STEP 37
str1 += 'b'                                                             # STEP 38
str1 += 'b'                                                             # STEP 39
os0.rename(path0,path2)                                                 # STEP 40
file0 = opener0(path0,'a')                                              # STEP 41
file0 = opener0(path0,'w')                                              # STEP 42
result = os0.path.isdir(path2)                                          # STEP 43
result = os0.path.exists(path0)                                         # STEP 44
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 45
result = os0.path.islink(path0)                                         # STEP 46
os0.close(fd0)                                                          # STEP 47
file0 = opener0(path2)                                                  # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
file0.flush()                                                           # STEP 50
file0.next()                                                            # STEP 51
str1 += 'z'                                                             # STEP 52
stat1 = os0.lstat(path0)                                                # STEP 53
bytes0 = 0                                                              # STEP 54
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 55
str1 += 'i'                                                             # STEP 56
stat4 = os0.stat(path0)                                                 # STEP 57
path0 += "/" + component3                                               # STEP 58
result = file0.readline()                                               # STEP 59
os0.link(path2,path0)                                                   # STEP 60
stat0 = os0.lstat(path0)                                                # STEP 61
str1 += 'u'                                                             # STEP 62
result = os0.path.lexists(path0)                                        # STEP 63
os0.symlink(path2,path2)                                                # STEP 64
os0.mkdir(path0)                                                        # STEP 65
result = file0.readline(bytes1)                                         # STEP 66
path2 += "/" + component2                                               # STEP 67
component3 = "g"                                                        # STEP 68
os0.link(path0,path2)                                                   # STEP 69
component2 = "g"                                                        # STEP 70
stat4 = os0.lstat(path2)                                                # STEP 71
str1 += 'e'                                                             # STEP 72
str1 += 'o'                                                             # STEP 73
os0.symlink(path2,path0)                                                # STEP 74
path0 += "/" + component2                                               # STEP 75
path0 += "/" + component0                                               # STEP 76
result = os0.path.dirname(path0)                                        # STEP 77
os0.close(fd0)                                                          # STEP 78
path0 += "/" + component2                                               # STEP 79
result = os0.path.exists(path2)                                         # STEP 80
str1 += 'f'                                                             # STEP 81
os0.rmdir(path2)                                                        # STEP 82
result = os0.path.isfile(path0)                                         # STEP 83
result = file0.read(bytes1)                                             # STEP 84
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b5f878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28440, in act565
    assert (raised == None) == (refRaised == None)
1188 BRANCHES COVERED
911 STATEMENTS COVERED
