Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4143.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a83dc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 95 steps

SAVING TEST AS failure.4143.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component1 = "h"                                                         # STEP 1
str1 = ""                                                                # STEP 2
bytes0 = 0                                                               # STEP 3
bytes1 = 0                                                               # STEP 4
str1 += " "                                                              # STEP 5
component2 = "h"                                                         # STEP 6
str1 += " "                                                              # STEP 7
str2 = ""                                                                # STEP 8
path1 = "/Volumes/ramdisk/test"                                          # STEP 9
path2 = "/Volumes/ramdisk/test"                                         # STEP 10
path2 += "/" + component2                                               # STEP 11
os0.rename(path2,path1)                                                 # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
result = os0.path.lexists(path1)                                        # STEP 14
stat0 = os0.stat(path2)                                                 # STEP 15
stat4 = os0.lstat(path2)                                                # STEP 16
os0.remove(path2)                                                       # STEP 17
os0.rmdir(path2)                                                        # STEP 18
os0.link(path2,path2)                                                   # STEP 19
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 20
os0.rename(path2,path1)                                                 # STEP 21
result = os0.path.islink(path1)                                         # STEP 22
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
os0.makedirs(path1)                                                     # STEP 25
os0.symlink(path1,path1)                                                # STEP 26
os0.rename(path2,path1)                                                 # STEP 27
os0.mkdir(path2)                                                        # STEP 28
bytes0 += 1                                                             # STEP 29
result = os0.readlink(path1)                                            # STEP 30
path1 += "/" + component1                                               # STEP 31
os0.remove(path2)                                                       # STEP 32
os0.link(path1,path2)                                                   # STEP 33
os0.mkdir(path1)                                                        # STEP 34
path4 = "/Volumes/ramdisk/test"                                         # STEP 35
result = os0.path.isabs(path2)                                          # STEP 36
os0.rmdir(path1)                                                        # STEP 37
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 38
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 39
stat4 = os0.stat(path1)                                                 # STEP 40
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 41
result = os0.read(fd0,bytes1)                                           # STEP 42
result = os0.path.isfile(path4)                                         # STEP 43
os0.link(path2,path2)                                                   # STEP 44
result = os0.path.dirname(path4)                                        # STEP 45
bytes0 += 1                                                             # STEP 46
path3 = "/Volumes/ramdisk/test"                                         # STEP 47
result = sorted(os0.listdir(path1))                                     # STEP 48
stat4 = os0.stat(path1)                                                 # STEP 49
stat2 = os0.fstat(fd0)                                                  # STEP 50
result = os0.read(fd0,bytes1)                                           # STEP 51
path4 = "/Volumes/ramdisk/test"                                         # STEP 52
bytes4 = 0                                                              # STEP 53
result = os0.path.lexists(path2)                                        # STEP 54
result = os0.path.lexists(path1)                                        # STEP 55
result = os0.path.dirname(path4)                                        # STEP 56
result = sorted(os0.listdir(path2))                                     # STEP 57
result = os0.path.isabs(path1)                                          # STEP 58
str2 += " "                                                             # STEP 59
result = os0.path.isdir(path3)                                          # STEP 60
os0.symlink(path3,path1)                                                # STEP 61
str0 = ""                                                               # STEP 62
str4 = ""                                                               # STEP 63
path4 += "/" + component1                                               # STEP 64
result = os0.readlink(path2)                                            # STEP 65
result = stat4.st_nlink                                                 # STEP 66
os0.rename(path4,path3)                                                 # STEP 67
os0.makedirs(path1)                                                     # STEP 68
os0.makedirs(path4)                                                     # STEP 69
result = os0.read(fd0,bytes1)                                           # STEP 70
result = os0.path.exists(path3)                                         # STEP 71
os0.mkdir(path1)                                                        # STEP 72
os0.mkdir(path3)                                                        # STEP 73
os0.close(fd0)                                                          # STEP 74
opener0 = newFakeOpener(os0)                                            # STEP 75
result = os0.path.exists(path1)                                         # STEP 76
stat4 = os0.stat(path1)                                                 # STEP 77
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 78
bytes2 = 0                                                              # STEP 79
result = os0.path.exists(path3)                                         # STEP 80
os0.remove(path2)                                                       # STEP 81
file0 = opener0(path3,'r')                                              # STEP 82
result = os0.path.isfile(path3)                                         # STEP 83
result = os0.path.exists(path1)                                         # STEP 84
os0.close(fd0)                                                          # STEP 85
file0 = opener0(path1,'a')                                              # STEP 86
result = os0.path.isabs(path1)                                          # STEP 87
result = os0.path.lexists(path2)                                        # STEP 88
os0.remove(path3)                                                       # STEP 89
result = os0.read(fd0,bytes4)                                           # STEP 90
str1 += 'i'                                                             # STEP 91
result = os0.readlink(path4)                                            # STEP 92
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 93
result = file0.read(bytes0)                                             # STEP 94
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106c8dcb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064ac5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 73 steps

SAVING TEST AS failure.4143.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes3 = 0                                                               # STEP 2
bytes3 += 1                                                              # STEP 3
bytes4 = 0                                                               # STEP 4
component0 = "gamma"                                                     # STEP 5
component1 = "epsilon"                                                   # STEP 6
os0 = newFakeOS()                                                        # STEP 7
result = os0.path.islink(path1)                                          # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.abspath(path4)                                        # STEP 10
result = os0.path.exists(path4)                                         # STEP 11
bytes0 = 0                                                              # STEP 12
os0.link(path1,path4)                                                   # STEP 13
opener0 = newFakeOpener(os0)                                            # STEP 14
os0.link(path4,path1)                                                   # STEP 15
result = os0.path.islink(path2)                                         # STEP 16
result = os0.path.isfile(path4)                                         # STEP 17
os0.mkdir(path2)                                                        # STEP 18
str2 = ""                                                               # STEP 19
os0.mkdir(path1)                                                        # STEP 20
os0.makedirs(path2)                                                     # STEP 21
file0 = opener0(path1,'a')                                              # STEP 22
result = os0.path.isfile(path4)                                         # STEP 23
os0.remove(path2)                                                       # STEP 24
file0 = opener0(path2)                                                  # STEP 25
str2 += 'y'                                                             # STEP 26
file0 = opener0(path4,'r')                                              # STEP 27
result = os0.path.lexists(path1)                                        # STEP 28
result = os0.path.dirname(path1)                                        # STEP 29
str2 += " "                                                             # STEP 30
result = os0.path.islink(path1)                                         # STEP 31
path2 += "/" + component1                                               # STEP 32
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 33
result = sorted(os0.listdir(path4))                                     # STEP 34
result = os0.path.dirname(path2)                                        # STEP 35
file0 = opener0(path1,'a')                                              # STEP 36
component1 = "f"                                                        # STEP 37
os0.rmdir(path2)                                                        # STEP 38
os0.path.getsize(path2)                                                 # STEP 39
file0 = opener0(path1,'w')                                              # STEP 40
result = os0.path.exists(path1)                                         # STEP 41
os0.path.getsize(path2)                                                 # STEP 42
os0.mkdir(path4)                                                        # STEP 43
bytes3 = 0                                                              # STEP 44
os0.symlink(path1,path4)                                                # STEP 45
os0.close(fd0)                                                          # STEP 46
result = os0.path.isfile(path2)                                         # STEP 47
os0.write(fd0,str2)                                                     # STEP 48
os0.makedirs(path2)                                                     # STEP 49
stat4 = os0.lstat(path2)                                                # STEP 50
file0 = opener0(path4,'r')                                              # STEP 51
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 52
os0.rename(path2,path1)                                                 # STEP 53
file0 = opener0(path2,'w')                                              # STEP 54
result = os0.path.lexists(path4)                                        # STEP 55
result = os0.path.isdir(path2)                                          # STEP 56
result = stat4.st_nlink                                                 # STEP 57
bytes2 = 0                                                              # STEP 58
stat3 = os0.lstat(path2)                                                # STEP 59
bytes0 += 1                                                             # STEP 60
os0.mkdir(path2)                                                        # STEP 61
os0.rename(path2,path1)                                                 # STEP 62
os0.remove(path4)                                                       # STEP 63
result = stat4.st_size                                                  # STEP 64
stat4 = os0.fstat(fd0)                                                  # STEP 65
os0.write(fd0,str2)                                                     # STEP 66
str2 += " "                                                             # STEP 67
result = stat3.st_nlink                                                 # STEP 68
result = stat3.st_nlink                                                 # STEP 69
bytes0 = 0                                                              # STEP 70
result = os0.path.isfile(path1)                                         # STEP 71
result = file0.read(bytes4)                                             # STEP 72
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10653aea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #171 STEP #0 (0:00:30.002515) Fri Jul 21 23:15:03 2017 [ 901 stmts 1171 branches ] 16968 TOTAL ACTIONS (565.552586379/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (2) == (0) ',), <traceback object at 0x107381cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 65 steps

SAVING TEST AS failure.4143.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "g"                                                         # STEP 0
component1 = "a"                                                         # STEP 1
str2 = ""                                                                # STEP 2
os0 = newFakeOS()                                                        # STEP 3
component2 = "beta"                                                      # STEP 4
bytes1 = 0                                                               # STEP 5
bytes0 = 0                                                               # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.isdir(path2)                                           # STEP 8
result = os0.path.islink(path2)                                          # STEP 9
result = os0.path.abspath(path2)                                        # STEP 10
result = os0.path.isdir(path2)                                          # STEP 11
os0.remove(path2)                                                       # STEP 12
os0.mkdir(path2)                                                        # STEP 13
os0.makedirs(path2)                                                     # STEP 14
str2 += 'q'                                                             # STEP 15
bytes0 += 1                                                             # STEP 16
result = os0.path.dirname(path2)                                        # STEP 17
result = os0.path.isdir(path2)                                          # STEP 18
result = os0.path.abspath(path2)                                        # STEP 19
result = os0.path.abspath(path2)                                        # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
os0.symlink(path2,path2)                                                # STEP 22
path2 += "/" + component0                                               # STEP 23
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
stat2 = os0.lstat(path2)                                                # STEP 25
bytes2 = 0                                                              # STEP 26
os0.symlink(path2,path2)                                                # STEP 27
component3 = "h"                                                        # STEP 28
path3 = "/Volumes/ramdisk/test"                                         # STEP 29
os0.mkdir(path3)                                                        # STEP 30
str2 += " "                                                             # STEP 31
os0.link(path3,path3)                                                   # STEP 32
os0.symlink(path3,path3)                                                # STEP 33
os0.symlink(path2,path2)                                                # STEP 34
result = os0.path.islink(path3)                                         # STEP 35
result = os0.readlink(path3)                                            # STEP 36
result = os0.path.islink(path3)                                         # STEP 37
os0.rmdir(path2)                                                        # STEP 38
file0 = opener0(path2,'a')                                              # STEP 39
result = file0.readline()                                               # STEP 40
stat0 = os0.lstat(path2)                                                # STEP 41
os0.close(fd0)                                                          # STEP 42
component4 = "phi"                                                      # STEP 43
result = os0.path.isabs(path2)                                          # STEP 44
os0.symlink(path3,path3)                                                # STEP 45
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 46
result = stat2.st_nlink                                                 # STEP 47
os0.path.getsize(path2)                                                 # STEP 48
result = stat2.st_nlink                                                 # STEP 49
result = os0.path.abspath(path3)                                        # STEP 50
bytes2 += 1                                                             # STEP 51
result = os0.path.abspath(path3)                                        # STEP 52
result = file0.readlines()                                              # STEP 53
os0.makedirs(path3)                                                     # STEP 54
file0.next()                                                            # STEP 55
file0.write(str2)                                                       # STEP 56
os0.rename(path2,path3)                                                 # STEP 57
result = os0.path.exists(path3)                                         # STEP 58
result = file0.read()                                                   # STEP 59
result = stat2.st_nlink                                                 # STEP 60
stat2 = os0.stat(path2)                                                 # STEP 61
os0.rename(path2,path3)                                                 # STEP 62
bytes1 += 1                                                             # STEP 63
result = stat2.st_size                                                  # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (2) == (0) ',), <traceback object at 0x106df9518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a1d48c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 83 steps

SAVING TEST AS failure.4143.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "gamma"                                                     # STEP 0
str4 = ""                                                                # STEP 1
os0 = newFakeOS()                                                        # STEP 2
str4 += " "                                                              # STEP 3
component2 = "c"                                                         # STEP 4
str4 += " "                                                              # STEP 5
component3 = "beta"                                                      # STEP 6
component1 = "a"                                                         # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
result = os0.path.dirname(path1)                                         # STEP 9
path1 += "/" + component1                                               # STEP 10
result = os0.path.islink(path1)                                         # STEP 11
result = os0.path.islink(path1)                                         # STEP 12
result = os0.path.isdir(path1)                                          # STEP 13
stat3 = os0.stat(path1)                                                 # STEP 14
result = os0.path.exists(path1)                                         # STEP 15
component1 = "gamma"                                                    # STEP 16
str4 += " "                                                             # STEP 17
os0.makedirs(path1)                                                     # STEP 18
os0.mkdir(path1)                                                        # STEP 19
result = os0.readlink(path1)                                            # STEP 20
os0.remove(path1)                                                       # STEP 21
bytes1 = 0                                                              # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
os0.rmdir(path1)                                                        # STEP 24
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 25
result = os0.path.dirname(path3)                                        # STEP 26
path0 = "/Volumes/ramdisk/test"                                         # STEP 27
component4 = "lambda"                                                   # STEP 28
result = os0.path.isabs(path0)                                          # STEP 29
result = sorted(os0.listdir(path3))                                     # STEP 30
os0.mkdir(path3)                                                        # STEP 31
str4 += " "                                                             # STEP 32
result = os0.path.lexists(path3)                                        # STEP 33
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 34
result = os0.path.islink(path0)                                         # STEP 35
result = os0.path.lexists(path0)                                        # STEP 36
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 37
os0.mkdir(path0)                                                        # STEP 38
bytes1 += 1                                                             # STEP 39
str4 += " "                                                             # STEP 40
os0.makedirs(path3)                                                     # STEP 41
result = os0.read(fd0,bytes1)                                           # STEP 42
result = os0.path.isdir(path3)                                          # STEP 43
result = os0.path.abspath(path3)                                        # STEP 44
opener0 = newFakeOpener(os0)                                            # STEP 45
str4 += 'l'                                                             # STEP 46
os0.write(fd0,str4)                                                     # STEP 47
result = os0.path.isdir(path0)                                          # STEP 48
os0.remove(path1)                                                       # STEP 49
stat3 = os0.lstat(path1)                                                # STEP 50
os0.makedirs(path0)                                                     # STEP 51
result = sorted(os0.listdir(path1))                                     # STEP 52
bytes1 = 0                                                              # STEP 53
str4 += " "                                                             # STEP 54
result = os0.readlink(path1)                                            # STEP 55
os0.write(fd0,str4)                                                     # STEP 56
os0.symlink(path1,path1)                                                # STEP 57
os0.mkdir(path1)                                                        # STEP 58
result = os0.read(fd0,bytes1)                                           # STEP 59
stat2 = os0.fstat(fd0)                                                  # STEP 60
os0.close(fd0)                                                          # STEP 61
result = os0.readlink(path1)                                            # STEP 62
str4 += 'v'                                                             # STEP 63
os0.symlink(path1,path1)                                                # STEP 64
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 65
path3 += "/" + component1                                               # STEP 66
os0.link(path0,path1)                                                   # STEP 67
file0 = opener0(path3,'a')                                              # STEP 68
result = os0.path.exists(path3)                                         # STEP 69
result = os0.readlink(path3)                                            # STEP 70
str0 = ""                                                               # STEP 71
stat4 = os0.fstat(fd0)                                                  # STEP 72
result = stat2.st_nlink                                                 # STEP 73
str0 += 'h'                                                             # STEP 74
file0.flush()                                                           # STEP 75
result = file0.readline(bytes1)                                         # STEP 76
file0.flush()                                                           # STEP 77
str0 += 'l'                                                             # STEP 78
stat0 = os0.stat(path3)                                                 # STEP 79
str3 = ""                                                               # STEP 80
result = os0.read(fd0,bytes1)                                           # STEP 81
result = file0.readlines()                                              # STEP 82
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104a0a9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x105983098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 84 steps

SAVING TEST AS failure.4143.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
bytes2 += 1                                                              # STEP 1
bytes2 += 1                                                              # STEP 2
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.isabs(path1)                                           # STEP 6
result = sorted(os0.listdir(path4))                                      # STEP 7
component3 = "c"                                                         # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.isabs(path4)                                          # STEP 10
os0.makedirs(path4)                                                     # STEP 11
os0.symlink(path1,path1)                                                # STEP 12
bytes3 = 0                                                              # STEP 13
os0.mkdir(path4)                                                        # STEP 14
os0.mkdir(path1)                                                        # STEP 15
path1 += "/" + component3                                               # STEP 16
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 17
os0.symlink(path4,path1)                                                # STEP 18
os0.makedirs(path4)                                                     # STEP 19
os0.makedirs(path4)                                                     # STEP 20
result = os0.path.isdir(path1)                                          # STEP 21
os0.symlink(path1,path1)                                                # STEP 22
os0.close(fd0)                                                          # STEP 23
os0.symlink(path1,path4)                                                # STEP 24
os0.makedirs(path1)                                                     # STEP 25
os0.remove(path1)                                                       # STEP 26
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 27
os0.rmdir(path1)                                                        # STEP 28
os0.rename(path1,path4)                                                 # STEP 29
result = sorted(os0.listdir(path1))                                     # STEP 30
os0.rmdir(path1)                                                        # STEP 31
path1 += "/" + component3                                               # STEP 32
os0.rename(path1,path4)                                                 # STEP 33
result = os0.path.isfile(path1)                                         # STEP 34
result = os0.path.isabs(path4)                                          # STEP 35
os0.path.getsize(path1)                                                 # STEP 36
result = os0.path.islink(path4)                                         # STEP 37
os0.link(path4,path4)                                                   # STEP 38
result = sorted(os0.listdir(path1))                                     # STEP 39
bytes2 += 1                                                             # STEP 40
os0.link(path4,path4)                                                   # STEP 41
bytes2 = 0                                                              # STEP 42
result = os0.path.exists(path4)                                         # STEP 43
result = os0.read(fd0,bytes3)                                           # STEP 44
opener0 = newFakeOpener(os0)                                            # STEP 45
os0.makedirs(path1)                                                     # STEP 46
os0.rename(path1,path4)                                                 # STEP 47
result = os0.path.dirname(path4)                                        # STEP 48
result = os0.path.dirname(path4)                                        # STEP 49
result = os0.path.dirname(path4)                                        # STEP 50
result = os0.readlink(path4)                                            # STEP 51
result = os0.path.isfile(path1)                                         # STEP 52
str4 = ""                                                               # STEP 53
component4 = "alpha"                                                    # STEP 54
os0.rmdir(path1)                                                        # STEP 55
component3 = "omega"                                                    # STEP 56
stat0 = os0.lstat(path1)                                                # STEP 57
os0.makedirs(path4)                                                     # STEP 58
file0 = opener0(path1,'w')                                              # STEP 59
stat0 = os0.lstat(path1)                                                # STEP 60
str3 = ""                                                               # STEP 61
os0.link(path1,path4)                                                   # STEP 62
result = os0.path.isdir(path4)                                          # STEP 63
file0.write(str4)                                                       # STEP 64
result = stat0.st_size                                                  # STEP 65
os0.path.getsize(path1)                                                 # STEP 66
os0.mkdir(path4)                                                        # STEP 67
bytes0 = 0                                                              # STEP 68
os0.path.getsize(path1)                                                 # STEP 69
str2 = ""                                                               # STEP 70
result = os0.read(fd0,bytes3)                                           # STEP 71
os0.close(fd0)                                                          # STEP 72
os0.rename(path1,path4)                                                 # STEP 73
file0.next()                                                            # STEP 74
result = os0.path.islink(path4)                                         # STEP 75
os0.close(fd0)                                                          # STEP 76
bytes3 = 0                                                              # STEP 77
bytes3 += 1                                                             # STEP 78
file0.seek(bytes0)                                                      # STEP 79
str2 += " "                                                             # STEP 80
result = sorted(os0.listdir(path4))                                     # STEP 81
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 82
result = file0.readline(bytes3)                                         # STEP 83
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106772518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x1063a0368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28914, in act573
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 66 steps

SAVING TEST AS failure.4143.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "phi"                                                       # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str1 = ""                                                                # STEP 2
bytes3 = 0                                                               # STEP 3
str0 = ""                                                                # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
str0 += " "                                                              # STEP 6
bytes3 += 1                                                              # STEP 7
os0.link(path0,path0)                                                    # STEP 8
str0 += 'z'                                                              # STEP 9
os0.remove(path0)                                                       # STEP 10
os0.makedirs(path0)                                                     # STEP 11
result = os0.path.isdir(path0)                                          # STEP 12
result = os0.path.isabs(path0)                                          # STEP 13
os0.makedirs(path0)                                                     # STEP 14
str1 += " "                                                             # STEP 15
result = os0.path.islink(path0)                                         # STEP 16
str1 += " "                                                             # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
result = os0.readlink(path0)                                            # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = os0.path.isfile(path0)                                         # STEP 21
result = os0.readlink(path0)                                            # STEP 22
file0 = opener0(path0,'a')                                              # STEP 23
result = os0.path.exists(path0)                                         # STEP 24
path3 = "/Volumes/ramdisk/test"                                         # STEP 25
path4 = "/Volumes/ramdisk/test"                                         # STEP 26
path2 = "/Volumes/ramdisk/test"                                         # STEP 27
result = os0.path.abspath(path3)                                        # STEP 28
file0 = opener0(path4,'w')                                              # STEP 29
bytes3 = 0                                                              # STEP 30
path2 += "/" + component1                                               # STEP 31
result = os0.path.islink(path0)                                         # STEP 32
path0 += "/" + component1                                               # STEP 33
stat1 = os0.stat(path0)                                                 # STEP 34
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 35
bytes3 += 1                                                             # STEP 36
component0 = "gamma"                                                    # STEP 37
os0.makedirs(path2)                                                     # STEP 38
file0 = opener0(path0)                                                  # STEP 39
result = os0.path.abspath(path0)                                        # STEP 40
result = os0.path.isfile(path0)                                         # STEP 41
os0.mkdir(path2)                                                        # STEP 42
result = os0.path.abspath(path2)                                        # STEP 43
result = file0.read()                                                   # STEP 44
os0.link(path3,path0)                                                   # STEP 45
result = os0.readlink(path3)                                            # STEP 46
result = file0.readline(bytes3)                                         # STEP 47
os0.write(fd0,str1)                                                     # STEP 48
file0.truncate()                                                        # STEP 49
file0.seek(bytes3)                                                      # STEP 50
os0.mkdir(path0)                                                        # STEP 51
stat4 = os0.lstat(path2)                                                # STEP 52
stat2 = os0.stat(path0)                                                 # STEP 53
result = sorted(os0.listdir(path3))                                     # STEP 54
result = stat2.st_nlink                                                 # STEP 55
file0.flush()                                                           # STEP 56
result = os0.path.exists(path3)                                         # STEP 57
result = os0.path.isabs(path2)                                          # STEP 58
result = os0.path.isfile(path4)                                         # STEP 59
os0.rmdir(path2)                                                        # STEP 60
str1 += " "                                                             # STEP 61
os0.symlink(path3,path3)                                                # STEP 62
file0.next()                                                            # STEP 63
component4 = "phi"                                                      # STEP 64
result = file0.readline(bytes3)                                         # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x104fbf170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28914, in act573
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 6
STOPPING TESTING DUE TO TIMEOUT
42.6607209216 PERCENT COVERED
60.3208601475 TOTAL RUNTIME
340 EXECUTED
33772 TOTAL TEST OPERATIONS
41.7981066704 TIME SPENT EXECUTING TEST OPERATIONS
16.2905023098 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0238184928894 TIME SPENT CHECKING PROPERTIES
41.8219251633 TOTAL TIME SPENT RUNNING SUT
0.990570306778 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
6 FAILED
0 REPEATS OF FAILURES
6 ACTUAL DISTINCT FAILURES

FAILURE 0
os0 = newFakeOS()                                                        # STEP 0
component1 = "h"                                                         # STEP 1
str1 = ""                                                                # STEP 2
bytes0 = 0                                                               # STEP 3
bytes1 = 0                                                               # STEP 4
str1 += " "                                                              # STEP 5
component2 = "h"                                                         # STEP 6
str1 += " "                                                              # STEP 7
str2 = ""                                                                # STEP 8
path1 = "/Volumes/ramdisk/test"                                          # STEP 9
path2 = "/Volumes/ramdisk/test"                                         # STEP 10
path2 += "/" + component2                                               # STEP 11
os0.rename(path2,path1)                                                 # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
result = os0.path.lexists(path1)                                        # STEP 14
stat0 = os0.stat(path2)                                                 # STEP 15
stat4 = os0.lstat(path2)                                                # STEP 16
os0.remove(path2)                                                       # STEP 17
os0.rmdir(path2)                                                        # STEP 18
os0.link(path2,path2)                                                   # STEP 19
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 20
os0.rename(path2,path1)                                                 # STEP 21
result = os0.path.islink(path1)                                         # STEP 22
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
os0.makedirs(path1)                                                     # STEP 25
os0.symlink(path1,path1)                                                # STEP 26
os0.rename(path2,path1)                                                 # STEP 27
os0.mkdir(path2)                                                        # STEP 28
bytes0 += 1                                                             # STEP 29
result = os0.readlink(path1)                                            # STEP 30
path1 += "/" + component1                                               # STEP 31
os0.remove(path2)                                                       # STEP 32
os0.link(path1,path2)                                                   # STEP 33
os0.mkdir(path1)                                                        # STEP 34
path4 = "/Volumes/ramdisk/test"                                         # STEP 35
result = os0.path.isabs(path2)                                          # STEP 36
os0.rmdir(path1)                                                        # STEP 37
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 38
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 39
stat4 = os0.stat(path1)                                                 # STEP 40
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 41
result = os0.read(fd0,bytes1)                                           # STEP 42
result = os0.path.isfile(path4)                                         # STEP 43
os0.link(path2,path2)                                                   # STEP 44
result = os0.path.dirname(path4)                                        # STEP 45
bytes0 += 1                                                             # STEP 46
path3 = "/Volumes/ramdisk/test"                                         # STEP 47
result = sorted(os0.listdir(path1))                                     # STEP 48
stat4 = os0.stat(path1)                                                 # STEP 49
stat2 = os0.fstat(fd0)                                                  # STEP 50
result = os0.read(fd0,bytes1)                                           # STEP 51
path4 = "/Volumes/ramdisk/test"                                         # STEP 52
bytes4 = 0                                                              # STEP 53
result = os0.path.lexists(path2)                                        # STEP 54
result = os0.path.lexists(path1)                                        # STEP 55
result = os0.path.dirname(path4)                                        # STEP 56
result = sorted(os0.listdir(path2))                                     # STEP 57
result = os0.path.isabs(path1)                                          # STEP 58
str2 += " "                                                             # STEP 59
result = os0.path.isdir(path3)                                          # STEP 60
os0.symlink(path3,path1)                                                # STEP 61
str0 = ""                                                               # STEP 62
str4 = ""                                                               # STEP 63
path4 += "/" + component1                                               # STEP 64
result = os0.readlink(path2)                                            # STEP 65
result = stat4.st_nlink                                                 # STEP 66
os0.rename(path4,path3)                                                 # STEP 67
os0.makedirs(path1)                                                     # STEP 68
os0.makedirs(path4)                                                     # STEP 69
result = os0.read(fd0,bytes1)                                           # STEP 70
result = os0.path.exists(path3)                                         # STEP 71
os0.mkdir(path1)                                                        # STEP 72
os0.mkdir(path3)                                                        # STEP 73
os0.close(fd0)                                                          # STEP 74
opener0 = newFakeOpener(os0)                                            # STEP 75
result = os0.path.exists(path1)                                         # STEP 76
stat4 = os0.stat(path1)                                                 # STEP 77
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 78
bytes2 = 0                                                              # STEP 79
result = os0.path.exists(path3)                                         # STEP 80
os0.remove(path2)                                                       # STEP 81
file0 = opener0(path3,'r')                                              # STEP 82
result = os0.path.isfile(path3)                                         # STEP 83
result = os0.path.exists(path1)                                         # STEP 84
os0.close(fd0)                                                          # STEP 85
file0 = opener0(path1,'a')                                              # STEP 86
result = os0.path.isabs(path1)                                          # STEP 87
result = os0.path.lexists(path2)                                        # STEP 88
os0.remove(path3)                                                       # STEP 89
result = os0.read(fd0,bytes4)                                           # STEP 90
str1 += 'i'                                                             # STEP 91
result = os0.readlink(path4)                                            # STEP 92
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 93
result = file0.read(bytes0)                                             # STEP 94
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106c8dcb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes3 = 0                                                               # STEP 2
bytes3 += 1                                                              # STEP 3
bytes4 = 0                                                               # STEP 4
component0 = "gamma"                                                     # STEP 5
component1 = "epsilon"                                                   # STEP 6
os0 = newFakeOS()                                                        # STEP 7
result = os0.path.islink(path1)                                          # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.abspath(path4)                                        # STEP 10
result = os0.path.exists(path4)                                         # STEP 11
bytes0 = 0                                                              # STEP 12
os0.link(path1,path4)                                                   # STEP 13
opener0 = newFakeOpener(os0)                                            # STEP 14
os0.link(path4,path1)                                                   # STEP 15
result = os0.path.islink(path2)                                         # STEP 16
result = os0.path.isfile(path4)                                         # STEP 17
os0.mkdir(path2)                                                        # STEP 18
str2 = ""                                                               # STEP 19
os0.mkdir(path1)                                                        # STEP 20
os0.makedirs(path2)                                                     # STEP 21
file0 = opener0(path1,'a')                                              # STEP 22
result = os0.path.isfile(path4)                                         # STEP 23
os0.remove(path2)                                                       # STEP 24
file0 = opener0(path2)                                                  # STEP 25
str2 += 'y'                                                             # STEP 26
file0 = opener0(path4,'r')                                              # STEP 27
result = os0.path.lexists(path1)                                        # STEP 28
result = os0.path.dirname(path1)                                        # STEP 29
str2 += " "                                                             # STEP 30
result = os0.path.islink(path1)                                         # STEP 31
path2 += "/" + component1                                               # STEP 32
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 33
result = sorted(os0.listdir(path4))                                     # STEP 34
result = os0.path.dirname(path2)                                        # STEP 35
file0 = opener0(path1,'a')                                              # STEP 36
component1 = "f"                                                        # STEP 37
os0.rmdir(path2)                                                        # STEP 38
os0.path.getsize(path2)                                                 # STEP 39
file0 = opener0(path1,'w')                                              # STEP 40
result = os0.path.exists(path1)                                         # STEP 41
os0.path.getsize(path2)                                                 # STEP 42
os0.mkdir(path4)                                                        # STEP 43
bytes3 = 0                                                              # STEP 44
os0.symlink(path1,path4)                                                # STEP 45
os0.close(fd0)                                                          # STEP 46
result = os0.path.isfile(path2)                                         # STEP 47
os0.write(fd0,str2)                                                     # STEP 48
os0.makedirs(path2)                                                     # STEP 49
stat4 = os0.lstat(path2)                                                # STEP 50
file0 = opener0(path4,'r')                                              # STEP 51
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 52
os0.rename(path2,path1)                                                 # STEP 53
file0 = opener0(path2,'w')                                              # STEP 54
result = os0.path.lexists(path4)                                        # STEP 55
result = os0.path.isdir(path2)                                          # STEP 56
result = stat4.st_nlink                                                 # STEP 57
bytes2 = 0                                                              # STEP 58
stat3 = os0.lstat(path2)                                                # STEP 59
bytes0 += 1                                                             # STEP 60
os0.mkdir(path2)                                                        # STEP 61
os0.rename(path2,path1)                                                 # STEP 62
os0.remove(path4)                                                       # STEP 63
result = stat4.st_size                                                  # STEP 64
stat4 = os0.fstat(fd0)                                                  # STEP 65
os0.write(fd0,str2)                                                     # STEP 66
str2 += " "                                                             # STEP 67
result = stat3.st_nlink                                                 # STEP 68
result = stat3.st_nlink                                                 # STEP 69
bytes0 = 0                                                              # STEP 70
result = os0.path.isfile(path1)                                         # STEP 71
result = file0.read(bytes4)                                             # STEP 72
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10653aea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28588, in act568
    result = self.p_file[0].read(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
component0 = "g"                                                         # STEP 0
component1 = "a"                                                         # STEP 1
str2 = ""                                                                # STEP 2
os0 = newFakeOS()                                                        # STEP 3
component2 = "beta"                                                      # STEP 4
bytes1 = 0                                                               # STEP 5
bytes0 = 0                                                               # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.isdir(path2)                                           # STEP 8
result = os0.path.islink(path2)                                          # STEP 9
result = os0.path.abspath(path2)                                        # STEP 10
result = os0.path.isdir(path2)                                          # STEP 11
os0.remove(path2)                                                       # STEP 12
os0.mkdir(path2)                                                        # STEP 13
os0.makedirs(path2)                                                     # STEP 14
str2 += 'q'                                                             # STEP 15
bytes0 += 1                                                             # STEP 16
result = os0.path.dirname(path2)                                        # STEP 17
result = os0.path.isdir(path2)                                          # STEP 18
result = os0.path.abspath(path2)                                        # STEP 19
result = os0.path.abspath(path2)                                        # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
os0.symlink(path2,path2)                                                # STEP 22
path2 += "/" + component0                                               # STEP 23
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
stat2 = os0.lstat(path2)                                                # STEP 25
bytes2 = 0                                                              # STEP 26
os0.symlink(path2,path2)                                                # STEP 27
component3 = "h"                                                        # STEP 28
path3 = "/Volumes/ramdisk/test"                                         # STEP 29
os0.mkdir(path3)                                                        # STEP 30
str2 += " "                                                             # STEP 31
os0.link(path3,path3)                                                   # STEP 32
os0.symlink(path3,path3)                                                # STEP 33
os0.symlink(path2,path2)                                                # STEP 34
result = os0.path.islink(path3)                                         # STEP 35
result = os0.readlink(path3)                                            # STEP 36
result = os0.path.islink(path3)                                         # STEP 37
os0.rmdir(path2)                                                        # STEP 38
file0 = opener0(path2,'a')                                              # STEP 39
result = file0.readline()                                               # STEP 40
stat0 = os0.lstat(path2)                                                # STEP 41
os0.close(fd0)                                                          # STEP 42
component4 = "phi"                                                      # STEP 43
result = os0.path.isabs(path2)                                          # STEP 44
os0.symlink(path3,path3)                                                # STEP 45
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 46
result = stat2.st_nlink                                                 # STEP 47
os0.path.getsize(path2)                                                 # STEP 48
result = stat2.st_nlink                                                 # STEP 49
result = os0.path.abspath(path3)                                        # STEP 50
bytes2 += 1                                                             # STEP 51
result = os0.path.abspath(path3)                                        # STEP 52
result = file0.readlines()                                              # STEP 53
os0.makedirs(path3)                                                     # STEP 54
file0.next()                                                            # STEP 55
file0.write(str2)                                                       # STEP 56
os0.rename(path2,path3)                                                 # STEP 57
result = os0.path.exists(path3)                                         # STEP 58
result = file0.read()                                                   # STEP 59
result = stat2.st_nlink                                                 # STEP 60
stat2 = os0.stat(path2)                                                 # STEP 61
os0.rename(path2,path3)                                                 # STEP 62
bytes1 += 1                                                             # STEP 63
result = stat2.st_size                                                  # STEP 64
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (2) == (0) ',), <traceback object at 0x106df9518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 3
component0 = "gamma"                                                     # STEP 0
str4 = ""                                                                # STEP 1
os0 = newFakeOS()                                                        # STEP 2
str4 += " "                                                              # STEP 3
component2 = "c"                                                         # STEP 4
str4 += " "                                                              # STEP 5
component3 = "beta"                                                      # STEP 6
component1 = "a"                                                         # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
result = os0.path.dirname(path1)                                         # STEP 9
path1 += "/" + component1                                               # STEP 10
result = os0.path.islink(path1)                                         # STEP 11
result = os0.path.islink(path1)                                         # STEP 12
result = os0.path.isdir(path1)                                          # STEP 13
stat3 = os0.stat(path1)                                                 # STEP 14
result = os0.path.exists(path1)                                         # STEP 15
component1 = "gamma"                                                    # STEP 16
str4 += " "                                                             # STEP 17
os0.makedirs(path1)                                                     # STEP 18
os0.mkdir(path1)                                                        # STEP 19
result = os0.readlink(path1)                                            # STEP 20
os0.remove(path1)                                                       # STEP 21
bytes1 = 0                                                              # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
os0.rmdir(path1)                                                        # STEP 24
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 25
result = os0.path.dirname(path3)                                        # STEP 26
path0 = "/Volumes/ramdisk/test"                                         # STEP 27
component4 = "lambda"                                                   # STEP 28
result = os0.path.isabs(path0)                                          # STEP 29
result = sorted(os0.listdir(path3))                                     # STEP 30
os0.mkdir(path3)                                                        # STEP 31
str4 += " "                                                             # STEP 32
result = os0.path.lexists(path3)                                        # STEP 33
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 34
result = os0.path.islink(path0)                                         # STEP 35
result = os0.path.lexists(path0)                                        # STEP 36
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 37
os0.mkdir(path0)                                                        # STEP 38
bytes1 += 1                                                             # STEP 39
str4 += " "                                                             # STEP 40
os0.makedirs(path3)                                                     # STEP 41
result = os0.read(fd0,bytes1)                                           # STEP 42
result = os0.path.isdir(path3)                                          # STEP 43
result = os0.path.abspath(path3)                                        # STEP 44
opener0 = newFakeOpener(os0)                                            # STEP 45
str4 += 'l'                                                             # STEP 46
os0.write(fd0,str4)                                                     # STEP 47
result = os0.path.isdir(path0)                                          # STEP 48
os0.remove(path1)                                                       # STEP 49
stat3 = os0.lstat(path1)                                                # STEP 50
os0.makedirs(path0)                                                     # STEP 51
result = sorted(os0.listdir(path1))                                     # STEP 52
bytes1 = 0                                                              # STEP 53
str4 += " "                                                             # STEP 54
result = os0.readlink(path1)                                            # STEP 55
os0.write(fd0,str4)                                                     # STEP 56
os0.symlink(path1,path1)                                                # STEP 57
os0.mkdir(path1)                                                        # STEP 58
result = os0.read(fd0,bytes1)                                           # STEP 59
stat2 = os0.fstat(fd0)                                                  # STEP 60
os0.close(fd0)                                                          # STEP 61
result = os0.readlink(path1)                                            # STEP 62
str4 += 'v'                                                             # STEP 63
os0.symlink(path1,path1)                                                # STEP 64
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 65
path3 += "/" + component1                                               # STEP 66
os0.link(path0,path1)                                                   # STEP 67
file0 = opener0(path3,'a')                                              # STEP 68
result = os0.path.exists(path3)                                         # STEP 69
result = os0.readlink(path3)                                            # STEP 70
str0 = ""                                                               # STEP 71
stat4 = os0.fstat(fd0)                                                  # STEP 72
result = stat2.st_nlink                                                 # STEP 73
str0 += 'h'                                                             # STEP 74
file0.flush()                                                           # STEP 75
result = file0.readline(bytes1)                                         # STEP 76
file0.flush()                                                           # STEP 77
str0 += 'l'                                                             # STEP 78
stat0 = os0.stat(path3)                                                 # STEP 79
str3 = ""                                                               # STEP 80
result = os0.read(fd0,bytes1)                                           # STEP 81
result = file0.readlines()                                              # STEP 82
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104a0a9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
bytes2 = 0                                                               # STEP 0
bytes2 += 1                                                              # STEP 1
bytes2 += 1                                                              # STEP 2
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.isabs(path1)                                           # STEP 6
result = sorted(os0.listdir(path4))                                      # STEP 7
component3 = "c"                                                         # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.isabs(path4)                                          # STEP 10
os0.makedirs(path4)                                                     # STEP 11
os0.symlink(path1,path1)                                                # STEP 12
bytes3 = 0                                                              # STEP 13
os0.mkdir(path4)                                                        # STEP 14
os0.mkdir(path1)                                                        # STEP 15
path1 += "/" + component3                                               # STEP 16
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 17
os0.symlink(path4,path1)                                                # STEP 18
os0.makedirs(path4)                                                     # STEP 19
os0.makedirs(path4)                                                     # STEP 20
result = os0.path.isdir(path1)                                          # STEP 21
os0.symlink(path1,path1)                                                # STEP 22
os0.close(fd0)                                                          # STEP 23
os0.symlink(path1,path4)                                                # STEP 24
os0.makedirs(path1)                                                     # STEP 25
os0.remove(path1)                                                       # STEP 26
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 27
os0.rmdir(path1)                                                        # STEP 28
os0.rename(path1,path4)                                                 # STEP 29
result = sorted(os0.listdir(path1))                                     # STEP 30
os0.rmdir(path1)                                                        # STEP 31
path1 += "/" + component3                                               # STEP 32
os0.rename(path1,path4)                                                 # STEP 33
result = os0.path.isfile(path1)                                         # STEP 34
result = os0.path.isabs(path4)                                          # STEP 35
os0.path.getsize(path1)                                                 # STEP 36
result = os0.path.islink(path4)                                         # STEP 37
os0.link(path4,path4)                                                   # STEP 38
result = sorted(os0.listdir(path1))                                     # STEP 39
bytes2 += 1                                                             # STEP 40
os0.link(path4,path4)                                                   # STEP 41
bytes2 = 0                                                              # STEP 42
result = os0.path.exists(path4)                                         # STEP 43
result = os0.read(fd0,bytes3)                                           # STEP 44
opener0 = newFakeOpener(os0)                                            # STEP 45
os0.makedirs(path1)                                                     # STEP 46
os0.rename(path1,path4)                                                 # STEP 47
result = os0.path.dirname(path4)                                        # STEP 48
result = os0.path.dirname(path4)                                        # STEP 49
result = os0.path.dirname(path4)                                        # STEP 50
result = os0.readlink(path4)                                            # STEP 51
result = os0.path.isfile(path1)                                         # STEP 52
str4 = ""                                                               # STEP 53
component4 = "alpha"                                                    # STEP 54
os0.rmdir(path1)                                                        # STEP 55
component3 = "omega"                                                    # STEP 56
stat0 = os0.lstat(path1)                                                # STEP 57
os0.makedirs(path4)                                                     # STEP 58
file0 = opener0(path1,'w')                                              # STEP 59
stat0 = os0.lstat(path1)                                                # STEP 60
str3 = ""                                                               # STEP 61
os0.link(path1,path4)                                                   # STEP 62
result = os0.path.isdir(path4)                                          # STEP 63
file0.write(str4)                                                       # STEP 64
result = stat0.st_size                                                  # STEP 65
os0.path.getsize(path1)                                                 # STEP 66
os0.mkdir(path4)                                                        # STEP 67
bytes0 = 0                                                              # STEP 68
os0.path.getsize(path1)                                                 # STEP 69
str2 = ""                                                               # STEP 70
result = os0.read(fd0,bytes3)                                           # STEP 71
os0.close(fd0)                                                          # STEP 72
os0.rename(path1,path4)                                                 # STEP 73
file0.next()                                                            # STEP 74
result = os0.path.islink(path4)                                         # STEP 75
os0.close(fd0)                                                          # STEP 76
bytes3 = 0                                                              # STEP 77
bytes3 += 1                                                             # STEP 78
file0.seek(bytes0)                                                      # STEP 79
str2 += " "                                                             # STEP 80
result = sorted(os0.listdir(path4))                                     # STEP 81
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 82
result = file0.readline(bytes3)                                         # STEP 83
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106772518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28881, in act573
    result = self.p_file[0].readline(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 5
component1 = "phi"                                                       # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str1 = ""                                                                # STEP 2
bytes3 = 0                                                               # STEP 3
str0 = ""                                                                # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
str0 += " "                                                              # STEP 6
bytes3 += 1                                                              # STEP 7
os0.link(path0,path0)                                                    # STEP 8
str0 += 'z'                                                              # STEP 9
os0.remove(path0)                                                       # STEP 10
os0.makedirs(path0)                                                     # STEP 11
result = os0.path.isdir(path0)                                          # STEP 12
result = os0.path.isabs(path0)                                          # STEP 13
os0.makedirs(path0)                                                     # STEP 14
str1 += " "                                                             # STEP 15
result = os0.path.islink(path0)                                         # STEP 16
str1 += " "                                                             # STEP 17
opener0 = newFakeOpener(os0)                                            # STEP 18
result = os0.readlink(path0)                                            # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = os0.path.isfile(path0)                                         # STEP 21
result = os0.readlink(path0)                                            # STEP 22
file0 = opener0(path0,'a')                                              # STEP 23
result = os0.path.exists(path0)                                         # STEP 24
path3 = "/Volumes/ramdisk/test"                                         # STEP 25
path4 = "/Volumes/ramdisk/test"                                         # STEP 26
path2 = "/Volumes/ramdisk/test"                                         # STEP 27
result = os0.path.abspath(path3)                                        # STEP 28
file0 = opener0(path4,'w')                                              # STEP 29
bytes3 = 0                                                              # STEP 30
path2 += "/" + component1                                               # STEP 31
result = os0.path.islink(path0)                                         # STEP 32
path0 += "/" + component1                                               # STEP 33
stat1 = os0.stat(path0)                                                 # STEP 34
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 35
bytes3 += 1                                                             # STEP 36
component0 = "gamma"                                                    # STEP 37
os0.makedirs(path2)                                                     # STEP 38
file0 = opener0(path0)                                                  # STEP 39
result = os0.path.abspath(path0)                                        # STEP 40
result = os0.path.isfile(path0)                                         # STEP 41
os0.mkdir(path2)                                                        # STEP 42
result = os0.path.abspath(path2)                                        # STEP 43
result = file0.read()                                                   # STEP 44
os0.link(path3,path0)                                                   # STEP 45
result = os0.readlink(path3)                                            # STEP 46
result = file0.readline(bytes3)                                         # STEP 47
os0.write(fd0,str1)                                                     # STEP 48
file0.truncate()                                                        # STEP 49
file0.seek(bytes3)                                                      # STEP 50
os0.mkdir(path0)                                                        # STEP 51
stat4 = os0.lstat(path2)                                                # STEP 52
stat2 = os0.stat(path0)                                                 # STEP 53
result = sorted(os0.listdir(path3))                                     # STEP 54
result = stat2.st_nlink                                                 # STEP 55
file0.flush()                                                           # STEP 56
result = os0.path.exists(path3)                                         # STEP 57
result = os0.path.isabs(path2)                                          # STEP 58
result = os0.path.isfile(path4)                                         # STEP 59
os0.rmdir(path2)                                                        # STEP 60
str1 += " "                                                             # STEP 61
os0.symlink(path3,path3)                                                # STEP 62
file0.next()                                                            # STEP 63
component4 = "phi"                                                      # STEP 64
result = file0.readline(bytes3)                                         # STEP 65
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x104fbf170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28914, in act573
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1178 BRANCHES COVERED
904 STATEMENTS COVERED
