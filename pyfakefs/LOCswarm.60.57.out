Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5187.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x10a7384d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 64 steps

SAVING TEST AS failure.5187.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
result = os0.path.lexists(path4)                                         # STEP 2
result = os0.path.isabs(path4)                                           # STEP 3
result = os0.path.isdir(path4)                                           # STEP 4
bytes0 = 0                                                               # STEP 5
bytes0 += 1                                                              # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.isabs(path2)                                           # STEP 8
bytes0 = 0                                                               # STEP 9
component2 = "beta"                                                     # STEP 10
os0.remove(path4)                                                       # STEP 11
result = os0.path.isdir(path4)                                          # STEP 12
os0.remove(path4)                                                       # STEP 13
component4 = "b"                                                        # STEP 14
result = os0.path.isabs(path2)                                          # STEP 15
path0 = "/Volumes/ramdisk/test"                                         # STEP 16
result = os0.path.isfile(path0)                                         # STEP 17
bytes0 += 1                                                             # STEP 18
os0.remove(path2)                                                       # STEP 19
opener0 = newFakeOpener(os0)                                            # STEP 20
os0.remove(path2)                                                       # STEP 21
result = os0.path.isabs(path4)                                          # STEP 22
path2 += "/" + component4                                               # STEP 23
path4 += "/" + component2                                               # STEP 24
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 25
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 26
path2 += "/" + component4                                               # STEP 27
bytes0 = 0                                                              # STEP 28
file0 = opener0(path4,'r')                                              # STEP 29
result = file0.readline()                                               # STEP 30
result = os0.path.lexists(path2)                                        # STEP 31
os0.makedirs(path4)                                                     # STEP 32
path2 = "/Volumes/ramdisk/test"                                         # STEP 33
str1 = ""                                                               # STEP 34
result = os0.path.isabs(path0)                                          # STEP 35
result = os0.path.isabs(path0)                                          # STEP 36
file0.truncate()                                                        # STEP 37
stat4 = os0.fstat(fd0)                                                  # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 40
result = os0.path.lexists(path0)                                        # STEP 41
os0.makedirs(path4)                                                     # STEP 42
result = stat4.st_size                                                  # STEP 43
str1 += " "                                                             # STEP 44
result = stat4.st_size                                                  # STEP 45
os0.write(fd0,str1)                                                     # STEP 46
path3 = "/Volumes/ramdisk/test"                                         # STEP 47
file0.next()                                                            # STEP 48
os0.makedirs(path2)                                                     # STEP 49
os0.makedirs(path2)                                                     # STEP 50
os0.remove(path4)                                                       # STEP 51
file0.truncate()                                                        # STEP 52
os0.close(fd0)                                                          # STEP 53
os0.remove(path4)                                                       # STEP 54
os0.remove(path4)                                                       # STEP 55
file0.truncate()                                                        # STEP 56
stat4 = os0.fstat(fd0)                                                  # STEP 57
result = stat4.st_nlink                                                 # STEP 58
stat4 = os0.fstat(fd0)                                                  # STEP 59
path4 = "/Volumes/ramdisk/test"                                         # STEP 60
file0.next()                                                            # STEP 61
bytes2 = 0                                                              # STEP 62
result = file0.read()                                                   # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x105bf30e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10812d830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
Original test has 83 steps

SAVING TEST AS failure.5187.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes3 = 0                                                               # STEP 1
bytes3 += 1                                                              # STEP 2
os0 = newFakeOS()                                                        # STEP 3
component3 = "delta"                                                     # STEP 4
result = sorted(os0.listdir(path4))                                      # STEP 5
path4 += "/" + component3                                                # STEP 6
path4 += "/" + component3                                                # STEP 7
result = sorted(os0.listdir(path4))                                      # STEP 8
os0.remove(path4)                                                        # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 11
os0.makedirs(path4)                                                     # STEP 12
file0 = opener0(path4)                                                  # STEP 13
stat1 = os0.stat(path4)                                                 # STEP 14
result = os0.path.islink(path4)                                         # STEP 15
result = os0.path.islink(path4)                                         # STEP 16
component3 = "gamma"                                                    # STEP 17
result = os0.path.islink(path4)                                         # STEP 18
os0.remove(path4)                                                       # STEP 19
os0.makedirs(path4)                                                     # STEP 20
os0.remove(path4)                                                       # STEP 21
result = os0.path.abspath(path4)                                        # STEP 22
path4 += "/" + component3                                               # STEP 23
component4 = "g"                                                        # STEP 24
str3 = ""                                                               # STEP 25
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 26
os0.remove(path4)                                                       # STEP 27
result = os0.path.exists(path4)                                         # STEP 28
os0.makedirs(path4)                                                     # STEP 29
str2 = ""                                                               # STEP 30
file0 = opener0(path4)                                                  # STEP 31
component0 = "phi"                                                      # STEP 32
result = os0.path.islink(path4)                                         # STEP 33
component2 = "beta"                                                     # STEP 34
stat4 = os0.stat(path4)                                                 # STEP 35
result = os0.path.exists(path4)                                         # STEP 36
os0.remove(path4)                                                       # STEP 37
os0.remove(path4)                                                       # STEP 38
os0.makedirs(path4)                                                     # STEP 39
path4 += "/" + component3                                               # STEP 40
str4 = ""                                                               # STEP 41
result = os0.path.exists(path4)                                         # STEP 42
str4 += " "                                                             # STEP 43
result = os0.path.islink(path4)                                         # STEP 44
os0.path.getsize(path4)                                                 # STEP 45
result = os0.path.abspath(path4)                                        # STEP 46
path3 = "/Volumes/ramdisk/test"                                         # STEP 47
result = os0.path.islink(path4)                                         # STEP 48
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
result = sorted(os0.listdir(path0))                                     # STEP 50
result = os0.path.exists(path4)                                         # STEP 51
result = os0.path.abspath(path0)                                        # STEP 52
path2 = "/Volumes/ramdisk/test"                                         # STEP 53
os0.makedirs(path0)                                                     # STEP 54
os0.close(fd0)                                                          # STEP 55
result = os0.path.islink(path0)                                         # STEP 56
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 57
path1 = "/Volumes/ramdisk/test"                                         # STEP 58
os0.path.getsize(path4)                                                 # STEP 59
str1 = ""                                                               # STEP 60
result = os0.path.islink(path4)                                         # STEP 61
path0 = "/Volumes/ramdisk/test"                                         # STEP 62
path3 += "/" + component0                                               # STEP 63
component0 = "epsilon"                                                  # STEP 64
bytes3 = 0                                                              # STEP 65
os0.remove(path1)                                                       # STEP 66
result = os0.path.isabs(path1)                                          # STEP 67
os0.path.getsize(path4)                                                 # STEP 68
result = os0.path.islink(path3)                                         # STEP 69
result = os0.path.islink(path2)                                         # STEP 70
os0.close(fd0)                                                          # STEP 71
os0.remove(path0)                                                       # STEP 72
result = sorted(os0.listdir(path1))                                     # STEP 73
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 74
path3 += "/" + component2                                               # STEP 75
result = os0.path.isabs(path1)                                          # STEP 76
file0 = opener0(path0)                                                  # STEP 77
str1 += " "                                                             # STEP 78
file0 = opener0(path4)                                                  # STEP 79
os0.remove(path2)                                                       # STEP 80
os0.close(fd0)                                                          # STEP 81
result = file0.read(bytes3)                                             # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c2f488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1038b8c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 27 steps

SAVING TEST AS failure.5187.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component2 = "e"                                                         # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
os0.symlink(path3,path3)                                                 # STEP 3
str3 = ""                                                                # STEP 4
os0.link(path3,path3)                                                    # STEP 5
str1 = ""                                                                # STEP 6
path3 += "/" + component2                                                # STEP 7
result = os0.path.isabs(path3)                                           # STEP 8
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)             # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
os0.close(fd0)                                                          # STEP 11
result = os0.path.isdir(path3)                                          # STEP 12
file0 = opener0(path3,'w')                                              # STEP 13
os0.remove(path3)                                                       # STEP 14
os0.link(path3,path3)                                                   # STEP 15
os0.link(path3,path3)                                                   # STEP 16
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 17
str0 = ""                                                               # STEP 18
str4 = ""                                                               # STEP 19
os0.write(fd0,str0)                                                     # STEP 20
os0.path.getsize(path3)                                                 # STEP 21
os0.symlink(path3,path3)                                                # STEP 22
os0.write(fd0,str0)                                                     # STEP 23
stat4 = os0.fstat(fd0)                                                  # STEP 24
result = os0.path.isabs(path3)                                          # STEP 25
result = file0.read()                                                   # STEP 26
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10399c8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a5d8638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 39 steps

SAVING TEST AS failure.5187.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes4 = 0                                                               # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
result = os0.path.dirname(path4)                                         # STEP 3
result = os0.path.isfile(path4)                                          # STEP 4
result = os0.path.lexists(path4)                                         # STEP 5
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
component2 = "e"                                                         # STEP 8
result = os0.path.lexists(path3)                                         # STEP 9
result = sorted(os0.listdir(path3))                                     # STEP 10
result = os0.path.dirname(path1)                                        # STEP 11
str3 = ""                                                               # STEP 12
result = os0.path.lexists(path1)                                        # STEP 13
result = os0.path.lexists(path3)                                        # STEP 14
component1 = "c"                                                        # STEP 15
path4 += "/" + component1                                               # STEP 16
os0.remove(path3)                                                       # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 19
path1 = "/Volumes/ramdisk/test"                                         # STEP 20
bytes0 = 0                                                              # STEP 21
os0.symlink(path4,path4)                                                # STEP 22
os0.close(fd0)                                                          # STEP 23
os0.rmdir(path4)                                                        # STEP 24
result = os0.path.dirname(path1)                                        # STEP 25
os0.remove(path3)                                                       # STEP 26
result = os0.path.isfile(path4)                                         # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
file0 = opener0(path4,'a')                                              # STEP 29
stat2 = os0.lstat(path4)                                                # STEP 30
file0.seek(bytes4)                                                      # STEP 31
result = os0.path.dirname(path4)                                        # STEP 32
result = file0.read()                                                   # STEP 33
result = os0.path.isfile(path3)                                         # STEP 34
os0.write(fd0,str3)                                                     # STEP 35
result = os0.read(fd0,bytes0)                                           # STEP 36
os0.rmdir(path4)                                                        # STEP 37
result = file0.readline(bytes4)                                         # STEP 38
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104a48680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107fcaf38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 79 steps

SAVING TEST AS failure.5187.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str4 = ""                                                                # STEP 1
component3 = "phi"                                                       # STEP 2
component4 = "omega"                                                     # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.isfile(path4)                                          # STEP 5
result = os0.path.lexists(path4)                                         # STEP 6
os0.makedirs(path4)                                                      # STEP 7
result = sorted(os0.listdir(path4))                                      # STEP 8
result = os0.path.isfile(path4)                                          # STEP 9
result = os0.path.isfile(path4)                                         # STEP 10
result = os0.path.isfile(path4)                                         # STEP 11
result = sorted(os0.listdir(path4))                                     # STEP 12
path3 = "/Volumes/ramdisk/test"                                         # STEP 13
path3 += "/" + component3                                               # STEP 14
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 15
result = sorted(os0.listdir(path3))                                     # STEP 16
os0.close(fd0)                                                          # STEP 17
result = os0.path.lexists(path3)                                        # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
path2 = "/Volumes/ramdisk/test"                                         # STEP 22
os0.write(fd0,str4)                                                     # STEP 23
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 24
stat0 = os0.lstat(path3)                                                # STEP 25
os0.path.getsize(path3)                                                 # STEP 26
path4 += "/" + component4                                               # STEP 27
result = os0.path.lexists(path2)                                        # STEP 28
os0.path.getsize(path4)                                                 # STEP 29
os0.close(fd0)                                                          # STEP 30
component0 = "omega"                                                    # STEP 31
result = os0.path.exists(path4)                                         # STEP 32
result = os0.path.isfile(path3)                                         # STEP 33
os0.path.getsize(path4)                                                 # STEP 34
path4 += "/" + component0                                               # STEP 35
component0 = "g"                                                        # STEP 36
component2 = "alpha"                                                    # STEP 37
result = os0.path.dirname(path3)                                        # STEP 38
stat3 = os0.lstat(path4)                                                # STEP 39
os0.path.getsize(path4)                                                 # STEP 40
os0.makedirs(path3)                                                     # STEP 41
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 42
component1 = "epsilon"                                                  # STEP 43
os0.path.getsize(path4)                                                 # STEP 44
os0.path.getsize(path4)                                                 # STEP 45
path0 += "/" + component1                                               # STEP 46
stat4 = os0.lstat(path4)                                                # STEP 47
os0.path.getsize(path4)                                                 # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
stat4 = os0.lstat(path0)                                                # STEP 50
result = stat0.st_nlink                                                 # STEP 51
os0.close(fd0)                                                          # STEP 52
result = os0.path.exists(path2)                                         # STEP 53
component3 = "delta"                                                    # STEP 54
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 55
result = os0.path.dirname(path0)                                        # STEP 56
component4 = "omega"                                                    # STEP 57
path0 += "/" + component1                                               # STEP 58
opener0 = newFakeOpener(os0)                                            # STEP 59
file0 = opener0(path4,'r')                                              # STEP 60
result = os0.path.lexists(path4)                                        # STEP 61
file0 = opener0(path3,'w')                                              # STEP 62
os0.makedirs(path0)                                                     # STEP 63
os0.write(fd0,str4)                                                     # STEP 64
file0.write(str4)                                                       # STEP 65
result = os0.path.exists(path3)                                         # STEP 66
result = sorted(os0.listdir(path4))                                     # STEP 67
stat1 = os0.stat(path3)                                                 # STEP 68
stat4 = os0.lstat(path4)                                                # STEP 69
file0.truncate()                                                        # STEP 70
result = sorted(os0.listdir(path2))                                     # STEP 71
path2 = "/Volumes/ramdisk/test"                                         # STEP 72
result = os0.path.exists(path3)                                         # STEP 73
os0.write(fd0,str4)                                                     # STEP 74
os0.makedirs(path2)                                                     # STEP 75
result = os0.path.dirname(path2)                                        # STEP 76
result = os0.path.exists(path0)                                         # STEP 77
result = file0.readlines()                                              # STEP 78
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a614f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
TEST #182 STEP #46 (0:00:30.000165) Sat Jul 22 04:20:06 2017 [ 894 stmts 1163 branches ] 17938 TOTAL ACTIONS (597.930045004/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1082d2878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 99 steps

SAVING TEST AS failure.5187.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes3 = 0                                                               # STEP 0
component3 = "g"                                                         # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
str0 = ""                                                                # STEP 3
component0 = "beta"                                                      # STEP 4
str0 += 'e'                                                              # STEP 5
str0 = ""                                                                # STEP 6
str0 += 'b'                                                              # STEP 7
str1 = ""                                                                # STEP 8
str0 += 'u'                                                              # STEP 9
os0 = newFakeOS()                                                       # STEP 10
os0.remove(path4)                                                       # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
path3 += "/" + component3                                               # STEP 13
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 14
os0.link(path4,path4)                                                   # STEP 15
str0 += 'w'                                                             # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
result = os0.path.abspath(path3)                                        # STEP 18
os0.rename(path3,path4)                                                 # STEP 19
result = os0.path.abspath(path4)                                        # STEP 20
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
os0.makedirs(path4)                                                     # STEP 22
stat1 = os0.stat(path3)                                                 # STEP 23
result = os0.path.islink(path2)                                         # STEP 24
os0.rename(path3,path2)                                                 # STEP 25
result = os0.read(fd0,bytes3)                                           # STEP 26
result = os0.path.islink(path4)                                         # STEP 27
str3 = ""                                                               # STEP 28
result = os0.path.abspath(path3)                                        # STEP 29
os0.close(fd0)                                                          # STEP 30
result = os0.path.islink(path4)                                         # STEP 31
os0.remove(path2)                                                       # STEP 32
os0.remove(path4)                                                       # STEP 33
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 34
str1 += 'k'                                                             # STEP 35
result = os0.path.abspath(path2)                                        # STEP 36
stat2 = os0.stat(path3)                                                 # STEP 37
path1 = "/Volumes/ramdisk/test"                                         # STEP 38
stat4 = os0.stat(path3)                                                 # STEP 39
result = os0.read(fd0,bytes3)                                           # STEP 40
result = os0.read(fd0,bytes3)                                           # STEP 41
os0.rename(path3,path2)                                                 # STEP 42
os0.remove(path2)                                                       # STEP 43
os0.rename(path3,path4)                                                 # STEP 44
bytes0 = 0                                                              # STEP 45
opener0 = newFakeOpener(os0)                                            # STEP 46
os0.link(path1,path3)                                                   # STEP 47
os0.link(path2,path4)                                                   # STEP 48
result = os0.path.abspath(path4)                                        # STEP 49
os0.makedirs(path2)                                                     # STEP 50
path2 = "/Volumes/ramdisk/test"                                         # STEP 51
result = os0.read(fd0,bytes0)                                           # STEP 52
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
os0.makedirs(path3)                                                     # STEP 54
result = stat2.st_size                                                  # STEP 55
result = os0.read(fd0,bytes0)                                           # STEP 56
result = os0.path.abspath(path3)                                        # STEP 57
result = os0.path.exists(path2)                                         # STEP 58
result = stat4.st_size                                                  # STEP 59
bytes3 = 0                                                              # STEP 60
os0.rename(path3,path2)                                                 # STEP 61
result = os0.path.exists(path1)                                         # STEP 62
result = os0.path.islink(path1)                                         # STEP 63
result = os0.read(fd0,bytes0)                                           # STEP 64
result = os0.path.islink(path3)                                         # STEP 65
result = os0.path.islink(path4)                                         # STEP 66
file0 = opener0(path4,'w')                                              # STEP 67
path4 += "/" + component3                                               # STEP 68
path3 += "/" + component0                                               # STEP 69
component4 = "d"                                                        # STEP 70
os0.close(fd0)                                                          # STEP 71
path2 += "/" + component3                                               # STEP 72
os0.rename(path3,path2)                                                 # STEP 73
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 74
result = os0.path.exists(path3)                                         # STEP 75
os0.link(path1,path3)                                                   # STEP 76
os0.link(path1,path4)                                                   # STEP 77
stat3 = os0.stat(path3)                                                 # STEP 78
result = os0.path.islink(path3)                                         # STEP 79
result = os0.read(fd0,bytes0)                                           # STEP 80
str2 = ""                                                               # STEP 81
result = stat2.st_size                                                  # STEP 82
result = os0.path.isabs(path2)                                          # STEP 83
file0 = opener0(path3,'w')                                              # STEP 84
os0.makedirs(path4)                                                     # STEP 85
result = os0.path.isabs(path3)                                          # STEP 86
result = os0.path.abspath(path2)                                        # STEP 87
component2 = "d"                                                        # STEP 88
result = stat1.st_size                                                  # STEP 89
path3 = "/Volumes/ramdisk/test"                                         # STEP 90
component3 = "b"                                                        # STEP 91
file0 = opener0(path4,'w')                                              # STEP 92
os0.makedirs(path1)                                                     # STEP 93
result = os0.read(fd0,bytes0)                                           # STEP 94
os0.rename(path2,path1)                                                 # STEP 95
path3 += "/" + component2                                               # STEP 96
result = os0.path.isabs(path2)                                          # STEP 97
result = file0.read(bytes0)                                             # STEP 98
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10857bdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['fo']) == ([]) ",), <traceback object at 0x104e07440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 94 steps

SAVING TEST AS failure.5187.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "d"                                                         # STEP 0
str0 = ""                                                                # STEP 1
component3 = "b"                                                         # STEP 2
component2 = "e"                                                         # STEP 3
str1 = ""                                                                # STEP 4
component0 = "lambda"                                                    # STEP 5
os0 = newFakeOS()                                                        # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.lexists(path1)                                         # STEP 8
str3 = ""                                                                # STEP 9
result = os0.path.isabs(path1)                                          # STEP 10
path3 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.isdir(path1)                                          # STEP 12
os0.link(path1,path1)                                                   # STEP 13
str4 = ""                                                               # STEP 14
component4 = "phi"                                                      # STEP 15
result = os0.path.isfile(path3)                                         # STEP 16
os0.remove(path1)                                                       # STEP 17
result = os0.readlink(path3)                                            # STEP 18
path3 += "/" + component4                                               # STEP 19
component4 = "phi"                                                      # STEP 20
result = os0.path.isabs(path3)                                          # STEP 21
stat3 = os0.lstat(path3)                                                # STEP 22
os0.makedirs(path1)                                                     # STEP 23
str2 = ""                                                               # STEP 24
os0.remove(path3)                                                       # STEP 25
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 26
stat2 = os0.lstat(path3)                                                # STEP 27
bytes4 = 0                                                              # STEP 28
os0.path.getsize(path3)                                                 # STEP 29
path3 = "/Volumes/ramdisk/test"                                         # STEP 30
path1 = "/Volumes/ramdisk/test"                                         # STEP 31
os0.link(path1,path3)                                                   # STEP 32
path0 = "/Volumes/ramdisk/test"                                         # STEP 33
result = os0.path.exists(path1)                                         # STEP 34
bytes2 = 0                                                              # STEP 35
result = os0.path.isfile(path0)                                         # STEP 36
os0.remove(path0)                                                       # STEP 37
str2 += 'g'                                                             # STEP 38
str4 += 'f'                                                             # STEP 39
os0.makedirs(path0)                                                     # STEP 40
result = os0.path.lexists(path0)                                        # STEP 41
bytes2 += 1                                                             # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
result = os0.path.isabs(path3)                                          # STEP 44
result = os0.path.isdir(path0)                                          # STEP 45
os0.link(path3,path3)                                                   # STEP 46
file0 = opener0(path1,'a')                                              # STEP 47
os0.makedirs(path0)                                                     # STEP 48
result = os0.path.isfile(path0)                                         # STEP 49
result = os0.path.isfile(path0)                                         # STEP 50
os0.link(path1,path1)                                                   # STEP 51
bytes0 = 0                                                              # STEP 52
result = os0.readlink(path3)                                            # STEP 53
result = os0.readlink(path1)                                            # STEP 54
str2 = ""                                                               # STEP 55
path0 += "/" + component2                                               # STEP 56
result = os0.path.exists(path3)                                         # STEP 57
stat2 = os0.lstat(path0)                                                # STEP 58
result = os0.path.isabs(path0)                                          # STEP 59
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 60
stat1 = os0.lstat(path0)                                                # STEP 61
os0.link(path0,path0)                                                   # STEP 62
str4 += 'o'                                                             # STEP 63
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 64
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 65
os0.path.getsize(path0)                                                 # STEP 66
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 67
file0 = opener0(path0,'r')                                              # STEP 68
result = os0.path.isdir(path1)                                          # STEP 69
result = os0.path.isfile(path3)                                         # STEP 70
path4 = "/Volumes/ramdisk/test"                                         # STEP 71
path3 = "/Volumes/ramdisk/test"                                         # STEP 72
result = os0.path.exists(path3)                                         # STEP 73
bytes2 += 1                                                             # STEP 74
file0.seek(bytes0)                                                      # STEP 75
os0.remove(path4)                                                       # STEP 76
stat4 = os0.lstat(path0)                                                # STEP 77
os0.write(fd0,str0)                                                     # STEP 78
result = os0.path.lexists(path3)                                        # STEP 79
os0.write(fd0,str3)                                                     # STEP 80
os0.makedirs(path4)                                                     # STEP 81
result = os0.path.isfile(path3)                                         # STEP 82
os0.path.getsize(path0)                                                 # STEP 83
component2 = "f"                                                        # STEP 84
os0.write(fd0,str0)                                                     # STEP 85
result = os0.readlink(path4)                                            # STEP 86
result = file0.readlines()                                              # STEP 87
path1 = "/Volumes/ramdisk/test"                                         # STEP 88
bytes2 = 0                                                              # STEP 89
os0.link(path4,path3)                                                   # STEP 90
os0.write(fd0,str4)                                                     # STEP 91
result = os0.readlink(path1)                                            # STEP 92
result = file0.readlines()                                              # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['fo']) == ([]) ",), <traceback object at 0x104d20830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (2) ',), <traceback object at 0x10a5999e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 82 steps

SAVING TEST AS failure.5187.test.7
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str4 = ""                                                                # STEP 0
str4 += " "                                                              # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
os0 = newFakeOS()                                                        # STEP 3
bytes0 = 0                                                               # STEP 4
result = os0.path.abspath(path1)                                         # STEP 5
opener0 = newFakeOpener(os0)                                             # STEP 6
result = os0.path.isabs(path1)                                           # STEP 7
component0 = "lambda"                                                    # STEP 8
file0 = opener0(path1,'w')                                               # STEP 9
file0 = opener0(path1,'w')                                              # STEP 10
result = os0.path.lexists(path1)                                        # STEP 11
result = os0.path.lexists(path1)                                        # STEP 12
result = os0.path.isabs(path1)                                          # STEP 13
bytes0 += 1                                                             # STEP 14
result = os0.readlink(path1)                                            # STEP 15
result = os0.path.islink(path1)                                         # STEP 16
file0 = opener0(path1)                                                  # STEP 17
path1 += "/" + component0                                               # STEP 18
result = os0.path.lexists(path1)                                        # STEP 19
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 20
file0 = opener0(path1,'w')                                              # STEP 21
str2 = ""                                                               # STEP 22
result = os0.path.isabs(path1)                                          # STEP 23
result = os0.path.isabs(path1)                                          # STEP 24
stat3 = os0.lstat(path1)                                                # STEP 25
result = os0.path.abspath(path1)                                        # STEP 26
os0.rmdir(path1)                                                        # STEP 27
path1 += "/" + component0                                               # STEP 28
stat0 = os0.stat(path1)                                                 # STEP 29
str4 += " "                                                             # STEP 30
stat1 = os0.lstat(path1)                                                # STEP 31
file0.truncate()                                                        # STEP 32
result = stat3.st_nlink                                                 # STEP 33
result = file0.read(bytes0)                                             # STEP 34
result = os0.path.islink(path1)                                         # STEP 35
result = os0.path.isabs(path1)                                          # STEP 36
result = os0.path.lexists(path1)                                        # STEP 37
path4 = "/Volumes/ramdisk/test"                                         # STEP 38
result = os0.path.lexists(path4)                                        # STEP 39
file0.write(str4)                                                       # STEP 40
str4 += " "                                                             # STEP 41
result = os0.path.exists(path1)                                         # STEP 42
os0.rename(path1,path4)                                                 # STEP 43
bytes1 = 0                                                              # STEP 44
os0.rmdir(path1)                                                        # STEP 45
result = os0.path.isabs(path4)                                          # STEP 46
result = stat3.st_nlink                                                 # STEP 47
result = os0.path.islink(path4)                                         # STEP 48
os0.rename(path1,path4)                                                 # STEP 49
result = os0.path.abspath(path4)                                        # STEP 50
os0.rename(path1,path4)                                                 # STEP 51
component0 = "h"                                                        # STEP 52
str2 += " "                                                             # STEP 53
result = os0.path.abspath(path4)                                        # STEP 54
result = os0.path.exists(path1)                                         # STEP 55
result = os0.path.abspath(path4)                                        # STEP 56
stat4 = os0.stat(path1)                                                 # STEP 57
result = os0.path.isabs(path1)                                          # STEP 58
os0.rmdir(path1)                                                        # STEP 59
file0.truncate()                                                        # STEP 60
result = os0.readlink(path4)                                            # STEP 61
stat4 = os0.fstat(fd0)                                                  # STEP 62
bytes1 += 1                                                             # STEP 63
stat0 = os0.stat(path1)                                                 # STEP 64
result = file0.read(bytes0)                                             # STEP 65
stat3 = os0.stat(path1)                                                 # STEP 66
stat0 = os0.fstat(fd0)                                                  # STEP 67
os0.rename(path1,path4)                                                 # STEP 68
result = os0.path.exists(path4)                                         # STEP 69
os0.rmdir(path1)                                                        # STEP 70
result = os0.readlink(path4)                                            # STEP 71
result = file0.readline()                                               # STEP 72
str2 = ""                                                               # STEP 73
stat1 = os0.lstat(path1)                                                # STEP 74
result = os0.path.abspath(path4)                                        # STEP 75
bytes2 = 0                                                              # STEP 76
stat1 = os0.lstat(path1)                                                # STEP 77
str4 = ""                                                               # STEP 78
file0.write(str4)                                                       # STEP 79
result = os0.path.abspath(path4)                                        # STEP 80
result = stat4.st_size                                                  # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (2) ',), <traceback object at 0x103a47908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 8 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x108c896c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28674, in act569
    assert (raised == None) == (refRaised == None)
Original test has 93 steps

SAVING TEST AS failure.5187.test.8
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes2 = 0                                                               # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
bytes0 = 0                                                               # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.isabs(path3)                                           # STEP 5
os0.mkdir(path3)                                                         # STEP 6
file0 = opener0(path3)                                                   # STEP 7
os0.mkdir(path3)                                                         # STEP 8
result = os0.path.dirname(path3)                                         # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
component0 = "beta"                                                     # STEP 11
result = sorted(os0.listdir(path0))                                     # STEP 12
result = os0.path.dirname(path3)                                        # STEP 13
result = sorted(os0.listdir(path3))                                     # STEP 14
result = sorted(os0.listdir(path3))                                     # STEP 15
bytes4 = 0                                                              # STEP 16
os0.symlink(path3,path0)                                                # STEP 17
path3 += "/" + component0                                               # STEP 18
os0.path.getsize(path3)                                                 # STEP 19
os0.symlink(path3,path0)                                                # STEP 20
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 21
bytes1 = 0                                                              # STEP 22
result = os0.readlink(path0)                                            # STEP 23
stat3 = os0.lstat(path3)                                                # STEP 24
result = sorted(os0.listdir(path0))                                     # STEP 25
result = os0.readlink(path3)                                            # STEP 26
result = os0.path.isabs(path0)                                          # STEP 27
stat2 = os0.fstat(fd0)                                                  # STEP 28
stat0 = os0.stat(path3)                                                 # STEP 29
result = os0.path.exists(path3)                                         # STEP 30
result = os0.readlink(path0)                                            # STEP 31
result = os0.path.dirname(path0)                                        # STEP 32
path0 += "/" + component0                                               # STEP 33
result = os0.readlink(path3)                                            # STEP 34
component3 = "g"                                                        # STEP 35
component4 = "gamma"                                                    # STEP 36
result = os0.path.exists(path3)                                         # STEP 37
result = sorted(os0.listdir(path0))                                     # STEP 38
result = os0.path.isabs(path0)                                          # STEP 39
result = os0.path.isabs(path0)                                          # STEP 40
os0.rmdir(path0)                                                        # STEP 41
os0.mkdir(path3)                                                        # STEP 42
os0.path.getsize(path3)                                                 # STEP 43
result = os0.path.isabs(path0)                                          # STEP 44
os0.mkdir(path0)                                                        # STEP 45
result = os0.path.exists(path0)                                         # STEP 46
os0.mkdir(path0)                                                        # STEP 47
os0.mkdir(path0)                                                        # STEP 48
stat4 = os0.lstat(path0)                                                # STEP 49
stat1 = os0.lstat(path3)                                                # STEP 50
component0 = "b"                                                        # STEP 51
result = sorted(os0.listdir(path3))                                     # STEP 52
bytes3 = 0                                                              # STEP 53
component2 = "e"                                                        # STEP 54
result = sorted(os0.listdir(path3))                                     # STEP 55
os0.mkdir(path0)                                                        # STEP 56
os0.mkdir(path3)                                                        # STEP 57
result = os0.readlink(path0)                                            # STEP 58
result = sorted(os0.listdir(path3))                                     # STEP 59
os0.mkdir(path0)                                                        # STEP 60
result = os0.path.exists(path3)                                         # STEP 61
result = sorted(os0.listdir(path3))                                     # STEP 62
os0.close(fd0)                                                          # STEP 63
file0 = opener0(path3)                                                  # STEP 64
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 65
os0.mkdir(path3)                                                        # STEP 66
result = os0.path.exists(path0)                                         # STEP 67
os0.rmdir(path3)                                                        # STEP 68
result = os0.path.dirname(path0)                                        # STEP 69
file0.truncate()                                                        # STEP 70
result = sorted(os0.listdir(path3))                                     # STEP 71
os0.path.getsize(path0)                                                 # STEP 72
result = os0.path.isabs(path3)                                          # STEP 73
os0.rmdir(path3)                                                        # STEP 74
file0.truncate()                                                        # STEP 75
result = os0.path.exists(path3)                                         # STEP 76
path2 = "/Volumes/ramdisk/test"                                         # STEP 77
os0.mkdir(path3)                                                        # STEP 78
result = os0.readlink(path0)                                            # STEP 79
os0.mkdir(path3)                                                        # STEP 80
os0.symlink(path0,path2)                                                # STEP 81
os0.close(fd0)                                                          # STEP 82
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 83
component1 = "b"                                                        # STEP 84
os0.symlink(path2,path2)                                                # STEP 85
result = os0.path.dirname(path2)                                        # STEP 86
path0 += "/" + component0                                               # STEP 87
os0.symlink(path2,path2)                                                # STEP 88
result = os0.path.exists(path3)                                         # STEP 89
result = sorted(os0.listdir(path2))                                     # STEP 90
file0.flush()                                                           # STEP 91
result = file0.readline()                                               # STEP 92
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103993488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28674, in act569
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 9 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 56
STOPPING TESTING DUE TO TIMEOUT
42.4377554812 PERCENT COVERED
60.3190791607 TOTAL RUNTIME
360 EXECUTED
35716 TOTAL TEST OPERATIONS
42.0026743412 TIME SPENT EXECUTING TEST OPERATIONS
15.4154157639 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0246992111206 TIME SPENT CHECKING PROPERTIES
42.0273735523 TOTAL TIME SPENT RUNNING SUT
1.07646656036 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
9 FAILED
0 REPEATS OF FAILURES
9 ACTUAL DISTINCT FAILURES

FAILURE 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
os0 = newFakeOS()                                                        # STEP 1
result = os0.path.lexists(path4)                                         # STEP 2
result = os0.path.isabs(path4)                                           # STEP 3
result = os0.path.isdir(path4)                                           # STEP 4
bytes0 = 0                                                               # STEP 5
bytes0 += 1                                                              # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.isabs(path2)                                           # STEP 8
bytes0 = 0                                                               # STEP 9
component2 = "beta"                                                     # STEP 10
os0.remove(path4)                                                       # STEP 11
result = os0.path.isdir(path4)                                          # STEP 12
os0.remove(path4)                                                       # STEP 13
component4 = "b"                                                        # STEP 14
result = os0.path.isabs(path2)                                          # STEP 15
path0 = "/Volumes/ramdisk/test"                                         # STEP 16
result = os0.path.isfile(path0)                                         # STEP 17
bytes0 += 1                                                             # STEP 18
os0.remove(path2)                                                       # STEP 19
opener0 = newFakeOpener(os0)                                            # STEP 20
os0.remove(path2)                                                       # STEP 21
result = os0.path.isabs(path4)                                          # STEP 22
path2 += "/" + component4                                               # STEP 23
path4 += "/" + component2                                               # STEP 24
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 25
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 26
path2 += "/" + component4                                               # STEP 27
bytes0 = 0                                                              # STEP 28
file0 = opener0(path4,'r')                                              # STEP 29
result = file0.readline()                                               # STEP 30
result = os0.path.lexists(path2)                                        # STEP 31
os0.makedirs(path4)                                                     # STEP 32
path2 = "/Volumes/ramdisk/test"                                         # STEP 33
str1 = ""                                                               # STEP 34
result = os0.path.isabs(path0)                                          # STEP 35
result = os0.path.isabs(path0)                                          # STEP 36
file0.truncate()                                                        # STEP 37
stat4 = os0.fstat(fd0)                                                  # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 40
result = os0.path.lexists(path0)                                        # STEP 41
os0.makedirs(path4)                                                     # STEP 42
result = stat4.st_size                                                  # STEP 43
str1 += " "                                                             # STEP 44
result = stat4.st_size                                                  # STEP 45
os0.write(fd0,str1)                                                     # STEP 46
path3 = "/Volumes/ramdisk/test"                                         # STEP 47
file0.next()                                                            # STEP 48
os0.makedirs(path2)                                                     # STEP 49
os0.makedirs(path2)                                                     # STEP 50
os0.remove(path4)                                                       # STEP 51
file0.truncate()                                                        # STEP 52
os0.close(fd0)                                                          # STEP 53
os0.remove(path4)                                                       # STEP 54
os0.remove(path4)                                                       # STEP 55
file0.truncate()                                                        # STEP 56
stat4 = os0.fstat(fd0)                                                  # STEP 57
result = stat4.st_nlink                                                 # STEP 58
stat4 = os0.fstat(fd0)                                                  # STEP 59
path4 = "/Volumes/ramdisk/test"                                         # STEP 60
file0.next()                                                            # STEP 61
bytes2 = 0                                                              # STEP 62
result = file0.read()                                                   # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x105bf30e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 0
bytes3 = 0                                                               # STEP 1
bytes3 += 1                                                              # STEP 2
os0 = newFakeOS()                                                        # STEP 3
component3 = "delta"                                                     # STEP 4
result = sorted(os0.listdir(path4))                                      # STEP 5
path4 += "/" + component3                                                # STEP 6
path4 += "/" + component3                                                # STEP 7
result = sorted(os0.listdir(path4))                                      # STEP 8
os0.remove(path4)                                                        # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 11
os0.makedirs(path4)                                                     # STEP 12
file0 = opener0(path4)                                                  # STEP 13
stat1 = os0.stat(path4)                                                 # STEP 14
result = os0.path.islink(path4)                                         # STEP 15
result = os0.path.islink(path4)                                         # STEP 16
component3 = "gamma"                                                    # STEP 17
result = os0.path.islink(path4)                                         # STEP 18
os0.remove(path4)                                                       # STEP 19
os0.makedirs(path4)                                                     # STEP 20
os0.remove(path4)                                                       # STEP 21
result = os0.path.abspath(path4)                                        # STEP 22
path4 += "/" + component3                                               # STEP 23
component4 = "g"                                                        # STEP 24
str3 = ""                                                               # STEP 25
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 26
os0.remove(path4)                                                       # STEP 27
result = os0.path.exists(path4)                                         # STEP 28
os0.makedirs(path4)                                                     # STEP 29
str2 = ""                                                               # STEP 30
file0 = opener0(path4)                                                  # STEP 31
component0 = "phi"                                                      # STEP 32
result = os0.path.islink(path4)                                         # STEP 33
component2 = "beta"                                                     # STEP 34
stat4 = os0.stat(path4)                                                 # STEP 35
result = os0.path.exists(path4)                                         # STEP 36
os0.remove(path4)                                                       # STEP 37
os0.remove(path4)                                                       # STEP 38
os0.makedirs(path4)                                                     # STEP 39
path4 += "/" + component3                                               # STEP 40
str4 = ""                                                               # STEP 41
result = os0.path.exists(path4)                                         # STEP 42
str4 += " "                                                             # STEP 43
result = os0.path.islink(path4)                                         # STEP 44
os0.path.getsize(path4)                                                 # STEP 45
result = os0.path.abspath(path4)                                        # STEP 46
path3 = "/Volumes/ramdisk/test"                                         # STEP 47
result = os0.path.islink(path4)                                         # STEP 48
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
result = sorted(os0.listdir(path0))                                     # STEP 50
result = os0.path.exists(path4)                                         # STEP 51
result = os0.path.abspath(path0)                                        # STEP 52
path2 = "/Volumes/ramdisk/test"                                         # STEP 53
os0.makedirs(path0)                                                     # STEP 54
os0.close(fd0)                                                          # STEP 55
result = os0.path.islink(path0)                                         # STEP 56
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 57
path1 = "/Volumes/ramdisk/test"                                         # STEP 58
os0.path.getsize(path4)                                                 # STEP 59
str1 = ""                                                               # STEP 60
result = os0.path.islink(path4)                                         # STEP 61
path0 = "/Volumes/ramdisk/test"                                         # STEP 62
path3 += "/" + component0                                               # STEP 63
component0 = "epsilon"                                                  # STEP 64
bytes3 = 0                                                              # STEP 65
os0.remove(path1)                                                       # STEP 66
result = os0.path.isabs(path1)                                          # STEP 67
os0.path.getsize(path4)                                                 # STEP 68
result = os0.path.islink(path3)                                         # STEP 69
result = os0.path.islink(path2)                                         # STEP 70
os0.close(fd0)                                                          # STEP 71
os0.remove(path0)                                                       # STEP 72
result = sorted(os0.listdir(path1))                                     # STEP 73
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 74
path3 += "/" + component2                                               # STEP 75
result = os0.path.isabs(path1)                                          # STEP 76
file0 = opener0(path0)                                                  # STEP 77
str1 += " "                                                             # STEP 78
file0 = opener0(path4)                                                  # STEP 79
os0.remove(path2)                                                       # STEP 80
os0.close(fd0)                                                          # STEP 81
result = file0.read(bytes3)                                             # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c2f488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
component2 = "e"                                                         # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
os0.symlink(path3,path3)                                                 # STEP 3
str3 = ""                                                                # STEP 4
os0.link(path3,path3)                                                    # STEP 5
str1 = ""                                                                # STEP 6
path3 += "/" + component2                                                # STEP 7
result = os0.path.isabs(path3)                                           # STEP 8
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)             # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
os0.close(fd0)                                                          # STEP 11
result = os0.path.isdir(path3)                                          # STEP 12
file0 = opener0(path3,'w')                                              # STEP 13
os0.remove(path3)                                                       # STEP 14
os0.link(path3,path3)                                                   # STEP 15
os0.link(path3,path3)                                                   # STEP 16
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 17
str0 = ""                                                               # STEP 18
str4 = ""                                                               # STEP 19
os0.write(fd0,str0)                                                     # STEP 20
os0.path.getsize(path3)                                                 # STEP 21
os0.symlink(path3,path3)                                                # STEP 22
os0.write(fd0,str0)                                                     # STEP 23
stat4 = os0.fstat(fd0)                                                  # STEP 24
result = os0.path.isabs(path3)                                          # STEP 25
result = file0.read()                                                   # STEP 26
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10399c8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
os0 = newFakeOS()                                                        # STEP 0
bytes4 = 0                                                               # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
result = os0.path.dirname(path4)                                         # STEP 3
result = os0.path.isfile(path4)                                          # STEP 4
result = os0.path.lexists(path4)                                         # STEP 5
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
component2 = "e"                                                         # STEP 8
result = os0.path.lexists(path3)                                         # STEP 9
result = sorted(os0.listdir(path3))                                     # STEP 10
result = os0.path.dirname(path1)                                        # STEP 11
str3 = ""                                                               # STEP 12
result = os0.path.lexists(path1)                                        # STEP 13
result = os0.path.lexists(path3)                                        # STEP 14
component1 = "c"                                                        # STEP 15
path4 += "/" + component1                                               # STEP 16
os0.remove(path3)                                                       # STEP 17
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 19
path1 = "/Volumes/ramdisk/test"                                         # STEP 20
bytes0 = 0                                                              # STEP 21
os0.symlink(path4,path4)                                                # STEP 22
os0.close(fd0)                                                          # STEP 23
os0.rmdir(path4)                                                        # STEP 24
result = os0.path.dirname(path1)                                        # STEP 25
os0.remove(path3)                                                       # STEP 26
result = os0.path.isfile(path4)                                         # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
file0 = opener0(path4,'a')                                              # STEP 29
stat2 = os0.lstat(path4)                                                # STEP 30
file0.seek(bytes4)                                                      # STEP 31
result = os0.path.dirname(path4)                                        # STEP 32
result = file0.read()                                                   # STEP 33
result = os0.path.isfile(path3)                                         # STEP 34
os0.write(fd0,str3)                                                     # STEP 35
result = os0.read(fd0,bytes0)                                           # STEP 36
os0.rmdir(path4)                                                        # STEP 37
result = file0.readline(bytes4)                                         # STEP 38
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104a48680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28941, in act574
    result = self.p_file[0].readline(self.p_bytes[4])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
os0 = newFakeOS()                                                        # STEP 0
str4 = ""                                                                # STEP 1
component3 = "phi"                                                       # STEP 2
component4 = "omega"                                                     # STEP 3
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.isfile(path4)                                          # STEP 5
result = os0.path.lexists(path4)                                         # STEP 6
os0.makedirs(path4)                                                      # STEP 7
result = sorted(os0.listdir(path4))                                      # STEP 8
result = os0.path.isfile(path4)                                          # STEP 9
result = os0.path.isfile(path4)                                         # STEP 10
result = os0.path.isfile(path4)                                         # STEP 11
result = sorted(os0.listdir(path4))                                     # STEP 12
path3 = "/Volumes/ramdisk/test"                                         # STEP 13
path3 += "/" + component3                                               # STEP 14
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 15
result = sorted(os0.listdir(path3))                                     # STEP 16
os0.close(fd0)                                                          # STEP 17
result = os0.path.lexists(path3)                                        # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
path2 = "/Volumes/ramdisk/test"                                         # STEP 22
os0.write(fd0,str4)                                                     # STEP 23
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 24
stat0 = os0.lstat(path3)                                                # STEP 25
os0.path.getsize(path3)                                                 # STEP 26
path4 += "/" + component4                                               # STEP 27
result = os0.path.lexists(path2)                                        # STEP 28
os0.path.getsize(path4)                                                 # STEP 29
os0.close(fd0)                                                          # STEP 30
component0 = "omega"                                                    # STEP 31
result = os0.path.exists(path4)                                         # STEP 32
result = os0.path.isfile(path3)                                         # STEP 33
os0.path.getsize(path4)                                                 # STEP 34
path4 += "/" + component0                                               # STEP 35
component0 = "g"                                                        # STEP 36
component2 = "alpha"                                                    # STEP 37
result = os0.path.dirname(path3)                                        # STEP 38
stat3 = os0.lstat(path4)                                                # STEP 39
os0.path.getsize(path4)                                                 # STEP 40
os0.makedirs(path3)                                                     # STEP 41
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 42
component1 = "epsilon"                                                  # STEP 43
os0.path.getsize(path4)                                                 # STEP 44
os0.path.getsize(path4)                                                 # STEP 45
path0 += "/" + component1                                               # STEP 46
stat4 = os0.lstat(path4)                                                # STEP 47
os0.path.getsize(path4)                                                 # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
stat4 = os0.lstat(path0)                                                # STEP 50
result = stat0.st_nlink                                                 # STEP 51
os0.close(fd0)                                                          # STEP 52
result = os0.path.exists(path2)                                         # STEP 53
component3 = "delta"                                                    # STEP 54
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 55
result = os0.path.dirname(path0)                                        # STEP 56
component4 = "omega"                                                    # STEP 57
path0 += "/" + component1                                               # STEP 58
opener0 = newFakeOpener(os0)                                            # STEP 59
file0 = opener0(path4,'r')                                              # STEP 60
result = os0.path.lexists(path4)                                        # STEP 61
file0 = opener0(path3,'w')                                              # STEP 62
os0.makedirs(path0)                                                     # STEP 63
os0.write(fd0,str4)                                                     # STEP 64
file0.write(str4)                                                       # STEP 65
result = os0.path.exists(path3)                                         # STEP 66
result = sorted(os0.listdir(path4))                                     # STEP 67
stat1 = os0.stat(path3)                                                 # STEP 68
stat4 = os0.lstat(path4)                                                # STEP 69
file0.truncate()                                                        # STEP 70
result = sorted(os0.listdir(path2))                                     # STEP 71
path2 = "/Volumes/ramdisk/test"                                         # STEP 72
result = os0.path.exists(path3)                                         # STEP 73
os0.write(fd0,str4)                                                     # STEP 74
os0.makedirs(path2)                                                     # STEP 75
result = os0.path.dirname(path2)                                        # STEP 76
result = os0.path.exists(path0)                                         # STEP 77
result = file0.readlines()                                              # STEP 78
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a614f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 5
bytes3 = 0                                                               # STEP 0
component3 = "g"                                                         # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
str0 = ""                                                                # STEP 3
component0 = "beta"                                                      # STEP 4
str0 += 'e'                                                              # STEP 5
str0 = ""                                                                # STEP 6
str0 += 'b'                                                              # STEP 7
str1 = ""                                                                # STEP 8
str0 += 'u'                                                              # STEP 9
os0 = newFakeOS()                                                       # STEP 10
os0.remove(path4)                                                       # STEP 11
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
path3 += "/" + component3                                               # STEP 13
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 14
os0.link(path4,path4)                                                   # STEP 15
str0 += 'w'                                                             # STEP 16
result = os0.path.islink(path4)                                         # STEP 17
result = os0.path.abspath(path3)                                        # STEP 18
os0.rename(path3,path4)                                                 # STEP 19
result = os0.path.abspath(path4)                                        # STEP 20
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
os0.makedirs(path4)                                                     # STEP 22
stat1 = os0.stat(path3)                                                 # STEP 23
result = os0.path.islink(path2)                                         # STEP 24
os0.rename(path3,path2)                                                 # STEP 25
result = os0.read(fd0,bytes3)                                           # STEP 26
result = os0.path.islink(path4)                                         # STEP 27
str3 = ""                                                               # STEP 28
result = os0.path.abspath(path3)                                        # STEP 29
os0.close(fd0)                                                          # STEP 30
result = os0.path.islink(path4)                                         # STEP 31
os0.remove(path2)                                                       # STEP 32
os0.remove(path4)                                                       # STEP 33
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 34
str1 += 'k'                                                             # STEP 35
result = os0.path.abspath(path2)                                        # STEP 36
stat2 = os0.stat(path3)                                                 # STEP 37
path1 = "/Volumes/ramdisk/test"                                         # STEP 38
stat4 = os0.stat(path3)                                                 # STEP 39
result = os0.read(fd0,bytes3)                                           # STEP 40
result = os0.read(fd0,bytes3)                                           # STEP 41
os0.rename(path3,path2)                                                 # STEP 42
os0.remove(path2)                                                       # STEP 43
os0.rename(path3,path4)                                                 # STEP 44
bytes0 = 0                                                              # STEP 45
opener0 = newFakeOpener(os0)                                            # STEP 46
os0.link(path1,path3)                                                   # STEP 47
os0.link(path2,path4)                                                   # STEP 48
result = os0.path.abspath(path4)                                        # STEP 49
os0.makedirs(path2)                                                     # STEP 50
path2 = "/Volumes/ramdisk/test"                                         # STEP 51
result = os0.read(fd0,bytes0)                                           # STEP 52
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
os0.makedirs(path3)                                                     # STEP 54
result = stat2.st_size                                                  # STEP 55
result = os0.read(fd0,bytes0)                                           # STEP 56
result = os0.path.abspath(path3)                                        # STEP 57
result = os0.path.exists(path2)                                         # STEP 58
result = stat4.st_size                                                  # STEP 59
bytes3 = 0                                                              # STEP 60
os0.rename(path3,path2)                                                 # STEP 61
result = os0.path.exists(path1)                                         # STEP 62
result = os0.path.islink(path1)                                         # STEP 63
result = os0.read(fd0,bytes0)                                           # STEP 64
result = os0.path.islink(path3)                                         # STEP 65
result = os0.path.islink(path4)                                         # STEP 66
file0 = opener0(path4,'w')                                              # STEP 67
path4 += "/" + component3                                               # STEP 68
path3 += "/" + component0                                               # STEP 69
component4 = "d"                                                        # STEP 70
os0.close(fd0)                                                          # STEP 71
path2 += "/" + component3                                               # STEP 72
os0.rename(path3,path2)                                                 # STEP 73
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 74
result = os0.path.exists(path3)                                         # STEP 75
os0.link(path1,path3)                                                   # STEP 76
os0.link(path1,path4)                                                   # STEP 77
stat3 = os0.stat(path3)                                                 # STEP 78
result = os0.path.islink(path3)                                         # STEP 79
result = os0.read(fd0,bytes0)                                           # STEP 80
str2 = ""                                                               # STEP 81
result = stat2.st_size                                                  # STEP 82
result = os0.path.isabs(path2)                                          # STEP 83
file0 = opener0(path3,'w')                                              # STEP 84
os0.makedirs(path4)                                                     # STEP 85
result = os0.path.isabs(path3)                                          # STEP 86
result = os0.path.abspath(path2)                                        # STEP 87
component2 = "d"                                                        # STEP 88
result = stat1.st_size                                                  # STEP 89
path3 = "/Volumes/ramdisk/test"                                         # STEP 90
component3 = "b"                                                        # STEP 91
file0 = opener0(path4,'w')                                              # STEP 92
os0.makedirs(path1)                                                     # STEP 93
result = os0.read(fd0,bytes0)                                           # STEP 94
os0.rename(path2,path1)                                                 # STEP 95
path3 += "/" + component2                                               # STEP 96
result = os0.path.isabs(path2)                                          # STEP 97
result = file0.read(bytes0)                                             # STEP 98
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10857bdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 6
component1 = "d"                                                         # STEP 0
str0 = ""                                                                # STEP 1
component3 = "b"                                                         # STEP 2
component2 = "e"                                                         # STEP 3
str1 = ""                                                                # STEP 4
component0 = "lambda"                                                    # STEP 5
os0 = newFakeOS()                                                        # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
result = os0.path.lexists(path1)                                         # STEP 8
str3 = ""                                                                # STEP 9
result = os0.path.isabs(path1)                                          # STEP 10
path3 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.isdir(path1)                                          # STEP 12
os0.link(path1,path1)                                                   # STEP 13
str4 = ""                                                               # STEP 14
component4 = "phi"                                                      # STEP 15
result = os0.path.isfile(path3)                                         # STEP 16
os0.remove(path1)                                                       # STEP 17
result = os0.readlink(path3)                                            # STEP 18
path3 += "/" + component4                                               # STEP 19
component4 = "phi"                                                      # STEP 20
result = os0.path.isabs(path3)                                          # STEP 21
stat3 = os0.lstat(path3)                                                # STEP 22
os0.makedirs(path1)                                                     # STEP 23
str2 = ""                                                               # STEP 24
os0.remove(path3)                                                       # STEP 25
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 26
stat2 = os0.lstat(path3)                                                # STEP 27
bytes4 = 0                                                              # STEP 28
os0.path.getsize(path3)                                                 # STEP 29
path3 = "/Volumes/ramdisk/test"                                         # STEP 30
path1 = "/Volumes/ramdisk/test"                                         # STEP 31
os0.link(path1,path3)                                                   # STEP 32
path0 = "/Volumes/ramdisk/test"                                         # STEP 33
result = os0.path.exists(path1)                                         # STEP 34
bytes2 = 0                                                              # STEP 35
result = os0.path.isfile(path0)                                         # STEP 36
os0.remove(path0)                                                       # STEP 37
str2 += 'g'                                                             # STEP 38
str4 += 'f'                                                             # STEP 39
os0.makedirs(path0)                                                     # STEP 40
result = os0.path.lexists(path0)                                        # STEP 41
bytes2 += 1                                                             # STEP 42
opener0 = newFakeOpener(os0)                                            # STEP 43
result = os0.path.isabs(path3)                                          # STEP 44
result = os0.path.isdir(path0)                                          # STEP 45
os0.link(path3,path3)                                                   # STEP 46
file0 = opener0(path1,'a')                                              # STEP 47
os0.makedirs(path0)                                                     # STEP 48
result = os0.path.isfile(path0)                                         # STEP 49
result = os0.path.isfile(path0)                                         # STEP 50
os0.link(path1,path1)                                                   # STEP 51
bytes0 = 0                                                              # STEP 52
result = os0.readlink(path3)                                            # STEP 53
result = os0.readlink(path1)                                            # STEP 54
str2 = ""                                                               # STEP 55
path0 += "/" + component2                                               # STEP 56
result = os0.path.exists(path3)                                         # STEP 57
stat2 = os0.lstat(path0)                                                # STEP 58
result = os0.path.isabs(path0)                                          # STEP 59
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 60
stat1 = os0.lstat(path0)                                                # STEP 61
os0.link(path0,path0)                                                   # STEP 62
str4 += 'o'                                                             # STEP 63
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 64
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 65
os0.path.getsize(path0)                                                 # STEP 66
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 67
file0 = opener0(path0,'r')                                              # STEP 68
result = os0.path.isdir(path1)                                          # STEP 69
result = os0.path.isfile(path3)                                         # STEP 70
path4 = "/Volumes/ramdisk/test"                                         # STEP 71
path3 = "/Volumes/ramdisk/test"                                         # STEP 72
result = os0.path.exists(path3)                                         # STEP 73
bytes2 += 1                                                             # STEP 74
file0.seek(bytes0)                                                      # STEP 75
os0.remove(path4)                                                       # STEP 76
stat4 = os0.lstat(path0)                                                # STEP 77
os0.write(fd0,str0)                                                     # STEP 78
result = os0.path.lexists(path3)                                        # STEP 79
os0.write(fd0,str3)                                                     # STEP 80
os0.makedirs(path4)                                                     # STEP 81
result = os0.path.isfile(path3)                                         # STEP 82
os0.path.getsize(path0)                                                 # STEP 83
component2 = "f"                                                        # STEP 84
os0.write(fd0,str0)                                                     # STEP 85
result = os0.readlink(path4)                                            # STEP 86
result = file0.readlines()                                              # STEP 87
path1 = "/Volumes/ramdisk/test"                                         # STEP 88
bytes2 = 0                                                              # STEP 89
os0.link(path4,path3)                                                   # STEP 90
os0.write(fd0,str4)                                                     # STEP 91
result = os0.readlink(path1)                                            # STEP 92
result = file0.readlines()                                              # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['fo']) == ([]) ",), <traceback object at 0x104d20830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 7
str4 = ""                                                                # STEP 0
str4 += " "                                                              # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
os0 = newFakeOS()                                                        # STEP 3
bytes0 = 0                                                               # STEP 4
result = os0.path.abspath(path1)                                         # STEP 5
opener0 = newFakeOpener(os0)                                             # STEP 6
result = os0.path.isabs(path1)                                           # STEP 7
component0 = "lambda"                                                    # STEP 8
file0 = opener0(path1,'w')                                               # STEP 9
file0 = opener0(path1,'w')                                              # STEP 10
result = os0.path.lexists(path1)                                        # STEP 11
result = os0.path.lexists(path1)                                        # STEP 12
result = os0.path.isabs(path1)                                          # STEP 13
bytes0 += 1                                                             # STEP 14
result = os0.readlink(path1)                                            # STEP 15
result = os0.path.islink(path1)                                         # STEP 16
file0 = opener0(path1)                                                  # STEP 17
path1 += "/" + component0                                               # STEP 18
result = os0.path.lexists(path1)                                        # STEP 19
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 20
file0 = opener0(path1,'w')                                              # STEP 21
str2 = ""                                                               # STEP 22
result = os0.path.isabs(path1)                                          # STEP 23
result = os0.path.isabs(path1)                                          # STEP 24
stat3 = os0.lstat(path1)                                                # STEP 25
result = os0.path.abspath(path1)                                        # STEP 26
os0.rmdir(path1)                                                        # STEP 27
path1 += "/" + component0                                               # STEP 28
stat0 = os0.stat(path1)                                                 # STEP 29
str4 += " "                                                             # STEP 30
stat1 = os0.lstat(path1)                                                # STEP 31
file0.truncate()                                                        # STEP 32
result = stat3.st_nlink                                                 # STEP 33
result = file0.read(bytes0)                                             # STEP 34
result = os0.path.islink(path1)                                         # STEP 35
result = os0.path.isabs(path1)                                          # STEP 36
result = os0.path.lexists(path1)                                        # STEP 37
path4 = "/Volumes/ramdisk/test"                                         # STEP 38
result = os0.path.lexists(path4)                                        # STEP 39
file0.write(str4)                                                       # STEP 40
str4 += " "                                                             # STEP 41
result = os0.path.exists(path1)                                         # STEP 42
os0.rename(path1,path4)                                                 # STEP 43
bytes1 = 0                                                              # STEP 44
os0.rmdir(path1)                                                        # STEP 45
result = os0.path.isabs(path4)                                          # STEP 46
result = stat3.st_nlink                                                 # STEP 47
result = os0.path.islink(path4)                                         # STEP 48
os0.rename(path1,path4)                                                 # STEP 49
result = os0.path.abspath(path4)                                        # STEP 50
os0.rename(path1,path4)                                                 # STEP 51
component0 = "h"                                                        # STEP 52
str2 += " "                                                             # STEP 53
result = os0.path.abspath(path4)                                        # STEP 54
result = os0.path.exists(path1)                                         # STEP 55
result = os0.path.abspath(path4)                                        # STEP 56
stat4 = os0.stat(path1)                                                 # STEP 57
result = os0.path.isabs(path1)                                          # STEP 58
os0.rmdir(path1)                                                        # STEP 59
file0.truncate()                                                        # STEP 60
result = os0.readlink(path4)                                            # STEP 61
stat4 = os0.fstat(fd0)                                                  # STEP 62
bytes1 += 1                                                             # STEP 63
stat0 = os0.stat(path1)                                                 # STEP 64
result = file0.read(bytes0)                                             # STEP 65
stat3 = os0.stat(path1)                                                 # STEP 66
stat0 = os0.fstat(fd0)                                                  # STEP 67
os0.rename(path1,path4)                                                 # STEP 68
result = os0.path.exists(path4)                                         # STEP 69
os0.rmdir(path1)                                                        # STEP 70
result = os0.readlink(path4)                                            # STEP 71
result = file0.readline()                                               # STEP 72
str2 = ""                                                               # STEP 73
stat1 = os0.lstat(path1)                                                # STEP 74
result = os0.path.abspath(path4)                                        # STEP 75
bytes2 = 0                                                              # STEP 76
stat1 = os0.lstat(path1)                                                # STEP 77
str4 = ""                                                               # STEP 78
file0.write(str4)                                                       # STEP 79
result = os0.path.abspath(path4)                                        # STEP 80
result = stat4.st_size                                                  # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (2) ',), <traceback object at 0x103a47908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 8
os0 = newFakeOS()                                                        # STEP 0
bytes2 = 0                                                               # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
bytes0 = 0                                                               # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.isabs(path3)                                           # STEP 5
os0.mkdir(path3)                                                         # STEP 6
file0 = opener0(path3)                                                   # STEP 7
os0.mkdir(path3)                                                         # STEP 8
result = os0.path.dirname(path3)                                         # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
component0 = "beta"                                                     # STEP 11
result = sorted(os0.listdir(path0))                                     # STEP 12
result = os0.path.dirname(path3)                                        # STEP 13
result = sorted(os0.listdir(path3))                                     # STEP 14
result = sorted(os0.listdir(path3))                                     # STEP 15
bytes4 = 0                                                              # STEP 16
os0.symlink(path3,path0)                                                # STEP 17
path3 += "/" + component0                                               # STEP 18
os0.path.getsize(path3)                                                 # STEP 19
os0.symlink(path3,path0)                                                # STEP 20
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 21
bytes1 = 0                                                              # STEP 22
result = os0.readlink(path0)                                            # STEP 23
stat3 = os0.lstat(path3)                                                # STEP 24
result = sorted(os0.listdir(path0))                                     # STEP 25
result = os0.readlink(path3)                                            # STEP 26
result = os0.path.isabs(path0)                                          # STEP 27
stat2 = os0.fstat(fd0)                                                  # STEP 28
stat0 = os0.stat(path3)                                                 # STEP 29
result = os0.path.exists(path3)                                         # STEP 30
result = os0.readlink(path0)                                            # STEP 31
result = os0.path.dirname(path0)                                        # STEP 32
path0 += "/" + component0                                               # STEP 33
result = os0.readlink(path3)                                            # STEP 34
component3 = "g"                                                        # STEP 35
component4 = "gamma"                                                    # STEP 36
result = os0.path.exists(path3)                                         # STEP 37
result = sorted(os0.listdir(path0))                                     # STEP 38
result = os0.path.isabs(path0)                                          # STEP 39
result = os0.path.isabs(path0)                                          # STEP 40
os0.rmdir(path0)                                                        # STEP 41
os0.mkdir(path3)                                                        # STEP 42
os0.path.getsize(path3)                                                 # STEP 43
result = os0.path.isabs(path0)                                          # STEP 44
os0.mkdir(path0)                                                        # STEP 45
result = os0.path.exists(path0)                                         # STEP 46
os0.mkdir(path0)                                                        # STEP 47
os0.mkdir(path0)                                                        # STEP 48
stat4 = os0.lstat(path0)                                                # STEP 49
stat1 = os0.lstat(path3)                                                # STEP 50
component0 = "b"                                                        # STEP 51
result = sorted(os0.listdir(path3))                                     # STEP 52
bytes3 = 0                                                              # STEP 53
component2 = "e"                                                        # STEP 54
result = sorted(os0.listdir(path3))                                     # STEP 55
os0.mkdir(path0)                                                        # STEP 56
os0.mkdir(path3)                                                        # STEP 57
result = os0.readlink(path0)                                            # STEP 58
result = sorted(os0.listdir(path3))                                     # STEP 59
os0.mkdir(path0)                                                        # STEP 60
result = os0.path.exists(path3)                                         # STEP 61
result = sorted(os0.listdir(path3))                                     # STEP 62
os0.close(fd0)                                                          # STEP 63
file0 = opener0(path3)                                                  # STEP 64
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 65
os0.mkdir(path3)                                                        # STEP 66
result = os0.path.exists(path0)                                         # STEP 67
os0.rmdir(path3)                                                        # STEP 68
result = os0.path.dirname(path0)                                        # STEP 69
file0.truncate()                                                        # STEP 70
result = sorted(os0.listdir(path3))                                     # STEP 71
os0.path.getsize(path0)                                                 # STEP 72
result = os0.path.isabs(path3)                                          # STEP 73
os0.rmdir(path3)                                                        # STEP 74
file0.truncate()                                                        # STEP 75
result = os0.path.exists(path3)                                         # STEP 76
path2 = "/Volumes/ramdisk/test"                                         # STEP 77
os0.mkdir(path3)                                                        # STEP 78
result = os0.readlink(path0)                                            # STEP 79
os0.mkdir(path3)                                                        # STEP 80
os0.symlink(path0,path2)                                                # STEP 81
os0.close(fd0)                                                          # STEP 82
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 83
component1 = "b"                                                        # STEP 84
os0.symlink(path2,path2)                                                # STEP 85
result = os0.path.dirname(path2)                                        # STEP 86
path0 += "/" + component0                                               # STEP 87
os0.symlink(path2,path2)                                                # STEP 88
result = os0.path.exists(path3)                                         # STEP 89
result = sorted(os0.listdir(path2))                                     # STEP 90
file0.flush()                                                           # STEP 91
result = file0.readline()                                               # STEP 92
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103993488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28674, in act569
    assert (raised == None) == (refRaised == None)
1176 BRANCHES COVERED
901 STATEMENTS COVERED
