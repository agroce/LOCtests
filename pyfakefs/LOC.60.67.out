Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5338.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x109ad91b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 93 steps

SAVING TEST AS failure.5338.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "beta"                                                      # STEP 1
str2 = ""                                                                # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "gamma"                                                     # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.dirname(path3)                                         # STEP 6
os0.makedirs(path3)                                                      # STEP 7
result = os0.path.abspath(path3)                                         # STEP 8
path3 += "/" + component3                                                # STEP 9
result = os0.path.islink(path4)                                         # STEP 10
stat3 = os0.stat(path3)                                                 # STEP 11
stat3 = os0.stat(path3)                                                 # STEP 12
stat4 = os0.lstat(path3)                                                # STEP 13
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 14
path1 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.link(path1,path3)                                                   # STEP 16
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
result = os0.readlink(path1)                                            # STEP 18
result = sorted(os0.listdir(path1))                                     # STEP 19
os0.symlink(path4,path4)                                                # STEP 20
result = sorted(os0.listdir(path4))                                     # STEP 21
str2 += " "                                                             # STEP 22
result = os0.path.exists(path3)                                         # STEP 23
result = os0.path.abspath(path4)                                        # STEP 24
stat4 = os0.lstat(path3)                                                # STEP 25
os0.mkdir(path4)                                                        # STEP 26
component3 = "lambda"                                                   # STEP 27
os0.mkdir(path1)                                                        # STEP 28
os0.close(fd0)                                                          # STEP 29
result = os0.readlink(path4)                                            # STEP 30
result = os0.path.exists(path4)                                         # STEP 31
os0.remove(path3)                                                       # STEP 32
result = os0.readlink(path4)                                            # STEP 33
result = os0.path.dirname(path4)                                        # STEP 34
result = os0.path.dirname(path4)                                        # STEP 35
result = stat4.st_size                                                  # STEP 36
os0.close(fd0)                                                          # STEP 37
result = os0.readlink(path4)                                            # STEP 38
result = os0.path.isdir(path4)                                          # STEP 39
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 40
opener0 = newFakeOpener(os0)                                            # STEP 41
os0.close(fd0)                                                          # STEP 42
stat4 = os0.stat(path3)                                                 # STEP 43
result = os0.readlink(path3)                                            # STEP 44
os0.rmdir(path3)                                                        # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
result = os0.readlink(path1)                                            # STEP 47
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 48
str2 += " "                                                             # STEP 49
os0.link(path1,path3)                                                   # STEP 50
result = os0.path.lexists(path4)                                        # STEP 51
result = os0.path.isabs(path3)                                          # STEP 52
os0.close(fd0)                                                          # STEP 53
os0.remove(path1)                                                       # STEP 54
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 55
os0.close(fd0)                                                          # STEP 56
os0.mkdir(path4)                                                        # STEP 57
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 58
os0.symlink(path1,path3)                                                # STEP 59
os0.symlink(path1,path1)                                                # STEP 60
bytes4 = 0                                                              # STEP 61
file0 = opener0(path3,'r')                                              # STEP 62
bytes4 += 1                                                             # STEP 63
result = file0.readline()                                               # STEP 64
result = file0.readline(bytes4)                                         # STEP 65
stat1 = os0.stat(path3)                                                 # STEP 66
result = file0.read(bytes4)                                             # STEP 67
path4 += "/" + component3                                               # STEP 68
result = file0.read()                                                   # STEP 69
result = os0.read(fd0,bytes4)                                           # STEP 70
stat2 = os0.lstat(path3)                                                # STEP 71
result = file0.readlines()                                              # STEP 72
os0.write(fd0,str2)                                                     # STEP 73
stat3 = os0.fstat(fd0)                                                  # STEP 74
bytes4 = 0                                                              # STEP 75
bytes3 = 0                                                              # STEP 76
result = sorted(os0.listdir(path1))                                     # STEP 77
result = os0.readlink(path1)                                            # STEP 78
bytes0 = 0                                                              # STEP 79
result = stat4.st_size                                                  # STEP 80
result = file0.readlines()                                              # STEP 81
str2 += 'k'                                                             # STEP 82
os0.link(path1,path4)                                                   # STEP 83
path3 += "/" + component3                                               # STEP 84
bytes2 = 0                                                              # STEP 85
result = stat4.st_size                                                  # STEP 86
result = os0.readlink(path1)                                            # STEP 87
file0.seek(bytes2)                                                      # STEP 88
str3 = ""                                                               # STEP 89
path4 = "/Volumes/ramdisk/test"                                         # STEP 90
file0.next()                                                            # STEP 91
file0.truncate()                                                        # STEP 92
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10709a758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['v']) == ([]) ",), <traceback object at 0x1076f2710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 80 steps

SAVING TEST AS failure.5338.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "g"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
result = os0.path.exists(path4)                                          # STEP 4
file0 = opener0(path4,'w')                                               # STEP 5
result = os0.path.isfile(path4)                                          # STEP 6
path4 += "/" + component2                                                # STEP 7
result = sorted(os0.listdir(path4))                                      # STEP 8
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)              # STEP 9
os0.rmdir(path4)                                                        # STEP 10
os0.remove(path4)                                                       # STEP 11
result = os0.readlink(path4)                                            # STEP 12
os0.rmdir(path4)                                                        # STEP 13
result = os0.path.islink(path4)                                         # STEP 14
file0 = opener0(path4)                                                  # STEP 15
os0.close(fd0)                                                          # STEP 16
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
stat2 = os0.lstat(path4)                                                # STEP 19
file0 = opener0(path4)                                                  # STEP 20
result = os0.path.islink(path4)                                         # STEP 21
result = os0.path.exists(path4)                                         # STEP 22
result = os0.path.abspath(path4)                                        # STEP 23
result = os0.path.abspath(path4)                                        # STEP 24
os0.rmdir(path4)                                                        # STEP 25
stat4 = os0.stat(path4)                                                 # STEP 26
os0.close(fd0)                                                          # STEP 27
stat0 = os0.stat(path4)                                                 # STEP 28
file0.truncate()                                                        # STEP 29
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.lexists(path1)                                        # STEP 31
os0.symlink(path1,path4)                                                # STEP 32
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 33
result = stat2.st_nlink                                                 # STEP 34
os0.rmdir(path4)                                                        # STEP 35
result = os0.path.lexists(path1)                                        # STEP 36
result = sorted(os0.listdir(path1))                                     # STEP 37
result = os0.path.lexists(path1)                                        # STEP 38
file0.flush()                                                           # STEP 39
os0.link(path1,path1)                                                   # STEP 40
os0.makedirs(path4)                                                     # STEP 41
bytes4 = 0                                                              # STEP 42
result = os0.path.exists(path1)                                         # STEP 43
file0.flush()                                                           # STEP 44
result = os0.path.isdir(path1)                                          # STEP 45
str1 = ""                                                               # STEP 46
result = stat0.st_nlink                                                 # STEP 47
bytes4 += 1                                                             # STEP 48
result = os0.path.lexists(path1)                                        # STEP 49
os0.write(fd0,str1)                                                     # STEP 50
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
bytes0 = 0                                                              # STEP 52
result = os0.path.isfile(path4)                                         # STEP 53
file0.truncate()                                                        # STEP 54
file0.write(str1)                                                       # STEP 55
file0.write(str1)                                                       # STEP 56
str1 += 'v'                                                             # STEP 57
result = file0.read(bytes4)                                             # STEP 58
component4 = "h"                                                        # STEP 59
stat1 = os0.lstat(path4)                                                # STEP 60
bytes0 += 1                                                             # STEP 61
result = sorted(os0.listdir(path4))                                     # STEP 62
bytes4 = 0                                                              # STEP 63
result = file0.readlines()                                              # STEP 64
stat2 = os0.fstat(fd0)                                                  # STEP 65
file0.truncate()                                                        # STEP 66
result = stat0.st_size                                                  # STEP 67
result = stat0.st_size                                                  # STEP 68
file0.truncate()                                                        # STEP 69
result = os0.path.isdir(path4)                                          # STEP 70
result = file0.readline(bytes4)                                         # STEP 71
os0.write(fd0,str1)                                                     # STEP 72
os0.rename(path4,path1)                                                 # STEP 73
path4 = "/Volumes/ramdisk/test"                                         # STEP 74
os0.makedirs(path1)                                                     # STEP 75
file0.write(str1)                                                       # STEP 76
result = os0.path.lexists(path1)                                        # STEP 77
os0.link(path4,path1)                                                   # STEP 78
result = file0.readlines()                                              # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['v']) == ([]) ",), <traceback object at 0x10658e4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (1) ',), <traceback object at 0x1074f7f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 64 steps

SAVING TEST AS failure.5338.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes1 = 0                                                               # STEP 0
os0 = newFakeOS()                                                        # STEP 1
bytes2 = 0                                                               # STEP 2
component2 = "h"                                                         # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
component0 = "beta"                                                      # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.mkdir(path0)                                                         # STEP 7
file0 = opener0(path0,'r')                                               # STEP 8
str1 = ""                                                                # STEP 9
file0 = opener0(path0,'a')                                              # STEP 10
os0.remove(path0)                                                       # STEP 11
bytes1 += 1                                                             # STEP 12
file0 = opener0(path0)                                                  # STEP 13
file0 = opener0(path0)                                                  # STEP 14
result = os0.readlink(path0)                                            # STEP 15
file0 = opener0(path0,'r')                                              # STEP 16
result = os0.path.isabs(path0)                                          # STEP 17
os0.symlink(path0,path0)                                                # STEP 18
result = sorted(os0.listdir(path0))                                     # STEP 19
file0 = opener0(path0)                                                  # STEP 20
result = os0.readlink(path0)                                            # STEP 21
file0 = opener0(path0,'a')                                              # STEP 22
result = os0.readlink(path0)                                            # STEP 23
os0.symlink(path0,path0)                                                # STEP 24
str4 = ""                                                               # STEP 25
bytes3 = 0                                                              # STEP 26
result = os0.path.abspath(path0)                                        # STEP 27
result = os0.path.islink(path0)                                         # STEP 28
os0.link(path0,path0)                                                   # STEP 29
bytes4 = 0                                                              # STEP 30
path0 += "/" + component2                                               # STEP 31
result = os0.path.isdir(path0)                                          # STEP 32
stat4 = os0.lstat(path0)                                                # STEP 33
file0 = opener0(path0,'w')                                              # STEP 34
bytes3 += 1                                                             # STEP 35
result = os0.path.lexists(path0)                                        # STEP 36
result = os0.path.abspath(path0)                                        # STEP 37
result = os0.path.lexists(path0)                                        # STEP 38
result = os0.readlink(path0)                                            # STEP 39
file0.seek(bytes1)                                                      # STEP 40
result = file0.read()                                                   # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 43
result = os0.path.lexists(path0)                                        # STEP 44
result = os0.path.lexists(path0)                                        # STEP 45
os0.remove(path0)                                                       # STEP 46
file0.seek(bytes1)                                                      # STEP 47
result = os0.path.exists(path0)                                         # STEP 48
os0.symlink(path0,path0)                                                # STEP 49
result = os0.path.lexists(path0)                                        # STEP 50
file0.truncate()                                                        # STEP 51
result = os0.path.isdir(path0)                                          # STEP 52
os0.remove(path0)                                                       # STEP 53
stat3 = os0.fstat(fd0)                                                  # STEP 54
result = sorted(os0.listdir(path0))                                     # STEP 55
result = os0.path.isfile(path0)                                         # STEP 56
result = os0.path.exists(path0)                                         # STEP 57
result = os0.path.exists(path0)                                         # STEP 58
result = os0.path.exists(path0)                                         # STEP 59
result = os0.path.isdir(path0)                                          # STEP 60
result = os0.path.dirname(path0)                                        # STEP 61
stat4 = os0.fstat(fd0)                                                  # STEP 62
result = stat4.st_size                                                  # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (1) ',), <traceback object at 0x1076db8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #169 STEP #20 (0:00:30.001621) Sat Jul 22 05:21:02 2017 [ 900 stmts 1170 branches ] 16757 TOTAL ACTIONS (558.536486931/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x108049d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 78 steps

SAVING TEST AS failure.5338.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "e"                                                         # STEP 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes3 = 0                                                               # STEP 2
bytes3 += 1                                                              # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
bytes3 += 1                                                              # STEP 5
str4 = ""                                                                # STEP 6
bytes0 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
result = os0.path.islink(path0)                                          # STEP 9
result = os0.path.isabs(path0)                                          # STEP 10
str4 += 'l'                                                             # STEP 11
result = os0.path.isdir(path0)                                          # STEP 12
str4 += 'o'                                                             # STEP 13
result = os0.path.exists(path0)                                         # STEP 14
str4 += " "                                                             # STEP 15
result = os0.path.islink(path3)                                         # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
result = os0.path.dirname(path3)                                        # STEP 18
result = os0.path.islink(path0)                                         # STEP 19
str4 += 'd'                                                             # STEP 20
path3 = "/Volumes/ramdisk/test"                                         # STEP 21
result = os0.path.isfile(path0)                                         # STEP 22
file0 = opener0(path3,'a')                                              # STEP 23
path0 += "/" + component1                                               # STEP 24
os0.link(path3,path3)                                                   # STEP 25
file0 = opener0(path0,'r')                                              # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
os0.symlink(path0,path0)                                                # STEP 28
stat0 = os0.fstat(fd0)                                                  # STEP 29
os0.rename(path0,path3)                                                 # STEP 30
os0.symlink(path3,path3)                                                # STEP 31
os0.link(path3,path3)                                                   # STEP 32
result = os0.path.abspath(path3)                                        # STEP 33
result = os0.path.lexists(path0)                                        # STEP 34
result = os0.path.dirname(path3)                                        # STEP 35
result = os0.path.exists(path0)                                         # STEP 36
result = os0.path.isabs(path3)                                          # STEP 37
os0.rmdir(path0)                                                        # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
os0.rmdir(path0)                                                        # STEP 41
os0.makedirs(path0)                                                     # STEP 42
result = os0.path.isfile(path3)                                         # STEP 43
str4 += 'k'                                                             # STEP 44
result = stat0.st_size                                                  # STEP 45
result = os0.path.exists(path0)                                         # STEP 46
str4 += 'r'                                                             # STEP 47
os0.remove(path3)                                                       # STEP 48
result = stat0.st_size                                                  # STEP 49
os0.link(path0,path0)                                                   # STEP 50
result = os0.path.isabs(path0)                                          # STEP 51
stat1 = os0.lstat(path0)                                                # STEP 52
bytes0 += 1                                                             # STEP 53
os0.rename(path0,path3)                                                 # STEP 54
str4 += " "                                                             # STEP 55
os0.link(path0,path0)                                                   # STEP 56
os0.rmdir(path0)                                                        # STEP 57
result = os0.path.islink(path3)                                         # STEP 58
result = stat0.st_size                                                  # STEP 59
os0.rmdir(path0)                                                        # STEP 60
file0 = opener0(path3)                                                  # STEP 61
bytes3 += 1                                                             # STEP 62
result = os0.path.abspath(path3)                                        # STEP 63
file0 = opener0(path0,'w')                                              # STEP 64
os0.rename(path0,path3)                                                 # STEP 65
result = sorted(os0.listdir(path3))                                     # STEP 66
file0.next()                                                            # STEP 67
os0.rename(path0,path3)                                                 # STEP 68
result = os0.path.isabs(path0)                                          # STEP 69
file0.truncate()                                                        # STEP 70
path0 = "/Volumes/ramdisk/test"                                         # STEP 71
component2 = "e"                                                        # STEP 72
file0.flush()                                                           # STEP 73
result = os0.path.isdir(path3)                                          # STEP 74
file0.write(str4)                                                       # STEP 75
os0.write(fd0,str4)                                                     # STEP 76
result = file0.read()                                                   # STEP 77
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10808c9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104d38b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28793, in act571
    assert (raised == None) == (refRaised == None)
Original test has 83 steps

SAVING TEST AS failure.5338.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
str1 = ""                                                                # STEP 2
bytes4 = 0                                                               # STEP 3
bytes3 = 0                                                               # STEP 4
bytes2 = 0                                                               # STEP 5
bytes0 = 0                                                               # STEP 6
bytes4 += 1                                                              # STEP 7
bytes4 = 0                                                               # STEP 8
bytes3 += 1                                                              # STEP 9
bytes2 += 1                                                             # STEP 10
bytes2 = 0                                                              # STEP 11
str1 += " "                                                             # STEP 12
bytes2 += 1                                                             # STEP 13
bytes0 += 1                                                             # STEP 14
bytes0 = 0                                                              # STEP 15
bytes2 += 1                                                             # STEP 16
str1 += " "                                                             # STEP 17
bytes3 = 0                                                              # STEP 18
component3 = "gamma"                                                    # STEP 19
component0 = "h"                                                        # STEP 20
str1 += " "                                                             # STEP 21
str1 += " "                                                             # STEP 22
component2 = "b"                                                        # STEP 23
str1 = ""                                                               # STEP 24
str1 += 'o'                                                             # STEP 25
bytes2 = 0                                                              # STEP 26
str1 = ""                                                               # STEP 27
str4 = ""                                                               # STEP 28
bytes1 = 0                                                              # STEP 29
str4 += " "                                                             # STEP 30
str2 = ""                                                               # STEP 31
str4 += " "                                                             # STEP 32
bytes4 += 1                                                             # STEP 33
component1 = "alpha"                                                    # STEP 34
str0 = ""                                                               # STEP 35
bytes4 = 0                                                              # STEP 36
str4 = ""                                                               # STEP 37
str0 += " "                                                             # STEP 38
path1 = "/Volumes/ramdisk/test"                                         # STEP 39
path0 = "/Volumes/ramdisk/test"                                         # STEP 40
component4 = "alpha"                                                    # STEP 41
os0.mkdir(path1)                                                        # STEP 42
result = os0.path.isdir(path1)                                          # STEP 43
os0.remove(path0)                                                       # STEP 44
result = sorted(os0.listdir(path0))                                     # STEP 45
str0 = ""                                                               # STEP 46
os0.link(path1,path1)                                                   # STEP 47
result = os0.path.abspath(path1)                                        # STEP 48
file0 = opener0(path0)                                                  # STEP 49
str3 = ""                                                               # STEP 50
path4 = "/Volumes/ramdisk/test"                                         # STEP 51
os0.makedirs(path4)                                                     # STEP 52
file0 = opener0(path4,'w')                                              # STEP 53
str4 += 't'                                                             # STEP 54
path0 += "/" + component4                                               # STEP 55
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 56
result = os0.path.isabs(path1)                                          # STEP 57
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 58
result = os0.path.isdir(path4)                                          # STEP 59
file0 = opener0(path4)                                                  # STEP 60
result = os0.path.exists(path1)                                         # STEP 61
result = os0.path.exists(path4)                                         # STEP 62
str4 = ""                                                               # STEP 63
os0.rename(path0,path1)                                                 # STEP 64
os0.close(fd0)                                                          # STEP 65
os0.rmdir(path0)                                                        # STEP 66
os0.remove(path1)                                                       # STEP 67
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 68
file0 = opener0(path0,'r')                                              # STEP 69
result = os0.readlink(path1)                                            # STEP 70
file0.seek(bytes0)                                                      # STEP 71
result = os0.path.lexists(path1)                                        # STEP 72
path2 = "/Volumes/ramdisk/test"                                         # STEP 73
os0.makedirs(path1)                                                     # STEP 74
result = os0.path.isdir(path4)                                          # STEP 75
str4 += " "                                                             # STEP 76
result = os0.path.isabs(path2)                                          # STEP 77
os0.symlink(path1,path1)                                                # STEP 78
file0.seek(bytes3)                                                      # STEP 79
os0.mkdir(path0)                                                        # STEP 80
os0.close(fd0)                                                          # STEP 81
result = file0.readline(bytes1)                                         # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x107c033f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28793, in act571
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10706cab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28500, in act566
    assert (raised == None) == (refRaised == None)
Original test has 95 steps

SAVING TEST AS failure.5338.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes2 = 0                                                               # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
os0.makedirs(path2)                                                      # STEP 3
result = sorted(os0.listdir(path2))                                      # STEP 4
result = os0.path.abspath(path2)                                         # STEP 5
result = os0.path.islink(path2)                                          # STEP 6
result = os0.path.dirname(path2)                                         # STEP 7
result = os0.path.exists(path2)                                          # STEP 8
result = sorted(os0.listdir(path2))                                      # STEP 9
bytes3 = 0                                                              # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.path.isabs(path2)                                          # STEP 12
result = os0.readlink(path2)                                            # STEP 13
result = os0.path.exists(path2)                                         # STEP 14
result = os0.path.dirname(path2)                                        # STEP 15
result = os0.path.abspath(path2)                                        # STEP 16
result = sorted(os0.listdir(path2))                                     # STEP 17
file0 = opener0(path2)                                                  # STEP 18
result = sorted(os0.listdir(path2))                                     # STEP 19
os0.symlink(path2,path2)                                                # STEP 20
result = os0.path.exists(path2)                                         # STEP 21
result = sorted(os0.listdir(path2))                                     # STEP 22
result = os0.path.exists(path2)                                         # STEP 23
file0 = opener0(path2,'a')                                              # STEP 24
result = sorted(os0.listdir(path2))                                     # STEP 25
result = os0.path.isabs(path2)                                          # STEP 26
file0 = opener0(path2,'a')                                              # STEP 27
file0 = opener0(path2,'a')                                              # STEP 28
bytes2 += 1                                                             # STEP 29
file0 = opener0(path2,'r')                                              # STEP 30
result = os0.path.abspath(path2)                                        # STEP 31
file0 = opener0(path2,'r')                                              # STEP 32
os0.link(path2,path2)                                                   # STEP 33
os0.makedirs(path2)                                                     # STEP 34
result = os0.path.exists(path2)                                         # STEP 35
result = os0.path.islink(path2)                                         # STEP 36
file0 = opener0(path2)                                                  # STEP 37
path2 = "/Volumes/ramdisk/test"                                         # STEP 38
file0 = opener0(path2,'r')                                              # STEP 39
result = sorted(os0.listdir(path2))                                     # STEP 40
result = os0.path.exists(path2)                                         # STEP 41
os0.mkdir(path2)                                                        # STEP 42
os0.makedirs(path2)                                                     # STEP 43
result = os0.path.isabs(path2)                                          # STEP 44
result = os0.path.isfile(path2)                                         # STEP 45
file0 = opener0(path2,'a')                                              # STEP 46
result = os0.path.dirname(path2)                                        # STEP 47
result = os0.path.isdir(path2)                                          # STEP 48
bytes2 = 0                                                              # STEP 49
os0.symlink(path2,path2)                                                # STEP 50
file0 = opener0(path2)                                                  # STEP 51
file0 = opener0(path2,'w')                                              # STEP 52
os0.link(path2,path2)                                                   # STEP 53
file0 = opener0(path2,'a')                                              # STEP 54
component2 = "c"                                                        # STEP 55
file0 = opener0(path2,'r')                                              # STEP 56
result = os0.readlink(path2)                                            # STEP 57
component1 = "lambda"                                                   # STEP 58
file0 = opener0(path2,'a')                                              # STEP 59
file0 = opener0(path2)                                                  # STEP 60
bytes2 += 1                                                             # STEP 61
file0 = opener0(path2)                                                  # STEP 62
path2 += "/" + component2                                               # STEP 63
os0.link(path2,path2)                                                   # STEP 64
result = os0.readlink(path2)                                            # STEP 65
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 66
result = sorted(os0.listdir(path2))                                     # STEP 67
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 68
bytes4 = 0                                                              # STEP 69
os0.close(fd0)                                                          # STEP 70
file0 = opener0(path2,'r')                                              # STEP 71
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 72
result = os0.read(fd0,bytes3)                                           # STEP 73
os0.makedirs(path2)                                                     # STEP 74
os0.close(fd0)                                                          # STEP 75
bytes1 = 0                                                              # STEP 76
result = file0.readlines()                                              # STEP 77
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 78
result = os0.path.isdir(path2)                                          # STEP 79
file0.seek(bytes3)                                                      # STEP 80
os0.rmdir(path2)                                                        # STEP 81
result = os0.path.abspath(path2)                                        # STEP 82
os0.rmdir(path2)                                                        # STEP 83
component0 = "gamma"                                                    # STEP 84
result = file0.read(bytes3)                                             # STEP 85
os0.mkdir(path2)                                                        # STEP 86
os0.mkdir(path2)                                                        # STEP 87
result = os0.path.isfile(path2)                                         # STEP 88
file0.flush()                                                           # STEP 89
result = os0.readlink(path2)                                            # STEP 90
os0.rmdir(path2)                                                        # STEP 91
os0.makedirs(path2)                                                     # STEP 92
result = os0.path.exists(path2)                                         # STEP 93
result = file0.read(bytes2)                                             # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109e6dc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28500, in act566
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106582ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 74 steps

SAVING TEST AS failure.5338.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "f"                                                         # STEP 0
component0 = "phi"                                                       # STEP 1
str3 = ""                                                                # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
str3 += 'k'                                                              # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 += 'r'                                                              # STEP 6
str3 += 'a'                                                              # STEP 7
str3 += " "                                                              # STEP 8
os0 = newFakeOS()                                                        # STEP 9
result = os0.path.isabs(path1)                                          # STEP 10
os0.symlink(path1,path3)                                                # STEP 11
component3 = "d"                                                        # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
component1 = "g"                                                        # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
result = os0.path.lexists(path3)                                        # STEP 16
bytes4 = 0                                                              # STEP 17
result = os0.path.exists(path1)                                         # STEP 18
str3 += " "                                                             # STEP 19
os0.makedirs(path3)                                                     # STEP 20
result = sorted(os0.listdir(path3))                                     # STEP 21
os0.link(path3,path3)                                                   # STEP 22
result = os0.path.lexists(path1)                                        # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
bytes4 += 1                                                             # STEP 25
path1 += "/" + component1                                               # STEP 26
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 27
os0.link(path3,path1)                                                   # STEP 28
os0.makedirs(path1)                                                     # STEP 29
os0.symlink(path3,path1)                                                # STEP 30
bytes4 = 0                                                              # STEP 31
str3 += 'k'                                                             # STEP 32
result = os0.path.abspath(path1)                                        # STEP 33
result = os0.path.isdir(path3)                                          # STEP 34
result = sorted(os0.listdir(path1))                                     # STEP 35
os0.rename(path1,path3)                                                 # STEP 36
str2 = ""                                                               # STEP 37
os0.close(fd0)                                                          # STEP 38
os0.link(path3,path1)                                                   # STEP 39
bytes1 = 0                                                              # STEP 40
result = os0.path.abspath(path3)                                        # STEP 41
bytes2 = 0                                                              # STEP 42
result = os0.path.abspath(path3)                                        # STEP 43
result = os0.path.lexists(path3)                                        # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 45
result = os0.path.dirname(path3)                                        # STEP 46
os0.close(fd0)                                                          # STEP 47
os0.rename(path1,path3)                                                 # STEP 48
str3 += 'r'                                                             # STEP 49
os0.symlink(path3,path3)                                                # STEP 50
result = os0.path.isabs(path1)                                          # STEP 51
result = sorted(os0.listdir(path3))                                     # STEP 52
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 53
result = os0.path.isabs(path3)                                          # STEP 54
bytes1 += 1                                                             # STEP 55
result = os0.path.dirname(path3)                                        # STEP 56
os0.rename(path1,path3)                                                 # STEP 57
result = os0.path.islink(path1)                                         # STEP 58
result = os0.path.exists(path1)                                         # STEP 59
os0.symlink(path1,path1)                                                # STEP 60
str3 += 's'                                                             # STEP 61
file0 = opener0(path3,'w')                                              # STEP 62
file0 = opener0(path3,'r')                                              # STEP 63
file0 = opener0(path1,'a')                                              # STEP 64
result = os0.read(fd0,bytes1)                                           # STEP 65
result = os0.read(fd0,bytes2)                                           # STEP 66
result = os0.read(fd0,bytes4)                                           # STEP 67
os0.rename(path1,path3)                                                 # STEP 68
result = os0.path.islink(path3)                                         # STEP 69
os0.remove(path3)                                                       # STEP 70
os0.makedirs(path3)                                                     # STEP 71
stat0 = os0.stat(path1)                                                 # STEP 72
result = file0.readlines()                                              # STEP 73
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107e868c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x107e487e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 60 steps

SAVING TEST AS failure.5338.test.7
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component3 = "b"                                                         # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
os0.link(path4,path4)                                                    # STEP 3
result = os0.path.islink(path4)                                          # STEP 4
path4 += "/" + component3                                                # STEP 5
path4 += "/" + component3                                                # STEP 6
result = os0.path.abspath(path4)                                         # STEP 7
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 8
stat0 = os0.stat(path4)                                                  # STEP 9
os0.makedirs(path4)                                                     # STEP 10
result = os0.path.lexists(path4)                                        # STEP 11
result = os0.path.isabs(path4)                                          # STEP 12
path4 += "/" + component3                                               # STEP 13
os0.remove(path4)                                                       # STEP 14
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 15
os0.makedirs(path4)                                                     # STEP 16
bytes2 = 0                                                              # STEP 17
str0 = ""                                                               # STEP 18
os0.symlink(path4,path4)                                                # STEP 19
opener0 = newFakeOpener(os0)                                            # STEP 20
os0.mkdir(path4)                                                        # STEP 21
os0.makedirs(path4)                                                     # STEP 22
str0 += " "                                                             # STEP 23
result = sorted(os0.listdir(path4))                                     # STEP 24
result = os0.path.islink(path4)                                         # STEP 25
result = os0.path.abspath(path4)                                        # STEP 26
file0 = opener0(path4)                                                  # STEP 27
stat2 = os0.stat(path4)                                                 # STEP 28
bytes2 += 1                                                             # STEP 29
component2 = "delta"                                                    # STEP 30
os0.link(path4,path4)                                                   # STEP 31
os0.rmdir(path4)                                                        # STEP 32
result = os0.path.lexists(path4)                                        # STEP 33
result = os0.path.exists(path4)                                         # STEP 34
stat1 = os0.stat(path4)                                                 # STEP 35
result = os0.path.lexists(path4)                                        # STEP 36
os0.makedirs(path4)                                                     # STEP 37
os0.symlink(path4,path4)                                                # STEP 38
file0.write(str0)                                                       # STEP 39
stat3 = os0.lstat(path4)                                                # STEP 40
result = file0.read()                                                   # STEP 41
os0.makedirs(path4)                                                     # STEP 42
result = file0.readline(bytes2)                                         # STEP 43
result = os0.path.abspath(path4)                                        # STEP 44
result = file0.read(bytes2)                                             # STEP 45
result = os0.path.abspath(path4)                                        # STEP 46
result = file0.read()                                                   # STEP 47
file0.truncate()                                                        # STEP 48
file0.truncate()                                                        # STEP 49
os0.link(path4,path4)                                                   # STEP 50
os0.mkdir(path4)                                                        # STEP 51
result = file0.readline()                                               # STEP 52
os0.write(fd0,str0)                                                     # STEP 53
stat4 = os0.stat(path4)                                                 # STEP 54
os0.makedirs(path4)                                                     # STEP 55
file0.next()                                                            # STEP 56
file0.flush()                                                           # STEP 57
bytes0 = 0                                                              # STEP 58
result = file0.readline()                                               # STEP 59
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x107e733f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 8 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109c171b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28761, in act571
    result = self.p_file[0].readline(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 47 steps

SAVING TEST AS failure.5338.test.8
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "f"                                                         # STEP 0
str2 = ""                                                                # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
str1 = ""                                                                # STEP 3
bytes3 = 0                                                               # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
bytes4 = 0                                                               # STEP 6
os0 = newFakeOS()                                                        # STEP 7
result = os0.path.isabs(path1)                                           # STEP 8
result = os0.path.dirname(path1)                                         # STEP 9
result = os0.path.isdir(path1)                                          # STEP 10
path1 += "/" + component0                                               # STEP 11
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
result = os0.path.isdir(path3)                                          # STEP 14
result = os0.read(fd0,bytes4)                                           # STEP 15
stat1 = os0.stat(path1)                                                 # STEP 16
result = os0.read(fd0,bytes4)                                           # STEP 17
result = os0.path.isabs(path3)                                          # STEP 18
str2 += 'e'                                                             # STEP 19
str4 = ""                                                               # STEP 20
result = os0.path.dirname(path1)                                        # STEP 21
stat0 = os0.fstat(fd0)                                                  # STEP 22
stat2 = os0.fstat(fd0)                                                  # STEP 23
result = sorted(os0.listdir(path1))                                     # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
component3 = "h"                                                        # STEP 26
result = os0.path.isdir(path1)                                          # STEP 27
result = os0.path.lexists(path1)                                        # STEP 28
os0.rmdir(path1)                                                        # STEP 29
bytes1 = 0                                                              # STEP 30
os0.mkdir(path3)                                                        # STEP 31
result = os0.path.abspath(path1)                                        # STEP 32
file0 = opener0(path3,'a')                                              # STEP 33
str1 += " "                                                             # STEP 34
os0.mkdir(path1)                                                        # STEP 35
bytes2 = 0                                                              # STEP 36
os0.rename(path1,path3)                                                 # STEP 37
file0 = opener0(path3,'a')                                              # STEP 38
os0.close(fd0)                                                          # STEP 39
result = os0.path.abspath(path1)                                        # STEP 40
result = os0.path.isdir(path1)                                          # STEP 41
file0 = opener0(path1,'w')                                              # STEP 42
result = os0.read(fd0,bytes1)                                           # STEP 43
result = os0.path.isfile(path3)                                         # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
result = file0.readline(bytes1)                                         # STEP 46
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064a97e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28761, in act571
    result = self.p_file[0].readline(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 9 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x104d2db48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 44 steps

SAVING TEST AS failure.5338.test.9
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "d"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str1 = ""                                                                # STEP 2
component4 = "gamma"                                                     # STEP 3
str1 += " "                                                              # STEP 4
str0 = ""                                                                # STEP 5
component1 = "epsilon"                                                   # STEP 6
str1 += 'o'                                                              # STEP 7
bytes0 = 0                                                               # STEP 8
bytes0 += 1                                                              # STEP 9
str4 = ""                                                               # STEP 10
str0 += " "                                                             # STEP 11
str0 = ""                                                               # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
str0 += " "                                                             # STEP 14
result = os0.path.isfile(path2)                                         # STEP 15
str1 += 'o'                                                             # STEP 16
str2 = ""                                                               # STEP 17
os0.link(path2,path2)                                                   # STEP 18
result = os0.path.abspath(path2)                                        # STEP 19
result = os0.readlink(path2)                                            # STEP 20
result = os0.readlink(path2)                                            # STEP 21
result = os0.path.islink(path2)                                         # STEP 22
result = os0.readlink(path2)                                            # STEP 23
path2 += "/" + component3                                               # STEP 24
result = os0.path.islink(path2)                                         # STEP 25
os0.path.getsize(path2)                                                 # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
result = os0.path.isfile(path2)                                         # STEP 28
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 29
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 30
result = os0.readlink(path2)                                            # STEP 31
bytes2 = 0                                                              # STEP 32
os0.symlink(path2,path2)                                                # STEP 33
os0.mkdir(path2)                                                        # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
file0 = opener0(path2)                                                  # STEP 36
bytes0 += 1                                                             # STEP 37
result = file0.readlines()                                              # STEP 38
result = os0.path.abspath(path2)                                        # STEP 39
os0.write(fd0,str0)                                                     # STEP 40
bytes3 = 0                                                              # STEP 41
path0 = "/Volumes/ramdisk/test"                                         # STEP 42
result = file0.read()                                                   # STEP 43
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x108e13878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 10 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 68
STOPPING TESTING DUE TO TIMEOUT
42.8093645485 PERCENT COVERED
60.3173651695 TOTAL RUNTIME
338 EXECUTED
33486 TOTAL TEST OPERATIONS
41.5226054192 TIME SPENT EXECUTING TEST OPERATIONS
16.3172335625 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0224547386169 TIME SPENT CHECKING PROPERTIES
41.5450601578 TOTAL TIME SPENT RUNNING SUT
0.997756719589 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
10 FAILED
0 REPEATS OF FAILURES
10 ACTUAL DISTINCT FAILURES

FAILURE 0
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "beta"                                                      # STEP 1
str2 = ""                                                                # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "gamma"                                                     # STEP 4
os0 = newFakeOS()                                                        # STEP 5
result = os0.path.dirname(path3)                                         # STEP 6
os0.makedirs(path3)                                                      # STEP 7
result = os0.path.abspath(path3)                                         # STEP 8
path3 += "/" + component3                                                # STEP 9
result = os0.path.islink(path4)                                         # STEP 10
stat3 = os0.stat(path3)                                                 # STEP 11
stat3 = os0.stat(path3)                                                 # STEP 12
stat4 = os0.lstat(path3)                                                # STEP 13
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 14
path1 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.link(path1,path3)                                                   # STEP 16
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
result = os0.readlink(path1)                                            # STEP 18
result = sorted(os0.listdir(path1))                                     # STEP 19
os0.symlink(path4,path4)                                                # STEP 20
result = sorted(os0.listdir(path4))                                     # STEP 21
str2 += " "                                                             # STEP 22
result = os0.path.exists(path3)                                         # STEP 23
result = os0.path.abspath(path4)                                        # STEP 24
stat4 = os0.lstat(path3)                                                # STEP 25
os0.mkdir(path4)                                                        # STEP 26
component3 = "lambda"                                                   # STEP 27
os0.mkdir(path1)                                                        # STEP 28
os0.close(fd0)                                                          # STEP 29
result = os0.readlink(path4)                                            # STEP 30
result = os0.path.exists(path4)                                         # STEP 31
os0.remove(path3)                                                       # STEP 32
result = os0.readlink(path4)                                            # STEP 33
result = os0.path.dirname(path4)                                        # STEP 34
result = os0.path.dirname(path4)                                        # STEP 35
result = stat4.st_size                                                  # STEP 36
os0.close(fd0)                                                          # STEP 37
result = os0.readlink(path4)                                            # STEP 38
result = os0.path.isdir(path4)                                          # STEP 39
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 40
opener0 = newFakeOpener(os0)                                            # STEP 41
os0.close(fd0)                                                          # STEP 42
stat4 = os0.stat(path3)                                                 # STEP 43
result = os0.readlink(path3)                                            # STEP 44
os0.rmdir(path3)                                                        # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
result = os0.readlink(path1)                                            # STEP 47
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 48
str2 += " "                                                             # STEP 49
os0.link(path1,path3)                                                   # STEP 50
result = os0.path.lexists(path4)                                        # STEP 51
result = os0.path.isabs(path3)                                          # STEP 52
os0.close(fd0)                                                          # STEP 53
os0.remove(path1)                                                       # STEP 54
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 55
os0.close(fd0)                                                          # STEP 56
os0.mkdir(path4)                                                        # STEP 57
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 58
os0.symlink(path1,path3)                                                # STEP 59
os0.symlink(path1,path1)                                                # STEP 60
bytes4 = 0                                                              # STEP 61
file0 = opener0(path3,'r')                                              # STEP 62
bytes4 += 1                                                             # STEP 63
result = file0.readline()                                               # STEP 64
result = file0.readline(bytes4)                                         # STEP 65
stat1 = os0.stat(path3)                                                 # STEP 66
result = file0.read(bytes4)                                             # STEP 67
path4 += "/" + component3                                               # STEP 68
result = file0.read()                                                   # STEP 69
result = os0.read(fd0,bytes4)                                           # STEP 70
stat2 = os0.lstat(path3)                                                # STEP 71
result = file0.readlines()                                              # STEP 72
os0.write(fd0,str2)                                                     # STEP 73
stat3 = os0.fstat(fd0)                                                  # STEP 74
bytes4 = 0                                                              # STEP 75
bytes3 = 0                                                              # STEP 76
result = sorted(os0.listdir(path1))                                     # STEP 77
result = os0.readlink(path1)                                            # STEP 78
bytes0 = 0                                                              # STEP 79
result = stat4.st_size                                                  # STEP 80
result = file0.readlines()                                              # STEP 81
str2 += 'k'                                                             # STEP 82
os0.link(path1,path4)                                                   # STEP 83
path3 += "/" + component3                                               # STEP 84
bytes2 = 0                                                              # STEP 85
result = stat4.st_size                                                  # STEP 86
result = os0.readlink(path1)                                            # STEP 87
file0.seek(bytes2)                                                      # STEP 88
str3 = ""                                                               # STEP 89
path4 = "/Volumes/ramdisk/test"                                         # STEP 90
file0.next()                                                            # STEP 91
file0.truncate()                                                        # STEP 92
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10709a758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
component2 = "g"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
result = os0.path.exists(path4)                                          # STEP 4
file0 = opener0(path4,'w')                                               # STEP 5
result = os0.path.isfile(path4)                                          # STEP 6
path4 += "/" + component2                                                # STEP 7
result = sorted(os0.listdir(path4))                                      # STEP 8
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)              # STEP 9
os0.rmdir(path4)                                                        # STEP 10
os0.remove(path4)                                                       # STEP 11
result = os0.readlink(path4)                                            # STEP 12
os0.rmdir(path4)                                                        # STEP 13
result = os0.path.islink(path4)                                         # STEP 14
file0 = opener0(path4)                                                  # STEP 15
os0.close(fd0)                                                          # STEP 16
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
stat2 = os0.lstat(path4)                                                # STEP 19
file0 = opener0(path4)                                                  # STEP 20
result = os0.path.islink(path4)                                         # STEP 21
result = os0.path.exists(path4)                                         # STEP 22
result = os0.path.abspath(path4)                                        # STEP 23
result = os0.path.abspath(path4)                                        # STEP 24
os0.rmdir(path4)                                                        # STEP 25
stat4 = os0.stat(path4)                                                 # STEP 26
os0.close(fd0)                                                          # STEP 27
stat0 = os0.stat(path4)                                                 # STEP 28
file0.truncate()                                                        # STEP 29
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.lexists(path1)                                        # STEP 31
os0.symlink(path1,path4)                                                # STEP 32
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 33
result = stat2.st_nlink                                                 # STEP 34
os0.rmdir(path4)                                                        # STEP 35
result = os0.path.lexists(path1)                                        # STEP 36
result = sorted(os0.listdir(path1))                                     # STEP 37
result = os0.path.lexists(path1)                                        # STEP 38
file0.flush()                                                           # STEP 39
os0.link(path1,path1)                                                   # STEP 40
os0.makedirs(path4)                                                     # STEP 41
bytes4 = 0                                                              # STEP 42
result = os0.path.exists(path1)                                         # STEP 43
file0.flush()                                                           # STEP 44
result = os0.path.isdir(path1)                                          # STEP 45
str1 = ""                                                               # STEP 46
result = stat0.st_nlink                                                 # STEP 47
bytes4 += 1                                                             # STEP 48
result = os0.path.lexists(path1)                                        # STEP 49
os0.write(fd0,str1)                                                     # STEP 50
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
bytes0 = 0                                                              # STEP 52
result = os0.path.isfile(path4)                                         # STEP 53
file0.truncate()                                                        # STEP 54
file0.write(str1)                                                       # STEP 55
file0.write(str1)                                                       # STEP 56
str1 += 'v'                                                             # STEP 57
result = file0.read(bytes4)                                             # STEP 58
component4 = "h"                                                        # STEP 59
stat1 = os0.lstat(path4)                                                # STEP 60
bytes0 += 1                                                             # STEP 61
result = sorted(os0.listdir(path4))                                     # STEP 62
bytes4 = 0                                                              # STEP 63
result = file0.readlines()                                              # STEP 64
stat2 = os0.fstat(fd0)                                                  # STEP 65
file0.truncate()                                                        # STEP 66
result = stat0.st_size                                                  # STEP 67
result = stat0.st_size                                                  # STEP 68
file0.truncate()                                                        # STEP 69
result = os0.path.isdir(path4)                                          # STEP 70
result = file0.readline(bytes4)                                         # STEP 71
os0.write(fd0,str1)                                                     # STEP 72
os0.rename(path4,path1)                                                 # STEP 73
path4 = "/Volumes/ramdisk/test"                                         # STEP 74
os0.makedirs(path1)                                                     # STEP 75
file0.write(str1)                                                       # STEP 76
result = os0.path.lexists(path1)                                        # STEP 77
os0.link(path4,path1)                                                   # STEP 78
result = file0.readlines()                                              # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['v']) == ([]) ",), <traceback object at 0x10658e4d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
bytes1 = 0                                                               # STEP 0
os0 = newFakeOS()                                                        # STEP 1
bytes2 = 0                                                               # STEP 2
component2 = "h"                                                         # STEP 3
opener0 = newFakeOpener(os0)                                             # STEP 4
component0 = "beta"                                                      # STEP 5
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.mkdir(path0)                                                         # STEP 7
file0 = opener0(path0,'r')                                               # STEP 8
str1 = ""                                                                # STEP 9
file0 = opener0(path0,'a')                                              # STEP 10
os0.remove(path0)                                                       # STEP 11
bytes1 += 1                                                             # STEP 12
file0 = opener0(path0)                                                  # STEP 13
file0 = opener0(path0)                                                  # STEP 14
result = os0.readlink(path0)                                            # STEP 15
file0 = opener0(path0,'r')                                              # STEP 16
result = os0.path.isabs(path0)                                          # STEP 17
os0.symlink(path0,path0)                                                # STEP 18
result = sorted(os0.listdir(path0))                                     # STEP 19
file0 = opener0(path0)                                                  # STEP 20
result = os0.readlink(path0)                                            # STEP 21
file0 = opener0(path0,'a')                                              # STEP 22
result = os0.readlink(path0)                                            # STEP 23
os0.symlink(path0,path0)                                                # STEP 24
str4 = ""                                                               # STEP 25
bytes3 = 0                                                              # STEP 26
result = os0.path.abspath(path0)                                        # STEP 27
result = os0.path.islink(path0)                                         # STEP 28
os0.link(path0,path0)                                                   # STEP 29
bytes4 = 0                                                              # STEP 30
path0 += "/" + component2                                               # STEP 31
result = os0.path.isdir(path0)                                          # STEP 32
stat4 = os0.lstat(path0)                                                # STEP 33
file0 = opener0(path0,'w')                                              # STEP 34
bytes3 += 1                                                             # STEP 35
result = os0.path.lexists(path0)                                        # STEP 36
result = os0.path.abspath(path0)                                        # STEP 37
result = os0.path.lexists(path0)                                        # STEP 38
result = os0.readlink(path0)                                            # STEP 39
file0.seek(bytes1)                                                      # STEP 40
result = file0.read()                                                   # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 43
result = os0.path.lexists(path0)                                        # STEP 44
result = os0.path.lexists(path0)                                        # STEP 45
os0.remove(path0)                                                       # STEP 46
file0.seek(bytes1)                                                      # STEP 47
result = os0.path.exists(path0)                                         # STEP 48
os0.symlink(path0,path0)                                                # STEP 49
result = os0.path.lexists(path0)                                        # STEP 50
file0.truncate()                                                        # STEP 51
result = os0.path.isdir(path0)                                          # STEP 52
os0.remove(path0)                                                       # STEP 53
stat3 = os0.fstat(fd0)                                                  # STEP 54
result = sorted(os0.listdir(path0))                                     # STEP 55
result = os0.path.isfile(path0)                                         # STEP 56
result = os0.path.exists(path0)                                         # STEP 57
result = os0.path.exists(path0)                                         # STEP 58
result = os0.path.exists(path0)                                         # STEP 59
result = os0.path.isdir(path0)                                          # STEP 60
result = os0.path.dirname(path0)                                        # STEP 61
stat4 = os0.fstat(fd0)                                                  # STEP 62
result = stat4.st_size                                                  # STEP 63
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (1) ',), <traceback object at 0x1076db8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21991, in act461
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 3
component1 = "e"                                                         # STEP 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes3 = 0                                                               # STEP 2
bytes3 += 1                                                              # STEP 3
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
bytes3 += 1                                                              # STEP 5
str4 = ""                                                                # STEP 6
bytes0 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
result = os0.path.islink(path0)                                          # STEP 9
result = os0.path.isabs(path0)                                          # STEP 10
str4 += 'l'                                                             # STEP 11
result = os0.path.isdir(path0)                                          # STEP 12
str4 += 'o'                                                             # STEP 13
result = os0.path.exists(path0)                                         # STEP 14
str4 += " "                                                             # STEP 15
result = os0.path.islink(path3)                                         # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
result = os0.path.dirname(path3)                                        # STEP 18
result = os0.path.islink(path0)                                         # STEP 19
str4 += 'd'                                                             # STEP 20
path3 = "/Volumes/ramdisk/test"                                         # STEP 21
result = os0.path.isfile(path0)                                         # STEP 22
file0 = opener0(path3,'a')                                              # STEP 23
path0 += "/" + component1                                               # STEP 24
os0.link(path3,path3)                                                   # STEP 25
file0 = opener0(path0,'r')                                              # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
os0.symlink(path0,path0)                                                # STEP 28
stat0 = os0.fstat(fd0)                                                  # STEP 29
os0.rename(path0,path3)                                                 # STEP 30
os0.symlink(path3,path3)                                                # STEP 31
os0.link(path3,path3)                                                   # STEP 32
result = os0.path.abspath(path3)                                        # STEP 33
result = os0.path.lexists(path0)                                        # STEP 34
result = os0.path.dirname(path3)                                        # STEP 35
result = os0.path.exists(path0)                                         # STEP 36
result = os0.path.isabs(path3)                                          # STEP 37
os0.rmdir(path0)                                                        # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
os0.rmdir(path0)                                                        # STEP 41
os0.makedirs(path0)                                                     # STEP 42
result = os0.path.isfile(path3)                                         # STEP 43
str4 += 'k'                                                             # STEP 44
result = stat0.st_size                                                  # STEP 45
result = os0.path.exists(path0)                                         # STEP 46
str4 += 'r'                                                             # STEP 47
os0.remove(path3)                                                       # STEP 48
result = stat0.st_size                                                  # STEP 49
os0.link(path0,path0)                                                   # STEP 50
result = os0.path.isabs(path0)                                          # STEP 51
stat1 = os0.lstat(path0)                                                # STEP 52
bytes0 += 1                                                             # STEP 53
os0.rename(path0,path3)                                                 # STEP 54
str4 += " "                                                             # STEP 55
os0.link(path0,path0)                                                   # STEP 56
os0.rmdir(path0)                                                        # STEP 57
result = os0.path.islink(path3)                                         # STEP 58
result = stat0.st_size                                                  # STEP 59
os0.rmdir(path0)                                                        # STEP 60
file0 = opener0(path3)                                                  # STEP 61
bytes3 += 1                                                             # STEP 62
result = os0.path.abspath(path3)                                        # STEP 63
file0 = opener0(path0,'w')                                              # STEP 64
os0.rename(path0,path3)                                                 # STEP 65
result = sorted(os0.listdir(path3))                                     # STEP 66
file0.next()                                                            # STEP 67
os0.rename(path0,path3)                                                 # STEP 68
result = os0.path.isabs(path0)                                          # STEP 69
file0.truncate()                                                        # STEP 70
path0 = "/Volumes/ramdisk/test"                                         # STEP 71
component2 = "e"                                                        # STEP 72
file0.flush()                                                           # STEP 73
result = os0.path.isdir(path3)                                          # STEP 74
file0.write(str4)                                                       # STEP 75
os0.write(fd0,str4)                                                     # STEP 76
result = file0.read()                                                   # STEP 77
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10808c9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
str1 = ""                                                                # STEP 2
bytes4 = 0                                                               # STEP 3
bytes3 = 0                                                               # STEP 4
bytes2 = 0                                                               # STEP 5
bytes0 = 0                                                               # STEP 6
bytes4 += 1                                                              # STEP 7
bytes4 = 0                                                               # STEP 8
bytes3 += 1                                                              # STEP 9
bytes2 += 1                                                             # STEP 10
bytes2 = 0                                                              # STEP 11
str1 += " "                                                             # STEP 12
bytes2 += 1                                                             # STEP 13
bytes0 += 1                                                             # STEP 14
bytes0 = 0                                                              # STEP 15
bytes2 += 1                                                             # STEP 16
str1 += " "                                                             # STEP 17
bytes3 = 0                                                              # STEP 18
component3 = "gamma"                                                    # STEP 19
component0 = "h"                                                        # STEP 20
str1 += " "                                                             # STEP 21
str1 += " "                                                             # STEP 22
component2 = "b"                                                        # STEP 23
str1 = ""                                                               # STEP 24
str1 += 'o'                                                             # STEP 25
bytes2 = 0                                                              # STEP 26
str1 = ""                                                               # STEP 27
str4 = ""                                                               # STEP 28
bytes1 = 0                                                              # STEP 29
str4 += " "                                                             # STEP 30
str2 = ""                                                               # STEP 31
str4 += " "                                                             # STEP 32
bytes4 += 1                                                             # STEP 33
component1 = "alpha"                                                    # STEP 34
str0 = ""                                                               # STEP 35
bytes4 = 0                                                              # STEP 36
str4 = ""                                                               # STEP 37
str0 += " "                                                             # STEP 38
path1 = "/Volumes/ramdisk/test"                                         # STEP 39
path0 = "/Volumes/ramdisk/test"                                         # STEP 40
component4 = "alpha"                                                    # STEP 41
os0.mkdir(path1)                                                        # STEP 42
result = os0.path.isdir(path1)                                          # STEP 43
os0.remove(path0)                                                       # STEP 44
result = sorted(os0.listdir(path0))                                     # STEP 45
str0 = ""                                                               # STEP 46
os0.link(path1,path1)                                                   # STEP 47
result = os0.path.abspath(path1)                                        # STEP 48
file0 = opener0(path0)                                                  # STEP 49
str3 = ""                                                               # STEP 50
path4 = "/Volumes/ramdisk/test"                                         # STEP 51
os0.makedirs(path4)                                                     # STEP 52
file0 = opener0(path4,'w')                                              # STEP 53
str4 += 't'                                                             # STEP 54
path0 += "/" + component4                                               # STEP 55
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 56
result = os0.path.isabs(path1)                                          # STEP 57
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 58
result = os0.path.isdir(path4)                                          # STEP 59
file0 = opener0(path4)                                                  # STEP 60
result = os0.path.exists(path1)                                         # STEP 61
result = os0.path.exists(path4)                                         # STEP 62
str4 = ""                                                               # STEP 63
os0.rename(path0,path1)                                                 # STEP 64
os0.close(fd0)                                                          # STEP 65
os0.rmdir(path0)                                                        # STEP 66
os0.remove(path1)                                                       # STEP 67
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 68
file0 = opener0(path0,'r')                                              # STEP 69
result = os0.readlink(path1)                                            # STEP 70
file0.seek(bytes0)                                                      # STEP 71
result = os0.path.lexists(path1)                                        # STEP 72
path2 = "/Volumes/ramdisk/test"                                         # STEP 73
os0.makedirs(path1)                                                     # STEP 74
result = os0.path.isdir(path4)                                          # STEP 75
str4 += " "                                                             # STEP 76
result = os0.path.isabs(path2)                                          # STEP 77
os0.symlink(path1,path1)                                                # STEP 78
file0.seek(bytes3)                                                      # STEP 79
os0.mkdir(path0)                                                        # STEP 80
os0.close(fd0)                                                          # STEP 81
result = file0.readline(bytes1)                                         # STEP 82
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x107c033f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28793, in act571
    assert (raised == None) == (refRaised == None)
FAILURE 5
os0 = newFakeOS()                                                        # STEP 0
bytes2 = 0                                                               # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
os0.makedirs(path2)                                                      # STEP 3
result = sorted(os0.listdir(path2))                                      # STEP 4
result = os0.path.abspath(path2)                                         # STEP 5
result = os0.path.islink(path2)                                          # STEP 6
result = os0.path.dirname(path2)                                         # STEP 7
result = os0.path.exists(path2)                                          # STEP 8
result = sorted(os0.listdir(path2))                                      # STEP 9
bytes3 = 0                                                              # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.path.isabs(path2)                                          # STEP 12
result = os0.readlink(path2)                                            # STEP 13
result = os0.path.exists(path2)                                         # STEP 14
result = os0.path.dirname(path2)                                        # STEP 15
result = os0.path.abspath(path2)                                        # STEP 16
result = sorted(os0.listdir(path2))                                     # STEP 17
file0 = opener0(path2)                                                  # STEP 18
result = sorted(os0.listdir(path2))                                     # STEP 19
os0.symlink(path2,path2)                                                # STEP 20
result = os0.path.exists(path2)                                         # STEP 21
result = sorted(os0.listdir(path2))                                     # STEP 22
result = os0.path.exists(path2)                                         # STEP 23
file0 = opener0(path2,'a')                                              # STEP 24
result = sorted(os0.listdir(path2))                                     # STEP 25
result = os0.path.isabs(path2)                                          # STEP 26
file0 = opener0(path2,'a')                                              # STEP 27
file0 = opener0(path2,'a')                                              # STEP 28
bytes2 += 1                                                             # STEP 29
file0 = opener0(path2,'r')                                              # STEP 30
result = os0.path.abspath(path2)                                        # STEP 31
file0 = opener0(path2,'r')                                              # STEP 32
os0.link(path2,path2)                                                   # STEP 33
os0.makedirs(path2)                                                     # STEP 34
result = os0.path.exists(path2)                                         # STEP 35
result = os0.path.islink(path2)                                         # STEP 36
file0 = opener0(path2)                                                  # STEP 37
path2 = "/Volumes/ramdisk/test"                                         # STEP 38
file0 = opener0(path2,'r')                                              # STEP 39
result = sorted(os0.listdir(path2))                                     # STEP 40
result = os0.path.exists(path2)                                         # STEP 41
os0.mkdir(path2)                                                        # STEP 42
os0.makedirs(path2)                                                     # STEP 43
result = os0.path.isabs(path2)                                          # STEP 44
result = os0.path.isfile(path2)                                         # STEP 45
file0 = opener0(path2,'a')                                              # STEP 46
result = os0.path.dirname(path2)                                        # STEP 47
result = os0.path.isdir(path2)                                          # STEP 48
bytes2 = 0                                                              # STEP 49
os0.symlink(path2,path2)                                                # STEP 50
file0 = opener0(path2)                                                  # STEP 51
file0 = opener0(path2,'w')                                              # STEP 52
os0.link(path2,path2)                                                   # STEP 53
file0 = opener0(path2,'a')                                              # STEP 54
component2 = "c"                                                        # STEP 55
file0 = opener0(path2,'r')                                              # STEP 56
result = os0.readlink(path2)                                            # STEP 57
component1 = "lambda"                                                   # STEP 58
file0 = opener0(path2,'a')                                              # STEP 59
file0 = opener0(path2)                                                  # STEP 60
bytes2 += 1                                                             # STEP 61
file0 = opener0(path2)                                                  # STEP 62
path2 += "/" + component2                                               # STEP 63
os0.link(path2,path2)                                                   # STEP 64
result = os0.readlink(path2)                                            # STEP 65
fd0 = os0.open(path2, os.O_RDONLY)                                      # STEP 66
result = sorted(os0.listdir(path2))                                     # STEP 67
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 68
bytes4 = 0                                                              # STEP 69
os0.close(fd0)                                                          # STEP 70
file0 = opener0(path2,'r')                                              # STEP 71
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 72
result = os0.read(fd0,bytes3)                                           # STEP 73
os0.makedirs(path2)                                                     # STEP 74
os0.close(fd0)                                                          # STEP 75
bytes1 = 0                                                              # STEP 76
result = file0.readlines()                                              # STEP 77
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 78
result = os0.path.isdir(path2)                                          # STEP 79
file0.seek(bytes3)                                                      # STEP 80
os0.rmdir(path2)                                                        # STEP 81
result = os0.path.abspath(path2)                                        # STEP 82
os0.rmdir(path2)                                                        # STEP 83
component0 = "gamma"                                                    # STEP 84
result = file0.read(bytes3)                                             # STEP 85
os0.mkdir(path2)                                                        # STEP 86
os0.mkdir(path2)                                                        # STEP 87
result = os0.path.isfile(path2)                                         # STEP 88
file0.flush()                                                           # STEP 89
result = os0.readlink(path2)                                            # STEP 90
os0.rmdir(path2)                                                        # STEP 91
os0.makedirs(path2)                                                     # STEP 92
result = os0.path.exists(path2)                                         # STEP 93
result = file0.read(bytes2)                                             # STEP 94
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109e6dc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28500, in act566
    assert (raised == None) == (refRaised == None)
FAILURE 6
component2 = "f"                                                         # STEP 0
component0 = "phi"                                                       # STEP 1
str3 = ""                                                                # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
str3 += 'k'                                                              # STEP 4
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
str3 += 'r'                                                              # STEP 6
str3 += 'a'                                                              # STEP 7
str3 += " "                                                              # STEP 8
os0 = newFakeOS()                                                        # STEP 9
result = os0.path.isabs(path1)                                          # STEP 10
os0.symlink(path1,path3)                                                # STEP 11
component3 = "d"                                                        # STEP 12
result = os0.path.isfile(path1)                                         # STEP 13
component1 = "g"                                                        # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
result = os0.path.lexists(path3)                                        # STEP 16
bytes4 = 0                                                              # STEP 17
result = os0.path.exists(path1)                                         # STEP 18
str3 += " "                                                             # STEP 19
os0.makedirs(path3)                                                     # STEP 20
result = sorted(os0.listdir(path3))                                     # STEP 21
os0.link(path3,path3)                                                   # STEP 22
result = os0.path.lexists(path1)                                        # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
bytes4 += 1                                                             # STEP 25
path1 += "/" + component1                                               # STEP 26
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 27
os0.link(path3,path1)                                                   # STEP 28
os0.makedirs(path1)                                                     # STEP 29
os0.symlink(path3,path1)                                                # STEP 30
bytes4 = 0                                                              # STEP 31
str3 += 'k'                                                             # STEP 32
result = os0.path.abspath(path1)                                        # STEP 33
result = os0.path.isdir(path3)                                          # STEP 34
result = sorted(os0.listdir(path1))                                     # STEP 35
os0.rename(path1,path3)                                                 # STEP 36
str2 = ""                                                               # STEP 37
os0.close(fd0)                                                          # STEP 38
os0.link(path3,path1)                                                   # STEP 39
bytes1 = 0                                                              # STEP 40
result = os0.path.abspath(path3)                                        # STEP 41
bytes2 = 0                                                              # STEP 42
result = os0.path.abspath(path3)                                        # STEP 43
result = os0.path.lexists(path3)                                        # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 45
result = os0.path.dirname(path3)                                        # STEP 46
os0.close(fd0)                                                          # STEP 47
os0.rename(path1,path3)                                                 # STEP 48
str3 += 'r'                                                             # STEP 49
os0.symlink(path3,path3)                                                # STEP 50
result = os0.path.isabs(path1)                                          # STEP 51
result = sorted(os0.listdir(path3))                                     # STEP 52
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 53
result = os0.path.isabs(path3)                                          # STEP 54
bytes1 += 1                                                             # STEP 55
result = os0.path.dirname(path3)                                        # STEP 56
os0.rename(path1,path3)                                                 # STEP 57
result = os0.path.islink(path1)                                         # STEP 58
result = os0.path.exists(path1)                                         # STEP 59
os0.symlink(path1,path1)                                                # STEP 60
str3 += 's'                                                             # STEP 61
file0 = opener0(path3,'w')                                              # STEP 62
file0 = opener0(path3,'r')                                              # STEP 63
file0 = opener0(path1,'a')                                              # STEP 64
result = os0.read(fd0,bytes1)                                           # STEP 65
result = os0.read(fd0,bytes2)                                           # STEP 66
result = os0.read(fd0,bytes4)                                           # STEP 67
os0.rename(path1,path3)                                                 # STEP 68
result = os0.path.islink(path3)                                         # STEP 69
os0.remove(path3)                                                       # STEP 70
os0.makedirs(path3)                                                     # STEP 71
stat0 = os0.stat(path1)                                                 # STEP 72
result = file0.readlines()                                              # STEP 73
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107e868c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 7
os0 = newFakeOS()                                                        # STEP 0
component3 = "b"                                                         # STEP 1
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
os0.link(path4,path4)                                                    # STEP 3
result = os0.path.islink(path4)                                          # STEP 4
path4 += "/" + component3                                                # STEP 5
path4 += "/" + component3                                                # STEP 6
result = os0.path.abspath(path4)                                         # STEP 7
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 8
stat0 = os0.stat(path4)                                                  # STEP 9
os0.makedirs(path4)                                                     # STEP 10
result = os0.path.lexists(path4)                                        # STEP 11
result = os0.path.isabs(path4)                                          # STEP 12
path4 += "/" + component3                                               # STEP 13
os0.remove(path4)                                                       # STEP 14
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 15
os0.makedirs(path4)                                                     # STEP 16
bytes2 = 0                                                              # STEP 17
str0 = ""                                                               # STEP 18
os0.symlink(path4,path4)                                                # STEP 19
opener0 = newFakeOpener(os0)                                            # STEP 20
os0.mkdir(path4)                                                        # STEP 21
os0.makedirs(path4)                                                     # STEP 22
str0 += " "                                                             # STEP 23
result = sorted(os0.listdir(path4))                                     # STEP 24
result = os0.path.islink(path4)                                         # STEP 25
result = os0.path.abspath(path4)                                        # STEP 26
file0 = opener0(path4)                                                  # STEP 27
stat2 = os0.stat(path4)                                                 # STEP 28
bytes2 += 1                                                             # STEP 29
component2 = "delta"                                                    # STEP 30
os0.link(path4,path4)                                                   # STEP 31
os0.rmdir(path4)                                                        # STEP 32
result = os0.path.lexists(path4)                                        # STEP 33
result = os0.path.exists(path4)                                         # STEP 34
stat1 = os0.stat(path4)                                                 # STEP 35
result = os0.path.lexists(path4)                                        # STEP 36
os0.makedirs(path4)                                                     # STEP 37
os0.symlink(path4,path4)                                                # STEP 38
file0.write(str0)                                                       # STEP 39
stat3 = os0.lstat(path4)                                                # STEP 40
result = file0.read()                                                   # STEP 41
os0.makedirs(path4)                                                     # STEP 42
result = file0.readline(bytes2)                                         # STEP 43
result = os0.path.abspath(path4)                                        # STEP 44
result = file0.read(bytes2)                                             # STEP 45
result = os0.path.abspath(path4)                                        # STEP 46
result = file0.read()                                                   # STEP 47
file0.truncate()                                                        # STEP 48
file0.truncate()                                                        # STEP 49
os0.link(path4,path4)                                                   # STEP 50
os0.mkdir(path4)                                                        # STEP 51
result = file0.readline()                                               # STEP 52
os0.write(fd0,str0)                                                     # STEP 53
stat4 = os0.stat(path4)                                                 # STEP 54
os0.makedirs(path4)                                                     # STEP 55
file0.next()                                                            # STEP 56
file0.flush()                                                           # STEP 57
bytes0 = 0                                                              # STEP 58
result = file0.readline()                                               # STEP 59
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x107e733f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 8
component0 = "f"                                                         # STEP 0
str2 = ""                                                                # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
str1 = ""                                                                # STEP 3
bytes3 = 0                                                               # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
bytes4 = 0                                                               # STEP 6
os0 = newFakeOS()                                                        # STEP 7
result = os0.path.isabs(path1)                                           # STEP 8
result = os0.path.dirname(path1)                                         # STEP 9
result = os0.path.isdir(path1)                                          # STEP 10
path1 += "/" + component0                                               # STEP 11
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
result = os0.path.isdir(path3)                                          # STEP 14
result = os0.read(fd0,bytes4)                                           # STEP 15
stat1 = os0.stat(path1)                                                 # STEP 16
result = os0.read(fd0,bytes4)                                           # STEP 17
result = os0.path.isabs(path3)                                          # STEP 18
str2 += 'e'                                                             # STEP 19
str4 = ""                                                               # STEP 20
result = os0.path.dirname(path1)                                        # STEP 21
stat0 = os0.fstat(fd0)                                                  # STEP 22
stat2 = os0.fstat(fd0)                                                  # STEP 23
result = sorted(os0.listdir(path1))                                     # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
component3 = "h"                                                        # STEP 26
result = os0.path.isdir(path1)                                          # STEP 27
result = os0.path.lexists(path1)                                        # STEP 28
os0.rmdir(path1)                                                        # STEP 29
bytes1 = 0                                                              # STEP 30
os0.mkdir(path3)                                                        # STEP 31
result = os0.path.abspath(path1)                                        # STEP 32
file0 = opener0(path3,'a')                                              # STEP 33
str1 += " "                                                             # STEP 34
os0.mkdir(path1)                                                        # STEP 35
bytes2 = 0                                                              # STEP 36
os0.rename(path1,path3)                                                 # STEP 37
file0 = opener0(path3,'a')                                              # STEP 38
os0.close(fd0)                                                          # STEP 39
result = os0.path.abspath(path1)                                        # STEP 40
result = os0.path.isdir(path1)                                          # STEP 41
file0 = opener0(path1,'w')                                              # STEP 42
result = os0.read(fd0,bytes1)                                           # STEP 43
result = os0.path.isfile(path3)                                         # STEP 44
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
result = file0.readline(bytes1)                                         # STEP 46
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1064a97e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28761, in act571
    result = self.p_file[0].readline(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 9
component3 = "d"                                                         # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str1 = ""                                                                # STEP 2
component4 = "gamma"                                                     # STEP 3
str1 += " "                                                              # STEP 4
str0 = ""                                                                # STEP 5
component1 = "epsilon"                                                   # STEP 6
str1 += 'o'                                                              # STEP 7
bytes0 = 0                                                               # STEP 8
bytes0 += 1                                                              # STEP 9
str4 = ""                                                               # STEP 10
str0 += " "                                                             # STEP 11
str0 = ""                                                               # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
str0 += " "                                                             # STEP 14
result = os0.path.isfile(path2)                                         # STEP 15
str1 += 'o'                                                             # STEP 16
str2 = ""                                                               # STEP 17
os0.link(path2,path2)                                                   # STEP 18
result = os0.path.abspath(path2)                                        # STEP 19
result = os0.readlink(path2)                                            # STEP 20
result = os0.readlink(path2)                                            # STEP 21
result = os0.path.islink(path2)                                         # STEP 22
result = os0.readlink(path2)                                            # STEP 23
path2 += "/" + component3                                               # STEP 24
result = os0.path.islink(path2)                                         # STEP 25
os0.path.getsize(path2)                                                 # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
result = os0.path.isfile(path2)                                         # STEP 28
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 29
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 30
result = os0.readlink(path2)                                            # STEP 31
bytes2 = 0                                                              # STEP 32
os0.symlink(path2,path2)                                                # STEP 33
os0.mkdir(path2)                                                        # STEP 34
opener0 = newFakeOpener(os0)                                            # STEP 35
file0 = opener0(path2)                                                  # STEP 36
bytes0 += 1                                                             # STEP 37
result = file0.readlines()                                              # STEP 38
result = os0.path.abspath(path2)                                        # STEP 39
os0.write(fd0,str0)                                                     # STEP 40
bytes3 = 0                                                              # STEP 41
path0 = "/Volumes/ramdisk/test"                                         # STEP 42
result = file0.read()                                                   # STEP 43
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' ( ) == () ',), <traceback object at 0x108e13878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28322, in act563
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1180 BRANCHES COVERED
905 STATEMENTS COVERED
