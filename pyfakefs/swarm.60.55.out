Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5136.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #373 STEP #43 (0:00:30.000113) Sat Jul 22 04:04:51 2017 [ 902 stmts 1171 branches ] 37243 TOTAL ACTIONS (1241.42865685/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10279ec20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 67 steps

SAVING TEST AS failure.5136.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "e"                                                         # STEP 0
component2 = "a"                                                         # STEP 1
component1 = "phi"                                                       # STEP 2
component4 = "phi"                                                       # STEP 3
str1 = ""                                                                # STEP 4
str3 = ""                                                                # STEP 5
bytes1 = 0                                                               # STEP 6
component3 = "alpha"                                                     # STEP 7
os0 = newFakeOS()                                                        # STEP 8
bytes4 = 0                                                               # STEP 9
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
path3 += "/" + component3                                               # STEP 11
result = os0.path.islink(path3)                                         # STEP 12
os0.path.getsize(path3)                                                 # STEP 13
stat1 = os0.stat(path3)                                                 # STEP 14
result = os0.path.islink(path3)                                         # STEP 15
component3 = "omega"                                                    # STEP 16
stat2 = os0.stat(path3)                                                 # STEP 17
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 18
path2 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.makedirs(path3)                                                     # STEP 20
path3 += "/" + component0                                               # STEP 21
path3 = "/Volumes/ramdisk/test"                                         # STEP 22
os0.write(fd0,str3)                                                     # STEP 23
bytes3 = 0                                                              # STEP 24
component0 = "c"                                                        # STEP 25
opener0 = newFakeOpener(os0)                                            # STEP 26
path3 += "/" + component3                                               # STEP 27
os0.close(fd0)                                                          # STEP 28
result = os0.read(fd0,bytes3)                                           # STEP 29
file0 = opener0(path2,'a')                                              # STEP 30
path2 += "/" + component2                                               # STEP 31
component2 = "d"                                                        # STEP 32
stat4 = os0.stat(path2)                                                 # STEP 33
component3 = "h"                                                        # STEP 34
stat1 = os0.stat(path3)                                                 # STEP 35
result = os0.path.islink(path3)                                         # STEP 36
path3 += "/" + component0                                               # STEP 37
result = os0.path.islink(path2)                                         # STEP 38
path0 = "/Volumes/ramdisk/test"                                         # STEP 39
result = os0.read(fd0,bytes3)                                           # STEP 40
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 41
file0 = opener0(path2,'a')                                              # STEP 42
path3 = "/Volumes/ramdisk/test"                                         # STEP 43
path0 += "/" + component2                                               # STEP 44
stat4 = os0.stat(path2)                                                 # STEP 45
stat3 = os0.stat(path0)                                                 # STEP 46
result = os0.path.isfile(path3)                                         # STEP 47
path3 += "/" + component0                                               # STEP 48
os0.rename(path0,path3)                                                 # STEP 49
stat3 = os0.stat(path0)                                                 # STEP 50
component2 = "alpha"                                                    # STEP 51
result = file0.read(bytes3)                                             # STEP 52
os0.removedirs(path2)                                                   # STEP 53
file0.seek(bytes4)                                                      # STEP 54
component0 = "g"                                                        # STEP 55
stat3 = os0.stat(path3)                                                 # STEP 56
result = os0.path.isfile(path0)                                         # STEP 57
file0.seek(bytes1)                                                      # STEP 58
stat2 = os0.stat(path3)                                                 # STEP 59
stat1 = os0.stat(path2)                                                 # STEP 60
str2 = ""                                                               # STEP 61
str3 = ""                                                               # STEP 62
result = os0.path.isdir(path0)                                          # STEP 63
bytes2 = 0                                                              # STEP 64
result = os0.read(fd0,bytes1)                                           # STEP 65
result = file0.read(bytes1)                                             # STEP 66
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109111b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 61
STOPPING TESTING DUE TO TIMEOUT
42.2891118543 PERCENT COVERED
60.325854063 TOTAL RUNTIME
744 EXECUTED
74328 TOTAL TEST OPERATIONS
54.085258007 TIME SPENT EXECUTING TEST OPERATIONS
2.33331251144 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0457403659821 TIME SPENT CHECKING PROPERTIES
54.130998373 TOTAL TIME SPENT RUNNING SUT
2.22240328789 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component0 = "e"                                                         # STEP 0
component2 = "a"                                                         # STEP 1
component1 = "phi"                                                       # STEP 2
component4 = "phi"                                                       # STEP 3
str1 = ""                                                                # STEP 4
str3 = ""                                                                # STEP 5
bytes1 = 0                                                               # STEP 6
component3 = "alpha"                                                     # STEP 7
os0 = newFakeOS()                                                        # STEP 8
bytes4 = 0                                                               # STEP 9
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
path3 += "/" + component3                                               # STEP 11
result = os0.path.islink(path3)                                         # STEP 12
os0.path.getsize(path3)                                                 # STEP 13
stat1 = os0.stat(path3)                                                 # STEP 14
result = os0.path.islink(path3)                                         # STEP 15
component3 = "omega"                                                    # STEP 16
stat2 = os0.stat(path3)                                                 # STEP 17
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 18
path2 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.makedirs(path3)                                                     # STEP 20
path3 += "/" + component0                                               # STEP 21
path3 = "/Volumes/ramdisk/test"                                         # STEP 22
os0.write(fd0,str3)                                                     # STEP 23
bytes3 = 0                                                              # STEP 24
component0 = "c"                                                        # STEP 25
opener0 = newFakeOpener(os0)                                            # STEP 26
path3 += "/" + component3                                               # STEP 27
os0.close(fd0)                                                          # STEP 28
result = os0.read(fd0,bytes3)                                           # STEP 29
file0 = opener0(path2,'a')                                              # STEP 30
path2 += "/" + component2                                               # STEP 31
component2 = "d"                                                        # STEP 32
stat4 = os0.stat(path2)                                                 # STEP 33
component3 = "h"                                                        # STEP 34
stat1 = os0.stat(path3)                                                 # STEP 35
result = os0.path.islink(path3)                                         # STEP 36
path3 += "/" + component0                                               # STEP 37
result = os0.path.islink(path2)                                         # STEP 38
path0 = "/Volumes/ramdisk/test"                                         # STEP 39
result = os0.read(fd0,bytes3)                                           # STEP 40
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 41
file0 = opener0(path2,'a')                                              # STEP 42
path3 = "/Volumes/ramdisk/test"                                         # STEP 43
path0 += "/" + component2                                               # STEP 44
stat4 = os0.stat(path2)                                                 # STEP 45
stat3 = os0.stat(path0)                                                 # STEP 46
result = os0.path.isfile(path3)                                         # STEP 47
path3 += "/" + component0                                               # STEP 48
os0.rename(path0,path3)                                                 # STEP 49
stat3 = os0.stat(path0)                                                 # STEP 50
component2 = "alpha"                                                    # STEP 51
result = file0.read(bytes3)                                             # STEP 52
os0.removedirs(path2)                                                   # STEP 53
file0.seek(bytes4)                                                      # STEP 54
component0 = "g"                                                        # STEP 55
stat3 = os0.stat(path3)                                                 # STEP 56
result = os0.path.isfile(path0)                                         # STEP 57
file0.seek(bytes1)                                                      # STEP 58
stat2 = os0.stat(path3)                                                 # STEP 59
stat1 = os0.stat(path2)                                                 # STEP 60
str2 = ""                                                               # STEP 61
str3 = ""                                                               # STEP 62
result = os0.path.isdir(path0)                                          # STEP 63
bytes2 = 0                                                              # STEP 64
result = os0.read(fd0,bytes1)                                           # STEP 65
result = file0.read(bytes1)                                             # STEP 66
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109111b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1175 BRANCHES COVERED
903 STATEMENTS COVERED
