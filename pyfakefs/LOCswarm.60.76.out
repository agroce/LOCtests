Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5547.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #183 STEP #14 (0:00:30.000049) Sat Jul 22 06:24:20 2017 [ 905 stmts 1180 branches ] 18214 TOTAL ACTIONS (607.132344197/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104d71f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
Original test has 39 steps

SAVING TEST AS failure.5547.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str3 += " "                                                              # STEP 2
component4 = "c"                                                         # STEP 3
bytes4 = 0                                                               # STEP 4
bytes2 = 0                                                               # STEP 5
str3 += " "                                                              # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
bytes3 = 0                                                               # STEP 8
component1 = "phi"                                                       # STEP 9
str3 += " "                                                             # STEP 10
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.abspath(path1)                                        # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
os0.remove(path1)                                                       # STEP 14
result = os0.path.exists(path1)                                         # STEP 15
component0 = "a"                                                        # STEP 16
bytes1 = 0                                                              # STEP 17
result = os0.path.abspath(path1)                                        # STEP 18
result = sorted(os0.listdir(path1))                                     # STEP 19
path1 += "/" + component1                                               # STEP 20
result = os0.readlink(path1)                                            # STEP 21
component2 = "phi"                                                      # STEP 22
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 23
stat2 = os0.stat(path1)                                                 # STEP 24
os0.close(fd0)                                                          # STEP 25
result = os0.path.islink(path1)                                         # STEP 26
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
result = os0.path.isabs(path1)                                          # STEP 29
str3 += " "                                                             # STEP 30
file0 = opener0(path1,'r')                                              # STEP 31
result = os0.readlink(path1)                                            # STEP 32
result = file0.readline(bytes3)                                         # STEP 33
file0.seek(bytes2)                                                      # STEP 34
result = os0.path.exists(path1)                                         # STEP 35
path1 += "/" + component1                                               # STEP 36
os0.close(fd0)                                                          # STEP 37
result = file0.read(bytes4)                                             # STEP 38
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10a983488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 93
STOPPING TESTING DUE TO TIMEOUT
42.9951690821 PERCENT COVERED
60.3195149899 TOTAL RUNTIME
365 EXECUTED
36432 TOTAL TEST OPERATIONS
42.6254580021 TIME SPENT EXECUTING TEST OPERATIONS
15.5795571804 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0246977806091 TIME SPENT CHECKING PROPERTIES
42.6501557827 TOTAL TIME SPENT RUNNING SUT
1.08601808548 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
str3 = ""                                                                # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str3 += " "                                                              # STEP 2
component4 = "c"                                                         # STEP 3
bytes4 = 0                                                               # STEP 4
bytes2 = 0                                                               # STEP 5
str3 += " "                                                              # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
bytes3 = 0                                                               # STEP 8
component1 = "phi"                                                       # STEP 9
str3 += " "                                                             # STEP 10
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
result = os0.path.abspath(path1)                                        # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
os0.remove(path1)                                                       # STEP 14
result = os0.path.exists(path1)                                         # STEP 15
component0 = "a"                                                        # STEP 16
bytes1 = 0                                                              # STEP 17
result = os0.path.abspath(path1)                                        # STEP 18
result = sorted(os0.listdir(path1))                                     # STEP 19
path1 += "/" + component1                                               # STEP 20
result = os0.readlink(path1)                                            # STEP 21
component2 = "phi"                                                      # STEP 22
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 23
stat2 = os0.stat(path1)                                                 # STEP 24
os0.close(fd0)                                                          # STEP 25
result = os0.path.islink(path1)                                         # STEP 26
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
result = os0.path.isabs(path1)                                          # STEP 29
str3 += " "                                                             # STEP 30
file0 = opener0(path1,'r')                                              # STEP 31
result = os0.readlink(path1)                                            # STEP 32
result = file0.readline(bytes3)                                         # STEP 33
file0.seek(bytes2)                                                      # STEP 34
result = os0.path.exists(path1)                                         # STEP 35
path1 += "/" + component1                                               # STEP 36
os0.close(fd0)                                                          # STEP 37
result = file0.read(bytes4)                                             # STEP 38
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10a983488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
1190 BRANCHES COVERED
912 STATEMENTS COVERED
