Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5755.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030c3cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28913, in act573
    assert (raised == None) == (refRaised == None)
Original test has 56 steps

SAVING TEST AS failure.5755.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
component1 = "beta"                                                      # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
path2 += "/" + component1                                                # STEP 3
component3 = "d"                                                         # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
bytes4 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
fd0 = os0.open(path2, os.O_CREAT)                                        # STEP 9
component0 = "c"                                                        # STEP 10
stat1 = os0.lstat(path2)                                                # STEP 11
os0.makedirs(path4)                                                     # STEP 12
stat4 = os0.stat(path2)                                                 # STEP 13
bytes0 = 0                                                              # STEP 14
path3 += "/" + component3                                               # STEP 15
path4 += "/" + component1                                               # STEP 16
os0.path.getsize(path2)                                                 # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
result = stat4.st_size                                                  # STEP 19
os0.mkdir(path2)                                                        # STEP 20
stat0 = os0.stat(path2)                                                 # STEP 21
os0.close(fd0)                                                          # STEP 22
stat3 = os0.stat(path3)                                                 # STEP 23
bytes1 = 0                                                              # STEP 24
stat3 = os0.stat(path3)                                                 # STEP 25
path3 += "/" + component3                                               # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 27
path2 += "/" + component3                                               # STEP 28
bytes3 = 0                                                              # STEP 29
result = stat0.st_size                                                  # STEP 30
os0.mkdir(path3)                                                        # STEP 31
os0.makedirs(path2)                                                     # STEP 32
result = stat4.st_size                                                  # STEP 33
stat0 = os0.stat(path2)                                                 # STEP 34
os0.path.getsize(path2)                                                 # STEP 35
path3 += "/" + component1                                               # STEP 36
opener0 = newFakeOpener(os0)                                            # STEP 37
file0 = opener0(path2,'r')                                              # STEP 38
file0 = opener0(path3,'r')                                              # STEP 39
result = os0.path.isabs(path3)                                          # STEP 40
stat4 = os0.lstat(path2)                                                # STEP 41
os0.makedirs(path3)                                                     # STEP 42
result = os0.path.isabs(path2)                                          # STEP 43
path3 += "/" + component0                                               # STEP 44
os0.makedirs(path2)                                                     # STEP 45
file0 = opener0(path4)                                                  # STEP 46
os0.path.getsize(path2)                                                 # STEP 47
os0.mkdir(path3)                                                        # STEP 48
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
os0.path.getsize(path4)                                                 # STEP 50
os0.close(fd0)                                                          # STEP 51
stat2 = os0.stat(path2)                                                 # STEP 52
os0.mkdir(path0)                                                        # STEP 53
result = stat4.st_size                                                  # STEP 54
result = file0.readline(bytes3)                                         # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1075e7998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28913, in act573
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x1030e4290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 94 steps

SAVING TEST AS failure.5755.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
str1 = ""                                                                # STEP 1
bytes2 = 0                                                               # STEP 2
bytes4 = 0                                                               # STEP 3
os0 = newFakeOS()                                                        # STEP 4
component4 = "lambda"                                                    # STEP 5
bytes3 = 0                                                               # STEP 6
str4 = ""                                                                # STEP 7
component1 = "g"                                                         # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.isabs(path4)                                          # STEP 10
os0.symlink(path4,path4)                                                # STEP 11
str3 = ""                                                               # STEP 12
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
result = os0.path.isabs(path1)                                          # STEP 15
result = os0.path.isabs(path1)                                          # STEP 16
result = os0.path.isabs(path1)                                          # STEP 17
str0 = ""                                                               # STEP 18
result = os0.path.isabs(path4)                                          # STEP 19
result = os0.path.abspath(path1)                                        # STEP 20
os0.symlink(path1,path1)                                                # STEP 21
os0.remove(path1)                                                       # STEP 22
result = os0.readlink(path1)                                            # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
file0 = opener0(path1)                                                  # STEP 25
component2 = "a"                                                        # STEP 26
result = os0.path.isabs(path4)                                          # STEP 27
file0 = opener0(path1)                                                  # STEP 28
result = os0.path.isdir(path4)                                          # STEP 29
os0.remove(path4)                                                       # STEP 30
file0 = opener0(path1,'a')                                              # STEP 31
component3 = "phi"                                                      # STEP 32
os0.symlink(path1,path1)                                                # STEP 33
path1 = "/Volumes/ramdisk/test"                                         # STEP 34
result = os0.path.isdir(path4)                                          # STEP 35
result = os0.path.isabs(path1)                                          # STEP 36
path4 += "/" + component1                                               # STEP 37
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
path4 += "/" + component2                                               # STEP 39
os0.write(fd0,str2)                                                     # STEP 40
result = os0.path.isabs(path1)                                          # STEP 41
path4 += "/" + component1                                               # STEP 42
bytes1 = 0                                                              # STEP 43
bytes0 = 0                                                              # STEP 44
os0.write(fd0,str0)                                                     # STEP 45
os0.close(fd0)                                                          # STEP 46
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 47
os0.rename(path4,path1)                                                 # STEP 48
os0.write(fd0,str0)                                                     # STEP 49
os0.path.getsize(path4)                                                 # STEP 50
file0 = opener0(path4)                                                  # STEP 51
file0 = opener0(path4,'r')                                              # STEP 52
result = os0.readlink(path1)                                            # STEP 53
file0 = opener0(path4,'a')                                              # STEP 54
stat3 = os0.stat(path4)                                                 # STEP 55
stat1 = os0.lstat(path4)                                                # STEP 56
result = os0.path.isabs(path1)                                          # STEP 57
os0.mkdir(path1)                                                        # STEP 58
os0.path.getsize(path4)                                                 # STEP 59
result = os0.path.isdir(path1)                                          # STEP 60
file0 = opener0(path4,'r')                                              # STEP 61
os0.write(fd0,str4)                                                     # STEP 62
result = os0.path.isabs(path1)                                          # STEP 63
file0 = opener0(path1,'r')                                              # STEP 64
result = os0.path.isabs(path4)                                          # STEP 65
file0 = opener0(path4)                                                  # STEP 66
result = os0.path.isdir(path1)                                          # STEP 67
component2 = "phi"                                                      # STEP 68
os0.rename(path4,path1)                                                 # STEP 69
result = os0.path.isabs(path1)                                          # STEP 70
path1 += "/" + component1                                               # STEP 71
result = os0.path.abspath(path1)                                        # STEP 72
file0 = opener0(path1,'r')                                              # STEP 73
os0.path.getsize(path4)                                                 # STEP 74
path1 = "/Volumes/ramdisk/test"                                         # STEP 75
component1 = "alpha"                                                    # STEP 76
os0.mkdir(path4)                                                        # STEP 77
file0.write(str2)                                                       # STEP 78
path4 = "/Volumes/ramdisk/test"                                         # STEP 79
file0.seek(bytes3)                                                      # STEP 80
path0 = "/Volumes/ramdisk/test"                                         # STEP 81
path3 = "/Volumes/ramdisk/test"                                         # STEP 82
result = file0.readlines()                                              # STEP 83
file0.flush()                                                           # STEP 84
result = os0.path.isabs(path1)                                          # STEP 85
result = file0.read()                                                   # STEP 86
file0.next()                                                            # STEP 87
file0.seek(bytes0)                                                      # STEP 88
result = os0.path.abspath(path3)                                        # STEP 89
file0.truncate()                                                        # STEP 90
os0.write(fd0,str1)                                                     # STEP 91
os0.mkdir(path1)                                                        # STEP 92
file0.truncate()                                                        # STEP 93
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x1077495a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
TEST #178 STEP #57 (0:00:30.000641) Sat Jul 22 07:29:49 2017 [ 908 stmts 1183 branches ] 17707 TOTAL ACTIONS (590.220720168/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (kkx) == () ',), <traceback object at 0x1081ce518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 61 steps

SAVING TEST AS failure.5755.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
path3 = "/Volumes/ramdisk/test"                                          # STEP 1
result = os0.path.islink(path3)                                          # STEP 2
result = os0.path.islink(path3)                                          # STEP 3
result = os0.path.islink(path3)                                          # STEP 4
bytes1 = 0                                                               # STEP 5
opener0 = newFakeOpener(os0)                                             # STEP 6
bytes0 = 0                                                               # STEP 7
result = os0.path.exists(path3)                                          # STEP 8
result = os0.path.isdir(path3)                                           # STEP 9
bytes0 += 1                                                             # STEP 10
result = os0.path.isdir(path3)                                          # STEP 11
str4 = ""                                                               # STEP 12
result = os0.path.isfile(path3)                                         # STEP 13
result = os0.path.isfile(path3)                                         # STEP 14
result = os0.path.exists(path3)                                         # STEP 15
str4 += 'k'                                                             # STEP 16
file0 = opener0(path3,'a')                                              # STEP 17
str4 += 'k'                                                             # STEP 18
result = os0.path.exists(path3)                                         # STEP 19
result = os0.path.isdir(path3)                                          # STEP 20
file0 = opener0(path3,'r')                                              # STEP 21
result = os0.path.exists(path3)                                         # STEP 22
bytes0 += 1                                                             # STEP 23
str4 += 'x'                                                             # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
bytes1 += 1                                                             # STEP 26
result = os0.path.isfile(path3)                                         # STEP 27
result = sorted(os0.listdir(path3))                                     # STEP 28
result = os0.path.exists(path3)                                         # STEP 29
result = os0.path.exists(path3)                                         # STEP 30
result = os0.path.isdir(path3)                                          # STEP 31
path3 = "/Volumes/ramdisk/test"                                         # STEP 32
result = sorted(os0.listdir(path3))                                     # STEP 33
file0 = opener0(path3,'r')                                              # STEP 34
result = os0.path.exists(path3)                                         # STEP 35
result = os0.path.lexists(path3)                                        # STEP 36
result = sorted(os0.listdir(path3))                                     # STEP 37
path4 = "/Volumes/ramdisk/test"                                         # STEP 38
result = os0.path.exists(path3)                                         # STEP 39
result = os0.path.lexists(path3)                                        # STEP 40
component4 = "beta"                                                     # STEP 41
result = os0.path.isfile(path4)                                         # STEP 42
result = os0.path.lexists(path3)                                        # STEP 43
file0 = opener0(path4,'r')                                              # STEP 44
result = os0.path.islink(path3)                                         # STEP 45
bytes1 += 1                                                             # STEP 46
component2 = "d"                                                        # STEP 47
bytes4 = 0                                                              # STEP 48
result = os0.path.isfile(path3)                                         # STEP 49
path3 += "/" + component2                                               # STEP 50
result = os0.path.lexists(path4)                                        # STEP 51
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 52
result = os0.path.isdir(path4)                                          # STEP 53
os0.path.getsize(path3)                                                 # STEP 54
file0 = opener0(path3,'r')                                              # STEP 55
result = os0.path.exists(path3)                                         # STEP 56
result = file0.read(bytes1)                                             # STEP 57
stat3 = os0.stat(path3)                                                 # STEP 58
os0.write(fd0,str4)                                                     # STEP 59
result = file0.readline()                                               # STEP 60
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (kkx) == () ',), <traceback object at 0x1080dc878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1032e0dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28380, in act564
    assert (raised == None) == (refRaised == None)
Original test has 81 steps

SAVING TEST AS failure.5755.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
component0 = "f"                                                         # STEP 1
component1 = "delta"                                                     # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
path3 += "/" + component0                                                # STEP 4
component2 = "beta"                                                      # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
path4 += "/" + component0                                                # STEP 7
path2 = "/Volumes/ramdisk/test"                                          # STEP 8
bytes0 = 0                                                               # STEP 9
os0 = newFakeOS()                                                       # STEP 10
path3 += "/" + component1                                               # STEP 11
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 12
component3 = "h"                                                        # STEP 13
path3 += "/" + component0                                               # STEP 14
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 15
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 16
path4 += "/" + component3                                               # STEP 17
result = os0.path.lexists(path2)                                        # STEP 18
os0.close(fd0)                                                          # STEP 19
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
result = os0.path.lexists(path2)                                        # STEP 22
os0.symlink(path3,path3)                                                # STEP 23
result = os0.path.lexists(path4)                                        # STEP 24
os0.rename(path4,path3)                                                 # STEP 25
file0 = opener0(path3,'r')                                              # STEP 26
file0 = opener0(path3)                                                  # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
path3 += "/" + component3                                               # STEP 29
os0.rename(path4,path2)                                                 # STEP 30
file0 = opener0(path4,'a')                                              # STEP 31
path3 += "/" + component1                                               # STEP 32
bytes4 = 0                                                              # STEP 33
file0 = opener0(path3,'r')                                              # STEP 34
stat2 = os0.lstat(path3)                                                # STEP 35
path1 = "/Volumes/ramdisk/test"                                         # STEP 36
os0.mkdir(path3)                                                        # STEP 37
result = os0.path.lexists(path4)                                        # STEP 38
os0.rename(path3,path1)                                                 # STEP 39
path2 += "/" + component0                                               # STEP 40
result = sorted(os0.listdir(path4))                                     # STEP 41
os0.mkdir(path3)                                                        # STEP 42
os0.rename(path4,path2)                                                 # STEP 43
file0 = opener0(path3,'a')                                              # STEP 44
result = sorted(os0.listdir(path4))                                     # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
os0.symlink(path3,path1)                                                # STEP 49
result = os0.path.exists(path1)                                         # STEP 50
stat0 = os0.lstat(path4)                                                # STEP 51
file0 = opener0(path1,'r')                                              # STEP 52
result = sorted(os0.listdir(path3))                                     # STEP 53
result = os0.path.isfile(path2)                                         # STEP 54
os0.path.getsize(path2)                                                 # STEP 55
result = os0.path.isabs(path2)                                          # STEP 56
os0.mkdir(path1)                                                        # STEP 57
file0 = opener0(path4,'r')                                              # STEP 58
result = os0.path.isfile(path1)                                         # STEP 59
result = sorted(os0.listdir(path2))                                     # STEP 60
os0.rename(path4,path1)                                                 # STEP 61
file0 = opener0(path3)                                                  # STEP 62
os0.link(path4,path1)                                                   # STEP 63
file0 = opener0(path2,'r')                                              # STEP 64
stat3 = os0.lstat(path2)                                                # STEP 65
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
os0.path.getsize(path2)                                                 # STEP 67
result = os0.path.lexists(path0)                                        # STEP 68
str0 = ""                                                               # STEP 69
result = stat3.st_size                                                  # STEP 70
os0.close(fd0)                                                          # STEP 71
result = os0.path.isabs(path2)                                          # STEP 72
stat3 = os0.lstat(path4)                                                # STEP 73
os0.mkdir(path1)                                                        # STEP 74
bytes3 = 0                                                              # STEP 75
file0.write(str0)                                                       # STEP 76
str4 = ""                                                               # STEP 77
os0.rename(path2,path0)                                                 # STEP 78
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 79
result = file0.read(bytes0)                                             # STEP 80
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1081e95f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28380, in act564
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 70
STOPPING TESTING DUE TO TIMEOUT
43.2181345225 PERCENT COVERED
60.3169801235 TOTAL RUNTIME
353 EXECUTED
35162 TOTAL TEST OPERATIONS
42.658894062 TIME SPENT EXECUTING TEST OPERATIONS
15.2882349491 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0241494178772 TIME SPENT CHECKING PROPERTIES
42.6830434799 TOTAL TIME SPENT RUNNING SUT
1.06928110123 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
4 FAILED
0 REPEATS OF FAILURES
4 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes2 = 0                                                               # STEP 0
component1 = "beta"                                                      # STEP 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
path2 += "/" + component1                                                # STEP 3
component3 = "d"                                                         # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
bytes4 = 0                                                               # STEP 7
os0 = newFakeOS()                                                        # STEP 8
fd0 = os0.open(path2, os.O_CREAT)                                        # STEP 9
component0 = "c"                                                        # STEP 10
stat1 = os0.lstat(path2)                                                # STEP 11
os0.makedirs(path4)                                                     # STEP 12
stat4 = os0.stat(path2)                                                 # STEP 13
bytes0 = 0                                                              # STEP 14
path3 += "/" + component3                                               # STEP 15
path4 += "/" + component1                                               # STEP 16
os0.path.getsize(path2)                                                 # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
result = stat4.st_size                                                  # STEP 19
os0.mkdir(path2)                                                        # STEP 20
stat0 = os0.stat(path2)                                                 # STEP 21
os0.close(fd0)                                                          # STEP 22
stat3 = os0.stat(path3)                                                 # STEP 23
bytes1 = 0                                                              # STEP 24
stat3 = os0.stat(path3)                                                 # STEP 25
path3 += "/" + component3                                               # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 27
path2 += "/" + component3                                               # STEP 28
bytes3 = 0                                                              # STEP 29
result = stat0.st_size                                                  # STEP 30
os0.mkdir(path3)                                                        # STEP 31
os0.makedirs(path2)                                                     # STEP 32
result = stat4.st_size                                                  # STEP 33
stat0 = os0.stat(path2)                                                 # STEP 34
os0.path.getsize(path2)                                                 # STEP 35
path3 += "/" + component1                                               # STEP 36
opener0 = newFakeOpener(os0)                                            # STEP 37
file0 = opener0(path2,'r')                                              # STEP 38
file0 = opener0(path3,'r')                                              # STEP 39
result = os0.path.isabs(path3)                                          # STEP 40
stat4 = os0.lstat(path2)                                                # STEP 41
os0.makedirs(path3)                                                     # STEP 42
result = os0.path.isabs(path2)                                          # STEP 43
path3 += "/" + component0                                               # STEP 44
os0.makedirs(path2)                                                     # STEP 45
file0 = opener0(path4)                                                  # STEP 46
os0.path.getsize(path2)                                                 # STEP 47
os0.mkdir(path3)                                                        # STEP 48
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
os0.path.getsize(path4)                                                 # STEP 50
os0.close(fd0)                                                          # STEP 51
stat2 = os0.stat(path2)                                                 # STEP 52
os0.mkdir(path0)                                                        # STEP 53
result = stat4.st_size                                                  # STEP 54
result = file0.readline(bytes3)                                         # STEP 55
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1075e7998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28913, in act573
    assert (raised == None) == (refRaised == None)
FAILURE 1
str2 = ""                                                                # STEP 0
str1 = ""                                                                # STEP 1
bytes2 = 0                                                               # STEP 2
bytes4 = 0                                                               # STEP 3
os0 = newFakeOS()                                                        # STEP 4
component4 = "lambda"                                                    # STEP 5
bytes3 = 0                                                               # STEP 6
str4 = ""                                                                # STEP 7
component1 = "g"                                                         # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.isabs(path4)                                          # STEP 10
os0.symlink(path4,path4)                                                # STEP 11
str3 = ""                                                               # STEP 12
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
result = os0.path.isabs(path1)                                          # STEP 15
result = os0.path.isabs(path1)                                          # STEP 16
result = os0.path.isabs(path1)                                          # STEP 17
str0 = ""                                                               # STEP 18
result = os0.path.isabs(path4)                                          # STEP 19
result = os0.path.abspath(path1)                                        # STEP 20
os0.symlink(path1,path1)                                                # STEP 21
os0.remove(path1)                                                       # STEP 22
result = os0.readlink(path1)                                            # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
file0 = opener0(path1)                                                  # STEP 25
component2 = "a"                                                        # STEP 26
result = os0.path.isabs(path4)                                          # STEP 27
file0 = opener0(path1)                                                  # STEP 28
result = os0.path.isdir(path4)                                          # STEP 29
os0.remove(path4)                                                       # STEP 30
file0 = opener0(path1,'a')                                              # STEP 31
component3 = "phi"                                                      # STEP 32
os0.symlink(path1,path1)                                                # STEP 33
path1 = "/Volumes/ramdisk/test"                                         # STEP 34
result = os0.path.isdir(path4)                                          # STEP 35
result = os0.path.isabs(path1)                                          # STEP 36
path4 += "/" + component1                                               # STEP 37
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 38
path4 += "/" + component2                                               # STEP 39
os0.write(fd0,str2)                                                     # STEP 40
result = os0.path.isabs(path1)                                          # STEP 41
path4 += "/" + component1                                               # STEP 42
bytes1 = 0                                                              # STEP 43
bytes0 = 0                                                              # STEP 44
os0.write(fd0,str0)                                                     # STEP 45
os0.close(fd0)                                                          # STEP 46
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 47
os0.rename(path4,path1)                                                 # STEP 48
os0.write(fd0,str0)                                                     # STEP 49
os0.path.getsize(path4)                                                 # STEP 50
file0 = opener0(path4)                                                  # STEP 51
file0 = opener0(path4,'r')                                              # STEP 52
result = os0.readlink(path1)                                            # STEP 53
file0 = opener0(path4,'a')                                              # STEP 54
stat3 = os0.stat(path4)                                                 # STEP 55
stat1 = os0.lstat(path4)                                                # STEP 56
result = os0.path.isabs(path1)                                          # STEP 57
os0.mkdir(path1)                                                        # STEP 58
os0.path.getsize(path4)                                                 # STEP 59
result = os0.path.isdir(path1)                                          # STEP 60
file0 = opener0(path4,'r')                                              # STEP 61
os0.write(fd0,str4)                                                     # STEP 62
result = os0.path.isabs(path1)                                          # STEP 63
file0 = opener0(path1,'r')                                              # STEP 64
result = os0.path.isabs(path4)                                          # STEP 65
file0 = opener0(path4)                                                  # STEP 66
result = os0.path.isdir(path1)                                          # STEP 67
component2 = "phi"                                                      # STEP 68
os0.rename(path4,path1)                                                 # STEP 69
result = os0.path.isabs(path1)                                          # STEP 70
path1 += "/" + component1                                               # STEP 71
result = os0.path.abspath(path1)                                        # STEP 72
file0 = opener0(path1,'r')                                              # STEP 73
os0.path.getsize(path4)                                                 # STEP 74
path1 = "/Volumes/ramdisk/test"                                         # STEP 75
component1 = "alpha"                                                    # STEP 76
os0.mkdir(path4)                                                        # STEP 77
file0.write(str2)                                                       # STEP 78
path4 = "/Volumes/ramdisk/test"                                         # STEP 79
file0.seek(bytes3)                                                      # STEP 80
path0 = "/Volumes/ramdisk/test"                                         # STEP 81
path3 = "/Volumes/ramdisk/test"                                         # STEP 82
result = file0.readlines()                                              # STEP 83
file0.flush()                                                           # STEP 84
result = os0.path.isabs(path1)                                          # STEP 85
result = file0.read()                                                   # STEP 86
file0.next()                                                            # STEP 87
file0.seek(bytes0)                                                      # STEP 88
result = os0.path.abspath(path3)                                        # STEP 89
file0.truncate()                                                        # STEP 90
os0.write(fd0,str1)                                                     # STEP 91
os0.mkdir(path1)                                                        # STEP 92
file0.truncate()                                                        # STEP 93
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x1077495a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
path3 = "/Volumes/ramdisk/test"                                          # STEP 1
result = os0.path.islink(path3)                                          # STEP 2
result = os0.path.islink(path3)                                          # STEP 3
result = os0.path.islink(path3)                                          # STEP 4
bytes1 = 0                                                               # STEP 5
opener0 = newFakeOpener(os0)                                             # STEP 6
bytes0 = 0                                                               # STEP 7
result = os0.path.exists(path3)                                          # STEP 8
result = os0.path.isdir(path3)                                           # STEP 9
bytes0 += 1                                                             # STEP 10
result = os0.path.isdir(path3)                                          # STEP 11
str4 = ""                                                               # STEP 12
result = os0.path.isfile(path3)                                         # STEP 13
result = os0.path.isfile(path3)                                         # STEP 14
result = os0.path.exists(path3)                                         # STEP 15
str4 += 'k'                                                             # STEP 16
file0 = opener0(path3,'a')                                              # STEP 17
str4 += 'k'                                                             # STEP 18
result = os0.path.exists(path3)                                         # STEP 19
result = os0.path.isdir(path3)                                          # STEP 20
file0 = opener0(path3,'r')                                              # STEP 21
result = os0.path.exists(path3)                                         # STEP 22
bytes0 += 1                                                             # STEP 23
str4 += 'x'                                                             # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
bytes1 += 1                                                             # STEP 26
result = os0.path.isfile(path3)                                         # STEP 27
result = sorted(os0.listdir(path3))                                     # STEP 28
result = os0.path.exists(path3)                                         # STEP 29
result = os0.path.exists(path3)                                         # STEP 30
result = os0.path.isdir(path3)                                          # STEP 31
path3 = "/Volumes/ramdisk/test"                                         # STEP 32
result = sorted(os0.listdir(path3))                                     # STEP 33
file0 = opener0(path3,'r')                                              # STEP 34
result = os0.path.exists(path3)                                         # STEP 35
result = os0.path.lexists(path3)                                        # STEP 36
result = sorted(os0.listdir(path3))                                     # STEP 37
path4 = "/Volumes/ramdisk/test"                                         # STEP 38
result = os0.path.exists(path3)                                         # STEP 39
result = os0.path.lexists(path3)                                        # STEP 40
component4 = "beta"                                                     # STEP 41
result = os0.path.isfile(path4)                                         # STEP 42
result = os0.path.lexists(path3)                                        # STEP 43
file0 = opener0(path4,'r')                                              # STEP 44
result = os0.path.islink(path3)                                         # STEP 45
bytes1 += 1                                                             # STEP 46
component2 = "d"                                                        # STEP 47
bytes4 = 0                                                              # STEP 48
result = os0.path.isfile(path3)                                         # STEP 49
path3 += "/" + component2                                               # STEP 50
result = os0.path.lexists(path4)                                        # STEP 51
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 52
result = os0.path.isdir(path4)                                          # STEP 53
os0.path.getsize(path3)                                                 # STEP 54
file0 = opener0(path3,'r')                                              # STEP 55
result = os0.path.exists(path3)                                         # STEP 56
result = file0.read(bytes1)                                             # STEP 57
stat3 = os0.stat(path3)                                                 # STEP 58
os0.write(fd0,str4)                                                     # STEP 59
result = file0.readline()                                               # STEP 60
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (kkx) == () ',), <traceback object at 0x1080dc878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 3
str2 = ""                                                                # STEP 0
component0 = "f"                                                         # STEP 1
component1 = "delta"                                                     # STEP 2
path3 = "/Volumes/ramdisk/test"                                          # STEP 3
path3 += "/" + component0                                                # STEP 4
component2 = "beta"                                                      # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
path4 += "/" + component0                                                # STEP 7
path2 = "/Volumes/ramdisk/test"                                          # STEP 8
bytes0 = 0                                                               # STEP 9
os0 = newFakeOS()                                                       # STEP 10
path3 += "/" + component1                                               # STEP 11
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 12
component3 = "h"                                                        # STEP 13
path3 += "/" + component0                                               # STEP 14
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 15
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 16
path4 += "/" + component3                                               # STEP 17
result = os0.path.lexists(path2)                                        # STEP 18
os0.close(fd0)                                                          # STEP 19
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 20
opener0 = newFakeOpener(os0)                                            # STEP 21
result = os0.path.lexists(path2)                                        # STEP 22
os0.symlink(path3,path3)                                                # STEP 23
result = os0.path.lexists(path4)                                        # STEP 24
os0.rename(path4,path3)                                                 # STEP 25
file0 = opener0(path3,'r')                                              # STEP 26
file0 = opener0(path3)                                                  # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
path3 += "/" + component3                                               # STEP 29
os0.rename(path4,path2)                                                 # STEP 30
file0 = opener0(path4,'a')                                              # STEP 31
path3 += "/" + component1                                               # STEP 32
bytes4 = 0                                                              # STEP 33
file0 = opener0(path3,'r')                                              # STEP 34
stat2 = os0.lstat(path3)                                                # STEP 35
path1 = "/Volumes/ramdisk/test"                                         # STEP 36
os0.mkdir(path3)                                                        # STEP 37
result = os0.path.lexists(path4)                                        # STEP 38
os0.rename(path3,path1)                                                 # STEP 39
path2 += "/" + component0                                               # STEP 40
result = sorted(os0.listdir(path4))                                     # STEP 41
os0.mkdir(path3)                                                        # STEP 42
os0.rename(path4,path2)                                                 # STEP 43
file0 = opener0(path3,'a')                                              # STEP 44
result = sorted(os0.listdir(path4))                                     # STEP 45
result = sorted(os0.listdir(path1))                                     # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
os0.symlink(path3,path1)                                                # STEP 49
result = os0.path.exists(path1)                                         # STEP 50
stat0 = os0.lstat(path4)                                                # STEP 51
file0 = opener0(path1,'r')                                              # STEP 52
result = sorted(os0.listdir(path3))                                     # STEP 53
result = os0.path.isfile(path2)                                         # STEP 54
os0.path.getsize(path2)                                                 # STEP 55
result = os0.path.isabs(path2)                                          # STEP 56
os0.mkdir(path1)                                                        # STEP 57
file0 = opener0(path4,'r')                                              # STEP 58
result = os0.path.isfile(path1)                                         # STEP 59
result = sorted(os0.listdir(path2))                                     # STEP 60
os0.rename(path4,path1)                                                 # STEP 61
file0 = opener0(path3)                                                  # STEP 62
os0.link(path4,path1)                                                   # STEP 63
file0 = opener0(path2,'r')                                              # STEP 64
stat3 = os0.lstat(path2)                                                # STEP 65
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
os0.path.getsize(path2)                                                 # STEP 67
result = os0.path.lexists(path0)                                        # STEP 68
str0 = ""                                                               # STEP 69
result = stat3.st_size                                                  # STEP 70
os0.close(fd0)                                                          # STEP 71
result = os0.path.isabs(path2)                                          # STEP 72
stat3 = os0.lstat(path4)                                                # STEP 73
os0.mkdir(path1)                                                        # STEP 74
bytes3 = 0                                                              # STEP 75
file0.write(str0)                                                       # STEP 76
str4 = ""                                                               # STEP 77
os0.rename(path2,path0)                                                 # STEP 78
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 79
result = file0.read(bytes0)                                             # STEP 80
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1081e95f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28380, in act564
    assert (raised == None) == (refRaised == None)
1195 BRANCHES COVERED
915 STATEMENTS COVERED
