Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.3929.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #361 STEP #0 (0:00:30.002646) Fri Jul 21 22:12:00 2017 [ 889 stmts 1155 branches ] 36000 TOTAL ACTIONS (1199.89417056/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x103b79950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 71 steps

SAVING TEST AS failure.3929.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes0 = 0                                                               # STEP 0
component4 = "h"                                                         # STEP 1
component1 = "c"                                                         # STEP 2
component2 = "a"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
str3 = ""                                                                # STEP 5
component0 = "h"                                                         # STEP 6
str4 = ""                                                                # STEP 7
component3 = "delta"                                                     # STEP 8
bytes1 = 0                                                               # STEP 9
str1 = ""                                                               # STEP 10
str0 = ""                                                               # STEP 11
str2 = ""                                                               # STEP 12
bytes3 = 0                                                              # STEP 13
opener0 = newFakeOpener(os0)                                            # STEP 14
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.remove(path3)                                                       # STEP 16
path4 = "/Volumes/ramdisk/test"                                         # STEP 17
result = os0.readlink(path4)                                            # STEP 18
path4 = "/Volumes/ramdisk/test"                                         # STEP 19
bytes2 = 0                                                              # STEP 20
file0 = opener0(path3,'a')                                              # STEP 21
file0 = opener0(path4,'a')                                              # STEP 22
path1 = "/Volumes/ramdisk/test"                                         # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
result = os0.readlink(path3)                                            # STEP 25
path1 += "/" + component4                                               # STEP 26
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
os0.remove(path3)                                                       # STEP 29
stat0 = os0.stat(path1)                                                 # STEP 30
result = os0.read(fd0,bytes2)                                           # STEP 31
path1 += "/" + component4                                               # STEP 32
os0.mkdir(path3)                                                        # STEP 33
stat3 = os0.stat(path1)                                                 # STEP 34
component4 = "delta"                                                    # STEP 35
file0 = opener0(path4,'w')                                              # STEP 36
os0.makedirs(path3)                                                     # STEP 37
os0.write(fd0,str2)                                                     # STEP 38
result = os0.path.exists(path4)                                         # STEP 39
path3 += "/" + component4                                               # STEP 40
component4 = "e"                                                        # STEP 41
result = os0.read(fd0,bytes2)                                           # STEP 42
path3 = "/Volumes/ramdisk/test"                                         # STEP 43
path3 += "/" + component0                                               # STEP 44
path4 += "/" + component2                                               # STEP 45
stat2 = os0.stat(path3)                                                 # STEP 46
os0.remove(path3)                                                       # STEP 47
bytes2 = 0                                                              # STEP 48
result = os0.path.islink(path1)                                         # STEP 49
stat4 = os0.stat(path3)                                                 # STEP 50
os0.write(fd0,str2)                                                     # STEP 51
component2 = "omega"                                                    # STEP 52
file0 = opener0(path1,'a')                                              # STEP 53
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
os0.mkdir(path4)                                                        # STEP 55
os0.write(fd0,str1)                                                     # STEP 56
path1 += "/" + component3                                               # STEP 57
stat3 = os0.fstat(fd0)                                                  # STEP 58
component3 = "beta"                                                     # STEP 59
os0.close(fd0)                                                          # STEP 60
result = os0.path.exists(path1)                                         # STEP 61
file0 = opener0(path3,'a')                                              # STEP 62
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 63
os0.write(fd0,str4)                                                     # STEP 64
str4 = ""                                                               # STEP 65
os0.write(fd0,str0)                                                     # STEP 66
result = os0.path.exists(path1)                                         # STEP 67
stat4 = os0.stat(path4)                                                 # STEP 68
os0.write(fd0,str3)                                                     # STEP 69
result = file0.read()                                                   # STEP 70
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1053d45a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 95
STOPPING TESTING DUE TO TIMEOUT
42.4005945745 PERCENT COVERED
60.320622921 TOTAL RUNTIME
740 EXECUTED
73966 TOTAL TEST OPERATIONS
54.2084386349 TIME SPENT EXECUTING TEST OPERATIONS
2.2958521843 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0451598167419 TIME SPENT CHECKING PROPERTIES
54.2535984516 TOTAL TIME SPENT RUNNING SUT
2.15968370438 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
bytes0 = 0                                                               # STEP 0
component4 = "h"                                                         # STEP 1
component1 = "c"                                                         # STEP 2
component2 = "a"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
str3 = ""                                                                # STEP 5
component0 = "h"                                                         # STEP 6
str4 = ""                                                                # STEP 7
component3 = "delta"                                                     # STEP 8
bytes1 = 0                                                               # STEP 9
str1 = ""                                                               # STEP 10
str0 = ""                                                               # STEP 11
str2 = ""                                                               # STEP 12
bytes3 = 0                                                              # STEP 13
opener0 = newFakeOpener(os0)                                            # STEP 14
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.remove(path3)                                                       # STEP 16
path4 = "/Volumes/ramdisk/test"                                         # STEP 17
result = os0.readlink(path4)                                            # STEP 18
path4 = "/Volumes/ramdisk/test"                                         # STEP 19
bytes2 = 0                                                              # STEP 20
file0 = opener0(path3,'a')                                              # STEP 21
file0 = opener0(path4,'a')                                              # STEP 22
path1 = "/Volumes/ramdisk/test"                                         # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
result = os0.readlink(path3)                                            # STEP 25
path1 += "/" + component4                                               # STEP 26
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 27
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
os0.remove(path3)                                                       # STEP 29
stat0 = os0.stat(path1)                                                 # STEP 30
result = os0.read(fd0,bytes2)                                           # STEP 31
path1 += "/" + component4                                               # STEP 32
os0.mkdir(path3)                                                        # STEP 33
stat3 = os0.stat(path1)                                                 # STEP 34
component4 = "delta"                                                    # STEP 35
file0 = opener0(path4,'w')                                              # STEP 36
os0.makedirs(path3)                                                     # STEP 37
os0.write(fd0,str2)                                                     # STEP 38
result = os0.path.exists(path4)                                         # STEP 39
path3 += "/" + component4                                               # STEP 40
component4 = "e"                                                        # STEP 41
result = os0.read(fd0,bytes2)                                           # STEP 42
path3 = "/Volumes/ramdisk/test"                                         # STEP 43
path3 += "/" + component0                                               # STEP 44
path4 += "/" + component2                                               # STEP 45
stat2 = os0.stat(path3)                                                 # STEP 46
os0.remove(path3)                                                       # STEP 47
bytes2 = 0                                                              # STEP 48
result = os0.path.islink(path1)                                         # STEP 49
stat4 = os0.stat(path3)                                                 # STEP 50
os0.write(fd0,str2)                                                     # STEP 51
component2 = "omega"                                                    # STEP 52
file0 = opener0(path1,'a')                                              # STEP 53
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
os0.mkdir(path4)                                                        # STEP 55
os0.write(fd0,str1)                                                     # STEP 56
path1 += "/" + component3                                               # STEP 57
stat3 = os0.fstat(fd0)                                                  # STEP 58
component3 = "beta"                                                     # STEP 59
os0.close(fd0)                                                          # STEP 60
result = os0.path.exists(path1)                                         # STEP 61
file0 = opener0(path3,'a')                                              # STEP 62
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 63
os0.write(fd0,str4)                                                     # STEP 64
str4 = ""                                                               # STEP 65
os0.write(fd0,str0)                                                     # STEP 66
result = os0.path.exists(path1)                                         # STEP 67
stat4 = os0.stat(path4)                                                 # STEP 68
os0.write(fd0,str3)                                                     # STEP 69
result = file0.read()                                                   # STEP 70
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1053d45a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1176 BRANCHES COVERED
901 STATEMENTS COVERED
