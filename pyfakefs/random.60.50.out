Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5026.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a5a7908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 74 steps

SAVING TEST AS failure.5026.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "d"                                                         # STEP 0
component2 = "delta"                                                     # STEP 1
component4 = "gamma"                                                     # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "f"                                                         # STEP 4
component0 = "e"                                                         # STEP 5
bytes4 = 0                                                               # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
path2 += "/" + component0                                                # STEP 8
component0 = "d"                                                         # STEP 9
str2 = ""                                                               # STEP 10
bytes1 = 0                                                              # STEP 11
str2 += 'g'                                                             # STEP 12
bytes3 = 0                                                              # STEP 13
str2 += 'e'                                                             # STEP 14
str2 += 'x'                                                             # STEP 15
os0 = newFakeOS()                                                       # STEP 16
os0.link(path2,path4)                                                   # STEP 17
stat2 = os0.lstat(path2)                                                # STEP 18
str2 += 'j'                                                             # STEP 19
result = os0.readlink(path4)                                            # STEP 20
stat0 = os0.lstat(path2)                                                # STEP 21
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 22
os0.rmdir(path2)                                                        # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
file0 = opener0(path4,'a')                                              # STEP 25
os0.remove(path4)                                                       # STEP 26
path2 += "/" + component3                                               # STEP 27
result = os0.path.isdir(path2)                                          # STEP 28
result = os0.path.islink(path4)                                         # STEP 29
file0 = opener0(path2,'w')                                              # STEP 30
stat3 = os0.lstat(path2)                                                # STEP 31
os0.symlink(path2,path4)                                                # STEP 32
bytes0 = 0                                                              # STEP 33
str2 += 't'                                                             # STEP 34
result = os0.path.dirname(path4)                                        # STEP 35
result = os0.path.isdir(path2)                                          # STEP 36
str1 = ""                                                               # STEP 37
stat1 = os0.lstat(path2)                                                # STEP 38
str2 += 'b'                                                             # STEP 39
stat2 = os0.stat(path2)                                                 # STEP 40
path2 += "/" + component0                                               # STEP 41
str1 += 'y'                                                             # STEP 42
os0.makedirs(path2)                                                     # STEP 43
os0.close(fd0)                                                          # STEP 44
result = os0.read(fd0,bytes0)                                           # STEP 45
str0 = ""                                                               # STEP 46
path4 += "/" + component1                                               # STEP 47
component1 = "a"                                                        # STEP 48
file0 = opener0(path4,'a')                                              # STEP 49
str2 += 's'                                                             # STEP 50
str1 += 'n'                                                             # STEP 51
str0 += 'f'                                                             # STEP 52
result = os0.path.isfile(path2)                                         # STEP 53
path2 += "/" + component0                                               # STEP 54
stat4 = os0.lstat(path4)                                                # STEP 55
str2 += 'i'                                                             # STEP 56
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 57
component3 = "c"                                                        # STEP 58
result = stat4.st_nlink                                                 # STEP 59
os0.symlink(path2,path4)                                                # STEP 60
result = file0.read(bytes4)                                             # STEP 61
os0.remove(path2)                                                       # STEP 62
str0 += " "                                                             # STEP 63
str2 = ""                                                               # STEP 64
bytes3 += 1                                                             # STEP 65
str0 += 'w'                                                             # STEP 66
str2 += 'm'                                                             # STEP 67
result = file0.read(bytes4)                                             # STEP 68
os0.symlink(path2,path2)                                                # STEP 69
str0 += 's'                                                             # STEP 70
os0.write(fd0,str1)                                                     # STEP 71
component0 = "a"                                                        # STEP 72
result = file0.read(bytes1)                                             # STEP 73
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107e53170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #423 STEP #8 (0:00:30.000068) Sat Jul 22 03:31:08 2017 [ 896 stmts 1167 branches ] 42182 TOTAL ACTIONS (1406.06348197/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 29
STOPPING TESTING DUE TO TIMEOUT
42.7722036418 PERCENT COVERED
60.3319151402 TOTAL RUNTIME
844 EXECUTED
84303 TOTAL TEST OPERATIONS
52.7038288116 TIME SPENT EXECUTING TEST OPERATIONS
4.04571461678 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0525379180908 TIME SPENT CHECKING PROPERTIES
52.7563667297 TOTAL TIME SPENT RUNNING SUT
2.51133871078 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "d"                                                         # STEP 0
component2 = "delta"                                                     # STEP 1
component4 = "gamma"                                                     # STEP 2
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
component3 = "f"                                                         # STEP 4
component0 = "e"                                                         # STEP 5
bytes4 = 0                                                               # STEP 6
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
path2 += "/" + component0                                                # STEP 8
component0 = "d"                                                         # STEP 9
str2 = ""                                                               # STEP 10
bytes1 = 0                                                              # STEP 11
str2 += 'g'                                                             # STEP 12
bytes3 = 0                                                              # STEP 13
str2 += 'e'                                                             # STEP 14
str2 += 'x'                                                             # STEP 15
os0 = newFakeOS()                                                       # STEP 16
os0.link(path2,path4)                                                   # STEP 17
stat2 = os0.lstat(path2)                                                # STEP 18
str2 += 'j'                                                             # STEP 19
result = os0.readlink(path4)                                            # STEP 20
stat0 = os0.lstat(path2)                                                # STEP 21
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 22
os0.rmdir(path2)                                                        # STEP 23
opener0 = newFakeOpener(os0)                                            # STEP 24
file0 = opener0(path4,'a')                                              # STEP 25
os0.remove(path4)                                                       # STEP 26
path2 += "/" + component3                                               # STEP 27
result = os0.path.isdir(path2)                                          # STEP 28
result = os0.path.islink(path4)                                         # STEP 29
file0 = opener0(path2,'w')                                              # STEP 30
stat3 = os0.lstat(path2)                                                # STEP 31
os0.symlink(path2,path4)                                                # STEP 32
bytes0 = 0                                                              # STEP 33
str2 += 't'                                                             # STEP 34
result = os0.path.dirname(path4)                                        # STEP 35
result = os0.path.isdir(path2)                                          # STEP 36
str1 = ""                                                               # STEP 37
stat1 = os0.lstat(path2)                                                # STEP 38
str2 += 'b'                                                             # STEP 39
stat2 = os0.stat(path2)                                                 # STEP 40
path2 += "/" + component0                                               # STEP 41
str1 += 'y'                                                             # STEP 42
os0.makedirs(path2)                                                     # STEP 43
os0.close(fd0)                                                          # STEP 44
result = os0.read(fd0,bytes0)                                           # STEP 45
str0 = ""                                                               # STEP 46
path4 += "/" + component1                                               # STEP 47
component1 = "a"                                                        # STEP 48
file0 = opener0(path4,'a')                                              # STEP 49
str2 += 's'                                                             # STEP 50
str1 += 'n'                                                             # STEP 51
str0 += 'f'                                                             # STEP 52
result = os0.path.isfile(path2)                                         # STEP 53
path2 += "/" + component0                                               # STEP 54
stat4 = os0.lstat(path4)                                                # STEP 55
str2 += 'i'                                                             # STEP 56
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 57
component3 = "c"                                                        # STEP 58
result = stat4.st_nlink                                                 # STEP 59
os0.symlink(path2,path4)                                                # STEP 60
result = file0.read(bytes4)                                             # STEP 61
os0.remove(path2)                                                       # STEP 62
str0 += " "                                                             # STEP 63
str2 = ""                                                               # STEP 64
bytes3 += 1                                                             # STEP 65
str0 += 'w'                                                             # STEP 66
str2 += 'm'                                                             # STEP 67
result = file0.read(bytes4)                                             # STEP 68
os0.symlink(path2,path2)                                                # STEP 69
str0 += 's'                                                             # STEP 70
os0.write(fd0,str1)                                                     # STEP 71
component0 = "a"                                                        # STEP 72
result = file0.read(bytes1)                                             # STEP 73
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107e53170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1183 BRANCHES COVERED
907 STATEMENTS COVERED
