Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5900.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109c5f878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 54 steps

SAVING TEST AS failure.5900.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "gamma"                                                     # STEP 0
str2 = ""                                                                # STEP 1
os0 = newFakeOS()                                                        # STEP 2
component0 = "phi"                                                       # STEP 3
component2 = "e"                                                         # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
str2 += " "                                                              # STEP 7
os0.symlink(path3,path3)                                                 # STEP 8
str2 += " "                                                              # STEP 9
result = os0.readlink(path3)                                            # STEP 10
str4 = ""                                                               # STEP 11
file0 = opener0(path3,'a')                                              # STEP 12
path3 += "/" + component2                                               # STEP 13
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 14
result = os0.path.isabs(path3)                                          # STEP 15
bytes3 = 0                                                              # STEP 16
str4 += " "                                                             # STEP 17
stat0 = os0.lstat(path3)                                                # STEP 18
os0.symlink(path3,path3)                                                # STEP 19
result = sorted(os0.listdir(path3))                                     # STEP 20
os0.close(fd0)                                                          # STEP 21
result = stat0.st_size                                                  # STEP 22
result = os0.path.lexists(path3)                                        # STEP 23
file0 = opener0(path3,'a')                                              # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
stat2 = os0.stat(path3)                                                 # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 27
result = sorted(os0.listdir(path3))                                     # STEP 28
component3 = "f"                                                        # STEP 29
os0.makedirs(path3)                                                     # STEP 30
result = os0.path.isabs(path3)                                          # STEP 31
result = os0.path.isabs(path3)                                          # STEP 32
file0.truncate()                                                        # STEP 33
stat4 = os0.stat(path3)                                                 # STEP 34
os0.path.getsize(path3)                                                 # STEP 35
os0.symlink(path3,path3)                                                # STEP 36
result = os0.path.isfile(path3)                                         # STEP 37
result = os0.readlink(path3)                                            # STEP 38
result = file0.readline(bytes3)                                         # STEP 39
result = os0.path.lexists(path3)                                        # STEP 40
file0.truncate()                                                        # STEP 41
result = stat0.st_size                                                  # STEP 42
result = file0.read(bytes3)                                             # STEP 43
os0.makedirs(path3)                                                     # STEP 44
str0 = ""                                                               # STEP 45
result = file0.readlines()                                              # STEP 46
result = os0.read(fd0,bytes3)                                           # STEP 47
path4 = "/Volumes/ramdisk/test"                                         # STEP 48
result = os0.path.isfile(path3)                                         # STEP 49
result = os0.path.lexists(path3)                                        # STEP 50
stat0 = os0.stat(path3)                                                 # STEP 51
str2 = ""                                                               # STEP 52
result = file0.read(bytes3)                                             # STEP 53
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106d9efc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (5) ',), <traceback object at 0x104b1fc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 90 steps

SAVING TEST AS failure.5900.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "b"                                                         # STEP 0
bytes0 = 0                                                               # STEP 1
bytes0 += 1                                                              # STEP 2
str2 = ""                                                                # STEP 3
bytes0 += 1                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
component0 = "e"                                                         # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
bytes0 += 1                                                              # STEP 8
str1 = ""                                                                # STEP 9
str2 += 'y'                                                             # STEP 10
str2 = ""                                                               # STEP 11
str2 += 'g'                                                             # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
result = sorted(os0.listdir(path1))                                     # STEP 14
os0.remove(path1)                                                       # STEP 15
os0.mkdir(path1)                                                        # STEP 16
str1 += 'o'                                                             # STEP 17
path1 += "/" + component2                                               # STEP 18
os0.remove(path1)                                                       # STEP 19
os0.remove(path1)                                                       # STEP 20
result = os0.path.dirname(path1)                                        # STEP 21
file0 = opener0(path1)                                                  # STEP 22
bytes0 += 1                                                             # STEP 23
os0.symlink(path1,path1)                                                # STEP 24
component2 = "epsilon"                                                  # STEP 25
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 26
bytes3 = 0                                                              # STEP 27
file0 = opener0(path1)                                                  # STEP 28
file0 = opener0(path1,'w')                                              # STEP 29
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 30
path4 = "/Volumes/ramdisk/test"                                         # STEP 31
path4 += "/" + component2                                               # STEP 32
result = sorted(os0.listdir(path1))                                     # STEP 33
result = os0.path.dirname(path4)                                        # STEP 34
stat3 = os0.stat(path4)                                                 # STEP 35
os0.remove(path4)                                                       # STEP 36
result = os0.path.exists(path4)                                         # STEP 37
file0 = opener0(path4,'w')                                              # STEP 38
file0.next()                                                            # STEP 39
stat3 = os0.stat(path1)                                                 # STEP 40
path1 += "/" + component0                                               # STEP 41
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 42
result = os0.path.islink(path1)                                         # STEP 43
os0.remove(path4)                                                       # STEP 44
result = os0.path.isdir(path4)                                          # STEP 45
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
component4 = "alpha"                                                    # STEP 47
result = os0.path.isabs(path4)                                          # STEP 48
result = os0.path.isdir(path4)                                          # STEP 49
file0.flush()                                                           # STEP 50
file0.seek(bytes0)                                                      # STEP 51
file0.write(str2)                                                       # STEP 52
result = os0.read(fd0,bytes3)                                           # STEP 53
bytes0 = 0                                                              # STEP 54
file0.seek(bytes3)                                                      # STEP 55
str1 += 'i'                                                             # STEP 56
os0.symlink(path1,path4)                                                # STEP 57
os0.mkdir(path4)                                                        # STEP 58
file0.next()                                                            # STEP 59
result = os0.path.islink(path4)                                         # STEP 60
file0.next()                                                            # STEP 61
bytes4 = 0                                                              # STEP 62
path1 += "/" + component0                                               # STEP 63
os0.removedirs(path3)                                                   # STEP 64
os0.symlink(path3,path4)                                                # STEP 65
result = os0.path.islink(path4)                                         # STEP 66
str1 += 's'                                                             # STEP 67
os0.rename(path4,path1)                                                 # STEP 68
path3 += "/" + component2                                               # STEP 69
os0.rename(path1,path4)                                                 # STEP 70
path4 = "/Volumes/ramdisk/test"                                         # STEP 71
str2 += 'b'                                                             # STEP 72
result = os0.read(fd0,bytes0)                                           # STEP 73
bytes3 = 0                                                              # STEP 74
os0.removedirs(path1)                                                   # STEP 75
str2 = ""                                                               # STEP 76
result = os0.path.exists(path1)                                         # STEP 77
stat0 = os0.fstat(fd0)                                                  # STEP 78
result = os0.path.isabs(path3)                                          # STEP 79
file0.write(str1)                                                       # STEP 80
file0.write(str1)                                                       # STEP 81
result = os0.path.isabs(path3)                                          # STEP 82
file0.write(str1)                                                       # STEP 83
result = os0.path.lexists(path3)                                        # STEP 84
file0.flush()                                                           # STEP 85
os0.symlink(path1,path1)                                                # STEP 86
result = file0.readline()                                               # STEP 87
stat3 = os0.fstat(fd0)                                                  # STEP 88
result = stat0.st_size                                                  # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (5) ',), <traceback object at 0x108557e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10269ca28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28701, in act570
    result = self.p_file[0].readline(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 64 steps

SAVING TEST AS failure.5900.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes4 = 0                                                               # STEP 0
str0 = ""                                                                # STEP 1
bytes4 += 1                                                              # STEP 2
str1 = ""                                                                # STEP 3
bytes4 += 1                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes0 = 0                                                               # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
component3 = "gamma"                                                     # STEP 8
bytes0 += 1                                                              # STEP 9
bytes0 = 0                                                              # STEP 10
str3 = ""                                                               # STEP 11
str4 = ""                                                               # STEP 12
bytes1 = 0                                                              # STEP 13
bytes0 += 1                                                             # STEP 14
bytes0 = 0                                                              # STEP 15
bytes3 = 0                                                              # STEP 16
path0 = "/Volumes/ramdisk/test"                                         # STEP 17
bytes4 += 1                                                             # STEP 18
component1 = "h"                                                        # STEP 19
os0.makedirs(path0)                                                     # STEP 20
bytes4 += 1                                                             # STEP 21
os0.mkdir(path0)                                                        # STEP 22
component2 = "g"                                                        # STEP 23
os0.makedirs(path0)                                                     # STEP 24
component4 = "h"                                                        # STEP 25
result = os0.path.islink(path0)                                         # STEP 26
result = os0.path.exists(path0)                                         # STEP 27
os0.symlink(path0,path0)                                                # STEP 28
os0.link(path0,path0)                                                   # STEP 29
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
os0.makedirs(path1)                                                     # STEP 31
os0.makedirs(path0)                                                     # STEP 32
os0.makedirs(path0)                                                     # STEP 33
bytes3 += 1                                                             # STEP 34
result = os0.path.exists(path1)                                         # STEP 35
result = os0.path.islink(path0)                                         # STEP 36
path0 += "/" + component1                                               # STEP 37
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 38
component1 = "b"                                                        # STEP 39
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 40
os0.close(fd0)                                                          # STEP 41
os0.write(fd0,str3)                                                     # STEP 42
os0.write(fd0,str1)                                                     # STEP 43
file0 = opener0(path1,'w')                                              # STEP 44
result = os0.path.abspath(path1)                                        # STEP 45
os0.mkdir(path0)                                                        # STEP 46
bytes2 = 0                                                              # STEP 47
file0 = opener0(path1,'w')                                              # STEP 48
os0.makedirs(path1)                                                     # STEP 49
result = os0.path.abspath(path1)                                        # STEP 50
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
component0 = "g"                                                        # STEP 52
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 53
str2 = ""                                                               # STEP 54
file0 = opener0(path0,'w')                                              # STEP 55
result = os0.read(fd0,bytes0)                                           # STEP 56
result = os0.path.exists(path0)                                         # STEP 57
result = os0.path.abspath(path1)                                        # STEP 58
result = os0.path.exists(path0)                                         # STEP 59
os0.mkdir(path1)                                                        # STEP 60
stat3 = os0.fstat(fd0)                                                  # STEP 61
os0.symlink(path0,path1)                                                # STEP 62
result = file0.readline(bytes0)                                         # STEP 63
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a0d1368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28701, in act570
    result = self.p_file[0].readline(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
TEST #179 STEP #9 (0:00:30.000395) Sat Jul 22 08:22:08 2017 [ 898 stmts 1166 branches ] 17717 TOTAL ACTIONS (590.558889802/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107b11c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 56 steps

SAVING TEST AS failure.5900.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str1 = ""                                                                # STEP 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes3 = 0                                                               # STEP 2
str3 = ""                                                                # STEP 3
str4 = ""                                                                # STEP 4
bytes2 = 0                                                               # STEP 5
str0 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
os0.makedirs(path0)                                                      # STEP 8
result = os0.path.lexists(path0)                                         # STEP 9
result = os0.path.isfile(path0)                                         # STEP 10
component4 = "e"                                                        # STEP 11
bytes0 = 0                                                              # STEP 12
bytes1 = 0                                                              # STEP 13
os0.mkdir(path0)                                                        # STEP 14
result = os0.readlink(path0)                                            # STEP 15
result = os0.path.exists(path0)                                         # STEP 16
str2 = ""                                                               # STEP 17
result = os0.path.isfile(path0)                                         # STEP 18
path0 += "/" + component4                                               # STEP 19
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 20
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 21
os0.makedirs(path0)                                                     # STEP 22
os0.write(fd0,str2)                                                     # STEP 23
os0.makedirs(path0)                                                     # STEP 24
os0.symlink(path0,path0)                                                # STEP 25
path2 = "/Volumes/ramdisk/test"                                         # STEP 26
result = os0.path.abspath(path0)                                        # STEP 27
os0.write(fd0,str1)                                                     # STEP 28
result = os0.path.isfile(path2)                                         # STEP 29
path2 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.isfile(path2)                                         # STEP 31
result = os0.path.lexists(path2)                                        # STEP 32
path2 += "/" + component4                                               # STEP 33
os0.mkdir(path0)                                                        # STEP 34
component0 = "delta"                                                    # STEP 35
os0.rmdir(path0)                                                        # STEP 36
os0.rmdir(path2)                                                        # STEP 37
str2 = ""                                                               # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
path2 += "/" + component0                                               # STEP 41
result = os0.path.abspath(path0)                                        # STEP 42
result = os0.path.lexists(path0)                                        # STEP 43
opener0 = newFakeOpener(os0)                                            # STEP 44
os0.makedirs(path2)                                                     # STEP 45
result = os0.path.lexists(path2)                                        # STEP 46
file0 = opener0(path0,'a')                                              # STEP 47
path0 += "/" + component4                                               # STEP 48
stat0 = os0.fstat(fd0)                                                  # STEP 49
result = stat0.st_size                                                  # STEP 50
os0.symlink(path0,path0)                                                # STEP 51
component1 = "phi"                                                      # STEP 52
os0.write(fd0,str4)                                                     # STEP 53
os0.mkdir(path0)                                                        # STEP 54
result = file0.read(bytes1)                                             # STEP 55
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107b05fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109f0db00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 82 steps

SAVING TEST AS failure.5900.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
str2 = ""                                                                # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
os0 = newFakeOS()                                                        # STEP 3
os0.symlink(path1,path1)                                                 # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
os0.mkdir(path4)                                                         # STEP 6
result = os0.path.islink(path4)                                          # STEP 7
bytes1 = 0                                                               # STEP 8
result = os0.path.isdir(path1)                                           # STEP 9
component2 = "phi"                                                      # STEP 10
result = os0.path.abspath(path0)                                        # STEP 11
os0.symlink(path0,path4)                                                # STEP 12
path0 += "/" + component2                                               # STEP 13
result = os0.path.dirname(path4)                                        # STEP 14
os0.rename(path0,path1)                                                 # STEP 15
str0 = ""                                                               # STEP 16
component3 = "h"                                                        # STEP 17
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 18
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 19
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 20
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
component2 = "g"                                                        # STEP 22
os0.rmdir(path0)                                                        # STEP 23
result = os0.path.abspath(path0)                                        # STEP 24
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 25
os0.rmdir(path0)                                                        # STEP 26
opener0 = newFakeOpener(os0)                                            # STEP 27
result = sorted(os0.listdir(path2))                                     # STEP 28
os0.mkdir(path4)                                                        # STEP 29
os0.mkdir(path0)                                                        # STEP 30
result = os0.path.isdir(path1)                                          # STEP 31
bytes3 = 0                                                              # STEP 32
file0 = opener0(path4)                                                  # STEP 33
path4 += "/" + component3                                               # STEP 34
stat1 = os0.stat(path4)                                                 # STEP 35
os0.symlink(path1,path2)                                                # STEP 36
os0.write(fd0,str2)                                                     # STEP 37
result = os0.path.dirname(path0)                                        # STEP 38
bytes2 = 0                                                              # STEP 39
stat2 = os0.lstat(path0)                                                # STEP 40
file0 = opener0(path1)                                                  # STEP 41
result = os0.path.abspath(path1)                                        # STEP 42
bytes0 = 0                                                              # STEP 43
stat4 = os0.lstat(path0)                                                # STEP 44
path1 += "/" + component2                                               # STEP 45
stat3 = os0.lstat(path0)                                                # STEP 46
stat0 = os0.stat(path4)                                                 # STEP 47
result = os0.path.isdir(path4)                                          # STEP 48
os0.rmdir(path1)                                                        # STEP 49
os0.write(fd0,str0)                                                     # STEP 50
stat0 = os0.fstat(fd0)                                                  # STEP 51
os0.rename(path1,path2)                                                 # STEP 52
result = os0.path.abspath(path4)                                        # STEP 53
result = sorted(os0.listdir(path4))                                     # STEP 54
os0.close(fd0)                                                          # STEP 55
result = os0.path.dirname(path0)                                        # STEP 56
result = os0.path.isabs(path0)                                          # STEP 57
os0.rmdir(path1)                                                        # STEP 58
os0.rmdir(path1)                                                        # STEP 59
stat1 = os0.fstat(fd0)                                                  # STEP 60
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 61
bytes4 = 0                                                              # STEP 62
result = os0.path.abspath(path2)                                        # STEP 63
os0.rename(path4,path1)                                                 # STEP 64
stat1 = os0.stat(path1)                                                 # STEP 65
os0.symlink(path1,path4)                                                # STEP 66
result = os0.path.abspath(path2)                                        # STEP 67
file0 = opener0(path1,'a')                                              # STEP 68
os0.rmdir(path1)                                                        # STEP 69
stat1 = os0.lstat(path1)                                                # STEP 70
os0.mkdir(path0)                                                        # STEP 71
os0.mkdir(path4)                                                        # STEP 72
file0.truncate()                                                        # STEP 73
result = os0.path.abspath(path4)                                        # STEP 74
result = os0.path.dirname(path1)                                        # STEP 75
file0.flush()                                                           # STEP 76
file0.flush()                                                           # STEP 77
os0.symlink(path1,path4)                                                # STEP 78
os0.write(fd0,str2)                                                     # STEP 79
path0 = "/Volumes/ramdisk/test"                                         # STEP 80
result = file0.read()                                                   # STEP 81
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109ad4d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 21
STOPPING TESTING DUE TO TIMEOUT
42.7722036418 PERCENT COVERED
60.3414230347 TOTAL RUNTIME
358 EXECUTED
35567 TOTAL TEST OPERATIONS
42.4139177799 TIME SPENT EXECUTING TEST OPERATIONS
15.3123943806 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0250720977783 TIME SPENT CHECKING PROPERTIES
42.4389898777 TOTAL TIME SPENT RUNNING SUT
1.07126164436 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
5 FAILED
0 REPEATS OF FAILURES
5 ACTUAL DISTINCT FAILURES

FAILURE 0
component4 = "gamma"                                                     # STEP 0
str2 = ""                                                                # STEP 1
os0 = newFakeOS()                                                        # STEP 2
component0 = "phi"                                                       # STEP 3
component2 = "e"                                                         # STEP 4
opener0 = newFakeOpener(os0)                                             # STEP 5
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
str2 += " "                                                              # STEP 7
os0.symlink(path3,path3)                                                 # STEP 8
str2 += " "                                                              # STEP 9
result = os0.readlink(path3)                                            # STEP 10
str4 = ""                                                               # STEP 11
file0 = opener0(path3,'a')                                              # STEP 12
path3 += "/" + component2                                               # STEP 13
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 14
result = os0.path.isabs(path3)                                          # STEP 15
bytes3 = 0                                                              # STEP 16
str4 += " "                                                             # STEP 17
stat0 = os0.lstat(path3)                                                # STEP 18
os0.symlink(path3,path3)                                                # STEP 19
result = sorted(os0.listdir(path3))                                     # STEP 20
os0.close(fd0)                                                          # STEP 21
result = stat0.st_size                                                  # STEP 22
result = os0.path.lexists(path3)                                        # STEP 23
file0 = opener0(path3,'a')                                              # STEP 24
result = os0.path.lexists(path3)                                        # STEP 25
stat2 = os0.stat(path3)                                                 # STEP 26
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 27
result = sorted(os0.listdir(path3))                                     # STEP 28
component3 = "f"                                                        # STEP 29
os0.makedirs(path3)                                                     # STEP 30
result = os0.path.isabs(path3)                                          # STEP 31
result = os0.path.isabs(path3)                                          # STEP 32
file0.truncate()                                                        # STEP 33
stat4 = os0.stat(path3)                                                 # STEP 34
os0.path.getsize(path3)                                                 # STEP 35
os0.symlink(path3,path3)                                                # STEP 36
result = os0.path.isfile(path3)                                         # STEP 37
result = os0.readlink(path3)                                            # STEP 38
result = file0.readline(bytes3)                                         # STEP 39
result = os0.path.lexists(path3)                                        # STEP 40
file0.truncate()                                                        # STEP 41
result = stat0.st_size                                                  # STEP 42
result = file0.read(bytes3)                                             # STEP 43
os0.makedirs(path3)                                                     # STEP 44
str0 = ""                                                               # STEP 45
result = file0.readlines()                                              # STEP 46
result = os0.read(fd0,bytes3)                                           # STEP 47
path4 = "/Volumes/ramdisk/test"                                         # STEP 48
result = os0.path.isfile(path3)                                         # STEP 49
result = os0.path.lexists(path3)                                        # STEP 50
stat0 = os0.stat(path3)                                                 # STEP 51
str2 = ""                                                               # STEP 52
result = file0.read(bytes3)                                             # STEP 53
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106d9efc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28528, in act567
    result = self.p_file[0].read(self.p_bytes[3])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 1
component2 = "b"                                                         # STEP 0
bytes0 = 0                                                               # STEP 1
bytes0 += 1                                                              # STEP 2
str2 = ""                                                                # STEP 3
bytes0 += 1                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
component0 = "e"                                                         # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
bytes0 += 1                                                              # STEP 8
str1 = ""                                                                # STEP 9
str2 += 'y'                                                             # STEP 10
str2 = ""                                                               # STEP 11
str2 += 'g'                                                             # STEP 12
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
result = sorted(os0.listdir(path1))                                     # STEP 14
os0.remove(path1)                                                       # STEP 15
os0.mkdir(path1)                                                        # STEP 16
str1 += 'o'                                                             # STEP 17
path1 += "/" + component2                                               # STEP 18
os0.remove(path1)                                                       # STEP 19
os0.remove(path1)                                                       # STEP 20
result = os0.path.dirname(path1)                                        # STEP 21
file0 = opener0(path1)                                                  # STEP 22
bytes0 += 1                                                             # STEP 23
os0.symlink(path1,path1)                                                # STEP 24
component2 = "epsilon"                                                  # STEP 25
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 26
bytes3 = 0                                                              # STEP 27
file0 = opener0(path1)                                                  # STEP 28
file0 = opener0(path1,'w')                                              # STEP 29
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 30
path4 = "/Volumes/ramdisk/test"                                         # STEP 31
path4 += "/" + component2                                               # STEP 32
result = sorted(os0.listdir(path1))                                     # STEP 33
result = os0.path.dirname(path4)                                        # STEP 34
stat3 = os0.stat(path4)                                                 # STEP 35
os0.remove(path4)                                                       # STEP 36
result = os0.path.exists(path4)                                         # STEP 37
file0 = opener0(path4,'w')                                              # STEP 38
file0.next()                                                            # STEP 39
stat3 = os0.stat(path1)                                                 # STEP 40
path1 += "/" + component0                                               # STEP 41
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 42
result = os0.path.islink(path1)                                         # STEP 43
os0.remove(path4)                                                       # STEP 44
result = os0.path.isdir(path4)                                          # STEP 45
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
component4 = "alpha"                                                    # STEP 47
result = os0.path.isabs(path4)                                          # STEP 48
result = os0.path.isdir(path4)                                          # STEP 49
file0.flush()                                                           # STEP 50
file0.seek(bytes0)                                                      # STEP 51
file0.write(str2)                                                       # STEP 52
result = os0.read(fd0,bytes3)                                           # STEP 53
bytes0 = 0                                                              # STEP 54
file0.seek(bytes3)                                                      # STEP 55
str1 += 'i'                                                             # STEP 56
os0.symlink(path1,path4)                                                # STEP 57
os0.mkdir(path4)                                                        # STEP 58
file0.next()                                                            # STEP 59
result = os0.path.islink(path4)                                         # STEP 60
file0.next()                                                            # STEP 61
bytes4 = 0                                                              # STEP 62
path1 += "/" + component0                                               # STEP 63
os0.removedirs(path3)                                                   # STEP 64
os0.symlink(path3,path4)                                                # STEP 65
result = os0.path.islink(path4)                                         # STEP 66
str1 += 's'                                                             # STEP 67
os0.rename(path4,path1)                                                 # STEP 68
path3 += "/" + component2                                               # STEP 69
os0.rename(path1,path4)                                                 # STEP 70
path4 = "/Volumes/ramdisk/test"                                         # STEP 71
str2 += 'b'                                                             # STEP 72
result = os0.read(fd0,bytes0)                                           # STEP 73
bytes3 = 0                                                              # STEP 74
os0.removedirs(path1)                                                   # STEP 75
str2 = ""                                                               # STEP 76
result = os0.path.exists(path1)                                         # STEP 77
stat0 = os0.fstat(fd0)                                                  # STEP 78
result = os0.path.isabs(path3)                                          # STEP 79
file0.write(str1)                                                       # STEP 80
file0.write(str1)                                                       # STEP 81
result = os0.path.isabs(path3)                                          # STEP 82
file0.write(str1)                                                       # STEP 83
result = os0.path.lexists(path3)                                        # STEP 84
file0.flush()                                                           # STEP 85
os0.symlink(path1,path1)                                                # STEP 86
result = file0.readline()                                               # STEP 87
stat3 = os0.fstat(fd0)                                                  # STEP 88
result = stat0.st_size                                                  # STEP 89
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (5) ',), <traceback object at 0x108557e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21771, in act457
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
bytes4 = 0                                                               # STEP 0
str0 = ""                                                                # STEP 1
bytes4 += 1                                                              # STEP 2
str1 = ""                                                                # STEP 3
bytes4 += 1                                                              # STEP 4
os0 = newFakeOS()                                                        # STEP 5
bytes0 = 0                                                               # STEP 6
opener0 = newFakeOpener(os0)                                             # STEP 7
component3 = "gamma"                                                     # STEP 8
bytes0 += 1                                                              # STEP 9
bytes0 = 0                                                              # STEP 10
str3 = ""                                                               # STEP 11
str4 = ""                                                               # STEP 12
bytes1 = 0                                                              # STEP 13
bytes0 += 1                                                             # STEP 14
bytes0 = 0                                                              # STEP 15
bytes3 = 0                                                              # STEP 16
path0 = "/Volumes/ramdisk/test"                                         # STEP 17
bytes4 += 1                                                             # STEP 18
component1 = "h"                                                        # STEP 19
os0.makedirs(path0)                                                     # STEP 20
bytes4 += 1                                                             # STEP 21
os0.mkdir(path0)                                                        # STEP 22
component2 = "g"                                                        # STEP 23
os0.makedirs(path0)                                                     # STEP 24
component4 = "h"                                                        # STEP 25
result = os0.path.islink(path0)                                         # STEP 26
result = os0.path.exists(path0)                                         # STEP 27
os0.symlink(path0,path0)                                                # STEP 28
os0.link(path0,path0)                                                   # STEP 29
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
os0.makedirs(path1)                                                     # STEP 31
os0.makedirs(path0)                                                     # STEP 32
os0.makedirs(path0)                                                     # STEP 33
bytes3 += 1                                                             # STEP 34
result = os0.path.exists(path1)                                         # STEP 35
result = os0.path.islink(path0)                                         # STEP 36
path0 += "/" + component1                                               # STEP 37
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 38
component1 = "b"                                                        # STEP 39
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 40
os0.close(fd0)                                                          # STEP 41
os0.write(fd0,str3)                                                     # STEP 42
os0.write(fd0,str1)                                                     # STEP 43
file0 = opener0(path1,'w')                                              # STEP 44
result = os0.path.abspath(path1)                                        # STEP 45
os0.mkdir(path0)                                                        # STEP 46
bytes2 = 0                                                              # STEP 47
file0 = opener0(path1,'w')                                              # STEP 48
os0.makedirs(path1)                                                     # STEP 49
result = os0.path.abspath(path1)                                        # STEP 50
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
component0 = "g"                                                        # STEP 52
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 53
str2 = ""                                                               # STEP 54
file0 = opener0(path0,'w')                                              # STEP 55
result = os0.read(fd0,bytes0)                                           # STEP 56
result = os0.path.exists(path0)                                         # STEP 57
result = os0.path.abspath(path1)                                        # STEP 58
result = os0.path.exists(path0)                                         # STEP 59
os0.mkdir(path1)                                                        # STEP 60
stat3 = os0.fstat(fd0)                                                  # STEP 61
os0.symlink(path0,path1)                                                # STEP 62
result = file0.readline(bytes0)                                         # STEP 63
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a0d1368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28701, in act570
    result = self.p_file[0].readline(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
str1 = ""                                                                # STEP 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 1
bytes3 = 0                                                               # STEP 2
str3 = ""                                                                # STEP 3
str4 = ""                                                                # STEP 4
bytes2 = 0                                                               # STEP 5
str0 = ""                                                                # STEP 6
os0 = newFakeOS()                                                        # STEP 7
os0.makedirs(path0)                                                      # STEP 8
result = os0.path.lexists(path0)                                         # STEP 9
result = os0.path.isfile(path0)                                         # STEP 10
component4 = "e"                                                        # STEP 11
bytes0 = 0                                                              # STEP 12
bytes1 = 0                                                              # STEP 13
os0.mkdir(path0)                                                        # STEP 14
result = os0.readlink(path0)                                            # STEP 15
result = os0.path.exists(path0)                                         # STEP 16
str2 = ""                                                               # STEP 17
result = os0.path.isfile(path0)                                         # STEP 18
path0 += "/" + component4                                               # STEP 19
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 20
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 21
os0.makedirs(path0)                                                     # STEP 22
os0.write(fd0,str2)                                                     # STEP 23
os0.makedirs(path0)                                                     # STEP 24
os0.symlink(path0,path0)                                                # STEP 25
path2 = "/Volumes/ramdisk/test"                                         # STEP 26
result = os0.path.abspath(path0)                                        # STEP 27
os0.write(fd0,str1)                                                     # STEP 28
result = os0.path.isfile(path2)                                         # STEP 29
path2 = "/Volumes/ramdisk/test"                                         # STEP 30
result = os0.path.isfile(path2)                                         # STEP 31
result = os0.path.lexists(path2)                                        # STEP 32
path2 += "/" + component4                                               # STEP 33
os0.mkdir(path0)                                                        # STEP 34
component0 = "delta"                                                    # STEP 35
os0.rmdir(path0)                                                        # STEP 36
os0.rmdir(path2)                                                        # STEP 37
str2 = ""                                                               # STEP 38
os0.close(fd0)                                                          # STEP 39
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 40
path2 += "/" + component0                                               # STEP 41
result = os0.path.abspath(path0)                                        # STEP 42
result = os0.path.lexists(path0)                                        # STEP 43
opener0 = newFakeOpener(os0)                                            # STEP 44
os0.makedirs(path2)                                                     # STEP 45
result = os0.path.lexists(path2)                                        # STEP 46
file0 = opener0(path0,'a')                                              # STEP 47
path0 += "/" + component4                                               # STEP 48
stat0 = os0.fstat(fd0)                                                  # STEP 49
result = stat0.st_size                                                  # STEP 50
os0.symlink(path0,path0)                                                # STEP 51
component1 = "phi"                                                      # STEP 52
os0.write(fd0,str4)                                                     # STEP 53
os0.mkdir(path0)                                                        # STEP 54
result = file0.read(bytes1)                                             # STEP 55
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107b05fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28408, in act565
    result = self.p_file[0].read(self.p_bytes[1])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
str2 = ""                                                                # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
os0 = newFakeOS()                                                        # STEP 3
os0.symlink(path1,path1)                                                 # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
os0.mkdir(path4)                                                         # STEP 6
result = os0.path.islink(path4)                                          # STEP 7
bytes1 = 0                                                               # STEP 8
result = os0.path.isdir(path1)                                           # STEP 9
component2 = "phi"                                                      # STEP 10
result = os0.path.abspath(path0)                                        # STEP 11
os0.symlink(path0,path4)                                                # STEP 12
path0 += "/" + component2                                               # STEP 13
result = os0.path.dirname(path4)                                        # STEP 14
os0.rename(path0,path1)                                                 # STEP 15
str0 = ""                                                               # STEP 16
component3 = "h"                                                        # STEP 17
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 18
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 19
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 20
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
component2 = "g"                                                        # STEP 22
os0.rmdir(path0)                                                        # STEP 23
result = os0.path.abspath(path0)                                        # STEP 24
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 25
os0.rmdir(path0)                                                        # STEP 26
opener0 = newFakeOpener(os0)                                            # STEP 27
result = sorted(os0.listdir(path2))                                     # STEP 28
os0.mkdir(path4)                                                        # STEP 29
os0.mkdir(path0)                                                        # STEP 30
result = os0.path.isdir(path1)                                          # STEP 31
bytes3 = 0                                                              # STEP 32
file0 = opener0(path4)                                                  # STEP 33
path4 += "/" + component3                                               # STEP 34
stat1 = os0.stat(path4)                                                 # STEP 35
os0.symlink(path1,path2)                                                # STEP 36
os0.write(fd0,str2)                                                     # STEP 37
result = os0.path.dirname(path0)                                        # STEP 38
bytes2 = 0                                                              # STEP 39
stat2 = os0.lstat(path0)                                                # STEP 40
file0 = opener0(path1)                                                  # STEP 41
result = os0.path.abspath(path1)                                        # STEP 42
bytes0 = 0                                                              # STEP 43
stat4 = os0.lstat(path0)                                                # STEP 44
path1 += "/" + component2                                               # STEP 45
stat3 = os0.lstat(path0)                                                # STEP 46
stat0 = os0.stat(path4)                                                 # STEP 47
result = os0.path.isdir(path4)                                          # STEP 48
os0.rmdir(path1)                                                        # STEP 49
os0.write(fd0,str0)                                                     # STEP 50
stat0 = os0.fstat(fd0)                                                  # STEP 51
os0.rename(path1,path2)                                                 # STEP 52
result = os0.path.abspath(path4)                                        # STEP 53
result = sorted(os0.listdir(path4))                                     # STEP 54
os0.close(fd0)                                                          # STEP 55
result = os0.path.dirname(path0)                                        # STEP 56
result = os0.path.isabs(path0)                                          # STEP 57
os0.rmdir(path1)                                                        # STEP 58
os0.rmdir(path1)                                                        # STEP 59
stat1 = os0.fstat(fd0)                                                  # STEP 60
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 61
bytes4 = 0                                                              # STEP 62
result = os0.path.abspath(path2)                                        # STEP 63
os0.rename(path4,path1)                                                 # STEP 64
stat1 = os0.stat(path1)                                                 # STEP 65
os0.symlink(path1,path4)                                                # STEP 66
result = os0.path.abspath(path2)                                        # STEP 67
file0 = opener0(path1,'a')                                              # STEP 68
os0.rmdir(path1)                                                        # STEP 69
stat1 = os0.lstat(path1)                                                # STEP 70
os0.mkdir(path0)                                                        # STEP 71
os0.mkdir(path4)                                                        # STEP 72
file0.truncate()                                                        # STEP 73
result = os0.path.abspath(path4)                                        # STEP 74
result = os0.path.dirname(path1)                                        # STEP 75
file0.flush()                                                           # STEP 76
file0.flush()                                                           # STEP 77
os0.symlink(path1,path4)                                                # STEP 78
os0.write(fd0,str2)                                                     # STEP 79
path0 = "/Volumes/ramdisk/test"                                         # STEP 80
result = file0.read()                                                   # STEP 81
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x109ad4d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1182 BRANCHES COVERED
908 STATEMENTS COVERED
