Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5843.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #465 STEP #80 (0:00:30.000008) Sat Jul 22 08:05:46 2017 [ 892 stmts 1161 branches ] 46480 TOTAL ACTIONS (1549.332927/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104859cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 80 steps

SAVING TEST AS failure.5843.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str0 = ""                                                                # STEP 0
component4 = "g"                                                         # STEP 1
str0 += 'm'                                                              # STEP 2
component1 = "g"                                                         # STEP 3
str0 += 'z'                                                              # STEP 4
component2 = "phi"                                                       # STEP 5
component3 = "b"                                                         # STEP 6
bytes2 = 0                                                               # STEP 7
str0 = ""                                                                # STEP 8
os0 = newFakeOS()                                                        # STEP 9
component0 = "omega"                                                    # STEP 10
str0 += 'x'                                                             # STEP 11
str0 += 'r'                                                             # STEP 12
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
path0 += "/" + component0                                               # STEP 14
str0 += 'o'                                                             # STEP 15
opener0 = newFakeOpener(os0)                                            # STEP 16
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 17
str0 = ""                                                               # STEP 18
path1 = "/Volumes/ramdisk/test"                                         # STEP 19
path1 += "/" + component4                                               # STEP 20
str0 += 'e'                                                             # STEP 21
os0.close(fd0)                                                          # STEP 22
component0 = "b"                                                        # STEP 23
str0 += 't'                                                             # STEP 24
os0.remove(path0)                                                       # STEP 25
result = os0.readlink(path0)                                            # STEP 26
result = os0.path.lexists(path0)                                        # STEP 27
stat4 = os0.lstat(path1)                                                # STEP 28
str0 += 'b'                                                             # STEP 29
os0.rename(path0,path1)                                                 # STEP 30
os0.link(path0,path0)                                                   # STEP 31
path0 += "/" + component1                                               # STEP 32
path0 += "/" + component4                                               # STEP 33
component4 = "e"                                                        # STEP 34
file0 = opener0(path1,'a')                                              # STEP 35
str0 += 'o'                                                             # STEP 36
stat4 = os0.stat(path0)                                                 # STEP 37
path0 = "/Volumes/ramdisk/test"                                         # STEP 38
stat2 = os0.lstat(path1)                                                # STEP 39
result = stat2.st_nlink                                                 # STEP 40
result = file0.readline(bytes2)                                         # STEP 41
str0 += " "                                                             # STEP 42
bytes4 = 0                                                              # STEP 43
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 44
str0 += 'u'                                                             # STEP 45
str0 = ""                                                               # STEP 46
result = os0.read(fd0,bytes4)                                           # STEP 47
str0 += 'a'                                                             # STEP 48
component1 = "epsilon"                                                  # STEP 49
path4 = "/Volumes/ramdisk/test"                                         # STEP 50
result = os0.path.isabs(path1)                                          # STEP 51
file0.next()                                                            # STEP 52
file0.write(str0)                                                       # STEP 53
file0.flush()                                                           # STEP 54
result = os0.path.lexists(path1)                                        # STEP 55
result = os0.path.lexists(path1)                                        # STEP 56
file0.truncate()                                                        # STEP 57
result = os0.path.dirname(path0)                                        # STEP 58
stat4 = os0.fstat(fd0)                                                  # STEP 59
path3 = "/Volumes/ramdisk/test"                                         # STEP 60
os0.makedirs(path0)                                                     # STEP 61
result = os0.path.exists(path1)                                         # STEP 62
result = os0.path.islink(path1)                                         # STEP 63
os0.mkdir(path4)                                                        # STEP 64
result = os0.path.isfile(path4)                                         # STEP 65
stat0 = os0.stat(path1)                                                 # STEP 66
result = os0.read(fd0,bytes2)                                           # STEP 67
path3 += "/" + component4                                               # STEP 68
result = os0.path.islink(path0)                                         # STEP 69
result = os0.path.exists(path1)                                         # STEP 70
os0.rename(path3,path0)                                                 # STEP 71
path4 += "/" + component4                                               # STEP 72
stat3 = os0.fstat(fd0)                                                  # STEP 73
os0.mkdir(path1)                                                        # STEP 74
result = os0.path.islink(path1)                                         # STEP 75
os0.symlink(path0,path0)                                                # STEP 76
component4 = "alpha"                                                    # STEP 77
str2 = ""                                                               # STEP 78
result = file0.readline()                                               # STEP 79
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1053bcef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 99
STOPPING TESTING DUE TO TIMEOUT
42.6607209216 PERCENT COVERED
60.3340899944 TOTAL RUNTIME
870 EXECUTED
86979 TOTAL TEST OPERATIONS
52.6655917168 TIME SPENT EXECUTING TEST OPERATIONS
4.06881141663 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0535817146301 TIME SPENT CHECKING PROPERTIES
52.7191734314 TOTAL TIME SPENT RUNNING SUT
2.51010346413 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
str0 = ""                                                                # STEP 0
component4 = "g"                                                         # STEP 1
str0 += 'm'                                                              # STEP 2
component1 = "g"                                                         # STEP 3
str0 += 'z'                                                              # STEP 4
component2 = "phi"                                                       # STEP 5
component3 = "b"                                                         # STEP 6
bytes2 = 0                                                               # STEP 7
str0 = ""                                                                # STEP 8
os0 = newFakeOS()                                                        # STEP 9
component0 = "omega"                                                    # STEP 10
str0 += 'x'                                                             # STEP 11
str0 += 'r'                                                             # STEP 12
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
path0 += "/" + component0                                               # STEP 14
str0 += 'o'                                                             # STEP 15
opener0 = newFakeOpener(os0)                                            # STEP 16
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 17
str0 = ""                                                               # STEP 18
path1 = "/Volumes/ramdisk/test"                                         # STEP 19
path1 += "/" + component4                                               # STEP 20
str0 += 'e'                                                             # STEP 21
os0.close(fd0)                                                          # STEP 22
component0 = "b"                                                        # STEP 23
str0 += 't'                                                             # STEP 24
os0.remove(path0)                                                       # STEP 25
result = os0.readlink(path0)                                            # STEP 26
result = os0.path.lexists(path0)                                        # STEP 27
stat4 = os0.lstat(path1)                                                # STEP 28
str0 += 'b'                                                             # STEP 29
os0.rename(path0,path1)                                                 # STEP 30
os0.link(path0,path0)                                                   # STEP 31
path0 += "/" + component1                                               # STEP 32
path0 += "/" + component4                                               # STEP 33
component4 = "e"                                                        # STEP 34
file0 = opener0(path1,'a')                                              # STEP 35
str0 += 'o'                                                             # STEP 36
stat4 = os0.stat(path0)                                                 # STEP 37
path0 = "/Volumes/ramdisk/test"                                         # STEP 38
stat2 = os0.lstat(path1)                                                # STEP 39
result = stat2.st_nlink                                                 # STEP 40
result = file0.readline(bytes2)                                         # STEP 41
str0 += " "                                                             # STEP 42
bytes4 = 0                                                              # STEP 43
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 44
str0 += 'u'                                                             # STEP 45
str0 = ""                                                               # STEP 46
result = os0.read(fd0,bytes4)                                           # STEP 47
str0 += 'a'                                                             # STEP 48
component1 = "epsilon"                                                  # STEP 49
path4 = "/Volumes/ramdisk/test"                                         # STEP 50
result = os0.path.isabs(path1)                                          # STEP 51
file0.next()                                                            # STEP 52
file0.write(str0)                                                       # STEP 53
file0.flush()                                                           # STEP 54
result = os0.path.lexists(path1)                                        # STEP 55
result = os0.path.lexists(path1)                                        # STEP 56
file0.truncate()                                                        # STEP 57
result = os0.path.dirname(path0)                                        # STEP 58
stat4 = os0.fstat(fd0)                                                  # STEP 59
path3 = "/Volumes/ramdisk/test"                                         # STEP 60
os0.makedirs(path0)                                                     # STEP 61
result = os0.path.exists(path1)                                         # STEP 62
result = os0.path.islink(path1)                                         # STEP 63
os0.mkdir(path4)                                                        # STEP 64
result = os0.path.isfile(path4)                                         # STEP 65
stat0 = os0.stat(path1)                                                 # STEP 66
result = os0.read(fd0,bytes2)                                           # STEP 67
path3 += "/" + component4                                               # STEP 68
result = os0.path.islink(path0)                                         # STEP 69
result = os0.path.exists(path1)                                         # STEP 70
os0.rename(path3,path0)                                                 # STEP 71
path4 += "/" + component4                                               # STEP 72
stat3 = os0.fstat(fd0)                                                  # STEP 73
os0.mkdir(path1)                                                        # STEP 74
result = os0.path.islink(path1)                                         # STEP 75
os0.symlink(path0,path0)                                                # STEP 76
component4 = "alpha"                                                    # STEP 77
str2 = ""                                                               # STEP 78
result = file0.readline()                                               # STEP 79
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1053bcef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1180 BRANCHES COVERED
905 STATEMENTS COVERED
