Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5023.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10a4effc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28733, in act570
    assert (raised == None) == (refRaised == None)
Original test has 43 steps

SAVING TEST AS failure.5023.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
component0 = "d"                                                         # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
component3 = "beta"                                                      # STEP 3
bytes0 = 0                                                               # STEP 4
path0 += "/" + component3                                                # STEP 5
os0 = newFakeOS()                                                        # STEP 6
os0.rename(path0,path3)                                                  # STEP 7
stat4 = os0.stat(path0)                                                  # STEP 8
bytes1 = 0                                                               # STEP 9
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 10
os0.close(fd0)                                                          # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
bytes0 += 1                                                             # STEP 13
result = os0.path.abspath(path3)                                        # STEP 14
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 15
stat3 = os0.lstat(path0)                                                # STEP 16
result = os0.path.exists(path3)                                         # STEP 17
result = os0.path.exists(path1)                                         # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
result = os0.path.isdir(path0)                                          # STEP 20
result = os0.path.islink(path1)                                         # STEP 21
os0.link(path3,path0)                                                   # STEP 22
result = os0.path.abspath(path0)                                        # STEP 23
os0.makedirs(path0)                                                     # STEP 24
file0 = opener0(path0)                                                  # STEP 25
result = os0.path.islink(path0)                                         # STEP 26
os0.rmdir(path0)                                                        # STEP 27
file0.next()                                                            # STEP 28
result = file0.read(bytes1)                                             # STEP 29
stat0 = os0.lstat(path0)                                                # STEP 30
os0.symlink(path3,path0)                                                # STEP 31
result = os0.path.islink(path3)                                         # STEP 32
os0.rename(path0,path1)                                                 # STEP 33
os0.path.getsize(path0)                                                 # STEP 34
result = os0.path.dirname(path0)                                        # STEP 35
result = os0.path.islink(path0)                                         # STEP 36
component4 = "f"                                                        # STEP 37
file0.next()                                                            # STEP 38
stat1 = os0.fstat(fd0)                                                  # STEP 39
os0.close(fd0)                                                          # STEP 40
os0.close(fd0)                                                          # STEP 41
result = file0.readline(bytes0)                                         # STEP 42
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x106472d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28733, in act570
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x1066f5c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 61 steps

SAVING TEST AS failure.5023.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "e"                                                         # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
bytes4 = 0                                                               # STEP 3
bytes4 += 1                                                              # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
component3 = "d"                                                         # STEP 6
component4 = "delta"                                                     # STEP 7
path1 += "/" + component4                                                # STEP 8
path4 += "/" + component1                                                # STEP 9
os0 = newFakeOS()                                                       # STEP 10
result = os0.path.isabs(path1)                                          # STEP 11
os0.mkdir(path4)                                                        # STEP 12
result = os0.path.isdir(path2)                                          # STEP 13
os0.remove(path1)                                                       # STEP 14
os0.makedirs(path2)                                                     # STEP 15
result = sorted(os0.listdir(path1))                                     # STEP 16
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 17
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 18
os0.close(fd0)                                                          # STEP 19
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 20
stat3 = os0.fstat(fd0)                                                  # STEP 21
result = stat3.st_nlink                                                 # STEP 22
os0.symlink(path2,path1)                                                # STEP 23
os0.path.getsize(path1)                                                 # STEP 24
stat4 = os0.lstat(path4)                                                # STEP 25
os0.mkdir(path2)                                                        # STEP 26
result = os0.path.isabs(path1)                                          # STEP 27
bytes3 = 0                                                              # STEP 28
os0.rename(path1,path4)                                                 # STEP 29
stat1 = os0.lstat(path4)                                                # STEP 30
result = stat3.st_nlink                                                 # STEP 31
result = os0.path.exists(path2)                                         # STEP 32
opener0 = newFakeOpener(os0)                                            # STEP 33
result = sorted(os0.listdir(path2))                                     # STEP 34
component4 = "g"                                                        # STEP 35
str4 = ""                                                               # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
result = os0.read(fd0,bytes4)                                           # STEP 38
result = os0.path.abspath(path1)                                        # STEP 39
os0.close(fd0)                                                          # STEP 40
os0.removedirs(path1)                                                   # STEP 41
component2 = "h"                                                        # STEP 42
os0.close(fd0)                                                          # STEP 43
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 44
result = stat3.st_nlink                                                 # STEP 45
os0.makedirs(path4)                                                     # STEP 46
result = os0.path.isfile(path1)                                         # STEP 47
file0 = opener0(path4,'a')                                              # STEP 48
os0.close(fd0)                                                          # STEP 49
file0 = opener0(path4)                                                  # STEP 50
stat3 = os0.fstat(fd0)                                                  # STEP 51
file0 = opener0(path2,'r')                                              # STEP 52
file0 = opener0(path1,'r')                                              # STEP 53
result = os0.path.lexists(path4)                                        # STEP 54
result = sorted(os0.listdir(path2))                                     # STEP 55
bytes4 += 1                                                             # STEP 56
result = sorted(os0.listdir(path1))                                     # STEP 57
result = file0.readline(bytes3)                                         # STEP 58
os0.write(fd0,str4)                                                     # STEP 59
file0.truncate()                                                        # STEP 60
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103a5acb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (iu) == () ',), <traceback object at 0x108047440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 82 steps

SAVING TEST AS failure.5023.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes2 = 0                                                               # STEP 2
str0 = ""                                                                # STEP 3
str3 = ""                                                                # STEP 4
bytes2 += 1                                                              # STEP 5
bytes2 += 1                                                              # STEP 6
str3 += " "                                                              # STEP 7
component2 = "phi"                                                       # STEP 8
bytes4 = 0                                                               # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.islink(path4)                                         # STEP 11
str3 += 'w'                                                             # STEP 12
component0 = "e"                                                        # STEP 13
os0.mkdir(path4)                                                        # STEP 14
path4 += "/" + component2                                               # STEP 15
str0 += 'i'                                                             # STEP 16
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 17
stat3 = os0.fstat(fd0)                                                  # STEP 18
result = sorted(os0.listdir(path4))                                     # STEP 19
stat2 = os0.lstat(path4)                                                # STEP 20
bytes1 = 0                                                              # STEP 21
os0.close(fd0)                                                          # STEP 22
result = os0.path.isabs(path4)                                          # STEP 23
result = os0.path.abspath(path4)                                        # STEP 24
stat4 = os0.stat(path4)                                                 # STEP 25
result = os0.path.dirname(path4)                                        # STEP 26
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
stat0 = os0.stat(path4)                                                 # STEP 28
result = os0.path.lexists(path4)                                        # STEP 29
os0.mkdir(path4)                                                        # STEP 30
path3 = "/Volumes/ramdisk/test"                                         # STEP 31
str3 += 'b'                                                             # STEP 32
stat1 = os0.stat(path4)                                                 # STEP 33
result = os0.read(fd0,bytes4)                                           # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
result = os0.path.lexists(path4)                                        # STEP 36
result = os0.path.isdir(path3)                                          # STEP 37
result = os0.read(fd0,bytes1)                                           # STEP 38
result = os0.read(fd0,bytes2)                                           # STEP 39
os0.rmdir(path4)                                                        # STEP 40
result = os0.path.exists(path3)                                         # STEP 41
component1 = "h"                                                        # STEP 42
file0 = opener0(path4)                                                  # STEP 43
result = os0.path.islink(path3)                                         # STEP 44
result = os0.path.exists(path3)                                         # STEP 45
os0.mkdir(path3)                                                        # STEP 46
os0.rmdir(path4)                                                        # STEP 47
os0.rename(path4,path3)                                                 # STEP 48
str3 += " "                                                             # STEP 49
result = stat2.st_size                                                  # STEP 50
result = os0.path.lexists(path4)                                        # STEP 51
result = file0.readlines()                                              # STEP 52
result = os0.path.dirname(path3)                                        # STEP 53
file0.flush()                                                           # STEP 54
stat2 = os0.stat(path4)                                                 # STEP 55
str3 += " "                                                             # STEP 56
file0.flush()                                                           # STEP 57
str0 += 'u'                                                             # STEP 58
result = os0.path.isdir(path3)                                          # STEP 59
os0.link(path3,path4)                                                   # STEP 60
result = file0.read()                                                   # STEP 61
result = stat1.st_nlink                                                 # STEP 62
str3 += " "                                                             # STEP 63
bytes1 += 1                                                             # STEP 64
bytes4 += 1                                                             # STEP 65
os0.path.getsize(path4)                                                 # STEP 66
os0.symlink(path3,path3)                                                # STEP 67
str3 += " "                                                             # STEP 68
str4 = ""                                                               # STEP 69
os0.link(path3,path4)                                                   # STEP 70
result = file0.read(bytes1)                                             # STEP 71
result = os0.path.isabs(path4)                                          # STEP 72
bytes4 += 1                                                             # STEP 73
bytes2 = 0                                                              # STEP 74
bytes4 += 1                                                             # STEP 75
os0.makedirs(path3)                                                     # STEP 76
os0.rename(path4,path3)                                                 # STEP 77
os0.rename(path4,path3)                                                 # STEP 78
stat1 = os0.lstat(path4)                                                # STEP 79
os0.write(fd0,str0)                                                     # STEP 80
result = file0.readline()                                               # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (iu) == () ',), <traceback object at 0x10807dd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['  ']) == ([]) ",), <traceback object at 0x107c637a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 71 steps

SAVING TEST AS failure.5023.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
component0 = "phi"                                                       # STEP 2
component4 = "e"                                                         # STEP 3
bytes2 += 1                                                              # STEP 4
path4 += "/" + component4                                                # STEP 5
bytes2 += 1                                                              # STEP 6
bytes2 += 1                                                              # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
str3 = ""                                                                # STEP 9
os0 = newFakeOS()                                                       # STEP 10
str3 += " "                                                             # STEP 11
result = os0.path.abspath(path4)                                        # STEP 12
bytes4 = 0                                                              # STEP 13
result = sorted(os0.listdir(path4))                                     # STEP 14
result = sorted(os0.listdir(path1))                                     # STEP 15
result = os0.path.isfile(path1)                                         # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
result = os0.readlink(path1)                                            # STEP 18
os0.remove(path4)                                                       # STEP 19
result = os0.path.isfile(path4)                                         # STEP 20
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 21
str3 += " "                                                             # STEP 22
bytes2 += 1                                                             # STEP 23
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
stat4 = os0.lstat(path4)                                                # STEP 25
file0 = opener0(path4)                                                  # STEP 26
os0.rename(path4,path1)                                                 # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
os0.path.getsize(path4)                                                 # STEP 29
result = os0.path.isabs(path1)                                          # STEP 30
os0.write(fd0,str3)                                                     # STEP 31
os0.link(path4,path1)                                                   # STEP 32
os0.rmdir(path4)                                                        # STEP 33
os0.mkdir(path4)                                                        # STEP 34
result = stat4.st_size                                                  # STEP 35
os0.makedirs(path4)                                                     # STEP 36
stat0 = os0.stat(path4)                                                 # STEP 37
path4 += "/" + component0                                               # STEP 38
result = os0.path.dirname(path4)                                        # STEP 39
os0.link(path1,path1)                                                   # STEP 40
bytes2 = 0                                                              # STEP 41
path1 = "/Volumes/ramdisk/test"                                         # STEP 42
stat2 = os0.lstat(path4)                                                # STEP 43
os0.rmdir(path4)                                                        # STEP 44
path3 = "/Volumes/ramdisk/test"                                         # STEP 45
file0.write(str3)                                                       # STEP 46
bytes1 = 0                                                              # STEP 47
result = os0.path.exists(path4)                                         # STEP 48
path1 += "/" + component4                                               # STEP 49
os0.symlink(path4,path4)                                                # STEP 50
stat1 = os0.fstat(fd0)                                                  # STEP 51
stat3 = os0.lstat(path1)                                                # STEP 52
result = file0.readlines()                                              # STEP 53
os0.write(fd0,str3)                                                     # STEP 54
result = os0.path.exists(path1)                                         # STEP 55
bytes3 = 0                                                              # STEP 56
str1 = ""                                                               # STEP 57
result = os0.path.exists(path3)                                         # STEP 58
str1 += " "                                                             # STEP 59
os0.mkdir(path1)                                                        # STEP 60
os0.close(fd0)                                                          # STEP 61
stat4 = os0.stat(path4)                                                 # STEP 62
result = os0.readlink(path3)                                            # STEP 63
result = os0.path.lexists(path4)                                        # STEP 64
os0.path.getsize(path1)                                                 # STEP 65
result = sorted(os0.listdir(path1))                                     # STEP 66
result = os0.path.dirname(path4)                                        # STEP 67
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 68
result = os0.path.isdir(path1)                                          # STEP 69
result = file0.readlines()                                              # STEP 70
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['  ']) == ([]) ",), <traceback object at 0x108062a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (z) == () ',), <traceback object at 0x1079ccf38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 100 steps

SAVING TEST AS failure.5023.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
str3 = ""                                                                # STEP 1
component2 = "epsilon"                                                   # STEP 2
component4 = "g"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
str3 += 'p'                                                              # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.symlink(path1,path1)                                                 # STEP 7
result = sorted(os0.listdir(path1))                                      # STEP 8
os0.remove(path1)                                                        # STEP 9
os0.remove(path1)                                                       # STEP 10
os0.mkdir(path1)                                                        # STEP 11
result = os0.path.exists(path1)                                         # STEP 12
result = os0.readlink(path1)                                            # STEP 13
result = sorted(os0.listdir(path1))                                     # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
result = os0.path.exists(path1)                                         # STEP 16
str3 += " "                                                             # STEP 17
result = os0.path.isabs(path1)                                          # STEP 18
os0.makedirs(path1)                                                     # STEP 19
result = os0.path.abspath(path1)                                        # STEP 20
str3 += " "                                                             # STEP 21
str3 += " "                                                             # STEP 22
os0.mkdir(path1)                                                        # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
result = sorted(os0.listdir(path1))                                     # STEP 25
os0.remove(path1)                                                       # STEP 26
result = os0.path.dirname(path1)                                        # STEP 27
result = os0.path.isfile(path1)                                         # STEP 28
os0.link(path1,path1)                                                   # STEP 29
result = os0.path.exists(path1)                                         # STEP 30
result = os0.path.isfile(path1)                                         # STEP 31
result = os0.readlink(path1)                                            # STEP 32
bytes4 = 0                                                              # STEP 33
result = os0.path.isabs(path1)                                          # STEP 34
os0.mkdir(path1)                                                        # STEP 35
os0.mkdir(path1)                                                        # STEP 36
path1 += "/" + component2                                               # STEP 37
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 38
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 39
os0.rmdir(path1)                                                        # STEP 40
os0.rmdir(path1)                                                        # STEP 41
os0.makedirs(path1)                                                     # STEP 42
result = os0.path.isfile(path1)                                         # STEP 43
os0.path.getsize(path1)                                                 # STEP 44
os0.makedirs(path1)                                                     # STEP 45
bytes3 = 0                                                              # STEP 46
result = os0.path.isabs(path1)                                          # STEP 47
os0.path.getsize(path1)                                                 # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
str0 = ""                                                               # STEP 50
opener0 = newFakeOpener(os0)                                            # STEP 51
file0 = opener0(path1,'r')                                              # STEP 52
result = file0.read()                                                   # STEP 53
result = os0.readlink(path1)                                            # STEP 54
result = os0.path.islink(path1)                                         # STEP 55
result = os0.path.isabs(path1)                                          # STEP 56
str4 = ""                                                               # STEP 57
result = stat2.st_size                                                  # STEP 58
path1 += "/" + component2                                               # STEP 59
result = stat2.st_nlink                                                 # STEP 60
result = stat2.st_size                                                  # STEP 61
file0.next()                                                            # STEP 62
os0.remove(path1)                                                       # STEP 63
os0.mkdir(path1)                                                        # STEP 64
result = os0.path.isdir(path1)                                          # STEP 65
file0.seek(bytes4)                                                      # STEP 66
result = os0.path.islink(path1)                                         # STEP 67
result = os0.path.abspath(path1)                                        # STEP 68
result = file0.readline()                                               # STEP 69
result = file0.readlines()                                              # STEP 70
os0.symlink(path1,path1)                                                # STEP 71
os0.symlink(path1,path1)                                                # STEP 72
str4 += 'z'                                                             # STEP 73
file0.next()                                                            # STEP 74
result = os0.path.exists(path1)                                         # STEP 75
result = os0.readlink(path1)                                            # STEP 76
path1 += "/" + component2                                               # STEP 77
result = file0.readline(bytes3)                                         # STEP 78
os0.link(path1,path1)                                                   # STEP 79
result = os0.path.isfile(path1)                                         # STEP 80
os0.symlink(path1,path1)                                                # STEP 81
file0.next()                                                            # STEP 82
result = os0.path.lexists(path1)                                        # STEP 83
result = os0.path.islink(path1)                                         # STEP 84
os0.write(fd0,str4)                                                     # STEP 85
file0.flush()                                                           # STEP 86
bytes4 = 0                                                              # STEP 87
os0.path.getsize(path1)                                                 # STEP 88
bytes3 += 1                                                             # STEP 89
result = sorted(os0.listdir(path1))                                     # STEP 90
result = os0.path.isabs(path1)                                          # STEP 91
str3 += " "                                                             # STEP 92
result = stat2.st_nlink                                                 # STEP 93
result = os0.path.isdir(path1)                                          # STEP 94
bytes0 = 0                                                              # STEP 95
file0.truncate()                                                        # STEP 96
stat4 = os0.fstat(fd0)                                                  # STEP 97
os0.link(path1,path1)                                                   # STEP 98
result = file0.readline()                                               # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (z) == () ',), <traceback object at 0x1079f4128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
TEST #171 STEP #17 (0:00:30.001204) Sat Jul 22 03:30:02 2017 [ 902 stmts 1173 branches ] 16874 TOTAL ACTIONS (562.444093651/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1065348c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 67 steps

SAVING TEST AS failure.5023.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
component4 = "beta"                                                      # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
os0 = newFakeOS()                                                        # STEP 3
result = os0.path.abspath(path3)                                         # STEP 4
result = os0.path.isdir(path3)                                           # STEP 5
os0.symlink(path3,path3)                                                 # STEP 6
path3 += "/" + component4                                                # STEP 7
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)             # STEP 8
os0.link(path3,path3)                                                    # STEP 9
os0.makedirs(path3)                                                     # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.readlink(path3)                                            # STEP 12
os0.close(fd0)                                                          # STEP 13
os0.symlink(path3,path3)                                                # STEP 14
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 15
file0 = opener0(path3,'a')                                              # STEP 16
result = os0.path.isabs(path3)                                          # STEP 17
bytes2 += 1                                                             # STEP 18
result = file0.readline()                                               # STEP 19
result = os0.path.abspath(path3)                                        # STEP 20
os0.rmdir(path3)                                                        # STEP 21
str1 = ""                                                               # STEP 22
bytes1 = 0                                                              # STEP 23
result = os0.path.isabs(path3)                                          # STEP 24
path4 = "/Volumes/ramdisk/test"                                         # STEP 25
os0.mkdir(path3)                                                        # STEP 26
result = os0.path.dirname(path4)                                        # STEP 27
file0.flush()                                                           # STEP 28
result = os0.path.dirname(path3)                                        # STEP 29
os0.remove(path4)                                                       # STEP 30
file0.seek(bytes1)                                                      # STEP 31
os0.mkdir(path3)                                                        # STEP 32
result = os0.path.isabs(path4)                                          # STEP 33
result = sorted(os0.listdir(path3))                                     # STEP 34
os0.link(path3,path4)                                                   # STEP 35
bytes1 = 0                                                              # STEP 36
os0.rename(path3,path4)                                                 # STEP 37
component1 = "a"                                                        # STEP 38
result = file0.readline(bytes1)                                         # STEP 39
result = os0.path.isdir(path4)                                          # STEP 40
path3 += "/" + component1                                               # STEP 41
result = file0.read()                                                   # STEP 42
result = os0.path.exists(path4)                                         # STEP 43
file0.next()                                                            # STEP 44
component3 = "h"                                                        # STEP 45
os0.rename(path3,path4)                                                 # STEP 46
os0.path.getsize(path3)                                                 # STEP 47
bytes0 = 0                                                              # STEP 48
result = file0.read(bytes2)                                             # STEP 49
component4 = "a"                                                        # STEP 50
os0.remove(path4)                                                       # STEP 51
path0 = "/Volumes/ramdisk/test"                                         # STEP 52
file0.next()                                                            # STEP 53
os0.rmdir(path3)                                                        # STEP 54
stat1 = os0.lstat(path3)                                                # STEP 55
file0.next()                                                            # STEP 56
os0.rmdir(path3)                                                        # STEP 57
os0.write(fd0,str1)                                                     # STEP 58
path3 += "/" + component3                                               # STEP 59
result = os0.path.islink(path4)                                         # STEP 60
result = os0.path.isabs(path3)                                          # STEP 61
str4 = ""                                                               # STEP 62
result = os0.path.dirname(path4)                                        # STEP 63
result = os0.path.lexists(path0)                                        # STEP 64
os0.makedirs(path3)                                                     # STEP 65
result = file0.read()                                                   # STEP 66
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10826a488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104545128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28821, in act572
    result = self.p_file[0].readline(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 65 steps

SAVING TEST AS failure.5023.test.6
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str1 = ""                                                                # STEP 0
str1 += 'o'                                                              # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
str0 = ""                                                                # STEP 3
bytes1 = 0                                                               # STEP 4
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
component0 = "d"                                                         # STEP 6
bytes2 = 0                                                               # STEP 7
str1 += 't'                                                              # STEP 8
bytes1 += 1                                                              # STEP 9
os0 = newFakeOS()                                                       # STEP 10
path2 += "/" + component0                                               # STEP 11
os0.rename(path2,path0)                                                 # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
os0.remove(path0)                                                       # STEP 14
os0.link(path2,path2)                                                   # STEP 15
os0.link(path0,path0)                                                   # STEP 16
os0.path.getsize(path2)                                                 # STEP 17
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.symlink(path0,path0)                                                # STEP 20
result = os0.path.dirname(path0)                                        # STEP 21
os0.path.getsize(path2)                                                 # STEP 22
os0.symlink(path2,path0)                                                # STEP 23
str0 += " "                                                             # STEP 24
stat4 = os0.stat(path2)                                                 # STEP 25
result = stat4.st_size                                                  # STEP 26
result = os0.path.dirname(path0)                                        # STEP 27
stat4 = os0.fstat(fd0)                                                  # STEP 28
component0 = "omega"                                                    # STEP 29
result = os0.path.isdir(path2)                                          # STEP 30
os0.link(path2,path0)                                                   # STEP 31
component3 = "e"                                                        # STEP 32
os0.link(path2,path2)                                                   # STEP 33
file0 = opener0(path0)                                                  # STEP 34
os0.rmdir(path2)                                                        # STEP 35
os0.write(fd0,str0)                                                     # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
result = stat4.st_size                                                  # STEP 38
file0 = opener0(path2)                                                  # STEP 39
result = stat4.st_size                                                  # STEP 40
result = os0.path.isfile(path0)                                         # STEP 41
result = os0.path.dirname(path0)                                        # STEP 42
file0 = opener0(path2,'a')                                              # STEP 43
file0 = opener0(path0)                                                  # STEP 44
os0.symlink(path0,path2)                                                # STEP 45
path2 += "/" + component0                                               # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
str1 += 'k'                                                             # STEP 49
path4 = "/Volumes/ramdisk/test"                                         # STEP 50
path0 += "/" + component0                                               # STEP 51
file0 = opener0(path3,'a')                                              # STEP 52
str1 += 'k'                                                             # STEP 53
os0.rmdir(path2)                                                        # STEP 54
os0.close(fd0)                                                          # STEP 55
result = stat4.st_size                                                  # STEP 56
path2 = "/Volumes/ramdisk/test"                                         # STEP 57
os0.makedirs(path3)                                                     # STEP 58
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 59
os0.mkdir(path2)                                                        # STEP 60
result = os0.path.islink(path0)                                         # STEP 61
file0 = opener0(path0,'a')                                              # STEP 62
result = os0.read(fd0,bytes1)                                           # STEP 63
result = file0.readline(bytes2)                                         # STEP 64
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10453d758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28821, in act572
    result = self.p_file[0].readline(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 7 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104310200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 74 steps

SAVING TEST AS failure.5023.test.7
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str1 = ""                                                                # STEP 1
str1 += 'f'                                                              # STEP 2
component1 = "beta"                                                      # STEP 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
os0.link(path0,path0)                                                    # STEP 5
result = os0.path.abspath(path0)                                         # STEP 6
os0.symlink(path0,path0)                                                 # STEP 7
os0.remove(path0)                                                        # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
file0 = opener0(path0,'a')                                              # STEP 10
os0.link(path0,path0)                                                   # STEP 11
file0 = opener0(path0,'r')                                              # STEP 12
file0 = opener0(path0,'r')                                              # STEP 13
file0 = opener0(path0,'r')                                              # STEP 14
path0 += "/" + component1                                               # STEP 15
os0.mkdir(path0)                                                        # STEP 16
file0 = opener0(path0,'w')                                              # STEP 17
file0 = opener0(path0,'r')                                              # STEP 18
component1 = "b"                                                        # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = os0.path.isdir(path0)                                          # STEP 21
path0 += "/" + component1                                               # STEP 22
str1 += " "                                                             # STEP 23
result = sorted(os0.listdir(path0))                                     # STEP 24
str1 += " "                                                             # STEP 25
os0.symlink(path0,path0)                                                # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 27
result = os0.path.isdir(path0)                                          # STEP 28
result = os0.path.isabs(path0)                                          # STEP 29
str1 += " "                                                             # STEP 30
file0 = opener0(path0,'a')                                              # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 33
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 34
str1 += " "                                                             # STEP 35
os0.symlink(path0,path0)                                                # STEP 36
str0 = ""                                                               # STEP 37
stat3 = os0.stat(path0)                                                 # STEP 38
str1 += 's'                                                             # STEP 39
os0.symlink(path0,path0)                                                # STEP 40
result = os0.path.islink(path0)                                         # STEP 41
result = os0.path.isdir(path0)                                          # STEP 42
file0 = opener0(path0,'a')                                              # STEP 43
result = os0.path.isfile(path0)                                         # STEP 44
result = os0.path.abspath(path0)                                        # STEP 45
os0.remove(path0)                                                       # STEP 46
file0 = opener0(path0,'r')                                              # STEP 47
bytes0 = 0                                                              # STEP 48
result = os0.path.lexists(path0)                                        # STEP 49
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 50
stat2 = os0.stat(path0)                                                 # STEP 51
result = stat2.st_size                                                  # STEP 52
os0.makedirs(path0)                                                     # STEP 53
os0.close(fd0)                                                          # STEP 54
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 55
result = os0.path.isfile(path0)                                         # STEP 56
os0.remove(path0)                                                       # STEP 57
bytes0 += 1                                                             # STEP 58
stat3 = os0.fstat(fd0)                                                  # STEP 59
file0 = opener0(path0)                                                  # STEP 60
result = stat2.st_nlink                                                 # STEP 61
result = os0.read(fd0,bytes0)                                           # STEP 62
result = os0.read(fd0,bytes0)                                           # STEP 63
os0.path.getsize(path0)                                                 # STEP 64
os0.path.getsize(path0)                                                 # STEP 65
component0 = "gamma"                                                    # STEP 66
file0 = opener0(path0,'w')                                              # STEP 67
path3 = "/Volumes/ramdisk/test"                                         # STEP 68
result = os0.read(fd0,bytes0)                                           # STEP 69
file0.flush()                                                           # STEP 70
os0.mkdir(path3)                                                        # STEP 71
result = os0.path.isfile(path0)                                         # STEP 72
result = file0.readline()                                               # STEP 73
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104300830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 8 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10460a830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 76 steps

SAVING TEST AS failure.5023.test.8
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
bytes2 = 0                                                               # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str4 = ""                                                                # STEP 3
bytes3 = 0                                                               # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
os0.link(path4,path4)                                                    # STEP 6
file0 = opener0(path4,'r')                                               # STEP 7
file0 = opener0(path4,'w')                                               # STEP 8
result = os0.path.exists(path4)                                          # STEP 9
os0.makedirs(path4)                                                     # STEP 10
result = os0.path.exists(path4)                                         # STEP 11
result = os0.path.lexists(path4)                                        # STEP 12
file0 = opener0(path4)                                                  # STEP 13
bytes0 = 0                                                              # STEP 14
os0.symlink(path4,path4)                                                # STEP 15
result = os0.path.isdir(path4)                                          # STEP 16
result = os0.readlink(path4)                                            # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
os0.mkdir(path4)                                                        # STEP 19
os0.makedirs(path4)                                                     # STEP 20
result = os0.path.abspath(path4)                                        # STEP 21
os0.makedirs(path4)                                                     # STEP 22
file0 = opener0(path4,'w')                                              # STEP 23
str4 += " "                                                             # STEP 24
os0.remove(path4)                                                       # STEP 25
result = os0.path.abspath(path4)                                        # STEP 26
str0 = ""                                                               # STEP 27
result = os0.path.dirname(path4)                                        # STEP 28
file0 = opener0(path4,'a')                                              # STEP 29
result = os0.path.isfile(path4)                                         # STEP 30
result = os0.path.isabs(path4)                                          # STEP 31
result = os0.path.abspath(path4)                                        # STEP 32
os0.symlink(path4,path4)                                                # STEP 33
file0 = opener0(path4,'a')                                              # STEP 34
file0 = opener0(path4,'r')                                              # STEP 35
result = os0.path.isabs(path4)                                          # STEP 36
bytes4 = 0                                                              # STEP 37
path3 = "/Volumes/ramdisk/test"                                         # STEP 38
result = os0.path.dirname(path3)                                        # STEP 39
path0 = "/Volumes/ramdisk/test"                                         # STEP 40
os0.makedirs(path4)                                                     # STEP 41
result = os0.path.lexists(path3)                                        # STEP 42
result = os0.path.islink(path0)                                         # STEP 43
os0.symlink(path0,path4)                                                # STEP 44
result = os0.readlink(path4)                                            # STEP 45
os0.makedirs(path4)                                                     # STEP 46
result = os0.path.islink(path0)                                         # STEP 47
result = os0.path.isfile(path3)                                         # STEP 48
str4 += " "                                                             # STEP 49
component3 = "a"                                                        # STEP 50
result = os0.path.exists(path4)                                         # STEP 51
result = os0.path.islink(path0)                                         # STEP 52
os0.mkdir(path4)                                                        # STEP 53
file0 = opener0(path0)                                                  # STEP 54
result = os0.path.abspath(path4)                                        # STEP 55
result = os0.path.abspath(path3)                                        # STEP 56
path3 += "/" + component3                                               # STEP 57
os0.path.getsize(path3)                                                 # STEP 58
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 59
os0.close(fd0)                                                          # STEP 60
path1 = "/Volumes/ramdisk/test"                                         # STEP 61
result = os0.readlink(path3)                                            # STEP 62
str4 += " "                                                             # STEP 63
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 64
result = os0.read(fd0,bytes0)                                           # STEP 65
str2 = ""                                                               # STEP 66
os0.rmdir(path3)                                                        # STEP 67
file0 = opener0(path3,'r')                                              # STEP 68
bytes0 = 0                                                              # STEP 69
os0.write(fd0,str0)                                                     # STEP 70
result = os0.read(fd0,bytes3)                                           # STEP 71
os0.makedirs(path3)                                                     # STEP 72
path0 = "/Volumes/ramdisk/test"                                         # STEP 73
os0.mkdir(path0)                                                        # STEP 74
file0.truncate()                                                        # STEP 75
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10632bb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 9 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (4) ',), <traceback object at 0x107771cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 80 steps

SAVING TEST AS failure.5023.test.9
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
os0 = newFakeOS()                                                        # STEP 2
result = os0.path.abspath(path4)                                         # STEP 3
result = os0.path.isabs(path4)                                           # STEP 4
os0.symlink(path4,path4)                                                 # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
str3 += " "                                                              # STEP 7
os0.link(path4,path4)                                                    # STEP 8
os0.symlink(path4,path4)                                                 # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
os0.remove(path4)                                                       # STEP 11
result = os0.path.lexists(path4)                                        # STEP 12
file0 = opener0(path4,'r')                                              # STEP 13
component3 = "b"                                                        # STEP 14
str3 += 'k'                                                             # STEP 15
os0.makedirs(path4)                                                     # STEP 16
result = os0.path.exists(path4)                                         # STEP 17
os0.link(path4,path4)                                                   # STEP 18
file0 = opener0(path4,'w')                                              # STEP 19
file0 = opener0(path4,'w')                                              # STEP 20
os0.link(path4,path4)                                                   # STEP 21
result = os0.path.isdir(path4)                                          # STEP 22
result = os0.path.exists(path4)                                         # STEP 23
result = os0.path.isdir(path4)                                          # STEP 24
path4 += "/" + component3                                               # STEP 25
file0 = opener0(path4,'w')                                              # STEP 26
os0.symlink(path4,path4)                                                # STEP 27
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 28
os0.link(path4,path4)                                                   # STEP 29
component0 = "gamma"                                                    # STEP 30
os0.link(path4,path4)                                                   # STEP 31
result = os0.path.lexists(path4)                                        # STEP 32
result = os0.path.isfile(path4)                                         # STEP 33
str3 += " "                                                             # STEP 34
result = os0.path.lexists(path4)                                        # STEP 35
str2 = ""                                                               # STEP 36
result = os0.path.islink(path4)                                         # STEP 37
file0.flush()                                                           # STEP 38
os0.write(fd0,str3)                                                     # STEP 39
path4 += "/" + component0                                               # STEP 40
os0.link(path4,path4)                                                   # STEP 41
stat2 = os0.stat(path4)                                                 # STEP 42
str2 += " "                                                             # STEP 43
stat4 = os0.lstat(path4)                                                # STEP 44
file0.flush()                                                           # STEP 45
os0.makedirs(path4)                                                     # STEP 46
result = os0.path.dirname(path4)                                        # STEP 47
result = os0.path.lexists(path4)                                        # STEP 48
result = os0.path.isdir(path4)                                          # STEP 49
os0.remove(path4)                                                       # STEP 50
result = file0.read()                                                   # STEP 51
stat0 = os0.fstat(fd0)                                                  # STEP 52
result = stat0.st_nlink                                                 # STEP 53
result = os0.path.lexists(path4)                                        # STEP 54
os0.rmdir(path4)                                                        # STEP 55
result = file0.readline()                                               # STEP 56
os0.write(fd0,str2)                                                     # STEP 57
os0.path.getsize(path4)                                                 # STEP 58
result = os0.path.isabs(path4)                                          # STEP 59
stat4 = os0.fstat(fd0)                                                  # STEP 60
path4 += "/" + component3                                               # STEP 61
file0.flush()                                                           # STEP 62
file0.flush()                                                           # STEP 63
stat2 = os0.fstat(fd0)                                                  # STEP 64
str2 += 'z'                                                             # STEP 65
stat0 = os0.lstat(path4)                                                # STEP 66
os0.write(fd0,str2)                                                     # STEP 67
result = os0.path.isdir(path4)                                          # STEP 68
stat3 = os0.stat(path4)                                                 # STEP 69
result = sorted(os0.listdir(path4))                                     # STEP 70
os0.makedirs(path4)                                                     # STEP 71
os0.makedirs(path4)                                                     # STEP 72
result = os0.path.lexists(path4)                                        # STEP 73
os0.rmdir(path4)                                                        # STEP 74
file0.next()                                                            # STEP 75
result = os0.readlink(path4)                                            # STEP 76
result = os0.readlink(path4)                                            # STEP 77
result = os0.path.lexists(path4)                                        # STEP 78
result = stat2.st_size                                                  # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (4) ',), <traceback object at 0x10746fd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 10 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 20
STOPPING TESTING DUE TO TIMEOUT
43.0694908956 PERCENT COVERED
60.3169598579 TOTAL RUNTIME
339 EXECUTED
33539 TOTAL TEST OPERATIONS
41.7669484615 TIME SPENT EXECUTING TEST OPERATIONS
15.9631335735 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0237181186676 TIME SPENT CHECKING PROPERTIES
41.7906665802 TOTAL TIME SPENT RUNNING SUT
1.01422381401 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
10 FAILED
0 REPEATS OF FAILURES
10 ACTUAL DISTINCT FAILURES

FAILURE 0
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
component0 = "d"                                                         # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
component3 = "beta"                                                      # STEP 3
bytes0 = 0                                                               # STEP 4
path0 += "/" + component3                                                # STEP 5
os0 = newFakeOS()                                                        # STEP 6
os0.rename(path0,path3)                                                  # STEP 7
stat4 = os0.stat(path0)                                                  # STEP 8
bytes1 = 0                                                               # STEP 9
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 10
os0.close(fd0)                                                          # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
bytes0 += 1                                                             # STEP 13
result = os0.path.abspath(path3)                                        # STEP 14
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 15
stat3 = os0.lstat(path0)                                                # STEP 16
result = os0.path.exists(path3)                                         # STEP 17
result = os0.path.exists(path1)                                         # STEP 18
opener0 = newFakeOpener(os0)                                            # STEP 19
result = os0.path.isdir(path0)                                          # STEP 20
result = os0.path.islink(path1)                                         # STEP 21
os0.link(path3,path0)                                                   # STEP 22
result = os0.path.abspath(path0)                                        # STEP 23
os0.makedirs(path0)                                                     # STEP 24
file0 = opener0(path0)                                                  # STEP 25
result = os0.path.islink(path0)                                         # STEP 26
os0.rmdir(path0)                                                        # STEP 27
file0.next()                                                            # STEP 28
result = file0.read(bytes1)                                             # STEP 29
stat0 = os0.lstat(path0)                                                # STEP 30
os0.symlink(path3,path0)                                                # STEP 31
result = os0.path.islink(path3)                                         # STEP 32
os0.rename(path0,path1)                                                 # STEP 33
os0.path.getsize(path0)                                                 # STEP 34
result = os0.path.dirname(path0)                                        # STEP 35
result = os0.path.islink(path0)                                         # STEP 36
component4 = "f"                                                        # STEP 37
file0.next()                                                            # STEP 38
stat1 = os0.fstat(fd0)                                                  # STEP 39
os0.close(fd0)                                                          # STEP 40
os0.close(fd0)                                                          # STEP 41
result = file0.readline(bytes0)                                         # STEP 42
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x106472d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28733, in act570
    assert (raised == None) == (refRaised == None)
FAILURE 1
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
component1 = "e"                                                         # STEP 1
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
bytes4 = 0                                                               # STEP 3
bytes4 += 1                                                              # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
component3 = "d"                                                         # STEP 6
component4 = "delta"                                                     # STEP 7
path1 += "/" + component4                                                # STEP 8
path4 += "/" + component1                                                # STEP 9
os0 = newFakeOS()                                                       # STEP 10
result = os0.path.isabs(path1)                                          # STEP 11
os0.mkdir(path4)                                                        # STEP 12
result = os0.path.isdir(path2)                                          # STEP 13
os0.remove(path1)                                                       # STEP 14
os0.makedirs(path2)                                                     # STEP 15
result = sorted(os0.listdir(path1))                                     # STEP 16
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 17
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 18
os0.close(fd0)                                                          # STEP 19
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 20
stat3 = os0.fstat(fd0)                                                  # STEP 21
result = stat3.st_nlink                                                 # STEP 22
os0.symlink(path2,path1)                                                # STEP 23
os0.path.getsize(path1)                                                 # STEP 24
stat4 = os0.lstat(path4)                                                # STEP 25
os0.mkdir(path2)                                                        # STEP 26
result = os0.path.isabs(path1)                                          # STEP 27
bytes3 = 0                                                              # STEP 28
os0.rename(path1,path4)                                                 # STEP 29
stat1 = os0.lstat(path4)                                                # STEP 30
result = stat3.st_nlink                                                 # STEP 31
result = os0.path.exists(path2)                                         # STEP 32
opener0 = newFakeOpener(os0)                                            # STEP 33
result = sorted(os0.listdir(path2))                                     # STEP 34
component4 = "g"                                                        # STEP 35
str4 = ""                                                               # STEP 36
result = sorted(os0.listdir(path2))                                     # STEP 37
result = os0.read(fd0,bytes4)                                           # STEP 38
result = os0.path.abspath(path1)                                        # STEP 39
os0.close(fd0)                                                          # STEP 40
os0.removedirs(path1)                                                   # STEP 41
component2 = "h"                                                        # STEP 42
os0.close(fd0)                                                          # STEP 43
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 44
result = stat3.st_nlink                                                 # STEP 45
os0.makedirs(path4)                                                     # STEP 46
result = os0.path.isfile(path1)                                         # STEP 47
file0 = opener0(path4,'a')                                              # STEP 48
os0.close(fd0)                                                          # STEP 49
file0 = opener0(path4)                                                  # STEP 50
stat3 = os0.fstat(fd0)                                                  # STEP 51
file0 = opener0(path2,'r')                                              # STEP 52
file0 = opener0(path1,'r')                                              # STEP 53
result = os0.path.lexists(path4)                                        # STEP 54
result = sorted(os0.listdir(path2))                                     # STEP 55
bytes4 += 1                                                             # STEP 56
result = sorted(os0.listdir(path1))                                     # STEP 57
result = file0.readline(bytes3)                                         # STEP 58
os0.write(fd0,str4)                                                     # STEP 59
file0.truncate()                                                        # STEP 60
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x103a5acb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
opener0 = newFakeOpener(os0)                                             # STEP 1
bytes2 = 0                                                               # STEP 2
str0 = ""                                                                # STEP 3
str3 = ""                                                                # STEP 4
bytes2 += 1                                                              # STEP 5
bytes2 += 1                                                              # STEP 6
str3 += " "                                                              # STEP 7
component2 = "phi"                                                       # STEP 8
bytes4 = 0                                                               # STEP 9
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
result = os0.path.islink(path4)                                         # STEP 11
str3 += 'w'                                                             # STEP 12
component0 = "e"                                                        # STEP 13
os0.mkdir(path4)                                                        # STEP 14
path4 += "/" + component2                                               # STEP 15
str0 += 'i'                                                             # STEP 16
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 17
stat3 = os0.fstat(fd0)                                                  # STEP 18
result = sorted(os0.listdir(path4))                                     # STEP 19
stat2 = os0.lstat(path4)                                                # STEP 20
bytes1 = 0                                                              # STEP 21
os0.close(fd0)                                                          # STEP 22
result = os0.path.isabs(path4)                                          # STEP 23
result = os0.path.abspath(path4)                                        # STEP 24
stat4 = os0.stat(path4)                                                 # STEP 25
result = os0.path.dirname(path4)                                        # STEP 26
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 27
stat0 = os0.stat(path4)                                                 # STEP 28
result = os0.path.lexists(path4)                                        # STEP 29
os0.mkdir(path4)                                                        # STEP 30
path3 = "/Volumes/ramdisk/test"                                         # STEP 31
str3 += 'b'                                                             # STEP 32
stat1 = os0.stat(path4)                                                 # STEP 33
result = os0.read(fd0,bytes4)                                           # STEP 34
result = sorted(os0.listdir(path4))                                     # STEP 35
result = os0.path.lexists(path4)                                        # STEP 36
result = os0.path.isdir(path3)                                          # STEP 37
result = os0.read(fd0,bytes1)                                           # STEP 38
result = os0.read(fd0,bytes2)                                           # STEP 39
os0.rmdir(path4)                                                        # STEP 40
result = os0.path.exists(path3)                                         # STEP 41
component1 = "h"                                                        # STEP 42
file0 = opener0(path4)                                                  # STEP 43
result = os0.path.islink(path3)                                         # STEP 44
result = os0.path.exists(path3)                                         # STEP 45
os0.mkdir(path3)                                                        # STEP 46
os0.rmdir(path4)                                                        # STEP 47
os0.rename(path4,path3)                                                 # STEP 48
str3 += " "                                                             # STEP 49
result = stat2.st_size                                                  # STEP 50
result = os0.path.lexists(path4)                                        # STEP 51
result = file0.readlines()                                              # STEP 52
result = os0.path.dirname(path3)                                        # STEP 53
file0.flush()                                                           # STEP 54
stat2 = os0.stat(path4)                                                 # STEP 55
str3 += " "                                                             # STEP 56
file0.flush()                                                           # STEP 57
str0 += 'u'                                                             # STEP 58
result = os0.path.isdir(path3)                                          # STEP 59
os0.link(path3,path4)                                                   # STEP 60
result = file0.read()                                                   # STEP 61
result = stat1.st_nlink                                                 # STEP 62
str3 += " "                                                             # STEP 63
bytes1 += 1                                                             # STEP 64
bytes4 += 1                                                             # STEP 65
os0.path.getsize(path4)                                                 # STEP 66
os0.symlink(path3,path3)                                                # STEP 67
str3 += " "                                                             # STEP 68
str4 = ""                                                               # STEP 69
os0.link(path3,path4)                                                   # STEP 70
result = file0.read(bytes1)                                             # STEP 71
result = os0.path.isabs(path4)                                          # STEP 72
bytes4 += 1                                                             # STEP 73
bytes2 = 0                                                              # STEP 74
bytes4 += 1                                                             # STEP 75
os0.makedirs(path3)                                                     # STEP 76
os0.rename(path4,path3)                                                 # STEP 77
os0.rename(path4,path3)                                                 # STEP 78
stat1 = os0.lstat(path4)                                                # STEP 79
os0.write(fd0,str0)                                                     # STEP 80
result = file0.readline()                                               # STEP 81
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (iu) == () ',), <traceback object at 0x10807dd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 3
bytes2 = 0                                                               # STEP 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
component0 = "phi"                                                       # STEP 2
component4 = "e"                                                         # STEP 3
bytes2 += 1                                                              # STEP 4
path4 += "/" + component4                                                # STEP 5
bytes2 += 1                                                              # STEP 6
bytes2 += 1                                                              # STEP 7
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
str3 = ""                                                                # STEP 9
os0 = newFakeOS()                                                       # STEP 10
str3 += " "                                                             # STEP 11
result = os0.path.abspath(path4)                                        # STEP 12
bytes4 = 0                                                              # STEP 13
result = sorted(os0.listdir(path4))                                     # STEP 14
result = sorted(os0.listdir(path1))                                     # STEP 15
result = os0.path.isfile(path1)                                         # STEP 16
opener0 = newFakeOpener(os0)                                            # STEP 17
result = os0.readlink(path1)                                            # STEP 18
os0.remove(path4)                                                       # STEP 19
result = os0.path.isfile(path4)                                         # STEP 20
fd0 = os0.open(path4, os.O_RDWR)                                        # STEP 21
str3 += " "                                                             # STEP 22
bytes2 += 1                                                             # STEP 23
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 24
stat4 = os0.lstat(path4)                                                # STEP 25
file0 = opener0(path4)                                                  # STEP 26
os0.rename(path4,path1)                                                 # STEP 27
result = sorted(os0.listdir(path1))                                     # STEP 28
os0.path.getsize(path4)                                                 # STEP 29
result = os0.path.isabs(path1)                                          # STEP 30
os0.write(fd0,str3)                                                     # STEP 31
os0.link(path4,path1)                                                   # STEP 32
os0.rmdir(path4)                                                        # STEP 33
os0.mkdir(path4)                                                        # STEP 34
result = stat4.st_size                                                  # STEP 35
os0.makedirs(path4)                                                     # STEP 36
stat0 = os0.stat(path4)                                                 # STEP 37
path4 += "/" + component0                                               # STEP 38
result = os0.path.dirname(path4)                                        # STEP 39
os0.link(path1,path1)                                                   # STEP 40
bytes2 = 0                                                              # STEP 41
path1 = "/Volumes/ramdisk/test"                                         # STEP 42
stat2 = os0.lstat(path4)                                                # STEP 43
os0.rmdir(path4)                                                        # STEP 44
path3 = "/Volumes/ramdisk/test"                                         # STEP 45
file0.write(str3)                                                       # STEP 46
bytes1 = 0                                                              # STEP 47
result = os0.path.exists(path4)                                         # STEP 48
path1 += "/" + component4                                               # STEP 49
os0.symlink(path4,path4)                                                # STEP 50
stat1 = os0.fstat(fd0)                                                  # STEP 51
stat3 = os0.lstat(path1)                                                # STEP 52
result = file0.readlines()                                              # STEP 53
os0.write(fd0,str3)                                                     # STEP 54
result = os0.path.exists(path1)                                         # STEP 55
bytes3 = 0                                                              # STEP 56
str1 = ""                                                               # STEP 57
result = os0.path.exists(path3)                                         # STEP 58
str1 += " "                                                             # STEP 59
os0.mkdir(path1)                                                        # STEP 60
os0.close(fd0)                                                          # STEP 61
stat4 = os0.stat(path4)                                                 # STEP 62
result = os0.readlink(path3)                                            # STEP 63
result = os0.path.lexists(path4)                                        # STEP 64
os0.path.getsize(path1)                                                 # STEP 65
result = sorted(os0.listdir(path1))                                     # STEP 66
result = os0.path.dirname(path4)                                        # STEP 67
fd0 = os0.open(path4, os.O_RDONLY)                                      # STEP 68
result = os0.path.isdir(path1)                                          # STEP 69
result = file0.readlines()                                              # STEP 70
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['  ']) == ([]) ",), <traceback object at 0x108062a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 4
bytes2 = 0                                                               # STEP 0
str3 = ""                                                                # STEP 1
component2 = "epsilon"                                                   # STEP 2
component4 = "g"                                                         # STEP 3
os0 = newFakeOS()                                                        # STEP 4
str3 += 'p'                                                              # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.symlink(path1,path1)                                                 # STEP 7
result = sorted(os0.listdir(path1))                                      # STEP 8
os0.remove(path1)                                                        # STEP 9
os0.remove(path1)                                                       # STEP 10
os0.mkdir(path1)                                                        # STEP 11
result = os0.path.exists(path1)                                         # STEP 12
result = os0.readlink(path1)                                            # STEP 13
result = sorted(os0.listdir(path1))                                     # STEP 14
result = os0.path.dirname(path1)                                        # STEP 15
result = os0.path.exists(path1)                                         # STEP 16
str3 += " "                                                             # STEP 17
result = os0.path.isabs(path1)                                          # STEP 18
os0.makedirs(path1)                                                     # STEP 19
result = os0.path.abspath(path1)                                        # STEP 20
str3 += " "                                                             # STEP 21
str3 += " "                                                             # STEP 22
os0.mkdir(path1)                                                        # STEP 23
result = os0.path.isfile(path1)                                         # STEP 24
result = sorted(os0.listdir(path1))                                     # STEP 25
os0.remove(path1)                                                       # STEP 26
result = os0.path.dirname(path1)                                        # STEP 27
result = os0.path.isfile(path1)                                         # STEP 28
os0.link(path1,path1)                                                   # STEP 29
result = os0.path.exists(path1)                                         # STEP 30
result = os0.path.isfile(path1)                                         # STEP 31
result = os0.readlink(path1)                                            # STEP 32
bytes4 = 0                                                              # STEP 33
result = os0.path.isabs(path1)                                          # STEP 34
os0.mkdir(path1)                                                        # STEP 35
os0.mkdir(path1)                                                        # STEP 36
path1 += "/" + component2                                               # STEP 37
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 38
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 39
os0.rmdir(path1)                                                        # STEP 40
os0.rmdir(path1)                                                        # STEP 41
os0.makedirs(path1)                                                     # STEP 42
result = os0.path.isfile(path1)                                         # STEP 43
os0.path.getsize(path1)                                                 # STEP 44
os0.makedirs(path1)                                                     # STEP 45
bytes3 = 0                                                              # STEP 46
result = os0.path.isabs(path1)                                          # STEP 47
os0.path.getsize(path1)                                                 # STEP 48
stat2 = os0.fstat(fd0)                                                  # STEP 49
str0 = ""                                                               # STEP 50
opener0 = newFakeOpener(os0)                                            # STEP 51
file0 = opener0(path1,'r')                                              # STEP 52
result = file0.read()                                                   # STEP 53
result = os0.readlink(path1)                                            # STEP 54
result = os0.path.islink(path1)                                         # STEP 55
result = os0.path.isabs(path1)                                          # STEP 56
str4 = ""                                                               # STEP 57
result = stat2.st_size                                                  # STEP 58
path1 += "/" + component2                                               # STEP 59
result = stat2.st_nlink                                                 # STEP 60
result = stat2.st_size                                                  # STEP 61
file0.next()                                                            # STEP 62
os0.remove(path1)                                                       # STEP 63
os0.mkdir(path1)                                                        # STEP 64
result = os0.path.isdir(path1)                                          # STEP 65
file0.seek(bytes4)                                                      # STEP 66
result = os0.path.islink(path1)                                         # STEP 67
result = os0.path.abspath(path1)                                        # STEP 68
result = file0.readline()                                               # STEP 69
result = file0.readlines()                                              # STEP 70
os0.symlink(path1,path1)                                                # STEP 71
os0.symlink(path1,path1)                                                # STEP 72
str4 += 'z'                                                             # STEP 73
file0.next()                                                            # STEP 74
result = os0.path.exists(path1)                                         # STEP 75
result = os0.readlink(path1)                                            # STEP 76
path1 += "/" + component2                                               # STEP 77
result = file0.readline(bytes3)                                         # STEP 78
os0.link(path1,path1)                                                   # STEP 79
result = os0.path.isfile(path1)                                         # STEP 80
os0.symlink(path1,path1)                                                # STEP 81
file0.next()                                                            # STEP 82
result = os0.path.lexists(path1)                                        # STEP 83
result = os0.path.islink(path1)                                         # STEP 84
os0.write(fd0,str4)                                                     # STEP 85
file0.flush()                                                           # STEP 86
bytes4 = 0                                                              # STEP 87
os0.path.getsize(path1)                                                 # STEP 88
bytes3 += 1                                                             # STEP 89
result = sorted(os0.listdir(path1))                                     # STEP 90
result = os0.path.isabs(path1)                                          # STEP 91
str3 += " "                                                             # STEP 92
result = stat2.st_nlink                                                 # STEP 93
result = os0.path.isdir(path1)                                          # STEP 94
bytes0 = 0                                                              # STEP 95
file0.truncate()                                                        # STEP 96
stat4 = os0.fstat(fd0)                                                  # STEP 97
os0.link(path1,path1)                                                   # STEP 98
result = file0.readline()                                               # STEP 99
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (z) == () ',), <traceback object at 0x1079f4128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 5
bytes2 = 0                                                               # STEP 0
component4 = "beta"                                                      # STEP 1
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
os0 = newFakeOS()                                                        # STEP 3
result = os0.path.abspath(path3)                                         # STEP 4
result = os0.path.isdir(path3)                                           # STEP 5
os0.symlink(path3,path3)                                                 # STEP 6
path3 += "/" + component4                                                # STEP 7
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)             # STEP 8
os0.link(path3,path3)                                                    # STEP 9
os0.makedirs(path3)                                                     # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
result = os0.readlink(path3)                                            # STEP 12
os0.close(fd0)                                                          # STEP 13
os0.symlink(path3,path3)                                                # STEP 14
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 15
file0 = opener0(path3,'a')                                              # STEP 16
result = os0.path.isabs(path3)                                          # STEP 17
bytes2 += 1                                                             # STEP 18
result = file0.readline()                                               # STEP 19
result = os0.path.abspath(path3)                                        # STEP 20
os0.rmdir(path3)                                                        # STEP 21
str1 = ""                                                               # STEP 22
bytes1 = 0                                                              # STEP 23
result = os0.path.isabs(path3)                                          # STEP 24
path4 = "/Volumes/ramdisk/test"                                         # STEP 25
os0.mkdir(path3)                                                        # STEP 26
result = os0.path.dirname(path4)                                        # STEP 27
file0.flush()                                                           # STEP 28
result = os0.path.dirname(path3)                                        # STEP 29
os0.remove(path4)                                                       # STEP 30
file0.seek(bytes1)                                                      # STEP 31
os0.mkdir(path3)                                                        # STEP 32
result = os0.path.isabs(path4)                                          # STEP 33
result = sorted(os0.listdir(path3))                                     # STEP 34
os0.link(path3,path4)                                                   # STEP 35
bytes1 = 0                                                              # STEP 36
os0.rename(path3,path4)                                                 # STEP 37
component1 = "a"                                                        # STEP 38
result = file0.readline(bytes1)                                         # STEP 39
result = os0.path.isdir(path4)                                          # STEP 40
path3 += "/" + component1                                               # STEP 41
result = file0.read()                                                   # STEP 42
result = os0.path.exists(path4)                                         # STEP 43
file0.next()                                                            # STEP 44
component3 = "h"                                                        # STEP 45
os0.rename(path3,path4)                                                 # STEP 46
os0.path.getsize(path3)                                                 # STEP 47
bytes0 = 0                                                              # STEP 48
result = file0.read(bytes2)                                             # STEP 49
component4 = "a"                                                        # STEP 50
os0.remove(path4)                                                       # STEP 51
path0 = "/Volumes/ramdisk/test"                                         # STEP 52
file0.next()                                                            # STEP 53
os0.rmdir(path3)                                                        # STEP 54
stat1 = os0.lstat(path3)                                                # STEP 55
file0.next()                                                            # STEP 56
os0.rmdir(path3)                                                        # STEP 57
os0.write(fd0,str1)                                                     # STEP 58
path3 += "/" + component3                                               # STEP 59
result = os0.path.islink(path4)                                         # STEP 60
result = os0.path.isabs(path3)                                          # STEP 61
str4 = ""                                                               # STEP 62
result = os0.path.dirname(path4)                                        # STEP 63
result = os0.path.lexists(path0)                                        # STEP 64
os0.makedirs(path3)                                                     # STEP 65
result = file0.read()                                                   # STEP 66
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10826a488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 6
str1 = ""                                                                # STEP 0
str1 += 'o'                                                              # STEP 1
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
str0 = ""                                                                # STEP 3
bytes1 = 0                                                               # STEP 4
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
component0 = "d"                                                         # STEP 6
bytes2 = 0                                                               # STEP 7
str1 += 't'                                                              # STEP 8
bytes1 += 1                                                              # STEP 9
os0 = newFakeOS()                                                       # STEP 10
path2 += "/" + component0                                               # STEP 11
os0.rename(path2,path0)                                                 # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
os0.remove(path0)                                                       # STEP 14
os0.link(path2,path2)                                                   # STEP 15
os0.link(path0,path0)                                                   # STEP 16
os0.path.getsize(path2)                                                 # STEP 17
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 18
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
os0.symlink(path0,path0)                                                # STEP 20
result = os0.path.dirname(path0)                                        # STEP 21
os0.path.getsize(path2)                                                 # STEP 22
os0.symlink(path2,path0)                                                # STEP 23
str0 += " "                                                             # STEP 24
stat4 = os0.stat(path2)                                                 # STEP 25
result = stat4.st_size                                                  # STEP 26
result = os0.path.dirname(path0)                                        # STEP 27
stat4 = os0.fstat(fd0)                                                  # STEP 28
component0 = "omega"                                                    # STEP 29
result = os0.path.isdir(path2)                                          # STEP 30
os0.link(path2,path0)                                                   # STEP 31
component3 = "e"                                                        # STEP 32
os0.link(path2,path2)                                                   # STEP 33
file0 = opener0(path0)                                                  # STEP 34
os0.rmdir(path2)                                                        # STEP 35
os0.write(fd0,str0)                                                     # STEP 36
path2 = "/Volumes/ramdisk/test"                                         # STEP 37
result = stat4.st_size                                                  # STEP 38
file0 = opener0(path2)                                                  # STEP 39
result = stat4.st_size                                                  # STEP 40
result = os0.path.isfile(path0)                                         # STEP 41
result = os0.path.dirname(path0)                                        # STEP 42
file0 = opener0(path2,'a')                                              # STEP 43
file0 = opener0(path0)                                                  # STEP 44
os0.symlink(path0,path2)                                                # STEP 45
path2 += "/" + component0                                               # STEP 46
result = os0.path.isabs(path2)                                          # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
str1 += 'k'                                                             # STEP 49
path4 = "/Volumes/ramdisk/test"                                         # STEP 50
path0 += "/" + component0                                               # STEP 51
file0 = opener0(path3,'a')                                              # STEP 52
str1 += 'k'                                                             # STEP 53
os0.rmdir(path2)                                                        # STEP 54
os0.close(fd0)                                                          # STEP 55
result = stat4.st_size                                                  # STEP 56
path2 = "/Volumes/ramdisk/test"                                         # STEP 57
os0.makedirs(path3)                                                     # STEP 58
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 59
os0.mkdir(path2)                                                        # STEP 60
result = os0.path.islink(path0)                                         # STEP 61
file0 = opener0(path0,'a')                                              # STEP 62
result = os0.read(fd0,bytes1)                                           # STEP 63
result = file0.readline(bytes2)                                         # STEP 64
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10453d758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28821, in act572
    result = self.p_file[0].readline(self.p_bytes[2])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 7
os0 = newFakeOS()                                                        # STEP 0
str1 = ""                                                                # STEP 1
str1 += 'f'                                                              # STEP 2
component1 = "beta"                                                      # STEP 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
os0.link(path0,path0)                                                    # STEP 5
result = os0.path.abspath(path0)                                         # STEP 6
os0.symlink(path0,path0)                                                 # STEP 7
os0.remove(path0)                                                        # STEP 8
opener0 = newFakeOpener(os0)                                             # STEP 9
file0 = opener0(path0,'a')                                              # STEP 10
os0.link(path0,path0)                                                   # STEP 11
file0 = opener0(path0,'r')                                              # STEP 12
file0 = opener0(path0,'r')                                              # STEP 13
file0 = opener0(path0,'r')                                              # STEP 14
path0 += "/" + component1                                               # STEP 15
os0.mkdir(path0)                                                        # STEP 16
file0 = opener0(path0,'w')                                              # STEP 17
file0 = opener0(path0,'r')                                              # STEP 18
component1 = "b"                                                        # STEP 19
result = os0.path.lexists(path0)                                        # STEP 20
result = os0.path.isdir(path0)                                          # STEP 21
path0 += "/" + component1                                               # STEP 22
str1 += " "                                                             # STEP 23
result = sorted(os0.listdir(path0))                                     # STEP 24
str1 += " "                                                             # STEP 25
os0.symlink(path0,path0)                                                # STEP 26
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 27
result = os0.path.isdir(path0)                                          # STEP 28
result = os0.path.isabs(path0)                                          # STEP 29
str1 += " "                                                             # STEP 30
file0 = opener0(path0,'a')                                              # STEP 31
result = os0.path.lexists(path0)                                        # STEP 32
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 33
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 34
str1 += " "                                                             # STEP 35
os0.symlink(path0,path0)                                                # STEP 36
str0 = ""                                                               # STEP 37
stat3 = os0.stat(path0)                                                 # STEP 38
str1 += 's'                                                             # STEP 39
os0.symlink(path0,path0)                                                # STEP 40
result = os0.path.islink(path0)                                         # STEP 41
result = os0.path.isdir(path0)                                          # STEP 42
file0 = opener0(path0,'a')                                              # STEP 43
result = os0.path.isfile(path0)                                         # STEP 44
result = os0.path.abspath(path0)                                        # STEP 45
os0.remove(path0)                                                       # STEP 46
file0 = opener0(path0,'r')                                              # STEP 47
bytes0 = 0                                                              # STEP 48
result = os0.path.lexists(path0)                                        # STEP 49
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 50
stat2 = os0.stat(path0)                                                 # STEP 51
result = stat2.st_size                                                  # STEP 52
os0.makedirs(path0)                                                     # STEP 53
os0.close(fd0)                                                          # STEP 54
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 55
result = os0.path.isfile(path0)                                         # STEP 56
os0.remove(path0)                                                       # STEP 57
bytes0 += 1                                                             # STEP 58
stat3 = os0.fstat(fd0)                                                  # STEP 59
file0 = opener0(path0)                                                  # STEP 60
result = stat2.st_nlink                                                 # STEP 61
result = os0.read(fd0,bytes0)                                           # STEP 62
result = os0.read(fd0,bytes0)                                           # STEP 63
os0.path.getsize(path0)                                                 # STEP 64
os0.path.getsize(path0)                                                 # STEP 65
component0 = "gamma"                                                    # STEP 66
file0 = opener0(path0,'w')                                              # STEP 67
path3 = "/Volumes/ramdisk/test"                                         # STEP 68
result = os0.read(fd0,bytes0)                                           # STEP 69
file0.flush()                                                           # STEP 70
os0.mkdir(path3)                                                        # STEP 71
result = os0.path.isfile(path0)                                         # STEP 72
result = file0.readline()                                               # STEP 73
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104300830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 8
os0 = newFakeOS()                                                        # STEP 0
bytes2 = 0                                                               # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
str4 = ""                                                                # STEP 3
bytes3 = 0                                                               # STEP 4
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
os0.link(path4,path4)                                                    # STEP 6
file0 = opener0(path4,'r')                                               # STEP 7
file0 = opener0(path4,'w')                                               # STEP 8
result = os0.path.exists(path4)                                          # STEP 9
os0.makedirs(path4)                                                     # STEP 10
result = os0.path.exists(path4)                                         # STEP 11
result = os0.path.lexists(path4)                                        # STEP 12
file0 = opener0(path4)                                                  # STEP 13
bytes0 = 0                                                              # STEP 14
os0.symlink(path4,path4)                                                # STEP 15
result = os0.path.isdir(path4)                                          # STEP 16
result = os0.readlink(path4)                                            # STEP 17
result = os0.path.isabs(path4)                                          # STEP 18
os0.mkdir(path4)                                                        # STEP 19
os0.makedirs(path4)                                                     # STEP 20
result = os0.path.abspath(path4)                                        # STEP 21
os0.makedirs(path4)                                                     # STEP 22
file0 = opener0(path4,'w')                                              # STEP 23
str4 += " "                                                             # STEP 24
os0.remove(path4)                                                       # STEP 25
result = os0.path.abspath(path4)                                        # STEP 26
str0 = ""                                                               # STEP 27
result = os0.path.dirname(path4)                                        # STEP 28
file0 = opener0(path4,'a')                                              # STEP 29
result = os0.path.isfile(path4)                                         # STEP 30
result = os0.path.isabs(path4)                                          # STEP 31
result = os0.path.abspath(path4)                                        # STEP 32
os0.symlink(path4,path4)                                                # STEP 33
file0 = opener0(path4,'a')                                              # STEP 34
file0 = opener0(path4,'r')                                              # STEP 35
result = os0.path.isabs(path4)                                          # STEP 36
bytes4 = 0                                                              # STEP 37
path3 = "/Volumes/ramdisk/test"                                         # STEP 38
result = os0.path.dirname(path3)                                        # STEP 39
path0 = "/Volumes/ramdisk/test"                                         # STEP 40
os0.makedirs(path4)                                                     # STEP 41
result = os0.path.lexists(path3)                                        # STEP 42
result = os0.path.islink(path0)                                         # STEP 43
os0.symlink(path0,path4)                                                # STEP 44
result = os0.readlink(path4)                                            # STEP 45
os0.makedirs(path4)                                                     # STEP 46
result = os0.path.islink(path0)                                         # STEP 47
result = os0.path.isfile(path3)                                         # STEP 48
str4 += " "                                                             # STEP 49
component3 = "a"                                                        # STEP 50
result = os0.path.exists(path4)                                         # STEP 51
result = os0.path.islink(path0)                                         # STEP 52
os0.mkdir(path4)                                                        # STEP 53
file0 = opener0(path0)                                                  # STEP 54
result = os0.path.abspath(path4)                                        # STEP 55
result = os0.path.abspath(path3)                                        # STEP 56
path3 += "/" + component3                                               # STEP 57
os0.path.getsize(path3)                                                 # STEP 58
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 59
os0.close(fd0)                                                          # STEP 60
path1 = "/Volumes/ramdisk/test"                                         # STEP 61
result = os0.readlink(path3)                                            # STEP 62
str4 += " "                                                             # STEP 63
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 64
result = os0.read(fd0,bytes0)                                           # STEP 65
str2 = ""                                                               # STEP 66
os0.rmdir(path3)                                                        # STEP 67
file0 = opener0(path3,'r')                                              # STEP 68
bytes0 = 0                                                              # STEP 69
os0.write(fd0,str0)                                                     # STEP 70
result = os0.read(fd0,bytes3)                                           # STEP 71
os0.makedirs(path3)                                                     # STEP 72
path0 = "/Volumes/ramdisk/test"                                         # STEP 73
os0.mkdir(path0)                                                        # STEP 74
file0.truncate()                                                        # STEP 75
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for writing.'), <traceback object at 0x10632bb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29099, in act577
    self.p_file[0].truncate()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4294, in write_error
    self._raise('File is not open for writing.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 9
str3 = ""                                                                # STEP 0
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
os0 = newFakeOS()                                                        # STEP 2
result = os0.path.abspath(path4)                                         # STEP 3
result = os0.path.isabs(path4)                                           # STEP 4
os0.symlink(path4,path4)                                                 # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
str3 += " "                                                              # STEP 7
os0.link(path4,path4)                                                    # STEP 8
os0.symlink(path4,path4)                                                 # STEP 9
opener0 = newFakeOpener(os0)                                            # STEP 10
os0.remove(path4)                                                       # STEP 11
result = os0.path.lexists(path4)                                        # STEP 12
file0 = opener0(path4,'r')                                              # STEP 13
component3 = "b"                                                        # STEP 14
str3 += 'k'                                                             # STEP 15
os0.makedirs(path4)                                                     # STEP 16
result = os0.path.exists(path4)                                         # STEP 17
os0.link(path4,path4)                                                   # STEP 18
file0 = opener0(path4,'w')                                              # STEP 19
file0 = opener0(path4,'w')                                              # STEP 20
os0.link(path4,path4)                                                   # STEP 21
result = os0.path.isdir(path4)                                          # STEP 22
result = os0.path.exists(path4)                                         # STEP 23
result = os0.path.isdir(path4)                                          # STEP 24
path4 += "/" + component3                                               # STEP 25
file0 = opener0(path4,'w')                                              # STEP 26
os0.symlink(path4,path4)                                                # STEP 27
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 28
os0.link(path4,path4)                                                   # STEP 29
component0 = "gamma"                                                    # STEP 30
os0.link(path4,path4)                                                   # STEP 31
result = os0.path.lexists(path4)                                        # STEP 32
result = os0.path.isfile(path4)                                         # STEP 33
str3 += " "                                                             # STEP 34
result = os0.path.lexists(path4)                                        # STEP 35
str2 = ""                                                               # STEP 36
result = os0.path.islink(path4)                                         # STEP 37
file0.flush()                                                           # STEP 38
os0.write(fd0,str3)                                                     # STEP 39
path4 += "/" + component0                                               # STEP 40
os0.link(path4,path4)                                                   # STEP 41
stat2 = os0.stat(path4)                                                 # STEP 42
str2 += " "                                                             # STEP 43
stat4 = os0.lstat(path4)                                                # STEP 44
file0.flush()                                                           # STEP 45
os0.makedirs(path4)                                                     # STEP 46
result = os0.path.dirname(path4)                                        # STEP 47
result = os0.path.lexists(path4)                                        # STEP 48
result = os0.path.isdir(path4)                                          # STEP 49
os0.remove(path4)                                                       # STEP 50
result = file0.read()                                                   # STEP 51
stat0 = os0.fstat(fd0)                                                  # STEP 52
result = stat0.st_nlink                                                 # STEP 53
result = os0.path.lexists(path4)                                        # STEP 54
os0.rmdir(path4)                                                        # STEP 55
result = file0.readline()                                               # STEP 56
os0.write(fd0,str2)                                                     # STEP 57
os0.path.getsize(path4)                                                 # STEP 58
result = os0.path.isabs(path4)                                          # STEP 59
stat4 = os0.fstat(fd0)                                                  # STEP 60
path4 += "/" + component3                                               # STEP 61
file0.flush()                                                           # STEP 62
file0.flush()                                                           # STEP 63
stat2 = os0.fstat(fd0)                                                  # STEP 64
str2 += 'z'                                                             # STEP 65
stat0 = os0.lstat(path4)                                                # STEP 66
os0.write(fd0,str2)                                                     # STEP 67
result = os0.path.isdir(path4)                                          # STEP 68
stat3 = os0.stat(path4)                                                 # STEP 69
result = sorted(os0.listdir(path4))                                     # STEP 70
os0.makedirs(path4)                                                     # STEP 71
os0.makedirs(path4)                                                     # STEP 72
result = os0.path.lexists(path4)                                        # STEP 73
os0.rmdir(path4)                                                        # STEP 74
file0.next()                                                            # STEP 75
result = os0.readlink(path4)                                            # STEP 76
result = os0.readlink(path4)                                            # STEP 77
result = os0.path.lexists(path4)                                        # STEP 78
result = stat2.st_size                                                  # STEP 79
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (0) == (4) ',), <traceback object at 0x10746fd88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 21881, in act459
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1191 BRANCHES COVERED
913 STATEMENTS COVERED
