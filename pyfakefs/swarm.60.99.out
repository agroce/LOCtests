Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5977.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #369 STEP #66 (0:00:30.002054) Sat Jul 22 08:52:40 2017 [ 889 stmts 1152 branches ] 36866 TOTAL ACTIONS (1228.782537/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10b3cf0e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 81 steps

SAVING TEST AS failure.5977.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
component0 = "e"                                                         # STEP 1
component2 = "beta"                                                      # STEP 2
component4 = "beta"                                                      # STEP 3
str1 = ""                                                                # STEP 4
component3 = "gamma"                                                     # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.remove(path1)                                                        # STEP 7
path1 += "/" + component2                                                # STEP 8
os0.symlink(path1,path1)                                                 # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
path1 += "/" + component4                                               # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
component2 = "alpha"                                                    # STEP 13
result = os0.path.islink(path1)                                         # STEP 14
component4 = "g"                                                        # STEP 15
path4 = "/Volumes/ramdisk/test"                                         # STEP 16
component1 = "epsilon"                                                  # STEP 17
path0 += "/" + component3                                               # STEP 18
result = os0.path.exists(path4)                                         # STEP 19
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 20
stat4 = os0.lstat(path1)                                                # STEP 21
stat3 = os0.lstat(path0)                                                # STEP 22
os0.close(fd0)                                                          # STEP 23
str3 = ""                                                               # STEP 24
os0.removedirs(path0)                                                   # STEP 25
result = os0.path.isabs(path4)                                          # STEP 26
path0 += "/" + component0                                               # STEP 27
os0.removedirs(path4)                                                   # STEP 28
result = os0.readlink(path4)                                            # STEP 29
component0 = "delta"                                                    # STEP 30
result = os0.path.islink(path0)                                         # STEP 31
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 32
path4 += "/" + component4                                               # STEP 33
str2 = ""                                                               # STEP 34
os0.rename(path1,path4)                                                 # STEP 35
component4 = "gamma"                                                    # STEP 36
stat0 = os0.lstat(path0)                                                # STEP 37
component3 = "delta"                                                    # STEP 38
path0 = "/Volumes/ramdisk/test"                                         # STEP 39
file0 = opener0(path4,'a')                                              # STEP 40
path1 += "/" + component4                                               # STEP 41
os0.symlink(path1,path0)                                                # STEP 42
component4 = "c"                                                        # STEP 43
os0.symlink(path4,path0)                                                # STEP 44
result = stat3.st_size                                                  # STEP 45
result = os0.path.lexists(path4)                                        # STEP 46
result = os0.path.islink(path4)                                         # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
path4 += "/" + component1                                               # STEP 49
result = file0.read()                                                   # STEP 50
os0.mkdir(path3)                                                        # STEP 51
result = os0.path.islink(path3)                                         # STEP 52
os0.removedirs(path1)                                                   # STEP 53
os0.rename(path4,path3)                                                 # STEP 54
path3 += "/" + component0                                               # STEP 55
path1 += "/" + component3                                               # STEP 56
result = os0.path.islink(path3)                                         # STEP 57
os0.removedirs(path1)                                                   # STEP 58
component1 = "d"                                                        # STEP 59
component0 = "alpha"                                                    # STEP 60
os0.remove(path1)                                                       # STEP 61
os0.write(fd0,str2)                                                     # STEP 62
os0.write(fd0,str3)                                                     # STEP 63
component3 = "h"                                                        # STEP 64
os0.makedirs(path0)                                                     # STEP 65
os0.remove(path1)                                                       # STEP 66
result = os0.path.islink(path0)                                         # STEP 67
path1 += "/" + component3                                               # STEP 68
path1 += "/" + component4                                               # STEP 69
result = os0.readlink(path0)                                            # STEP 70
component4 = "phi"                                                      # STEP 71
stat3 = os0.lstat(path4)                                                # STEP 72
os0.mkdir(path3)                                                        # STEP 73
path0 = "/Volumes/ramdisk/test"                                         # STEP 74
path2 = "/Volumes/ramdisk/test"                                         # STEP 75
os0.symlink(path1,path3)                                                # STEP 76
component3 = "c"                                                        # STEP 77
os0.symlink(path1,path4)                                                # STEP 78
result = os0.path.lexists(path2)                                        # STEP 79
result = file0.read()                                                   # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10551e9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 84
STOPPING TESTING DUE TO TIMEOUT
42.3262727611 PERCENT COVERED
60.3126180172 TOTAL RUNTIME
746 EXECUTED
74565 TOTAL TEST OPERATIONS
53.9436278343 TIME SPENT EXECUTING TEST OPERATIONS
2.38040184975 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0467655658722 TIME SPENT CHECKING PROPERTIES
53.9903934002 TOTAL TIME SPENT RUNNING SUT
2.22880339622 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
os0 = newFakeOS()                                                        # STEP 0
component0 = "e"                                                         # STEP 1
component2 = "beta"                                                      # STEP 2
component4 = "beta"                                                      # STEP 3
str1 = ""                                                                # STEP 4
component3 = "gamma"                                                     # STEP 5
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.remove(path1)                                                        # STEP 7
path1 += "/" + component2                                                # STEP 8
os0.symlink(path1,path1)                                                 # STEP 9
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
path1 += "/" + component4                                               # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
component2 = "alpha"                                                    # STEP 13
result = os0.path.islink(path1)                                         # STEP 14
component4 = "g"                                                        # STEP 15
path4 = "/Volumes/ramdisk/test"                                         # STEP 16
component1 = "epsilon"                                                  # STEP 17
path0 += "/" + component3                                               # STEP 18
result = os0.path.exists(path4)                                         # STEP 19
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 20
stat4 = os0.lstat(path1)                                                # STEP 21
stat3 = os0.lstat(path0)                                                # STEP 22
os0.close(fd0)                                                          # STEP 23
str3 = ""                                                               # STEP 24
os0.removedirs(path0)                                                   # STEP 25
result = os0.path.isabs(path4)                                          # STEP 26
path0 += "/" + component0                                               # STEP 27
os0.removedirs(path4)                                                   # STEP 28
result = os0.readlink(path4)                                            # STEP 29
component0 = "delta"                                                    # STEP 30
result = os0.path.islink(path0)                                         # STEP 31
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 32
path4 += "/" + component4                                               # STEP 33
str2 = ""                                                               # STEP 34
os0.rename(path1,path4)                                                 # STEP 35
component4 = "gamma"                                                    # STEP 36
stat0 = os0.lstat(path0)                                                # STEP 37
component3 = "delta"                                                    # STEP 38
path0 = "/Volumes/ramdisk/test"                                         # STEP 39
file0 = opener0(path4,'a')                                              # STEP 40
path1 += "/" + component4                                               # STEP 41
os0.symlink(path1,path0)                                                # STEP 42
component4 = "c"                                                        # STEP 43
os0.symlink(path4,path0)                                                # STEP 44
result = stat3.st_size                                                  # STEP 45
result = os0.path.lexists(path4)                                        # STEP 46
result = os0.path.islink(path4)                                         # STEP 47
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
path4 += "/" + component1                                               # STEP 49
result = file0.read()                                                   # STEP 50
os0.mkdir(path3)                                                        # STEP 51
result = os0.path.islink(path3)                                         # STEP 52
os0.removedirs(path1)                                                   # STEP 53
os0.rename(path4,path3)                                                 # STEP 54
path3 += "/" + component0                                               # STEP 55
path1 += "/" + component3                                               # STEP 56
result = os0.path.islink(path3)                                         # STEP 57
os0.removedirs(path1)                                                   # STEP 58
component1 = "d"                                                        # STEP 59
component0 = "alpha"                                                    # STEP 60
os0.remove(path1)                                                       # STEP 61
os0.write(fd0,str2)                                                     # STEP 62
os0.write(fd0,str3)                                                     # STEP 63
component3 = "h"                                                        # STEP 64
os0.makedirs(path0)                                                     # STEP 65
os0.remove(path1)                                                       # STEP 66
result = os0.path.islink(path0)                                         # STEP 67
path1 += "/" + component3                                               # STEP 68
path1 += "/" + component4                                               # STEP 69
result = os0.readlink(path0)                                            # STEP 70
component4 = "phi"                                                      # STEP 71
stat3 = os0.lstat(path4)                                                # STEP 72
os0.mkdir(path3)                                                        # STEP 73
path0 = "/Volumes/ramdisk/test"                                         # STEP 74
path2 = "/Volumes/ramdisk/test"                                         # STEP 75
os0.symlink(path1,path3)                                                # STEP 76
component3 = "c"                                                        # STEP 77
os0.symlink(path1,path4)                                                # STEP 78
result = os0.path.lexists(path2)                                        # STEP 79
result = file0.read()                                                   # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10551e9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1178 BRANCHES COVERED
902 STATEMENTS COVERED
