Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5259.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #182 STEP #81 (0:00:30.001586) Sat Jul 22 04:46:13 2017 [ 889 stmts 1153 branches ] 18181 TOTAL ACTIONS (606.001296865/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1064b4a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
Original test has 70 steps

SAVING TEST AS failure.5259.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str0 = ""                                                                # STEP 0
bytes3 = 0                                                               # STEP 1
str4 = ""                                                                # STEP 2
bytes4 = 0                                                               # STEP 3
str3 = ""                                                                # STEP 4
bytes0 = 0                                                               # STEP 5
component2 = "d"                                                         # STEP 6
str2 = ""                                                                # STEP 7
str1 = ""                                                                # STEP 8
component3 = "gamma"                                                     # STEP 9
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
os0 = newFakeOS()                                                       # STEP 11
result = sorted(os0.listdir(path1))                                     # STEP 12
result = os0.path.abspath(path1)                                        # STEP 13
result = os0.readlink(path1)                                            # STEP 14
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.link(path1,path1)                                                   # STEP 16
result = os0.path.dirname(path1)                                        # STEP 17
component1 = "lambda"                                                   # STEP 18
result = os0.path.abspath(path3)                                        # STEP 19
result = os0.path.dirname(path1)                                        # STEP 20
result = os0.readlink(path1)                                            # STEP 21
result = sorted(os0.listdir(path1))                                     # STEP 22
result = sorted(os0.listdir(path1))                                     # STEP 23
result = os0.path.lexists(path1)                                        # STEP 24
result = os0.path.isabs(path3)                                          # STEP 25
result = os0.path.dirname(path1)                                        # STEP 26
result = os0.path.lexists(path3)                                        # STEP 27
result = os0.path.isdir(path1)                                          # STEP 28
component4 = "d"                                                        # STEP 29
result = os0.readlink(path1)                                            # STEP 30
os0.link(path3,path3)                                                   # STEP 31
component0 = "epsilon"                                                  # STEP 32
path2 = "/Volumes/ramdisk/test"                                         # STEP 33
result = os0.path.abspath(path3)                                        # STEP 34
result = os0.path.lexists(path3)                                        # STEP 35
result = sorted(os0.listdir(path2))                                     # STEP 36
path1 += "/" + component1                                               # STEP 37
stat1 = os0.stat(path1)                                                 # STEP 38
result = os0.path.lexists(path2)                                        # STEP 39
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 40
os0.rename(path1,path2)                                                 # STEP 41
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 42
result = os0.readlink(path3)                                            # STEP 43
stat4 = os0.fstat(fd0)                                                  # STEP 44
stat2 = os0.fstat(fd0)                                                  # STEP 45
os0.rmdir(path1)                                                        # STEP 46
os0.rmdir(path1)                                                        # STEP 47
result = os0.path.isdir(path3)                                          # STEP 48
path2 = "/Volumes/ramdisk/test"                                         # STEP 49
result = sorted(os0.listdir(path1))                                     # STEP 50
os0.close(fd0)                                                          # STEP 51
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 52
os0.link(path2,path1)                                                   # STEP 53
os0.rmdir(path1)                                                        # STEP 54
result = os0.path.lexists(path2)                                        # STEP 55
os0.rmdir(path1)                                                        # STEP 56
os0.close(fd0)                                                          # STEP 57
opener0 = newFakeOpener(os0)                                            # STEP 58
os0.close(fd0)                                                          # STEP 59
os0.path.getsize(path1)                                                 # STEP 60
file0 = opener0(path1,'r')                                              # STEP 61
os0.close(fd0)                                                          # STEP 62
os0.rmdir(path1)                                                        # STEP 63
result = sorted(os0.listdir(path3))                                     # STEP 64
result = file0.readlines()                                              # STEP 65
result = os0.path.lexists(path2)                                        # STEP 66
os0.path.getsize(path1)                                                 # STEP 67
os0.close(fd0)                                                          # STEP 68
result = file0.read(bytes3)                                             # STEP 69
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109110368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (r) == () ',), <traceback object at 0x103bcd5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28974, in act574
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 49 steps

SAVING TEST AS failure.5259.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
str4 = ""                                                                # STEP 2
os0 = newFakeOS()                                                        # STEP 3
result = os0.path.isabs(path2)                                           # STEP 4
str4 += 'r'                                                              # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
str4 += 'l'                                                              # STEP 7
str1 = ""                                                                # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
component2 = "b"                                                        # STEP 10
component4 = "g"                                                        # STEP 11
str3 = ""                                                               # STEP 12
result = os0.path.isabs(path2)                                          # STEP 13
str1 += 'j'                                                             # STEP 14
result = os0.path.isabs(path4)                                          # STEP 15
path2 += "/" + component2                                               # STEP 16
os0.path.getsize(path2)                                                 # STEP 17
bytes4 = 0                                                              # STEP 18
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 19
str3 += 't'                                                             # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
os0.symlink(path4,path3)                                                # STEP 22
path2 = "/Volumes/ramdisk/test"                                         # STEP 23
os0.symlink(path2,path4)                                                # STEP 24
opener0 = newFakeOpener(os0)                                            # STEP 25
os0.symlink(path3,path3)                                                # STEP 26
bytes2 += 1                                                             # STEP 27
file0 = opener0(path2,'r')                                              # STEP 28
file0 = opener0(path2,'r')                                              # STEP 29
file0 = opener0(path3,'w')                                              # STEP 30
path2 += "/" + component2                                               # STEP 31
file0 = opener0(path2)                                                  # STEP 32
result = sorted(os0.listdir(path2))                                     # STEP 33
result = file0.read()                                                   # STEP 34
os0.path.getsize(path2)                                                 # STEP 35
result = os0.path.dirname(path3)                                        # STEP 36
str3 = ""                                                               # STEP 37
file0.flush()                                                           # STEP 38
file0.next()                                                            # STEP 39
result = file0.readlines()                                              # STEP 40
result = os0.path.dirname(path3)                                        # STEP 41
os0.symlink(path3,path2)                                                # STEP 42
result = os0.path.dirname(path4)                                        # STEP 43
result = file0.read(bytes2)                                             # STEP 44
os0.write(fd0,str4)                                                     # STEP 45
bytes4 += 1                                                             # STEP 46
bytes1 = 0                                                              # STEP 47
result = file0.readline(bytes4)                                         # STEP 48
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (r) == () ',), <traceback object at 0x103bc93b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28974, in act574
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107094ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 97 steps

SAVING TEST AS failure.5259.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
result = os0.path.islink(path2)                                          # STEP 2
result = os0.path.abspath(path2)                                         # STEP 3
result = os0.path.islink(path2)                                          # STEP 4
os0.symlink(path2,path2)                                                 # STEP 5
str1 = ""                                                                # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
str0 = ""                                                                # STEP 8
result = os0.path.exists(path2)                                          # STEP 9
os0.link(path1,path2)                                                   # STEP 10
result = os0.path.islink(path2)                                         # STEP 11
result = os0.path.islink(path2)                                         # STEP 12
result = os0.path.lexists(path1)                                        # STEP 13
result = os0.path.lexists(path2)                                        # STEP 14
os0.remove(path2)                                                       # STEP 15
str3 = ""                                                               # STEP 16
result = os0.path.lexists(path2)                                        # STEP 17
str2 = ""                                                               # STEP 18
str4 = ""                                                               # STEP 19
os0.remove(path1)                                                       # STEP 20
result = os0.path.exists(path2)                                         # STEP 21
result = os0.path.islink(path1)                                         # STEP 22
bytes4 = 0                                                              # STEP 23
path0 = "/Volumes/ramdisk/test"                                         # STEP 24
os0.link(path1,path1)                                                   # STEP 25
result = os0.path.islink(path2)                                         # STEP 26
os0.symlink(path1,path2)                                                # STEP 27
str4 += " "                                                             # STEP 28
os0.symlink(path0,path0)                                                # STEP 29
os0.symlink(path0,path0)                                                # STEP 30
bytes0 = 0                                                              # STEP 31
str4 = ""                                                               # STEP 32
result = os0.path.islink(path0)                                         # STEP 33
component2 = "gamma"                                                    # STEP 34
str2 += " "                                                             # STEP 35
result = os0.path.dirname(path1)                                        # STEP 36
result = os0.path.lexists(path2)                                        # STEP 37
result = os0.path.lexists(path0)                                        # STEP 38
result = os0.path.islink(path2)                                         # STEP 39
result = os0.path.abspath(path1)                                        # STEP 40
os0.symlink(path2,path2)                                                # STEP 41
opener0 = newFakeOpener(os0)                                            # STEP 42
os0.symlink(path2,path2)                                                # STEP 43
path1 += "/" + component2                                               # STEP 44
result = os0.path.lexists(path1)                                        # STEP 45
result = os0.path.lexists(path2)                                        # STEP 46
os0.link(path2,path2)                                                   # STEP 47
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 48
bytes1 = 0                                                              # STEP 49
os0.link(path0,path0)                                                   # STEP 50
os0.close(fd0)                                                          # STEP 51
os0.rmdir(path1)                                                        # STEP 52
stat2 = os0.lstat(path1)                                                # STEP 53
stat3 = os0.stat(path1)                                                 # STEP 54
component1 = "phi"                                                      # STEP 55
bytes2 = 0                                                              # STEP 56
result = os0.path.abspath(path2)                                        # STEP 57
os0.path.getsize(path1)                                                 # STEP 58
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 59
os0.mkdir(path0)                                                        # STEP 60
os0.symlink(path0,path2)                                                # STEP 61
path2 += "/" + component1                                               # STEP 62
path4 = "/Volumes/ramdisk/test"                                         # STEP 63
os0.symlink(path2,path1)                                                # STEP 64
stat4 = os0.fstat(fd0)                                                  # STEP 65
os0.symlink(path1,path0)                                                # STEP 66
os0.rmdir(path2)                                                        # STEP 67
os0.remove(path1)                                                       # STEP 68
result = stat3.st_nlink                                                 # STEP 69
os0.mkdir(path1)                                                        # STEP 70
os0.path.getsize(path2)                                                 # STEP 71
str3 += " "                                                             # STEP 72
str1 += " "                                                             # STEP 73
file0 = opener0(path1,'w')                                              # STEP 74
bytes3 = 0                                                              # STEP 75
os0.mkdir(path1)                                                        # STEP 76
os0.write(fd0,str3)                                                     # STEP 77
result = stat3.st_nlink                                                 # STEP 78
os0.rmdir(path1)                                                        # STEP 79
os0.write(fd0,str2)                                                     # STEP 80
str1 = ""                                                               # STEP 81
os0.write(fd0,str2)                                                     # STEP 82
os0.rmdir(path1)                                                        # STEP 83
file0 = opener0(path1,'a')                                              # STEP 84
os0.rmdir(path2)                                                        # STEP 85
result = os0.path.exists(path2)                                         # STEP 86
result = os0.path.exists(path0)                                         # STEP 87
result = file0.read()                                                   # STEP 88
result = os0.path.islink(path0)                                         # STEP 89
os0.write(fd0,str4)                                                     # STEP 90
str4 += " "                                                             # STEP 91
result = os0.path.lexists(path0)                                        # STEP 92
result = os0.path.exists(path4)                                         # STEP 93
result = os0.path.exists(path1)                                         # STEP 94
stat4 = os0.lstat(path2)                                                # STEP 95
result = file0.read()                                                   # STEP 96
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106faa518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 92
STOPPING TESTING DUE TO TIMEOUT
42.8093645485 PERCENT COVERED
60.3214008808 TOTAL RUNTIME
363 EXECUTED
36208 TOTAL TEST OPERATIONS
42.4915857315 TIME SPENT EXECUTING TEST OPERATIONS
15.4815542698 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0250911712646 TIME SPENT CHECKING PROPERTIES
42.5166769028 TOTAL TIME SPENT RUNNING SUT
1.11569213867 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
3 FAILED
0 REPEATS OF FAILURES
3 ACTUAL DISTINCT FAILURES

FAILURE 0
str0 = ""                                                                # STEP 0
bytes3 = 0                                                               # STEP 1
str4 = ""                                                                # STEP 2
bytes4 = 0                                                               # STEP 3
str3 = ""                                                                # STEP 4
bytes0 = 0                                                               # STEP 5
component2 = "d"                                                         # STEP 6
str2 = ""                                                                # STEP 7
str1 = ""                                                                # STEP 8
component3 = "gamma"                                                     # STEP 9
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
os0 = newFakeOS()                                                       # STEP 11
result = sorted(os0.listdir(path1))                                     # STEP 12
result = os0.path.abspath(path1)                                        # STEP 13
result = os0.readlink(path1)                                            # STEP 14
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.link(path1,path1)                                                   # STEP 16
result = os0.path.dirname(path1)                                        # STEP 17
component1 = "lambda"                                                   # STEP 18
result = os0.path.abspath(path3)                                        # STEP 19
result = os0.path.dirname(path1)                                        # STEP 20
result = os0.readlink(path1)                                            # STEP 21
result = sorted(os0.listdir(path1))                                     # STEP 22
result = sorted(os0.listdir(path1))                                     # STEP 23
result = os0.path.lexists(path1)                                        # STEP 24
result = os0.path.isabs(path3)                                          # STEP 25
result = os0.path.dirname(path1)                                        # STEP 26
result = os0.path.lexists(path3)                                        # STEP 27
result = os0.path.isdir(path1)                                          # STEP 28
component4 = "d"                                                        # STEP 29
result = os0.readlink(path1)                                            # STEP 30
os0.link(path3,path3)                                                   # STEP 31
component0 = "epsilon"                                                  # STEP 32
path2 = "/Volumes/ramdisk/test"                                         # STEP 33
result = os0.path.abspath(path3)                                        # STEP 34
result = os0.path.lexists(path3)                                        # STEP 35
result = sorted(os0.listdir(path2))                                     # STEP 36
path1 += "/" + component1                                               # STEP 37
stat1 = os0.stat(path1)                                                 # STEP 38
result = os0.path.lexists(path2)                                        # STEP 39
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 40
os0.rename(path1,path2)                                                 # STEP 41
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 42
result = os0.readlink(path3)                                            # STEP 43
stat4 = os0.fstat(fd0)                                                  # STEP 44
stat2 = os0.fstat(fd0)                                                  # STEP 45
os0.rmdir(path1)                                                        # STEP 46
os0.rmdir(path1)                                                        # STEP 47
result = os0.path.isdir(path3)                                          # STEP 48
path2 = "/Volumes/ramdisk/test"                                         # STEP 49
result = sorted(os0.listdir(path1))                                     # STEP 50
os0.close(fd0)                                                          # STEP 51
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 52
os0.link(path2,path1)                                                   # STEP 53
os0.rmdir(path1)                                                        # STEP 54
result = os0.path.lexists(path2)                                        # STEP 55
os0.rmdir(path1)                                                        # STEP 56
os0.close(fd0)                                                          # STEP 57
opener0 = newFakeOpener(os0)                                            # STEP 58
os0.close(fd0)                                                          # STEP 59
os0.path.getsize(path1)                                                 # STEP 60
file0 = opener0(path1,'r')                                              # STEP 61
os0.close(fd0)                                                          # STEP 62
os0.rmdir(path1)                                                        # STEP 63
result = sorted(os0.listdir(path3))                                     # STEP 64
result = file0.readlines()                                              # STEP 65
result = os0.path.lexists(path2)                                        # STEP 66
os0.path.getsize(path1)                                                 # STEP 67
os0.close(fd0)                                                          # STEP 68
result = file0.read(bytes3)                                             # STEP 69
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x109110368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28560, in act567
    assert (raised == None) == (refRaised == None)
FAILURE 1
bytes2 = 0                                                               # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
str4 = ""                                                                # STEP 2
os0 = newFakeOS()                                                        # STEP 3
result = os0.path.isabs(path2)                                           # STEP 4
str4 += 'r'                                                              # STEP 5
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
str4 += 'l'                                                              # STEP 7
str1 = ""                                                                # STEP 8
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
component2 = "b"                                                        # STEP 10
component4 = "g"                                                        # STEP 11
str3 = ""                                                               # STEP 12
result = os0.path.isabs(path2)                                          # STEP 13
str1 += 'j'                                                             # STEP 14
result = os0.path.isabs(path4)                                          # STEP 15
path2 += "/" + component2                                               # STEP 16
os0.path.getsize(path2)                                                 # STEP 17
bytes4 = 0                                                              # STEP 18
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 19
str3 += 't'                                                             # STEP 20
result = os0.path.exists(path3)                                         # STEP 21
os0.symlink(path4,path3)                                                # STEP 22
path2 = "/Volumes/ramdisk/test"                                         # STEP 23
os0.symlink(path2,path4)                                                # STEP 24
opener0 = newFakeOpener(os0)                                            # STEP 25
os0.symlink(path3,path3)                                                # STEP 26
bytes2 += 1                                                             # STEP 27
file0 = opener0(path2,'r')                                              # STEP 28
file0 = opener0(path2,'r')                                              # STEP 29
file0 = opener0(path3,'w')                                              # STEP 30
path2 += "/" + component2                                               # STEP 31
file0 = opener0(path2)                                                  # STEP 32
result = sorted(os0.listdir(path2))                                     # STEP 33
result = file0.read()                                                   # STEP 34
os0.path.getsize(path2)                                                 # STEP 35
result = os0.path.dirname(path3)                                        # STEP 36
str3 = ""                                                               # STEP 37
file0.flush()                                                           # STEP 38
file0.next()                                                            # STEP 39
result = file0.readlines()                                              # STEP 40
result = os0.path.dirname(path3)                                        # STEP 41
os0.symlink(path3,path2)                                                # STEP 42
result = os0.path.dirname(path4)                                        # STEP 43
result = file0.read(bytes2)                                             # STEP 44
os0.write(fd0,str4)                                                     # STEP 45
bytes4 += 1                                                             # STEP 46
bytes1 = 0                                                              # STEP 47
result = file0.readline(bytes4)                                         # STEP 48
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (r) == () ',), <traceback object at 0x103bc93b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28974, in act574
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 2
os0 = newFakeOS()                                                        # STEP 0
path2 = "/Volumes/ramdisk/test"                                          # STEP 1
result = os0.path.islink(path2)                                          # STEP 2
result = os0.path.abspath(path2)                                         # STEP 3
result = os0.path.islink(path2)                                          # STEP 4
os0.symlink(path2,path2)                                                 # STEP 5
str1 = ""                                                                # STEP 6
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
str0 = ""                                                                # STEP 8
result = os0.path.exists(path2)                                          # STEP 9
os0.link(path1,path2)                                                   # STEP 10
result = os0.path.islink(path2)                                         # STEP 11
result = os0.path.islink(path2)                                         # STEP 12
result = os0.path.lexists(path1)                                        # STEP 13
result = os0.path.lexists(path2)                                        # STEP 14
os0.remove(path2)                                                       # STEP 15
str3 = ""                                                               # STEP 16
result = os0.path.lexists(path2)                                        # STEP 17
str2 = ""                                                               # STEP 18
str4 = ""                                                               # STEP 19
os0.remove(path1)                                                       # STEP 20
result = os0.path.exists(path2)                                         # STEP 21
result = os0.path.islink(path1)                                         # STEP 22
bytes4 = 0                                                              # STEP 23
path0 = "/Volumes/ramdisk/test"                                         # STEP 24
os0.link(path1,path1)                                                   # STEP 25
result = os0.path.islink(path2)                                         # STEP 26
os0.symlink(path1,path2)                                                # STEP 27
str4 += " "                                                             # STEP 28
os0.symlink(path0,path0)                                                # STEP 29
os0.symlink(path0,path0)                                                # STEP 30
bytes0 = 0                                                              # STEP 31
str4 = ""                                                               # STEP 32
result = os0.path.islink(path0)                                         # STEP 33
component2 = "gamma"                                                    # STEP 34
str2 += " "                                                             # STEP 35
result = os0.path.dirname(path1)                                        # STEP 36
result = os0.path.lexists(path2)                                        # STEP 37
result = os0.path.lexists(path0)                                        # STEP 38
result = os0.path.islink(path2)                                         # STEP 39
result = os0.path.abspath(path1)                                        # STEP 40
os0.symlink(path2,path2)                                                # STEP 41
opener0 = newFakeOpener(os0)                                            # STEP 42
os0.symlink(path2,path2)                                                # STEP 43
path1 += "/" + component2                                               # STEP 44
result = os0.path.lexists(path1)                                        # STEP 45
result = os0.path.lexists(path2)                                        # STEP 46
os0.link(path2,path2)                                                   # STEP 47
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 48
bytes1 = 0                                                              # STEP 49
os0.link(path0,path0)                                                   # STEP 50
os0.close(fd0)                                                          # STEP 51
os0.rmdir(path1)                                                        # STEP 52
stat2 = os0.lstat(path1)                                                # STEP 53
stat3 = os0.stat(path1)                                                 # STEP 54
component1 = "phi"                                                      # STEP 55
bytes2 = 0                                                              # STEP 56
result = os0.path.abspath(path2)                                        # STEP 57
os0.path.getsize(path1)                                                 # STEP 58
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 59
os0.mkdir(path0)                                                        # STEP 60
os0.symlink(path0,path2)                                                # STEP 61
path2 += "/" + component1                                               # STEP 62
path4 = "/Volumes/ramdisk/test"                                         # STEP 63
os0.symlink(path2,path1)                                                # STEP 64
stat4 = os0.fstat(fd0)                                                  # STEP 65
os0.symlink(path1,path0)                                                # STEP 66
os0.rmdir(path2)                                                        # STEP 67
os0.remove(path1)                                                       # STEP 68
result = stat3.st_nlink                                                 # STEP 69
os0.mkdir(path1)                                                        # STEP 70
os0.path.getsize(path2)                                                 # STEP 71
str3 += " "                                                             # STEP 72
str1 += " "                                                             # STEP 73
file0 = opener0(path1,'w')                                              # STEP 74
bytes3 = 0                                                              # STEP 75
os0.mkdir(path1)                                                        # STEP 76
os0.write(fd0,str3)                                                     # STEP 77
result = stat3.st_nlink                                                 # STEP 78
os0.rmdir(path1)                                                        # STEP 79
os0.write(fd0,str2)                                                     # STEP 80
str1 = ""                                                               # STEP 81
os0.write(fd0,str2)                                                     # STEP 82
os0.rmdir(path1)                                                        # STEP 83
file0 = opener0(path1,'a')                                              # STEP 84
os0.rmdir(path2)                                                        # STEP 85
result = os0.path.exists(path2)                                         # STEP 86
result = os0.path.exists(path0)                                         # STEP 87
result = file0.read()                                                   # STEP 88
result = os0.path.islink(path0)                                         # STEP 89
os0.write(fd0,str4)                                                     # STEP 90
str4 += " "                                                             # STEP 91
result = os0.path.lexists(path0)                                        # STEP 92
result = os0.path.exists(path4)                                         # STEP 93
result = os0.path.exists(path1)                                         # STEP 94
stat4 = os0.lstat(path2)                                                # STEP 95
result = file0.read()                                                   # STEP 96
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106faa518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28293, in act563
    result = self.p_file[0].read()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1181 BRANCHES COVERED
907 STATEMENTS COVERED
