Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs='locsample.probs', normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=True, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5617.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['n']) == ([]) ",), <traceback object at 0x10a8442d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 94 steps

SAVING TEST AS failure.5617.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
component4 = "delta"                                                     # STEP 1
os0 = newFakeOS()                                                        # STEP 2
result = os0.path.exists(path3)                                          # STEP 3
bytes4 = 0                                                               # STEP 4
bytes3 = 0                                                               # STEP 5
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.symlink(path3,path3)                                                 # STEP 7
os0.symlink(path3,path2)                                                 # STEP 8
os0.symlink(path2,path2)                                                 # STEP 9
os0.symlink(path2,path2)                                                # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
os0.mkdir(path2)                                                        # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
result = os0.path.isfile(path3)                                         # STEP 14
result = os0.path.lexists(path3)                                        # STEP 15
result = os0.path.exists(path2)                                         # STEP 16
str1 = ""                                                               # STEP 17
file0 = opener0(path3)                                                  # STEP 18
path3 += "/" + component4                                               # STEP 19
result = os0.path.isfile(path3)                                         # STEP 20
result = os0.path.lexists(path3)                                        # STEP 21
os0.path.getsize(path3)                                                 # STEP 22
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 23
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 24
str4 = ""                                                               # STEP 25
str1 += 'n'                                                             # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
os0.rmdir(path3)                                                        # STEP 28
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 29
result = os0.path.exists(path2)                                         # STEP 30
result = os0.path.isfile(path3)                                         # STEP 31
component0 = "gamma"                                                    # STEP 32
result = os0.readlink(path3)                                            # STEP 33
path2 += "/" + component0                                               # STEP 34
os0.mkdir(path3)                                                        # STEP 35
component2 = "g"                                                        # STEP 36
file0 = opener0(path3)                                                  # STEP 37
result = os0.path.isdir(path3)                                          # STEP 38
os0.path.getsize(path3)                                                 # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
result = os0.path.isdir(path2)                                          # STEP 41
path2 += "/" + component4                                               # STEP 42
bytes2 = 0                                                              # STEP 43
result = os0.path.exists(path2)                                         # STEP 44
result = os0.read(fd0,bytes3)                                           # STEP 45
path1 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.readlink(path1)                                            # STEP 47
result = os0.read(fd0,bytes3)                                           # STEP 48
result = file0.readline()                                               # STEP 49
result = os0.path.isdir(path2)                                          # STEP 50
result = os0.path.isdir(path3)                                          # STEP 51
result = os0.path.lexists(path1)                                        # STEP 52
path3 += "/" + component4                                               # STEP 53
os0.symlink(path1,path2)                                                # STEP 54
stat0 = os0.fstat(fd0)                                                  # STEP 55
os0.write(fd0,str1)                                                     # STEP 56
os0.write(fd0,str4)                                                     # STEP 57
os0.path.getsize(path2)                                                 # STEP 58
os0.mkdir(path2)                                                        # STEP 59
file0.write(str4)                                                       # STEP 60
os0.mkdir(path2)                                                        # STEP 61
result = os0.read(fd0,bytes4)                                           # STEP 62
os0.rmdir(path3)                                                        # STEP 63
result = file0.readlines()                                              # STEP 64
result = os0.path.abspath(path1)                                        # STEP 65
stat4 = os0.fstat(fd0)                                                  # STEP 66
result = stat0.st_size                                                  # STEP 67
os0.rename(path2,path3)                                                 # STEP 68
result = file0.readline(bytes3)                                         # STEP 69
component3 = "d"                                                        # STEP 70
os0.rename(path2,path3)                                                 # STEP 71
str4 += 'p'                                                             # STEP 72
file0.flush()                                                           # STEP 73
file0.flush()                                                           # STEP 74
os0.path.getsize(path2)                                                 # STEP 75
os0.symlink(path2,path1)                                                # STEP 76
result = os0.path.abspath(path3)                                        # STEP 77
file0.write(str4)                                                       # STEP 78
file0.flush()                                                           # STEP 79
result = os0.path.exists(path1)                                         # STEP 80
os0.rename(path2,path3)                                                 # STEP 81
os0.rmdir(path2)                                                        # STEP 82
path3 = "/Volumes/ramdisk/test"                                         # STEP 83
result = os0.path.isfile(path2)                                         # STEP 84
os0.mkdir(path2)                                                        # STEP 85
os0.rename(path2,path3)                                                 # STEP 86
os0.rmdir(path2)                                                        # STEP 87
os0.write(fd0,str1)                                                     # STEP 88
path3 += "/" + component4                                               # STEP 89
os0.mkdir(path3)                                                        # STEP 90
path4 = "/Volumes/ramdisk/test"                                         # STEP 91
os0.path.getsize(path2)                                                 # STEP 92
result = file0.readlines()                                              # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['n']) == ([]) ",), <traceback object at 0x10a364368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10734c830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 39 steps

SAVING TEST AS failure.5617.test.1
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "delta"                                                     # STEP 0
os0 = newFakeOS()                                                        # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
bytes4 = 0                                                               # STEP 3
str4 = ""                                                                # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
file0 = opener0(path3,'w')                                               # STEP 6
bytes0 = 0                                                               # STEP 7
str4 += " "                                                              # STEP 8
path3 += "/" + component4                                                # STEP 9
result = os0.path.exists(path3)                                         # STEP 10
str4 += " "                                                             # STEP 11
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 12
os0.symlink(path3,path3)                                                # STEP 13
os0.remove(path3)                                                       # STEP 14
path2 = "/Volumes/ramdisk/test"                                         # STEP 15
result = os0.path.exists(path3)                                         # STEP 16
os0.close(fd0)                                                          # STEP 17
file0 = opener0(path3,'w')                                              # STEP 18
result = file0.read()                                                   # STEP 19
os0.link(path3,path3)                                                   # STEP 20
path3 += "/" + component4                                               # STEP 21
result = os0.read(fd0,bytes4)                                           # STEP 22
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 23
str4 += " "                                                             # STEP 24
os0.link(path2,path2)                                                   # STEP 25
os0.write(fd0,str4)                                                     # STEP 26
file0.truncate()                                                        # STEP 27
str4 += " "                                                             # STEP 28
file0.next()                                                            # STEP 29
os0.remove(path3)                                                       # STEP 30
os0.symlink(path3,path3)                                                # STEP 31
file0.next()                                                            # STEP 32
result = os0.path.islink(path3)                                         # STEP 33
result = os0.read(fd0,bytes4)                                           # STEP 34
stat3 = os0.stat(path3)                                                 # STEP 35
result = os0.path.islink(path2)                                         # STEP 36
result = os0.path.islink(path3)                                         # STEP 37
result = file0.read(bytes0)                                             # STEP 38
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1081e8290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 2 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x104c6cfc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 81 steps

SAVING TEST AS failure.5617.test.2
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str3 = ""                                                                # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str2 = ""                                                                # STEP 2
bytes1 = 0                                                               # STEP 3
bytes0 = 0                                                               # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
str0 = ""                                                                # STEP 6
result = os0.path.isabs(path0)                                           # STEP 7
str4 = ""                                                                # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.symlink(path0,path4)                                                # STEP 10
bytes2 = 0                                                              # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
result = os0.path.isdir(path0)                                          # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
path0 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.symlink(path4,path4)                                                # STEP 16
result = os0.path.isabs(path4)                                          # STEP 17
file0 = opener0(path0,'w')                                              # STEP 18
file0 = opener0(path0,'w')                                              # STEP 19
str1 = ""                                                               # STEP 20
os0.symlink(path0,path4)                                                # STEP 21
result = os0.path.isabs(path1)                                          # STEP 22
os0.symlink(path1,path1)                                                # STEP 23
result = os0.path.isabs(path1)                                          # STEP 24
file0 = opener0(path1)                                                  # STEP 25
bytes4 = 0                                                              # STEP 26
result = os0.path.isdir(path4)                                          # STEP 27
result = os0.path.isabs(path4)                                          # STEP 28
path0 = "/Volumes/ramdisk/test"                                         # STEP 29
bytes3 = 0                                                              # STEP 30
file0 = opener0(path1)                                                  # STEP 31
file0 = opener0(path0)                                                  # STEP 32
file0 = opener0(path0,'w')                                              # STEP 33
result = os0.path.isabs(path1)                                          # STEP 34
result = os0.path.isabs(path1)                                          # STEP 35
os0.symlink(path1,path1)                                                # STEP 36
os0.symlink(path0,path0)                                                # STEP 37
result = os0.path.isabs(path4)                                          # STEP 38
file0 = opener0(path4)                                                  # STEP 39
file0 = opener0(path0)                                                  # STEP 40
file0 = opener0(path4,'w')                                              # STEP 41
path2 = "/Volumes/ramdisk/test"                                         # STEP 42
file0 = opener0(path4)                                                  # STEP 43
result = os0.path.isdir(path4)                                          # STEP 44
os0.symlink(path1,path1)                                                # STEP 45
file0 = opener0(path1)                                                  # STEP 46
result = os0.path.isabs(path1)                                          # STEP 47
file0 = opener0(path2,'r')                                              # STEP 48
component1 = "h"                                                        # STEP 49
path2 += "/" + component1                                               # STEP 50
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 51
result = os0.path.isabs(path2)                                          # STEP 52
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
os0.symlink(path2,path1)                                                # STEP 54
component4 = "f"                                                        # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
os0.symlink(path1,path2)                                                # STEP 57
file0 = opener0(path1,'r')                                              # STEP 58
os0.rename(path2,path1)                                                 # STEP 59
os0.write(fd0,str0)                                                     # STEP 60
str0 = ""                                                               # STEP 61
stat3 = os0.lstat(path2)                                                # STEP 62
os0.close(fd0)                                                          # STEP 63
file0 = opener0(path1)                                                  # STEP 64
path0 += "/" + component4                                               # STEP 65
file0 = opener0(path2,'w')                                              # STEP 66
os0.rename(path2,path1)                                                 # STEP 67
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 68
file0.next()                                                            # STEP 69
os0.symlink(path0,path4)                                                # STEP 70
os0.symlink(path2,path0)                                                # STEP 71
file0.seek(bytes0)                                                      # STEP 72
os0.write(fd0,str0)                                                     # STEP 73
path3 = "/Volumes/ramdisk/test"                                         # STEP 74
component2 = "b"                                                        # STEP 75
path3 += "/" + component2                                               # STEP 76
os0.write(fd0,str2)                                                     # STEP 77
os0.rename(path2,path1)                                                 # STEP 78
os0.write(fd0,str0)                                                     # STEP 79
result = file0.readlines()                                              # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10847eef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 3 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1082cbea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
Original test has 52 steps

SAVING TEST AS failure.5617.test.3
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "d"                                                         # STEP 0
str3 = ""                                                                # STEP 1
component2 = "a"                                                         # STEP 2
str0 = ""                                                                # STEP 3
component4 = "a"                                                         # STEP 4
str2 = ""                                                                # STEP 5
str1 = ""                                                                # STEP 6
component3 = "h"                                                         # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path0 += "/" + component3                                                # STEP 9
path0 += "/" + component4                                               # STEP 10
str4 = ""                                                               # STEP 11
path0 += "/" + component3                                               # STEP 12
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
os0 = newFakeOS()                                                       # STEP 14
os0.makedirs(path0)                                                     # STEP 15
bytes4 = 0                                                              # STEP 16
bytes3 = 0                                                              # STEP 17
result = os0.path.dirname(path0)                                        # STEP 18
path0 += "/" + component2                                               # STEP 19
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 20
result = os0.read(fd0,bytes4)                                           # STEP 21
result = os0.read(fd0,bytes3)                                           # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
path4 = "/Volumes/ramdisk/test"                                         # STEP 24
result = os0.path.lexists(path0)                                        # STEP 25
result = sorted(os0.listdir(path3))                                     # STEP 26
stat3 = os0.lstat(path0)                                                # STEP 27
path3 += "/" + component2                                               # STEP 28
os0.rename(path0,path4)                                                 # STEP 29
path3 += "/" + component3                                               # STEP 30
os0.close(fd0)                                                          # STEP 31
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 32
result = os0.path.dirname(path0)                                        # STEP 33
stat4 = os0.lstat(path3)                                                # STEP 34
os0.makedirs(path0)                                                     # STEP 35
result = os0.read(fd0,bytes3)                                           # STEP 36
result = sorted(os0.listdir(path4))                                     # STEP 37
opener0 = newFakeOpener(os0)                                            # STEP 38
file0 = opener0(path0)                                                  # STEP 39
os0.link(path0,path4)                                                   # STEP 40
os0.link(path4,path0)                                                   # STEP 41
result = os0.path.dirname(path0)                                        # STEP 42
os0.link(path0,path3)                                                   # STEP 43
path3 += "/" + component4                                               # STEP 44
os0.close(fd0)                                                          # STEP 45
path0 = "/Volumes/ramdisk/test"                                         # STEP 46
result = file0.readlines()                                              # STEP 47
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 48
bytes0 = 0                                                              # STEP 49
os0.rmdir(path3)                                                        # STEP 50
result = file0.read(bytes4)                                             # STEP 51
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1082eaf80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 4 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1092b4ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28500, in act566
    assert (raised == None) == (refRaised == None)
Original test has 76 steps

SAVING TEST AS failure.5617.test.4
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
str4 = ""                                                                # STEP 1
str0 = ""                                                                # STEP 2
bytes2 = 0                                                               # STEP 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.isfile(path0)                                          # STEP 5
os0.remove(path0)                                                        # STEP 6
os0.remove(path0)                                                        # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path1 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.lexists(path1)                                        # STEP 10
result = os0.path.abspath(path0)                                        # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
str3 = ""                                                               # STEP 13
component0 = "b"                                                        # STEP 14
bytes1 = 0                                                              # STEP 15
result = os0.path.lexists(path0)                                        # STEP 16
result = os0.path.lexists(path1)                                        # STEP 17
result = os0.path.lexists(path1)                                        # STEP 18
result = os0.readlink(path1)                                            # STEP 19
result = os0.path.isfile(path0)                                         # STEP 20
result = os0.path.isfile(path1)                                         # STEP 21
opener0 = newFakeOpener(os0)                                            # STEP 22
result = os0.path.exists(path0)                                         # STEP 23
component3 = "epsilon"                                                  # STEP 24
path0 += "/" + component3                                               # STEP 25
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 26
os0.write(fd0,str4)                                                     # STEP 27
os0.close(fd0)                                                          # STEP 28
file0 = opener0(path0,'r')                                              # STEP 29
component4 = "epsilon"                                                  # STEP 30
result = os0.path.exists(path1)                                         # STEP 31
result = os0.path.islink(path1)                                         # STEP 32
result = file0.read(bytes1)                                             # STEP 33
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 34
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
result = os0.path.abspath(path0)                                        # STEP 36
result = file0.readline()                                               # STEP 37
result = os0.path.isfile(path0)                                         # STEP 38
result = file0.read(bytes2)                                             # STEP 39
result = os0.readlink(path0)                                            # STEP 40
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
result = os0.readlink(path1)                                            # STEP 43
os0.remove(path3)                                                       # STEP 44
component1 = "epsilon"                                                  # STEP 45
result = os0.path.isfile(path3)                                         # STEP 46
file0.write(str4)                                                       # STEP 47
str1 = ""                                                               # STEP 48
path0 += "/" + component0                                               # STEP 49
path4 = "/Volumes/ramdisk/test"                                         # STEP 50
file0.write(str4)                                                       # STEP 51
os0.close(fd0)                                                          # STEP 52
result = os0.path.islink(path3)                                         # STEP 53
result = os0.path.abspath(path3)                                        # STEP 54
stat4 = os0.stat(path0)                                                 # STEP 55
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 56
result = file0.readline()                                               # STEP 57
os0.write(fd0,str4)                                                     # STEP 58
path1 = "/Volumes/ramdisk/test"                                         # STEP 59
stat4 = os0.lstat(path0)                                                # STEP 60
result = os0.readlink(path1)                                            # STEP 61
os0.write(fd0,str1)                                                     # STEP 62
os0.write(fd0,str1)                                                     # STEP 63
path0 = "/Volumes/ramdisk/test"                                         # STEP 64
file0.seek(bytes1)                                                      # STEP 65
path0 += "/" + component3                                               # STEP 66
bytes0 = 0                                                              # STEP 67
str4 = ""                                                               # STEP 68
result = os0.path.lexists(path4)                                        # STEP 69
stat1 = os0.lstat(path0)                                                # STEP 70
str1 = ""                                                               # STEP 71
os0.remove(path0)                                                       # STEP 72
result = os0.path.abspath(path0)                                        # STEP 73
result = os0.readlink(path3)                                            # STEP 74
result = file0.read(bytes2)                                             # STEP 75
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10950c368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28500, in act566
    assert (raised == None) == (refRaised == None)
FAILURE IS NEW, STORING; NOW 5 DISTINCT FAILURES
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10a60e170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 32 steps

SAVING TEST AS failure.5617.test.5
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
component4 = "lambda"                                                    # STEP 1
component3 = "e"                                                         # STEP 2
os0 = newFakeOS()                                                        # STEP 3
component1 = "b"                                                         # STEP 4
str2 = ""                                                                # STEP 5
str2 += " "                                                              # STEP 6
component2 = "gamma"                                                     # STEP 7
bytes4 = 0                                                               # STEP 8
component0 = "gamma"                                                     # STEP 9
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
path2 += "/" + component1                                               # STEP 12
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 13
os0.close(fd0)                                                          # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
file0 = opener0(path2,'w')                                              # STEP 16
os0.link(path2,path3)                                                   # STEP 17
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 18
os0.path.getsize(path2)                                                 # STEP 19
os0.remove(path3)                                                       # STEP 20
file0.seek(bytes4)                                                      # STEP 21
result = os0.readlink(path2)                                            # STEP 22
result = os0.path.isabs(path3)                                          # STEP 23
os0.link(path2,path3)                                                   # STEP 24
file0.flush()                                                           # STEP 25
file0.truncate()                                                        # STEP 26
result = os0.read(fd0,bytes2)                                           # STEP 27
os0.remove(path2)                                                       # STEP 28
file0.truncate()                                                        # STEP 29
os0.link(path3,path3)                                                   # STEP 30
result = file0.readlines()                                              # STEP 31
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106984cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 6 DISTINCT FAILURES
TEST #179 STEP #62 (0:00:30.000311) Sat Jul 22 06:50:29 2017 [ 890 stmts 1160 branches ] 17636 TOTAL ACTIONS (587.860569842/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 93
STOPPING TESTING DUE TO TIMEOUT
42.4005945745 PERCENT COVERED
60.3595120907 TOTAL RUNTIME
359 EXECUTED
35667 TOTAL TEST OPERATIONS
42.1931862831 TIME SPENT EXECUTING TEST OPERATIONS
15.6387987137 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0258038043976 TIME SPENT CHECKING PROPERTIES
42.2189900875 TOTAL TIME SPENT RUNNING SUT
1.08033895493 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
6 FAILED
0 REPEATS OF FAILURES
6 ACTUAL DISTINCT FAILURES

FAILURE 0
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
component4 = "delta"                                                     # STEP 1
os0 = newFakeOS()                                                        # STEP 2
result = os0.path.exists(path3)                                          # STEP 3
bytes4 = 0                                                               # STEP 4
bytes3 = 0                                                               # STEP 5
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
os0.symlink(path3,path3)                                                 # STEP 7
os0.symlink(path3,path2)                                                 # STEP 8
os0.symlink(path2,path2)                                                 # STEP 9
os0.symlink(path2,path2)                                                # STEP 10
opener0 = newFakeOpener(os0)                                            # STEP 11
os0.mkdir(path2)                                                        # STEP 12
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
result = os0.path.isfile(path3)                                         # STEP 14
result = os0.path.lexists(path3)                                        # STEP 15
result = os0.path.exists(path2)                                         # STEP 16
str1 = ""                                                               # STEP 17
file0 = opener0(path3)                                                  # STEP 18
path3 += "/" + component4                                               # STEP 19
result = os0.path.isfile(path3)                                         # STEP 20
result = os0.path.lexists(path3)                                        # STEP 21
os0.path.getsize(path3)                                                 # STEP 22
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 23
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 24
str4 = ""                                                               # STEP 25
str1 += 'n'                                                             # STEP 26
result = os0.path.lexists(path2)                                        # STEP 27
os0.rmdir(path3)                                                        # STEP 28
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 29
result = os0.path.exists(path2)                                         # STEP 30
result = os0.path.isfile(path3)                                         # STEP 31
component0 = "gamma"                                                    # STEP 32
result = os0.readlink(path3)                                            # STEP 33
path2 += "/" + component0                                               # STEP 34
os0.mkdir(path3)                                                        # STEP 35
component2 = "g"                                                        # STEP 36
file0 = opener0(path3)                                                  # STEP 37
result = os0.path.isdir(path3)                                          # STEP 38
os0.path.getsize(path3)                                                 # STEP 39
os0.write(fd0,str1)                                                     # STEP 40
result = os0.path.isdir(path2)                                          # STEP 41
path2 += "/" + component4                                               # STEP 42
bytes2 = 0                                                              # STEP 43
result = os0.path.exists(path2)                                         # STEP 44
result = os0.read(fd0,bytes3)                                           # STEP 45
path1 = "/Volumes/ramdisk/test"                                         # STEP 46
result = os0.readlink(path1)                                            # STEP 47
result = os0.read(fd0,bytes3)                                           # STEP 48
result = file0.readline()                                               # STEP 49
result = os0.path.isdir(path2)                                          # STEP 50
result = os0.path.isdir(path3)                                          # STEP 51
result = os0.path.lexists(path1)                                        # STEP 52
path3 += "/" + component4                                               # STEP 53
os0.symlink(path1,path2)                                                # STEP 54
stat0 = os0.fstat(fd0)                                                  # STEP 55
os0.write(fd0,str1)                                                     # STEP 56
os0.write(fd0,str4)                                                     # STEP 57
os0.path.getsize(path2)                                                 # STEP 58
os0.mkdir(path2)                                                        # STEP 59
file0.write(str4)                                                       # STEP 60
os0.mkdir(path2)                                                        # STEP 61
result = os0.read(fd0,bytes4)                                           # STEP 62
os0.rmdir(path3)                                                        # STEP 63
result = file0.readlines()                                              # STEP 64
result = os0.path.abspath(path1)                                        # STEP 65
stat4 = os0.fstat(fd0)                                                  # STEP 66
result = stat0.st_size                                                  # STEP 67
os0.rename(path2,path3)                                                 # STEP 68
result = file0.readline(bytes3)                                         # STEP 69
component3 = "d"                                                        # STEP 70
os0.rename(path2,path3)                                                 # STEP 71
str4 += 'p'                                                             # STEP 72
file0.flush()                                                           # STEP 73
file0.flush()                                                           # STEP 74
os0.path.getsize(path2)                                                 # STEP 75
os0.symlink(path2,path1)                                                # STEP 76
result = os0.path.abspath(path3)                                        # STEP 77
file0.write(str4)                                                       # STEP 78
file0.flush()                                                           # STEP 79
result = os0.path.exists(path1)                                         # STEP 80
os0.rename(path2,path3)                                                 # STEP 81
os0.rmdir(path2)                                                        # STEP 82
path3 = "/Volumes/ramdisk/test"                                         # STEP 83
result = os0.path.isfile(path2)                                         # STEP 84
os0.mkdir(path2)                                                        # STEP 85
os0.rename(path2,path3)                                                 # STEP 86
os0.rmdir(path2)                                                        # STEP 87
os0.write(fd0,str1)                                                     # STEP 88
path3 += "/" + component4                                               # STEP 89
os0.mkdir(path3)                                                        # STEP 90
path4 = "/Volumes/ramdisk/test"                                         # STEP 91
os0.path.getsize(path2)                                                 # STEP 92
result = file0.readlines()                                              # STEP 93
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(" (['n']) == ([]) ",), <traceback object at 0x10a364368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 29028, in act575
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE 1
component4 = "delta"                                                     # STEP 0
os0 = newFakeOS()                                                        # STEP 1
opener0 = newFakeOpener(os0)                                             # STEP 2
bytes4 = 0                                                               # STEP 3
str4 = ""                                                                # STEP 4
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
file0 = opener0(path3,'w')                                               # STEP 6
bytes0 = 0                                                               # STEP 7
str4 += " "                                                              # STEP 8
path3 += "/" + component4                                                # STEP 9
result = os0.path.exists(path3)                                         # STEP 10
str4 += " "                                                             # STEP 11
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 12
os0.symlink(path3,path3)                                                # STEP 13
os0.remove(path3)                                                       # STEP 14
path2 = "/Volumes/ramdisk/test"                                         # STEP 15
result = os0.path.exists(path3)                                         # STEP 16
os0.close(fd0)                                                          # STEP 17
file0 = opener0(path3,'w')                                              # STEP 18
result = file0.read()                                                   # STEP 19
os0.link(path3,path3)                                                   # STEP 20
path3 += "/" + component4                                               # STEP 21
result = os0.read(fd0,bytes4)                                           # STEP 22
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 23
str4 += " "                                                             # STEP 24
os0.link(path2,path2)                                                   # STEP 25
os0.write(fd0,str4)                                                     # STEP 26
file0.truncate()                                                        # STEP 27
str4 += " "                                                             # STEP 28
file0.next()                                                            # STEP 29
os0.remove(path3)                                                       # STEP 30
os0.symlink(path3,path3)                                                # STEP 31
file0.next()                                                            # STEP 32
result = os0.path.islink(path3)                                         # STEP 33
result = os0.read(fd0,bytes4)                                           # STEP 34
stat3 = os0.stat(path3)                                                 # STEP 35
result = os0.path.islink(path2)                                         # STEP 36
result = os0.path.islink(path3)                                         # STEP 37
result = file0.read(bytes0)                                             # STEP 38
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x1081e8290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28348, in act564
    result = self.p_file[0].read(self.p_bytes[0])
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 2
str3 = ""                                                                # STEP 0
os0 = newFakeOS()                                                        # STEP 1
str2 = ""                                                                # STEP 2
bytes1 = 0                                                               # STEP 3
bytes0 = 0                                                               # STEP 4
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
str0 = ""                                                                # STEP 6
result = os0.path.isabs(path0)                                           # STEP 7
str4 = ""                                                                # STEP 8
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
os0.symlink(path0,path4)                                                # STEP 10
bytes2 = 0                                                              # STEP 11
opener0 = newFakeOpener(os0)                                            # STEP 12
result = os0.path.isdir(path0)                                          # STEP 13
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
path0 = "/Volumes/ramdisk/test"                                         # STEP 15
os0.symlink(path4,path4)                                                # STEP 16
result = os0.path.isabs(path4)                                          # STEP 17
file0 = opener0(path0,'w')                                              # STEP 18
file0 = opener0(path0,'w')                                              # STEP 19
str1 = ""                                                               # STEP 20
os0.symlink(path0,path4)                                                # STEP 21
result = os0.path.isabs(path1)                                          # STEP 22
os0.symlink(path1,path1)                                                # STEP 23
result = os0.path.isabs(path1)                                          # STEP 24
file0 = opener0(path1)                                                  # STEP 25
bytes4 = 0                                                              # STEP 26
result = os0.path.isdir(path4)                                          # STEP 27
result = os0.path.isabs(path4)                                          # STEP 28
path0 = "/Volumes/ramdisk/test"                                         # STEP 29
bytes3 = 0                                                              # STEP 30
file0 = opener0(path1)                                                  # STEP 31
file0 = opener0(path0)                                                  # STEP 32
file0 = opener0(path0,'w')                                              # STEP 33
result = os0.path.isabs(path1)                                          # STEP 34
result = os0.path.isabs(path1)                                          # STEP 35
os0.symlink(path1,path1)                                                # STEP 36
os0.symlink(path0,path0)                                                # STEP 37
result = os0.path.isabs(path4)                                          # STEP 38
file0 = opener0(path4)                                                  # STEP 39
file0 = opener0(path0)                                                  # STEP 40
file0 = opener0(path4,'w')                                              # STEP 41
path2 = "/Volumes/ramdisk/test"                                         # STEP 42
file0 = opener0(path4)                                                  # STEP 43
result = os0.path.isdir(path4)                                          # STEP 44
os0.symlink(path1,path1)                                                # STEP 45
file0 = opener0(path1)                                                  # STEP 46
result = os0.path.isabs(path1)                                          # STEP 47
file0 = opener0(path2,'r')                                              # STEP 48
component1 = "h"                                                        # STEP 49
path2 += "/" + component1                                               # STEP 50
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 51
result = os0.path.isabs(path2)                                          # STEP 52
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
os0.symlink(path2,path1)                                                # STEP 54
component4 = "f"                                                        # STEP 55
result = os0.path.isabs(path4)                                          # STEP 56
os0.symlink(path1,path2)                                                # STEP 57
file0 = opener0(path1,'r')                                              # STEP 58
os0.rename(path2,path1)                                                 # STEP 59
os0.write(fd0,str0)                                                     # STEP 60
str0 = ""                                                               # STEP 61
stat3 = os0.lstat(path2)                                                # STEP 62
os0.close(fd0)                                                          # STEP 63
file0 = opener0(path1)                                                  # STEP 64
path0 += "/" + component4                                               # STEP 65
file0 = opener0(path2,'w')                                              # STEP 66
os0.rename(path2,path1)                                                 # STEP 67
fd0 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 68
file0.next()                                                            # STEP 69
os0.symlink(path0,path4)                                                # STEP 70
os0.symlink(path2,path0)                                                # STEP 71
file0.seek(bytes0)                                                      # STEP 72
os0.write(fd0,str0)                                                     # STEP 73
path3 = "/Volumes/ramdisk/test"                                         # STEP 74
component2 = "b"                                                        # STEP 75
path3 += "/" + component2                                               # STEP 76
os0.write(fd0,str2)                                                     # STEP 77
os0.rename(path2,path1)                                                 # STEP 78
os0.write(fd0,str0)                                                     # STEP 79
result = file0.readlines()                                              # STEP 80
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10847eef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE 3
component1 = "d"                                                         # STEP 0
str3 = ""                                                                # STEP 1
component2 = "a"                                                         # STEP 2
str0 = ""                                                                # STEP 3
component4 = "a"                                                         # STEP 4
str2 = ""                                                                # STEP 5
str1 = ""                                                                # STEP 6
component3 = "h"                                                         # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path0 += "/" + component3                                                # STEP 9
path0 += "/" + component4                                               # STEP 10
str4 = ""                                                               # STEP 11
path0 += "/" + component3                                               # STEP 12
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
os0 = newFakeOS()                                                       # STEP 14
os0.makedirs(path0)                                                     # STEP 15
bytes4 = 0                                                              # STEP 16
bytes3 = 0                                                              # STEP 17
result = os0.path.dirname(path0)                                        # STEP 18
path0 += "/" + component2                                               # STEP 19
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 20
result = os0.read(fd0,bytes4)                                           # STEP 21
result = os0.read(fd0,bytes3)                                           # STEP 22
path3 = "/Volumes/ramdisk/test"                                         # STEP 23
path4 = "/Volumes/ramdisk/test"                                         # STEP 24
result = os0.path.lexists(path0)                                        # STEP 25
result = sorted(os0.listdir(path3))                                     # STEP 26
stat3 = os0.lstat(path0)                                                # STEP 27
path3 += "/" + component2                                               # STEP 28
os0.rename(path0,path4)                                                 # STEP 29
path3 += "/" + component3                                               # STEP 30
os0.close(fd0)                                                          # STEP 31
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 32
result = os0.path.dirname(path0)                                        # STEP 33
stat4 = os0.lstat(path3)                                                # STEP 34
os0.makedirs(path0)                                                     # STEP 35
result = os0.read(fd0,bytes3)                                           # STEP 36
result = sorted(os0.listdir(path4))                                     # STEP 37
opener0 = newFakeOpener(os0)                                            # STEP 38
file0 = opener0(path0)                                                  # STEP 39
os0.link(path0,path4)                                                   # STEP 40
os0.link(path4,path0)                                                   # STEP 41
result = os0.path.dirname(path0)                                        # STEP 42
os0.link(path0,path3)                                                   # STEP 43
path3 += "/" + component4                                               # STEP 44
os0.close(fd0)                                                          # STEP 45
path0 = "/Volumes/ramdisk/test"                                         # STEP 46
result = file0.readlines()                                              # STEP 47
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 48
bytes0 = 0                                                              # STEP 49
os0.rmdir(path3)                                                        # STEP 50
result = file0.read(bytes4)                                             # STEP 51
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1082eaf80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28620, in act568
    assert (raised == None) == (refRaised == None)
FAILURE 4
os0 = newFakeOS()                                                        # STEP 0
str4 = ""                                                                # STEP 1
str0 = ""                                                                # STEP 2
bytes2 = 0                                                               # STEP 3
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
result = os0.path.isfile(path0)                                          # STEP 5
os0.remove(path0)                                                        # STEP 6
os0.remove(path0)                                                        # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
path1 = "/Volumes/ramdisk/test"                                          # STEP 9
result = os0.path.lexists(path1)                                        # STEP 10
result = os0.path.abspath(path0)                                        # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
str3 = ""                                                               # STEP 13
component0 = "b"                                                        # STEP 14
bytes1 = 0                                                              # STEP 15
result = os0.path.lexists(path0)                                        # STEP 16
result = os0.path.lexists(path1)                                        # STEP 17
result = os0.path.lexists(path1)                                        # STEP 18
result = os0.readlink(path1)                                            # STEP 19
result = os0.path.isfile(path0)                                         # STEP 20
result = os0.path.isfile(path1)                                         # STEP 21
opener0 = newFakeOpener(os0)                                            # STEP 22
result = os0.path.exists(path0)                                         # STEP 23
component3 = "epsilon"                                                  # STEP 24
path0 += "/" + component3                                               # STEP 25
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 26
os0.write(fd0,str4)                                                     # STEP 27
os0.close(fd0)                                                          # STEP 28
file0 = opener0(path0,'r')                                              # STEP 29
component4 = "epsilon"                                                  # STEP 30
result = os0.path.exists(path1)                                         # STEP 31
result = os0.path.islink(path1)                                         # STEP 32
result = file0.read(bytes1)                                             # STEP 33
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 34
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
result = os0.path.abspath(path0)                                        # STEP 36
result = file0.readline()                                               # STEP 37
result = os0.path.isfile(path0)                                         # STEP 38
result = file0.read(bytes2)                                             # STEP 39
result = os0.readlink(path0)                                            # STEP 40
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
result = os0.path.lexists(path0)                                        # STEP 42
result = os0.readlink(path1)                                            # STEP 43
os0.remove(path3)                                                       # STEP 44
component1 = "epsilon"                                                  # STEP 45
result = os0.path.isfile(path3)                                         # STEP 46
file0.write(str4)                                                       # STEP 47
str1 = ""                                                               # STEP 48
path0 += "/" + component0                                               # STEP 49
path4 = "/Volumes/ramdisk/test"                                         # STEP 50
file0.write(str4)                                                       # STEP 51
os0.close(fd0)                                                          # STEP 52
result = os0.path.islink(path3)                                         # STEP 53
result = os0.path.abspath(path3)                                        # STEP 54
stat4 = os0.stat(path0)                                                 # STEP 55
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 56
result = file0.readline()                                               # STEP 57
os0.write(fd0,str4)                                                     # STEP 58
path1 = "/Volumes/ramdisk/test"                                         # STEP 59
stat4 = os0.lstat(path0)                                                # STEP 60
result = os0.readlink(path1)                                            # STEP 61
os0.write(fd0,str1)                                                     # STEP 62
os0.write(fd0,str1)                                                     # STEP 63
path0 = "/Volumes/ramdisk/test"                                         # STEP 64
file0.seek(bytes1)                                                      # STEP 65
path0 += "/" + component3                                               # STEP 66
bytes0 = 0                                                              # STEP 67
str4 = ""                                                               # STEP 68
result = os0.path.lexists(path4)                                        # STEP 69
stat1 = os0.lstat(path0)                                                # STEP 70
str1 = ""                                                               # STEP 71
os0.remove(path0)                                                       # STEP 72
result = os0.path.abspath(path0)                                        # STEP 73
result = os0.readlink(path3)                                            # STEP 74
result = file0.read(bytes2)                                             # STEP 75
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10950c368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28500, in act566
    assert (raised == None) == (refRaised == None)
FAILURE 5
bytes2 = 0                                                               # STEP 0
component4 = "lambda"                                                    # STEP 1
component3 = "e"                                                         # STEP 2
os0 = newFakeOS()                                                        # STEP 3
component1 = "b"                                                         # STEP 4
str2 = ""                                                                # STEP 5
str2 += " "                                                              # STEP 6
component2 = "gamma"                                                     # STEP 7
bytes4 = 0                                                               # STEP 8
component0 = "gamma"                                                     # STEP 9
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
path2 += "/" + component1                                               # STEP 12
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 13
os0.close(fd0)                                                          # STEP 14
opener0 = newFakeOpener(os0)                                            # STEP 15
file0 = opener0(path2,'w')                                              # STEP 16
os0.link(path2,path3)                                                   # STEP 17
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 18
os0.path.getsize(path2)                                                 # STEP 19
os0.remove(path3)                                                       # STEP 20
file0.seek(bytes4)                                                      # STEP 21
result = os0.readlink(path2)                                            # STEP 22
result = os0.path.isabs(path3)                                          # STEP 23
os0.link(path2,path3)                                                   # STEP 24
file0.flush()                                                           # STEP 25
file0.truncate()                                                        # STEP 26
result = os0.read(fd0,bytes2)                                           # STEP 27
os0.remove(path2)                                                       # STEP 28
file0.truncate()                                                        # STEP 29
os0.link(path3,path3)                                                   # STEP 30
result = file0.readlines()                                              # STEP 31
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x106984cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28999, in act575
    result = self.p_file[0].readlines()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1172 BRANCHES COVERED
899 STATEMENTS COVERED
