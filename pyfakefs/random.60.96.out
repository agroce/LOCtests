Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.5925.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
TEST #435 STEP #75 (0:00:30.000496) Sat Jul 22 08:31:57 2017 [ 898 stmts 1168 branches ] 43475 TOTAL ACTIONS (1449.14271182/s)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (e klikdfsgbjoxeiyin) == () ',), <traceback object at 0x10387ab90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 99 steps

SAVING TEST AS failure.5925.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "epsilon"                                                   # STEP 0
component2 = "beta"                                                      # STEP 1
component3 = "lambda"                                                    # STEP 2
str0 = ""                                                                # STEP 3
str0 += 'r'                                                              # STEP 4
str0 += 'w'                                                              # STEP 5
component0 = "omega"                                                     # STEP 6
component4 = "c"                                                         # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
str0 += " "                                                              # STEP 9
str0 += 'k'                                                             # STEP 10
os0 = newFakeOS()                                                       # STEP 11
bytes0 = 0                                                              # STEP 12
str2 = ""                                                               # STEP 13
os0.symlink(path0,path0)                                                # STEP 14
path0 += "/" + component1                                               # STEP 15
result = os0.readlink(path0)                                            # STEP 16
str0 += " "                                                             # STEP 17
str0 += 'q'                                                             # STEP 18
str2 += 'e'                                                             # STEP 19
str2 += " "                                                             # STEP 20
str2 += 'k'                                                             # STEP 21
str0 += 'v'                                                             # STEP 22
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 23
str0 += 't'                                                             # STEP 24
component1 = "beta"                                                     # STEP 25
str0 += " "                                                             # STEP 26
stat4 = os0.fstat(fd0)                                                  # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
result = os0.path.dirname(path0)                                        # STEP 29
os0.write(fd0,str0)                                                     # STEP 30
str2 += 'l'                                                             # STEP 31
str0 += 'z'                                                             # STEP 32
stat0 = os0.stat(path0)                                                 # STEP 33
bytes2 = 0                                                              # STEP 34
str0 += 'g'                                                             # STEP 35
str0 = ""                                                               # STEP 36
str2 += 'i'                                                             # STEP 37
stat3 = os0.stat(path0)                                                 # STEP 38
str2 += 'k'                                                             # STEP 39
str2 += 'd'                                                             # STEP 40
str2 += 'f'                                                             # STEP 41
file0 = opener0(path0,'r')                                              # STEP 42
str2 += 's'                                                             # STEP 43
path0 += "/" + component4                                               # STEP 44
result = file0.readline(bytes2)                                         # STEP 45
result = file0.read()                                                   # STEP 46
str2 += 'g'                                                             # STEP 47
component4 = "e"                                                        # STEP 48
str0 += 'j'                                                             # STEP 49
str2 += 'b'                                                             # STEP 50
str4 = ""                                                               # STEP 51
str2 += 'j'                                                             # STEP 52
str2 += 'o'                                                             # STEP 53
str0 += 'd'                                                             # STEP 54
str2 += 'x'                                                             # STEP 55
result = os0.path.islink(path0)                                         # STEP 56
result = os0.path.isfile(path0)                                         # STEP 57
os0.path.getsize(path0)                                                 # STEP 58
str2 += 'e'                                                             # STEP 59
result = os0.path.lexists(path0)                                        # STEP 60
str1 = ""                                                               # STEP 61
str0 += 'u'                                                             # STEP 62
result = os0.path.isabs(path0)                                          # STEP 63
stat1 = os0.fstat(fd0)                                                  # STEP 64
str4 += 'w'                                                             # STEP 65
file0.write(str0)                                                       # STEP 66
str1 += 's'                                                             # STEP 67
result = file0.readlines()                                              # STEP 68
str2 += 'i'                                                             # STEP 69
result = os0.read(fd0,bytes2)                                           # STEP 70
str1 += 'o'                                                             # STEP 71
path0 += "/" + component0                                               # STEP 72
component0 = "g"                                                        # STEP 73
str0 += 's'                                                             # STEP 74
str2 += 'y'                                                             # STEP 75
result = file0.readline(bytes2)                                         # STEP 76
str0 += 'f'                                                             # STEP 77
str2 += 'i'                                                             # STEP 78
str4 += 's'                                                             # STEP 79
str1 += 'g'                                                             # STEP 80
str4 += 'l'                                                             # STEP 81
str1 += 'x'                                                             # STEP 82
str2 += 'n'                                                             # STEP 83
os0.remove(path0)                                                       # STEP 84
str1 += 'l'                                                             # STEP 85
os0.write(fd0,str2)                                                     # STEP 86
result = os0.path.abspath(path0)                                        # STEP 87
str4 += 'v'                                                             # STEP 88
str2 = ""                                                               # STEP 89
os0.rmdir(path0)                                                        # STEP 90
str2 += 'y'                                                             # STEP 91
result = stat4.st_size                                                  # STEP 92
str4 += 'b'                                                             # STEP 93
os0.link(path0,path0)                                                   # STEP 94
str0 += 'l'                                                             # STEP 95
str2 += 'q'                                                             # STEP 96
result = stat1.st_size                                                  # STEP 97
result = file0.readline()                                               # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (e klikdfsgbjoxeiyin) == () ',), <traceback object at 0x108884b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 35
STOPPING TESTING DUE TO TIMEOUT
42.735042735 PERCENT COVERED
60.3296000957 TOTAL RUNTIME
888 EXECUTED
88734 TOTAL TEST OPERATIONS
52.4805865288 TIME SPENT EXECUTING TEST OPERATIONS
4.15685248375 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0535936355591 TIME SPENT CHECKING PROPERTIES
52.5341801643 TOTAL TIME SPENT RUNNING SUT
2.59529566765 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component1 = "epsilon"                                                   # STEP 0
component2 = "beta"                                                      # STEP 1
component3 = "lambda"                                                    # STEP 2
str0 = ""                                                                # STEP 3
str0 += 'r'                                                              # STEP 4
str0 += 'w'                                                              # STEP 5
component0 = "omega"                                                     # STEP 6
component4 = "c"                                                         # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
str0 += " "                                                              # STEP 9
str0 += 'k'                                                             # STEP 10
os0 = newFakeOS()                                                       # STEP 11
bytes0 = 0                                                              # STEP 12
str2 = ""                                                               # STEP 13
os0.symlink(path0,path0)                                                # STEP 14
path0 += "/" + component1                                               # STEP 15
result = os0.readlink(path0)                                            # STEP 16
str0 += " "                                                             # STEP 17
str0 += 'q'                                                             # STEP 18
str2 += 'e'                                                             # STEP 19
str2 += " "                                                             # STEP 20
str2 += 'k'                                                             # STEP 21
str0 += 'v'                                                             # STEP 22
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 23
str0 += 't'                                                             # STEP 24
component1 = "beta"                                                     # STEP 25
str0 += " "                                                             # STEP 26
stat4 = os0.fstat(fd0)                                                  # STEP 27
opener0 = newFakeOpener(os0)                                            # STEP 28
result = os0.path.dirname(path0)                                        # STEP 29
os0.write(fd0,str0)                                                     # STEP 30
str2 += 'l'                                                             # STEP 31
str0 += 'z'                                                             # STEP 32
stat0 = os0.stat(path0)                                                 # STEP 33
bytes2 = 0                                                              # STEP 34
str0 += 'g'                                                             # STEP 35
str0 = ""                                                               # STEP 36
str2 += 'i'                                                             # STEP 37
stat3 = os0.stat(path0)                                                 # STEP 38
str2 += 'k'                                                             # STEP 39
str2 += 'd'                                                             # STEP 40
str2 += 'f'                                                             # STEP 41
file0 = opener0(path0,'r')                                              # STEP 42
str2 += 's'                                                             # STEP 43
path0 += "/" + component4                                               # STEP 44
result = file0.readline(bytes2)                                         # STEP 45
result = file0.read()                                                   # STEP 46
str2 += 'g'                                                             # STEP 47
component4 = "e"                                                        # STEP 48
str0 += 'j'                                                             # STEP 49
str2 += 'b'                                                             # STEP 50
str4 = ""                                                               # STEP 51
str2 += 'j'                                                             # STEP 52
str2 += 'o'                                                             # STEP 53
str0 += 'd'                                                             # STEP 54
str2 += 'x'                                                             # STEP 55
result = os0.path.islink(path0)                                         # STEP 56
result = os0.path.isfile(path0)                                         # STEP 57
os0.path.getsize(path0)                                                 # STEP 58
str2 += 'e'                                                             # STEP 59
result = os0.path.lexists(path0)                                        # STEP 60
str1 = ""                                                               # STEP 61
str0 += 'u'                                                             # STEP 62
result = os0.path.isabs(path0)                                          # STEP 63
stat1 = os0.fstat(fd0)                                                  # STEP 64
str4 += 'w'                                                             # STEP 65
file0.write(str0)                                                       # STEP 66
str1 += 's'                                                             # STEP 67
result = file0.readlines()                                              # STEP 68
str2 += 'i'                                                             # STEP 69
result = os0.read(fd0,bytes2)                                           # STEP 70
str1 += 'o'                                                             # STEP 71
path0 += "/" + component0                                               # STEP 72
component0 = "g"                                                        # STEP 73
str0 += 's'                                                             # STEP 74
str2 += 'y'                                                             # STEP 75
result = file0.readline(bytes2)                                         # STEP 76
str0 += 'f'                                                             # STEP 77
str2 += 'i'                                                             # STEP 78
str4 += 's'                                                             # STEP 79
str1 += 'g'                                                             # STEP 80
str4 += 'l'                                                             # STEP 81
str1 += 'x'                                                             # STEP 82
str2 += 'n'                                                             # STEP 83
os0.remove(path0)                                                       # STEP 84
str1 += 'l'                                                             # STEP 85
os0.write(fd0,str2)                                                     # STEP 86
result = os0.path.abspath(path0)                                        # STEP 87
str4 += 'v'                                                             # STEP 88
str2 = ""                                                               # STEP 89
os0.rmdir(path0)                                                        # STEP 90
str2 += 'y'                                                             # STEP 91
result = stat4.st_size                                                  # STEP 92
str4 += 'b'                                                             # STEP 93
os0.link(path0,path0)                                                   # STEP 94
str0 += 'l'                                                             # STEP 95
str2 += 'q'                                                             # STEP 96
result = stat1.st_size                                                  # STEP 97
result = file0.readline()                                               # STEP 98
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (e klikdfsgbjoxeiyin) == () ',), <traceback object at 0x108884b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28675, in act569
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
1181 BRANCHES COVERED
907 STATEMENTS COVERED
