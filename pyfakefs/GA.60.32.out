Random testing using config=Config(swarmSwitch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=0.8, seed=None, generalize=False, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, noCoverageExploit=False, quickTests=False, relax=False, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, fastQuickAnalysis=False, progress=False, swarmLength=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=True, timedProgress=30, silentFail=True, stopWhenStatements=None, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.4644.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, logging=None, LOCProbs=False, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.8, depth=100, showActions=False, throughput=False, noCover=False, timeout=60, stutter=None, uncaught=False, markov=None, startExploit=0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x107175cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
Original test has 104 steps

SAVING TEST AS failure.4644.test.0
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "phi"                                                       # STEP 0
os0 = newFakeOS()                                                        # STEP 1
component0 = "h"                                                         # STEP 2
component3 = "a"                                                         # STEP 3
component1 = "epsilon"                                                   # STEP 4
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
component2 = "c"                                                         # STEP 6
result = os0.path.abspath(path2)                                         # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
result = os0.path.lexists(path0)                                         # STEP 9
os0.symlink(path2,path0)                                                # STEP 10
bytes0 = 0                                                              # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
bytes4 = 0                                                              # STEP 14
result = sorted(os0.listdir(path2))                                     # STEP 15
os0.makedirs(path0)                                                     # STEP 16
path1 += "/" + component1                                               # STEP 17
component1 = "a"                                                        # STEP 18
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 19
os0.remove(path1)                                                       # STEP 20
file0 = opener0(path2,'w')                                              # STEP 21
result = os0.readlink(path0)                                            # STEP 22
result = os0.path.exists(path1)                                         # STEP 23
file0 = opener0(path2,'w')                                              # STEP 24
file0 = opener0(path2,'w')                                              # STEP 25
path1 += "/" + component2                                               # STEP 26
file0 = opener0(path0,'w')                                              # STEP 27
os0.remove(path2)                                                       # STEP 28
os0.close(fd0)                                                          # STEP 29
component2 = "h"                                                        # STEP 30
os0.makedirs(path1)                                                     # STEP 31
file0 = opener0(path0,'w')                                              # STEP 32
result = os0.read(fd0,bytes0)                                           # STEP 33
os0.symlink(path1,path0)                                                # STEP 34
stat0 = os0.lstat(path1)                                                # STEP 35
os0.link(path2,path1)                                                   # STEP 36
file0 = opener0(path1)                                                  # STEP 37
os0.symlink(path0,path0)                                                # STEP 38
path1 += "/" + component4                                               # STEP 39
bytes1 = 0                                                              # STEP 40
bytes1 += 1                                                             # STEP 41
os0.makedirs(path0)                                                     # STEP 42
result = os0.path.isabs(path2)                                          # STEP 43
file0 = opener0(path1,'a')                                              # STEP 44
result = os0.path.isfile(path0)                                         # STEP 45
component4 = "g"                                                        # STEP 46
stat3 = os0.stat(path1)                                                 # STEP 47
os0.symlink(path1,path1)                                                # STEP 48
result = os0.path.isfile(path1)                                         # STEP 49
path1 += "/" + component4                                               # STEP 50
result = os0.path.isabs(path2)                                          # STEP 51
path4 = "/Volumes/ramdisk/test"                                         # STEP 52
os0.makedirs(path2)                                                     # STEP 53
file0.seek(bytes0)                                                      # STEP 54
result = os0.path.islink(path1)                                         # STEP 55
os0.link(path1,path4)                                                   # STEP 56
stat4 = os0.stat(path1)                                                 # STEP 57
result = os0.path.exists(path2)                                         # STEP 58
bytes1 = 0                                                              # STEP 59
result = os0.path.abspath(path1)                                        # STEP 60
os0.link(path2,path1)                                                   # STEP 61
stat2 = os0.stat(path1)                                                 # STEP 62
path1 += "/" + component1                                               # STEP 63
result = os0.path.abspath(path4)                                        # STEP 64
component1 = "d"                                                        # STEP 65
result = os0.path.isdir(path0)                                          # STEP 66
stat2 = os0.lstat(path1)                                                # STEP 67
stat1 = os0.lstat(path1)                                                # STEP 68
result = os0.path.isfile(path0)                                         # STEP 69
os0.makedirs(path2)                                                     # STEP 70
component4 = "c"                                                        # STEP 71
result = os0.path.islink(path4)                                         # STEP 72
result = os0.path.dirname(path0)                                        # STEP 73
path0 += "/" + component3                                               # STEP 74
result = os0.path.dirname(path2)                                        # STEP 75
stat1 = os0.lstat(path1)                                                # STEP 76
os0.symlink(path1,path1)                                                # STEP 77
stat4 = os0.stat(path1)                                                 # STEP 78
path1 += "/" + component3                                               # STEP 79
path4 += "/" + component1                                               # STEP 80
stat4 = os0.stat(path1)                                                 # STEP 81
result = file0.read(bytes4)                                             # STEP 82
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 83
result = os0.path.abspath(path0)                                        # STEP 84
path4 += "/" + component2                                               # STEP 85
path1 += "/" + component4                                               # STEP 86
path0 += "/" + component4                                               # STEP 87
component1 = "beta"                                                     # STEP 88
stat1 = os0.lstat(path4)                                                # STEP 89
os0.link(path0,path1)                                                   # STEP 90
result = os0.path.isfile(path0)                                         # STEP 91
path1 += "/" + component1                                               # STEP 92
os0.rename(path1,path4)                                                 # STEP 93
component2 = "lambda"                                                   # STEP 94
result = sorted(os0.listdir(path1))                                     # STEP 95
stat2 = os0.lstat(path1)                                                # STEP 96
path1 += "/" + component1                                               # STEP 97
result = file0.read(bytes0)                                             # STEP 98
os0.makedirs(path4)                                                     # STEP 99
os0.rename(path1,path2)                                                # STEP 100
result = os0.read(fd0,bytes1)                                          # STEP 101
component3 = "g"                                                       # STEP 102
result = file0.readline()                                              # STEP 103
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10320a2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
FAILURE IS NEW, STORING; NOW 1 DISTINCT FAILURES
TEST #93 STEP #52 (0:00:30.000293) Sat Jul 22 01:35:26 2017 [ 892 stmts 1156 branches ] 9173 TOTAL ACTIONS (305.763680207/s)
STOPPING TEST DUE TO TIMEOUT, TERMINATED AT LENGTH 278
STOPPING TESTING DUE TO TIMEOUT
42.2519509476 PERCENT COVERED
60.333165884 TOTAL RUNTIME
154 EXECUTED
15284 TOTAL TEST OPERATIONS
23.9645941257 TIME SPENT EXECUTING TEST OPERATIONS
0.535886287689 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0097382068634 TIME SPENT CHECKING PROPERTIES
23.9743323326 TOTAL TIME SPENT RUNNING SUT
0.45447063446 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
1 FAILED
0 REPEATS OF FAILURES
1 ACTUAL DISTINCT FAILURES

FAILURE 0
component4 = "phi"                                                       # STEP 0
os0 = newFakeOS()                                                        # STEP 1
component0 = "h"                                                         # STEP 2
component3 = "a"                                                         # STEP 3
component1 = "epsilon"                                                   # STEP 4
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
component2 = "c"                                                         # STEP 6
result = os0.path.abspath(path2)                                         # STEP 7
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
result = os0.path.lexists(path0)                                         # STEP 9
os0.symlink(path2,path0)                                                # STEP 10
bytes0 = 0                                                              # STEP 11
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
opener0 = newFakeOpener(os0)                                            # STEP 13
bytes4 = 0                                                              # STEP 14
result = sorted(os0.listdir(path2))                                     # STEP 15
os0.makedirs(path0)                                                     # STEP 16
path1 += "/" + component1                                               # STEP 17
component1 = "a"                                                        # STEP 18
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 19
os0.remove(path1)                                                       # STEP 20
file0 = opener0(path2,'w')                                              # STEP 21
result = os0.readlink(path0)                                            # STEP 22
result = os0.path.exists(path1)                                         # STEP 23
file0 = opener0(path2,'w')                                              # STEP 24
file0 = opener0(path2,'w')                                              # STEP 25
path1 += "/" + component2                                               # STEP 26
file0 = opener0(path0,'w')                                              # STEP 27
os0.remove(path2)                                                       # STEP 28
os0.close(fd0)                                                          # STEP 29
component2 = "h"                                                        # STEP 30
os0.makedirs(path1)                                                     # STEP 31
file0 = opener0(path0,'w')                                              # STEP 32
result = os0.read(fd0,bytes0)                                           # STEP 33
os0.symlink(path1,path0)                                                # STEP 34
stat0 = os0.lstat(path1)                                                # STEP 35
os0.link(path2,path1)                                                   # STEP 36
file0 = opener0(path1)                                                  # STEP 37
os0.symlink(path0,path0)                                                # STEP 38
path1 += "/" + component4                                               # STEP 39
bytes1 = 0                                                              # STEP 40
bytes1 += 1                                                             # STEP 41
os0.makedirs(path0)                                                     # STEP 42
result = os0.path.isabs(path2)                                          # STEP 43
file0 = opener0(path1,'a')                                              # STEP 44
result = os0.path.isfile(path0)                                         # STEP 45
component4 = "g"                                                        # STEP 46
stat3 = os0.stat(path1)                                                 # STEP 47
os0.symlink(path1,path1)                                                # STEP 48
result = os0.path.isfile(path1)                                         # STEP 49
path1 += "/" + component4                                               # STEP 50
result = os0.path.isabs(path2)                                          # STEP 51
path4 = "/Volumes/ramdisk/test"                                         # STEP 52
os0.makedirs(path2)                                                     # STEP 53
file0.seek(bytes0)                                                      # STEP 54
result = os0.path.islink(path1)                                         # STEP 55
os0.link(path1,path4)                                                   # STEP 56
stat4 = os0.stat(path1)                                                 # STEP 57
result = os0.path.exists(path2)                                         # STEP 58
bytes1 = 0                                                              # STEP 59
result = os0.path.abspath(path1)                                        # STEP 60
os0.link(path2,path1)                                                   # STEP 61
stat2 = os0.stat(path1)                                                 # STEP 62
path1 += "/" + component1                                               # STEP 63
result = os0.path.abspath(path4)                                        # STEP 64
component1 = "d"                                                        # STEP 65
result = os0.path.isdir(path0)                                          # STEP 66
stat2 = os0.lstat(path1)                                                # STEP 67
stat1 = os0.lstat(path1)                                                # STEP 68
result = os0.path.isfile(path0)                                         # STEP 69
os0.makedirs(path2)                                                     # STEP 70
component4 = "c"                                                        # STEP 71
result = os0.path.islink(path4)                                         # STEP 72
result = os0.path.dirname(path0)                                        # STEP 73
path0 += "/" + component3                                               # STEP 74
result = os0.path.dirname(path2)                                        # STEP 75
stat1 = os0.lstat(path1)                                                # STEP 76
os0.symlink(path1,path1)                                                # STEP 77
stat4 = os0.stat(path1)                                                 # STEP 78
path1 += "/" + component3                                               # STEP 79
path4 += "/" + component1                                               # STEP 80
stat4 = os0.stat(path1)                                                 # STEP 81
result = file0.read(bytes4)                                             # STEP 82
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 83
result = os0.path.abspath(path0)                                        # STEP 84
path4 += "/" + component2                                               # STEP 85
path1 += "/" + component4                                               # STEP 86
path0 += "/" + component4                                               # STEP 87
component1 = "beta"                                                     # STEP 88
stat1 = os0.lstat(path4)                                                # STEP 89
os0.link(path0,path1)                                                   # STEP 90
result = os0.path.isfile(path0)                                         # STEP 91
path1 += "/" + component1                                               # STEP 92
os0.rename(path1,path4)                                                 # STEP 93
component2 = "lambda"                                                   # STEP 94
result = sorted(os0.listdir(path1))                                     # STEP 95
stat2 = os0.lstat(path1)                                                # STEP 96
path1 += "/" + component1                                               # STEP 97
result = file0.read(bytes0)                                             # STEP 98
os0.makedirs(path4)                                                     # STEP 99
os0.rename(path1,path2)                                                # STEP 100
result = os0.read(fd0,bytes1)                                          # STEP 101
component3 = "g"                                                       # STEP 102
result = file0.readline()                                              # STEP 103
ERROR: (<type 'exceptions.OSError'>, OSError(9, 'File is not open for reading.'), <traceback object at 0x10320a2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 38007, in safely
    act[2]()
  File "/Users/alex/tstl/examples/pyfakefs/sut.py", line 28646, in act569
    result = self.p_file[0].readline()
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4284, in read_error
    self._raise('File is not open for reading.')
  File "/Users/alex/tstl/examples/pyfakefs/pyfakefs/fake_filesystem.py", line 4112, in _raise
    raise OSError(errno.EBADF, message)
1177 BRANCHES COVERED
903 STATEMENTS COVERED
